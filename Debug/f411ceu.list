
f411ceu.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002c28c  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003e70  0802c42c  0802c42c  0003c42c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00004a92  0803029c  0803029c  0004029c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000228  08034d30  08034d30  00044d30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 00017ea8  08034f58  08034f58  00044f58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 000000f4  0804ce00  0804ce00  0005ce00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0804cef4  0804cef4  000600fc  2**0
                  CONTENTS
  8 .ARM          00000008  0804cef4  0804cef4  0005cef4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0804cefc  0804cefc  000600fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000018  0804cefc  0804cefc  0005cefc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   0000000c  0804cf14  0804cf14  0005cf14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         000000fc  20000000  0804cf20  00060000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00002d88  200000fc  0804d01c  000600fc  2**2
                  ALLOC
 14 ._user_heap_stack 00000604  20002e84  0804d01c  00062e84  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000600fc  2**0
                  CONTENTS, READONLY
 16 .comment      000000c2  00000000  00000000  0006012c  2**0
                  CONTENTS, READONLY
 17 .debug_info   00100ed9  00000000  00000000  000601ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00017845  00000000  00000000  001610c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00003f50  00000000  00000000  00178910  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_rnglists 00002ebe  00000000  00000000  0017c860  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_macro  0002764b  00000000  00000000  0017f71e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line   00046112  00000000  00000000  001a6d69  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    000c8b73  00000000  00000000  001ece7b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_frame  00011b08  00000000  00000000  002b59f0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_line_str 0000004d  00000000  00000000  002c74f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200000fc 	.word	0x200000fc
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0802c414 	.word	0x0802c414

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000100 	.word	0x20000100
 80001dc:	0802c414 	.word	0x0802c414

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__aeabi_d2f>:
 8000a1c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a20:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000a24:	bf24      	itt	cs
 8000a26:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000a2a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000a2e:	d90d      	bls.n	8000a4c <__aeabi_d2f+0x30>
 8000a30:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000a34:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000a38:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000a3c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000a40:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000a44:	bf08      	it	eq
 8000a46:	f020 0001 	biceq.w	r0, r0, #1
 8000a4a:	4770      	bx	lr
 8000a4c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000a50:	d121      	bne.n	8000a96 <__aeabi_d2f+0x7a>
 8000a52:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000a56:	bfbc      	itt	lt
 8000a58:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000a5c:	4770      	bxlt	lr
 8000a5e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a62:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000a66:	f1c2 0218 	rsb	r2, r2, #24
 8000a6a:	f1c2 0c20 	rsb	ip, r2, #32
 8000a6e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000a72:	fa20 f002 	lsr.w	r0, r0, r2
 8000a76:	bf18      	it	ne
 8000a78:	f040 0001 	orrne.w	r0, r0, #1
 8000a7c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a80:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000a84:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000a88:	ea40 000c 	orr.w	r0, r0, ip
 8000a8c:	fa23 f302 	lsr.w	r3, r3, r2
 8000a90:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000a94:	e7cc      	b.n	8000a30 <__aeabi_d2f+0x14>
 8000a96:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000a9a:	d107      	bne.n	8000aac <__aeabi_d2f+0x90>
 8000a9c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000aa0:	bf1e      	ittt	ne
 8000aa2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000aa6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000aaa:	4770      	bxne	lr
 8000aac:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000ab0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ab4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ab8:	4770      	bx	lr
 8000aba:	bf00      	nop

08000abc <__aeabi_ldivmod>:
 8000abc:	b97b      	cbnz	r3, 8000ade <__aeabi_ldivmod+0x22>
 8000abe:	b972      	cbnz	r2, 8000ade <__aeabi_ldivmod+0x22>
 8000ac0:	2900      	cmp	r1, #0
 8000ac2:	bfbe      	ittt	lt
 8000ac4:	2000      	movlt	r0, #0
 8000ac6:	f04f 4100 	movlt.w	r1, #2147483648	; 0x80000000
 8000aca:	e006      	blt.n	8000ada <__aeabi_ldivmod+0x1e>
 8000acc:	bf08      	it	eq
 8000ace:	2800      	cmpeq	r0, #0
 8000ad0:	bf1c      	itt	ne
 8000ad2:	f06f 4100 	mvnne.w	r1, #2147483648	; 0x80000000
 8000ad6:	f04f 30ff 	movne.w	r0, #4294967295
 8000ada:	f000 b9bb 	b.w	8000e54 <__aeabi_idiv0>
 8000ade:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ae2:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ae6:	2900      	cmp	r1, #0
 8000ae8:	db09      	blt.n	8000afe <__aeabi_ldivmod+0x42>
 8000aea:	2b00      	cmp	r3, #0
 8000aec:	db1a      	blt.n	8000b24 <__aeabi_ldivmod+0x68>
 8000aee:	f000 f84d 	bl	8000b8c <__udivmoddi4>
 8000af2:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000af6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000afa:	b004      	add	sp, #16
 8000afc:	4770      	bx	lr
 8000afe:	4240      	negs	r0, r0
 8000b00:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000b04:	2b00      	cmp	r3, #0
 8000b06:	db1b      	blt.n	8000b40 <__aeabi_ldivmod+0x84>
 8000b08:	f000 f840 	bl	8000b8c <__udivmoddi4>
 8000b0c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b10:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b14:	b004      	add	sp, #16
 8000b16:	4240      	negs	r0, r0
 8000b18:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000b1c:	4252      	negs	r2, r2
 8000b1e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000b22:	4770      	bx	lr
 8000b24:	4252      	negs	r2, r2
 8000b26:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000b2a:	f000 f82f 	bl	8000b8c <__udivmoddi4>
 8000b2e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b32:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b36:	b004      	add	sp, #16
 8000b38:	4240      	negs	r0, r0
 8000b3a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000b3e:	4770      	bx	lr
 8000b40:	4252      	negs	r2, r2
 8000b42:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000b46:	f000 f821 	bl	8000b8c <__udivmoddi4>
 8000b4a:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b4e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b52:	b004      	add	sp, #16
 8000b54:	4252      	negs	r2, r2
 8000b56:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000b5a:	4770      	bx	lr

08000b5c <__aeabi_uldivmod>:
 8000b5c:	b953      	cbnz	r3, 8000b74 <__aeabi_uldivmod+0x18>
 8000b5e:	b94a      	cbnz	r2, 8000b74 <__aeabi_uldivmod+0x18>
 8000b60:	2900      	cmp	r1, #0
 8000b62:	bf08      	it	eq
 8000b64:	2800      	cmpeq	r0, #0
 8000b66:	bf1c      	itt	ne
 8000b68:	f04f 31ff 	movne.w	r1, #4294967295
 8000b6c:	f04f 30ff 	movne.w	r0, #4294967295
 8000b70:	f000 b970 	b.w	8000e54 <__aeabi_idiv0>
 8000b74:	f1ad 0c08 	sub.w	ip, sp, #8
 8000b78:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000b7c:	f000 f806 	bl	8000b8c <__udivmoddi4>
 8000b80:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b84:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b88:	b004      	add	sp, #16
 8000b8a:	4770      	bx	lr

08000b8c <__udivmoddi4>:
 8000b8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b90:	9e08      	ldr	r6, [sp, #32]
 8000b92:	460d      	mov	r5, r1
 8000b94:	4604      	mov	r4, r0
 8000b96:	460f      	mov	r7, r1
 8000b98:	2b00      	cmp	r3, #0
 8000b9a:	d14a      	bne.n	8000c32 <__udivmoddi4+0xa6>
 8000b9c:	428a      	cmp	r2, r1
 8000b9e:	4694      	mov	ip, r2
 8000ba0:	d965      	bls.n	8000c6e <__udivmoddi4+0xe2>
 8000ba2:	fab2 f382 	clz	r3, r2
 8000ba6:	b143      	cbz	r3, 8000bba <__udivmoddi4+0x2e>
 8000ba8:	fa02 fc03 	lsl.w	ip, r2, r3
 8000bac:	f1c3 0220 	rsb	r2, r3, #32
 8000bb0:	409f      	lsls	r7, r3
 8000bb2:	fa20 f202 	lsr.w	r2, r0, r2
 8000bb6:	4317      	orrs	r7, r2
 8000bb8:	409c      	lsls	r4, r3
 8000bba:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000bbe:	fa1f f58c 	uxth.w	r5, ip
 8000bc2:	fbb7 f1fe 	udiv	r1, r7, lr
 8000bc6:	0c22      	lsrs	r2, r4, #16
 8000bc8:	fb0e 7711 	mls	r7, lr, r1, r7
 8000bcc:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000bd0:	fb01 f005 	mul.w	r0, r1, r5
 8000bd4:	4290      	cmp	r0, r2
 8000bd6:	d90a      	bls.n	8000bee <__udivmoddi4+0x62>
 8000bd8:	eb1c 0202 	adds.w	r2, ip, r2
 8000bdc:	f101 37ff 	add.w	r7, r1, #4294967295
 8000be0:	f080 811c 	bcs.w	8000e1c <__udivmoddi4+0x290>
 8000be4:	4290      	cmp	r0, r2
 8000be6:	f240 8119 	bls.w	8000e1c <__udivmoddi4+0x290>
 8000bea:	3902      	subs	r1, #2
 8000bec:	4462      	add	r2, ip
 8000bee:	1a12      	subs	r2, r2, r0
 8000bf0:	b2a4      	uxth	r4, r4
 8000bf2:	fbb2 f0fe 	udiv	r0, r2, lr
 8000bf6:	fb0e 2210 	mls	r2, lr, r0, r2
 8000bfa:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000bfe:	fb00 f505 	mul.w	r5, r0, r5
 8000c02:	42a5      	cmp	r5, r4
 8000c04:	d90a      	bls.n	8000c1c <__udivmoddi4+0x90>
 8000c06:	eb1c 0404 	adds.w	r4, ip, r4
 8000c0a:	f100 32ff 	add.w	r2, r0, #4294967295
 8000c0e:	f080 8107 	bcs.w	8000e20 <__udivmoddi4+0x294>
 8000c12:	42a5      	cmp	r5, r4
 8000c14:	f240 8104 	bls.w	8000e20 <__udivmoddi4+0x294>
 8000c18:	4464      	add	r4, ip
 8000c1a:	3802      	subs	r0, #2
 8000c1c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000c20:	1b64      	subs	r4, r4, r5
 8000c22:	2100      	movs	r1, #0
 8000c24:	b11e      	cbz	r6, 8000c2e <__udivmoddi4+0xa2>
 8000c26:	40dc      	lsrs	r4, r3
 8000c28:	2300      	movs	r3, #0
 8000c2a:	e9c6 4300 	strd	r4, r3, [r6]
 8000c2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c32:	428b      	cmp	r3, r1
 8000c34:	d908      	bls.n	8000c48 <__udivmoddi4+0xbc>
 8000c36:	2e00      	cmp	r6, #0
 8000c38:	f000 80ed 	beq.w	8000e16 <__udivmoddi4+0x28a>
 8000c3c:	2100      	movs	r1, #0
 8000c3e:	e9c6 0500 	strd	r0, r5, [r6]
 8000c42:	4608      	mov	r0, r1
 8000c44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c48:	fab3 f183 	clz	r1, r3
 8000c4c:	2900      	cmp	r1, #0
 8000c4e:	d149      	bne.n	8000ce4 <__udivmoddi4+0x158>
 8000c50:	42ab      	cmp	r3, r5
 8000c52:	d302      	bcc.n	8000c5a <__udivmoddi4+0xce>
 8000c54:	4282      	cmp	r2, r0
 8000c56:	f200 80f8 	bhi.w	8000e4a <__udivmoddi4+0x2be>
 8000c5a:	1a84      	subs	r4, r0, r2
 8000c5c:	eb65 0203 	sbc.w	r2, r5, r3
 8000c60:	2001      	movs	r0, #1
 8000c62:	4617      	mov	r7, r2
 8000c64:	2e00      	cmp	r6, #0
 8000c66:	d0e2      	beq.n	8000c2e <__udivmoddi4+0xa2>
 8000c68:	e9c6 4700 	strd	r4, r7, [r6]
 8000c6c:	e7df      	b.n	8000c2e <__udivmoddi4+0xa2>
 8000c6e:	b902      	cbnz	r2, 8000c72 <__udivmoddi4+0xe6>
 8000c70:	deff      	udf	#255	; 0xff
 8000c72:	fab2 f382 	clz	r3, r2
 8000c76:	2b00      	cmp	r3, #0
 8000c78:	f040 8090 	bne.w	8000d9c <__udivmoddi4+0x210>
 8000c7c:	1a8a      	subs	r2, r1, r2
 8000c7e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c82:	fa1f fe8c 	uxth.w	lr, ip
 8000c86:	2101      	movs	r1, #1
 8000c88:	fbb2 f5f7 	udiv	r5, r2, r7
 8000c8c:	fb07 2015 	mls	r0, r7, r5, r2
 8000c90:	0c22      	lsrs	r2, r4, #16
 8000c92:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000c96:	fb0e f005 	mul.w	r0, lr, r5
 8000c9a:	4290      	cmp	r0, r2
 8000c9c:	d908      	bls.n	8000cb0 <__udivmoddi4+0x124>
 8000c9e:	eb1c 0202 	adds.w	r2, ip, r2
 8000ca2:	f105 38ff 	add.w	r8, r5, #4294967295
 8000ca6:	d202      	bcs.n	8000cae <__udivmoddi4+0x122>
 8000ca8:	4290      	cmp	r0, r2
 8000caa:	f200 80cb 	bhi.w	8000e44 <__udivmoddi4+0x2b8>
 8000cae:	4645      	mov	r5, r8
 8000cb0:	1a12      	subs	r2, r2, r0
 8000cb2:	b2a4      	uxth	r4, r4
 8000cb4:	fbb2 f0f7 	udiv	r0, r2, r7
 8000cb8:	fb07 2210 	mls	r2, r7, r0, r2
 8000cbc:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000cc0:	fb0e fe00 	mul.w	lr, lr, r0
 8000cc4:	45a6      	cmp	lr, r4
 8000cc6:	d908      	bls.n	8000cda <__udivmoddi4+0x14e>
 8000cc8:	eb1c 0404 	adds.w	r4, ip, r4
 8000ccc:	f100 32ff 	add.w	r2, r0, #4294967295
 8000cd0:	d202      	bcs.n	8000cd8 <__udivmoddi4+0x14c>
 8000cd2:	45a6      	cmp	lr, r4
 8000cd4:	f200 80bb 	bhi.w	8000e4e <__udivmoddi4+0x2c2>
 8000cd8:	4610      	mov	r0, r2
 8000cda:	eba4 040e 	sub.w	r4, r4, lr
 8000cde:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000ce2:	e79f      	b.n	8000c24 <__udivmoddi4+0x98>
 8000ce4:	f1c1 0720 	rsb	r7, r1, #32
 8000ce8:	408b      	lsls	r3, r1
 8000cea:	fa22 fc07 	lsr.w	ip, r2, r7
 8000cee:	ea4c 0c03 	orr.w	ip, ip, r3
 8000cf2:	fa05 f401 	lsl.w	r4, r5, r1
 8000cf6:	fa20 f307 	lsr.w	r3, r0, r7
 8000cfa:	40fd      	lsrs	r5, r7
 8000cfc:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d00:	4323      	orrs	r3, r4
 8000d02:	fbb5 f8f9 	udiv	r8, r5, r9
 8000d06:	fa1f fe8c 	uxth.w	lr, ip
 8000d0a:	fb09 5518 	mls	r5, r9, r8, r5
 8000d0e:	0c1c      	lsrs	r4, r3, #16
 8000d10:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000d14:	fb08 f50e 	mul.w	r5, r8, lr
 8000d18:	42a5      	cmp	r5, r4
 8000d1a:	fa02 f201 	lsl.w	r2, r2, r1
 8000d1e:	fa00 f001 	lsl.w	r0, r0, r1
 8000d22:	d90b      	bls.n	8000d3c <__udivmoddi4+0x1b0>
 8000d24:	eb1c 0404 	adds.w	r4, ip, r4
 8000d28:	f108 3aff 	add.w	sl, r8, #4294967295
 8000d2c:	f080 8088 	bcs.w	8000e40 <__udivmoddi4+0x2b4>
 8000d30:	42a5      	cmp	r5, r4
 8000d32:	f240 8085 	bls.w	8000e40 <__udivmoddi4+0x2b4>
 8000d36:	f1a8 0802 	sub.w	r8, r8, #2
 8000d3a:	4464      	add	r4, ip
 8000d3c:	1b64      	subs	r4, r4, r5
 8000d3e:	b29d      	uxth	r5, r3
 8000d40:	fbb4 f3f9 	udiv	r3, r4, r9
 8000d44:	fb09 4413 	mls	r4, r9, r3, r4
 8000d48:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000d4c:	fb03 fe0e 	mul.w	lr, r3, lr
 8000d50:	45a6      	cmp	lr, r4
 8000d52:	d908      	bls.n	8000d66 <__udivmoddi4+0x1da>
 8000d54:	eb1c 0404 	adds.w	r4, ip, r4
 8000d58:	f103 35ff 	add.w	r5, r3, #4294967295
 8000d5c:	d26c      	bcs.n	8000e38 <__udivmoddi4+0x2ac>
 8000d5e:	45a6      	cmp	lr, r4
 8000d60:	d96a      	bls.n	8000e38 <__udivmoddi4+0x2ac>
 8000d62:	3b02      	subs	r3, #2
 8000d64:	4464      	add	r4, ip
 8000d66:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000d6a:	fba3 9502 	umull	r9, r5, r3, r2
 8000d6e:	eba4 040e 	sub.w	r4, r4, lr
 8000d72:	42ac      	cmp	r4, r5
 8000d74:	46c8      	mov	r8, r9
 8000d76:	46ae      	mov	lr, r5
 8000d78:	d356      	bcc.n	8000e28 <__udivmoddi4+0x29c>
 8000d7a:	d053      	beq.n	8000e24 <__udivmoddi4+0x298>
 8000d7c:	b156      	cbz	r6, 8000d94 <__udivmoddi4+0x208>
 8000d7e:	ebb0 0208 	subs.w	r2, r0, r8
 8000d82:	eb64 040e 	sbc.w	r4, r4, lr
 8000d86:	fa04 f707 	lsl.w	r7, r4, r7
 8000d8a:	40ca      	lsrs	r2, r1
 8000d8c:	40cc      	lsrs	r4, r1
 8000d8e:	4317      	orrs	r7, r2
 8000d90:	e9c6 7400 	strd	r7, r4, [r6]
 8000d94:	4618      	mov	r0, r3
 8000d96:	2100      	movs	r1, #0
 8000d98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d9c:	f1c3 0120 	rsb	r1, r3, #32
 8000da0:	fa02 fc03 	lsl.w	ip, r2, r3
 8000da4:	fa20 f201 	lsr.w	r2, r0, r1
 8000da8:	fa25 f101 	lsr.w	r1, r5, r1
 8000dac:	409d      	lsls	r5, r3
 8000dae:	432a      	orrs	r2, r5
 8000db0:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000db4:	fa1f fe8c 	uxth.w	lr, ip
 8000db8:	fbb1 f0f7 	udiv	r0, r1, r7
 8000dbc:	fb07 1510 	mls	r5, r7, r0, r1
 8000dc0:	0c11      	lsrs	r1, r2, #16
 8000dc2:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000dc6:	fb00 f50e 	mul.w	r5, r0, lr
 8000dca:	428d      	cmp	r5, r1
 8000dcc:	fa04 f403 	lsl.w	r4, r4, r3
 8000dd0:	d908      	bls.n	8000de4 <__udivmoddi4+0x258>
 8000dd2:	eb1c 0101 	adds.w	r1, ip, r1
 8000dd6:	f100 38ff 	add.w	r8, r0, #4294967295
 8000dda:	d22f      	bcs.n	8000e3c <__udivmoddi4+0x2b0>
 8000ddc:	428d      	cmp	r5, r1
 8000dde:	d92d      	bls.n	8000e3c <__udivmoddi4+0x2b0>
 8000de0:	3802      	subs	r0, #2
 8000de2:	4461      	add	r1, ip
 8000de4:	1b49      	subs	r1, r1, r5
 8000de6:	b292      	uxth	r2, r2
 8000de8:	fbb1 f5f7 	udiv	r5, r1, r7
 8000dec:	fb07 1115 	mls	r1, r7, r5, r1
 8000df0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000df4:	fb05 f10e 	mul.w	r1, r5, lr
 8000df8:	4291      	cmp	r1, r2
 8000dfa:	d908      	bls.n	8000e0e <__udivmoddi4+0x282>
 8000dfc:	eb1c 0202 	adds.w	r2, ip, r2
 8000e00:	f105 38ff 	add.w	r8, r5, #4294967295
 8000e04:	d216      	bcs.n	8000e34 <__udivmoddi4+0x2a8>
 8000e06:	4291      	cmp	r1, r2
 8000e08:	d914      	bls.n	8000e34 <__udivmoddi4+0x2a8>
 8000e0a:	3d02      	subs	r5, #2
 8000e0c:	4462      	add	r2, ip
 8000e0e:	1a52      	subs	r2, r2, r1
 8000e10:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000e14:	e738      	b.n	8000c88 <__udivmoddi4+0xfc>
 8000e16:	4631      	mov	r1, r6
 8000e18:	4630      	mov	r0, r6
 8000e1a:	e708      	b.n	8000c2e <__udivmoddi4+0xa2>
 8000e1c:	4639      	mov	r1, r7
 8000e1e:	e6e6      	b.n	8000bee <__udivmoddi4+0x62>
 8000e20:	4610      	mov	r0, r2
 8000e22:	e6fb      	b.n	8000c1c <__udivmoddi4+0x90>
 8000e24:	4548      	cmp	r0, r9
 8000e26:	d2a9      	bcs.n	8000d7c <__udivmoddi4+0x1f0>
 8000e28:	ebb9 0802 	subs.w	r8, r9, r2
 8000e2c:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000e30:	3b01      	subs	r3, #1
 8000e32:	e7a3      	b.n	8000d7c <__udivmoddi4+0x1f0>
 8000e34:	4645      	mov	r5, r8
 8000e36:	e7ea      	b.n	8000e0e <__udivmoddi4+0x282>
 8000e38:	462b      	mov	r3, r5
 8000e3a:	e794      	b.n	8000d66 <__udivmoddi4+0x1da>
 8000e3c:	4640      	mov	r0, r8
 8000e3e:	e7d1      	b.n	8000de4 <__udivmoddi4+0x258>
 8000e40:	46d0      	mov	r8, sl
 8000e42:	e77b      	b.n	8000d3c <__udivmoddi4+0x1b0>
 8000e44:	3d02      	subs	r5, #2
 8000e46:	4462      	add	r2, ip
 8000e48:	e732      	b.n	8000cb0 <__udivmoddi4+0x124>
 8000e4a:	4608      	mov	r0, r1
 8000e4c:	e70a      	b.n	8000c64 <__udivmoddi4+0xd8>
 8000e4e:	4464      	add	r4, ip
 8000e50:	3802      	subs	r0, #2
 8000e52:	e742      	b.n	8000cda <__udivmoddi4+0x14e>

08000e54 <__aeabi_idiv0>:
 8000e54:	4770      	bx	lr
 8000e56:	bf00      	nop

08000e58 <TrimRead>:



// Read the Trimming parameters saved in the NVM ROM of the device
void TrimRead(void)
{
 8000e58:	b580      	push	{r7, lr}
 8000e5a:	b08c      	sub	sp, #48	; 0x30
 8000e5c:	af04      	add	r7, sp, #16
	uint8_t trimdata[32];
	// Read NVM from 0x88 to 0xA1
	HAL_I2C_Mem_Read(BMP280_I2C, BMP280_ADDRESS, 0x88, 1, trimdata, 25, HAL_MAX_DELAY);
 8000e5e:	f04f 33ff 	mov.w	r3, #4294967295
 8000e62:	9302      	str	r3, [sp, #8]
 8000e64:	2319      	movs	r3, #25
 8000e66:	9301      	str	r3, [sp, #4]
 8000e68:	463b      	mov	r3, r7
 8000e6a:	9300      	str	r3, [sp, #0]
 8000e6c:	2301      	movs	r3, #1
 8000e6e:	2288      	movs	r2, #136	; 0x88
 8000e70:	21ec      	movs	r1, #236	; 0xec
 8000e72:	4857      	ldr	r0, [pc, #348]	; (8000fd0 <TrimRead+0x178>)
 8000e74:	f004 fd40 	bl	80058f8 <HAL_I2C_Mem_Read>

	// Read NVM from 0xE1 to 0xE7
	HAL_I2C_Mem_Read(BMP280_I2C, BMP280_ADDRESS, 0xE1, 1, (uint8_t *)trimdata+25, 7, HAL_MAX_DELAY);
 8000e78:	463b      	mov	r3, r7
 8000e7a:	3319      	adds	r3, #25
 8000e7c:	f04f 32ff 	mov.w	r2, #4294967295
 8000e80:	9202      	str	r2, [sp, #8]
 8000e82:	2207      	movs	r2, #7
 8000e84:	9201      	str	r2, [sp, #4]
 8000e86:	9300      	str	r3, [sp, #0]
 8000e88:	2301      	movs	r3, #1
 8000e8a:	22e1      	movs	r2, #225	; 0xe1
 8000e8c:	21ec      	movs	r1, #236	; 0xec
 8000e8e:	4850      	ldr	r0, [pc, #320]	; (8000fd0 <TrimRead+0x178>)
 8000e90:	f004 fd32 	bl	80058f8 <HAL_I2C_Mem_Read>

	// Arrange the data as per the datasheet (page no. 24)
	dig_T1 = (trimdata[1]<<8) | trimdata[0];
 8000e94:	787b      	ldrb	r3, [r7, #1]
 8000e96:	021b      	lsls	r3, r3, #8
 8000e98:	b21a      	sxth	r2, r3
 8000e9a:	783b      	ldrb	r3, [r7, #0]
 8000e9c:	b21b      	sxth	r3, r3
 8000e9e:	4313      	orrs	r3, r2
 8000ea0:	b21b      	sxth	r3, r3
 8000ea2:	b29a      	uxth	r2, r3
 8000ea4:	4b4b      	ldr	r3, [pc, #300]	; (8000fd4 <TrimRead+0x17c>)
 8000ea6:	801a      	strh	r2, [r3, #0]
	dig_T2 = (trimdata[3]<<8) | trimdata[2];
 8000ea8:	78fb      	ldrb	r3, [r7, #3]
 8000eaa:	021b      	lsls	r3, r3, #8
 8000eac:	b21a      	sxth	r2, r3
 8000eae:	78bb      	ldrb	r3, [r7, #2]
 8000eb0:	b21b      	sxth	r3, r3
 8000eb2:	4313      	orrs	r3, r2
 8000eb4:	b21a      	sxth	r2, r3
 8000eb6:	4b48      	ldr	r3, [pc, #288]	; (8000fd8 <TrimRead+0x180>)
 8000eb8:	801a      	strh	r2, [r3, #0]
	dig_T3 = (trimdata[5]<<8) | trimdata[4];
 8000eba:	797b      	ldrb	r3, [r7, #5]
 8000ebc:	021b      	lsls	r3, r3, #8
 8000ebe:	b21a      	sxth	r2, r3
 8000ec0:	793b      	ldrb	r3, [r7, #4]
 8000ec2:	b21b      	sxth	r3, r3
 8000ec4:	4313      	orrs	r3, r2
 8000ec6:	b21a      	sxth	r2, r3
 8000ec8:	4b44      	ldr	r3, [pc, #272]	; (8000fdc <TrimRead+0x184>)
 8000eca:	801a      	strh	r2, [r3, #0]
	dig_P1 = (trimdata[7]<<8) | trimdata[5];
 8000ecc:	79fb      	ldrb	r3, [r7, #7]
 8000ece:	021b      	lsls	r3, r3, #8
 8000ed0:	b21a      	sxth	r2, r3
 8000ed2:	797b      	ldrb	r3, [r7, #5]
 8000ed4:	b21b      	sxth	r3, r3
 8000ed6:	4313      	orrs	r3, r2
 8000ed8:	b21b      	sxth	r3, r3
 8000eda:	b29a      	uxth	r2, r3
 8000edc:	4b40      	ldr	r3, [pc, #256]	; (8000fe0 <TrimRead+0x188>)
 8000ede:	801a      	strh	r2, [r3, #0]
	dig_P2 = (trimdata[9]<<8) | trimdata[6];
 8000ee0:	7a7b      	ldrb	r3, [r7, #9]
 8000ee2:	021b      	lsls	r3, r3, #8
 8000ee4:	b21a      	sxth	r2, r3
 8000ee6:	79bb      	ldrb	r3, [r7, #6]
 8000ee8:	b21b      	sxth	r3, r3
 8000eea:	4313      	orrs	r3, r2
 8000eec:	b21a      	sxth	r2, r3
 8000eee:	4b3d      	ldr	r3, [pc, #244]	; (8000fe4 <TrimRead+0x18c>)
 8000ef0:	801a      	strh	r2, [r3, #0]
	dig_P3 = (trimdata[11]<<8) | trimdata[10];
 8000ef2:	7afb      	ldrb	r3, [r7, #11]
 8000ef4:	021b      	lsls	r3, r3, #8
 8000ef6:	b21a      	sxth	r2, r3
 8000ef8:	7abb      	ldrb	r3, [r7, #10]
 8000efa:	b21b      	sxth	r3, r3
 8000efc:	4313      	orrs	r3, r2
 8000efe:	b21a      	sxth	r2, r3
 8000f00:	4b39      	ldr	r3, [pc, #228]	; (8000fe8 <TrimRead+0x190>)
 8000f02:	801a      	strh	r2, [r3, #0]
	dig_P4 = (trimdata[13]<<8) | trimdata[12];
 8000f04:	7b7b      	ldrb	r3, [r7, #13]
 8000f06:	021b      	lsls	r3, r3, #8
 8000f08:	b21a      	sxth	r2, r3
 8000f0a:	7b3b      	ldrb	r3, [r7, #12]
 8000f0c:	b21b      	sxth	r3, r3
 8000f0e:	4313      	orrs	r3, r2
 8000f10:	b21a      	sxth	r2, r3
 8000f12:	4b36      	ldr	r3, [pc, #216]	; (8000fec <TrimRead+0x194>)
 8000f14:	801a      	strh	r2, [r3, #0]
	dig_P5 = (trimdata[15]<<8) | trimdata[14];
 8000f16:	7bfb      	ldrb	r3, [r7, #15]
 8000f18:	021b      	lsls	r3, r3, #8
 8000f1a:	b21a      	sxth	r2, r3
 8000f1c:	7bbb      	ldrb	r3, [r7, #14]
 8000f1e:	b21b      	sxth	r3, r3
 8000f20:	4313      	orrs	r3, r2
 8000f22:	b21a      	sxth	r2, r3
 8000f24:	4b32      	ldr	r3, [pc, #200]	; (8000ff0 <TrimRead+0x198>)
 8000f26:	801a      	strh	r2, [r3, #0]
	dig_P6 = (trimdata[17]<<8) | trimdata[16];
 8000f28:	7c7b      	ldrb	r3, [r7, #17]
 8000f2a:	021b      	lsls	r3, r3, #8
 8000f2c:	b21a      	sxth	r2, r3
 8000f2e:	7c3b      	ldrb	r3, [r7, #16]
 8000f30:	b21b      	sxth	r3, r3
 8000f32:	4313      	orrs	r3, r2
 8000f34:	b21a      	sxth	r2, r3
 8000f36:	4b2f      	ldr	r3, [pc, #188]	; (8000ff4 <TrimRead+0x19c>)
 8000f38:	801a      	strh	r2, [r3, #0]
	dig_P7 = (trimdata[19]<<8) | trimdata[18];
 8000f3a:	7cfb      	ldrb	r3, [r7, #19]
 8000f3c:	021b      	lsls	r3, r3, #8
 8000f3e:	b21a      	sxth	r2, r3
 8000f40:	7cbb      	ldrb	r3, [r7, #18]
 8000f42:	b21b      	sxth	r3, r3
 8000f44:	4313      	orrs	r3, r2
 8000f46:	b21a      	sxth	r2, r3
 8000f48:	4b2b      	ldr	r3, [pc, #172]	; (8000ff8 <TrimRead+0x1a0>)
 8000f4a:	801a      	strh	r2, [r3, #0]
	dig_P8 = (trimdata[21]<<8) | trimdata[20];
 8000f4c:	7d7b      	ldrb	r3, [r7, #21]
 8000f4e:	021b      	lsls	r3, r3, #8
 8000f50:	b21a      	sxth	r2, r3
 8000f52:	7d3b      	ldrb	r3, [r7, #20]
 8000f54:	b21b      	sxth	r3, r3
 8000f56:	4313      	orrs	r3, r2
 8000f58:	b21a      	sxth	r2, r3
 8000f5a:	4b28      	ldr	r3, [pc, #160]	; (8000ffc <TrimRead+0x1a4>)
 8000f5c:	801a      	strh	r2, [r3, #0]
	dig_P9 = (trimdata[23]<<8) | trimdata[22];
 8000f5e:	7dfb      	ldrb	r3, [r7, #23]
 8000f60:	021b      	lsls	r3, r3, #8
 8000f62:	b21a      	sxth	r2, r3
 8000f64:	7dbb      	ldrb	r3, [r7, #22]
 8000f66:	b21b      	sxth	r3, r3
 8000f68:	4313      	orrs	r3, r2
 8000f6a:	b21a      	sxth	r2, r3
 8000f6c:	4b24      	ldr	r3, [pc, #144]	; (8001000 <TrimRead+0x1a8>)
 8000f6e:	801a      	strh	r2, [r3, #0]
	dig_H1 = trimdata[24];
 8000f70:	7e3b      	ldrb	r3, [r7, #24]
 8000f72:	b29a      	uxth	r2, r3
 8000f74:	4b23      	ldr	r3, [pc, #140]	; (8001004 <TrimRead+0x1ac>)
 8000f76:	801a      	strh	r2, [r3, #0]
	dig_H2 = (trimdata[26]<<8) | trimdata[25];
 8000f78:	7ebb      	ldrb	r3, [r7, #26]
 8000f7a:	021b      	lsls	r3, r3, #8
 8000f7c:	b21a      	sxth	r2, r3
 8000f7e:	7e7b      	ldrb	r3, [r7, #25]
 8000f80:	b21b      	sxth	r3, r3
 8000f82:	4313      	orrs	r3, r2
 8000f84:	b21a      	sxth	r2, r3
 8000f86:	4b20      	ldr	r3, [pc, #128]	; (8001008 <TrimRead+0x1b0>)
 8000f88:	801a      	strh	r2, [r3, #0]
	dig_H3 = (trimdata[27]);
 8000f8a:	7efb      	ldrb	r3, [r7, #27]
 8000f8c:	b29a      	uxth	r2, r3
 8000f8e:	4b1f      	ldr	r3, [pc, #124]	; (800100c <TrimRead+0x1b4>)
 8000f90:	801a      	strh	r2, [r3, #0]
	dig_H4 = (trimdata[28]<<4) | (trimdata[29] & 0x0f);
 8000f92:	7f3b      	ldrb	r3, [r7, #28]
 8000f94:	011b      	lsls	r3, r3, #4
 8000f96:	b21a      	sxth	r2, r3
 8000f98:	7f7b      	ldrb	r3, [r7, #29]
 8000f9a:	b21b      	sxth	r3, r3
 8000f9c:	f003 030f 	and.w	r3, r3, #15
 8000fa0:	b21b      	sxth	r3, r3
 8000fa2:	4313      	orrs	r3, r2
 8000fa4:	b21a      	sxth	r2, r3
 8000fa6:	4b1a      	ldr	r3, [pc, #104]	; (8001010 <TrimRead+0x1b8>)
 8000fa8:	801a      	strh	r2, [r3, #0]
	dig_H5 = (trimdata[30]<<4) | (trimdata[29]>>4);
 8000faa:	7fbb      	ldrb	r3, [r7, #30]
 8000fac:	011b      	lsls	r3, r3, #4
 8000fae:	b21a      	sxth	r2, r3
 8000fb0:	7f7b      	ldrb	r3, [r7, #29]
 8000fb2:	091b      	lsrs	r3, r3, #4
 8000fb4:	b2db      	uxtb	r3, r3
 8000fb6:	b21b      	sxth	r3, r3
 8000fb8:	4313      	orrs	r3, r2
 8000fba:	b21a      	sxth	r2, r3
 8000fbc:	4b15      	ldr	r3, [pc, #84]	; (8001014 <TrimRead+0x1bc>)
 8000fbe:	801a      	strh	r2, [r3, #0]
	dig_H6 = (trimdata[31]);
 8000fc0:	7ffb      	ldrb	r3, [r7, #31]
 8000fc2:	b21a      	sxth	r2, r3
 8000fc4:	4b14      	ldr	r3, [pc, #80]	; (8001018 <TrimRead+0x1c0>)
 8000fc6:	801a      	strh	r2, [r3, #0]
}
 8000fc8:	bf00      	nop
 8000fca:	3720      	adds	r7, #32
 8000fcc:	46bd      	mov	sp, r7
 8000fce:	bd80      	pop	{r7, pc}
 8000fd0:	20000158 	.word	0x20000158
 8000fd4:	20000128 	.word	0x20000128
 8000fd8:	20000130 	.word	0x20000130
 8000fdc:	20000132 	.word	0x20000132
 8000fe0:	2000012a 	.word	0x2000012a
 8000fe4:	20000134 	.word	0x20000134
 8000fe8:	20000136 	.word	0x20000136
 8000fec:	20000138 	.word	0x20000138
 8000ff0:	2000013a 	.word	0x2000013a
 8000ff4:	2000013c 	.word	0x2000013c
 8000ff8:	2000013e 	.word	0x2000013e
 8000ffc:	20000140 	.word	0x20000140
 8001000:	20000142 	.word	0x20000142
 8001004:	2000012c 	.word	0x2000012c
 8001008:	20000144 	.word	0x20000144
 800100c:	2000012e 	.word	0x2000012e
 8001010:	20000146 	.word	0x20000146
 8001014:	20000148 	.word	0x20000148
 8001018:	2000014a 	.word	0x2000014a

0800101c <BMP280_Config>:
 *         IIR is used to avoid the short term fluctuations
 *         Check datasheet page no 18 and page no 30
 */

int BMP280_Config (uint8_t osrs_t, uint8_t osrs_p, uint8_t osrs_h, uint8_t mode, uint8_t t_sb, uint8_t filter)
{
 800101c:	b590      	push	{r4, r7, lr}
 800101e:	b089      	sub	sp, #36	; 0x24
 8001020:	af04      	add	r7, sp, #16
 8001022:	4604      	mov	r4, r0
 8001024:	4608      	mov	r0, r1
 8001026:	4611      	mov	r1, r2
 8001028:	461a      	mov	r2, r3
 800102a:	4623      	mov	r3, r4
 800102c:	71fb      	strb	r3, [r7, #7]
 800102e:	4603      	mov	r3, r0
 8001030:	71bb      	strb	r3, [r7, #6]
 8001032:	460b      	mov	r3, r1
 8001034:	717b      	strb	r3, [r7, #5]
 8001036:	4613      	mov	r3, r2
 8001038:	713b      	strb	r3, [r7, #4]
	// Read the Trimming parameters
	TrimRead();
 800103a:	f7ff ff0d 	bl	8000e58 <TrimRead>


	uint8_t datatowrite = 0;
 800103e:	2300      	movs	r3, #0
 8001040:	73fb      	strb	r3, [r7, #15]
	uint8_t datacheck = 0;
 8001042:	2300      	movs	r3, #0
 8001044:	73bb      	strb	r3, [r7, #14]

	// Reset the device
	datatowrite = 0xB6;  // reset sequence
 8001046:	23b6      	movs	r3, #182	; 0xb6
 8001048:	73fb      	strb	r3, [r7, #15]
	if (HAL_I2C_Mem_Write(BMP280_I2C, BMP280_ADDRESS, RESET_REG, 1, &datatowrite, 1, 1000) != HAL_OK)
 800104a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800104e:	9302      	str	r3, [sp, #8]
 8001050:	2301      	movs	r3, #1
 8001052:	9301      	str	r3, [sp, #4]
 8001054:	f107 030f 	add.w	r3, r7, #15
 8001058:	9300      	str	r3, [sp, #0]
 800105a:	2301      	movs	r3, #1
 800105c:	22e0      	movs	r2, #224	; 0xe0
 800105e:	21ec      	movs	r1, #236	; 0xec
 8001060:	4858      	ldr	r0, [pc, #352]	; (80011c4 <BMP280_Config+0x1a8>)
 8001062:	f004 fb4f 	bl	8005704 <HAL_I2C_Mem_Write>
 8001066:	4603      	mov	r3, r0
 8001068:	2b00      	cmp	r3, #0
 800106a:	d002      	beq.n	8001072 <BMP280_Config+0x56>
	{
		return -1;
 800106c:	f04f 33ff 	mov.w	r3, #4294967295
 8001070:	e0a3      	b.n	80011ba <BMP280_Config+0x19e>
	}

	HAL_Delay (100);
 8001072:	2064      	movs	r0, #100	; 0x64
 8001074:	f002 ffa8 	bl	8003fc8 <HAL_Delay>


	// write the humidity oversampling to 0xF2
	datatowrite = osrs_h;
 8001078:	797b      	ldrb	r3, [r7, #5]
 800107a:	73fb      	strb	r3, [r7, #15]
	if (HAL_I2C_Mem_Write(BMP280_I2C, BMP280_ADDRESS, CTRL_HUM_REG, 1, &datatowrite, 1, 1000) != HAL_OK)
 800107c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001080:	9302      	str	r3, [sp, #8]
 8001082:	2301      	movs	r3, #1
 8001084:	9301      	str	r3, [sp, #4]
 8001086:	f107 030f 	add.w	r3, r7, #15
 800108a:	9300      	str	r3, [sp, #0]
 800108c:	2301      	movs	r3, #1
 800108e:	22f2      	movs	r2, #242	; 0xf2
 8001090:	21ec      	movs	r1, #236	; 0xec
 8001092:	484c      	ldr	r0, [pc, #304]	; (80011c4 <BMP280_Config+0x1a8>)
 8001094:	f004 fb36 	bl	8005704 <HAL_I2C_Mem_Write>
 8001098:	4603      	mov	r3, r0
 800109a:	2b00      	cmp	r3, #0
 800109c:	d002      	beq.n	80010a4 <BMP280_Config+0x88>
	{
		return -2;
 800109e:	f06f 0301 	mvn.w	r3, #1
 80010a2:	e08a      	b.n	80011ba <BMP280_Config+0x19e>
	}
	HAL_Delay (100);
 80010a4:	2064      	movs	r0, #100	; 0x64
 80010a6:	f002 ff8f 	bl	8003fc8 <HAL_Delay>
	HAL_I2C_Mem_Read(BMP280_I2C, BMP280_ADDRESS, CTRL_HUM_REG, 1, &datacheck, 1, 1000);
 80010aa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80010ae:	9302      	str	r3, [sp, #8]
 80010b0:	2301      	movs	r3, #1
 80010b2:	9301      	str	r3, [sp, #4]
 80010b4:	f107 030e 	add.w	r3, r7, #14
 80010b8:	9300      	str	r3, [sp, #0]
 80010ba:	2301      	movs	r3, #1
 80010bc:	22f2      	movs	r2, #242	; 0xf2
 80010be:	21ec      	movs	r1, #236	; 0xec
 80010c0:	4840      	ldr	r0, [pc, #256]	; (80011c4 <BMP280_Config+0x1a8>)
 80010c2:	f004 fc19 	bl	80058f8 <HAL_I2C_Mem_Read>
	if (datacheck != datatowrite)
 80010c6:	7bba      	ldrb	r2, [r7, #14]
 80010c8:	7bfb      	ldrb	r3, [r7, #15]
 80010ca:	429a      	cmp	r2, r3
 80010cc:	d002      	beq.n	80010d4 <BMP280_Config+0xb8>
	{
		return -3;
 80010ce:	f06f 0302 	mvn.w	r3, #2
 80010d2:	e072      	b.n	80011ba <BMP280_Config+0x19e>
	}


	// write the standby time and IIR filter coeff to 0xF5
	datatowrite = (t_sb <<5) |(filter << 2);
 80010d4:	f897 3020 	ldrb.w	r3, [r7, #32]
 80010d8:	015b      	lsls	r3, r3, #5
 80010da:	b25a      	sxtb	r2, r3
 80010dc:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80010e0:	009b      	lsls	r3, r3, #2
 80010e2:	b25b      	sxtb	r3, r3
 80010e4:	4313      	orrs	r3, r2
 80010e6:	b25b      	sxtb	r3, r3
 80010e8:	b2db      	uxtb	r3, r3
 80010ea:	73fb      	strb	r3, [r7, #15]
	if (HAL_I2C_Mem_Write(BMP280_I2C, BMP280_ADDRESS, CONFIG_REG, 1, &datatowrite, 1, 1000) != HAL_OK)
 80010ec:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80010f0:	9302      	str	r3, [sp, #8]
 80010f2:	2301      	movs	r3, #1
 80010f4:	9301      	str	r3, [sp, #4]
 80010f6:	f107 030f 	add.w	r3, r7, #15
 80010fa:	9300      	str	r3, [sp, #0]
 80010fc:	2301      	movs	r3, #1
 80010fe:	22f5      	movs	r2, #245	; 0xf5
 8001100:	21ec      	movs	r1, #236	; 0xec
 8001102:	4830      	ldr	r0, [pc, #192]	; (80011c4 <BMP280_Config+0x1a8>)
 8001104:	f004 fafe 	bl	8005704 <HAL_I2C_Mem_Write>
 8001108:	4603      	mov	r3, r0
 800110a:	2b00      	cmp	r3, #0
 800110c:	d002      	beq.n	8001114 <BMP280_Config+0xf8>
	{
		return -4;
 800110e:	f06f 0303 	mvn.w	r3, #3
 8001112:	e052      	b.n	80011ba <BMP280_Config+0x19e>
	}
	HAL_Delay (100);
 8001114:	2064      	movs	r0, #100	; 0x64
 8001116:	f002 ff57 	bl	8003fc8 <HAL_Delay>
	HAL_I2C_Mem_Read(BMP280_I2C, BMP280_ADDRESS, CONFIG_REG, 1, &datacheck, 1, 1000);
 800111a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800111e:	9302      	str	r3, [sp, #8]
 8001120:	2301      	movs	r3, #1
 8001122:	9301      	str	r3, [sp, #4]
 8001124:	f107 030e 	add.w	r3, r7, #14
 8001128:	9300      	str	r3, [sp, #0]
 800112a:	2301      	movs	r3, #1
 800112c:	22f5      	movs	r2, #245	; 0xf5
 800112e:	21ec      	movs	r1, #236	; 0xec
 8001130:	4824      	ldr	r0, [pc, #144]	; (80011c4 <BMP280_Config+0x1a8>)
 8001132:	f004 fbe1 	bl	80058f8 <HAL_I2C_Mem_Read>
	if (datacheck != datatowrite)
 8001136:	7bba      	ldrb	r2, [r7, #14]
 8001138:	7bfb      	ldrb	r3, [r7, #15]
 800113a:	429a      	cmp	r2, r3
 800113c:	d002      	beq.n	8001144 <BMP280_Config+0x128>
	{
		return -5;
 800113e:	f06f 0304 	mvn.w	r3, #4
 8001142:	e03a      	b.n	80011ba <BMP280_Config+0x19e>
	}


	// write the pressure and temp oversampling along with mode to 0xF4
	datatowrite = (osrs_t <<5) |(osrs_p << 2) | mode;
 8001144:	79fb      	ldrb	r3, [r7, #7]
 8001146:	015b      	lsls	r3, r3, #5
 8001148:	b25a      	sxtb	r2, r3
 800114a:	79bb      	ldrb	r3, [r7, #6]
 800114c:	009b      	lsls	r3, r3, #2
 800114e:	b25b      	sxtb	r3, r3
 8001150:	4313      	orrs	r3, r2
 8001152:	b25a      	sxtb	r2, r3
 8001154:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8001158:	4313      	orrs	r3, r2
 800115a:	b25b      	sxtb	r3, r3
 800115c:	b2db      	uxtb	r3, r3
 800115e:	73fb      	strb	r3, [r7, #15]
	if (HAL_I2C_Mem_Write(BMP280_I2C, BMP280_ADDRESS, CTRL_MEAS_REG, 1, &datatowrite, 1, 1000) != HAL_OK)
 8001160:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001164:	9302      	str	r3, [sp, #8]
 8001166:	2301      	movs	r3, #1
 8001168:	9301      	str	r3, [sp, #4]
 800116a:	f107 030f 	add.w	r3, r7, #15
 800116e:	9300      	str	r3, [sp, #0]
 8001170:	2301      	movs	r3, #1
 8001172:	22f4      	movs	r2, #244	; 0xf4
 8001174:	21ec      	movs	r1, #236	; 0xec
 8001176:	4813      	ldr	r0, [pc, #76]	; (80011c4 <BMP280_Config+0x1a8>)
 8001178:	f004 fac4 	bl	8005704 <HAL_I2C_Mem_Write>
 800117c:	4603      	mov	r3, r0
 800117e:	2b00      	cmp	r3, #0
 8001180:	d002      	beq.n	8001188 <BMP280_Config+0x16c>
	{
		return -6;
 8001182:	f06f 0305 	mvn.w	r3, #5
 8001186:	e018      	b.n	80011ba <BMP280_Config+0x19e>
	}
	HAL_Delay (100);
 8001188:	2064      	movs	r0, #100	; 0x64
 800118a:	f002 ff1d 	bl	8003fc8 <HAL_Delay>
	HAL_I2C_Mem_Read(BMP280_I2C, BMP280_ADDRESS, CTRL_MEAS_REG, 1, &datacheck, 1, 1000);
 800118e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001192:	9302      	str	r3, [sp, #8]
 8001194:	2301      	movs	r3, #1
 8001196:	9301      	str	r3, [sp, #4]
 8001198:	f107 030e 	add.w	r3, r7, #14
 800119c:	9300      	str	r3, [sp, #0]
 800119e:	2301      	movs	r3, #1
 80011a0:	22f4      	movs	r2, #244	; 0xf4
 80011a2:	21ec      	movs	r1, #236	; 0xec
 80011a4:	4807      	ldr	r0, [pc, #28]	; (80011c4 <BMP280_Config+0x1a8>)
 80011a6:	f004 fba7 	bl	80058f8 <HAL_I2C_Mem_Read>
	if (datacheck != datatowrite)
 80011aa:	7bba      	ldrb	r2, [r7, #14]
 80011ac:	7bfb      	ldrb	r3, [r7, #15]
 80011ae:	429a      	cmp	r2, r3
 80011b0:	d002      	beq.n	80011b8 <BMP280_Config+0x19c>
	{
		return -7;
 80011b2:	f06f 0306 	mvn.w	r3, #6
 80011b6:	e000      	b.n	80011ba <BMP280_Config+0x19e>
	}

	return 0;
 80011b8:	2300      	movs	r3, #0
}
 80011ba:	4618      	mov	r0, r3
 80011bc:	3714      	adds	r7, #20
 80011be:	46bd      	mov	sp, r7
 80011c0:	bd90      	pop	{r4, r7, pc}
 80011c2:	bf00      	nop
 80011c4:	20000158 	.word	0x20000158

080011c8 <BMPReadRaw>:


int BMPReadRaw(void)
{
 80011c8:	b580      	push	{r7, lr}
 80011ca:	b086      	sub	sp, #24
 80011cc:	af04      	add	r7, sp, #16
	uint8_t RawData[6];

	// Check the chip ID before reading
	HAL_I2C_Mem_Read(&hi2c1, BMP280_ADDRESS, ID_REG, 1, &chipID, 1, 1000);
 80011ce:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80011d2:	9302      	str	r3, [sp, #8]
 80011d4:	2301      	movs	r3, #1
 80011d6:	9301      	str	r3, [sp, #4]
 80011d8:	4b1c      	ldr	r3, [pc, #112]	; (800124c <BMPReadRaw+0x84>)
 80011da:	9300      	str	r3, [sp, #0]
 80011dc:	2301      	movs	r3, #1
 80011de:	22d0      	movs	r2, #208	; 0xd0
 80011e0:	21ec      	movs	r1, #236	; 0xec
 80011e2:	481b      	ldr	r0, [pc, #108]	; (8001250 <BMPReadRaw+0x88>)
 80011e4:	f004 fb88 	bl	80058f8 <HAL_I2C_Mem_Read>

	if (chipID == 0x58)
 80011e8:	4b18      	ldr	r3, [pc, #96]	; (800124c <BMPReadRaw+0x84>)
 80011ea:	781b      	ldrb	r3, [r3, #0]
 80011ec:	2b58      	cmp	r3, #88	; 0x58
 80011ee:	d127      	bne.n	8001240 <BMPReadRaw+0x78>
	{
		// Read the Registers 0xF7 to 0xFE
		HAL_I2C_Mem_Read(BMP280_I2C, BMP280_ADDRESS, PRESS_MSB_REG, 1, RawData, 6, HAL_MAX_DELAY);
 80011f0:	f04f 33ff 	mov.w	r3, #4294967295
 80011f4:	9302      	str	r3, [sp, #8]
 80011f6:	2306      	movs	r3, #6
 80011f8:	9301      	str	r3, [sp, #4]
 80011fa:	463b      	mov	r3, r7
 80011fc:	9300      	str	r3, [sp, #0]
 80011fe:	2301      	movs	r3, #1
 8001200:	22f7      	movs	r2, #247	; 0xf7
 8001202:	21ec      	movs	r1, #236	; 0xec
 8001204:	4812      	ldr	r0, [pc, #72]	; (8001250 <BMPReadRaw+0x88>)
 8001206:	f004 fb77 	bl	80058f8 <HAL_I2C_Mem_Read>

		/* Calculate the Raw data for the parameters
		 * Here the Pressure and Temperature are in 20 bit format and humidity in 16 bit format
		 */
		pRaw = (RawData[0]<<12)|(RawData[1]<<4)|(RawData[2]>>4);
 800120a:	783b      	ldrb	r3, [r7, #0]
 800120c:	031a      	lsls	r2, r3, #12
 800120e:	787b      	ldrb	r3, [r7, #1]
 8001210:	011b      	lsls	r3, r3, #4
 8001212:	4313      	orrs	r3, r2
 8001214:	78ba      	ldrb	r2, [r7, #2]
 8001216:	0912      	lsrs	r2, r2, #4
 8001218:	b2d2      	uxtb	r2, r2
 800121a:	4313      	orrs	r3, r2
 800121c:	4a0d      	ldr	r2, [pc, #52]	; (8001254 <BMPReadRaw+0x8c>)
 800121e:	6013      	str	r3, [r2, #0]
		tRaw = (RawData[3]<<12)|(RawData[4]<<4)|(RawData[5]>>4);
 8001220:	78fb      	ldrb	r3, [r7, #3]
 8001222:	031a      	lsls	r2, r3, #12
 8001224:	793b      	ldrb	r3, [r7, #4]
 8001226:	011b      	lsls	r3, r3, #4
 8001228:	4313      	orrs	r3, r2
 800122a:	797a      	ldrb	r2, [r7, #5]
 800122c:	0912      	lsrs	r2, r2, #4
 800122e:	b2d2      	uxtb	r2, r2
 8001230:	4313      	orrs	r3, r2
 8001232:	4a09      	ldr	r2, [pc, #36]	; (8001258 <BMPReadRaw+0x90>)
 8001234:	6013      	str	r3, [r2, #0]
		hRaw = 0;
 8001236:	4b09      	ldr	r3, [pc, #36]	; (800125c <BMPReadRaw+0x94>)
 8001238:	2200      	movs	r2, #0
 800123a:	601a      	str	r2, [r3, #0]

		return 0;
 800123c:	2300      	movs	r3, #0
 800123e:	e001      	b.n	8001244 <BMPReadRaw+0x7c>
	}

	else return -1;
 8001240:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001244:	4618      	mov	r0, r3
 8001246:	3708      	adds	r7, #8
 8001248:	46bd      	mov	sp, r7
 800124a:	bd80      	pop	{r7, pc}
 800124c:	20000118 	.word	0x20000118
 8001250:	20000158 	.word	0x20000158
 8001254:	20000120 	.word	0x20000120
 8001258:	2000011c 	.word	0x2000011c
 800125c:	20000124 	.word	0x20000124

08001260 <BMP280_compensate_P_int64>:
#if SUPPORT_64BIT
/* Returns pressure in Pa as unsigned 32 bit integer in Q24.8 format (24 integer bits and 8 fractional bits).
   Output value of “24674867” represents 24674867/256 = 96386.2 Pa = 963.862 hPa
*/
uint32_t BMP280_compensate_P_int64(int32_t adc_P)
{
 8001260:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8001264:	b0ca      	sub	sp, #296	; 0x128
 8001266:	af00      	add	r7, sp, #0
 8001268:	f8c7 010c 	str.w	r0, [r7, #268]	; 0x10c
	int64_t var1, var2, p;
	var1 = ((int64_t)t_fine) - 128000;
 800126c:	4baf      	ldr	r3, [pc, #700]	; (800152c <BMP280_compensate_P_int64+0x2cc>)
 800126e:	681b      	ldr	r3, [r3, #0]
 8001270:	17da      	asrs	r2, r3, #31
 8001272:	461c      	mov	r4, r3
 8001274:	4615      	mov	r5, r2
 8001276:	f5b4 3afa 	subs.w	sl, r4, #128000	; 0x1f400
 800127a:	f145 3bff 	adc.w	fp, r5, #4294967295
 800127e:	e9c7 ab48 	strd	sl, fp, [r7, #288]	; 0x120
	var2 = var1 * var1 * (int64_t)dig_P6;
 8001282:	f8d7 2124 	ldr.w	r2, [r7, #292]	; 0x124
 8001286:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 800128a:	fb03 f102 	mul.w	r1, r3, r2
 800128e:	f8d7 2124 	ldr.w	r2, [r7, #292]	; 0x124
 8001292:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 8001296:	fb02 f303 	mul.w	r3, r2, r3
 800129a:	18ca      	adds	r2, r1, r3
 800129c:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 80012a0:	fba3 8903 	umull	r8, r9, r3, r3
 80012a4:	eb02 0309 	add.w	r3, r2, r9
 80012a8:	4699      	mov	r9, r3
 80012aa:	4ba1      	ldr	r3, [pc, #644]	; (8001530 <BMP280_compensate_P_int64+0x2d0>)
 80012ac:	f9b3 3000 	ldrsh.w	r3, [r3]
 80012b0:	b21b      	sxth	r3, r3
 80012b2:	17da      	asrs	r2, r3, #31
 80012b4:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 80012b8:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 80012bc:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	; 0xb8
 80012c0:	4603      	mov	r3, r0
 80012c2:	fb03 f209 	mul.w	r2, r3, r9
 80012c6:	460b      	mov	r3, r1
 80012c8:	fb08 f303 	mul.w	r3, r8, r3
 80012cc:	4413      	add	r3, r2
 80012ce:	4602      	mov	r2, r0
 80012d0:	fba8 1202 	umull	r1, r2, r8, r2
 80012d4:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 80012d8:	460a      	mov	r2, r1
 80012da:	f8c7 20c0 	str.w	r2, [r7, #192]	; 0xc0
 80012de:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 80012e2:	4413      	add	r3, r2
 80012e4:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 80012e8:	e9d7 3430 	ldrd	r3, r4, [r7, #192]	; 0xc0
 80012ec:	e9c7 3446 	strd	r3, r4, [r7, #280]	; 0x118
 80012f0:	e9c7 3446 	strd	r3, r4, [r7, #280]	; 0x118
	var2 = var2 + ((var1*(int64_t)dig_P5)<<17);
 80012f4:	4b8f      	ldr	r3, [pc, #572]	; (8001534 <BMP280_compensate_P_int64+0x2d4>)
 80012f6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80012fa:	b21b      	sxth	r3, r3
 80012fc:	17da      	asrs	r2, r3, #31
 80012fe:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8001302:	f8c7 20b4 	str.w	r2, [r7, #180]	; 0xb4
 8001306:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 800130a:	e9d7 452c 	ldrd	r4, r5, [r7, #176]	; 0xb0
 800130e:	462a      	mov	r2, r5
 8001310:	fb02 f203 	mul.w	r2, r2, r3
 8001314:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8001318:	4621      	mov	r1, r4
 800131a:	fb01 f303 	mul.w	r3, r1, r3
 800131e:	441a      	add	r2, r3
 8001320:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 8001324:	4621      	mov	r1, r4
 8001326:	fba3 1301 	umull	r1, r3, r3, r1
 800132a:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 800132e:	460b      	mov	r3, r1
 8001330:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
 8001334:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8001338:	18d3      	adds	r3, r2, r3
 800133a:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 800133e:	f04f 0000 	mov.w	r0, #0
 8001342:	f04f 0100 	mov.w	r1, #0
 8001346:	e9d7 4540 	ldrd	r4, r5, [r7, #256]	; 0x100
 800134a:	462b      	mov	r3, r5
 800134c:	0459      	lsls	r1, r3, #17
 800134e:	4623      	mov	r3, r4
 8001350:	ea41 31d3 	orr.w	r1, r1, r3, lsr #15
 8001354:	4623      	mov	r3, r4
 8001356:	0458      	lsls	r0, r3, #17
 8001358:	e9d7 2346 	ldrd	r2, r3, [r7, #280]	; 0x118
 800135c:	1814      	adds	r4, r2, r0
 800135e:	643c      	str	r4, [r7, #64]	; 0x40
 8001360:	414b      	adcs	r3, r1
 8001362:	647b      	str	r3, [r7, #68]	; 0x44
 8001364:	e9d7 3410 	ldrd	r3, r4, [r7, #64]	; 0x40
 8001368:	e9c7 3446 	strd	r3, r4, [r7, #280]	; 0x118
	var2 = var2 + (((int64_t)dig_P4)<<35);
 800136c:	4b72      	ldr	r3, [pc, #456]	; (8001538 <BMP280_compensate_P_int64+0x2d8>)
 800136e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001372:	b21b      	sxth	r3, r3
 8001374:	17da      	asrs	r2, r3, #31
 8001376:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800137a:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 800137e:	f04f 0000 	mov.w	r0, #0
 8001382:	f04f 0100 	mov.w	r1, #0
 8001386:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 800138a:	00d9      	lsls	r1, r3, #3
 800138c:	2000      	movs	r0, #0
 800138e:	e9d7 2346 	ldrd	r2, r3, [r7, #280]	; 0x118
 8001392:	1814      	adds	r4, r2, r0
 8001394:	63bc      	str	r4, [r7, #56]	; 0x38
 8001396:	414b      	adcs	r3, r1
 8001398:	63fb      	str	r3, [r7, #60]	; 0x3c
 800139a:	e9d7 340e 	ldrd	r3, r4, [r7, #56]	; 0x38
 800139e:	e9c7 3446 	strd	r3, r4, [r7, #280]	; 0x118
	var1 = ((var1 * var1 * (int64_t)dig_P3)>>8) + ((var1 * (int64_t)dig_P2)<<12);
 80013a2:	f8d7 2124 	ldr.w	r2, [r7, #292]	; 0x124
 80013a6:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 80013aa:	fb03 f102 	mul.w	r1, r3, r2
 80013ae:	f8d7 2124 	ldr.w	r2, [r7, #292]	; 0x124
 80013b2:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 80013b6:	fb02 f303 	mul.w	r3, r2, r3
 80013ba:	18ca      	adds	r2, r1, r3
 80013bc:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 80013c0:	fba3 1303 	umull	r1, r3, r3, r3
 80013c4:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 80013c8:	460b      	mov	r3, r1
 80013ca:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 80013ce:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80013d2:	18d3      	adds	r3, r2, r3
 80013d4:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 80013d8:	4b58      	ldr	r3, [pc, #352]	; (800153c <BMP280_compensate_P_int64+0x2dc>)
 80013da:	f9b3 3000 	ldrsh.w	r3, [r3]
 80013de:	b21b      	sxth	r3, r3
 80013e0:	17da      	asrs	r2, r3, #31
 80013e2:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 80013e6:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 80013ea:	e9d7 453e 	ldrd	r4, r5, [r7, #248]	; 0xf8
 80013ee:	462b      	mov	r3, r5
 80013f0:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 80013f4:	4642      	mov	r2, r8
 80013f6:	fb02 f203 	mul.w	r2, r2, r3
 80013fa:	464b      	mov	r3, r9
 80013fc:	4621      	mov	r1, r4
 80013fe:	fb01 f303 	mul.w	r3, r1, r3
 8001402:	4413      	add	r3, r2
 8001404:	4622      	mov	r2, r4
 8001406:	4641      	mov	r1, r8
 8001408:	fba2 1201 	umull	r1, r2, r2, r1
 800140c:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
 8001410:	460a      	mov	r2, r1
 8001412:	f8c7 20f0 	str.w	r2, [r7, #240]	; 0xf0
 8001416:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
 800141a:	4413      	add	r3, r2
 800141c:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
 8001420:	f04f 0000 	mov.w	r0, #0
 8001424:	f04f 0100 	mov.w	r1, #0
 8001428:	e9d7 453c 	ldrd	r4, r5, [r7, #240]	; 0xf0
 800142c:	4623      	mov	r3, r4
 800142e:	0a18      	lsrs	r0, r3, #8
 8001430:	462b      	mov	r3, r5
 8001432:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
 8001436:	462b      	mov	r3, r5
 8001438:	1219      	asrs	r1, r3, #8
 800143a:	4b41      	ldr	r3, [pc, #260]	; (8001540 <BMP280_compensate_P_int64+0x2e0>)
 800143c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001440:	b21b      	sxth	r3, r3
 8001442:	17da      	asrs	r2, r3, #31
 8001444:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8001448:	f8c7 209c 	str.w	r2, [r7, #156]	; 0x9c
 800144c:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 8001450:	e9d7 8926 	ldrd	r8, r9, [r7, #152]	; 0x98
 8001454:	464a      	mov	r2, r9
 8001456:	fb02 f203 	mul.w	r2, r2, r3
 800145a:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 800145e:	4644      	mov	r4, r8
 8001460:	fb04 f303 	mul.w	r3, r4, r3
 8001464:	441a      	add	r2, r3
 8001466:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 800146a:	4644      	mov	r4, r8
 800146c:	fba3 4304 	umull	r4, r3, r3, r4
 8001470:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 8001474:	4623      	mov	r3, r4
 8001476:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800147a:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 800147e:	18d3      	adds	r3, r2, r3
 8001480:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 8001484:	f04f 0200 	mov.w	r2, #0
 8001488:	f04f 0300 	mov.w	r3, #0
 800148c:	e9d7 893a 	ldrd	r8, r9, [r7, #232]	; 0xe8
 8001490:	464c      	mov	r4, r9
 8001492:	0323      	lsls	r3, r4, #12
 8001494:	4644      	mov	r4, r8
 8001496:	ea43 5314 	orr.w	r3, r3, r4, lsr #20
 800149a:	4644      	mov	r4, r8
 800149c:	0322      	lsls	r2, r4, #12
 800149e:	1884      	adds	r4, r0, r2
 80014a0:	633c      	str	r4, [r7, #48]	; 0x30
 80014a2:	eb41 0303 	adc.w	r3, r1, r3
 80014a6:	637b      	str	r3, [r7, #52]	; 0x34
 80014a8:	e9d7 340c 	ldrd	r3, r4, [r7, #48]	; 0x30
 80014ac:	e9c7 3448 	strd	r3, r4, [r7, #288]	; 0x120
	var1 = (((((int64_t)1)<<47)+var1))*((int64_t)dig_P1)>>33;
 80014b0:	e9d7 2348 	ldrd	r2, r3, [r7, #288]	; 0x120
 80014b4:	f503 4100 	add.w	r1, r3, #32768	; 0x8000
 80014b8:	f8c7 1094 	str.w	r1, [r7, #148]	; 0x94
 80014bc:	f8c7 2090 	str.w	r2, [r7, #144]	; 0x90
 80014c0:	4b20      	ldr	r3, [pc, #128]	; (8001544 <BMP280_compensate_P_int64+0x2e4>)
 80014c2:	881b      	ldrh	r3, [r3, #0]
 80014c4:	b29b      	uxth	r3, r3
 80014c6:	2200      	movs	r2, #0
 80014c8:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80014cc:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80014d0:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 80014d4:	462b      	mov	r3, r5
 80014d6:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 80014da:	4642      	mov	r2, r8
 80014dc:	fb02 f203 	mul.w	r2, r2, r3
 80014e0:	464b      	mov	r3, r9
 80014e2:	4621      	mov	r1, r4
 80014e4:	fb01 f303 	mul.w	r3, r1, r3
 80014e8:	4413      	add	r3, r2
 80014ea:	4622      	mov	r2, r4
 80014ec:	4641      	mov	r1, r8
 80014ee:	fba2 1201 	umull	r1, r2, r2, r1
 80014f2:	f8c7 20e4 	str.w	r2, [r7, #228]	; 0xe4
 80014f6:	460a      	mov	r2, r1
 80014f8:	f8c7 20e0 	str.w	r2, [r7, #224]	; 0xe0
 80014fc:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
 8001500:	4413      	add	r3, r2
 8001502:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8001506:	f04f 0200 	mov.w	r2, #0
 800150a:	f04f 0300 	mov.w	r3, #0
 800150e:	e9d7 4538 	ldrd	r4, r5, [r7, #224]	; 0xe0
 8001512:	4629      	mov	r1, r5
 8001514:	104a      	asrs	r2, r1, #1
 8001516:	4629      	mov	r1, r5
 8001518:	17cb      	asrs	r3, r1, #31
 800151a:	e9c7 2348 	strd	r2, r3, [r7, #288]	; 0x120
	if (var1 == 0)
 800151e:	e9d7 2348 	ldrd	r2, r3, [r7, #288]	; 0x120
 8001522:	4313      	orrs	r3, r2
 8001524:	d110      	bne.n	8001548 <BMP280_compensate_P_int64+0x2e8>
	{
		return 0; // avoid exception caused by division by zero
 8001526:	2300      	movs	r3, #0
 8001528:	e154      	b.n	80017d4 <BMP280_compensate_P_int64+0x574>
 800152a:	bf00      	nop
 800152c:	2000014c 	.word	0x2000014c
 8001530:	2000013c 	.word	0x2000013c
 8001534:	2000013a 	.word	0x2000013a
 8001538:	20000138 	.word	0x20000138
 800153c:	20000136 	.word	0x20000136
 8001540:	20000134 	.word	0x20000134
 8001544:	2000012a 	.word	0x2000012a
	}
	p = 1048576-adc_P;
 8001548:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 800154c:	f5c3 1380 	rsb	r3, r3, #1048576	; 0x100000
 8001550:	17da      	asrs	r2, r3, #31
 8001552:	62bb      	str	r3, [r7, #40]	; 0x28
 8001554:	62fa      	str	r2, [r7, #44]	; 0x2c
 8001556:	e9d7 340a 	ldrd	r3, r4, [r7, #40]	; 0x28
 800155a:	e9c7 3444 	strd	r3, r4, [r7, #272]	; 0x110
	p = (((p<<31)-var2)*3125)/var1;
 800155e:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8001562:	105b      	asrs	r3, r3, #1
 8001564:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8001568:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 800156c:	07db      	lsls	r3, r3, #31
 800156e:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8001572:	e9d7 2346 	ldrd	r2, r3, [r7, #280]	; 0x118
 8001576:	e9d7 4520 	ldrd	r4, r5, [r7, #128]	; 0x80
 800157a:	4621      	mov	r1, r4
 800157c:	1a89      	subs	r1, r1, r2
 800157e:	67b9      	str	r1, [r7, #120]	; 0x78
 8001580:	4629      	mov	r1, r5
 8001582:	eb61 0303 	sbc.w	r3, r1, r3
 8001586:	67fb      	str	r3, [r7, #124]	; 0x7c
 8001588:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	; 0x78
 800158c:	4622      	mov	r2, r4
 800158e:	462b      	mov	r3, r5
 8001590:	1891      	adds	r1, r2, r2
 8001592:	6239      	str	r1, [r7, #32]
 8001594:	415b      	adcs	r3, r3
 8001596:	627b      	str	r3, [r7, #36]	; 0x24
 8001598:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800159c:	4621      	mov	r1, r4
 800159e:	1851      	adds	r1, r2, r1
 80015a0:	61b9      	str	r1, [r7, #24]
 80015a2:	4629      	mov	r1, r5
 80015a4:	414b      	adcs	r3, r1
 80015a6:	61fb      	str	r3, [r7, #28]
 80015a8:	f04f 0200 	mov.w	r2, #0
 80015ac:	f04f 0300 	mov.w	r3, #0
 80015b0:	e9d7 8906 	ldrd	r8, r9, [r7, #24]
 80015b4:	4649      	mov	r1, r9
 80015b6:	018b      	lsls	r3, r1, #6
 80015b8:	4641      	mov	r1, r8
 80015ba:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80015be:	4641      	mov	r1, r8
 80015c0:	018a      	lsls	r2, r1, #6
 80015c2:	4641      	mov	r1, r8
 80015c4:	1889      	adds	r1, r1, r2
 80015c6:	6139      	str	r1, [r7, #16]
 80015c8:	4649      	mov	r1, r9
 80015ca:	eb43 0101 	adc.w	r1, r3, r1
 80015ce:	6179      	str	r1, [r7, #20]
 80015d0:	f04f 0200 	mov.w	r2, #0
 80015d4:	f04f 0300 	mov.w	r3, #0
 80015d8:	e9d7 8904 	ldrd	r8, r9, [r7, #16]
 80015dc:	4649      	mov	r1, r9
 80015de:	008b      	lsls	r3, r1, #2
 80015e0:	4641      	mov	r1, r8
 80015e2:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80015e6:	4641      	mov	r1, r8
 80015e8:	008a      	lsls	r2, r1, #2
 80015ea:	4610      	mov	r0, r2
 80015ec:	4619      	mov	r1, r3
 80015ee:	4603      	mov	r3, r0
 80015f0:	4622      	mov	r2, r4
 80015f2:	189b      	adds	r3, r3, r2
 80015f4:	60bb      	str	r3, [r7, #8]
 80015f6:	460b      	mov	r3, r1
 80015f8:	462a      	mov	r2, r5
 80015fa:	eb42 0303 	adc.w	r3, r2, r3
 80015fe:	60fb      	str	r3, [r7, #12]
 8001600:	f04f 0200 	mov.w	r2, #0
 8001604:	f04f 0300 	mov.w	r3, #0
 8001608:	e9d7 8902 	ldrd	r8, r9, [r7, #8]
 800160c:	4649      	mov	r1, r9
 800160e:	008b      	lsls	r3, r1, #2
 8001610:	4641      	mov	r1, r8
 8001612:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8001616:	4641      	mov	r1, r8
 8001618:	008a      	lsls	r2, r1, #2
 800161a:	4610      	mov	r0, r2
 800161c:	4619      	mov	r1, r3
 800161e:	4603      	mov	r3, r0
 8001620:	4622      	mov	r2, r4
 8001622:	189b      	adds	r3, r3, r2
 8001624:	673b      	str	r3, [r7, #112]	; 0x70
 8001626:	462b      	mov	r3, r5
 8001628:	460a      	mov	r2, r1
 800162a:	eb42 0303 	adc.w	r3, r2, r3
 800162e:	677b      	str	r3, [r7, #116]	; 0x74
 8001630:	e9d7 2348 	ldrd	r2, r3, [r7, #288]	; 0x120
 8001634:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	; 0x70
 8001638:	f7ff fa40 	bl	8000abc <__aeabi_ldivmod>
 800163c:	4602      	mov	r2, r0
 800163e:	460b      	mov	r3, r1
 8001640:	e9c7 2344 	strd	r2, r3, [r7, #272]	; 0x110
	var1 = (((int64_t)dig_P9) * (p>>13) * (p>>13)) >> 25;
 8001644:	4b66      	ldr	r3, [pc, #408]	; (80017e0 <BMP280_compensate_P_int64+0x580>)
 8001646:	f9b3 3000 	ldrsh.w	r3, [r3]
 800164a:	b21b      	sxth	r3, r3
 800164c:	17da      	asrs	r2, r3, #31
 800164e:	66bb      	str	r3, [r7, #104]	; 0x68
 8001650:	66fa      	str	r2, [r7, #108]	; 0x6c
 8001652:	e9d7 2344 	ldrd	r2, r3, [r7, #272]	; 0x110
 8001656:	f04f 0000 	mov.w	r0, #0
 800165a:	f04f 0100 	mov.w	r1, #0
 800165e:	0b50      	lsrs	r0, r2, #13
 8001660:	ea40 40c3 	orr.w	r0, r0, r3, lsl #19
 8001664:	1359      	asrs	r1, r3, #13
 8001666:	e9d7 451a 	ldrd	r4, r5, [r7, #104]	; 0x68
 800166a:	462b      	mov	r3, r5
 800166c:	fb00 f203 	mul.w	r2, r0, r3
 8001670:	4623      	mov	r3, r4
 8001672:	fb03 f301 	mul.w	r3, r3, r1
 8001676:	4413      	add	r3, r2
 8001678:	4622      	mov	r2, r4
 800167a:	fba2 1200 	umull	r1, r2, r2, r0
 800167e:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 8001682:	460a      	mov	r2, r1
 8001684:	f8c7 20d8 	str.w	r2, [r7, #216]	; 0xd8
 8001688:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 800168c:	4413      	add	r3, r2
 800168e:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8001692:	e9d7 2344 	ldrd	r2, r3, [r7, #272]	; 0x110
 8001696:	f04f 0000 	mov.w	r0, #0
 800169a:	f04f 0100 	mov.w	r1, #0
 800169e:	0b50      	lsrs	r0, r2, #13
 80016a0:	ea40 40c3 	orr.w	r0, r0, r3, lsl #19
 80016a4:	1359      	asrs	r1, r3, #13
 80016a6:	e9d7 4536 	ldrd	r4, r5, [r7, #216]	; 0xd8
 80016aa:	462b      	mov	r3, r5
 80016ac:	fb00 f203 	mul.w	r2, r0, r3
 80016b0:	4623      	mov	r3, r4
 80016b2:	fb03 f301 	mul.w	r3, r3, r1
 80016b6:	4413      	add	r3, r2
 80016b8:	4622      	mov	r2, r4
 80016ba:	fba2 1200 	umull	r1, r2, r2, r0
 80016be:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 80016c2:	460a      	mov	r2, r1
 80016c4:	f8c7 20d0 	str.w	r2, [r7, #208]	; 0xd0
 80016c8:	f8d7 20d4 	ldr.w	r2, [r7, #212]	; 0xd4
 80016cc:	4413      	add	r3, r2
 80016ce:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 80016d2:	f04f 0200 	mov.w	r2, #0
 80016d6:	f04f 0300 	mov.w	r3, #0
 80016da:	e9d7 4534 	ldrd	r4, r5, [r7, #208]	; 0xd0
 80016de:	4621      	mov	r1, r4
 80016e0:	0e4a      	lsrs	r2, r1, #25
 80016e2:	4629      	mov	r1, r5
 80016e4:	ea42 12c1 	orr.w	r2, r2, r1, lsl #7
 80016e8:	4629      	mov	r1, r5
 80016ea:	164b      	asrs	r3, r1, #25
 80016ec:	e9c7 2348 	strd	r2, r3, [r7, #288]	; 0x120
	var2 = (((int64_t)dig_P8) * p) >> 19;
 80016f0:	4b3c      	ldr	r3, [pc, #240]	; (80017e4 <BMP280_compensate_P_int64+0x584>)
 80016f2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80016f6:	b21b      	sxth	r3, r3
 80016f8:	17da      	asrs	r2, r3, #31
 80016fa:	663b      	str	r3, [r7, #96]	; 0x60
 80016fc:	667a      	str	r2, [r7, #100]	; 0x64
 80016fe:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8001702:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	; 0x60
 8001706:	462a      	mov	r2, r5
 8001708:	fb02 f203 	mul.w	r2, r2, r3
 800170c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8001710:	4621      	mov	r1, r4
 8001712:	fb01 f303 	mul.w	r3, r1, r3
 8001716:	4413      	add	r3, r2
 8001718:	f8d7 2110 	ldr.w	r2, [r7, #272]	; 0x110
 800171c:	4621      	mov	r1, r4
 800171e:	fba2 1201 	umull	r1, r2, r2, r1
 8001722:	f8c7 20cc 	str.w	r2, [r7, #204]	; 0xcc
 8001726:	460a      	mov	r2, r1
 8001728:	f8c7 20c8 	str.w	r2, [r7, #200]	; 0xc8
 800172c:	f8d7 20cc 	ldr.w	r2, [r7, #204]	; 0xcc
 8001730:	4413      	add	r3, r2
 8001732:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8001736:	f04f 0200 	mov.w	r2, #0
 800173a:	f04f 0300 	mov.w	r3, #0
 800173e:	e9d7 4532 	ldrd	r4, r5, [r7, #200]	; 0xc8
 8001742:	4621      	mov	r1, r4
 8001744:	0cca      	lsrs	r2, r1, #19
 8001746:	4629      	mov	r1, r5
 8001748:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
 800174c:	4629      	mov	r1, r5
 800174e:	14cb      	asrs	r3, r1, #19
 8001750:	e9c7 2346 	strd	r2, r3, [r7, #280]	; 0x118
	p = ((p + var1 + var2) >> 8) + (((int64_t)dig_P7)<<4);
 8001754:	e9d7 0144 	ldrd	r0, r1, [r7, #272]	; 0x110
 8001758:	e9d7 2348 	ldrd	r2, r3, [r7, #288]	; 0x120
 800175c:	1884      	adds	r4, r0, r2
 800175e:	65bc      	str	r4, [r7, #88]	; 0x58
 8001760:	eb41 0303 	adc.w	r3, r1, r3
 8001764:	65fb      	str	r3, [r7, #92]	; 0x5c
 8001766:	e9d7 2346 	ldrd	r2, r3, [r7, #280]	; 0x118
 800176a:	e9d7 4516 	ldrd	r4, r5, [r7, #88]	; 0x58
 800176e:	4621      	mov	r1, r4
 8001770:	1889      	adds	r1, r1, r2
 8001772:	6539      	str	r1, [r7, #80]	; 0x50
 8001774:	4629      	mov	r1, r5
 8001776:	eb43 0101 	adc.w	r1, r3, r1
 800177a:	6579      	str	r1, [r7, #84]	; 0x54
 800177c:	f04f 0000 	mov.w	r0, #0
 8001780:	f04f 0100 	mov.w	r1, #0
 8001784:	e9d7 4514 	ldrd	r4, r5, [r7, #80]	; 0x50
 8001788:	4623      	mov	r3, r4
 800178a:	0a18      	lsrs	r0, r3, #8
 800178c:	462b      	mov	r3, r5
 800178e:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
 8001792:	462b      	mov	r3, r5
 8001794:	1219      	asrs	r1, r3, #8
 8001796:	4b14      	ldr	r3, [pc, #80]	; (80017e8 <BMP280_compensate_P_int64+0x588>)
 8001798:	f9b3 3000 	ldrsh.w	r3, [r3]
 800179c:	b21b      	sxth	r3, r3
 800179e:	17da      	asrs	r2, r3, #31
 80017a0:	64bb      	str	r3, [r7, #72]	; 0x48
 80017a2:	64fa      	str	r2, [r7, #76]	; 0x4c
 80017a4:	f04f 0200 	mov.w	r2, #0
 80017a8:	f04f 0300 	mov.w	r3, #0
 80017ac:	e9d7 8912 	ldrd	r8, r9, [r7, #72]	; 0x48
 80017b0:	464c      	mov	r4, r9
 80017b2:	0123      	lsls	r3, r4, #4
 80017b4:	4644      	mov	r4, r8
 80017b6:	ea43 7314 	orr.w	r3, r3, r4, lsr #28
 80017ba:	4644      	mov	r4, r8
 80017bc:	0122      	lsls	r2, r4, #4
 80017be:	1884      	adds	r4, r0, r2
 80017c0:	603c      	str	r4, [r7, #0]
 80017c2:	eb41 0303 	adc.w	r3, r1, r3
 80017c6:	607b      	str	r3, [r7, #4]
 80017c8:	e9d7 3400 	ldrd	r3, r4, [r7]
 80017cc:	e9c7 3444 	strd	r3, r4, [r7, #272]	; 0x110
	return (uint32_t)p;
 80017d0:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
}
 80017d4:	4618      	mov	r0, r3
 80017d6:	f507 7794 	add.w	r7, r7, #296	; 0x128
 80017da:	46bd      	mov	sp, r7
 80017dc:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80017e0:	20000142 	.word	0x20000142
 80017e4:	20000140 	.word	0x20000140
 80017e8:	2000013e 	.word	0x2000013e

080017ec <BMP280_Measure>:

/* measure the temp, pressure and humidity
 * the values will be stored in the parameters passed to the function
 */
 float BMP280_Measure ()
{
 80017ec:	b580      	push	{r7, lr}
 80017ee:	af00      	add	r7, sp, #0
	if (BMPReadRaw() == 0)
 80017f0:	f7ff fcea 	bl	80011c8 <BMPReadRaw>
 80017f4:	4603      	mov	r3, r0
 80017f6:	2b00      	cmp	r3, #0
 80017f8:	d121      	bne.n	800183e <BMP280_Measure+0x52>
//		  else
//		  {
//			  Temperature = (BMP280_compensate_T_int32 (tRaw))/100.0;  // as per datasheet, the temp is x100
//		  }

		  if (pRaw == 0x800000) Pressure = 0; // value in case temp measurement was disabled
 80017fa:	4b16      	ldr	r3, [pc, #88]	; (8001854 <BMP280_Measure+0x68>)
 80017fc:	681b      	ldr	r3, [r3, #0]
 80017fe:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8001802:	d104      	bne.n	800180e <BMP280_Measure+0x22>
 8001804:	4b14      	ldr	r3, [pc, #80]	; (8001858 <BMP280_Measure+0x6c>)
 8001806:	f04f 0200 	mov.w	r2, #0
 800180a:	601a      	str	r2, [r3, #0]
 800180c:	e01b      	b.n	8001846 <BMP280_Measure+0x5a>
		  else
		  {
//#if SUPPORT_64BIT
			  Pressure = (BMP280_compensate_P_int64 (pRaw))/256.0;  // as per datasheet, the pressure is x256
 800180e:	4b11      	ldr	r3, [pc, #68]	; (8001854 <BMP280_Measure+0x68>)
 8001810:	681b      	ldr	r3, [r3, #0]
 8001812:	4618      	mov	r0, r3
 8001814:	f7ff fd24 	bl	8001260 <BMP280_compensate_P_int64>
 8001818:	4603      	mov	r3, r0
 800181a:	4618      	mov	r0, r3
 800181c:	f7fe fe72 	bl	8000504 <__aeabi_ui2d>
 8001820:	f04f 0200 	mov.w	r2, #0
 8001824:	4b0d      	ldr	r3, [pc, #52]	; (800185c <BMP280_Measure+0x70>)
 8001826:	f7ff f811 	bl	800084c <__aeabi_ddiv>
 800182a:	4602      	mov	r2, r0
 800182c:	460b      	mov	r3, r1
 800182e:	4610      	mov	r0, r2
 8001830:	4619      	mov	r1, r3
 8001832:	f7ff f8f3 	bl	8000a1c <__aeabi_d2f>
 8001836:	4603      	mov	r3, r0
 8001838:	4a07      	ldr	r2, [pc, #28]	; (8001858 <BMP280_Measure+0x6c>)
 800183a:	6013      	str	r3, [r2, #0]
 800183c:	e003      	b.n	8001846 <BMP280_Measure+0x5a>

	// if the device is detached
	else
	{
//		Temperature = 0;
		Pressure = 0;
 800183e:	4b06      	ldr	r3, [pc, #24]	; (8001858 <BMP280_Measure+0x6c>)
 8001840:	f04f 0200 	mov.w	r2, #0
 8001844:	601a      	str	r2, [r3, #0]
//	    Humidity = 0;
	}
	return Pressure;
 8001846:	4b04      	ldr	r3, [pc, #16]	; (8001858 <BMP280_Measure+0x6c>)
 8001848:	681b      	ldr	r3, [r3, #0]
 800184a:	ee07 3a90 	vmov	s15, r3
}
 800184e:	eeb0 0a67 	vmov.f32	s0, s15
 8001852:	bd80      	pop	{r7, pc}
 8001854:	20000120 	.word	0x20000120
 8001858:	2000034c 	.word	0x2000034c
 800185c:	40700000 	.word	0x40700000

08001860 <LM75_Temperature_9Bit_ReadReg>:

#include "LM75.h"


float LM75_Temperature_9Bit_ReadReg( uint8_t reg ){
 8001860:	b580      	push	{r7, lr}
 8001862:	b086      	sub	sp, #24
 8001864:	af02      	add	r7, sp, #8
 8001866:	4603      	mov	r3, r0
 8001868:	71fb      	strb	r3, [r7, #7]
	HAL_I2C_Master_Transmit( &MY_I2C, LM75_ADDRESS, &reg, 1, 500 );
 800186a:	1dfa      	adds	r2, r7, #7
 800186c:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8001870:	9300      	str	r3, [sp, #0]
 8001872:	2301      	movs	r3, #1
 8001874:	2190      	movs	r1, #144	; 0x90
 8001876:	481f      	ldr	r0, [pc, #124]	; (80018f4 <LM75_Temperature_9Bit_ReadReg+0x94>)
 8001878:	f003 fc14 	bl	80050a4 <HAL_I2C_Master_Transmit>
	uint16_t value;
	HAL_I2C_Master_Receive( &MY_I2C, LM75_ADDRESS, (uint8_t*)&value, 2, 500 );
 800187c:	f107 020e 	add.w	r2, r7, #14
 8001880:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8001884:	9300      	str	r3, [sp, #0]
 8001886:	2302      	movs	r3, #2
 8001888:	2190      	movs	r1, #144	; 0x90
 800188a:	481a      	ldr	r0, [pc, #104]	; (80018f4 <LM75_Temperature_9Bit_ReadReg+0x94>)
 800188c:	f003 fd08 	bl	80052a0 <HAL_I2C_Master_Receive>
	value = ((( value >> 8 ) | ( value << 8 )) >> 7) & 0x01FF;
 8001890:	89fb      	ldrh	r3, [r7, #14]
 8001892:	0a1b      	lsrs	r3, r3, #8
 8001894:	b29b      	uxth	r3, r3
 8001896:	461a      	mov	r2, r3
 8001898:	89fb      	ldrh	r3, [r7, #14]
 800189a:	021b      	lsls	r3, r3, #8
 800189c:	4313      	orrs	r3, r2
 800189e:	11db      	asrs	r3, r3, #7
 80018a0:	b29b      	uxth	r3, r3
 80018a2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80018a6:	b29b      	uxth	r3, r3
 80018a8:	81fb      	strh	r3, [r7, #14]
	if( value & 0x0100 ){
 80018aa:	89fb      	ldrh	r3, [r7, #14]
 80018ac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80018b0:	2b00      	cmp	r3, #0
 80018b2:	d010      	beq.n	80018d6 <LM75_Temperature_9Bit_ReadReg+0x76>
		value = (0x01FE ^ value) + 2;
 80018b4:	89fb      	ldrh	r3, [r7, #14]
 80018b6:	f483 73ff 	eor.w	r3, r3, #510	; 0x1fe
 80018ba:	b29b      	uxth	r3, r3
 80018bc:	3302      	adds	r3, #2
 80018be:	b29b      	uxth	r3, r3
 80018c0:	81fb      	strh	r3, [r7, #14]
		return (float)( value * (-0.5f) );
 80018c2:	89fb      	ldrh	r3, [r7, #14]
 80018c4:	ee07 3a90 	vmov	s15, r3
 80018c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80018cc:	eebe 7a00 	vmov.f32	s14, #224	; 0xbf000000 -0.5
 80018d0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80018d4:	e008      	b.n	80018e8 <LM75_Temperature_9Bit_ReadReg+0x88>
	}
	else{
		return (float)( value * 0.5f );
 80018d6:	89fb      	ldrh	r3, [r7, #14]
 80018d8:	ee07 3a90 	vmov	s15, r3
 80018dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80018e0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80018e4:	ee67 7a87 	vmul.f32	s15, s15, s14
	}

}
 80018e8:	eeb0 0a67 	vmov.f32	s0, s15
 80018ec:	3710      	adds	r7, #16
 80018ee:	46bd      	mov	sp, r7
 80018f0:	bd80      	pop	{r7, pc}
 80018f2:	bf00      	nop
 80018f4:	20000158 	.word	0x20000158

080018f8 <LM75_TemperatureRead>:

	HAL_I2C_Master_Transmit( &MY_I2C, LM75_ADDRESS, buff, 2, 500 );
}


float LM75_TemperatureRead(void){
 80018f8:	b580      	push	{r7, lr}
 80018fa:	af00      	add	r7, sp, #0
	#ifdef LM75_11BIT
		return LM75_Temperature_11Bit_ReadReg( LM75_TEMPERATURE );
	#endif

	#ifdef LM75_9BIT
		return LM75_Temperature_9Bit_ReadReg( LM75_TEMPERATURE );
 80018fc:	2000      	movs	r0, #0
 80018fe:	f7ff ffaf 	bl	8001860 <LM75_Temperature_9Bit_ReadReg>
 8001902:	eef0 7a40 	vmov.f32	s15, s0
	#endif
}
 8001906:	eeb0 0a67 	vmov.f32	s0, s15
 800190a:	bd80      	pop	{r7, pc}

0800190c <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 800190c:	b480      	push	{r7}
 800190e:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001910:	4b04      	ldr	r3, [pc, #16]	; (8001924 <__NVIC_GetPriorityGrouping+0x18>)
 8001912:	68db      	ldr	r3, [r3, #12]
 8001914:	0a1b      	lsrs	r3, r3, #8
 8001916:	f003 0307 	and.w	r3, r3, #7
}
 800191a:	4618      	mov	r0, r3
 800191c:	46bd      	mov	sp, r7
 800191e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001922:	4770      	bx	lr
 8001924:	e000ed00 	.word	0xe000ed00

08001928 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001928:	b480      	push	{r7}
 800192a:	b083      	sub	sp, #12
 800192c:	af00      	add	r7, sp, #0
 800192e:	4603      	mov	r3, r0
 8001930:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001932:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001936:	2b00      	cmp	r3, #0
 8001938:	db0b      	blt.n	8001952 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800193a:	79fb      	ldrb	r3, [r7, #7]
 800193c:	f003 021f 	and.w	r2, r3, #31
 8001940:	4907      	ldr	r1, [pc, #28]	; (8001960 <__NVIC_EnableIRQ+0x38>)
 8001942:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001946:	095b      	lsrs	r3, r3, #5
 8001948:	2001      	movs	r0, #1
 800194a:	fa00 f202 	lsl.w	r2, r0, r2
 800194e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8001952:	bf00      	nop
 8001954:	370c      	adds	r7, #12
 8001956:	46bd      	mov	sp, r7
 8001958:	f85d 7b04 	ldr.w	r7, [sp], #4
 800195c:	4770      	bx	lr
 800195e:	bf00      	nop
 8001960:	e000e100 	.word	0xe000e100

08001964 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001964:	b480      	push	{r7}
 8001966:	b083      	sub	sp, #12
 8001968:	af00      	add	r7, sp, #0
 800196a:	4603      	mov	r3, r0
 800196c:	6039      	str	r1, [r7, #0]
 800196e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001970:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001974:	2b00      	cmp	r3, #0
 8001976:	db0a      	blt.n	800198e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001978:	683b      	ldr	r3, [r7, #0]
 800197a:	b2da      	uxtb	r2, r3
 800197c:	490c      	ldr	r1, [pc, #48]	; (80019b0 <__NVIC_SetPriority+0x4c>)
 800197e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001982:	0112      	lsls	r2, r2, #4
 8001984:	b2d2      	uxtb	r2, r2
 8001986:	440b      	add	r3, r1
 8001988:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800198c:	e00a      	b.n	80019a4 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800198e:	683b      	ldr	r3, [r7, #0]
 8001990:	b2da      	uxtb	r2, r3
 8001992:	4908      	ldr	r1, [pc, #32]	; (80019b4 <__NVIC_SetPriority+0x50>)
 8001994:	79fb      	ldrb	r3, [r7, #7]
 8001996:	f003 030f 	and.w	r3, r3, #15
 800199a:	3b04      	subs	r3, #4
 800199c:	0112      	lsls	r2, r2, #4
 800199e:	b2d2      	uxtb	r2, r2
 80019a0:	440b      	add	r3, r1
 80019a2:	761a      	strb	r2, [r3, #24]
}
 80019a4:	bf00      	nop
 80019a6:	370c      	adds	r7, #12
 80019a8:	46bd      	mov	sp, r7
 80019aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019ae:	4770      	bx	lr
 80019b0:	e000e100 	.word	0xe000e100
 80019b4:	e000ed00 	.word	0xe000ed00

080019b8 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80019b8:	b480      	push	{r7}
 80019ba:	b089      	sub	sp, #36	; 0x24
 80019bc:	af00      	add	r7, sp, #0
 80019be:	60f8      	str	r0, [r7, #12]
 80019c0:	60b9      	str	r1, [r7, #8]
 80019c2:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80019c4:	68fb      	ldr	r3, [r7, #12]
 80019c6:	f003 0307 	and.w	r3, r3, #7
 80019ca:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80019cc:	69fb      	ldr	r3, [r7, #28]
 80019ce:	f1c3 0307 	rsb	r3, r3, #7
 80019d2:	2b04      	cmp	r3, #4
 80019d4:	bf28      	it	cs
 80019d6:	2304      	movcs	r3, #4
 80019d8:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80019da:	69fb      	ldr	r3, [r7, #28]
 80019dc:	3304      	adds	r3, #4
 80019de:	2b06      	cmp	r3, #6
 80019e0:	d902      	bls.n	80019e8 <NVIC_EncodePriority+0x30>
 80019e2:	69fb      	ldr	r3, [r7, #28]
 80019e4:	3b03      	subs	r3, #3
 80019e6:	e000      	b.n	80019ea <NVIC_EncodePriority+0x32>
 80019e8:	2300      	movs	r3, #0
 80019ea:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80019ec:	f04f 32ff 	mov.w	r2, #4294967295
 80019f0:	69bb      	ldr	r3, [r7, #24]
 80019f2:	fa02 f303 	lsl.w	r3, r2, r3
 80019f6:	43da      	mvns	r2, r3
 80019f8:	68bb      	ldr	r3, [r7, #8]
 80019fa:	401a      	ands	r2, r3
 80019fc:	697b      	ldr	r3, [r7, #20]
 80019fe:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001a00:	f04f 31ff 	mov.w	r1, #4294967295
 8001a04:	697b      	ldr	r3, [r7, #20]
 8001a06:	fa01 f303 	lsl.w	r3, r1, r3
 8001a0a:	43d9      	mvns	r1, r3
 8001a0c:	687b      	ldr	r3, [r7, #4]
 8001a0e:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001a10:	4313      	orrs	r3, r2
         );
}
 8001a12:	4618      	mov	r0, r3
 8001a14:	3724      	adds	r7, #36	; 0x24
 8001a16:	46bd      	mov	sp, r7
 8001a18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a1c:	4770      	bx	lr

08001a1e <LL_ADC_DMA_GetRegAddr>:

  return data_reg_addr;
}
#else
__STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
{
 8001a1e:	b480      	push	{r7}
 8001a20:	b083      	sub	sp, #12
 8001a22:	af00      	add	r7, sp, #0
 8001a24:	6078      	str	r0, [r7, #4]
 8001a26:	6039      	str	r1, [r7, #0]
  /* Prevent unused argument compilation warning */
  (void)Register;

  /* Retrieve address of register DR */
  return (uint32_t) & (ADCx->DR);
 8001a28:	687b      	ldr	r3, [r7, #4]
 8001a2a:	334c      	adds	r3, #76	; 0x4c
}
 8001a2c:	4618      	mov	r0, r3
 8001a2e:	370c      	adds	r7, #12
 8001a30:	46bd      	mov	sp, r7
 8001a32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a36:	4770      	bx	lr

08001a38 <LL_ADC_REG_SetSequencerRanks>:
  *         (1) On STM32F4, parameter available only on ADC instance: ADC1.\n
  *         (2) On devices STM32F42x and STM32F43x, limitation: this internal channel is shared between temperature sensor and Vbat, only 1 measurement path must be enabled.
  * @retval None
  */
__STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channel)
{
 8001a38:	b480      	push	{r7}
 8001a3a:	b089      	sub	sp, #36	; 0x24
 8001a3c:	af00      	add	r7, sp, #0
 8001a3e:	60f8      	str	r0, [r7, #12]
 8001a40:	60b9      	str	r1, [r7, #8]
 8001a42:	607a      	str	r2, [r7, #4]
  /* Set bits with content of parameter "Channel" with bits position          */
  /* in register and register position depending on parameter "Rank".         */
  /* Parameters "Rank" and "Channel" are used with masks because containing   */
  /* other bits reserved for other purpose.                                   */
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, __ADC_MASK_SHIFT(Rank, ADC_REG_SQRX_REGOFFSET_MASK));
 8001a44:	68fb      	ldr	r3, [r7, #12]
 8001a46:	332c      	adds	r3, #44	; 0x2c
 8001a48:	4619      	mov	r1, r3
 8001a4a:	68bb      	ldr	r3, [r7, #8]
 8001a4c:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8001a50:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001a54:	617a      	str	r2, [r7, #20]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8001a56:	697a      	ldr	r2, [r7, #20]
 8001a58:	fa92 f2a2 	rbit	r2, r2
 8001a5c:	613a      	str	r2, [r7, #16]
    result |= value & 1U;
    s--;
  }
  result <<= s;                        /* shift when v's highest bits are zero */
#endif
  return result;
 8001a5e:	693a      	ldr	r2, [r7, #16]
 8001a60:	61ba      	str	r2, [r7, #24]
     optimisations using the logic "value was passed to __builtin_clz, so it
     is non-zero".
     ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
     single CLZ instruction.
   */
  if (value == 0U)
 8001a62:	69ba      	ldr	r2, [r7, #24]
 8001a64:	2a00      	cmp	r2, #0
 8001a66:	d101      	bne.n	8001a6c <LL_ADC_REG_SetSequencerRanks+0x34>
  {
    return 32U;
 8001a68:	2220      	movs	r2, #32
 8001a6a:	e003      	b.n	8001a74 <LL_ADC_REG_SetSequencerRanks+0x3c>
  }
  return __builtin_clz(value);
 8001a6c:	69ba      	ldr	r2, [r7, #24]
 8001a6e:	fab2 f282 	clz	r2, r2
 8001a72:	b2d2      	uxtb	r2, r2
 8001a74:	40d3      	lsrs	r3, r2
 8001a76:	009b      	lsls	r3, r3, #2
 8001a78:	440b      	add	r3, r1
 8001a7a:	61fb      	str	r3, [r7, #28]

  MODIFY_REG(*preg,
 8001a7c:	69fb      	ldr	r3, [r7, #28]
 8001a7e:	681a      	ldr	r2, [r3, #0]
 8001a80:	68bb      	ldr	r3, [r7, #8]
 8001a82:	f003 031f 	and.w	r3, r3, #31
 8001a86:	211f      	movs	r1, #31
 8001a88:	fa01 f303 	lsl.w	r3, r1, r3
 8001a8c:	43db      	mvns	r3, r3
 8001a8e:	401a      	ands	r2, r3
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	f003 011f 	and.w	r1, r3, #31
 8001a96:	68bb      	ldr	r3, [r7, #8]
 8001a98:	f003 031f 	and.w	r3, r3, #31
 8001a9c:	fa01 f303 	lsl.w	r3, r1, r3
 8001aa0:	431a      	orrs	r2, r3
 8001aa2:	69fb      	ldr	r3, [r7, #28]
 8001aa4:	601a      	str	r2, [r3, #0]
             ADC_CHANNEL_ID_NUMBER_MASK << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
             (Channel & ADC_CHANNEL_ID_NUMBER_MASK) << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
}
 8001aa6:	bf00      	nop
 8001aa8:	3724      	adds	r7, #36	; 0x24
 8001aaa:	46bd      	mov	sp, r7
 8001aac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ab0:	4770      	bx	lr

08001ab2 <LL_ADC_REG_SetFlagEndOfConversion>:
  *         @arg @ref LL_ADC_REG_FLAG_EOC_SEQUENCE_CONV
  *         @arg @ref LL_ADC_REG_FLAG_EOC_UNITARY_CONV
  * @retval None
  */
__STATIC_INLINE void LL_ADC_REG_SetFlagEndOfConversion(ADC_TypeDef *ADCx, uint32_t EocSelection)
{
 8001ab2:	b480      	push	{r7}
 8001ab4:	b083      	sub	sp, #12
 8001ab6:	af00      	add	r7, sp, #0
 8001ab8:	6078      	str	r0, [r7, #4]
 8001aba:	6039      	str	r1, [r7, #0]
  MODIFY_REG(ADCx->CR2, ADC_CR2_EOCS, EocSelection);
 8001abc:	687b      	ldr	r3, [r7, #4]
 8001abe:	689b      	ldr	r3, [r3, #8]
 8001ac0:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8001ac4:	683b      	ldr	r3, [r7, #0]
 8001ac6:	431a      	orrs	r2, r3
 8001ac8:	687b      	ldr	r3, [r7, #4]
 8001aca:	609a      	str	r2, [r3, #8]
}
 8001acc:	bf00      	nop
 8001ace:	370c      	adds	r7, #12
 8001ad0:	46bd      	mov	sp, r7
 8001ad2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ad6:	4770      	bx	lr

08001ad8 <LL_ADC_SetChannelSamplingTime>:
  *         @arg @ref LL_ADC_SAMPLINGTIME_144CYCLES
  *         @arg @ref LL_ADC_SAMPLINGTIME_480CYCLES
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t SamplingTime)
{
 8001ad8:	b480      	push	{r7}
 8001ada:	b08f      	sub	sp, #60	; 0x3c
 8001adc:	af00      	add	r7, sp, #0
 8001ade:	60f8      	str	r0, [r7, #12]
 8001ae0:	60b9      	str	r1, [r7, #8]
 8001ae2:	607a      	str	r2, [r7, #4]
  /* Set bits with content of parameter "SamplingTime" with bits position     */
  /* in register and register position depending on parameter "Channel".      */
  /* Parameter "Channel" is used with masks because containing                */
  /* other bits reserved for other purpose.                                   */
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, __ADC_MASK_SHIFT(Channel, ADC_CHANNEL_SMPRX_REGOFFSET_MASK));
 8001ae4:	68fb      	ldr	r3, [r7, #12]
 8001ae6:	330c      	adds	r3, #12
 8001ae8:	4619      	mov	r1, r3
 8001aea:	68bb      	ldr	r3, [r7, #8]
 8001aec:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001af0:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8001af4:	617a      	str	r2, [r7, #20]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8001af6:	697a      	ldr	r2, [r7, #20]
 8001af8:	fa92 f2a2 	rbit	r2, r2
 8001afc:	613a      	str	r2, [r7, #16]
  return result;
 8001afe:	693a      	ldr	r2, [r7, #16]
 8001b00:	61ba      	str	r2, [r7, #24]
  if (value == 0U)
 8001b02:	69ba      	ldr	r2, [r7, #24]
 8001b04:	2a00      	cmp	r2, #0
 8001b06:	d101      	bne.n	8001b0c <LL_ADC_SetChannelSamplingTime+0x34>
    return 32U;
 8001b08:	2220      	movs	r2, #32
 8001b0a:	e003      	b.n	8001b14 <LL_ADC_SetChannelSamplingTime+0x3c>
  return __builtin_clz(value);
 8001b0c:	69ba      	ldr	r2, [r7, #24]
 8001b0e:	fab2 f282 	clz	r2, r2
 8001b12:	b2d2      	uxtb	r2, r2
 8001b14:	40d3      	lsrs	r3, r2
 8001b16:	009b      	lsls	r3, r3, #2
 8001b18:	440b      	add	r3, r1
 8001b1a:	637b      	str	r3, [r7, #52]	; 0x34

  MODIFY_REG(*preg,
 8001b1c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001b1e:	681a      	ldr	r2, [r3, #0]
 8001b20:	68bb      	ldr	r3, [r7, #8]
 8001b22:	f003 73f8 	and.w	r3, r3, #32505856	; 0x1f00000
 8001b26:	f04f 71f8 	mov.w	r1, #32505856	; 0x1f00000
 8001b2a:	6239      	str	r1, [r7, #32]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8001b2c:	6a39      	ldr	r1, [r7, #32]
 8001b2e:	fa91 f1a1 	rbit	r1, r1
 8001b32:	61f9      	str	r1, [r7, #28]
  return result;
 8001b34:	69f9      	ldr	r1, [r7, #28]
 8001b36:	6279      	str	r1, [r7, #36]	; 0x24
  if (value == 0U)
 8001b38:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8001b3a:	2900      	cmp	r1, #0
 8001b3c:	d101      	bne.n	8001b42 <LL_ADC_SetChannelSamplingTime+0x6a>
    return 32U;
 8001b3e:	2120      	movs	r1, #32
 8001b40:	e003      	b.n	8001b4a <LL_ADC_SetChannelSamplingTime+0x72>
  return __builtin_clz(value);
 8001b42:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8001b44:	fab1 f181 	clz	r1, r1
 8001b48:	b2c9      	uxtb	r1, r1
 8001b4a:	40cb      	lsrs	r3, r1
 8001b4c:	2107      	movs	r1, #7
 8001b4e:	fa01 f303 	lsl.w	r3, r1, r3
 8001b52:	43db      	mvns	r3, r3
 8001b54:	401a      	ands	r2, r3
 8001b56:	68bb      	ldr	r3, [r7, #8]
 8001b58:	f003 73f8 	and.w	r3, r3, #32505856	; 0x1f00000
 8001b5c:	f04f 71f8 	mov.w	r1, #32505856	; 0x1f00000
 8001b60:	62f9      	str	r1, [r7, #44]	; 0x2c
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8001b62:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8001b64:	fa91 f1a1 	rbit	r1, r1
 8001b68:	62b9      	str	r1, [r7, #40]	; 0x28
  return result;
 8001b6a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001b6c:	6339      	str	r1, [r7, #48]	; 0x30
  if (value == 0U)
 8001b6e:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8001b70:	2900      	cmp	r1, #0
 8001b72:	d101      	bne.n	8001b78 <LL_ADC_SetChannelSamplingTime+0xa0>
    return 32U;
 8001b74:	2120      	movs	r1, #32
 8001b76:	e003      	b.n	8001b80 <LL_ADC_SetChannelSamplingTime+0xa8>
  return __builtin_clz(value);
 8001b78:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8001b7a:	fab1 f181 	clz	r1, r1
 8001b7e:	b2c9      	uxtb	r1, r1
 8001b80:	40cb      	lsrs	r3, r1
 8001b82:	6879      	ldr	r1, [r7, #4]
 8001b84:	fa01 f303 	lsl.w	r3, r1, r3
 8001b88:	431a      	orrs	r2, r3
 8001b8a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001b8c:	601a      	str	r2, [r3, #0]
             ADC_SMPR2_SMP0 << __ADC_MASK_SHIFT(Channel, ADC_CHANNEL_SMPx_BITOFFSET_MASK),
             SamplingTime   << __ADC_MASK_SHIFT(Channel, ADC_CHANNEL_SMPx_BITOFFSET_MASK));
}
 8001b8e:	bf00      	nop
 8001b90:	373c      	adds	r7, #60	; 0x3c
 8001b92:	46bd      	mov	sp, r7
 8001b94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b98:	4770      	bx	lr

08001b9a <LL_ADC_Enable>:
  * @rmtoll CR2      ADON           LL_ADC_Enable
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
{
 8001b9a:	b480      	push	{r7}
 8001b9c:	b083      	sub	sp, #12
 8001b9e:	af00      	add	r7, sp, #0
 8001ba0:	6078      	str	r0, [r7, #4]
  SET_BIT(ADCx->CR2, ADC_CR2_ADON);
 8001ba2:	687b      	ldr	r3, [r7, #4]
 8001ba4:	689b      	ldr	r3, [r3, #8]
 8001ba6:	f043 0201 	orr.w	r2, r3, #1
 8001baa:	687b      	ldr	r3, [r7, #4]
 8001bac:	609a      	str	r2, [r3, #8]
}
 8001bae:	bf00      	nop
 8001bb0:	370c      	adds	r7, #12
 8001bb2:	46bd      	mov	sp, r7
 8001bb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bb8:	4770      	bx	lr

08001bba <LL_ADC_IsEnabled>:
  * @rmtoll CR2      ADON           LL_ADC_IsEnabled
  * @param  ADCx ADC instance
  * @retval 0: ADC is disabled, 1: ADC is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
{
 8001bba:	b480      	push	{r7}
 8001bbc:	b083      	sub	sp, #12
 8001bbe:	af00      	add	r7, sp, #0
 8001bc0:	6078      	str	r0, [r7, #4]
  return (READ_BIT(ADCx->CR2, ADC_CR2_ADON) == (ADC_CR2_ADON));
 8001bc2:	687b      	ldr	r3, [r7, #4]
 8001bc4:	689b      	ldr	r3, [r3, #8]
 8001bc6:	f003 0301 	and.w	r3, r3, #1
 8001bca:	2b01      	cmp	r3, #1
 8001bcc:	bf0c      	ite	eq
 8001bce:	2301      	moveq	r3, #1
 8001bd0:	2300      	movne	r3, #0
 8001bd2:	b2db      	uxtb	r3, r3
}
 8001bd4:	4618      	mov	r0, r3
 8001bd6:	370c      	adds	r7, #12
 8001bd8:	46bd      	mov	sp, r7
 8001bda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bde:	4770      	bx	lr

08001be0 <LL_ADC_REG_StartConversionExtTrig>:
  *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_REG_StartConversionExtTrig(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
{
 8001be0:	b480      	push	{r7}
 8001be2:	b083      	sub	sp, #12
 8001be4:	af00      	add	r7, sp, #0
 8001be6:	6078      	str	r0, [r7, #4]
 8001be8:	6039      	str	r1, [r7, #0]
  SET_BIT(ADCx->CR2, ExternalTriggerEdge);
 8001bea:	687b      	ldr	r3, [r7, #4]
 8001bec:	689a      	ldr	r2, [r3, #8]
 8001bee:	683b      	ldr	r3, [r7, #0]
 8001bf0:	431a      	orrs	r2, r3
 8001bf2:	687b      	ldr	r3, [r7, #4]
 8001bf4:	609a      	str	r2, [r3, #8]
}
 8001bf6:	bf00      	nop
 8001bf8:	370c      	adds	r7, #12
 8001bfa:	46bd      	mov	sp, r7
 8001bfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c00:	4770      	bx	lr

08001c02 <LL_ADC_EnableIT_OVR>:
  * @rmtoll CR1      OVRIE          LL_ADC_EnableIT_OVR
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
{
 8001c02:	b480      	push	{r7}
 8001c04:	b083      	sub	sp, #12
 8001c06:	af00      	add	r7, sp, #0
 8001c08:	6078      	str	r0, [r7, #4]
  SET_BIT(ADCx->CR1, LL_ADC_IT_OVR);
 8001c0a:	687b      	ldr	r3, [r7, #4]
 8001c0c:	685b      	ldr	r3, [r3, #4]
 8001c0e:	f043 6280 	orr.w	r2, r3, #67108864	; 0x4000000
 8001c12:	687b      	ldr	r3, [r7, #4]
 8001c14:	605a      	str	r2, [r3, #4]
}
 8001c16:	bf00      	nop
 8001c18:	370c      	adds	r7, #12
 8001c1a:	46bd      	mov	sp, r7
 8001c1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c20:	4770      	bx	lr
	...

08001c24 <LL_AHB1_GRP1_EnableClock>:
  *
  *         (*) value not defined in all devices.
  * @retval None
*/
__STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
{
 8001c24:	b480      	push	{r7}
 8001c26:	b085      	sub	sp, #20
 8001c28:	af00      	add	r7, sp, #0
 8001c2a:	6078      	str	r0, [r7, #4]
  __IO uint32_t tmpreg;
  SET_BIT(RCC->AHB1ENR, Periphs);
 8001c2c:	4b08      	ldr	r3, [pc, #32]	; (8001c50 <LL_AHB1_GRP1_EnableClock+0x2c>)
 8001c2e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c30:	4907      	ldr	r1, [pc, #28]	; (8001c50 <LL_AHB1_GRP1_EnableClock+0x2c>)
 8001c32:	687b      	ldr	r3, [r7, #4]
 8001c34:	4313      	orrs	r3, r2
 8001c36:	630b      	str	r3, [r1, #48]	; 0x30
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 8001c38:	4b05      	ldr	r3, [pc, #20]	; (8001c50 <LL_AHB1_GRP1_EnableClock+0x2c>)
 8001c3a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c3c:	687b      	ldr	r3, [r7, #4]
 8001c3e:	4013      	ands	r3, r2
 8001c40:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 8001c42:	68fb      	ldr	r3, [r7, #12]
}
 8001c44:	bf00      	nop
 8001c46:	3714      	adds	r7, #20
 8001c48:	46bd      	mov	sp, r7
 8001c4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c4e:	4770      	bx	lr
 8001c50:	40023800 	.word	0x40023800

08001c54 <LL_APB2_GRP1_EnableClock>:
  *
  *         (*) value not defined in all devices.
  * @retval None
*/
__STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
{
 8001c54:	b480      	push	{r7}
 8001c56:	b085      	sub	sp, #20
 8001c58:	af00      	add	r7, sp, #0
 8001c5a:	6078      	str	r0, [r7, #4]
  __IO uint32_t tmpreg;
  SET_BIT(RCC->APB2ENR, Periphs);
 8001c5c:	4b08      	ldr	r3, [pc, #32]	; (8001c80 <LL_APB2_GRP1_EnableClock+0x2c>)
 8001c5e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c60:	4907      	ldr	r1, [pc, #28]	; (8001c80 <LL_APB2_GRP1_EnableClock+0x2c>)
 8001c62:	687b      	ldr	r3, [r7, #4]
 8001c64:	4313      	orrs	r3, r2
 8001c66:	644b      	str	r3, [r1, #68]	; 0x44
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 8001c68:	4b05      	ldr	r3, [pc, #20]	; (8001c80 <LL_APB2_GRP1_EnableClock+0x2c>)
 8001c6a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c6c:	687b      	ldr	r3, [r7, #4]
 8001c6e:	4013      	ands	r3, r2
 8001c70:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 8001c72:	68fb      	ldr	r3, [r7, #12]
}
 8001c74:	bf00      	nop
 8001c76:	3714      	adds	r7, #20
 8001c78:	46bd      	mov	sp, r7
 8001c7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c7e:	4770      	bx	lr
 8001c80:	40023800 	.word	0x40023800

08001c84 <LL_DMA_EnableStream>:
  *         @arg @ref LL_DMA_STREAM_6
  *         @arg @ref LL_DMA_STREAM_7
  * @retval None
  */
__STATIC_INLINE void LL_DMA_EnableStream(DMA_TypeDef *DMAx, uint32_t Stream)
{
 8001c84:	b480      	push	{r7}
 8001c86:	b083      	sub	sp, #12
 8001c88:	af00      	add	r7, sp, #0
 8001c8a:	6078      	str	r0, [r7, #4]
 8001c8c:	6039      	str	r1, [r7, #0]
  SET_BIT(((DMA_Stream_TypeDef *)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_EN);
 8001c8e:	4a0c      	ldr	r2, [pc, #48]	; (8001cc0 <LL_DMA_EnableStream+0x3c>)
 8001c90:	683b      	ldr	r3, [r7, #0]
 8001c92:	4413      	add	r3, r2
 8001c94:	781b      	ldrb	r3, [r3, #0]
 8001c96:	461a      	mov	r2, r3
 8001c98:	687b      	ldr	r3, [r7, #4]
 8001c9a:	4413      	add	r3, r2
 8001c9c:	681b      	ldr	r3, [r3, #0]
 8001c9e:	4908      	ldr	r1, [pc, #32]	; (8001cc0 <LL_DMA_EnableStream+0x3c>)
 8001ca0:	683a      	ldr	r2, [r7, #0]
 8001ca2:	440a      	add	r2, r1
 8001ca4:	7812      	ldrb	r2, [r2, #0]
 8001ca6:	4611      	mov	r1, r2
 8001ca8:	687a      	ldr	r2, [r7, #4]
 8001caa:	440a      	add	r2, r1
 8001cac:	f043 0301 	orr.w	r3, r3, #1
 8001cb0:	6013      	str	r3, [r2, #0]
}
 8001cb2:	bf00      	nop
 8001cb4:	370c      	adds	r7, #12
 8001cb6:	46bd      	mov	sp, r7
 8001cb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cbc:	4770      	bx	lr
 8001cbe:	bf00      	nop
 8001cc0:	0802de34 	.word	0x0802de34

08001cc4 <LL_DMA_SetDataTransferDirection>:
  *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
  *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Stream, uint32_t  Direction)
{
 8001cc4:	b480      	push	{r7}
 8001cc6:	b085      	sub	sp, #20
 8001cc8:	af00      	add	r7, sp, #0
 8001cca:	60f8      	str	r0, [r7, #12]
 8001ccc:	60b9      	str	r1, [r7, #8]
 8001cce:	607a      	str	r2, [r7, #4]
  MODIFY_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_DIR, Direction);
 8001cd0:	4a0d      	ldr	r2, [pc, #52]	; (8001d08 <LL_DMA_SetDataTransferDirection+0x44>)
 8001cd2:	68bb      	ldr	r3, [r7, #8]
 8001cd4:	4413      	add	r3, r2
 8001cd6:	781b      	ldrb	r3, [r3, #0]
 8001cd8:	461a      	mov	r2, r3
 8001cda:	68fb      	ldr	r3, [r7, #12]
 8001cdc:	4413      	add	r3, r2
 8001cde:	681b      	ldr	r3, [r3, #0]
 8001ce0:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 8001ce4:	4908      	ldr	r1, [pc, #32]	; (8001d08 <LL_DMA_SetDataTransferDirection+0x44>)
 8001ce6:	68bb      	ldr	r3, [r7, #8]
 8001ce8:	440b      	add	r3, r1
 8001cea:	781b      	ldrb	r3, [r3, #0]
 8001cec:	4619      	mov	r1, r3
 8001cee:	68fb      	ldr	r3, [r7, #12]
 8001cf0:	440b      	add	r3, r1
 8001cf2:	4619      	mov	r1, r3
 8001cf4:	687b      	ldr	r3, [r7, #4]
 8001cf6:	4313      	orrs	r3, r2
 8001cf8:	600b      	str	r3, [r1, #0]
}
 8001cfa:	bf00      	nop
 8001cfc:	3714      	adds	r7, #20
 8001cfe:	46bd      	mov	sp, r7
 8001d00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d04:	4770      	bx	lr
 8001d06:	bf00      	nop
 8001d08:	0802de34 	.word	0x0802de34

08001d0c <LL_DMA_SetMode>:
  *         @arg @ref LL_DMA_MODE_CIRCULAR
  *         @arg @ref LL_DMA_MODE_PFCTRL
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetMode(DMA_TypeDef *DMAx, uint32_t Stream, uint32_t Mode)
{
 8001d0c:	b480      	push	{r7}
 8001d0e:	b085      	sub	sp, #20
 8001d10:	af00      	add	r7, sp, #0
 8001d12:	60f8      	str	r0, [r7, #12]
 8001d14:	60b9      	str	r1, [r7, #8]
 8001d16:	607a      	str	r2, [r7, #4]
  MODIFY_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_CIRC | DMA_SxCR_PFCTRL, Mode);
 8001d18:	4a0d      	ldr	r2, [pc, #52]	; (8001d50 <LL_DMA_SetMode+0x44>)
 8001d1a:	68bb      	ldr	r3, [r7, #8]
 8001d1c:	4413      	add	r3, r2
 8001d1e:	781b      	ldrb	r3, [r3, #0]
 8001d20:	461a      	mov	r2, r3
 8001d22:	68fb      	ldr	r3, [r7, #12]
 8001d24:	4413      	add	r3, r2
 8001d26:	681b      	ldr	r3, [r3, #0]
 8001d28:	f423 7290 	bic.w	r2, r3, #288	; 0x120
 8001d2c:	4908      	ldr	r1, [pc, #32]	; (8001d50 <LL_DMA_SetMode+0x44>)
 8001d2e:	68bb      	ldr	r3, [r7, #8]
 8001d30:	440b      	add	r3, r1
 8001d32:	781b      	ldrb	r3, [r3, #0]
 8001d34:	4619      	mov	r1, r3
 8001d36:	68fb      	ldr	r3, [r7, #12]
 8001d38:	440b      	add	r3, r1
 8001d3a:	4619      	mov	r1, r3
 8001d3c:	687b      	ldr	r3, [r7, #4]
 8001d3e:	4313      	orrs	r3, r2
 8001d40:	600b      	str	r3, [r1, #0]
}
 8001d42:	bf00      	nop
 8001d44:	3714      	adds	r7, #20
 8001d46:	46bd      	mov	sp, r7
 8001d48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d4c:	4770      	bx	lr
 8001d4e:	bf00      	nop
 8001d50:	0802de34 	.word	0x0802de34

08001d54 <LL_DMA_SetPeriphIncMode>:
  *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
  *         @arg @ref LL_DMA_PERIPH_INCREMENT
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Stream, uint32_t IncrementMode)
{
 8001d54:	b480      	push	{r7}
 8001d56:	b085      	sub	sp, #20
 8001d58:	af00      	add	r7, sp, #0
 8001d5a:	60f8      	str	r0, [r7, #12]
 8001d5c:	60b9      	str	r1, [r7, #8]
 8001d5e:	607a      	str	r2, [r7, #4]
  MODIFY_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_PINC, IncrementMode);
 8001d60:	4a0d      	ldr	r2, [pc, #52]	; (8001d98 <LL_DMA_SetPeriphIncMode+0x44>)
 8001d62:	68bb      	ldr	r3, [r7, #8]
 8001d64:	4413      	add	r3, r2
 8001d66:	781b      	ldrb	r3, [r3, #0]
 8001d68:	461a      	mov	r2, r3
 8001d6a:	68fb      	ldr	r3, [r7, #12]
 8001d6c:	4413      	add	r3, r2
 8001d6e:	681b      	ldr	r3, [r3, #0]
 8001d70:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 8001d74:	4908      	ldr	r1, [pc, #32]	; (8001d98 <LL_DMA_SetPeriphIncMode+0x44>)
 8001d76:	68bb      	ldr	r3, [r7, #8]
 8001d78:	440b      	add	r3, r1
 8001d7a:	781b      	ldrb	r3, [r3, #0]
 8001d7c:	4619      	mov	r1, r3
 8001d7e:	68fb      	ldr	r3, [r7, #12]
 8001d80:	440b      	add	r3, r1
 8001d82:	4619      	mov	r1, r3
 8001d84:	687b      	ldr	r3, [r7, #4]
 8001d86:	4313      	orrs	r3, r2
 8001d88:	600b      	str	r3, [r1, #0]
}
 8001d8a:	bf00      	nop
 8001d8c:	3714      	adds	r7, #20
 8001d8e:	46bd      	mov	sp, r7
 8001d90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d94:	4770      	bx	lr
 8001d96:	bf00      	nop
 8001d98:	0802de34 	.word	0x0802de34

08001d9c <LL_DMA_SetMemoryIncMode>:
  *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
  *         @arg @ref LL_DMA_MEMORY_INCREMENT
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Stream, uint32_t IncrementMode)
{
 8001d9c:	b480      	push	{r7}
 8001d9e:	b085      	sub	sp, #20
 8001da0:	af00      	add	r7, sp, #0
 8001da2:	60f8      	str	r0, [r7, #12]
 8001da4:	60b9      	str	r1, [r7, #8]
 8001da6:	607a      	str	r2, [r7, #4]
  MODIFY_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_MINC, IncrementMode);
 8001da8:	4a0d      	ldr	r2, [pc, #52]	; (8001de0 <LL_DMA_SetMemoryIncMode+0x44>)
 8001daa:	68bb      	ldr	r3, [r7, #8]
 8001dac:	4413      	add	r3, r2
 8001dae:	781b      	ldrb	r3, [r3, #0]
 8001db0:	461a      	mov	r2, r3
 8001db2:	68fb      	ldr	r3, [r7, #12]
 8001db4:	4413      	add	r3, r2
 8001db6:	681b      	ldr	r3, [r3, #0]
 8001db8:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8001dbc:	4908      	ldr	r1, [pc, #32]	; (8001de0 <LL_DMA_SetMemoryIncMode+0x44>)
 8001dbe:	68bb      	ldr	r3, [r7, #8]
 8001dc0:	440b      	add	r3, r1
 8001dc2:	781b      	ldrb	r3, [r3, #0]
 8001dc4:	4619      	mov	r1, r3
 8001dc6:	68fb      	ldr	r3, [r7, #12]
 8001dc8:	440b      	add	r3, r1
 8001dca:	4619      	mov	r1, r3
 8001dcc:	687b      	ldr	r3, [r7, #4]
 8001dce:	4313      	orrs	r3, r2
 8001dd0:	600b      	str	r3, [r1, #0]
}
 8001dd2:	bf00      	nop
 8001dd4:	3714      	adds	r7, #20
 8001dd6:	46bd      	mov	sp, r7
 8001dd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ddc:	4770      	bx	lr
 8001dde:	bf00      	nop
 8001de0:	0802de34 	.word	0x0802de34

08001de4 <LL_DMA_SetPeriphSize>:
  *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
  *         @arg @ref LL_DMA_PDATAALIGN_WORD
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetPeriphSize(DMA_TypeDef *DMAx, uint32_t Stream, uint32_t  Size)
{
 8001de4:	b480      	push	{r7}
 8001de6:	b085      	sub	sp, #20
 8001de8:	af00      	add	r7, sp, #0
 8001dea:	60f8      	str	r0, [r7, #12]
 8001dec:	60b9      	str	r1, [r7, #8]
 8001dee:	607a      	str	r2, [r7, #4]
  MODIFY_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_PSIZE, Size);
 8001df0:	4a0d      	ldr	r2, [pc, #52]	; (8001e28 <LL_DMA_SetPeriphSize+0x44>)
 8001df2:	68bb      	ldr	r3, [r7, #8]
 8001df4:	4413      	add	r3, r2
 8001df6:	781b      	ldrb	r3, [r3, #0]
 8001df8:	461a      	mov	r2, r3
 8001dfa:	68fb      	ldr	r3, [r7, #12]
 8001dfc:	4413      	add	r3, r2
 8001dfe:	681b      	ldr	r3, [r3, #0]
 8001e00:	f423 52c0 	bic.w	r2, r3, #6144	; 0x1800
 8001e04:	4908      	ldr	r1, [pc, #32]	; (8001e28 <LL_DMA_SetPeriphSize+0x44>)
 8001e06:	68bb      	ldr	r3, [r7, #8]
 8001e08:	440b      	add	r3, r1
 8001e0a:	781b      	ldrb	r3, [r3, #0]
 8001e0c:	4619      	mov	r1, r3
 8001e0e:	68fb      	ldr	r3, [r7, #12]
 8001e10:	440b      	add	r3, r1
 8001e12:	4619      	mov	r1, r3
 8001e14:	687b      	ldr	r3, [r7, #4]
 8001e16:	4313      	orrs	r3, r2
 8001e18:	600b      	str	r3, [r1, #0]
}
 8001e1a:	bf00      	nop
 8001e1c:	3714      	adds	r7, #20
 8001e1e:	46bd      	mov	sp, r7
 8001e20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e24:	4770      	bx	lr
 8001e26:	bf00      	nop
 8001e28:	0802de34 	.word	0x0802de34

08001e2c <LL_DMA_SetMemorySize>:
  *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
  *         @arg @ref LL_DMA_MDATAALIGN_WORD
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetMemorySize(DMA_TypeDef *DMAx, uint32_t Stream, uint32_t  Size)
{
 8001e2c:	b480      	push	{r7}
 8001e2e:	b085      	sub	sp, #20
 8001e30:	af00      	add	r7, sp, #0
 8001e32:	60f8      	str	r0, [r7, #12]
 8001e34:	60b9      	str	r1, [r7, #8]
 8001e36:	607a      	str	r2, [r7, #4]
  MODIFY_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_MSIZE, Size);
 8001e38:	4a0d      	ldr	r2, [pc, #52]	; (8001e70 <LL_DMA_SetMemorySize+0x44>)
 8001e3a:	68bb      	ldr	r3, [r7, #8]
 8001e3c:	4413      	add	r3, r2
 8001e3e:	781b      	ldrb	r3, [r3, #0]
 8001e40:	461a      	mov	r2, r3
 8001e42:	68fb      	ldr	r3, [r7, #12]
 8001e44:	4413      	add	r3, r2
 8001e46:	681b      	ldr	r3, [r3, #0]
 8001e48:	f423 42c0 	bic.w	r2, r3, #24576	; 0x6000
 8001e4c:	4908      	ldr	r1, [pc, #32]	; (8001e70 <LL_DMA_SetMemorySize+0x44>)
 8001e4e:	68bb      	ldr	r3, [r7, #8]
 8001e50:	440b      	add	r3, r1
 8001e52:	781b      	ldrb	r3, [r3, #0]
 8001e54:	4619      	mov	r1, r3
 8001e56:	68fb      	ldr	r3, [r7, #12]
 8001e58:	440b      	add	r3, r1
 8001e5a:	4619      	mov	r1, r3
 8001e5c:	687b      	ldr	r3, [r7, #4]
 8001e5e:	4313      	orrs	r3, r2
 8001e60:	600b      	str	r3, [r1, #0]
}
 8001e62:	bf00      	nop
 8001e64:	3714      	adds	r7, #20
 8001e66:	46bd      	mov	sp, r7
 8001e68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e6c:	4770      	bx	lr
 8001e6e:	bf00      	nop
 8001e70:	0802de34 	.word	0x0802de34

08001e74 <LL_DMA_SetStreamPriorityLevel>:
  *         @arg @ref LL_DMA_PRIORITY_HIGH
  *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetStreamPriorityLevel(DMA_TypeDef *DMAx, uint32_t Stream, uint32_t  Priority)
{
 8001e74:	b480      	push	{r7}
 8001e76:	b085      	sub	sp, #20
 8001e78:	af00      	add	r7, sp, #0
 8001e7a:	60f8      	str	r0, [r7, #12]
 8001e7c:	60b9      	str	r1, [r7, #8]
 8001e7e:	607a      	str	r2, [r7, #4]
  MODIFY_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_PL, Priority);
 8001e80:	4a0d      	ldr	r2, [pc, #52]	; (8001eb8 <LL_DMA_SetStreamPriorityLevel+0x44>)
 8001e82:	68bb      	ldr	r3, [r7, #8]
 8001e84:	4413      	add	r3, r2
 8001e86:	781b      	ldrb	r3, [r3, #0]
 8001e88:	461a      	mov	r2, r3
 8001e8a:	68fb      	ldr	r3, [r7, #12]
 8001e8c:	4413      	add	r3, r2
 8001e8e:	681b      	ldr	r3, [r3, #0]
 8001e90:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8001e94:	4908      	ldr	r1, [pc, #32]	; (8001eb8 <LL_DMA_SetStreamPriorityLevel+0x44>)
 8001e96:	68bb      	ldr	r3, [r7, #8]
 8001e98:	440b      	add	r3, r1
 8001e9a:	781b      	ldrb	r3, [r3, #0]
 8001e9c:	4619      	mov	r1, r3
 8001e9e:	68fb      	ldr	r3, [r7, #12]
 8001ea0:	440b      	add	r3, r1
 8001ea2:	4619      	mov	r1, r3
 8001ea4:	687b      	ldr	r3, [r7, #4]
 8001ea6:	4313      	orrs	r3, r2
 8001ea8:	600b      	str	r3, [r1, #0]
}
 8001eaa:	bf00      	nop
 8001eac:	3714      	adds	r7, #20
 8001eae:	46bd      	mov	sp, r7
 8001eb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eb4:	4770      	bx	lr
 8001eb6:	bf00      	nop
 8001eb8:	0802de34 	.word	0x0802de34

08001ebc <LL_DMA_SetDataLength>:
  *         @arg @ref LL_DMA_STREAM_7
  * @param  NbData Between 0 to 0xFFFFFFFF
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetDataLength(DMA_TypeDef* DMAx, uint32_t Stream, uint32_t NbData)
{
 8001ebc:	b480      	push	{r7}
 8001ebe:	b085      	sub	sp, #20
 8001ec0:	af00      	add	r7, sp, #0
 8001ec2:	60f8      	str	r0, [r7, #12]
 8001ec4:	60b9      	str	r1, [r7, #8]
 8001ec6:	607a      	str	r2, [r7, #4]
  MODIFY_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->NDTR, DMA_SxNDT, NbData);
 8001ec8:	4a0d      	ldr	r2, [pc, #52]	; (8001f00 <LL_DMA_SetDataLength+0x44>)
 8001eca:	68bb      	ldr	r3, [r7, #8]
 8001ecc:	4413      	add	r3, r2
 8001ece:	781b      	ldrb	r3, [r3, #0]
 8001ed0:	461a      	mov	r2, r3
 8001ed2:	68fb      	ldr	r3, [r7, #12]
 8001ed4:	4413      	add	r3, r2
 8001ed6:	685b      	ldr	r3, [r3, #4]
 8001ed8:	0c1b      	lsrs	r3, r3, #16
 8001eda:	041b      	lsls	r3, r3, #16
 8001edc:	4908      	ldr	r1, [pc, #32]	; (8001f00 <LL_DMA_SetDataLength+0x44>)
 8001ede:	68ba      	ldr	r2, [r7, #8]
 8001ee0:	440a      	add	r2, r1
 8001ee2:	7812      	ldrb	r2, [r2, #0]
 8001ee4:	4611      	mov	r1, r2
 8001ee6:	68fa      	ldr	r2, [r7, #12]
 8001ee8:	440a      	add	r2, r1
 8001eea:	4611      	mov	r1, r2
 8001eec:	687a      	ldr	r2, [r7, #4]
 8001eee:	4313      	orrs	r3, r2
 8001ef0:	604b      	str	r3, [r1, #4]
}
 8001ef2:	bf00      	nop
 8001ef4:	3714      	adds	r7, #20
 8001ef6:	46bd      	mov	sp, r7
 8001ef8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001efc:	4770      	bx	lr
 8001efe:	bf00      	nop
 8001f00:	0802de34 	.word	0x0802de34

08001f04 <LL_DMA_SetChannelSelection>:
  *         @arg @ref LL_DMA_CHANNEL_6
  *         @arg @ref LL_DMA_CHANNEL_7
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetChannelSelection(DMA_TypeDef *DMAx, uint32_t Stream, uint32_t Channel)
{
 8001f04:	b480      	push	{r7}
 8001f06:	b085      	sub	sp, #20
 8001f08:	af00      	add	r7, sp, #0
 8001f0a:	60f8      	str	r0, [r7, #12]
 8001f0c:	60b9      	str	r1, [r7, #8]
 8001f0e:	607a      	str	r2, [r7, #4]
  MODIFY_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_CHSEL, Channel);
 8001f10:	4a0d      	ldr	r2, [pc, #52]	; (8001f48 <LL_DMA_SetChannelSelection+0x44>)
 8001f12:	68bb      	ldr	r3, [r7, #8]
 8001f14:	4413      	add	r3, r2
 8001f16:	781b      	ldrb	r3, [r3, #0]
 8001f18:	461a      	mov	r2, r3
 8001f1a:	68fb      	ldr	r3, [r7, #12]
 8001f1c:	4413      	add	r3, r2
 8001f1e:	681b      	ldr	r3, [r3, #0]
 8001f20:	f023 6260 	bic.w	r2, r3, #234881024	; 0xe000000
 8001f24:	4908      	ldr	r1, [pc, #32]	; (8001f48 <LL_DMA_SetChannelSelection+0x44>)
 8001f26:	68bb      	ldr	r3, [r7, #8]
 8001f28:	440b      	add	r3, r1
 8001f2a:	781b      	ldrb	r3, [r3, #0]
 8001f2c:	4619      	mov	r1, r3
 8001f2e:	68fb      	ldr	r3, [r7, #12]
 8001f30:	440b      	add	r3, r1
 8001f32:	4619      	mov	r1, r3
 8001f34:	687b      	ldr	r3, [r7, #4]
 8001f36:	4313      	orrs	r3, r2
 8001f38:	600b      	str	r3, [r1, #0]
}
 8001f3a:	bf00      	nop
 8001f3c:	3714      	adds	r7, #20
 8001f3e:	46bd      	mov	sp, r7
 8001f40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f44:	4770      	bx	lr
 8001f46:	bf00      	nop
 8001f48:	0802de34 	.word	0x0802de34

08001f4c <LL_DMA_DisableFifoMode>:
  *         @arg @ref LL_DMA_STREAM_6
  *         @arg @ref LL_DMA_STREAM_7
  * @retval None
  */
__STATIC_INLINE void LL_DMA_DisableFifoMode(DMA_TypeDef *DMAx, uint32_t Stream)
{
 8001f4c:	b480      	push	{r7}
 8001f4e:	b083      	sub	sp, #12
 8001f50:	af00      	add	r7, sp, #0
 8001f52:	6078      	str	r0, [r7, #4]
 8001f54:	6039      	str	r1, [r7, #0]
  CLEAR_BIT(((DMA_Stream_TypeDef *)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->FCR, DMA_SxFCR_DMDIS);
 8001f56:	4a0c      	ldr	r2, [pc, #48]	; (8001f88 <LL_DMA_DisableFifoMode+0x3c>)
 8001f58:	683b      	ldr	r3, [r7, #0]
 8001f5a:	4413      	add	r3, r2
 8001f5c:	781b      	ldrb	r3, [r3, #0]
 8001f5e:	461a      	mov	r2, r3
 8001f60:	687b      	ldr	r3, [r7, #4]
 8001f62:	4413      	add	r3, r2
 8001f64:	695b      	ldr	r3, [r3, #20]
 8001f66:	4908      	ldr	r1, [pc, #32]	; (8001f88 <LL_DMA_DisableFifoMode+0x3c>)
 8001f68:	683a      	ldr	r2, [r7, #0]
 8001f6a:	440a      	add	r2, r1
 8001f6c:	7812      	ldrb	r2, [r2, #0]
 8001f6e:	4611      	mov	r1, r2
 8001f70:	687a      	ldr	r2, [r7, #4]
 8001f72:	440a      	add	r2, r1
 8001f74:	f023 0304 	bic.w	r3, r3, #4
 8001f78:	6153      	str	r3, [r2, #20]
}
 8001f7a:	bf00      	nop
 8001f7c:	370c      	adds	r7, #12
 8001f7e:	46bd      	mov	sp, r7
 8001f80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f84:	4770      	bx	lr
 8001f86:	bf00      	nop
 8001f88:	0802de34 	.word	0x0802de34

08001f8c <LL_DMA_ConfigAddresses>:
  *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
  *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
  * @retval None
  */
__STATIC_INLINE void LL_DMA_ConfigAddresses(DMA_TypeDef* DMAx, uint32_t Stream, uint32_t SrcAddress, uint32_t DstAddress, uint32_t Direction)
{
 8001f8c:	b480      	push	{r7}
 8001f8e:	b085      	sub	sp, #20
 8001f90:	af00      	add	r7, sp, #0
 8001f92:	60f8      	str	r0, [r7, #12]
 8001f94:	60b9      	str	r1, [r7, #8]
 8001f96:	607a      	str	r2, [r7, #4]
 8001f98:	603b      	str	r3, [r7, #0]
  /* Direction Memory to Periph */
  if (Direction == LL_DMA_DIRECTION_MEMORY_TO_PERIPH)
 8001f9a:	69bb      	ldr	r3, [r7, #24]
 8001f9c:	2b40      	cmp	r3, #64	; 0x40
 8001f9e:	d114      	bne.n	8001fca <LL_DMA_ConfigAddresses+0x3e>
  {
    WRITE_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->M0AR, SrcAddress);
 8001fa0:	4a17      	ldr	r2, [pc, #92]	; (8002000 <LL_DMA_ConfigAddresses+0x74>)
 8001fa2:	68bb      	ldr	r3, [r7, #8]
 8001fa4:	4413      	add	r3, r2
 8001fa6:	781b      	ldrb	r3, [r3, #0]
 8001fa8:	461a      	mov	r2, r3
 8001faa:	68fb      	ldr	r3, [r7, #12]
 8001fac:	4413      	add	r3, r2
 8001fae:	461a      	mov	r2, r3
 8001fb0:	687b      	ldr	r3, [r7, #4]
 8001fb2:	60d3      	str	r3, [r2, #12]
    WRITE_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->PAR, DstAddress);
 8001fb4:	4a12      	ldr	r2, [pc, #72]	; (8002000 <LL_DMA_ConfigAddresses+0x74>)
 8001fb6:	68bb      	ldr	r3, [r7, #8]
 8001fb8:	4413      	add	r3, r2
 8001fba:	781b      	ldrb	r3, [r3, #0]
 8001fbc:	461a      	mov	r2, r3
 8001fbe:	68fb      	ldr	r3, [r7, #12]
 8001fc0:	4413      	add	r3, r2
 8001fc2:	461a      	mov	r2, r3
 8001fc4:	683b      	ldr	r3, [r7, #0]
 8001fc6:	6093      	str	r3, [r2, #8]
  else
  {
    WRITE_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->PAR, SrcAddress);
    WRITE_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->M0AR, DstAddress);
  }
}
 8001fc8:	e013      	b.n	8001ff2 <LL_DMA_ConfigAddresses+0x66>
    WRITE_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->PAR, SrcAddress);
 8001fca:	4a0d      	ldr	r2, [pc, #52]	; (8002000 <LL_DMA_ConfigAddresses+0x74>)
 8001fcc:	68bb      	ldr	r3, [r7, #8]
 8001fce:	4413      	add	r3, r2
 8001fd0:	781b      	ldrb	r3, [r3, #0]
 8001fd2:	461a      	mov	r2, r3
 8001fd4:	68fb      	ldr	r3, [r7, #12]
 8001fd6:	4413      	add	r3, r2
 8001fd8:	461a      	mov	r2, r3
 8001fda:	687b      	ldr	r3, [r7, #4]
 8001fdc:	6093      	str	r3, [r2, #8]
    WRITE_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->M0AR, DstAddress);
 8001fde:	4a08      	ldr	r2, [pc, #32]	; (8002000 <LL_DMA_ConfigAddresses+0x74>)
 8001fe0:	68bb      	ldr	r3, [r7, #8]
 8001fe2:	4413      	add	r3, r2
 8001fe4:	781b      	ldrb	r3, [r3, #0]
 8001fe6:	461a      	mov	r2, r3
 8001fe8:	68fb      	ldr	r3, [r7, #12]
 8001fea:	4413      	add	r3, r2
 8001fec:	461a      	mov	r2, r3
 8001fee:	683b      	ldr	r3, [r7, #0]
 8001ff0:	60d3      	str	r3, [r2, #12]
}
 8001ff2:	bf00      	nop
 8001ff4:	3714      	adds	r7, #20
 8001ff6:	46bd      	mov	sp, r7
 8001ff8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ffc:	4770      	bx	lr
 8001ffe:	bf00      	nop
 8002000:	0802de34 	.word	0x0802de34

08002004 <LL_DMA_ClearFlag_HT0>:
  * @rmtoll LIFCR  CHTIF0    LL_DMA_ClearFlag_HT0
  * @param  DMAx DMAx Instance
  * @retval None
  */
__STATIC_INLINE void LL_DMA_ClearFlag_HT0(DMA_TypeDef *DMAx)
{
 8002004:	b480      	push	{r7}
 8002006:	b083      	sub	sp, #12
 8002008:	af00      	add	r7, sp, #0
 800200a:	6078      	str	r0, [r7, #4]
  WRITE_REG(DMAx->LIFCR , DMA_LIFCR_CHTIF0);
 800200c:	687b      	ldr	r3, [r7, #4]
 800200e:	2210      	movs	r2, #16
 8002010:	609a      	str	r2, [r3, #8]
}
 8002012:	bf00      	nop
 8002014:	370c      	adds	r7, #12
 8002016:	46bd      	mov	sp, r7
 8002018:	f85d 7b04 	ldr.w	r7, [sp], #4
 800201c:	4770      	bx	lr

0800201e <LL_DMA_ClearFlag_TC0>:
  * @rmtoll LIFCR  CTCIF0    LL_DMA_ClearFlag_TC0
  * @param  DMAx DMAx Instance
  * @retval None
  */
__STATIC_INLINE void LL_DMA_ClearFlag_TC0(DMA_TypeDef *DMAx)
{
 800201e:	b480      	push	{r7}
 8002020:	b083      	sub	sp, #12
 8002022:	af00      	add	r7, sp, #0
 8002024:	6078      	str	r0, [r7, #4]
  WRITE_REG(DMAx->LIFCR , DMA_LIFCR_CTCIF0);
 8002026:	687b      	ldr	r3, [r7, #4]
 8002028:	2220      	movs	r2, #32
 800202a:	609a      	str	r2, [r3, #8]
}
 800202c:	bf00      	nop
 800202e:	370c      	adds	r7, #12
 8002030:	46bd      	mov	sp, r7
 8002032:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002036:	4770      	bx	lr

08002038 <LL_DMA_ClearFlag_TE0>:
  * @rmtoll LIFCR  CTEIF0    LL_DMA_ClearFlag_TE0
  * @param  DMAx DMAx Instance
  * @retval None
  */
__STATIC_INLINE void LL_DMA_ClearFlag_TE0(DMA_TypeDef *DMAx)
{
 8002038:	b480      	push	{r7}
 800203a:	b083      	sub	sp, #12
 800203c:	af00      	add	r7, sp, #0
 800203e:	6078      	str	r0, [r7, #4]
  WRITE_REG(DMAx->LIFCR , DMA_LIFCR_CTEIF0);
 8002040:	687b      	ldr	r3, [r7, #4]
 8002042:	2208      	movs	r2, #8
 8002044:	609a      	str	r2, [r3, #8]
}
 8002046:	bf00      	nop
 8002048:	370c      	adds	r7, #12
 800204a:	46bd      	mov	sp, r7
 800204c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002050:	4770      	bx	lr

08002052 <LL_DMA_ClearFlag_DME0>:
  * @rmtoll LIFCR  CDMEIF0    LL_DMA_ClearFlag_DME0
  * @param  DMAx DMAx Instance
  * @retval None
  */
__STATIC_INLINE void LL_DMA_ClearFlag_DME0(DMA_TypeDef *DMAx)
{
 8002052:	b480      	push	{r7}
 8002054:	b083      	sub	sp, #12
 8002056:	af00      	add	r7, sp, #0
 8002058:	6078      	str	r0, [r7, #4]
  WRITE_REG(DMAx->LIFCR , DMA_LIFCR_CDMEIF0);
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	2204      	movs	r2, #4
 800205e:	609a      	str	r2, [r3, #8]
}
 8002060:	bf00      	nop
 8002062:	370c      	adds	r7, #12
 8002064:	46bd      	mov	sp, r7
 8002066:	f85d 7b04 	ldr.w	r7, [sp], #4
 800206a:	4770      	bx	lr

0800206c <LL_DMA_ClearFlag_FE0>:
  * @rmtoll LIFCR  CFEIF0    LL_DMA_ClearFlag_FE0
  * @param  DMAx DMAx Instance
  * @retval None
  */
__STATIC_INLINE void LL_DMA_ClearFlag_FE0(DMA_TypeDef *DMAx)
{
 800206c:	b480      	push	{r7}
 800206e:	b083      	sub	sp, #12
 8002070:	af00      	add	r7, sp, #0
 8002072:	6078      	str	r0, [r7, #4]
  WRITE_REG(DMAx->LIFCR , DMA_LIFCR_CFEIF0);
 8002074:	687b      	ldr	r3, [r7, #4]
 8002076:	2201      	movs	r2, #1
 8002078:	609a      	str	r2, [r3, #8]
}
 800207a:	bf00      	nop
 800207c:	370c      	adds	r7, #12
 800207e:	46bd      	mov	sp, r7
 8002080:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002084:	4770      	bx	lr
	...

08002088 <LL_DMA_EnableIT_TE>:
  *         @arg @ref LL_DMA_STREAM_6
  *         @arg @ref LL_DMA_STREAM_7
  * @retval None
  */
__STATIC_INLINE void LL_DMA_EnableIT_TE(DMA_TypeDef *DMAx, uint32_t Stream)
{
 8002088:	b480      	push	{r7}
 800208a:	b083      	sub	sp, #12
 800208c:	af00      	add	r7, sp, #0
 800208e:	6078      	str	r0, [r7, #4]
 8002090:	6039      	str	r1, [r7, #0]
  SET_BIT(((DMA_Stream_TypeDef *)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_TEIE);
 8002092:	4a0c      	ldr	r2, [pc, #48]	; (80020c4 <LL_DMA_EnableIT_TE+0x3c>)
 8002094:	683b      	ldr	r3, [r7, #0]
 8002096:	4413      	add	r3, r2
 8002098:	781b      	ldrb	r3, [r3, #0]
 800209a:	461a      	mov	r2, r3
 800209c:	687b      	ldr	r3, [r7, #4]
 800209e:	4413      	add	r3, r2
 80020a0:	681b      	ldr	r3, [r3, #0]
 80020a2:	4908      	ldr	r1, [pc, #32]	; (80020c4 <LL_DMA_EnableIT_TE+0x3c>)
 80020a4:	683a      	ldr	r2, [r7, #0]
 80020a6:	440a      	add	r2, r1
 80020a8:	7812      	ldrb	r2, [r2, #0]
 80020aa:	4611      	mov	r1, r2
 80020ac:	687a      	ldr	r2, [r7, #4]
 80020ae:	440a      	add	r2, r1
 80020b0:	f043 0304 	orr.w	r3, r3, #4
 80020b4:	6013      	str	r3, [r2, #0]
}
 80020b6:	bf00      	nop
 80020b8:	370c      	adds	r7, #12
 80020ba:	46bd      	mov	sp, r7
 80020bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020c0:	4770      	bx	lr
 80020c2:	bf00      	nop
 80020c4:	0802de34 	.word	0x0802de34

080020c8 <LL_DMA_EnableIT_TC>:
  *         @arg @ref LL_DMA_STREAM_6
  *         @arg @ref LL_DMA_STREAM_7
  * @retval None
  */
__STATIC_INLINE void LL_DMA_EnableIT_TC(DMA_TypeDef *DMAx, uint32_t Stream)
{
 80020c8:	b480      	push	{r7}
 80020ca:	b083      	sub	sp, #12
 80020cc:	af00      	add	r7, sp, #0
 80020ce:	6078      	str	r0, [r7, #4]
 80020d0:	6039      	str	r1, [r7, #0]
  SET_BIT(((DMA_Stream_TypeDef *)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_TCIE);
 80020d2:	4a0c      	ldr	r2, [pc, #48]	; (8002104 <LL_DMA_EnableIT_TC+0x3c>)
 80020d4:	683b      	ldr	r3, [r7, #0]
 80020d6:	4413      	add	r3, r2
 80020d8:	781b      	ldrb	r3, [r3, #0]
 80020da:	461a      	mov	r2, r3
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	4413      	add	r3, r2
 80020e0:	681b      	ldr	r3, [r3, #0]
 80020e2:	4908      	ldr	r1, [pc, #32]	; (8002104 <LL_DMA_EnableIT_TC+0x3c>)
 80020e4:	683a      	ldr	r2, [r7, #0]
 80020e6:	440a      	add	r2, r1
 80020e8:	7812      	ldrb	r2, [r2, #0]
 80020ea:	4611      	mov	r1, r2
 80020ec:	687a      	ldr	r2, [r7, #4]
 80020ee:	440a      	add	r2, r1
 80020f0:	f043 0310 	orr.w	r3, r3, #16
 80020f4:	6013      	str	r3, [r2, #0]
}
 80020f6:	bf00      	nop
 80020f8:	370c      	adds	r7, #12
 80020fa:	46bd      	mov	sp, r7
 80020fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002100:	4770      	bx	lr
 8002102:	bf00      	nop
 8002104:	0802de34 	.word	0x0802de34

08002108 <LL_DMA_DisableIT_HT>:
  *         @arg @ref LL_DMA_STREAM_6
  *         @arg @ref LL_DMA_STREAM_7
  * @retval None
  */
__STATIC_INLINE void LL_DMA_DisableIT_HT(DMA_TypeDef *DMAx, uint32_t Stream)
{
 8002108:	b480      	push	{r7}
 800210a:	b083      	sub	sp, #12
 800210c:	af00      	add	r7, sp, #0
 800210e:	6078      	str	r0, [r7, #4]
 8002110:	6039      	str	r1, [r7, #0]
  CLEAR_BIT(((DMA_Stream_TypeDef *)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_HTIE);
 8002112:	4a0c      	ldr	r2, [pc, #48]	; (8002144 <LL_DMA_DisableIT_HT+0x3c>)
 8002114:	683b      	ldr	r3, [r7, #0]
 8002116:	4413      	add	r3, r2
 8002118:	781b      	ldrb	r3, [r3, #0]
 800211a:	461a      	mov	r2, r3
 800211c:	687b      	ldr	r3, [r7, #4]
 800211e:	4413      	add	r3, r2
 8002120:	681b      	ldr	r3, [r3, #0]
 8002122:	4908      	ldr	r1, [pc, #32]	; (8002144 <LL_DMA_DisableIT_HT+0x3c>)
 8002124:	683a      	ldr	r2, [r7, #0]
 8002126:	440a      	add	r2, r1
 8002128:	7812      	ldrb	r2, [r2, #0]
 800212a:	4611      	mov	r1, r2
 800212c:	687a      	ldr	r2, [r7, #4]
 800212e:	440a      	add	r2, r1
 8002130:	f023 0308 	bic.w	r3, r3, #8
 8002134:	6013      	str	r3, [r2, #0]
}
 8002136:	bf00      	nop
 8002138:	370c      	adds	r7, #12
 800213a:	46bd      	mov	sp, r7
 800213c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002140:	4770      	bx	lr
 8002142:	bf00      	nop
 8002144:	0802de34 	.word	0x0802de34

08002148 <LL_DMA_DisableIT_DME>:
  *         @arg @ref LL_DMA_STREAM_6
  *         @arg @ref LL_DMA_STREAM_7
  * @retval None
  */
__STATIC_INLINE void LL_DMA_DisableIT_DME(DMA_TypeDef *DMAx, uint32_t Stream)
{
 8002148:	b480      	push	{r7}
 800214a:	b083      	sub	sp, #12
 800214c:	af00      	add	r7, sp, #0
 800214e:	6078      	str	r0, [r7, #4]
 8002150:	6039      	str	r1, [r7, #0]
  CLEAR_BIT(((DMA_Stream_TypeDef *)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_DMEIE);
 8002152:	4a0c      	ldr	r2, [pc, #48]	; (8002184 <LL_DMA_DisableIT_DME+0x3c>)
 8002154:	683b      	ldr	r3, [r7, #0]
 8002156:	4413      	add	r3, r2
 8002158:	781b      	ldrb	r3, [r3, #0]
 800215a:	461a      	mov	r2, r3
 800215c:	687b      	ldr	r3, [r7, #4]
 800215e:	4413      	add	r3, r2
 8002160:	681b      	ldr	r3, [r3, #0]
 8002162:	4908      	ldr	r1, [pc, #32]	; (8002184 <LL_DMA_DisableIT_DME+0x3c>)
 8002164:	683a      	ldr	r2, [r7, #0]
 8002166:	440a      	add	r2, r1
 8002168:	7812      	ldrb	r2, [r2, #0]
 800216a:	4611      	mov	r1, r2
 800216c:	687a      	ldr	r2, [r7, #4]
 800216e:	440a      	add	r2, r1
 8002170:	f023 0302 	bic.w	r3, r3, #2
 8002174:	6013      	str	r3, [r2, #0]
}
 8002176:	bf00      	nop
 8002178:	370c      	adds	r7, #12
 800217a:	46bd      	mov	sp, r7
 800217c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002180:	4770      	bx	lr
 8002182:	bf00      	nop
 8002184:	0802de34 	.word	0x0802de34

08002188 <LL_DMA_DisableIT_FE>:
  *         @arg @ref LL_DMA_STREAM_6
  *         @arg @ref LL_DMA_STREAM_7
  * @retval None
  */
__STATIC_INLINE void LL_DMA_DisableIT_FE(DMA_TypeDef *DMAx, uint32_t Stream)
{
 8002188:	b480      	push	{r7}
 800218a:	b083      	sub	sp, #12
 800218c:	af00      	add	r7, sp, #0
 800218e:	6078      	str	r0, [r7, #4]
 8002190:	6039      	str	r1, [r7, #0]
  CLEAR_BIT(((DMA_Stream_TypeDef *)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->FCR, DMA_SxFCR_FEIE);
 8002192:	4a0c      	ldr	r2, [pc, #48]	; (80021c4 <LL_DMA_DisableIT_FE+0x3c>)
 8002194:	683b      	ldr	r3, [r7, #0]
 8002196:	4413      	add	r3, r2
 8002198:	781b      	ldrb	r3, [r3, #0]
 800219a:	461a      	mov	r2, r3
 800219c:	687b      	ldr	r3, [r7, #4]
 800219e:	4413      	add	r3, r2
 80021a0:	695b      	ldr	r3, [r3, #20]
 80021a2:	4908      	ldr	r1, [pc, #32]	; (80021c4 <LL_DMA_DisableIT_FE+0x3c>)
 80021a4:	683a      	ldr	r2, [r7, #0]
 80021a6:	440a      	add	r2, r1
 80021a8:	7812      	ldrb	r2, [r2, #0]
 80021aa:	4611      	mov	r1, r2
 80021ac:	687a      	ldr	r2, [r7, #4]
 80021ae:	440a      	add	r2, r1
 80021b0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80021b4:	6153      	str	r3, [r2, #20]
}
 80021b6:	bf00      	nop
 80021b8:	370c      	adds	r7, #12
 80021ba:	46bd      	mov	sp, r7
 80021bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021c0:	4770      	bx	lr
 80021c2:	bf00      	nop
 80021c4:	0802de34 	.word	0x0802de34

080021c8 <getAdcVoltage>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

float getAdcVoltage(void)
{
 80021c8:	b580      	push	{r7, lr}
 80021ca:	af00      	add	r7, sp, #0
  if(adc_complete == 1)
 80021cc:	4b2c      	ldr	r3, [pc, #176]	; (8002280 <getAdcVoltage+0xb8>)
 80021ce:	681b      	ldr	r3, [r3, #0]
 80021d0:	2b01      	cmp	r3, #1
 80021d2:	d140      	bne.n	8002256 <getAdcVoltage+0x8e>
  {
    doadc = average_adc1.in0 ;
 80021d4:	4b2b      	ldr	r3, [pc, #172]	; (8002284 <getAdcVoltage+0xbc>)
 80021d6:	881a      	ldrh	r2, [r3, #0]
 80021d8:	4b2b      	ldr	r3, [pc, #172]	; (8002288 <getAdcVoltage+0xc0>)
 80021da:	801a      	strh	r2, [r3, #0]
    //Requires 2 resistors in series to divide the voltage so that the voltage across the 2 resistors is 5Volt,
    //then the output voltage between the 2 resistors is 3v3
    //recommend 9K1 and 4K7 resistors 5V -> 3.2971V
    sensor_voltage = ((float)doadc * 3.3) / 4096;
 80021dc:	4b2a      	ldr	r3, [pc, #168]	; (8002288 <getAdcVoltage+0xc0>)
 80021de:	881b      	ldrh	r3, [r3, #0]
 80021e0:	ee07 3a90 	vmov	s15, r3
 80021e4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80021e8:	ee17 0a90 	vmov	r0, s15
 80021ec:	f7fe f9ac 	bl	8000548 <__aeabi_f2d>
 80021f0:	a31d      	add	r3, pc, #116	; (adr r3, 8002268 <getAdcVoltage+0xa0>)
 80021f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80021f6:	f7fe f9ff 	bl	80005f8 <__aeabi_dmul>
 80021fa:	4602      	mov	r2, r0
 80021fc:	460b      	mov	r3, r1
 80021fe:	4610      	mov	r0, r2
 8002200:	4619      	mov	r1, r3
 8002202:	f04f 0200 	mov.w	r2, #0
 8002206:	4b21      	ldr	r3, [pc, #132]	; (800228c <getAdcVoltage+0xc4>)
 8002208:	f7fe fb20 	bl	800084c <__aeabi_ddiv>
 800220c:	4602      	mov	r2, r0
 800220e:	460b      	mov	r3, r1
 8002210:	4610      	mov	r0, r2
 8002212:	4619      	mov	r1, r3
 8002214:	f7fe fc02 	bl	8000a1c <__aeabi_d2f>
 8002218:	4603      	mov	r3, r0
 800221a:	4a1d      	ldr	r2, [pc, #116]	; (8002290 <getAdcVoltage+0xc8>)
 800221c:	6013      	str	r3, [r2, #0]
    sensor_voltage = sensor_voltage*(9.1 + 4.7)/9.1;//
 800221e:	4b1c      	ldr	r3, [pc, #112]	; (8002290 <getAdcVoltage+0xc8>)
 8002220:	681b      	ldr	r3, [r3, #0]
 8002222:	4618      	mov	r0, r3
 8002224:	f7fe f990 	bl	8000548 <__aeabi_f2d>
 8002228:	a311      	add	r3, pc, #68	; (adr r3, 8002270 <getAdcVoltage+0xa8>)
 800222a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800222e:	f7fe f9e3 	bl	80005f8 <__aeabi_dmul>
 8002232:	4602      	mov	r2, r0
 8002234:	460b      	mov	r3, r1
 8002236:	4610      	mov	r0, r2
 8002238:	4619      	mov	r1, r3
 800223a:	a30f      	add	r3, pc, #60	; (adr r3, 8002278 <getAdcVoltage+0xb0>)
 800223c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002240:	f7fe fb04 	bl	800084c <__aeabi_ddiv>
 8002244:	4602      	mov	r2, r0
 8002246:	460b      	mov	r3, r1
 8002248:	4610      	mov	r0, r2
 800224a:	4619      	mov	r1, r3
 800224c:	f7fe fbe6 	bl	8000a1c <__aeabi_d2f>
 8002250:	4603      	mov	r3, r0
 8002252:	4a0f      	ldr	r2, [pc, #60]	; (8002290 <getAdcVoltage+0xc8>)
 8002254:	6013      	str	r3, [r2, #0]
  }
  return sensor_voltage;
 8002256:	4b0e      	ldr	r3, [pc, #56]	; (8002290 <getAdcVoltage+0xc8>)
 8002258:	681b      	ldr	r3, [r3, #0]
 800225a:	ee07 3a90 	vmov	s15, r3
}
 800225e:	eeb0 0a67 	vmov.f32	s0, s15
 8002262:	bd80      	pop	{r7, pc}
 8002264:	f3af 8000 	nop.w
 8002268:	66666666 	.word	0x66666666
 800226c:	400a6666 	.word	0x400a6666
 8002270:	9999999a 	.word	0x9999999a
 8002274:	402b9999 	.word	0x402b9999
 8002278:	33333333 	.word	0x33333333
 800227c:	40223333 	.word	0x40223333
 8002280:	20000358 	.word	0x20000358
 8002284:	20000354 	.word	0x20000354
 8002288:	20000340 	.word	0x20000340
 800228c:	40b00000 	.word	0x40b00000
 8002290:	20000344 	.word	0x20000344
 8002294:	00000000 	.word	0x00000000

08002298 <getGasConcentration>:

float getGasConcentration(void)
{
 8002298:	b5b0      	push	{r4, r5, r7, lr}
 800229a:	b082      	sub	sp, #8
 800229c:	af00      	add	r7, sp, #0
  float Vrl = getAdcVoltage();
 800229e:	f7ff ff93 	bl	80021c8 <getAdcVoltage>
 80022a2:	ed87 0a01 	vstr	s0, [r7, #4]
  RSdivRL = (5.0 - Vrl)/Vrl;// omit *RL
 80022a6:	6878      	ldr	r0, [r7, #4]
 80022a8:	f7fe f94e 	bl	8000548 <__aeabi_f2d>
 80022ac:	4602      	mov	r2, r0
 80022ae:	460b      	mov	r3, r1
 80022b0:	f04f 0000 	mov.w	r0, #0
 80022b4:	491c      	ldr	r1, [pc, #112]	; (8002328 <getGasConcentration+0x90>)
 80022b6:	f7fd ffe7 	bl	8000288 <__aeabi_dsub>
 80022ba:	4602      	mov	r2, r0
 80022bc:	460b      	mov	r3, r1
 80022be:	4614      	mov	r4, r2
 80022c0:	461d      	mov	r5, r3
 80022c2:	6878      	ldr	r0, [r7, #4]
 80022c4:	f7fe f940 	bl	8000548 <__aeabi_f2d>
 80022c8:	4602      	mov	r2, r0
 80022ca:	460b      	mov	r3, r1
 80022cc:	4620      	mov	r0, r4
 80022ce:	4629      	mov	r1, r5
 80022d0:	f7fe fabc 	bl	800084c <__aeabi_ddiv>
 80022d4:	4602      	mov	r2, r0
 80022d6:	460b      	mov	r3, r1
 80022d8:	4610      	mov	r0, r2
 80022da:	4619      	mov	r1, r3
 80022dc:	f7fe fb9e 	bl	8000a1c <__aeabi_d2f>
 80022e0:	4603      	mov	r3, r0
 80022e2:	4a12      	ldr	r2, [pc, #72]	; (800232c <getGasConcentration+0x94>)
 80022e4:	6013      	str	r3, [r2, #0]
  RSdivRL = RSdivRL/9.9;// The ratio of RS/R0 is 9.9 in LPG gas from Graph (Found using WebPlotDigitizer)
 80022e6:	4b11      	ldr	r3, [pc, #68]	; (800232c <getGasConcentration+0x94>)
 80022e8:	681b      	ldr	r3, [r3, #0]
 80022ea:	4618      	mov	r0, r3
 80022ec:	f7fe f92c 	bl	8000548 <__aeabi_f2d>
 80022f0:	a30b      	add	r3, pc, #44	; (adr r3, 8002320 <getGasConcentration+0x88>)
 80022f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022f6:	f7fe faa9 	bl	800084c <__aeabi_ddiv>
 80022fa:	4602      	mov	r2, r0
 80022fc:	460b      	mov	r3, r1
 80022fe:	4610      	mov	r0, r2
 8002300:	4619      	mov	r1, r3
 8002302:	f7fe fb8b 	bl	8000a1c <__aeabi_d2f>
 8002306:	4603      	mov	r3, r0
 8002308:	4a08      	ldr	r2, [pc, #32]	; (800232c <getGasConcentration+0x94>)
 800230a:	6013      	str	r3, [r2, #0]
  return RSdivRL;
 800230c:	4b07      	ldr	r3, [pc, #28]	; (800232c <getGasConcentration+0x94>)
 800230e:	681b      	ldr	r3, [r3, #0]
 8002310:	ee07 3a90 	vmov	s15, r3
}
 8002314:	eeb0 0a67 	vmov.f32	s0, s15
 8002318:	3708      	adds	r7, #8
 800231a:	46bd      	mov	sp, r7
 800231c:	bdb0      	pop	{r4, r5, r7, pc}
 800231e:	bf00      	nop
 8002320:	cccccccd 	.word	0xcccccccd
 8002324:	4023cccc 	.word	0x4023cccc
 8002328:	40140000 	.word	0x40140000
 800232c:	20000348 	.word	0x20000348

08002330 <TIM4_PWMConfig>:

void TIM4_PWMConfig(void)
{
 8002330:	b580      	push	{r7, lr}
 8002332:	af00      	add	r7, sp, #0
   /*Starts the TIM4 Output Compare channel 4 signal generation*/
   HAL_TIM_OC_Start(&htim4, TIM_CHANNEL_4);
 8002334:	210c      	movs	r1, #12
 8002336:	480f      	ldr	r0, [pc, #60]	; (8002374 <TIM4_PWMConfig+0x44>)
 8002338:	f005 ff26 	bl	8008188 <HAL_TIM_OC_Start>

   /* Disable the TIM Capture/Compare 4 interrupt */
   __HAL_TIM_DISABLE_IT(&htim4, TIM_IT_CC4);
 800233c:	4b0d      	ldr	r3, [pc, #52]	; (8002374 <TIM4_PWMConfig+0x44>)
 800233e:	681b      	ldr	r3, [r3, #0]
 8002340:	68da      	ldr	r2, [r3, #12]
 8002342:	4b0c      	ldr	r3, [pc, #48]	; (8002374 <TIM4_PWMConfig+0x44>)
 8002344:	681b      	ldr	r3, [r3, #0]
 8002346:	f022 0210 	bic.w	r2, r2, #16
 800234a:	60da      	str	r2, [r3, #12]

   /* Disable the TIM Update interrupt */
   __HAL_TIM_DISABLE_IT(&htim4, TIM_IT_UPDATE);
 800234c:	4b09      	ldr	r3, [pc, #36]	; (8002374 <TIM4_PWMConfig+0x44>)
 800234e:	681b      	ldr	r3, [r3, #0]
 8002350:	68da      	ldr	r2, [r3, #12]
 8002352:	4b08      	ldr	r3, [pc, #32]	; (8002374 <TIM4_PWMConfig+0x44>)
 8002354:	681b      	ldr	r3, [r3, #0]
 8002356:	f022 0201 	bic.w	r2, r2, #1
 800235a:	60da      	str	r2, [r3, #12]

   /*Clear Capture compare 4 event */
   __HAL_TIM_CLEAR_FLAG(&htim4, TIM_FLAG_CC4);
 800235c:	4b05      	ldr	r3, [pc, #20]	; (8002374 <TIM4_PWMConfig+0x44>)
 800235e:	681b      	ldr	r3, [r3, #0]
 8002360:	f06f 0210 	mvn.w	r2, #16
 8002364:	611a      	str	r2, [r3, #16]

   /*Clear TIM4 Update event */
   __HAL_TIM_CLEAR_FLAG(&htim4, TIM_FLAG_UPDATE);
 8002366:	4b03      	ldr	r3, [pc, #12]	; (8002374 <TIM4_PWMConfig+0x44>)
 8002368:	681b      	ldr	r3, [r3, #0]
 800236a:	f06f 0201 	mvn.w	r2, #1
 800236e:	611a      	str	r2, [r3, #16]

}
 8002370:	bf00      	nop
 8002372:	bd80      	pop	{r7, pc}
 8002374:	200002f4 	.word	0x200002f4

08002378 <ADC1_InitMore>:

void ADC1_InitMore(void)
{
 8002378:	b580      	push	{r7, lr}
 800237a:	af00      	add	r7, sp, #0
  /*## Configuration of ADC interruptions ####################################*/
  /* Enable interruption ADC group regular overrun */
  LL_ADC_EnableIT_OVR(ADC1);
 800237c:	480c      	ldr	r0, [pc, #48]	; (80023b0 <ADC1_InitMore+0x38>)
 800237e:	f7ff fc40 	bl	8001c02 <LL_ADC_EnableIT_OVR>
  /*       However, in order to be compliant with other STM32 series          */
  /*       and to show the best practice usages, ADC state is checked.        */
  /*       Software can be optimized by removing some of these checks, if     */
  /*       they are not relevant considering previous settings and actions    */
  /*       in user application.                                               */
  if (LL_ADC_IsEnabled(ADC1) == 0)
 8002382:	480b      	ldr	r0, [pc, #44]	; (80023b0 <ADC1_InitMore+0x38>)
 8002384:	f7ff fc19 	bl	8001bba <LL_ADC_IsEnabled>
 8002388:	4603      	mov	r3, r0
 800238a:	2b00      	cmp	r3, #0
 800238c:	d102      	bne.n	8002394 <ADC1_InitMore+0x1c>
  {
    /* Enable ADC */
    LL_ADC_Enable(ADC1);
 800238e:	4808      	ldr	r0, [pc, #32]	; (80023b0 <ADC1_InitMore+0x38>)
 8002390:	f7ff fc03 	bl	8001b9a <LL_ADC_Enable>
  /*       However, in order to be compliant with other STM32 series          */
  /*       and to show the best practice usages, ADC state is checked.        */
  /*       Software can be optimized by removing some of these checks, if     */
  /*       they are not relevant considering previous settings and actions    */
  /*       in user application.                                               */
  if (LL_ADC_IsEnabled(ADC1) == 1)
 8002394:	4806      	ldr	r0, [pc, #24]	; (80023b0 <ADC1_InitMore+0x38>)
 8002396:	f7ff fc10 	bl	8001bba <LL_ADC_IsEnabled>
 800239a:	4603      	mov	r3, r0
 800239c:	2b01      	cmp	r3, #1
 800239e:	d104      	bne.n	80023aa <ADC1_InitMore+0x32>
  {
    LL_ADC_REG_StartConversionExtTrig(ADC1, LL_ADC_REG_TRIG_EXT_RISING);
 80023a0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
 80023a4:	4802      	ldr	r0, [pc, #8]	; (80023b0 <ADC1_InitMore+0x38>)
 80023a6:	f7ff fc1b 	bl	8001be0 <LL_ADC_REG_StartConversionExtTrig>
  }
}
 80023aa:	bf00      	nop
 80023ac:	bd80      	pop	{r7, pc}
 80023ae:	bf00      	nop
 80023b0:	40012000 	.word	0x40012000

080023b4 <ADC1_DMA2_InitMore>:

void ADC1_DMA2_InitMore(void)
{
 80023b4:	b580      	push	{r7, lr}
 80023b6:	b082      	sub	sp, #8
 80023b8:	af02      	add	r7, sp, #8
  /* Configure NVIC to disable DMA interruptions */
  //NVIC_DisableIRQ(DMA2_Stream0_IRQn);

  //LL_DMA_ClearFlag_GI1(DMA2);
  LL_DMA_ClearFlag_HT0(DMA2);
 80023ba:	481e      	ldr	r0, [pc, #120]	; (8002434 <ADC1_DMA2_InitMore+0x80>)
 80023bc:	f7ff fe22 	bl	8002004 <LL_DMA_ClearFlag_HT0>
  LL_DMA_ClearFlag_TE0(DMA2);
 80023c0:	481c      	ldr	r0, [pc, #112]	; (8002434 <ADC1_DMA2_InitMore+0x80>)
 80023c2:	f7ff fe39 	bl	8002038 <LL_DMA_ClearFlag_TE0>
  LL_DMA_ClearFlag_TC0(DMA2);
 80023c6:	481b      	ldr	r0, [pc, #108]	; (8002434 <ADC1_DMA2_InitMore+0x80>)
 80023c8:	f7ff fe29 	bl	800201e <LL_DMA_ClearFlag_TC0>
  LL_DMA_ClearFlag_DME0(DMA2);
 80023cc:	4819      	ldr	r0, [pc, #100]	; (8002434 <ADC1_DMA2_InitMore+0x80>)
 80023ce:	f7ff fe40 	bl	8002052 <LL_DMA_ClearFlag_DME0>
  LL_DMA_ClearFlag_FE0(DMA2);
 80023d2:	4818      	ldr	r0, [pc, #96]	; (8002434 <ADC1_DMA2_InitMore+0x80>)
 80023d4:	f7ff fe4a 	bl	800206c <LL_DMA_ClearFlag_FE0>
  LL_DMA_ConfigAddresses(DMA2, LL_DMA_STREAM_0,
 80023d8:	2100      	movs	r1, #0
 80023da:	4817      	ldr	r0, [pc, #92]	; (8002438 <ADC1_DMA2_InitMore+0x84>)
 80023dc:	f7ff fb1f 	bl	8001a1e <LL_ADC_DMA_GetRegAddr>
 80023e0:	4602      	mov	r2, r0
 80023e2:	4916      	ldr	r1, [pc, #88]	; (800243c <ADC1_DMA2_InitMore+0x88>)
 80023e4:	2300      	movs	r3, #0
 80023e6:	9300      	str	r3, [sp, #0]
 80023e8:	460b      	mov	r3, r1
 80023ea:	2100      	movs	r1, #0
 80023ec:	4811      	ldr	r0, [pc, #68]	; (8002434 <ADC1_DMA2_InitMore+0x80>)
 80023ee:	f7ff fdcd 	bl	8001f8c <LL_DMA_ConfigAddresses>
                         LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
                         (uint32_t)&adc1.in0,
                         LL_DMA_DIRECTION_PERIPH_TO_MEMORY);

  LL_DMA_SetDataLength(DMA2, LL_DMA_STREAM_0, 1);
 80023f2:	2201      	movs	r2, #1
 80023f4:	2100      	movs	r1, #0
 80023f6:	480f      	ldr	r0, [pc, #60]	; (8002434 <ADC1_DMA2_InitMore+0x80>)
 80023f8:	f7ff fd60 	bl	8001ebc <LL_DMA_SetDataLength>

  /* Enable/Disable DMA transfer complete/error interrupts */
  LL_DMA_DisableIT_HT(DMA2, LL_DMA_STREAM_0);
 80023fc:	2100      	movs	r1, #0
 80023fe:	480d      	ldr	r0, [pc, #52]	; (8002434 <ADC1_DMA2_InitMore+0x80>)
 8002400:	f7ff fe82 	bl	8002108 <LL_DMA_DisableIT_HT>

  /* Enable DMA transfer interruption: transfer error */
  LL_DMA_EnableIT_TE(DMA2, LL_DMA_CHANNEL_0);
 8002404:	2100      	movs	r1, #0
 8002406:	480b      	ldr	r0, [pc, #44]	; (8002434 <ADC1_DMA2_InitMore+0x80>)
 8002408:	f7ff fe3e 	bl	8002088 <LL_DMA_EnableIT_TE>

  /* Enable DMA transfer interruption: transfer complete */
  LL_DMA_EnableIT_TC(DMA2, LL_DMA_CHANNEL_0);
 800240c:	2100      	movs	r1, #0
 800240e:	4809      	ldr	r0, [pc, #36]	; (8002434 <ADC1_DMA2_InitMore+0x80>)
 8002410:	f7ff fe5a 	bl	80020c8 <LL_DMA_EnableIT_TC>

  LL_DMA_DisableIT_DME(DMA2, LL_DMA_STREAM_0);
 8002414:	2100      	movs	r1, #0
 8002416:	4807      	ldr	r0, [pc, #28]	; (8002434 <ADC1_DMA2_InitMore+0x80>)
 8002418:	f7ff fe96 	bl	8002148 <LL_DMA_DisableIT_DME>
  LL_DMA_DisableIT_FE(DMA2, LL_DMA_STREAM_0);
 800241c:	2100      	movs	r1, #0
 800241e:	4805      	ldr	r0, [pc, #20]	; (8002434 <ADC1_DMA2_InitMore+0x80>)
 8002420:	f7ff feb2 	bl	8002188 <LL_DMA_DisableIT_FE>

  /*## Activation of DMA #####################################################*/
  /* Enable the DMA transfer */
  LL_DMA_EnableStream(DMA2, LL_DMA_STREAM_0);
 8002424:	2100      	movs	r1, #0
 8002426:	4803      	ldr	r0, [pc, #12]	; (8002434 <ADC1_DMA2_InitMore+0x80>)
 8002428:	f7ff fc2c 	bl	8001c84 <LL_DMA_EnableStream>
}
 800242c:	bf00      	nop
 800242e:	46bd      	mov	sp, r7
 8002430:	bd80      	pop	{r7, pc}
 8002432:	bf00      	nop
 8002434:	40026400 	.word	0x40026400
 8002438:	40012000 	.word	0x40012000
 800243c:	20000350 	.word	0x20000350

08002440 <AdcDmaTransferComplete_Callback>:
  * @note   This function is executed when the transfer complete interrupt
  *         is generated
  * @retval None
  */
void AdcDmaTransferComplete_Callback()
{
 8002440:	b580      	push	{r7, lr}
 8002442:	af00      	add	r7, sp, #0
  static v_u32 sum_adc1_in0 = 0;
  //static v_u32 sum_adc1_in1 = 0;
  static v_u32 i = 0;

  sum_adc1_in0 += adc1.in0;
 8002444:	4b14      	ldr	r3, [pc, #80]	; (8002498 <AdcDmaTransferComplete_Callback+0x58>)
 8002446:	881b      	ldrh	r3, [r3, #0]
 8002448:	461a      	mov	r2, r3
 800244a:	4b14      	ldr	r3, [pc, #80]	; (800249c <AdcDmaTransferComplete_Callback+0x5c>)
 800244c:	681b      	ldr	r3, [r3, #0]
 800244e:	4413      	add	r3, r2
 8002450:	4a12      	ldr	r2, [pc, #72]	; (800249c <AdcDmaTransferComplete_Callback+0x5c>)
 8002452:	6013      	str	r3, [r2, #0]
  //sum_adc1_in1 += adc1.in1;
  i += 1;
 8002454:	4b12      	ldr	r3, [pc, #72]	; (80024a0 <AdcDmaTransferComplete_Callback+0x60>)
 8002456:	681b      	ldr	r3, [r3, #0]
 8002458:	3301      	adds	r3, #1
 800245a:	4a11      	ldr	r2, [pc, #68]	; (80024a0 <AdcDmaTransferComplete_Callback+0x60>)
 800245c:	6013      	str	r3, [r2, #0]
  if(i >= 250)
 800245e:	4b10      	ldr	r3, [pc, #64]	; (80024a0 <AdcDmaTransferComplete_Callback+0x60>)
 8002460:	681b      	ldr	r3, [r3, #0]
 8002462:	2bf9      	cmp	r3, #249	; 0xf9
 8002464:	d916      	bls.n	8002494 <AdcDmaTransferComplete_Callback+0x54>
  {
    i = 0;
 8002466:	4b0e      	ldr	r3, [pc, #56]	; (80024a0 <AdcDmaTransferComplete_Callback+0x60>)
 8002468:	2200      	movs	r2, #0
 800246a:	601a      	str	r2, [r3, #0]
    average_adc1.in0 = (u16)(sum_adc1_in0 / 250);
 800246c:	4b0b      	ldr	r3, [pc, #44]	; (800249c <AdcDmaTransferComplete_Callback+0x5c>)
 800246e:	681b      	ldr	r3, [r3, #0]
 8002470:	4a0c      	ldr	r2, [pc, #48]	; (80024a4 <AdcDmaTransferComplete_Callback+0x64>)
 8002472:	fba2 2303 	umull	r2, r3, r2, r3
 8002476:	091b      	lsrs	r3, r3, #4
 8002478:	b29a      	uxth	r2, r3
 800247a:	4b0b      	ldr	r3, [pc, #44]	; (80024a8 <AdcDmaTransferComplete_Callback+0x68>)
 800247c:	801a      	strh	r2, [r3, #0]
    //average_adc1.in1 = (u16)(sum_adc1_in1 / 250);
    sum_adc1_in0 = 0;
 800247e:	4b07      	ldr	r3, [pc, #28]	; (800249c <AdcDmaTransferComplete_Callback+0x5c>)
 8002480:	2200      	movs	r2, #0
 8002482:	601a      	str	r2, [r3, #0]
    //sum_adc1_in1 = 0;
    HAL_GPIO_TogglePin(LED_BOARD_GPIO_Port, LED_BOARD_Pin);
 8002484:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002488:	4808      	ldr	r0, [pc, #32]	; (80024ac <AdcDmaTransferComplete_Callback+0x6c>)
 800248a:	f002 fc94 	bl	8004db6 <HAL_GPIO_TogglePin>
    adc_complete = 1;
 800248e:	4b08      	ldr	r3, [pc, #32]	; (80024b0 <AdcDmaTransferComplete_Callback+0x70>)
 8002490:	2201      	movs	r2, #1
 8002492:	601a      	str	r2, [r3, #0]
  }
}
 8002494:	bf00      	nop
 8002496:	bd80      	pop	{r7, pc}
 8002498:	20000350 	.word	0x20000350
 800249c:	20000364 	.word	0x20000364
 80024a0:	20000368 	.word	0x20000368
 80024a4:	10624dd3 	.word	0x10624dd3
 80024a8:	20000354 	.word	0x20000354
 80024ac:	40020800 	.word	0x40020800
 80024b0:	20000358 	.word	0x20000358

080024b4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80024b4:	b580      	push	{r7, lr}
 80024b6:	b084      	sub	sp, #16
 80024b8:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80024ba:	f001 fd13 	bl	8003ee4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80024be:	f000 f869 	bl	8002594 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80024c2:	f000 fb59 	bl	8002b78 <MX_GPIO_Init>
  MX_DMA_Init();
 80024c6:	f000 fb19 	bl	8002afc <MX_DMA_Init>
  MX_SPI2_Init();
 80024ca:	f000 f9c3 	bl	8002854 <MX_SPI2_Init>
  MX_CRC_Init();
 80024ce:	f000 f97f 	bl	80027d0 <MX_CRC_Init>
  MX_TIM2_Init();
 80024d2:	f000 f9f5 	bl	80028c0 <MX_TIM2_Init>
  MX_TIM3_Init();
 80024d6:	f000 fa4b 	bl	8002970 <MX_TIM3_Init>
  MX_ADC1_Init();
 80024da:	f000 f8c3 	bl	8002664 <MX_ADC1_Init>
  MX_I2C1_Init();
 80024de:	f000 f98b 	bl	80027f8 <MX_I2C1_Init>
  MX_TIM4_Init();
 80024e2:	f000 fa93 	bl	8002a0c <MX_TIM4_Init>
  MX_TouchGFX_Init();
 80024e6:	f007 f88d 	bl	8009604 <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */
  Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
 80024ea:	2000      	movs	r0, #0
 80024ec:	f001 f8d6 	bl	800369c <Displ_Init>
  Displ_BackLight('I');  					// initialize backlight
 80024f0:	2049      	movs	r0, #73	; 0x49
 80024f2:	f001 f977 	bl	80037e4 <Displ_BackLight>
  HAL_TIM_Base_Start_IT(&TGFX_T);			// start TouchGFX tick timer
 80024f6:	4821      	ldr	r0, [pc, #132]	; (800257c <main+0xc8>)
 80024f8:	f005 fde4 	bl	80080c4 <HAL_TIM_Base_Start_IT>

  ADC1_DMA2_InitMore();
 80024fc:	f7ff ff5a 	bl	80023b4 <ADC1_DMA2_InitMore>
  ADC1_InitMore();
 8002500:	f7ff ff3a 	bl	8002378 <ADC1_InitMore>
  TIM4_PWMConfig();
 8002504:	f7ff ff14 	bl	8002330 <TIM4_PWMConfig>
//	  	DS1307_SetYear(2023);
//	  	DS1307_SetDayOfWeek(4);
//	  	DS1307_SetHour(11);
//	  	DS1307_SetMinute(16);
//	  	DS1307_SetSecond(30);
        int ret = BMP280_Config(OSRS_16, OSRS_16, OSRS_OFF, MODE_NORMAL, T_SB_1000, IIR_16);
 8002508:	2304      	movs	r3, #4
 800250a:	9301      	str	r3, [sp, #4]
 800250c:	2305      	movs	r3, #5
 800250e:	9300      	str	r3, [sp, #0]
 8002510:	2303      	movs	r3, #3
 8002512:	2200      	movs	r2, #0
 8002514:	2105      	movs	r1, #5
 8002516:	2005      	movs	r0, #5
 8002518:	f7fe fd80 	bl	800101c <BMP280_Config>
 800251c:	6078      	str	r0, [r7, #4]
        HAL_Delay(500);
 800251e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8002522:	f001 fd51 	bl	8003fc8 <HAL_Delay>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    if(Counter_0 >= 1000)
 8002526:	4b16      	ldr	r3, [pc, #88]	; (8002580 <main+0xcc>)
 8002528:	681b      	ldr	r3, [r3, #0]
 800252a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800252e:	d309      	bcc.n	8002544 <main+0x90>
    {
      Counter_0 = 0;
 8002530:	4b13      	ldr	r3, [pc, #76]	; (8002580 <main+0xcc>)
 8002532:	2200      	movs	r2, #0
 8002534:	601a      	str	r2, [r3, #0]
//	  hour   = DS1307_GetHour();
//	  minute = DS1307_GetMinute();
//	  second = DS1307_GetSecond();
//	  minute = DS1307_GetMinute();
//	  hour   = DS1307_GetHour();
      Pa = BMP280_Measure();
 8002536:	f7ff f959 	bl	80017ec <BMP280_Measure>
 800253a:	eef0 7a40 	vmov.f32	s15, s0
 800253e:	4b11      	ldr	r3, [pc, #68]	; (8002584 <main+0xd0>)
 8002540:	edc3 7a00 	vstr	s15, [r3]
    }
  //  HAL_Delay(500);
    if(Counter_1 >= (1000*60*5))
 8002544:	4b10      	ldr	r3, [pc, #64]	; (8002588 <main+0xd4>)
 8002546:	681b      	ldr	r3, [r3, #0]
 8002548:	4a10      	ldr	r2, [pc, #64]	; (800258c <main+0xd8>)
 800254a:	4293      	cmp	r3, r2
 800254c:	d912      	bls.n	8002574 <main+0xc0>
    {
        Counter_1 = 0;
 800254e:	4b0e      	ldr	r3, [pc, #56]	; (8002588 <main+0xd4>)
 8002550:	2200      	movs	r2, #0
 8002552:	601a      	str	r2, [r3, #0]

        T= LM75_TemperatureRead();
 8002554:	f7ff f9d0 	bl	80018f8 <LM75_TemperatureRead>
 8002558:	eef0 7a40 	vmov.f32	s15, s0
 800255c:	4b0c      	ldr	r3, [pc, #48]	; (8002590 <main+0xdc>)
 800255e:	edc3 7a00 	vstr	s15, [r3]
        getGasConcentration();
 8002562:	f7ff fe99 	bl	8002298 <getGasConcentration>
        Pa = BMP280_Measure();
 8002566:	f7ff f941 	bl	80017ec <BMP280_Measure>
 800256a:	eef0 7a40 	vmov.f32	s15, s0
 800256e:	4b05      	ldr	r3, [pc, #20]	; (8002584 <main+0xd0>)
 8002570:	edc3 7a00 	vstr	s15, [r3]
    }
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 8002574:	f007 f84e 	bl	8009614 <MX_TouchGFX_Process>
    if(Counter_0 >= 1000)
 8002578:	e7d5      	b.n	8002526 <main+0x72>
 800257a:	bf00      	nop
 800257c:	200002ac 	.word	0x200002ac
 8002580:	2000035c 	.word	0x2000035c
 8002584:	20000440 	.word	0x20000440
 8002588:	20000360 	.word	0x20000360
 800258c:	000493df 	.word	0x000493df
 8002590:	2000033c 	.word	0x2000033c

08002594 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002594:	b580      	push	{r7, lr}
 8002596:	b094      	sub	sp, #80	; 0x50
 8002598:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800259a:	f107 0320 	add.w	r3, r7, #32
 800259e:	2230      	movs	r2, #48	; 0x30
 80025a0:	2100      	movs	r1, #0
 80025a2:	4618      	mov	r0, r3
 80025a4:	f029 f911 	bl	802b7ca <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80025a8:	f107 030c 	add.w	r3, r7, #12
 80025ac:	2200      	movs	r2, #0
 80025ae:	601a      	str	r2, [r3, #0]
 80025b0:	605a      	str	r2, [r3, #4]
 80025b2:	609a      	str	r2, [r3, #8]
 80025b4:	60da      	str	r2, [r3, #12]
 80025b6:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80025b8:	2300      	movs	r3, #0
 80025ba:	60bb      	str	r3, [r7, #8]
 80025bc:	4b27      	ldr	r3, [pc, #156]	; (800265c <SystemClock_Config+0xc8>)
 80025be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025c0:	4a26      	ldr	r2, [pc, #152]	; (800265c <SystemClock_Config+0xc8>)
 80025c2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80025c6:	6413      	str	r3, [r2, #64]	; 0x40
 80025c8:	4b24      	ldr	r3, [pc, #144]	; (800265c <SystemClock_Config+0xc8>)
 80025ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025cc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80025d0:	60bb      	str	r3, [r7, #8]
 80025d2:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80025d4:	2300      	movs	r3, #0
 80025d6:	607b      	str	r3, [r7, #4]
 80025d8:	4b21      	ldr	r3, [pc, #132]	; (8002660 <SystemClock_Config+0xcc>)
 80025da:	681b      	ldr	r3, [r3, #0]
 80025dc:	4a20      	ldr	r2, [pc, #128]	; (8002660 <SystemClock_Config+0xcc>)
 80025de:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80025e2:	6013      	str	r3, [r2, #0]
 80025e4:	4b1e      	ldr	r3, [pc, #120]	; (8002660 <SystemClock_Config+0xcc>)
 80025e6:	681b      	ldr	r3, [r3, #0]
 80025e8:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80025ec:	607b      	str	r3, [r7, #4]
 80025ee:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80025f0:	2301      	movs	r3, #1
 80025f2:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80025f4:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80025f8:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80025fa:	2302      	movs	r3, #2
 80025fc:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80025fe:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8002602:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 12;
 8002604:	230c      	movs	r3, #12
 8002606:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 96;
 8002608:	2360      	movs	r3, #96	; 0x60
 800260a:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800260c:	2302      	movs	r3, #2
 800260e:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8002610:	2304      	movs	r3, #4
 8002612:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002614:	f107 0320 	add.w	r3, r7, #32
 8002618:	4618      	mov	r0, r3
 800261a:	f004 f8a3 	bl	8006764 <HAL_RCC_OscConfig>
 800261e:	4603      	mov	r3, r0
 8002620:	2b00      	cmp	r3, #0
 8002622:	d001      	beq.n	8002628 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8002624:	f000 fb62 	bl	8002cec <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002628:	230f      	movs	r3, #15
 800262a:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800262c:	2302      	movs	r3, #2
 800262e:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002630:	2300      	movs	r3, #0
 8002632:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8002634:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002638:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800263a:	2300      	movs	r3, #0
 800263c:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 800263e:	f107 030c 	add.w	r3, r7, #12
 8002642:	2103      	movs	r1, #3
 8002644:	4618      	mov	r0, r3
 8002646:	f004 fb05 	bl	8006c54 <HAL_RCC_ClockConfig>
 800264a:	4603      	mov	r3, r0
 800264c:	2b00      	cmp	r3, #0
 800264e:	d001      	beq.n	8002654 <SystemClock_Config+0xc0>
  {
    Error_Handler();
 8002650:	f000 fb4c 	bl	8002cec <Error_Handler>
  }
}
 8002654:	bf00      	nop
 8002656:	3750      	adds	r7, #80	; 0x50
 8002658:	46bd      	mov	sp, r7
 800265a:	bd80      	pop	{r7, pc}
 800265c:	40023800 	.word	0x40023800
 8002660:	40007000 	.word	0x40007000

08002664 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8002664:	b580      	push	{r7, lr}
 8002666:	b090      	sub	sp, #64	; 0x40
 8002668:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  LL_ADC_InitTypeDef ADC_InitStruct = {0};
 800266a:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800266e:	2200      	movs	r2, #0
 8002670:	601a      	str	r2, [r3, #0]
 8002672:	605a      	str	r2, [r3, #4]
 8002674:	609a      	str	r2, [r3, #8]
  LL_ADC_REG_InitTypeDef ADC_REG_InitStruct = {0};
 8002676:	f107 0320 	add.w	r3, r7, #32
 800267a:	2200      	movs	r2, #0
 800267c:	601a      	str	r2, [r3, #0]
 800267e:	605a      	str	r2, [r3, #4]
 8002680:	609a      	str	r2, [r3, #8]
 8002682:	60da      	str	r2, [r3, #12]
 8002684:	611a      	str	r2, [r3, #16]
  LL_ADC_CommonInitTypeDef ADC_CommonInitStruct = {0};
 8002686:	2300      	movs	r3, #0
 8002688:	61fb      	str	r3, [r7, #28]

  LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 800268a:	1d3b      	adds	r3, r7, #4
 800268c:	2200      	movs	r2, #0
 800268e:	601a      	str	r2, [r3, #0]
 8002690:	605a      	str	r2, [r3, #4]
 8002692:	609a      	str	r2, [r3, #8]
 8002694:	60da      	str	r2, [r3, #12]
 8002696:	611a      	str	r2, [r3, #16]
 8002698:	615a      	str	r2, [r3, #20]

  /* Peripheral clock enable */
  LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_ADC1);
 800269a:	f44f 7080 	mov.w	r0, #256	; 0x100
 800269e:	f7ff fad9 	bl	8001c54 <LL_APB2_GRP1_EnableClock>

  LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOA);
 80026a2:	2001      	movs	r0, #1
 80026a4:	f7ff fabe 	bl	8001c24 <LL_AHB1_GRP1_EnableClock>
  /**ADC1 GPIO Configuration
  PA0-WKUP   ------> ADC1_IN0
  */
  GPIO_InitStruct.Pin = LL_GPIO_PIN_0;
 80026a8:	2301      	movs	r3, #1
 80026aa:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 80026ac:	2303      	movs	r3, #3
 80026ae:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 80026b0:	2300      	movs	r3, #0
 80026b2:	617b      	str	r3, [r7, #20]
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80026b4:	1d3b      	adds	r3, r7, #4
 80026b6:	4619      	mov	r1, r3
 80026b8:	4841      	ldr	r0, [pc, #260]	; (80027c0 <MX_ADC1_Init+0x15c>)
 80026ba:	f006 ff22 	bl	8009502 <LL_GPIO_Init>

  /* ADC1 DMA Init */

  /* ADC1 Init */
  LL_DMA_SetChannelSelection(DMA2, LL_DMA_STREAM_0, LL_DMA_CHANNEL_0);
 80026be:	2200      	movs	r2, #0
 80026c0:	2100      	movs	r1, #0
 80026c2:	4840      	ldr	r0, [pc, #256]	; (80027c4 <MX_ADC1_Init+0x160>)
 80026c4:	f7ff fc1e 	bl	8001f04 <LL_DMA_SetChannelSelection>

  LL_DMA_SetDataTransferDirection(DMA2, LL_DMA_STREAM_0, LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
 80026c8:	2200      	movs	r2, #0
 80026ca:	2100      	movs	r1, #0
 80026cc:	483d      	ldr	r0, [pc, #244]	; (80027c4 <MX_ADC1_Init+0x160>)
 80026ce:	f7ff faf9 	bl	8001cc4 <LL_DMA_SetDataTransferDirection>

  LL_DMA_SetStreamPriorityLevel(DMA2, LL_DMA_STREAM_0, LL_DMA_PRIORITY_LOW);
 80026d2:	2200      	movs	r2, #0
 80026d4:	2100      	movs	r1, #0
 80026d6:	483b      	ldr	r0, [pc, #236]	; (80027c4 <MX_ADC1_Init+0x160>)
 80026d8:	f7ff fbcc 	bl	8001e74 <LL_DMA_SetStreamPriorityLevel>

  LL_DMA_SetMode(DMA2, LL_DMA_STREAM_0, LL_DMA_MODE_CIRCULAR);
 80026dc:	f44f 7280 	mov.w	r2, #256	; 0x100
 80026e0:	2100      	movs	r1, #0
 80026e2:	4838      	ldr	r0, [pc, #224]	; (80027c4 <MX_ADC1_Init+0x160>)
 80026e4:	f7ff fb12 	bl	8001d0c <LL_DMA_SetMode>

  LL_DMA_SetPeriphIncMode(DMA2, LL_DMA_STREAM_0, LL_DMA_PERIPH_NOINCREMENT);
 80026e8:	2200      	movs	r2, #0
 80026ea:	2100      	movs	r1, #0
 80026ec:	4835      	ldr	r0, [pc, #212]	; (80027c4 <MX_ADC1_Init+0x160>)
 80026ee:	f7ff fb31 	bl	8001d54 <LL_DMA_SetPeriphIncMode>

  LL_DMA_SetMemoryIncMode(DMA2, LL_DMA_STREAM_0, LL_DMA_MEMORY_NOINCREMENT);
 80026f2:	2200      	movs	r2, #0
 80026f4:	2100      	movs	r1, #0
 80026f6:	4833      	ldr	r0, [pc, #204]	; (80027c4 <MX_ADC1_Init+0x160>)
 80026f8:	f7ff fb50 	bl	8001d9c <LL_DMA_SetMemoryIncMode>

  LL_DMA_SetPeriphSize(DMA2, LL_DMA_STREAM_0, LL_DMA_PDATAALIGN_HALFWORD);
 80026fc:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002700:	2100      	movs	r1, #0
 8002702:	4830      	ldr	r0, [pc, #192]	; (80027c4 <MX_ADC1_Init+0x160>)
 8002704:	f7ff fb6e 	bl	8001de4 <LL_DMA_SetPeriphSize>

  LL_DMA_SetMemorySize(DMA2, LL_DMA_STREAM_0, LL_DMA_MDATAALIGN_HALFWORD);
 8002708:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800270c:	2100      	movs	r1, #0
 800270e:	482d      	ldr	r0, [pc, #180]	; (80027c4 <MX_ADC1_Init+0x160>)
 8002710:	f7ff fb8c 	bl	8001e2c <LL_DMA_SetMemorySize>

  LL_DMA_DisableFifoMode(DMA2, LL_DMA_STREAM_0);
 8002714:	2100      	movs	r1, #0
 8002716:	482b      	ldr	r0, [pc, #172]	; (80027c4 <MX_ADC1_Init+0x160>)
 8002718:	f7ff fc18 	bl	8001f4c <LL_DMA_DisableFifoMode>

  /* ADC1 interrupt Init */
  NVIC_SetPriority(ADC_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),3, 0));
 800271c:	f7ff f8f6 	bl	800190c <__NVIC_GetPriorityGrouping>
 8002720:	4603      	mov	r3, r0
 8002722:	2200      	movs	r2, #0
 8002724:	2103      	movs	r1, #3
 8002726:	4618      	mov	r0, r3
 8002728:	f7ff f946 	bl	80019b8 <NVIC_EncodePriority>
 800272c:	4603      	mov	r3, r0
 800272e:	4619      	mov	r1, r3
 8002730:	2012      	movs	r0, #18
 8002732:	f7ff f917 	bl	8001964 <__NVIC_SetPriority>
  NVIC_EnableIRQ(ADC_IRQn);
 8002736:	2012      	movs	r0, #18
 8002738:	f7ff f8f6 	bl	8001928 <__NVIC_EnableIRQ>

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  ADC_InitStruct.Resolution = LL_ADC_RESOLUTION_12B;
 800273c:	2300      	movs	r3, #0
 800273e:	637b      	str	r3, [r7, #52]	; 0x34
  ADC_InitStruct.DataAlignment = LL_ADC_DATA_ALIGN_RIGHT;
 8002740:	2300      	movs	r3, #0
 8002742:	63bb      	str	r3, [r7, #56]	; 0x38
  ADC_InitStruct.SequencersScanMode = LL_ADC_SEQ_SCAN_DISABLE;
 8002744:	2300      	movs	r3, #0
 8002746:	63fb      	str	r3, [r7, #60]	; 0x3c
  LL_ADC_Init(ADC1, &ADC_InitStruct);
 8002748:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800274c:	4619      	mov	r1, r3
 800274e:	481e      	ldr	r0, [pc, #120]	; (80027c8 <MX_ADC1_Init+0x164>)
 8002750:	f006 fd1e 	bl	8009190 <LL_ADC_Init>
  ADC_REG_InitStruct.TriggerSource = LL_ADC_REG_TRIG_EXT_TIM4_CH4;
 8002754:	f04f 53c8 	mov.w	r3, #419430400	; 0x19000000
 8002758:	623b      	str	r3, [r7, #32]
  ADC_REG_InitStruct.SequencerLength = LL_ADC_REG_SEQ_SCAN_DISABLE;
 800275a:	2300      	movs	r3, #0
 800275c:	627b      	str	r3, [r7, #36]	; 0x24
  ADC_REG_InitStruct.SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
 800275e:	2300      	movs	r3, #0
 8002760:	62bb      	str	r3, [r7, #40]	; 0x28
  ADC_REG_InitStruct.ContinuousMode = LL_ADC_REG_CONV_SINGLE;
 8002762:	2300      	movs	r3, #0
 8002764:	62fb      	str	r3, [r7, #44]	; 0x2c
  ADC_REG_InitStruct.DMATransfer = LL_ADC_REG_DMA_TRANSFER_UNLIMITED;
 8002766:	f44f 7340 	mov.w	r3, #768	; 0x300
 800276a:	633b      	str	r3, [r7, #48]	; 0x30
  LL_ADC_REG_Init(ADC1, &ADC_REG_InitStruct);
 800276c:	f107 0320 	add.w	r3, r7, #32
 8002770:	4619      	mov	r1, r3
 8002772:	4815      	ldr	r0, [pc, #84]	; (80027c8 <MX_ADC1_Init+0x164>)
 8002774:	f006 fd38 	bl	80091e8 <LL_ADC_REG_Init>
  LL_ADC_REG_SetFlagEndOfConversion(ADC1, LL_ADC_REG_FLAG_EOC_SEQUENCE_CONV);
 8002778:	2100      	movs	r1, #0
 800277a:	4813      	ldr	r0, [pc, #76]	; (80027c8 <MX_ADC1_Init+0x164>)
 800277c:	f7ff f999 	bl	8001ab2 <LL_ADC_REG_SetFlagEndOfConversion>
  ADC_CommonInitStruct.CommonClock = LL_ADC_CLOCK_SYNC_PCLK_DIV4;
 8002780:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8002784:	61fb      	str	r3, [r7, #28]
  LL_ADC_CommonInit(__LL_ADC_COMMON_INSTANCE(ADC1), &ADC_CommonInitStruct);
 8002786:	f107 031c 	add.w	r3, r7, #28
 800278a:	4619      	mov	r1, r3
 800278c:	480f      	ldr	r0, [pc, #60]	; (80027cc <MX_ADC1_Init+0x168>)
 800278e:	f006 fce1 	bl	8009154 <LL_ADC_CommonInit>
  LL_ADC_REG_StartConversionExtTrig(ADC1, LL_ADC_REG_TRIG_EXT_RISING);
 8002792:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
 8002796:	480c      	ldr	r0, [pc, #48]	; (80027c8 <MX_ADC1_Init+0x164>)
 8002798:	f7ff fa22 	bl	8001be0 <LL_ADC_REG_StartConversionExtTrig>

  /** Configure Regular Channel
  */
  LL_ADC_REG_SetSequencerRanks(ADC1, LL_ADC_REG_RANK_1, LL_ADC_CHANNEL_0);
 800279c:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 80027a0:	f44f 7100 	mov.w	r1, #512	; 0x200
 80027a4:	4808      	ldr	r0, [pc, #32]	; (80027c8 <MX_ADC1_Init+0x164>)
 80027a6:	f7ff f947 	bl	8001a38 <LL_ADC_REG_SetSequencerRanks>
  LL_ADC_SetChannelSamplingTime(ADC1, LL_ADC_CHANNEL_0, LL_ADC_SAMPLINGTIME_3CYCLES);
 80027aa:	2200      	movs	r2, #0
 80027ac:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 80027b0:	4805      	ldr	r0, [pc, #20]	; (80027c8 <MX_ADC1_Init+0x164>)
 80027b2:	f7ff f991 	bl	8001ad8 <LL_ADC_SetChannelSamplingTime>
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 80027b6:	bf00      	nop
 80027b8:	3740      	adds	r7, #64	; 0x40
 80027ba:	46bd      	mov	sp, r7
 80027bc:	bd80      	pop	{r7, pc}
 80027be:	bf00      	nop
 80027c0:	40020000 	.word	0x40020000
 80027c4:	40026400 	.word	0x40026400
 80027c8:	40012000 	.word	0x40012000
 80027cc:	40012300 	.word	0x40012300

080027d0 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 80027d0:	b580      	push	{r7, lr}
 80027d2:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 80027d4:	4b06      	ldr	r3, [pc, #24]	; (80027f0 <MX_CRC_Init+0x20>)
 80027d6:	4a07      	ldr	r2, [pc, #28]	; (80027f4 <MX_CRC_Init+0x24>)
 80027d8:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80027da:	4805      	ldr	r0, [pc, #20]	; (80027f0 <MX_CRC_Init+0x20>)
 80027dc:	f001 fd87 	bl	80042ee <HAL_CRC_Init>
 80027e0:	4603      	mov	r3, r0
 80027e2:	2b00      	cmp	r3, #0
 80027e4:	d001      	beq.n	80027ea <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 80027e6:	f000 fa81 	bl	8002cec <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 80027ea:	bf00      	nop
 80027ec:	bd80      	pop	{r7, pc}
 80027ee:	bf00      	nop
 80027f0:	20000150 	.word	0x20000150
 80027f4:	40023000 	.word	0x40023000

080027f8 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 80027f8:	b580      	push	{r7, lr}
 80027fa:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80027fc:	4b12      	ldr	r3, [pc, #72]	; (8002848 <MX_I2C1_Init+0x50>)
 80027fe:	4a13      	ldr	r2, [pc, #76]	; (800284c <MX_I2C1_Init+0x54>)
 8002800:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8002802:	4b11      	ldr	r3, [pc, #68]	; (8002848 <MX_I2C1_Init+0x50>)
 8002804:	4a12      	ldr	r2, [pc, #72]	; (8002850 <MX_I2C1_Init+0x58>)
 8002806:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8002808:	4b0f      	ldr	r3, [pc, #60]	; (8002848 <MX_I2C1_Init+0x50>)
 800280a:	2200      	movs	r2, #0
 800280c:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 800280e:	4b0e      	ldr	r3, [pc, #56]	; (8002848 <MX_I2C1_Init+0x50>)
 8002810:	2200      	movs	r2, #0
 8002812:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8002814:	4b0c      	ldr	r3, [pc, #48]	; (8002848 <MX_I2C1_Init+0x50>)
 8002816:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800281a:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800281c:	4b0a      	ldr	r3, [pc, #40]	; (8002848 <MX_I2C1_Init+0x50>)
 800281e:	2200      	movs	r2, #0
 8002820:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8002822:	4b09      	ldr	r3, [pc, #36]	; (8002848 <MX_I2C1_Init+0x50>)
 8002824:	2200      	movs	r2, #0
 8002826:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002828:	4b07      	ldr	r3, [pc, #28]	; (8002848 <MX_I2C1_Init+0x50>)
 800282a:	2200      	movs	r2, #0
 800282c:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800282e:	4b06      	ldr	r3, [pc, #24]	; (8002848 <MX_I2C1_Init+0x50>)
 8002830:	2200      	movs	r2, #0
 8002832:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8002834:	4804      	ldr	r0, [pc, #16]	; (8002848 <MX_I2C1_Init+0x50>)
 8002836:	f002 faf1 	bl	8004e1c <HAL_I2C_Init>
 800283a:	4603      	mov	r3, r0
 800283c:	2b00      	cmp	r3, #0
 800283e:	d001      	beq.n	8002844 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8002840:	f000 fa54 	bl	8002cec <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8002844:	bf00      	nop
 8002846:	bd80      	pop	{r7, pc}
 8002848:	20000158 	.word	0x20000158
 800284c:	40005400 	.word	0x40005400
 8002850:	000186a0 	.word	0x000186a0

08002854 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8002854:	b580      	push	{r7, lr}
 8002856:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 8002858:	4b17      	ldr	r3, [pc, #92]	; (80028b8 <MX_SPI2_Init+0x64>)
 800285a:	4a18      	ldr	r2, [pc, #96]	; (80028bc <MX_SPI2_Init+0x68>)
 800285c:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 800285e:	4b16      	ldr	r3, [pc, #88]	; (80028b8 <MX_SPI2_Init+0x64>)
 8002860:	f44f 7282 	mov.w	r2, #260	; 0x104
 8002864:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8002866:	4b14      	ldr	r3, [pc, #80]	; (80028b8 <MX_SPI2_Init+0x64>)
 8002868:	2200      	movs	r2, #0
 800286a:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 800286c:	4b12      	ldr	r3, [pc, #72]	; (80028b8 <MX_SPI2_Init+0x64>)
 800286e:	2200      	movs	r2, #0
 8002870:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 8002872:	4b11      	ldr	r3, [pc, #68]	; (80028b8 <MX_SPI2_Init+0x64>)
 8002874:	2200      	movs	r2, #0
 8002876:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8002878:	4b0f      	ldr	r3, [pc, #60]	; (80028b8 <MX_SPI2_Init+0x64>)
 800287a:	2200      	movs	r2, #0
 800287c:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 800287e:	4b0e      	ldr	r3, [pc, #56]	; (80028b8 <MX_SPI2_Init+0x64>)
 8002880:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002884:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8002886:	4b0c      	ldr	r3, [pc, #48]	; (80028b8 <MX_SPI2_Init+0x64>)
 8002888:	2200      	movs	r2, #0
 800288a:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800288c:	4b0a      	ldr	r3, [pc, #40]	; (80028b8 <MX_SPI2_Init+0x64>)
 800288e:	2200      	movs	r2, #0
 8002890:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8002892:	4b09      	ldr	r3, [pc, #36]	; (80028b8 <MX_SPI2_Init+0x64>)
 8002894:	2200      	movs	r2, #0
 8002896:	625a      	str	r2, [r3, #36]	; 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002898:	4b07      	ldr	r3, [pc, #28]	; (80028b8 <MX_SPI2_Init+0x64>)
 800289a:	2200      	movs	r2, #0
 800289c:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 10;
 800289e:	4b06      	ldr	r3, [pc, #24]	; (80028b8 <MX_SPI2_Init+0x64>)
 80028a0:	220a      	movs	r2, #10
 80028a2:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 80028a4:	4804      	ldr	r0, [pc, #16]	; (80028b8 <MX_SPI2_Init+0x64>)
 80028a6:	f004 fba1 	bl	8006fec <HAL_SPI_Init>
 80028aa:	4603      	mov	r3, r0
 80028ac:	2b00      	cmp	r3, #0
 80028ae:	d001      	beq.n	80028b4 <MX_SPI2_Init+0x60>
  {
    Error_Handler();
 80028b0:	f000 fa1c 	bl	8002cec <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 80028b4:	bf00      	nop
 80028b6:	bd80      	pop	{r7, pc}
 80028b8:	200001ac 	.word	0x200001ac
 80028bc:	40003800 	.word	0x40003800

080028c0 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80028c0:	b580      	push	{r7, lr}
 80028c2:	b08a      	sub	sp, #40	; 0x28
 80028c4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80028c6:	f107 0320 	add.w	r3, r7, #32
 80028ca:	2200      	movs	r2, #0
 80028cc:	601a      	str	r2, [r3, #0]
 80028ce:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80028d0:	1d3b      	adds	r3, r7, #4
 80028d2:	2200      	movs	r2, #0
 80028d4:	601a      	str	r2, [r3, #0]
 80028d6:	605a      	str	r2, [r3, #4]
 80028d8:	609a      	str	r2, [r3, #8]
 80028da:	60da      	str	r2, [r3, #12]
 80028dc:	611a      	str	r2, [r3, #16]
 80028de:	615a      	str	r2, [r3, #20]
 80028e0:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80028e2:	4b22      	ldr	r3, [pc, #136]	; (800296c <MX_TIM2_Init+0xac>)
 80028e4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80028e8:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 1000;
 80028ea:	4b20      	ldr	r3, [pc, #128]	; (800296c <MX_TIM2_Init+0xac>)
 80028ec:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80028f0:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80028f2:	4b1e      	ldr	r3, [pc, #120]	; (800296c <MX_TIM2_Init+0xac>)
 80028f4:	2200      	movs	r2, #0
 80028f6:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 100;
 80028f8:	4b1c      	ldr	r3, [pc, #112]	; (800296c <MX_TIM2_Init+0xac>)
 80028fa:	2264      	movs	r2, #100	; 0x64
 80028fc:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80028fe:	4b1b      	ldr	r3, [pc, #108]	; (800296c <MX_TIM2_Init+0xac>)
 8002900:	2200      	movs	r2, #0
 8002902:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002904:	4b19      	ldr	r3, [pc, #100]	; (800296c <MX_TIM2_Init+0xac>)
 8002906:	2200      	movs	r2, #0
 8002908:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 800290a:	4818      	ldr	r0, [pc, #96]	; (800296c <MX_TIM2_Init+0xac>)
 800290c:	f005 fcec 	bl	80082e8 <HAL_TIM_PWM_Init>
 8002910:	4603      	mov	r3, r0
 8002912:	2b00      	cmp	r3, #0
 8002914:	d001      	beq.n	800291a <MX_TIM2_Init+0x5a>
  {
    Error_Handler();
 8002916:	f000 f9e9 	bl	8002cec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800291a:	2300      	movs	r3, #0
 800291c:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800291e:	2300      	movs	r3, #0
 8002920:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002922:	f107 0320 	add.w	r3, r7, #32
 8002926:	4619      	mov	r1, r3
 8002928:	4810      	ldr	r0, [pc, #64]	; (800296c <MX_TIM2_Init+0xac>)
 800292a:	f006 fb57 	bl	8008fdc <HAL_TIMEx_MasterConfigSynchronization>
 800292e:	4603      	mov	r3, r0
 8002930:	2b00      	cmp	r3, #0
 8002932:	d001      	beq.n	8002938 <MX_TIM2_Init+0x78>
  {
    Error_Handler();
 8002934:	f000 f9da 	bl	8002cec <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002938:	2360      	movs	r3, #96	; 0x60
 800293a:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 800293c:	2300      	movs	r3, #0
 800293e:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002940:	2300      	movs	r3, #0
 8002942:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002944:	2300      	movs	r3, #0
 8002946:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002948:	1d3b      	adds	r3, r7, #4
 800294a:	2200      	movs	r2, #0
 800294c:	4619      	mov	r1, r3
 800294e:	4807      	ldr	r0, [pc, #28]	; (800296c <MX_TIM2_Init+0xac>)
 8002950:	f005 feba 	bl	80086c8 <HAL_TIM_PWM_ConfigChannel>
 8002954:	4603      	mov	r3, r0
 8002956:	2b00      	cmp	r3, #0
 8002958:	d001      	beq.n	800295e <MX_TIM2_Init+0x9e>
  {
    Error_Handler();
 800295a:	f000 f9c7 	bl	8002cec <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 800295e:	4803      	ldr	r0, [pc, #12]	; (800296c <MX_TIM2_Init+0xac>)
 8002960:	f000 fb3c 	bl	8002fdc <HAL_TIM_MspPostInit>

}
 8002964:	bf00      	nop
 8002966:	3728      	adds	r7, #40	; 0x28
 8002968:	46bd      	mov	sp, r7
 800296a:	bd80      	pop	{r7, pc}
 800296c:	20000264 	.word	0x20000264

08002970 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8002970:	b580      	push	{r7, lr}
 8002972:	b086      	sub	sp, #24
 8002974:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002976:	f107 0308 	add.w	r3, r7, #8
 800297a:	2200      	movs	r2, #0
 800297c:	601a      	str	r2, [r3, #0]
 800297e:	605a      	str	r2, [r3, #4]
 8002980:	609a      	str	r2, [r3, #8]
 8002982:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002984:	463b      	mov	r3, r7
 8002986:	2200      	movs	r2, #0
 8002988:	601a      	str	r2, [r3, #0]
 800298a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 800298c:	4b1d      	ldr	r3, [pc, #116]	; (8002a04 <MX_TIM3_Init+0x94>)
 800298e:	4a1e      	ldr	r2, [pc, #120]	; (8002a08 <MX_TIM3_Init+0x98>)
 8002990:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 13333;
 8002992:	4b1c      	ldr	r3, [pc, #112]	; (8002a04 <MX_TIM3_Init+0x94>)
 8002994:	f243 4215 	movw	r2, #13333	; 0x3415
 8002998:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800299a:	4b1a      	ldr	r3, [pc, #104]	; (8002a04 <MX_TIM3_Init+0x94>)
 800299c:	2200      	movs	r2, #0
 800299e:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 100;
 80029a0:	4b18      	ldr	r3, [pc, #96]	; (8002a04 <MX_TIM3_Init+0x94>)
 80029a2:	2264      	movs	r2, #100	; 0x64
 80029a4:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80029a6:	4b17      	ldr	r3, [pc, #92]	; (8002a04 <MX_TIM3_Init+0x94>)
 80029a8:	2200      	movs	r2, #0
 80029aa:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80029ac:	4b15      	ldr	r3, [pc, #84]	; (8002a04 <MX_TIM3_Init+0x94>)
 80029ae:	2200      	movs	r2, #0
 80029b0:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80029b2:	4814      	ldr	r0, [pc, #80]	; (8002a04 <MX_TIM3_Init+0x94>)
 80029b4:	f005 fb36 	bl	8008024 <HAL_TIM_Base_Init>
 80029b8:	4603      	mov	r3, r0
 80029ba:	2b00      	cmp	r3, #0
 80029bc:	d001      	beq.n	80029c2 <MX_TIM3_Init+0x52>
  {
    Error_Handler();
 80029be:	f000 f995 	bl	8002cec <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80029c2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80029c6:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80029c8:	f107 0308 	add.w	r3, r7, #8
 80029cc:	4619      	mov	r1, r3
 80029ce:	480d      	ldr	r0, [pc, #52]	; (8002a04 <MX_TIM3_Init+0x94>)
 80029d0:	f005 ff3c 	bl	800884c <HAL_TIM_ConfigClockSource>
 80029d4:	4603      	mov	r3, r0
 80029d6:	2b00      	cmp	r3, #0
 80029d8:	d001      	beq.n	80029de <MX_TIM3_Init+0x6e>
  {
    Error_Handler();
 80029da:	f000 f987 	bl	8002cec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80029de:	2300      	movs	r3, #0
 80029e0:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80029e2:	2300      	movs	r3, #0
 80029e4:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80029e6:	463b      	mov	r3, r7
 80029e8:	4619      	mov	r1, r3
 80029ea:	4806      	ldr	r0, [pc, #24]	; (8002a04 <MX_TIM3_Init+0x94>)
 80029ec:	f006 faf6 	bl	8008fdc <HAL_TIMEx_MasterConfigSynchronization>
 80029f0:	4603      	mov	r3, r0
 80029f2:	2b00      	cmp	r3, #0
 80029f4:	d001      	beq.n	80029fa <MX_TIM3_Init+0x8a>
  {
    Error_Handler();
 80029f6:	f000 f979 	bl	8002cec <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 80029fa:	bf00      	nop
 80029fc:	3718      	adds	r7, #24
 80029fe:	46bd      	mov	sp, r7
 8002a00:	bd80      	pop	{r7, pc}
 8002a02:	bf00      	nop
 8002a04:	200002ac 	.word	0x200002ac
 8002a08:	40000400 	.word	0x40000400

08002a0c <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8002a0c:	b580      	push	{r7, lr}
 8002a0e:	b08e      	sub	sp, #56	; 0x38
 8002a10:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002a12:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8002a16:	2200      	movs	r2, #0
 8002a18:	601a      	str	r2, [r3, #0]
 8002a1a:	605a      	str	r2, [r3, #4]
 8002a1c:	609a      	str	r2, [r3, #8]
 8002a1e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002a20:	f107 0320 	add.w	r3, r7, #32
 8002a24:	2200      	movs	r2, #0
 8002a26:	601a      	str	r2, [r3, #0]
 8002a28:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002a2a:	1d3b      	adds	r3, r7, #4
 8002a2c:	2200      	movs	r2, #0
 8002a2e:	601a      	str	r2, [r3, #0]
 8002a30:	605a      	str	r2, [r3, #4]
 8002a32:	609a      	str	r2, [r3, #8]
 8002a34:	60da      	str	r2, [r3, #12]
 8002a36:	611a      	str	r2, [r3, #16]
 8002a38:	615a      	str	r2, [r3, #20]
 8002a3a:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8002a3c:	4b2d      	ldr	r3, [pc, #180]	; (8002af4 <MX_TIM4_Init+0xe8>)
 8002a3e:	4a2e      	ldr	r2, [pc, #184]	; (8002af8 <MX_TIM4_Init+0xec>)
 8002a40:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 83;
 8002a42:	4b2c      	ldr	r3, [pc, #176]	; (8002af4 <MX_TIM4_Init+0xe8>)
 8002a44:	2253      	movs	r2, #83	; 0x53
 8002a46:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002a48:	4b2a      	ldr	r3, [pc, #168]	; (8002af4 <MX_TIM4_Init+0xe8>)
 8002a4a:	2200      	movs	r2, #0
 8002a4c:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 999;
 8002a4e:	4b29      	ldr	r3, [pc, #164]	; (8002af4 <MX_TIM4_Init+0xe8>)
 8002a50:	f240 32e7 	movw	r2, #999	; 0x3e7
 8002a54:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002a56:	4b27      	ldr	r3, [pc, #156]	; (8002af4 <MX_TIM4_Init+0xe8>)
 8002a58:	2200      	movs	r2, #0
 8002a5a:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002a5c:	4b25      	ldr	r3, [pc, #148]	; (8002af4 <MX_TIM4_Init+0xe8>)
 8002a5e:	2200      	movs	r2, #0
 8002a60:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8002a62:	4824      	ldr	r0, [pc, #144]	; (8002af4 <MX_TIM4_Init+0xe8>)
 8002a64:	f005 fade 	bl	8008024 <HAL_TIM_Base_Init>
 8002a68:	4603      	mov	r3, r0
 8002a6a:	2b00      	cmp	r3, #0
 8002a6c:	d001      	beq.n	8002a72 <MX_TIM4_Init+0x66>
  {
    Error_Handler();
 8002a6e:	f000 f93d 	bl	8002cec <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002a72:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002a76:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8002a78:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8002a7c:	4619      	mov	r1, r3
 8002a7e:	481d      	ldr	r0, [pc, #116]	; (8002af4 <MX_TIM4_Init+0xe8>)
 8002a80:	f005 fee4 	bl	800884c <HAL_TIM_ConfigClockSource>
 8002a84:	4603      	mov	r3, r0
 8002a86:	2b00      	cmp	r3, #0
 8002a88:	d001      	beq.n	8002a8e <MX_TIM4_Init+0x82>
  {
    Error_Handler();
 8002a8a:	f000 f92f 	bl	8002cec <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8002a8e:	4819      	ldr	r0, [pc, #100]	; (8002af4 <MX_TIM4_Init+0xe8>)
 8002a90:	f005 fc2a 	bl	80082e8 <HAL_TIM_PWM_Init>
 8002a94:	4603      	mov	r3, r0
 8002a96:	2b00      	cmp	r3, #0
 8002a98:	d001      	beq.n	8002a9e <MX_TIM4_Init+0x92>
  {
    Error_Handler();
 8002a9a:	f000 f927 	bl	8002cec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_OC4REF;
 8002a9e:	2370      	movs	r3, #112	; 0x70
 8002aa0:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002aa2:	2300      	movs	r3, #0
 8002aa4:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8002aa6:	f107 0320 	add.w	r3, r7, #32
 8002aaa:	4619      	mov	r1, r3
 8002aac:	4811      	ldr	r0, [pc, #68]	; (8002af4 <MX_TIM4_Init+0xe8>)
 8002aae:	f006 fa95 	bl	8008fdc <HAL_TIMEx_MasterConfigSynchronization>
 8002ab2:	4603      	mov	r3, r0
 8002ab4:	2b00      	cmp	r3, #0
 8002ab6:	d001      	beq.n	8002abc <MX_TIM4_Init+0xb0>
  {
    Error_Handler();
 8002ab8:	f000 f918 	bl	8002cec <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002abc:	2360      	movs	r3, #96	; 0x60
 8002abe:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 499;
 8002ac0:	f240 13f3 	movw	r3, #499	; 0x1f3
 8002ac4:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002ac6:	2300      	movs	r3, #0
 8002ac8:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002aca:	2300      	movs	r3, #0
 8002acc:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8002ace:	1d3b      	adds	r3, r7, #4
 8002ad0:	220c      	movs	r2, #12
 8002ad2:	4619      	mov	r1, r3
 8002ad4:	4807      	ldr	r0, [pc, #28]	; (8002af4 <MX_TIM4_Init+0xe8>)
 8002ad6:	f005 fdf7 	bl	80086c8 <HAL_TIM_PWM_ConfigChannel>
 8002ada:	4603      	mov	r3, r0
 8002adc:	2b00      	cmp	r3, #0
 8002ade:	d001      	beq.n	8002ae4 <MX_TIM4_Init+0xd8>
  {
    Error_Handler();
 8002ae0:	f000 f904 	bl	8002cec <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 8002ae4:	4803      	ldr	r0, [pc, #12]	; (8002af4 <MX_TIM4_Init+0xe8>)
 8002ae6:	f000 fa79 	bl	8002fdc <HAL_TIM_MspPostInit>

}
 8002aea:	bf00      	nop
 8002aec:	3738      	adds	r7, #56	; 0x38
 8002aee:	46bd      	mov	sp, r7
 8002af0:	bd80      	pop	{r7, pc}
 8002af2:	bf00      	nop
 8002af4:	200002f4 	.word	0x200002f4
 8002af8:	40000800 	.word	0x40000800

08002afc <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8002afc:	b580      	push	{r7, lr}
 8002afe:	b082      	sub	sp, #8
 8002b00:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8002b02:	2300      	movs	r3, #0
 8002b04:	607b      	str	r3, [r7, #4]
 8002b06:	4b1b      	ldr	r3, [pc, #108]	; (8002b74 <MX_DMA_Init+0x78>)
 8002b08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b0a:	4a1a      	ldr	r2, [pc, #104]	; (8002b74 <MX_DMA_Init+0x78>)
 8002b0c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002b10:	6313      	str	r3, [r2, #48]	; 0x30
 8002b12:	4b18      	ldr	r3, [pc, #96]	; (8002b74 <MX_DMA_Init+0x78>)
 8002b14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b16:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002b1a:	607b      	str	r3, [r7, #4]
 8002b1c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA2_CLK_ENABLE();
 8002b1e:	2300      	movs	r3, #0
 8002b20:	603b      	str	r3, [r7, #0]
 8002b22:	4b14      	ldr	r3, [pc, #80]	; (8002b74 <MX_DMA_Init+0x78>)
 8002b24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b26:	4a13      	ldr	r2, [pc, #76]	; (8002b74 <MX_DMA_Init+0x78>)
 8002b28:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8002b2c:	6313      	str	r3, [r2, #48]	; 0x30
 8002b2e:	4b11      	ldr	r3, [pc, #68]	; (8002b74 <MX_DMA_Init+0x78>)
 8002b30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b32:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002b36:	603b      	str	r3, [r7, #0]
 8002b38:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Stream4_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
 8002b3a:	2200      	movs	r2, #0
 8002b3c:	2100      	movs	r1, #0
 8002b3e:	200f      	movs	r0, #15
 8002b40:	f001 fb83 	bl	800424a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 8002b44:	200f      	movs	r0, #15
 8002b46:	f001 fb9c 	bl	8004282 <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream0_IRQn interrupt configuration */
  NVIC_SetPriority(DMA2_Stream0_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),4, 0));
 8002b4a:	f7fe fedf 	bl	800190c <__NVIC_GetPriorityGrouping>
 8002b4e:	4603      	mov	r3, r0
 8002b50:	2200      	movs	r2, #0
 8002b52:	2104      	movs	r1, #4
 8002b54:	4618      	mov	r0, r3
 8002b56:	f7fe ff2f 	bl	80019b8 <NVIC_EncodePriority>
 8002b5a:	4603      	mov	r3, r0
 8002b5c:	4619      	mov	r1, r3
 8002b5e:	2038      	movs	r0, #56	; 0x38
 8002b60:	f7fe ff00 	bl	8001964 <__NVIC_SetPriority>
  NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 8002b64:	2038      	movs	r0, #56	; 0x38
 8002b66:	f7fe fedf 	bl	8001928 <__NVIC_EnableIRQ>

}
 8002b6a:	bf00      	nop
 8002b6c:	3708      	adds	r7, #8
 8002b6e:	46bd      	mov	sp, r7
 8002b70:	bd80      	pop	{r7, pc}
 8002b72:	bf00      	nop
 8002b74:	40023800 	.word	0x40023800

08002b78 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002b78:	b580      	push	{r7, lr}
 8002b7a:	b08a      	sub	sp, #40	; 0x28
 8002b7c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002b7e:	f107 0314 	add.w	r3, r7, #20
 8002b82:	2200      	movs	r2, #0
 8002b84:	601a      	str	r2, [r3, #0]
 8002b86:	605a      	str	r2, [r3, #4]
 8002b88:	609a      	str	r2, [r3, #8]
 8002b8a:	60da      	str	r2, [r3, #12]
 8002b8c:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002b8e:	2300      	movs	r3, #0
 8002b90:	613b      	str	r3, [r7, #16]
 8002b92:	4b52      	ldr	r3, [pc, #328]	; (8002cdc <MX_GPIO_Init+0x164>)
 8002b94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b96:	4a51      	ldr	r2, [pc, #324]	; (8002cdc <MX_GPIO_Init+0x164>)
 8002b98:	f043 0304 	orr.w	r3, r3, #4
 8002b9c:	6313      	str	r3, [r2, #48]	; 0x30
 8002b9e:	4b4f      	ldr	r3, [pc, #316]	; (8002cdc <MX_GPIO_Init+0x164>)
 8002ba0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002ba2:	f003 0304 	and.w	r3, r3, #4
 8002ba6:	613b      	str	r3, [r7, #16]
 8002ba8:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8002baa:	2300      	movs	r3, #0
 8002bac:	60fb      	str	r3, [r7, #12]
 8002bae:	4b4b      	ldr	r3, [pc, #300]	; (8002cdc <MX_GPIO_Init+0x164>)
 8002bb0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002bb2:	4a4a      	ldr	r2, [pc, #296]	; (8002cdc <MX_GPIO_Init+0x164>)
 8002bb4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002bb8:	6313      	str	r3, [r2, #48]	; 0x30
 8002bba:	4b48      	ldr	r3, [pc, #288]	; (8002cdc <MX_GPIO_Init+0x164>)
 8002bbc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002bbe:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002bc2:	60fb      	str	r3, [r7, #12]
 8002bc4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002bc6:	2300      	movs	r3, #0
 8002bc8:	60bb      	str	r3, [r7, #8]
 8002bca:	4b44      	ldr	r3, [pc, #272]	; (8002cdc <MX_GPIO_Init+0x164>)
 8002bcc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002bce:	4a43      	ldr	r2, [pc, #268]	; (8002cdc <MX_GPIO_Init+0x164>)
 8002bd0:	f043 0301 	orr.w	r3, r3, #1
 8002bd4:	6313      	str	r3, [r2, #48]	; 0x30
 8002bd6:	4b41      	ldr	r3, [pc, #260]	; (8002cdc <MX_GPIO_Init+0x164>)
 8002bd8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002bda:	f003 0301 	and.w	r3, r3, #1
 8002bde:	60bb      	str	r3, [r7, #8]
 8002be0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002be2:	2300      	movs	r3, #0
 8002be4:	607b      	str	r3, [r7, #4]
 8002be6:	4b3d      	ldr	r3, [pc, #244]	; (8002cdc <MX_GPIO_Init+0x164>)
 8002be8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002bea:	4a3c      	ldr	r2, [pc, #240]	; (8002cdc <MX_GPIO_Init+0x164>)
 8002bec:	f043 0302 	orr.w	r3, r3, #2
 8002bf0:	6313      	str	r3, [r2, #48]	; 0x30
 8002bf2:	4b3a      	ldr	r3, [pc, #232]	; (8002cdc <MX_GPIO_Init+0x164>)
 8002bf4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002bf6:	f003 0302 	and.w	r3, r3, #2
 8002bfa:	607b      	str	r3, [r7, #4]
 8002bfc:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_BOARD_GPIO_Port, LED_BOARD_Pin, GPIO_PIN_RESET);
 8002bfe:	2200      	movs	r2, #0
 8002c00:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002c04:	4836      	ldr	r0, [pc, #216]	; (8002ce0 <MX_GPIO_Init+0x168>)
 8002c06:	f002 f8bd 	bl	8004d84 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);
 8002c0a:	2201      	movs	r2, #1
 8002c0c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002c10:	4834      	ldr	r0, [pc, #208]	; (8002ce4 <MX_GPIO_Init+0x16c>)
 8002c12:	f002 f8b7 	bl	8004d84 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET);
 8002c16:	2201      	movs	r2, #1
 8002c18:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002c1c:	4832      	ldr	r0, [pc, #200]	; (8002ce8 <MX_GPIO_Init+0x170>)
 8002c1e:	f002 f8b1 	bl	8004d84 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, DISPL_RST_Pin|DISPL_DC_Pin, GPIO_PIN_RESET);
 8002c22:	2200      	movs	r2, #0
 8002c24:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8002c28:	482f      	ldr	r0, [pc, #188]	; (8002ce8 <MX_GPIO_Init+0x170>)
 8002c2a:	f002 f8ab 	bl	8004d84 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_BOARD_Pin */
  GPIO_InitStruct.Pin = LED_BOARD_Pin;
 8002c2e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002c32:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002c34:	2301      	movs	r3, #1
 8002c36:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c38:	2300      	movs	r3, #0
 8002c3a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002c3c:	2300      	movs	r3, #0
 8002c3e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LED_BOARD_GPIO_Port, &GPIO_InitStruct);
 8002c40:	f107 0314 	add.w	r3, r7, #20
 8002c44:	4619      	mov	r1, r3
 8002c46:	4826      	ldr	r0, [pc, #152]	; (8002ce0 <MX_GPIO_Init+0x168>)
 8002c48:	f001 ff00 	bl	8004a4c <HAL_GPIO_Init>

  /*Configure GPIO pin : TOUCH_CS_Pin */
  GPIO_InitStruct.Pin = TOUCH_CS_Pin;
 8002c4c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002c50:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002c52:	2301      	movs	r3, #1
 8002c54:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c56:	2300      	movs	r3, #0
 8002c58:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002c5a:	2302      	movs	r3, #2
 8002c5c:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(TOUCH_CS_GPIO_Port, &GPIO_InitStruct);
 8002c5e:	f107 0314 	add.w	r3, r7, #20
 8002c62:	4619      	mov	r1, r3
 8002c64:	481f      	ldr	r0, [pc, #124]	; (8002ce4 <MX_GPIO_Init+0x16c>)
 8002c66:	f001 fef1 	bl	8004a4c <HAL_GPIO_Init>

  /*Configure GPIO pins : DISPL_CS_Pin DISPL_DC_Pin */
  GPIO_InitStruct.Pin = DISPL_CS_Pin|DISPL_DC_Pin;
 8002c6a:	f44f 63a0 	mov.w	r3, #1280	; 0x500
 8002c6e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002c70:	2301      	movs	r3, #1
 8002c72:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c74:	2300      	movs	r3, #0
 8002c76:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002c78:	2302      	movs	r3, #2
 8002c7a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002c7c:	f107 0314 	add.w	r3, r7, #20
 8002c80:	4619      	mov	r1, r3
 8002c82:	4819      	ldr	r0, [pc, #100]	; (8002ce8 <MX_GPIO_Init+0x170>)
 8002c84:	f001 fee2 	bl	8004a4c <HAL_GPIO_Init>

  /*Configure GPIO pin : DISPL_RST_Pin */
  GPIO_InitStruct.Pin = DISPL_RST_Pin;
 8002c88:	f44f 7300 	mov.w	r3, #512	; 0x200
 8002c8c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002c8e:	2301      	movs	r3, #1
 8002c90:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c92:	2300      	movs	r3, #0
 8002c94:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002c96:	2300      	movs	r3, #0
 8002c98:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(DISPL_RST_GPIO_Port, &GPIO_InitStruct);
 8002c9a:	f107 0314 	add.w	r3, r7, #20
 8002c9e:	4619      	mov	r1, r3
 8002ca0:	4811      	ldr	r0, [pc, #68]	; (8002ce8 <MX_GPIO_Init+0x170>)
 8002ca2:	f001 fed3 	bl	8004a4c <HAL_GPIO_Init>

  /*Configure GPIO pin : TOUCH_INT_Pin */
  GPIO_InitStruct.Pin = TOUCH_INT_Pin;
 8002ca6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002caa:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8002cac:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8002cb0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002cb2:	2301      	movs	r3, #1
 8002cb4:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(TOUCH_INT_GPIO_Port, &GPIO_InitStruct);
 8002cb6:	f107 0314 	add.w	r3, r7, #20
 8002cba:	4619      	mov	r1, r3
 8002cbc:	480a      	ldr	r0, [pc, #40]	; (8002ce8 <MX_GPIO_Init+0x170>)
 8002cbe:	f001 fec5 	bl	8004a4c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 1, 0);
 8002cc2:	2200      	movs	r2, #0
 8002cc4:	2101      	movs	r1, #1
 8002cc6:	2028      	movs	r0, #40	; 0x28
 8002cc8:	f001 fabf 	bl	800424a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8002ccc:	2028      	movs	r0, #40	; 0x28
 8002cce:	f001 fad8 	bl	8004282 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8002cd2:	bf00      	nop
 8002cd4:	3728      	adds	r7, #40	; 0x28
 8002cd6:	46bd      	mov	sp, r7
 8002cd8:	bd80      	pop	{r7, pc}
 8002cda:	bf00      	nop
 8002cdc:	40023800 	.word	0x40023800
 8002ce0:	40020800 	.word	0x40020800
 8002ce4:	40020400 	.word	0x40020400
 8002ce8:	40020000 	.word	0x40020000

08002cec <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002cec:	b480      	push	{r7}
 8002cee:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002cf0:	b672      	cpsid	i
}
 8002cf2:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002cf4:	e7fe      	b.n	8002cf4 <Error_Handler+0x8>
	...

08002cf8 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002cf8:	b480      	push	{r7}
 8002cfa:	b083      	sub	sp, #12
 8002cfc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002cfe:	2300      	movs	r3, #0
 8002d00:	607b      	str	r3, [r7, #4]
 8002d02:	4b10      	ldr	r3, [pc, #64]	; (8002d44 <HAL_MspInit+0x4c>)
 8002d04:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002d06:	4a0f      	ldr	r2, [pc, #60]	; (8002d44 <HAL_MspInit+0x4c>)
 8002d08:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002d0c:	6453      	str	r3, [r2, #68]	; 0x44
 8002d0e:	4b0d      	ldr	r3, [pc, #52]	; (8002d44 <HAL_MspInit+0x4c>)
 8002d10:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002d12:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002d16:	607b      	str	r3, [r7, #4]
 8002d18:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002d1a:	2300      	movs	r3, #0
 8002d1c:	603b      	str	r3, [r7, #0]
 8002d1e:	4b09      	ldr	r3, [pc, #36]	; (8002d44 <HAL_MspInit+0x4c>)
 8002d20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d22:	4a08      	ldr	r2, [pc, #32]	; (8002d44 <HAL_MspInit+0x4c>)
 8002d24:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002d28:	6413      	str	r3, [r2, #64]	; 0x40
 8002d2a:	4b06      	ldr	r3, [pc, #24]	; (8002d44 <HAL_MspInit+0x4c>)
 8002d2c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d2e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002d32:	603b      	str	r3, [r7, #0]
 8002d34:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002d36:	bf00      	nop
 8002d38:	370c      	adds	r7, #12
 8002d3a:	46bd      	mov	sp, r7
 8002d3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d40:	4770      	bx	lr
 8002d42:	bf00      	nop
 8002d44:	40023800 	.word	0x40023800

08002d48 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8002d48:	b480      	push	{r7}
 8002d4a:	b085      	sub	sp, #20
 8002d4c:	af00      	add	r7, sp, #0
 8002d4e:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	681b      	ldr	r3, [r3, #0]
 8002d54:	4a0b      	ldr	r2, [pc, #44]	; (8002d84 <HAL_CRC_MspInit+0x3c>)
 8002d56:	4293      	cmp	r3, r2
 8002d58:	d10d      	bne.n	8002d76 <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002d5a:	2300      	movs	r3, #0
 8002d5c:	60fb      	str	r3, [r7, #12]
 8002d5e:	4b0a      	ldr	r3, [pc, #40]	; (8002d88 <HAL_CRC_MspInit+0x40>)
 8002d60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002d62:	4a09      	ldr	r2, [pc, #36]	; (8002d88 <HAL_CRC_MspInit+0x40>)
 8002d64:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002d68:	6313      	str	r3, [r2, #48]	; 0x30
 8002d6a:	4b07      	ldr	r3, [pc, #28]	; (8002d88 <HAL_CRC_MspInit+0x40>)
 8002d6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002d6e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002d72:	60fb      	str	r3, [r7, #12]
 8002d74:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8002d76:	bf00      	nop
 8002d78:	3714      	adds	r7, #20
 8002d7a:	46bd      	mov	sp, r7
 8002d7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d80:	4770      	bx	lr
 8002d82:	bf00      	nop
 8002d84:	40023000 	.word	0x40023000
 8002d88:	40023800 	.word	0x40023800

08002d8c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002d8c:	b580      	push	{r7, lr}
 8002d8e:	b08a      	sub	sp, #40	; 0x28
 8002d90:	af00      	add	r7, sp, #0
 8002d92:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002d94:	f107 0314 	add.w	r3, r7, #20
 8002d98:	2200      	movs	r2, #0
 8002d9a:	601a      	str	r2, [r3, #0]
 8002d9c:	605a      	str	r2, [r3, #4]
 8002d9e:	609a      	str	r2, [r3, #8]
 8002da0:	60da      	str	r2, [r3, #12]
 8002da2:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 8002da4:	687b      	ldr	r3, [r7, #4]
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	4a19      	ldr	r2, [pc, #100]	; (8002e10 <HAL_I2C_MspInit+0x84>)
 8002daa:	4293      	cmp	r3, r2
 8002dac:	d12b      	bne.n	8002e06 <HAL_I2C_MspInit+0x7a>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002dae:	2300      	movs	r3, #0
 8002db0:	613b      	str	r3, [r7, #16]
 8002db2:	4b18      	ldr	r3, [pc, #96]	; (8002e14 <HAL_I2C_MspInit+0x88>)
 8002db4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002db6:	4a17      	ldr	r2, [pc, #92]	; (8002e14 <HAL_I2C_MspInit+0x88>)
 8002db8:	f043 0302 	orr.w	r3, r3, #2
 8002dbc:	6313      	str	r3, [r2, #48]	; 0x30
 8002dbe:	4b15      	ldr	r3, [pc, #84]	; (8002e14 <HAL_I2C_MspInit+0x88>)
 8002dc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002dc2:	f003 0302 	and.w	r3, r3, #2
 8002dc6:	613b      	str	r3, [r7, #16]
 8002dc8:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002dca:	23c0      	movs	r3, #192	; 0xc0
 8002dcc:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002dce:	2312      	movs	r3, #18
 8002dd0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002dd2:	2300      	movs	r3, #0
 8002dd4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002dd6:	2303      	movs	r3, #3
 8002dd8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002dda:	2304      	movs	r3, #4
 8002ddc:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002dde:	f107 0314 	add.w	r3, r7, #20
 8002de2:	4619      	mov	r1, r3
 8002de4:	480c      	ldr	r0, [pc, #48]	; (8002e18 <HAL_I2C_MspInit+0x8c>)
 8002de6:	f001 fe31 	bl	8004a4c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8002dea:	2300      	movs	r3, #0
 8002dec:	60fb      	str	r3, [r7, #12]
 8002dee:	4b09      	ldr	r3, [pc, #36]	; (8002e14 <HAL_I2C_MspInit+0x88>)
 8002df0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002df2:	4a08      	ldr	r2, [pc, #32]	; (8002e14 <HAL_I2C_MspInit+0x88>)
 8002df4:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002df8:	6413      	str	r3, [r2, #64]	; 0x40
 8002dfa:	4b06      	ldr	r3, [pc, #24]	; (8002e14 <HAL_I2C_MspInit+0x88>)
 8002dfc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002dfe:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002e02:	60fb      	str	r3, [r7, #12]
 8002e04:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8002e06:	bf00      	nop
 8002e08:	3728      	adds	r7, #40	; 0x28
 8002e0a:	46bd      	mov	sp, r7
 8002e0c:	bd80      	pop	{r7, pc}
 8002e0e:	bf00      	nop
 8002e10:	40005400 	.word	0x40005400
 8002e14:	40023800 	.word	0x40023800
 8002e18:	40020400 	.word	0x40020400

08002e1c <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002e1c:	b580      	push	{r7, lr}
 8002e1e:	b08a      	sub	sp, #40	; 0x28
 8002e20:	af00      	add	r7, sp, #0
 8002e22:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002e24:	f107 0314 	add.w	r3, r7, #20
 8002e28:	2200      	movs	r2, #0
 8002e2a:	601a      	str	r2, [r3, #0]
 8002e2c:	605a      	str	r2, [r3, #4]
 8002e2e:	609a      	str	r2, [r3, #8]
 8002e30:	60da      	str	r2, [r3, #12]
 8002e32:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI2)
 8002e34:	687b      	ldr	r3, [r7, #4]
 8002e36:	681b      	ldr	r3, [r3, #0]
 8002e38:	4a34      	ldr	r2, [pc, #208]	; (8002f0c <HAL_SPI_MspInit+0xf0>)
 8002e3a:	4293      	cmp	r3, r2
 8002e3c:	d161      	bne.n	8002f02 <HAL_SPI_MspInit+0xe6>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8002e3e:	2300      	movs	r3, #0
 8002e40:	613b      	str	r3, [r7, #16]
 8002e42:	4b33      	ldr	r3, [pc, #204]	; (8002f10 <HAL_SPI_MspInit+0xf4>)
 8002e44:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e46:	4a32      	ldr	r2, [pc, #200]	; (8002f10 <HAL_SPI_MspInit+0xf4>)
 8002e48:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002e4c:	6413      	str	r3, [r2, #64]	; 0x40
 8002e4e:	4b30      	ldr	r3, [pc, #192]	; (8002f10 <HAL_SPI_MspInit+0xf4>)
 8002e50:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e52:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002e56:	613b      	str	r3, [r7, #16]
 8002e58:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002e5a:	2300      	movs	r3, #0
 8002e5c:	60fb      	str	r3, [r7, #12]
 8002e5e:	4b2c      	ldr	r3, [pc, #176]	; (8002f10 <HAL_SPI_MspInit+0xf4>)
 8002e60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002e62:	4a2b      	ldr	r2, [pc, #172]	; (8002f10 <HAL_SPI_MspInit+0xf4>)
 8002e64:	f043 0302 	orr.w	r3, r3, #2
 8002e68:	6313      	str	r3, [r2, #48]	; 0x30
 8002e6a:	4b29      	ldr	r3, [pc, #164]	; (8002f10 <HAL_SPI_MspInit+0xf4>)
 8002e6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002e6e:	f003 0302 	and.w	r3, r3, #2
 8002e72:	60fb      	str	r3, [r7, #12]
 8002e74:	68fb      	ldr	r3, [r7, #12]
    /**SPI2 GPIO Configuration
    PB13     ------> SPI2_SCK
    PB14     ------> SPI2_MISO
    PB15     ------> SPI2_MOSI
    */
    GPIO_InitStruct.Pin = DISPL_SCK_Pin|TOUCH_MISO_Pin|DISPL_MOSI_Pin;
 8002e76:	f44f 4360 	mov.w	r3, #57344	; 0xe000
 8002e7a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002e7c:	2302      	movs	r3, #2
 8002e7e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002e80:	2300      	movs	r3, #0
 8002e82:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002e84:	2303      	movs	r3, #3
 8002e86:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8002e88:	2305      	movs	r3, #5
 8002e8a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002e8c:	f107 0314 	add.w	r3, r7, #20
 8002e90:	4619      	mov	r1, r3
 8002e92:	4820      	ldr	r0, [pc, #128]	; (8002f14 <HAL_SPI_MspInit+0xf8>)
 8002e94:	f001 fdda 	bl	8004a4c <HAL_GPIO_Init>

    /* SPI2 DMA Init */
    /* SPI2_TX Init */
    hdma_spi2_tx.Instance = DMA1_Stream4;
 8002e98:	4b1f      	ldr	r3, [pc, #124]	; (8002f18 <HAL_SPI_MspInit+0xfc>)
 8002e9a:	4a20      	ldr	r2, [pc, #128]	; (8002f1c <HAL_SPI_MspInit+0x100>)
 8002e9c:	601a      	str	r2, [r3, #0]
    hdma_spi2_tx.Init.Channel = DMA_CHANNEL_0;
 8002e9e:	4b1e      	ldr	r3, [pc, #120]	; (8002f18 <HAL_SPI_MspInit+0xfc>)
 8002ea0:	2200      	movs	r2, #0
 8002ea2:	605a      	str	r2, [r3, #4]
    hdma_spi2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002ea4:	4b1c      	ldr	r3, [pc, #112]	; (8002f18 <HAL_SPI_MspInit+0xfc>)
 8002ea6:	2240      	movs	r2, #64	; 0x40
 8002ea8:	609a      	str	r2, [r3, #8]
    hdma_spi2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8002eaa:	4b1b      	ldr	r3, [pc, #108]	; (8002f18 <HAL_SPI_MspInit+0xfc>)
 8002eac:	2200      	movs	r2, #0
 8002eae:	60da      	str	r2, [r3, #12]
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 8002eb0:	4b19      	ldr	r3, [pc, #100]	; (8002f18 <HAL_SPI_MspInit+0xfc>)
 8002eb2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002eb6:	611a      	str	r2, [r3, #16]
    hdma_spi2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8002eb8:	4b17      	ldr	r3, [pc, #92]	; (8002f18 <HAL_SPI_MspInit+0xfc>)
 8002eba:	2200      	movs	r2, #0
 8002ebc:	615a      	str	r2, [r3, #20]
    hdma_spi2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002ebe:	4b16      	ldr	r3, [pc, #88]	; (8002f18 <HAL_SPI_MspInit+0xfc>)
 8002ec0:	2200      	movs	r2, #0
 8002ec2:	619a      	str	r2, [r3, #24]
    hdma_spi2_tx.Init.Mode = DMA_NORMAL;
 8002ec4:	4b14      	ldr	r3, [pc, #80]	; (8002f18 <HAL_SPI_MspInit+0xfc>)
 8002ec6:	2200      	movs	r2, #0
 8002ec8:	61da      	str	r2, [r3, #28]
    hdma_spi2_tx.Init.Priority = DMA_PRIORITY_LOW;
 8002eca:	4b13      	ldr	r3, [pc, #76]	; (8002f18 <HAL_SPI_MspInit+0xfc>)
 8002ecc:	2200      	movs	r2, #0
 8002ece:	621a      	str	r2, [r3, #32]
    hdma_spi2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002ed0:	4b11      	ldr	r3, [pc, #68]	; (8002f18 <HAL_SPI_MspInit+0xfc>)
 8002ed2:	2200      	movs	r2, #0
 8002ed4:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 8002ed6:	4810      	ldr	r0, [pc, #64]	; (8002f18 <HAL_SPI_MspInit+0xfc>)
 8002ed8:	f001 fa26 	bl	8004328 <HAL_DMA_Init>
 8002edc:	4603      	mov	r3, r0
 8002ede:	2b00      	cmp	r3, #0
 8002ee0:	d001      	beq.n	8002ee6 <HAL_SPI_MspInit+0xca>
    {
      Error_Handler();
 8002ee2:	f7ff ff03 	bl	8002cec <Error_Handler>
    }

    __HAL_LINKDMA(hspi,hdmatx,hdma_spi2_tx);
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	4a0b      	ldr	r2, [pc, #44]	; (8002f18 <HAL_SPI_MspInit+0xfc>)
 8002eea:	649a      	str	r2, [r3, #72]	; 0x48
 8002eec:	4a0a      	ldr	r2, [pc, #40]	; (8002f18 <HAL_SPI_MspInit+0xfc>)
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	6393      	str	r3, [r2, #56]	; 0x38

    /* SPI2 interrupt Init */
    HAL_NVIC_SetPriority(SPI2_IRQn, 0, 0);
 8002ef2:	2200      	movs	r2, #0
 8002ef4:	2100      	movs	r1, #0
 8002ef6:	2024      	movs	r0, #36	; 0x24
 8002ef8:	f001 f9a7 	bl	800424a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
 8002efc:	2024      	movs	r0, #36	; 0x24
 8002efe:	f001 f9c0 	bl	8004282 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }

}
 8002f02:	bf00      	nop
 8002f04:	3728      	adds	r7, #40	; 0x28
 8002f06:	46bd      	mov	sp, r7
 8002f08:	bd80      	pop	{r7, pc}
 8002f0a:	bf00      	nop
 8002f0c:	40003800 	.word	0x40003800
 8002f10:	40023800 	.word	0x40023800
 8002f14:	40020400 	.word	0x40020400
 8002f18:	20000204 	.word	0x20000204
 8002f1c:	40026070 	.word	0x40026070

08002f20 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8002f20:	b480      	push	{r7}
 8002f22:	b085      	sub	sp, #20
 8002f24:	af00      	add	r7, sp, #0
 8002f26:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM2)
 8002f28:	687b      	ldr	r3, [r7, #4]
 8002f2a:	681b      	ldr	r3, [r3, #0]
 8002f2c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002f30:	d10d      	bne.n	8002f4e <HAL_TIM_PWM_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002f32:	2300      	movs	r3, #0
 8002f34:	60fb      	str	r3, [r7, #12]
 8002f36:	4b09      	ldr	r3, [pc, #36]	; (8002f5c <HAL_TIM_PWM_MspInit+0x3c>)
 8002f38:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002f3a:	4a08      	ldr	r2, [pc, #32]	; (8002f5c <HAL_TIM_PWM_MspInit+0x3c>)
 8002f3c:	f043 0301 	orr.w	r3, r3, #1
 8002f40:	6413      	str	r3, [r2, #64]	; 0x40
 8002f42:	4b06      	ldr	r3, [pc, #24]	; (8002f5c <HAL_TIM_PWM_MspInit+0x3c>)
 8002f44:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002f46:	f003 0301 	and.w	r3, r3, #1
 8002f4a:	60fb      	str	r3, [r7, #12]
 8002f4c:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 8002f4e:	bf00      	nop
 8002f50:	3714      	adds	r7, #20
 8002f52:	46bd      	mov	sp, r7
 8002f54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f58:	4770      	bx	lr
 8002f5a:	bf00      	nop
 8002f5c:	40023800 	.word	0x40023800

08002f60 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002f60:	b580      	push	{r7, lr}
 8002f62:	b084      	sub	sp, #16
 8002f64:	af00      	add	r7, sp, #0
 8002f66:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM3)
 8002f68:	687b      	ldr	r3, [r7, #4]
 8002f6a:	681b      	ldr	r3, [r3, #0]
 8002f6c:	4a18      	ldr	r2, [pc, #96]	; (8002fd0 <HAL_TIM_Base_MspInit+0x70>)
 8002f6e:	4293      	cmp	r3, r2
 8002f70:	d116      	bne.n	8002fa0 <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002f72:	2300      	movs	r3, #0
 8002f74:	60fb      	str	r3, [r7, #12]
 8002f76:	4b17      	ldr	r3, [pc, #92]	; (8002fd4 <HAL_TIM_Base_MspInit+0x74>)
 8002f78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002f7a:	4a16      	ldr	r2, [pc, #88]	; (8002fd4 <HAL_TIM_Base_MspInit+0x74>)
 8002f7c:	f043 0302 	orr.w	r3, r3, #2
 8002f80:	6413      	str	r3, [r2, #64]	; 0x40
 8002f82:	4b14      	ldr	r3, [pc, #80]	; (8002fd4 <HAL_TIM_Base_MspInit+0x74>)
 8002f84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002f86:	f003 0302 	and.w	r3, r3, #2
 8002f8a:	60fb      	str	r3, [r7, #12]
 8002f8c:	68fb      	ldr	r3, [r7, #12]
    /* TIM3 interrupt Init */
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8002f8e:	2200      	movs	r2, #0
 8002f90:	2100      	movs	r1, #0
 8002f92:	201d      	movs	r0, #29
 8002f94:	f001 f959 	bl	800424a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8002f98:	201d      	movs	r0, #29
 8002f9a:	f001 f972 	bl	8004282 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 8002f9e:	e012      	b.n	8002fc6 <HAL_TIM_Base_MspInit+0x66>
  else if(htim_base->Instance==TIM4)
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	681b      	ldr	r3, [r3, #0]
 8002fa4:	4a0c      	ldr	r2, [pc, #48]	; (8002fd8 <HAL_TIM_Base_MspInit+0x78>)
 8002fa6:	4293      	cmp	r3, r2
 8002fa8:	d10d      	bne.n	8002fc6 <HAL_TIM_Base_MspInit+0x66>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8002faa:	2300      	movs	r3, #0
 8002fac:	60bb      	str	r3, [r7, #8]
 8002fae:	4b09      	ldr	r3, [pc, #36]	; (8002fd4 <HAL_TIM_Base_MspInit+0x74>)
 8002fb0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002fb2:	4a08      	ldr	r2, [pc, #32]	; (8002fd4 <HAL_TIM_Base_MspInit+0x74>)
 8002fb4:	f043 0304 	orr.w	r3, r3, #4
 8002fb8:	6413      	str	r3, [r2, #64]	; 0x40
 8002fba:	4b06      	ldr	r3, [pc, #24]	; (8002fd4 <HAL_TIM_Base_MspInit+0x74>)
 8002fbc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002fbe:	f003 0304 	and.w	r3, r3, #4
 8002fc2:	60bb      	str	r3, [r7, #8]
 8002fc4:	68bb      	ldr	r3, [r7, #8]
}
 8002fc6:	bf00      	nop
 8002fc8:	3710      	adds	r7, #16
 8002fca:	46bd      	mov	sp, r7
 8002fcc:	bd80      	pop	{r7, pc}
 8002fce:	bf00      	nop
 8002fd0:	40000400 	.word	0x40000400
 8002fd4:	40023800 	.word	0x40023800
 8002fd8:	40000800 	.word	0x40000800

08002fdc <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002fdc:	b580      	push	{r7, lr}
 8002fde:	b08a      	sub	sp, #40	; 0x28
 8002fe0:	af00      	add	r7, sp, #0
 8002fe2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002fe4:	f107 0314 	add.w	r3, r7, #20
 8002fe8:	2200      	movs	r2, #0
 8002fea:	601a      	str	r2, [r3, #0]
 8002fec:	605a      	str	r2, [r3, #4]
 8002fee:	609a      	str	r2, [r3, #8]
 8002ff0:	60da      	str	r2, [r3, #12]
 8002ff2:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 8002ff4:	687b      	ldr	r3, [r7, #4]
 8002ff6:	681b      	ldr	r3, [r3, #0]
 8002ff8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002ffc:	d11f      	bne.n	800303e <HAL_TIM_MspPostInit+0x62>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002ffe:	2300      	movs	r3, #0
 8003000:	613b      	str	r3, [r7, #16]
 8003002:	4b23      	ldr	r3, [pc, #140]	; (8003090 <HAL_TIM_MspPostInit+0xb4>)
 8003004:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003006:	4a22      	ldr	r2, [pc, #136]	; (8003090 <HAL_TIM_MspPostInit+0xb4>)
 8003008:	f043 0301 	orr.w	r3, r3, #1
 800300c:	6313      	str	r3, [r2, #48]	; 0x30
 800300e:	4b20      	ldr	r3, [pc, #128]	; (8003090 <HAL_TIM_MspPostInit+0xb4>)
 8003010:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003012:	f003 0301 	and.w	r3, r3, #1
 8003016:	613b      	str	r3, [r7, #16]
 8003018:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration
    PA15     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = DISPL_LED_Pin;
 800301a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800301e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003020:	2302      	movs	r3, #2
 8003022:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003024:	2300      	movs	r3, #0
 8003026:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003028:	2300      	movs	r3, #0
 800302a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 800302c:	2301      	movs	r3, #1
 800302e:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(DISPL_LED_GPIO_Port, &GPIO_InitStruct);
 8003030:	f107 0314 	add.w	r3, r7, #20
 8003034:	4619      	mov	r1, r3
 8003036:	4817      	ldr	r0, [pc, #92]	; (8003094 <HAL_TIM_MspPostInit+0xb8>)
 8003038:	f001 fd08 	bl	8004a4c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspPostInit 1 */

  /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 800303c:	e023      	b.n	8003086 <HAL_TIM_MspPostInit+0xaa>
  else if(htim->Instance==TIM4)
 800303e:	687b      	ldr	r3, [r7, #4]
 8003040:	681b      	ldr	r3, [r3, #0]
 8003042:	4a15      	ldr	r2, [pc, #84]	; (8003098 <HAL_TIM_MspPostInit+0xbc>)
 8003044:	4293      	cmp	r3, r2
 8003046:	d11e      	bne.n	8003086 <HAL_TIM_MspPostInit+0xaa>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003048:	2300      	movs	r3, #0
 800304a:	60fb      	str	r3, [r7, #12]
 800304c:	4b10      	ldr	r3, [pc, #64]	; (8003090 <HAL_TIM_MspPostInit+0xb4>)
 800304e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003050:	4a0f      	ldr	r2, [pc, #60]	; (8003090 <HAL_TIM_MspPostInit+0xb4>)
 8003052:	f043 0302 	orr.w	r3, r3, #2
 8003056:	6313      	str	r3, [r2, #48]	; 0x30
 8003058:	4b0d      	ldr	r3, [pc, #52]	; (8003090 <HAL_TIM_MspPostInit+0xb4>)
 800305a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800305c:	f003 0302 	and.w	r3, r3, #2
 8003060:	60fb      	str	r3, [r7, #12]
 8003062:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8003064:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003068:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800306a:	2302      	movs	r3, #2
 800306c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800306e:	2300      	movs	r3, #0
 8003070:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003072:	2300      	movs	r3, #0
 8003074:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8003076:	2302      	movs	r3, #2
 8003078:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800307a:	f107 0314 	add.w	r3, r7, #20
 800307e:	4619      	mov	r1, r3
 8003080:	4806      	ldr	r0, [pc, #24]	; (800309c <HAL_TIM_MspPostInit+0xc0>)
 8003082:	f001 fce3 	bl	8004a4c <HAL_GPIO_Init>
}
 8003086:	bf00      	nop
 8003088:	3728      	adds	r7, #40	; 0x28
 800308a:	46bd      	mov	sp, r7
 800308c:	bd80      	pop	{r7, pc}
 800308e:	bf00      	nop
 8003090:	40023800 	.word	0x40023800
 8003094:	40020000 	.word	0x40020000
 8003098:	40000800 	.word	0x40000800
 800309c:	40020400 	.word	0x40020400

080030a0 <LL_ADC_IsActiveFlag_OVR>:
{
 80030a0:	b480      	push	{r7}
 80030a2:	b083      	sub	sp, #12
 80030a4:	af00      	add	r7, sp, #0
 80030a6:	6078      	str	r0, [r7, #4]
  return (READ_BIT(ADCx->SR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR));
 80030a8:	687b      	ldr	r3, [r7, #4]
 80030aa:	681b      	ldr	r3, [r3, #0]
 80030ac:	f003 0320 	and.w	r3, r3, #32
 80030b0:	2b20      	cmp	r3, #32
 80030b2:	bf0c      	ite	eq
 80030b4:	2301      	moveq	r3, #1
 80030b6:	2300      	movne	r3, #0
 80030b8:	b2db      	uxtb	r3, r3
}
 80030ba:	4618      	mov	r0, r3
 80030bc:	370c      	adds	r7, #12
 80030be:	46bd      	mov	sp, r7
 80030c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030c4:	4770      	bx	lr

080030c6 <LL_ADC_ClearFlag_OVR>:
{
 80030c6:	b480      	push	{r7}
 80030c8:	b083      	sub	sp, #12
 80030ca:	af00      	add	r7, sp, #0
 80030cc:	6078      	str	r0, [r7, #4]
  WRITE_REG(ADCx->SR, ~LL_ADC_FLAG_OVR);
 80030ce:	687b      	ldr	r3, [r7, #4]
 80030d0:	f06f 0220 	mvn.w	r2, #32
 80030d4:	601a      	str	r2, [r3, #0]
}
 80030d6:	bf00      	nop
 80030d8:	370c      	adds	r7, #12
 80030da:	46bd      	mov	sp, r7
 80030dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030e0:	4770      	bx	lr

080030e2 <LL_DMA_IsActiveFlag_TC0>:
{
 80030e2:	b480      	push	{r7}
 80030e4:	b083      	sub	sp, #12
 80030e6:	af00      	add	r7, sp, #0
 80030e8:	6078      	str	r0, [r7, #4]
  return (READ_BIT(DMAx->LISR ,DMA_LISR_TCIF0)==(DMA_LISR_TCIF0));
 80030ea:	687b      	ldr	r3, [r7, #4]
 80030ec:	681b      	ldr	r3, [r3, #0]
 80030ee:	f003 0320 	and.w	r3, r3, #32
 80030f2:	2b20      	cmp	r3, #32
 80030f4:	bf0c      	ite	eq
 80030f6:	2301      	moveq	r3, #1
 80030f8:	2300      	movne	r3, #0
 80030fa:	b2db      	uxtb	r3, r3
}
 80030fc:	4618      	mov	r0, r3
 80030fe:	370c      	adds	r7, #12
 8003100:	46bd      	mov	sp, r7
 8003102:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003106:	4770      	bx	lr

08003108 <LL_DMA_IsActiveFlag_TE0>:
{
 8003108:	b480      	push	{r7}
 800310a:	b083      	sub	sp, #12
 800310c:	af00      	add	r7, sp, #0
 800310e:	6078      	str	r0, [r7, #4]
  return (READ_BIT(DMAx->LISR ,DMA_LISR_TEIF0)==(DMA_LISR_TEIF0));
 8003110:	687b      	ldr	r3, [r7, #4]
 8003112:	681b      	ldr	r3, [r3, #0]
 8003114:	f003 0308 	and.w	r3, r3, #8
 8003118:	2b08      	cmp	r3, #8
 800311a:	bf0c      	ite	eq
 800311c:	2301      	moveq	r3, #1
 800311e:	2300      	movne	r3, #0
 8003120:	b2db      	uxtb	r3, r3
}
 8003122:	4618      	mov	r0, r3
 8003124:	370c      	adds	r7, #12
 8003126:	46bd      	mov	sp, r7
 8003128:	f85d 7b04 	ldr.w	r7, [sp], #4
 800312c:	4770      	bx	lr

0800312e <LL_DMA_ClearFlag_TC0>:
{
 800312e:	b480      	push	{r7}
 8003130:	b083      	sub	sp, #12
 8003132:	af00      	add	r7, sp, #0
 8003134:	6078      	str	r0, [r7, #4]
  WRITE_REG(DMAx->LIFCR , DMA_LIFCR_CTCIF0);
 8003136:	687b      	ldr	r3, [r7, #4]
 8003138:	2220      	movs	r2, #32
 800313a:	609a      	str	r2, [r3, #8]
}
 800313c:	bf00      	nop
 800313e:	370c      	adds	r7, #12
 8003140:	46bd      	mov	sp, r7
 8003142:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003146:	4770      	bx	lr

08003148 <LL_DMA_ClearFlag_TE0>:
{
 8003148:	b480      	push	{r7}
 800314a:	b083      	sub	sp, #12
 800314c:	af00      	add	r7, sp, #0
 800314e:	6078      	str	r0, [r7, #4]
  WRITE_REG(DMAx->LIFCR , DMA_LIFCR_CTEIF0);
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	2208      	movs	r2, #8
 8003154:	609a      	str	r2, [r3, #8]
}
 8003156:	bf00      	nop
 8003158:	370c      	adds	r7, #12
 800315a:	46bd      	mov	sp, r7
 800315c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003160:	4770      	bx	lr

08003162 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8003162:	b480      	push	{r7}
 8003164:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8003166:	e7fe      	b.n	8003166 <NMI_Handler+0x4>

08003168 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8003168:	b480      	push	{r7}
 800316a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800316c:	e7fe      	b.n	800316c <HardFault_Handler+0x4>

0800316e <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800316e:	b480      	push	{r7}
 8003170:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8003172:	e7fe      	b.n	8003172 <MemManage_Handler+0x4>

08003174 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8003174:	b480      	push	{r7}
 8003176:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8003178:	e7fe      	b.n	8003178 <BusFault_Handler+0x4>

0800317a <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800317a:	b480      	push	{r7}
 800317c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800317e:	e7fe      	b.n	800317e <UsageFault_Handler+0x4>

08003180 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8003180:	b480      	push	{r7}
 8003182:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8003184:	bf00      	nop
 8003186:	46bd      	mov	sp, r7
 8003188:	f85d 7b04 	ldr.w	r7, [sp], #4
 800318c:	4770      	bx	lr

0800318e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800318e:	b480      	push	{r7}
 8003190:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8003192:	bf00      	nop
 8003194:	46bd      	mov	sp, r7
 8003196:	f85d 7b04 	ldr.w	r7, [sp], #4
 800319a:	4770      	bx	lr

0800319c <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800319c:	b480      	push	{r7}
 800319e:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80031a0:	bf00      	nop
 80031a2:	46bd      	mov	sp, r7
 80031a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031a8:	4770      	bx	lr
	...

080031ac <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80031ac:	b580      	push	{r7, lr}
 80031ae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80031b0:	f000 feea 	bl	8003f88 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */
  Counter_0 += 1;
 80031b4:	4b05      	ldr	r3, [pc, #20]	; (80031cc <SysTick_Handler+0x20>)
 80031b6:	681b      	ldr	r3, [r3, #0]
 80031b8:	3301      	adds	r3, #1
 80031ba:	4a04      	ldr	r2, [pc, #16]	; (80031cc <SysTick_Handler+0x20>)
 80031bc:	6013      	str	r3, [r2, #0]
  Counter_1 += 1;
 80031be:	4b04      	ldr	r3, [pc, #16]	; (80031d0 <SysTick_Handler+0x24>)
 80031c0:	681b      	ldr	r3, [r3, #0]
 80031c2:	3301      	adds	r3, #1
 80031c4:	4a02      	ldr	r2, [pc, #8]	; (80031d0 <SysTick_Handler+0x24>)
 80031c6:	6013      	str	r3, [r2, #0]
  /* USER CODE END SysTick_IRQn 1 */
}
 80031c8:	bf00      	nop
 80031ca:	bd80      	pop	{r7, pc}
 80031cc:	2000035c 	.word	0x2000035c
 80031d0:	20000360 	.word	0x20000360

080031d4 <DMA1_Stream4_IRQHandler>:

/**
  * @brief This function handles DMA1 stream4 global interrupt.
  */
void DMA1_Stream4_IRQHandler(void)
{
 80031d4:	b580      	push	{r7, lr}
 80031d6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */

  /* USER CODE END DMA1_Stream4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_tx);
 80031d8:	4802      	ldr	r0, [pc, #8]	; (80031e4 <DMA1_Stream4_IRQHandler+0x10>)
 80031da:	f001 f9cd 	bl	8004578 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */

  /* USER CODE END DMA1_Stream4_IRQn 1 */
}
 80031de:	bf00      	nop
 80031e0:	bd80      	pop	{r7, pc}
 80031e2:	bf00      	nop
 80031e4:	20000204 	.word	0x20000204

080031e8 <ADC_IRQHandler>:

/**
  * @brief This function handles ADC1 global interrupt.
  */
void ADC_IRQHandler(void)
{
 80031e8:	b580      	push	{r7, lr}
 80031ea:	af00      	add	r7, sp, #0

  /* USER CODE END ADC_IRQn 0 */

  /* USER CODE BEGIN ADC_IRQn 1 */
  /* Check whether ADC group regular overrun caused the ADC interruption */
  if(LL_ADC_IsActiveFlag_OVR(ADC1) != 0)
 80031ec:	4805      	ldr	r0, [pc, #20]	; (8003204 <ADC_IRQHandler+0x1c>)
 80031ee:	f7ff ff57 	bl	80030a0 <LL_ADC_IsActiveFlag_OVR>
 80031f2:	4603      	mov	r3, r0
 80031f4:	2b00      	cmp	r3, #0
 80031f6:	d002      	beq.n	80031fe <ADC_IRQHandler+0x16>
  {
    /* Clear flag ADC group regular overrun */
    LL_ADC_ClearFlag_OVR(ADC1);
 80031f8:	4802      	ldr	r0, [pc, #8]	; (8003204 <ADC_IRQHandler+0x1c>)
 80031fa:	f7ff ff64 	bl	80030c6 <LL_ADC_ClearFlag_OVR>

    /* Call interruption treatment function */
    //AdcGrpRegularOverrunError_Callback();
  }
  /* USER CODE END ADC_IRQn 1 */
}
 80031fe:	bf00      	nop
 8003200:	bd80      	pop	{r7, pc}
 8003202:	bf00      	nop
 8003204:	40012000 	.word	0x40012000

08003208 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8003208:	b580      	push	{r7, lr}
 800320a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 800320c:	4802      	ldr	r0, [pc, #8]	; (8003218 <TIM3_IRQHandler+0x10>)
 800320e:	f005 f96b 	bl	80084e8 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8003212:	bf00      	nop
 8003214:	bd80      	pop	{r7, pc}
 8003216:	bf00      	nop
 8003218:	200002ac 	.word	0x200002ac

0800321c <SPI2_IRQHandler>:

/**
  * @brief This function handles SPI2 global interrupt.
  */
void SPI2_IRQHandler(void)
{
 800321c:	b580      	push	{r7, lr}
 800321e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI2_IRQn 0 */

  /* USER CODE END SPI2_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi2);
 8003220:	4802      	ldr	r0, [pc, #8]	; (800322c <SPI2_IRQHandler+0x10>)
 8003222:	f004 fc29 	bl	8007a78 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI2_IRQn 1 */

  /* USER CODE END SPI2_IRQn 1 */
}
 8003226:	bf00      	nop
 8003228:	bd80      	pop	{r7, pc}
 800322a:	bf00      	nop
 800322c:	200001ac 	.word	0x200001ac

08003230 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8003230:	b580      	push	{r7, lr}
 8003232:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(TOUCH_INT_Pin);
 8003234:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8003238:	f001 fdd8 	bl	8004dec <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 800323c:	bf00      	nop
 800323e:	bd80      	pop	{r7, pc}

08003240 <DMA2_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA2 stream0 global interrupt.
  */
void DMA2_Stream0_IRQHandler(void)
{
 8003240:	b580      	push	{r7, lr}
 8003242:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
  /* Check whether DMA transfer complete caused the DMA interruption */
  if(LL_DMA_IsActiveFlag_TC0(DMA2) == 1)
 8003244:	480a      	ldr	r0, [pc, #40]	; (8003270 <DMA2_Stream0_IRQHandler+0x30>)
 8003246:	f7ff ff4c 	bl	80030e2 <LL_DMA_IsActiveFlag_TC0>
 800324a:	4603      	mov	r3, r0
 800324c:	2b01      	cmp	r3, #1
 800324e:	d104      	bne.n	800325a <DMA2_Stream0_IRQHandler+0x1a>
  {
    /* Clear flag DMA transfer complete */
    LL_DMA_ClearFlag_TC0(DMA2);
 8003250:	4807      	ldr	r0, [pc, #28]	; (8003270 <DMA2_Stream0_IRQHandler+0x30>)
 8003252:	f7ff ff6c 	bl	800312e <LL_DMA_ClearFlag_TC0>

    /* Call interruption treatment function */
    AdcDmaTransferComplete_Callback();
 8003256:	f7ff f8f3 	bl	8002440 <AdcDmaTransferComplete_Callback>
  }


  /* Check whether DMA transfer error caused the DMA interruption */
  if(LL_DMA_IsActiveFlag_TE0(DMA2) == 1)
 800325a:	4805      	ldr	r0, [pc, #20]	; (8003270 <DMA2_Stream0_IRQHandler+0x30>)
 800325c:	f7ff ff54 	bl	8003108 <LL_DMA_IsActiveFlag_TE0>
 8003260:	4603      	mov	r3, r0
 8003262:	2b01      	cmp	r3, #1
 8003264:	d102      	bne.n	800326c <DMA2_Stream0_IRQHandler+0x2c>
  {
    /* Clear flag DMA transfer error */
    LL_DMA_ClearFlag_TE0(DMA2);
 8003266:	4802      	ldr	r0, [pc, #8]	; (8003270 <DMA2_Stream0_IRQHandler+0x30>)
 8003268:	f7ff ff6e 	bl	8003148 <LL_DMA_ClearFlag_TE0>
  /* USER CODE END DMA2_Stream0_IRQn 0 */

  /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */

  /* USER CODE END DMA2_Stream0_IRQn 1 */
}
 800326c:	bf00      	nop
 800326e:	bd80      	pop	{r7, pc}
 8003270:	40026400 	.word	0x40026400

08003274 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8003274:	b480      	push	{r7}
 8003276:	af00      	add	r7, sp, #0
  return 1;
 8003278:	2301      	movs	r3, #1
}
 800327a:	4618      	mov	r0, r3
 800327c:	46bd      	mov	sp, r7
 800327e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003282:	4770      	bx	lr

08003284 <_kill>:

int _kill(int pid, int sig)
{
 8003284:	b580      	push	{r7, lr}
 8003286:	b082      	sub	sp, #8
 8003288:	af00      	add	r7, sp, #0
 800328a:	6078      	str	r0, [r7, #4]
 800328c:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800328e:	f028 fb3f 	bl	802b910 <__errno>
 8003292:	4603      	mov	r3, r0
 8003294:	2216      	movs	r2, #22
 8003296:	601a      	str	r2, [r3, #0]
  return -1;
 8003298:	f04f 33ff 	mov.w	r3, #4294967295
}
 800329c:	4618      	mov	r0, r3
 800329e:	3708      	adds	r7, #8
 80032a0:	46bd      	mov	sp, r7
 80032a2:	bd80      	pop	{r7, pc}

080032a4 <_exit>:

void _exit (int status)
{
 80032a4:	b580      	push	{r7, lr}
 80032a6:	b082      	sub	sp, #8
 80032a8:	af00      	add	r7, sp, #0
 80032aa:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80032ac:	f04f 31ff 	mov.w	r1, #4294967295
 80032b0:	6878      	ldr	r0, [r7, #4]
 80032b2:	f7ff ffe7 	bl	8003284 <_kill>
  while (1) {}    /* Make sure we hang here */
 80032b6:	e7fe      	b.n	80032b6 <_exit+0x12>

080032b8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80032b8:	b580      	push	{r7, lr}
 80032ba:	b086      	sub	sp, #24
 80032bc:	af00      	add	r7, sp, #0
 80032be:	60f8      	str	r0, [r7, #12]
 80032c0:	60b9      	str	r1, [r7, #8]
 80032c2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80032c4:	2300      	movs	r3, #0
 80032c6:	617b      	str	r3, [r7, #20]
 80032c8:	e00a      	b.n	80032e0 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80032ca:	f3af 8000 	nop.w
 80032ce:	4601      	mov	r1, r0
 80032d0:	68bb      	ldr	r3, [r7, #8]
 80032d2:	1c5a      	adds	r2, r3, #1
 80032d4:	60ba      	str	r2, [r7, #8]
 80032d6:	b2ca      	uxtb	r2, r1
 80032d8:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80032da:	697b      	ldr	r3, [r7, #20]
 80032dc:	3301      	adds	r3, #1
 80032de:	617b      	str	r3, [r7, #20]
 80032e0:	697a      	ldr	r2, [r7, #20]
 80032e2:	687b      	ldr	r3, [r7, #4]
 80032e4:	429a      	cmp	r2, r3
 80032e6:	dbf0      	blt.n	80032ca <_read+0x12>
  }

  return len;
 80032e8:	687b      	ldr	r3, [r7, #4]
}
 80032ea:	4618      	mov	r0, r3
 80032ec:	3718      	adds	r7, #24
 80032ee:	46bd      	mov	sp, r7
 80032f0:	bd80      	pop	{r7, pc}

080032f2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80032f2:	b580      	push	{r7, lr}
 80032f4:	b086      	sub	sp, #24
 80032f6:	af00      	add	r7, sp, #0
 80032f8:	60f8      	str	r0, [r7, #12]
 80032fa:	60b9      	str	r1, [r7, #8]
 80032fc:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80032fe:	2300      	movs	r3, #0
 8003300:	617b      	str	r3, [r7, #20]
 8003302:	e009      	b.n	8003318 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8003304:	68bb      	ldr	r3, [r7, #8]
 8003306:	1c5a      	adds	r2, r3, #1
 8003308:	60ba      	str	r2, [r7, #8]
 800330a:	781b      	ldrb	r3, [r3, #0]
 800330c:	4618      	mov	r0, r3
 800330e:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003312:	697b      	ldr	r3, [r7, #20]
 8003314:	3301      	adds	r3, #1
 8003316:	617b      	str	r3, [r7, #20]
 8003318:	697a      	ldr	r2, [r7, #20]
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	429a      	cmp	r2, r3
 800331e:	dbf1      	blt.n	8003304 <_write+0x12>
  }
  return len;
 8003320:	687b      	ldr	r3, [r7, #4]
}
 8003322:	4618      	mov	r0, r3
 8003324:	3718      	adds	r7, #24
 8003326:	46bd      	mov	sp, r7
 8003328:	bd80      	pop	{r7, pc}

0800332a <_close>:

int _close(int file)
{
 800332a:	b480      	push	{r7}
 800332c:	b083      	sub	sp, #12
 800332e:	af00      	add	r7, sp, #0
 8003330:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8003332:	f04f 33ff 	mov.w	r3, #4294967295
}
 8003336:	4618      	mov	r0, r3
 8003338:	370c      	adds	r7, #12
 800333a:	46bd      	mov	sp, r7
 800333c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003340:	4770      	bx	lr

08003342 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8003342:	b480      	push	{r7}
 8003344:	b083      	sub	sp, #12
 8003346:	af00      	add	r7, sp, #0
 8003348:	6078      	str	r0, [r7, #4]
 800334a:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800334c:	683b      	ldr	r3, [r7, #0]
 800334e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8003352:	605a      	str	r2, [r3, #4]
  return 0;
 8003354:	2300      	movs	r3, #0
}
 8003356:	4618      	mov	r0, r3
 8003358:	370c      	adds	r7, #12
 800335a:	46bd      	mov	sp, r7
 800335c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003360:	4770      	bx	lr

08003362 <_isatty>:

int _isatty(int file)
{
 8003362:	b480      	push	{r7}
 8003364:	b083      	sub	sp, #12
 8003366:	af00      	add	r7, sp, #0
 8003368:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800336a:	2301      	movs	r3, #1
}
 800336c:	4618      	mov	r0, r3
 800336e:	370c      	adds	r7, #12
 8003370:	46bd      	mov	sp, r7
 8003372:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003376:	4770      	bx	lr

08003378 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8003378:	b480      	push	{r7}
 800337a:	b085      	sub	sp, #20
 800337c:	af00      	add	r7, sp, #0
 800337e:	60f8      	str	r0, [r7, #12]
 8003380:	60b9      	str	r1, [r7, #8]
 8003382:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8003384:	2300      	movs	r3, #0
}
 8003386:	4618      	mov	r0, r3
 8003388:	3714      	adds	r7, #20
 800338a:	46bd      	mov	sp, r7
 800338c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003390:	4770      	bx	lr
	...

08003394 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8003394:	b580      	push	{r7, lr}
 8003396:	b086      	sub	sp, #24
 8003398:	af00      	add	r7, sp, #0
 800339a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800339c:	4a14      	ldr	r2, [pc, #80]	; (80033f0 <_sbrk+0x5c>)
 800339e:	4b15      	ldr	r3, [pc, #84]	; (80033f4 <_sbrk+0x60>)
 80033a0:	1ad3      	subs	r3, r2, r3
 80033a2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80033a4:	697b      	ldr	r3, [r7, #20]
 80033a6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80033a8:	4b13      	ldr	r3, [pc, #76]	; (80033f8 <_sbrk+0x64>)
 80033aa:	681b      	ldr	r3, [r3, #0]
 80033ac:	2b00      	cmp	r3, #0
 80033ae:	d102      	bne.n	80033b6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80033b0:	4b11      	ldr	r3, [pc, #68]	; (80033f8 <_sbrk+0x64>)
 80033b2:	4a12      	ldr	r2, [pc, #72]	; (80033fc <_sbrk+0x68>)
 80033b4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80033b6:	4b10      	ldr	r3, [pc, #64]	; (80033f8 <_sbrk+0x64>)
 80033b8:	681a      	ldr	r2, [r3, #0]
 80033ba:	687b      	ldr	r3, [r7, #4]
 80033bc:	4413      	add	r3, r2
 80033be:	693a      	ldr	r2, [r7, #16]
 80033c0:	429a      	cmp	r2, r3
 80033c2:	d207      	bcs.n	80033d4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80033c4:	f028 faa4 	bl	802b910 <__errno>
 80033c8:	4603      	mov	r3, r0
 80033ca:	220c      	movs	r2, #12
 80033cc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80033ce:	f04f 33ff 	mov.w	r3, #4294967295
 80033d2:	e009      	b.n	80033e8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80033d4:	4b08      	ldr	r3, [pc, #32]	; (80033f8 <_sbrk+0x64>)
 80033d6:	681b      	ldr	r3, [r3, #0]
 80033d8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80033da:	4b07      	ldr	r3, [pc, #28]	; (80033f8 <_sbrk+0x64>)
 80033dc:	681a      	ldr	r2, [r3, #0]
 80033de:	687b      	ldr	r3, [r7, #4]
 80033e0:	4413      	add	r3, r2
 80033e2:	4a05      	ldr	r2, [pc, #20]	; (80033f8 <_sbrk+0x64>)
 80033e4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80033e6:	68fb      	ldr	r3, [r7, #12]
}
 80033e8:	4618      	mov	r0, r3
 80033ea:	3718      	adds	r7, #24
 80033ec:	46bd      	mov	sp, r7
 80033ee:	bd80      	pop	{r7, pc}
 80033f0:	20020000 	.word	0x20020000
 80033f4:	00000400 	.word	0x00000400
 80033f8:	2000036c 	.word	0x2000036c
 80033fc:	20002e88 	.word	0x20002e88

08003400 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8003400:	b480      	push	{r7}
 8003402:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003404:	4b06      	ldr	r3, [pc, #24]	; (8003420 <SystemInit+0x20>)
 8003406:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800340a:	4a05      	ldr	r2, [pc, #20]	; (8003420 <SystemInit+0x20>)
 800340c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003410:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8003414:	bf00      	nop
 8003416:	46bd      	mov	sp, r7
 8003418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800341c:	4770      	bx	lr
 800341e:	bf00      	nop
 8003420:	e000ed00 	.word	0xe000ed00

08003424 <Displ_Select>:

/******************************************
 * @brief	enable display, disabling touch
 * 			device selected if CS low
 ******************************************/
void Displ_Select(void) {
 8003424:	b580      	push	{r7, lr}
 8003426:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if SPI port shared (display <-> touch)
		if (HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display not yet selected
 8003428:	f44f 7180 	mov.w	r1, #256	; 0x100
 800342c:	4810      	ldr	r0, [pc, #64]	; (8003470 <Displ_Select+0x4c>)
 800342e:	f001 fc91 	bl	8004d54 <HAL_GPIO_ReadPin>
 8003432:	4603      	mov	r3, r0
 8003434:	2b00      	cmp	r3, #0
 8003436:	d018      	beq.n	800346a <Displ_Select+0x46>
			HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET); 		// unselect touch
 8003438:	2201      	movs	r2, #1
 800343a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800343e:	480d      	ldr	r0, [pc, #52]	; (8003474 <Displ_Select+0x50>)
 8003440:	f001 fca0 	bl	8004d84 <HAL_GPIO_WritePin>
			SET_DISPL_SPI_BAUDRATE;				   									//change SPI port speed as per display needs
 8003444:	4b0c      	ldr	r3, [pc, #48]	; (8003478 <Displ_Select+0x54>)
 8003446:	681a      	ldr	r2, [r3, #0]
 8003448:	490b      	ldr	r1, [pc, #44]	; (8003478 <Displ_Select+0x54>)
 800344a:	f64f 73c7 	movw	r3, #65479	; 0xffc7
 800344e:	4013      	ands	r3, r2
 8003450:	600b      	str	r3, [r1, #0]
 8003452:	4b09      	ldr	r3, [pc, #36]	; (8003478 <Displ_Select+0x54>)
 8003454:	681b      	ldr	r3, [r3, #0]
 8003456:	4a08      	ldr	r2, [pc, #32]	; (8003478 <Displ_Select+0x54>)
 8003458:	f043 0308 	orr.w	r3, r3, #8
 800345c:	6013      	str	r3, [r2, #0]
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET);	// select display
 800345e:	2200      	movs	r2, #0
 8003460:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003464:	4802      	ldr	r0, [pc, #8]	; (8003470 <Displ_Select+0x4c>)
 8003466:	f001 fc8d 	bl	8004d84 <HAL_GPIO_WritePin>
		}
	}
}
 800346a:	bf00      	nop
 800346c:	bd80      	pop	{r7, pc}
 800346e:	bf00      	nop
 8003470:	40020000 	.word	0x40020000
 8003474:	40020400 	.word	0x40020400
 8003478:	40003800 	.word	0x40003800

0800347c <Displ_Transmit>:
 * @PARAM	DC_Status 	indicates if sending command or data
 * 			data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **************************/
void Displ_Transmit(GPIO_PinState DC_Status, uint8_t* data, uint16_t dataSize, uint8_t isTouchGFXBuffer ){
 800347c:	b580      	push	{r7, lr}
 800347e:	b086      	sub	sp, #24
 8003480:	af00      	add	r7, sp, #0
 8003482:	6039      	str	r1, [r7, #0]
 8003484:	4611      	mov	r1, r2
 8003486:	461a      	mov	r2, r3
 8003488:	4603      	mov	r3, r0
 800348a:	71fb      	strb	r3, [r7, #7]
 800348c:	460b      	mov	r3, r1
 800348e:	80bb      	strh	r3, [r7, #4]
 8003490:	4613      	mov	r3, r2
 8003492:	71bb      	strb	r3, [r7, #6]

	while (!Displ_SpiAvailable) {};  // waiting for a free SPI port. Flag is set to 1 by transmission-complete interrupt callback
 8003494:	bf00      	nop
 8003496:	4b25      	ldr	r3, [pc, #148]	; (800352c <Displ_Transmit+0xb0>)
 8003498:	781b      	ldrb	r3, [r3, #0]
 800349a:	b2db      	uxtb	r3, r3
 800349c:	2b00      	cmp	r3, #0
 800349e:	d0fa      	beq.n	8003496 <Displ_Transmit+0x1a>

	Displ_Select();
 80034a0:	f7ff ffc0 	bl	8003424 <Displ_Select>
	HAL_GPIO_WritePin(DISPL_DC_GPIO_Port, DISPL_DC_Pin, DC_Status);
 80034a4:	79fb      	ldrb	r3, [r7, #7]
 80034a6:	461a      	mov	r2, r3
 80034a8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80034ac:	4820      	ldr	r0, [pc, #128]	; (8003530 <Displ_Transmit+0xb4>)
 80034ae:	f001 fc69 	bl	8004d84 <HAL_GPIO_WritePin>

	if (isTouchGFXBuffer){
 80034b2:	79bb      	ldrb	r3, [r7, #6]
 80034b4:	2b00      	cmp	r3, #0
 80034b6:	d016      	beq.n	80034e6 <Displ_Transmit+0x6a>
#ifdef Z_RGB565
//if color format is RGB565 just swap even and odd bytes correcting endianess for ILI driver
		uint32_t *limit=(uint32_t*)(data+dataSize);
 80034b8:	88bb      	ldrh	r3, [r7, #4]
 80034ba:	683a      	ldr	r2, [r7, #0]
 80034bc:	4413      	add	r3, r2
 80034be:	613b      	str	r3, [r7, #16]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 80034c0:	683b      	ldr	r3, [r7, #0]
 80034c2:	617b      	str	r3, [r7, #20]
 80034c4:	e00b      	b.n	80034de <Displ_Transmit+0x62>
			*data32=__REV16(*data32);
 80034c6:	697b      	ldr	r3, [r7, #20]
 80034c8:	681b      	ldr	r3, [r3, #0]
 80034ca:	60fb      	str	r3, [r7, #12]
  __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 80034cc:	68fb      	ldr	r3, [r7, #12]
 80034ce:	ba5b      	rev16	r3, r3
 80034d0:	60bb      	str	r3, [r7, #8]
  return result;
 80034d2:	68ba      	ldr	r2, [r7, #8]
 80034d4:	697b      	ldr	r3, [r7, #20]
 80034d6:	601a      	str	r2, [r3, #0]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 80034d8:	697b      	ldr	r3, [r7, #20]
 80034da:	3304      	adds	r3, #4
 80034dc:	617b      	str	r3, [r7, #20]
 80034de:	697a      	ldr	r2, [r7, #20]
 80034e0:	693b      	ldr	r3, [r7, #16]
 80034e2:	429a      	cmp	r2, r3
 80034e4:	d3ef      	bcc.n	80034c6 <Displ_Transmit+0x4a>
#ifdef DISPLAY_SPI_INTERRUPT_MODE
		Displ_SpiAvailable=0;
		HAL_SPI_Transmit_IT(&DISPL_SPI_PORT , data, dataSize);
#else
#ifdef DISPLAY_SPI_DMA_MODE
		if (dataSize<DISPL_DMA_CUTOFF) {
 80034e6:	88bb      	ldrh	r3, [r7, #4]
 80034e8:	2b13      	cmp	r3, #19
 80034ea:	d812      	bhi.n	8003512 <Displ_Transmit+0x96>
#endif //DISPLAY_SPI_DMA_MODE
			Displ_SpiAvailable=0;
 80034ec:	4b0f      	ldr	r3, [pc, #60]	; (800352c <Displ_Transmit+0xb0>)
 80034ee:	2200      	movs	r2, #0
 80034f0:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit(&DISPL_SPI_PORT , data, dataSize, HAL_MAX_DELAY);
 80034f2:	88ba      	ldrh	r2, [r7, #4]
 80034f4:	f04f 33ff 	mov.w	r3, #4294967295
 80034f8:	6839      	ldr	r1, [r7, #0]
 80034fa:	480e      	ldr	r0, [pc, #56]	; (8003534 <Displ_Transmit+0xb8>)
 80034fc:	f003 fdff 	bl	80070fe <HAL_SPI_Transmit>
			Displ_SpiAvailable=1;
 8003500:	4b0a      	ldr	r3, [pc, #40]	; (800352c <Displ_Transmit+0xb0>)
 8003502:	2201      	movs	r2, #1
 8003504:	701a      	strb	r2, [r3, #0]
#ifdef DISPLAY_USING_TOUCHGFX
			if (isTouchGFXBuffer){
 8003506:	79bb      	ldrb	r3, [r7, #6]
 8003508:	2b00      	cmp	r3, #0
 800350a:	d00b      	beq.n	8003524 <Displ_Transmit+0xa8>
				DisplayDriver_TransferCompleteCallback();
 800350c:	f00e ff68 	bl	80123e0 <DisplayDriver_TransferCompleteCallback>
			Displ_SpiAvailable=0;
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
		}
#endif //DISPLAY_SPI_DMA_MODE
#endif //DISPLAY_SPI_INTERRUPT_MODE
	}
 8003510:	e008      	b.n	8003524 <Displ_Transmit+0xa8>
			Displ_SpiAvailable=0;
 8003512:	4b06      	ldr	r3, [pc, #24]	; (800352c <Displ_Transmit+0xb0>)
 8003514:	2200      	movs	r2, #0
 8003516:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
 8003518:	88bb      	ldrh	r3, [r7, #4]
 800351a:	461a      	mov	r2, r3
 800351c:	6839      	ldr	r1, [r7, #0]
 800351e:	4805      	ldr	r0, [pc, #20]	; (8003534 <Displ_Transmit+0xb8>)
 8003520:	f004 f9f8 	bl	8007914 <HAL_SPI_Transmit_DMA>
	}
 8003524:	bf00      	nop
 8003526:	3718      	adds	r7, #24
 8003528:	46bd      	mov	sp, r7
 800352a:	bd80      	pop	{r7, pc}
 800352c:	20000008 	.word	0x20000008
 8003530:	40020000 	.word	0x40020000
 8003534:	200001ac 	.word	0x200001ac

08003538 <Displ_WriteCommand>:


/**********************************
 * @BRIEF	transmit a byte in a SPI_COMMAND format
 **********************************/
void Displ_WriteCommand(uint8_t cmd){
 8003538:	b580      	push	{r7, lr}
 800353a:	b082      	sub	sp, #8
 800353c:	af00      	add	r7, sp, #0
 800353e:	4603      	mov	r3, r0
 8003540:	71fb      	strb	r3, [r7, #7]
	Displ_Transmit(SPI_COMMAND, &cmd, sizeof(cmd),0);
 8003542:	1df9      	adds	r1, r7, #7
 8003544:	2300      	movs	r3, #0
 8003546:	2201      	movs	r2, #1
 8003548:	2000      	movs	r0, #0
 800354a:	f7ff ff97 	bl	800347c <Displ_Transmit>
}
 800354e:	bf00      	nop
 8003550:	3708      	adds	r7, #8
 8003552:	46bd      	mov	sp, r7
 8003554:	bd80      	pop	{r7, pc}

08003556 <Displ_WriteData>:
 * @BRIEF	transmit a set of data in a SPI_DATA format
 * @PARAM 	data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **********************************/
void Displ_WriteData(uint8_t* buff, size_t buff_size, uint8_t isTouchGFXBuffer){
 8003556:	b580      	push	{r7, lr}
 8003558:	b084      	sub	sp, #16
 800355a:	af00      	add	r7, sp, #0
 800355c:	60f8      	str	r0, [r7, #12]
 800355e:	60b9      	str	r1, [r7, #8]
 8003560:	4613      	mov	r3, r2
 8003562:	71fb      	strb	r3, [r7, #7]
	if (buff_size==0) return;
 8003564:	68bb      	ldr	r3, [r7, #8]
 8003566:	2b00      	cmp	r3, #0
 8003568:	d007      	beq.n	800357a <Displ_WriteData+0x24>
	Displ_Transmit(SPI_DATA, buff, buff_size, isTouchGFXBuffer);
 800356a:	68bb      	ldr	r3, [r7, #8]
 800356c:	b29a      	uxth	r2, r3
 800356e:	79fb      	ldrb	r3, [r7, #7]
 8003570:	68f9      	ldr	r1, [r7, #12]
 8003572:	2001      	movs	r0, #1
 8003574:	f7ff ff82 	bl	800347c <Displ_Transmit>
 8003578:	e000      	b.n	800357c <Displ_WriteData+0x26>
	if (buff_size==0) return;
 800357a:	bf00      	nop
}
 800357c:	3710      	adds	r7, #16
 800357e:	46bd      	mov	sp, r7
 8003580:	bd80      	pop	{r7, pc}
	...

08003584 <ILI9XXX_Init>:


/**********************************
 * @brief	ILIXXX initialization sequence
 **********************************/
void ILI9XXX_Init(){
 8003584:	b580      	push	{r7, lr}
 8003586:	af00      	add	r7, sp, #0
	Displ_Select();
 8003588:	f7ff ff4c 	bl	8003424 <Displ_Select>

	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_RESET);
 800358c:	2200      	movs	r2, #0
 800358e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8003592:	481a      	ldr	r0, [pc, #104]	; (80035fc <ILI9XXX_Init+0x78>)
 8003594:	f001 fbf6 	bl	8004d84 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8003598:	2001      	movs	r0, #1
 800359a:	f000 fd15 	bl	8003fc8 <HAL_Delay>
	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_SET);
 800359e:	2201      	movs	r2, #1
 80035a0:	f44f 7100 	mov.w	r1, #512	; 0x200
 80035a4:	4815      	ldr	r0, [pc, #84]	; (80035fc <ILI9XXX_Init+0x78>)
 80035a6:	f001 fbed 	bl	8004d84 <HAL_GPIO_WritePin>
	HAL_Delay(150);
 80035aa:	2096      	movs	r0, #150	; 0x96
 80035ac:	f000 fd0c 	bl	8003fc8 <HAL_Delay>
		Displ_WriteData(data,3);
	#endif
*/


	Displ_WriteCommand(ILI9XXX_PIXEL_FORMAT);
 80035b0:	203a      	movs	r0, #58	; 0x3a
 80035b2:	f7ff ffc1 	bl	8003538 <Displ_WriteCommand>
#ifdef Z_RGB666
	Displ_WriteData((uint8_t *)"\x66",1,0);		// RGB666
#endif
#ifdef Z_RGB565
	Displ_WriteData((uint8_t *)"\x55",1,0);		// RGB565
 80035b6:	2200      	movs	r2, #0
 80035b8:	2101      	movs	r1, #1
 80035ba:	4811      	ldr	r0, [pc, #68]	; (8003600 <ILI9XXX_Init+0x7c>)
 80035bc:	f7ff ffcb 	bl	8003556 <Displ_WriteData>
#endif
	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 80035c0:	20b0      	movs	r0, #176	; 0xb0
 80035c2:	f7ff ffb9 	bl	8003538 <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 80035c6:	2200      	movs	r2, #0
 80035c8:	2101      	movs	r1, #1
 80035ca:	480e      	ldr	r0, [pc, #56]	; (8003604 <ILI9XXX_Init+0x80>)
 80035cc:	f7ff ffc3 	bl	8003556 <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 80035d0:	20b0      	movs	r0, #176	; 0xb0
 80035d2:	f7ff ffb1 	bl	8003538 <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 80035d6:	2200      	movs	r2, #0
 80035d8:	2101      	movs	r1, #1
 80035da:	480a      	ldr	r0, [pc, #40]	; (8003604 <ILI9XXX_Init+0x80>)
 80035dc:	f7ff ffbb 	bl	8003556 <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_SLEEP_OUT);
 80035e0:	2011      	movs	r0, #17
 80035e2:	f7ff ffa9 	bl	8003538 <Displ_WriteCommand>
	HAL_Delay(120);
 80035e6:	2078      	movs	r0, #120	; 0x78
 80035e8:	f000 fcee 	bl	8003fc8 <HAL_Delay>

	Displ_WriteCommand(ILI9XXX_DISPLAY_ON);
 80035ec:	2029      	movs	r0, #41	; 0x29
 80035ee:	f7ff ffa3 	bl	8003538 <Displ_WriteCommand>
	HAL_Delay(5);
 80035f2:	2005      	movs	r0, #5
 80035f4:	f000 fce8 	bl	8003fc8 <HAL_Delay>

}
 80035f8:	bf00      	nop
 80035fa:	bd80      	pop	{r7, pc}
 80035fc:	40020000 	.word	0x40020000
 8003600:	0802c42c 	.word	0x0802c42c
 8003604:	0802c430 	.word	0x0802c430

08003608 <Displ_SetAddressWindow>:
 * 			information
 * @param  x1,y1,x2,y2 top left and bottom
 * 					   right corner of the area
 * 					   to write
 **********************************************/
void Displ_SetAddressWindow(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2) {
 8003608:	b590      	push	{r4, r7, lr}
 800360a:	b083      	sub	sp, #12
 800360c:	af00      	add	r7, sp, #0
 800360e:	4604      	mov	r4, r0
 8003610:	4608      	mov	r0, r1
 8003612:	4611      	mov	r1, r2
 8003614:	461a      	mov	r2, r3
 8003616:	4623      	mov	r3, r4
 8003618:	80fb      	strh	r3, [r7, #6]
 800361a:	4603      	mov	r3, r0
 800361c:	80bb      	strh	r3, [r7, #4]
 800361e:	460b      	mov	r3, r1
 8003620:	807b      	strh	r3, [r7, #2]
 8003622:	4613      	mov	r3, r2
 8003624:	803b      	strh	r3, [r7, #0]
	static uint8_t data[4];

	((uint32_t *)data)[0]=(((x2 & 0xFF)<<24) | ((x2 & 0xFF00)<<8) | ((x1 & 0xFF)<<8) | ((x1 & 0xFF00)>>8) );
 8003626:	887b      	ldrh	r3, [r7, #2]
 8003628:	061a      	lsls	r2, r3, #24
 800362a:	887b      	ldrh	r3, [r7, #2]
 800362c:	021b      	lsls	r3, r3, #8
 800362e:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8003632:	431a      	orrs	r2, r3
 8003634:	88fb      	ldrh	r3, [r7, #6]
 8003636:	021b      	lsls	r3, r3, #8
 8003638:	b29b      	uxth	r3, r3
 800363a:	4313      	orrs	r3, r2
 800363c:	88fa      	ldrh	r2, [r7, #6]
 800363e:	0a12      	lsrs	r2, r2, #8
 8003640:	b292      	uxth	r2, r2
 8003642:	431a      	orrs	r2, r3
 8003644:	4b14      	ldr	r3, [pc, #80]	; (8003698 <Displ_SetAddressWindow+0x90>)
 8003646:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_COLUMN_ADDR);
 8003648:	202a      	movs	r0, #42	; 0x2a
 800364a:	f7ff ff75 	bl	8003538 <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 800364e:	2200      	movs	r2, #0
 8003650:	2104      	movs	r1, #4
 8003652:	4811      	ldr	r0, [pc, #68]	; (8003698 <Displ_SetAddressWindow+0x90>)
 8003654:	f7ff ff7f 	bl	8003556 <Displ_WriteData>

	((uint32_t *)data)[0]=(((y2 & 0xFF)<<24) | ((y2 & 0xFF00)<<8) | ((y1 & 0xFF)<<8) | ((y1 & 0xFF00)>>8) );
 8003658:	883b      	ldrh	r3, [r7, #0]
 800365a:	061a      	lsls	r2, r3, #24
 800365c:	883b      	ldrh	r3, [r7, #0]
 800365e:	021b      	lsls	r3, r3, #8
 8003660:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8003664:	431a      	orrs	r2, r3
 8003666:	88bb      	ldrh	r3, [r7, #4]
 8003668:	021b      	lsls	r3, r3, #8
 800366a:	b29b      	uxth	r3, r3
 800366c:	4313      	orrs	r3, r2
 800366e:	88ba      	ldrh	r2, [r7, #4]
 8003670:	0a12      	lsrs	r2, r2, #8
 8003672:	b292      	uxth	r2, r2
 8003674:	431a      	orrs	r2, r3
 8003676:	4b08      	ldr	r3, [pc, #32]	; (8003698 <Displ_SetAddressWindow+0x90>)
 8003678:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_PAGE_ADDR);
 800367a:	202b      	movs	r0, #43	; 0x2b
 800367c:	f7ff ff5c 	bl	8003538 <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 8003680:	2200      	movs	r2, #0
 8003682:	2104      	movs	r1, #4
 8003684:	4804      	ldr	r0, [pc, #16]	; (8003698 <Displ_SetAddressWindow+0x90>)
 8003686:	f7ff ff66 	bl	8003556 <Displ_WriteData>
	Displ_WriteCommand(ILI9XXX_MEMWR);
 800368a:	202c      	movs	r0, #44	; 0x2c
 800368c:	f7ff ff54 	bl	8003538 <Displ_WriteCommand>
}
 8003690:	bf00      	nop
 8003692:	370c      	adds	r7, #12
 8003694:	46bd      	mov	sp, r7
 8003696:	bd90      	pop	{r4, r7, pc}
 8003698:	20000378 	.word	0x20000378

0800369c <Displ_Init>:

/*****************************************************
 * @brief				first display initialization.
 * @param	orientation	display orientation
 *****************************************************/
void Displ_Init(Displ_Orientat_e orientation){
 800369c:	b580      	push	{r7, lr}
 800369e:	b082      	sub	sp, #8
 80036a0:	af00      	add	r7, sp, #0
 80036a2:	4603      	mov	r3, r0
 80036a4:	71fb      	strb	r3, [r7, #7]
	if (TOUCH_SPI==DISPL_SPI){													// if touch and display share the same SPI port
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display (will be selected at writing time)
 80036a6:	2201      	movs	r2, #1
 80036a8:	f44f 7180 	mov.w	r1, #256	; 0x100
 80036ac:	4809      	ldr	r0, [pc, #36]	; (80036d4 <Displ_Init+0x38>)
 80036ae:	f001 fb69 	bl	8004d84 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);		// unselect touch (will be selected at writing time)
 80036b2:	2201      	movs	r2, #1
 80036b4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80036b8:	4807      	ldr	r0, [pc, #28]	; (80036d8 <Displ_Init+0x3c>)
 80036ba:	f001 fb63 	bl	8004d84 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET); 	// select display
		SET_DISPL_SPI_BAUDRATE;
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);	// select touch
		SET_TOUCH_SPI_BAUDRATE;
	}
	ILI9XXX_Init();
 80036be:	f7ff ff61 	bl	8003584 <ILI9XXX_Init>
	Displ_Orientation(orientation);
 80036c2:	79fb      	ldrb	r3, [r7, #7]
 80036c4:	4618      	mov	r0, r3
 80036c6:	f000 f809 	bl	80036dc <Displ_Orientation>
}
 80036ca:	bf00      	nop
 80036cc:	3708      	adds	r7, #8
 80036ce:	46bd      	mov	sp, r7
 80036d0:	bd80      	pop	{r7, pc}
 80036d2:	bf00      	nop
 80036d4:	40020000 	.word	0x40020000
 80036d8:	40020400 	.word	0x40020400

080036dc <Displ_Orientation>:

/**********************************************
 * @brief		set orientation of the display
 * @param  	m	orientation
 **********************************************/
void Displ_Orientation(Displ_Orientat_e orientation){
 80036dc:	b580      	push	{r7, lr}
 80036de:	b082      	sub	sp, #8
 80036e0:	af00      	add	r7, sp, #0
 80036e2:	4603      	mov	r3, r0
 80036e4:	71fb      	strb	r3, [r7, #7]
	static uint8_t data[1];
	switch(orientation) {
 80036e6:	79fb      	ldrb	r3, [r7, #7]
 80036e8:	2b03      	cmp	r3, #3
 80036ea:	d837      	bhi.n	800375c <Displ_Orientation+0x80>
 80036ec:	a201      	add	r2, pc, #4	; (adr r2, 80036f4 <Displ_Orientation+0x18>)
 80036ee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80036f2:	bf00      	nop
 80036f4:	08003705 	.word	0x08003705
 80036f8:	0800371b 	.word	0x0800371b
 80036fc:	08003731 	.word	0x08003731
 8003700:	08003747 	.word	0x08003747
		case Displ_Orientat_0:
			data[0]=ILI9XXX_MADCTL_0DEG;
 8003704:	4b1d      	ldr	r3, [pc, #116]	; (800377c <Displ_Orientation+0xa0>)
 8003706:	2288      	movs	r2, #136	; 0x88
 8003708:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 800370a:	4b1d      	ldr	r3, [pc, #116]	; (8003780 <Displ_Orientation+0xa4>)
 800370c:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8003710:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 8003712:	4b1c      	ldr	r3, [pc, #112]	; (8003784 <Displ_Orientation+0xa8>)
 8003714:	22f0      	movs	r2, #240	; 0xf0
 8003716:	801a      	strh	r2, [r3, #0]
			break;
 8003718:	e020      	b.n	800375c <Displ_Orientation+0x80>
		case Displ_Orientat_90:
			data[0]=ILI9XXX_MADCTL_90DEG;
 800371a:	4b18      	ldr	r3, [pc, #96]	; (800377c <Displ_Orientation+0xa0>)
 800371c:	22e8      	movs	r2, #232	; 0xe8
 800371e:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 8003720:	4b17      	ldr	r3, [pc, #92]	; (8003780 <Displ_Orientation+0xa4>)
 8003722:	22f0      	movs	r2, #240	; 0xf0
 8003724:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 8003726:	4b17      	ldr	r3, [pc, #92]	; (8003784 <Displ_Orientation+0xa8>)
 8003728:	f44f 72a0 	mov.w	r2, #320	; 0x140
 800372c:	801a      	strh	r2, [r3, #0]
			break;
 800372e:	e015      	b.n	800375c <Displ_Orientation+0x80>
		case Displ_Orientat_180:
			data[0]=ILI9XXX_MADCTL_180DEG;
 8003730:	4b12      	ldr	r3, [pc, #72]	; (800377c <Displ_Orientation+0xa0>)
 8003732:	2248      	movs	r2, #72	; 0x48
 8003734:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 8003736:	4b12      	ldr	r3, [pc, #72]	; (8003780 <Displ_Orientation+0xa4>)
 8003738:	f44f 72a0 	mov.w	r2, #320	; 0x140
 800373c:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 800373e:	4b11      	ldr	r3, [pc, #68]	; (8003784 <Displ_Orientation+0xa8>)
 8003740:	22f0      	movs	r2, #240	; 0xf0
 8003742:	801a      	strh	r2, [r3, #0]
			break;
 8003744:	e00a      	b.n	800375c <Displ_Orientation+0x80>
		case Displ_Orientat_270:
			data[0]=ILI9XXX_MADCTL_270DEG;
 8003746:	4b0d      	ldr	r3, [pc, #52]	; (800377c <Displ_Orientation+0xa0>)
 8003748:	2228      	movs	r2, #40	; 0x28
 800374a:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 800374c:	4b0c      	ldr	r3, [pc, #48]	; (8003780 <Displ_Orientation+0xa4>)
 800374e:	22f0      	movs	r2, #240	; 0xf0
 8003750:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 8003752:	4b0c      	ldr	r3, [pc, #48]	; (8003784 <Displ_Orientation+0xa8>)
 8003754:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8003758:	801a      	strh	r2, [r3, #0]
			break;
 800375a:	bf00      	nop
	}
	Displ_WriteCommand(ILI9XXX_MADCTL);
 800375c:	2036      	movs	r0, #54	; 0x36
 800375e:	f7ff feeb 	bl	8003538 <Displ_WriteCommand>
	Displ_WriteData(data,1,0);
 8003762:	2200      	movs	r2, #0
 8003764:	2101      	movs	r1, #1
 8003766:	4805      	ldr	r0, [pc, #20]	; (800377c <Displ_Orientation+0xa0>)
 8003768:	f7ff fef5 	bl	8003556 <Displ_WriteData>
	current_orientation = orientation;  //stores active orientation into a global variable for touch routines
 800376c:	4a06      	ldr	r2, [pc, #24]	; (8003788 <Displ_Orientation+0xac>)
 800376e:	79fb      	ldrb	r3, [r7, #7]
 8003770:	7013      	strb	r3, [r2, #0]
}
 8003772:	bf00      	nop
 8003774:	3708      	adds	r7, #8
 8003776:	46bd      	mov	sp, r7
 8003778:	bd80      	pop	{r7, pc}
 800377a:	bf00      	nop
 800377c:	2000037c 	.word	0x2000037c
 8003780:	20000374 	.word	0x20000374
 8003784:	20000372 	.word	0x20000372
 8003788:	20000370 	.word	0x20000370

0800378c <HAL_SPI_ErrorCallback>:




void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi){
 800378c:	b480      	push	{r7}
 800378e:	b083      	sub	sp, #12
 8003790:	af00      	add	r7, sp, #0
 8003792:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 8003794:	687b      	ldr	r3, [r7, #4]
 8003796:	681b      	ldr	r3, [r3, #0]
 8003798:	4a05      	ldr	r2, [pc, #20]	; (80037b0 <HAL_SPI_ErrorCallback+0x24>)
 800379a:	4293      	cmp	r3, r2
 800379c:	d102      	bne.n	80037a4 <HAL_SPI_ErrorCallback+0x18>
		Displ_SpiAvailable=1;
 800379e:	4b05      	ldr	r3, [pc, #20]	; (80037b4 <HAL_SPI_ErrorCallback+0x28>)
 80037a0:	2201      	movs	r2, #1
 80037a2:	701a      	strb	r2, [r3, #0]
	}
}
 80037a4:	bf00      	nop
 80037a6:	370c      	adds	r7, #12
 80037a8:	46bd      	mov	sp, r7
 80037aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037ae:	4770      	bx	lr
 80037b0:	40003800 	.word	0x40003800
 80037b4:	20000008 	.word	0x20000008

080037b8 <HAL_SPI_TxCpltCallback>:





void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi) {
 80037b8:	b580      	push	{r7, lr}
 80037ba:	b082      	sub	sp, #8
 80037bc:	af00      	add	r7, sp, #0
 80037be:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 80037c0:	687b      	ldr	r3, [r7, #4]
 80037c2:	681b      	ldr	r3, [r3, #0]
 80037c4:	4a05      	ldr	r2, [pc, #20]	; (80037dc <HAL_SPI_TxCpltCallback+0x24>)
 80037c6:	4293      	cmp	r3, r2
 80037c8:	d104      	bne.n	80037d4 <HAL_SPI_TxCpltCallback+0x1c>
		Displ_SpiAvailable=1;
 80037ca:	4b05      	ldr	r3, [pc, #20]	; (80037e0 <HAL_SPI_TxCpltCallback+0x28>)
 80037cc:	2201      	movs	r2, #1
 80037ce:	701a      	strb	r2, [r3, #0]

	#ifdef DISPLAY_USING_TOUCHGFX
		DisplayDriver_TransferCompleteCallback();
 80037d0:	f00e fe06 	bl	80123e0 <DisplayDriver_TransferCompleteCallback>
	#endif

	}
}
 80037d4:	bf00      	nop
 80037d6:	3708      	adds	r7, #8
 80037d8:	46bd      	mov	sp, r7
 80037da:	bd80      	pop	{r7, pc}
 80037dc:	40003800 	.word	0x40003800
 80037e0:	20000008 	.word	0x20000008

080037e4 <Displ_BackLight>:
 *				'0'		set the display level to 0 (off)
 *				'I'		'Initialize'  IT MUST BE in dimming mode
 *              'Q'		do nothing, just return current level
 * @return		current backlight level
 **************************************/
uint32_t  Displ_BackLight(uint8_t cmd) {
 80037e4:	b580      	push	{r7, lr}
 80037e6:	b082      	sub	sp, #8
 80037e8:	af00      	add	r7, sp, #0
 80037ea:	4603      	mov	r3, r0
 80037ec:	71fb      	strb	r3, [r7, #7]

#ifdef DISPLAY_DIMMING_MODE
	static uint16_t memCCR1=0;  			//it stores CCR1 value while in stand-by
#endif

	switch (cmd) {
 80037ee:	79fb      	ldrb	r3, [r7, #7]
 80037f0:	3b2b      	subs	r3, #43	; 0x2b
 80037f2:	2b2c      	cmp	r3, #44	; 0x2c
 80037f4:	f200 80b0 	bhi.w	8003958 <Displ_BackLight+0x174>
 80037f8:	a201      	add	r2, pc, #4	; (adr r2, 8003800 <Displ_BackLight+0x1c>)
 80037fa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80037fe:	bf00      	nop
 8003800:	080038fd 	.word	0x080038fd
 8003804:	08003959 	.word	0x08003959
 8003808:	08003927 	.word	0x08003927
 800380c:	08003959 	.word	0x08003959
 8003810:	08003959 	.word	0x08003959
 8003814:	080038c7 	.word	0x080038c7
 8003818:	080038b9 	.word	0x080038b9
 800381c:	08003959 	.word	0x08003959
 8003820:	08003959 	.word	0x08003959
 8003824:	08003959 	.word	0x08003959
 8003828:	08003959 	.word	0x08003959
 800382c:	08003959 	.word	0x08003959
 8003830:	08003959 	.word	0x08003959
 8003834:	08003959 	.word	0x08003959
 8003838:	08003959 	.word	0x08003959
 800383c:	08003959 	.word	0x08003959
 8003840:	08003959 	.word	0x08003959
 8003844:	08003959 	.word	0x08003959
 8003848:	08003959 	.word	0x08003959
 800384c:	08003959 	.word	0x08003959
 8003850:	08003959 	.word	0x08003959
 8003854:	08003959 	.word	0x08003959
 8003858:	08003959 	.word	0x08003959
 800385c:	08003959 	.word	0x08003959
 8003860:	08003959 	.word	0x08003959
 8003864:	08003959 	.word	0x08003959
 8003868:	08003959 	.word	0x08003959
 800386c:	080038b9 	.word	0x080038b9
 8003870:	08003959 	.word	0x08003959
 8003874:	08003959 	.word	0x08003959
 8003878:	08003947 	.word	0x08003947
 800387c:	08003959 	.word	0x08003959
 8003880:	08003959 	.word	0x08003959
 8003884:	08003959 	.word	0x08003959
 8003888:	08003959 	.word	0x08003959
 800388c:	08003959 	.word	0x08003959
 8003890:	08003959 	.word	0x08003959
 8003894:	08003959 	.word	0x08003959
 8003898:	080038b5 	.word	0x080038b5
 800389c:	08003959 	.word	0x08003959
 80038a0:	080038dd 	.word	0x080038dd
 80038a4:	08003959 	.word	0x08003959
 80038a8:	08003959 	.word	0x08003959
 80038ac:	08003959 	.word	0x08003959
 80038b0:	080038d1 	.word	0x080038d1
	case 'Q':
		__NOP();
 80038b4:	bf00      	nop
		break;
 80038b6:	e052      	b.n	800395e <Displ_BackLight+0x17a>
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_RESET);
		break;
#else
	case 'F':
	case '1':
		BKLIT_TIMER->BKLIT_CCR=BKLIT_TIMER->ARR;
 80038b8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80038bc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80038c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80038c2:	6353      	str	r3, [r2, #52]	; 0x34
		break;
 80038c4:	e04b      	b.n	800395e <Displ_BackLight+0x17a>
	case '0':
		BKLIT_TIMER->BKLIT_CCR=0;
 80038c6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80038ca:	2200      	movs	r2, #0
 80038cc:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 80038ce:	e046      	b.n	800395e <Displ_BackLight+0x17a>
	case 'W':
		BKLIT_TIMER->BKLIT_CCR=memCCR1;					//restore previous level
 80038d0:	4b26      	ldr	r3, [pc, #152]	; (800396c <Displ_BackLight+0x188>)
 80038d2:	881a      	ldrh	r2, [r3, #0]
 80038d4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80038d8:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 80038da:	e040      	b.n	800395e <Displ_BackLight+0x17a>
	case 'S':
		memCCR1=BKLIT_TIMER->BKLIT_CCR;
 80038dc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80038e0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80038e2:	b29a      	uxth	r2, r3
 80038e4:	4b21      	ldr	r3, [pc, #132]	; (800396c <Displ_BackLight+0x188>)
 80038e6:	801a      	strh	r2, [r3, #0]
		if (BKLIT_TIMER->BKLIT_CCR>=(BKLIT_STBY_LEVEL))	//set stby level only if current level is higher
 80038e8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80038ec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80038ee:	2b31      	cmp	r3, #49	; 0x31
 80038f0:	d934      	bls.n	800395c <Displ_BackLight+0x178>
			BKLIT_TIMER->BKLIT_CCR=(BKLIT_STBY_LEVEL);
 80038f2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80038f6:	2232      	movs	r2, #50	; 0x32
 80038f8:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 80038fa:	e02f      	b.n	800395c <Displ_BackLight+0x178>
	case '+':
		if (BKLIT_TIMER->ARR>BKLIT_TIMER->BKLIT_CCR)		// if CCR1 has not yet the highest value (ARR)
 80038fc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003900:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003902:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003906:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003908:	429a      	cmp	r2, r3
 800390a:	d905      	bls.n	8003918 <Displ_BackLight+0x134>
			++BKLIT_TIMER->BKLIT_CCR;
 800390c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003910:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003912:	3201      	adds	r2, #1
 8003914:	635a      	str	r2, [r3, #52]	; 0x34
		else
			BKLIT_TIMER->BKLIT_CCR=BKLIT_TIMER->ARR;
		break;
 8003916:	e022      	b.n	800395e <Displ_BackLight+0x17a>
			BKLIT_TIMER->BKLIT_CCR=BKLIT_TIMER->ARR;
 8003918:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800391c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003920:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003922:	6353      	str	r3, [r2, #52]	; 0x34
		break;
 8003924:	e01b      	b.n	800395e <Displ_BackLight+0x17a>
	case '-':
		if (BKLIT_TIMER->BKLIT_CCR>0)					// if CCR1 has not yet the lowest value (0)
 8003926:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800392a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800392c:	2b00      	cmp	r3, #0
 800392e:	d005      	beq.n	800393c <Displ_BackLight+0x158>
			--BKLIT_TIMER->BKLIT_CCR;
 8003930:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003934:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003936:	3a01      	subs	r2, #1
 8003938:	635a      	str	r2, [r3, #52]	; 0x34
		else
			BKLIT_TIMER->BKLIT_CCR=0;
		break;
 800393a:	e010      	b.n	800395e <Displ_BackLight+0x17a>
			BKLIT_TIMER->BKLIT_CCR=0;
 800393c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003940:	2200      	movs	r2, #0
 8003942:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 8003944:	e00b      	b.n	800395e <Displ_BackLight+0x17a>
	case 'I':
	  	HAL_TIM_PWM_Start(&BKLIT_T, BKLIT_CHANNEL);
 8003946:	2100      	movs	r1, #0
 8003948:	4809      	ldr	r0, [pc, #36]	; (8003970 <Displ_BackLight+0x18c>)
 800394a:	f004 fd1d 	bl	8008388 <HAL_TIM_PWM_Start>
		BKLIT_TIMER->BKLIT_CCR=BKLIT_INIT_LEVEL;
 800394e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003952:	2264      	movs	r2, #100	; 0x64
 8003954:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 8003956:	e002      	b.n	800395e <Displ_BackLight+0x17a>
#endif
	default:
		break;
 8003958:	bf00      	nop
 800395a:	e000      	b.n	800395e <Displ_BackLight+0x17a>
		break;
 800395c:	bf00      	nop
	}
#ifndef DISPLAY_DIMMING_MODE
	return HAL_GPIO_ReadPin(DISPL_LED_GPIO_Port, DISPL_LED_Pin);
#else
	return (BKLIT_TIMER->BKLIT_CCR);
 800395e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003962:	6b5b      	ldr	r3, [r3, #52]	; 0x34
#endif
}
 8003964:	4618      	mov	r0, r3
 8003966:	3708      	adds	r7, #8
 8003968:	46bd      	mov	sp, r7
 800396a:	bd80      	pop	{r7, pc}
 800396c:	2000037e 	.word	0x2000037e
 8003970:	20000264 	.word	0x20000264

08003974 <touchgfxDisplayDriverTransmitActive>:
 * @brief	TouchGFX integration: returns status of
 * 			communication to the display
 * @return	1 = there is a transmission running
 * 			0 = no transmission
 *********************************************************/
int touchgfxDisplayDriverTransmitActive(){
 8003974:	b480      	push	{r7}
 8003976:	af00      	add	r7, sp, #0
	// using the flag indicating SPI port availability
	// already used to drive communication via DMA
	return (!Displ_SpiAvailable);
 8003978:	4b06      	ldr	r3, [pc, #24]	; (8003994 <touchgfxDisplayDriverTransmitActive+0x20>)
 800397a:	781b      	ldrb	r3, [r3, #0]
 800397c:	b2db      	uxtb	r3, r3
 800397e:	2b00      	cmp	r3, #0
 8003980:	bf0c      	ite	eq
 8003982:	2301      	moveq	r3, #1
 8003984:	2300      	movne	r3, #0
 8003986:	b2db      	uxtb	r3, r3
}
 8003988:	4618      	mov	r0, r3
 800398a:	46bd      	mov	sp, r7
 800398c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003990:	4770      	bx	lr
 8003992:	bf00      	nop
 8003994:	20000008 	.word	0x20000008

08003998 <touchgfxDisplayDriverTransmitBlock>:

/*********************************************************
 * @brief	TouchGFX integration: write to display the
 * 			block indicated by parameters
 *********************************************************/
void touchgfxDisplayDriverTransmitBlock(const uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h){
 8003998:	b590      	push	{r4, r7, lr}
 800399a:	b085      	sub	sp, #20
 800399c:	af00      	add	r7, sp, #0
 800399e:	60f8      	str	r0, [r7, #12]
 80039a0:	4608      	mov	r0, r1
 80039a2:	4611      	mov	r1, r2
 80039a4:	461a      	mov	r2, r3
 80039a6:	4603      	mov	r3, r0
 80039a8:	817b      	strh	r3, [r7, #10]
 80039aa:	460b      	mov	r3, r1
 80039ac:	813b      	strh	r3, [r7, #8]
 80039ae:	4613      	mov	r3, r2
 80039b0:	80fb      	strh	r3, [r7, #6]
	//START WRITING TO DISPLAY
		Displ_SetAddressWindow(x, y, x+w-1, y+h-1);
 80039b2:	897a      	ldrh	r2, [r7, #10]
 80039b4:	88fb      	ldrh	r3, [r7, #6]
 80039b6:	4413      	add	r3, r2
 80039b8:	b29b      	uxth	r3, r3
 80039ba:	3b01      	subs	r3, #1
 80039bc:	b29c      	uxth	r4, r3
 80039be:	893a      	ldrh	r2, [r7, #8]
 80039c0:	8c3b      	ldrh	r3, [r7, #32]
 80039c2:	4413      	add	r3, r2
 80039c4:	b29b      	uxth	r3, r3
 80039c6:	3b01      	subs	r3, #1
 80039c8:	b29b      	uxth	r3, r3
 80039ca:	8939      	ldrh	r1, [r7, #8]
 80039cc:	8978      	ldrh	r0, [r7, #10]
 80039ce:	4622      	mov	r2, r4
 80039d0:	f7ff fe1a 	bl	8003608 <Displ_SetAddressWindow>
		Displ_WriteData((uint8_t* )pixels,((w*h)<<1),1);
 80039d4:	88fb      	ldrh	r3, [r7, #6]
 80039d6:	8c3a      	ldrh	r2, [r7, #32]
 80039d8:	fb02 f303 	mul.w	r3, r2, r3
 80039dc:	005b      	lsls	r3, r3, #1
 80039de:	2201      	movs	r2, #1
 80039e0:	4619      	mov	r1, r3
 80039e2:	68f8      	ldr	r0, [r7, #12]
 80039e4:	f7ff fdb7 	bl	8003556 <Displ_WriteData>
}
 80039e8:	bf00      	nop
 80039ea:	3714      	adds	r7, #20
 80039ec:	46bd      	mov	sp, r7
 80039ee:	bd90      	pop	{r4, r7, pc}

080039f0 <HAL_TIM_PeriodElapsedCallback>:
 * @brief	TouchGFX integration: this is the callback
 * 			function run by timer interrupt implementing
 * 			the tick timer for TouchGFX
 *********************************************************/
#ifdef DISPLAY_USING_TOUCHGFX
void HAL_TIM_PeriodElapsedCallback (TIM_HandleTypeDef * htim){
 80039f0:	b580      	push	{r7, lr}
 80039f2:	b082      	sub	sp, #8
 80039f4:	af00      	add	r7, sp, #0
 80039f6:	6078      	str	r0, [r7, #4]
	if (htim==&TGFX_T){
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	4a04      	ldr	r2, [pc, #16]	; (8003a0c <HAL_TIM_PeriodElapsedCallback+0x1c>)
 80039fc:	4293      	cmp	r3, r2
 80039fe:	d101      	bne.n	8003a04 <HAL_TIM_PeriodElapsedCallback+0x14>
		  touchgfxSignalVSync();
 8003a00:	f00e fcf4 	bl	80123ec <touchgfxSignalVSync>
	}
}
 8003a04:	bf00      	nop
 8003a06:	3708      	adds	r7, #8
 8003a08:	46bd      	mov	sp, r7
 8003a0a:	bd80      	pop	{r7, pc}
 8003a0c:	200002ac 	.word	0x200002ac

08003a10 <Touch_HandlePenDownInterrupt>:
volatile uint8_t Touch_PenDown=0;						// set to 1 by pendown interrupt callback, reset to 0 by sw
volatile uint8_t Touch_Int_Enabled=1;					// while reading touch sensor touch interrupt handling is disabled through this flag



void Touch_HandlePenDownInterrupt (){
 8003a10:	b480      	push	{r7}
 8003a12:	af00      	add	r7, sp, #0
	if (Touch_Int_Enabled) {
 8003a14:	4b06      	ldr	r3, [pc, #24]	; (8003a30 <Touch_HandlePenDownInterrupt+0x20>)
 8003a16:	781b      	ldrb	r3, [r3, #0]
 8003a18:	b2db      	uxtb	r3, r3
 8003a1a:	2b00      	cmp	r3, #0
 8003a1c:	d002      	beq.n	8003a24 <Touch_HandlePenDownInterrupt+0x14>
		Touch_PenDown=1;
 8003a1e:	4b05      	ldr	r3, [pc, #20]	; (8003a34 <Touch_HandlePenDownInterrupt+0x24>)
 8003a20:	2201      	movs	r2, #1
 8003a22:	701a      	strb	r2, [r3, #0]
	}
}
 8003a24:	bf00      	nop
 8003a26:	46bd      	mov	sp, r7
 8003a28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a2c:	4770      	bx	lr
 8003a2e:	bf00      	nop
 8003a30:	20000009 	.word	0x20000009
 8003a34:	20000380 	.word	0x20000380

08003a38 <HAL_GPIO_EXTI_Callback>:



void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 8003a38:	b580      	push	{r7, lr}
 8003a3a:	b082      	sub	sp, #8
 8003a3c:	af00      	add	r7, sp, #0
 8003a3e:	4603      	mov	r3, r0
 8003a40:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin==TOUCH_INT_Pin){
 8003a42:	88fb      	ldrh	r3, [r7, #6]
 8003a44:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003a48:	d101      	bne.n	8003a4e <HAL_GPIO_EXTI_Callback+0x16>
		Touch_HandlePenDownInterrupt();
 8003a4a:	f7ff ffe1 	bl	8003a10 <Touch_HandlePenDownInterrupt>
	}
}
 8003a4e:	bf00      	nop
 8003a50:	3708      	adds	r7, #8
 8003a52:	46bd      	mov	sp, r7
 8003a54:	bd80      	pop	{r7, pc}
	...

08003a58 <Touch_Select>:

/******************************************
 * @brief	enable touch, disabling display
 * 			set SPI baudrate as needed
 ******************************************/
void Touch_Select(void) {
 8003a58:	b580      	push	{r7, lr}
 8003a5a:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		if (!HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display selected
 8003a5c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003a60:	4813      	ldr	r0, [pc, #76]	; (8003ab0 <Touch_Select+0x58>)
 8003a62:	f001 f977 	bl	8004d54 <HAL_GPIO_ReadPin>
 8003a66:	4603      	mov	r3, r0
 8003a68:	2b00      	cmp	r3, #0
 8003a6a:	d10b      	bne.n	8003a84 <Touch_Select+0x2c>
			while (!Displ_SpiAvailable) {};  										// waiting for completing display communication. Flag is set to 1 by transmission-complete interrupt callback
 8003a6c:	bf00      	nop
 8003a6e:	4b11      	ldr	r3, [pc, #68]	; (8003ab4 <Touch_Select+0x5c>)
 8003a70:	781b      	ldrb	r3, [r3, #0]
 8003a72:	b2db      	uxtb	r3, r3
 8003a74:	2b00      	cmp	r3, #0
 8003a76:	d0fa      	beq.n	8003a6e <Touch_Select+0x16>
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display
 8003a78:	2201      	movs	r2, #1
 8003a7a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003a7e:	480c      	ldr	r0, [pc, #48]	; (8003ab0 <Touch_Select+0x58>)
 8003a80:	f001 f980 	bl	8004d84 <HAL_GPIO_WritePin>
		}
		SET_TOUCH_SPI_BAUDRATE;				   										//change SPI port speed as per display needs
 8003a84:	4b0c      	ldr	r3, [pc, #48]	; (8003ab8 <Touch_Select+0x60>)
 8003a86:	681a      	ldr	r2, [r3, #0]
 8003a88:	490b      	ldr	r1, [pc, #44]	; (8003ab8 <Touch_Select+0x60>)
 8003a8a:	f64f 73c7 	movw	r3, #65479	; 0xffc7
 8003a8e:	4013      	ands	r3, r2
 8003a90:	600b      	str	r3, [r1, #0]
 8003a92:	4b09      	ldr	r3, [pc, #36]	; (8003ab8 <Touch_Select+0x60>)
 8003a94:	681b      	ldr	r3, [r3, #0]
 8003a96:	4a08      	ldr	r2, [pc, #32]	; (8003ab8 <Touch_Select+0x60>)
 8003a98:	f043 0338 	orr.w	r3, r3, #56	; 0x38
 8003a9c:	6013      	str	r3, [r2, #0]
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);
 8003a9e:	2200      	movs	r2, #0
 8003aa0:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8003aa4:	4805      	ldr	r0, [pc, #20]	; (8003abc <Touch_Select+0x64>)
 8003aa6:	f001 f96d 	bl	8004d84 <HAL_GPIO_WritePin>
	}
}
 8003aaa:	bf00      	nop
 8003aac:	bd80      	pop	{r7, pc}
 8003aae:	bf00      	nop
 8003ab0:	40020000 	.word	0x40020000
 8003ab4:	20000008 	.word	0x20000008
 8003ab8:	40003800 	.word	0x40003800
 8003abc:	40020400 	.word	0x40020400

08003ac0 <Touch_UnSelect>:


/******************************************
 * @brief	disable touch
 ******************************************/
void Touch_UnSelect(void) {
 8003ac0:	b580      	push	{r7, lr}
 8003ac2:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);			// unselect touch
 8003ac4:	2201      	movs	r2, #1
 8003ac6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8003aca:	4802      	ldr	r0, [pc, #8]	; (8003ad4 <Touch_UnSelect+0x14>)
 8003acc:	f001 f95a 	bl	8004d84 <HAL_GPIO_WritePin>
	}
}
 8003ad0:	bf00      	nop
 8003ad2:	bd80      	pop	{r7, pc}
 8003ad4:	40020400 	.word	0x40020400

08003ad8 <Touch_PollAxis>:
 * @params	axis	use only one of the three options X_AXIS, Y_AXIS or Z_AXIS
 * @return			the level measured on the "axis" axis
 * 					PLEASE NOTE this function should be only for internal usage
 * 								Use Touch_GetXYTouch() instead
 *******************************************************************************/
uint16_t Touch_PollAxis(uint8_t axis) {
 8003ad8:	b580      	push	{r7, lr}
 8003ada:	b084      	sub	sp, #16
 8003adc:	af00      	add	r7, sp, #0
 8003ade:	4603      	mov	r3, r0
 8003ae0:	71fb      	strb	r3, [r7, #7]
	uint8_t poll[2] = {0,0};
 8003ae2:	2300      	movs	r3, #0
 8003ae4:	813b      	strh	r3, [r7, #8]
	uint32_t poll16;
	
	if (TOUCH_SPI==DISPL_SPI){				// if touch and display share the same SPI port
		Touch_Select();						// enable CS on touch device
 8003ae6:	f7ff ffb7 	bl	8003a58 <Touch_Select>
	}

	Touch_Int_Enabled=0;	//disable interrupt handling: sensor reading triggers interrupt
 8003aea:	4b17      	ldr	r3, [pc, #92]	; (8003b48 <Touch_PollAxis+0x70>)
 8003aec:	2200      	movs	r2, #0
 8003aee:	701a      	strb	r2, [r3, #0]
	// disable interrupt while enquiring the touch sensor because it triggers the interrupt pin
	HAL_NVIC_DisableIRQ(TOUCH_INT_EXTI_IRQn);
 8003af0:	2028      	movs	r0, #40	; 0x28
 8003af2:	f000 fbd4 	bl	800429e <HAL_NVIC_DisableIRQ>

	HAL_SPI_Transmit(&TOUCH_SPI_PORT, &axis, 1, 10);
 8003af6:	1df9      	adds	r1, r7, #7
 8003af8:	230a      	movs	r3, #10
 8003afa:	2201      	movs	r2, #1
 8003afc:	4813      	ldr	r0, [pc, #76]	; (8003b4c <Touch_PollAxis+0x74>)
 8003afe:	f003 fafe 	bl	80070fe <HAL_SPI_Transmit>
	if (HAL_SPI_Receive(&TOUCH_SPI_PORT, poll, 2, 10) == HAL_OK) {
 8003b02:	f107 0108 	add.w	r1, r7, #8
 8003b06:	230a      	movs	r3, #10
 8003b08:	2202      	movs	r2, #2
 8003b0a:	4810      	ldr	r0, [pc, #64]	; (8003b4c <Touch_PollAxis+0x74>)
 8003b0c:	f003 fc3a 	bl	8007384 <HAL_SPI_Receive>
 8003b10:	4603      	mov	r3, r0
 8003b12:	2b00      	cmp	r3, #0
 8003b14:	d105      	bne.n	8003b22 <Touch_PollAxis+0x4a>
		poll16 = (poll[0]<<8) + poll[1];
 8003b16:	7a3b      	ldrb	r3, [r7, #8]
 8003b18:	021b      	lsls	r3, r3, #8
 8003b1a:	7a7a      	ldrb	r2, [r7, #9]
 8003b1c:	4413      	add	r3, r2
 8003b1e:	60fb      	str	r3, [r7, #12]
 8003b20:	e001      	b.n	8003b26 <Touch_PollAxis+0x4e>
	}
	else {
		poll16 = 0;
 8003b22:	2300      	movs	r3, #0
 8003b24:	60fb      	str	r3, [r7, #12]
	}

//enable back interrupt after reading the sensor
	HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 8003b26:	2028      	movs	r0, #40	; 0x28
 8003b28:	f000 fbd3 	bl	80042d2 <HAL_NVIC_ClearPendingIRQ>
	HAL_NVIC_EnableIRQ(TOUCH_INT_EXTI_IRQn);
 8003b2c:	2028      	movs	r0, #40	; 0x28
 8003b2e:	f000 fba8 	bl	8004282 <HAL_NVIC_EnableIRQ>

	Touch_Int_Enabled=1;
 8003b32:	4b05      	ldr	r3, [pc, #20]	; (8003b48 <Touch_PollAxis+0x70>)
 8003b34:	2201      	movs	r2, #1
 8003b36:	701a      	strb	r2, [r3, #0]

	if (TOUCH_SPI==DISPL_SPI){	// if touch and display share the same SPI port
		Touch_UnSelect();
 8003b38:	f7ff ffc2 	bl	8003ac0 <Touch_UnSelect>
	}

	return poll16;
 8003b3c:	68fb      	ldr	r3, [r7, #12]
 8003b3e:	b29b      	uxth	r3, r3
}
 8003b40:	4618      	mov	r0, r3
 8003b42:	3710      	adds	r7, #16
 8003b44:	46bd      	mov	sp, r7
 8003b46:	bd80      	pop	{r7, pc}
 8003b48:	20000009 	.word	0x20000009
 8003b4c:	200001ac 	.word	0x200001ac

08003b50 <Touch_GetXYtouch>:
 * @brief			polls touch screen and returning its XY screen position
 * 					that's regardless touch recording flag (interrupt received)
 * @return	x,y		in case isTouch=1 contain touch coordinates
 * 			isTouch is 1 if detected a touch, otherwise 0;
 *********************************************************************************/
void Touch_GetXYtouch(uint16_t *x, uint16_t *y, uint8_t *isTouch){
 8003b50:	b580      	push	{r7, lr}
 8003b52:	b08a      	sub	sp, #40	; 0x28
 8003b54:	af00      	add	r7, sp, #0
 8003b56:	60f8      	str	r0, [r7, #12]
 8003b58:	60b9      	str	r1, [r7, #8]
 8003b5a:	607a      	str	r2, [r7, #4]

const uint8_t pollingLevel=4;
 8003b5c:	2304      	movs	r3, #4
 8003b5e:	77fb      	strb	r3, [r7, #31]


// get the average value (over "1<<pollingLevel" attempts of X, Y and Z axes readings)

	// reading Z
	touch=0;
 8003b60:	2300      	movs	r3, #0
 8003b62:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8003b64:	2300      	movs	r3, #0
 8003b66:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003b6a:	e00c      	b.n	8003b86 <Touch_GetXYtouch+0x36>
		touch += Touch_PollAxis(Z_AXIS);
 8003b6c:	20b0      	movs	r0, #176	; 0xb0
 8003b6e:	f7ff ffb3 	bl	8003ad8 <Touch_PollAxis>
 8003b72:	4603      	mov	r3, r0
 8003b74:	461a      	mov	r2, r3
 8003b76:	6a3b      	ldr	r3, [r7, #32]
 8003b78:	4413      	add	r3, r2
 8003b7a:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8003b7c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003b80:	3301      	adds	r3, #1
 8003b82:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003b86:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 8003b8a:	7ffb      	ldrb	r3, [r7, #31]
 8003b8c:	2101      	movs	r1, #1
 8003b8e:	fa01 f303 	lsl.w	r3, r1, r3
 8003b92:	429a      	cmp	r2, r3
 8003b94:	dbea      	blt.n	8003b6c <Touch_GetXYtouch+0x1c>
	touch >>= pollingLevel;  //get the average value
 8003b96:	7ffb      	ldrb	r3, [r7, #31]
 8003b98:	6a3a      	ldr	r2, [r7, #32]
 8003b9a:	fa22 f303 	lsr.w	r3, r2, r3
 8003b9e:	623b      	str	r3, [r7, #32]
	if (touch<=Z_THRESHOLD) {
 8003ba0:	6a3b      	ldr	r3, [r7, #32]
 8003ba2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003ba6:	d806      	bhi.n	8003bb6 <Touch_GetXYtouch+0x66>
		*isTouch=0;
 8003ba8:	687b      	ldr	r3, [r7, #4]
 8003baa:	2200      	movs	r2, #0
 8003bac:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 8003bae:	2028      	movs	r0, #40	; 0x28
 8003bb0:	f000 fb8f 	bl	80042d2 <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 8003bb4:	e0b2      	b.n	8003d1c <Touch_GetXYtouch+0x1cc>
	}

	// reading X
	touch=0;
 8003bb6:	2300      	movs	r3, #0
 8003bb8:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8003bba:	2300      	movs	r3, #0
 8003bbc:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003bc0:	e00c      	b.n	8003bdc <Touch_GetXYtouch+0x8c>
		touch += Touch_PollAxis(X_AXIS);
 8003bc2:	20d0      	movs	r0, #208	; 0xd0
 8003bc4:	f7ff ff88 	bl	8003ad8 <Touch_PollAxis>
 8003bc8:	4603      	mov	r3, r0
 8003bca:	461a      	mov	r2, r3
 8003bcc:	6a3b      	ldr	r3, [r7, #32]
 8003bce:	4413      	add	r3, r2
 8003bd0:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8003bd2:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003bd6:	3301      	adds	r3, #1
 8003bd8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003bdc:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 8003be0:	7ffb      	ldrb	r3, [r7, #31]
 8003be2:	2101      	movs	r1, #1
 8003be4:	fa01 f303 	lsl.w	r3, r1, r3
 8003be8:	429a      	cmp	r2, r3
 8003bea:	dbea      	blt.n	8003bc2 <Touch_GetXYtouch+0x72>
	touch >>= pollingLevel;  //get the average value
 8003bec:	7ffb      	ldrb	r3, [r7, #31]
 8003bee:	6a3a      	ldr	r2, [r7, #32]
 8003bf0:	fa22 f303 	lsr.w	r3, r2, r3
 8003bf4:	623b      	str	r3, [r7, #32]
	if (touch<=X_THRESHOLD) {
 8003bf6:	6a3b      	ldr	r3, [r7, #32]
 8003bf8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003bfc:	d806      	bhi.n	8003c0c <Touch_GetXYtouch+0xbc>
		*isTouch=0;
 8003bfe:	687b      	ldr	r3, [r7, #4]
 8003c00:	2200      	movs	r2, #0
 8003c02:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 8003c04:	2028      	movs	r0, #40	; 0x28
 8003c06:	f000 fb64 	bl	80042d2 <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 8003c0a:	e087      	b.n	8003d1c <Touch_GetXYtouch+0x1cc>
	}
	touchx=(AX*touch+BX);
 8003c0c:	6a3b      	ldr	r3, [r7, #32]
 8003c0e:	ee07 3a90 	vmov	s15, r3
 8003c12:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003c16:	ed9f 7a43 	vldr	s14, [pc, #268]	; 8003d24 <Touch_GetXYtouch+0x1d4>
 8003c1a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003c1e:	ed9f 7a42 	vldr	s14, [pc, #264]	; 8003d28 <Touch_GetXYtouch+0x1d8>
 8003c22:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003c26:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c2a:	ee17 3a90 	vmov	r3, s15
 8003c2e:	61bb      	str	r3, [r7, #24]

	// reading Y - there is no a threshold for Y
	touch=0;
 8003c30:	2300      	movs	r3, #0
 8003c32:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8003c34:	2300      	movs	r3, #0
 8003c36:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003c3a:	e00c      	b.n	8003c56 <Touch_GetXYtouch+0x106>
		touch += Touch_PollAxis(Y_AXIS);
 8003c3c:	2090      	movs	r0, #144	; 0x90
 8003c3e:	f7ff ff4b 	bl	8003ad8 <Touch_PollAxis>
 8003c42:	4603      	mov	r3, r0
 8003c44:	461a      	mov	r2, r3
 8003c46:	6a3b      	ldr	r3, [r7, #32]
 8003c48:	4413      	add	r3, r2
 8003c4a:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8003c4c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003c50:	3301      	adds	r3, #1
 8003c52:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003c56:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 8003c5a:	7ffb      	ldrb	r3, [r7, #31]
 8003c5c:	2101      	movs	r1, #1
 8003c5e:	fa01 f303 	lsl.w	r3, r1, r3
 8003c62:	429a      	cmp	r2, r3
 8003c64:	dbea      	blt.n	8003c3c <Touch_GetXYtouch+0xec>
	touch >>= pollingLevel; //get the average value
 8003c66:	7ffb      	ldrb	r3, [r7, #31]
 8003c68:	6a3a      	ldr	r2, [r7, #32]
 8003c6a:	fa22 f303 	lsr.w	r3, r2, r3
 8003c6e:	623b      	str	r3, [r7, #32]

	touchy=(AY*touch+BY);
 8003c70:	6a3b      	ldr	r3, [r7, #32]
 8003c72:	ee07 3a90 	vmov	s15, r3
 8003c76:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003c7a:	ed9f 7a2c 	vldr	s14, [pc, #176]	; 8003d2c <Touch_GetXYtouch+0x1dc>
 8003c7e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003c82:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8003d30 <Touch_GetXYtouch+0x1e0>
 8003c86:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003c8a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c8e:	ee17 3a90 	vmov	r3, s15
 8003c92:	617b      	str	r3, [r7, #20]


//having X and Y axis average values
// calculating coordinates as per screen orientation
	switch (current_orientation)
 8003c94:	4b27      	ldr	r3, [pc, #156]	; (8003d34 <Touch_GetXYtouch+0x1e4>)
 8003c96:	781b      	ldrb	r3, [r3, #0]
 8003c98:	2b03      	cmp	r3, #3
 8003c9a:	d83b      	bhi.n	8003d14 <Touch_GetXYtouch+0x1c4>
 8003c9c:	a201      	add	r2, pc, #4	; (adr r2, 8003ca4 <Touch_GetXYtouch+0x154>)
 8003c9e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003ca2:	bf00      	nop
 8003ca4:	08003cb5 	.word	0x08003cb5
 8003ca8:	08003cc7 	.word	0x08003cc7
 8003cac:	08003cdf 	.word	0x08003cdf
 8003cb0:	08003cfd 	.word	0x08003cfd
	{
	case TOUCH0:
		*x=touchx;
 8003cb4:	69bb      	ldr	r3, [r7, #24]
 8003cb6:	b29a      	uxth	r2, r3
 8003cb8:	68fb      	ldr	r3, [r7, #12]
 8003cba:	801a      	strh	r2, [r3, #0]
		*y=touchy;
 8003cbc:	697b      	ldr	r3, [r7, #20]
 8003cbe:	b29a      	uxth	r2, r3
 8003cc0:	68bb      	ldr	r3, [r7, #8]
 8003cc2:	801a      	strh	r2, [r3, #0]
		break;
 8003cc4:	e026      	b.n	8003d14 <Touch_GetXYtouch+0x1c4>
	case TOUCH90:
		*x=touchy;
 8003cc6:	697b      	ldr	r3, [r7, #20]
 8003cc8:	b29a      	uxth	r2, r3
 8003cca:	68fb      	ldr	r3, [r7, #12]
 8003ccc:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_WIDTH-touchx);
 8003cce:	69bb      	ldr	r3, [r7, #24]
 8003cd0:	b29b      	uxth	r3, r3
 8003cd2:	f1c3 03f0 	rsb	r3, r3, #240	; 0xf0
 8003cd6:	b29a      	uxth	r2, r3
 8003cd8:	68bb      	ldr	r3, [r7, #8]
 8003cda:	801a      	strh	r2, [r3, #0]
		break;
 8003cdc:	e01a      	b.n	8003d14 <Touch_GetXYtouch+0x1c4>
	case TOUCH180:
		*x=(TOUCH_0_WIDTH-touchx);
 8003cde:	69bb      	ldr	r3, [r7, #24]
 8003ce0:	b29b      	uxth	r3, r3
 8003ce2:	f1c3 03f0 	rsb	r3, r3, #240	; 0xf0
 8003ce6:	b29a      	uxth	r2, r3
 8003ce8:	68fb      	ldr	r3, [r7, #12]
 8003cea:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_HEIGHT - touchy);
 8003cec:	697b      	ldr	r3, [r7, #20]
 8003cee:	b29b      	uxth	r3, r3
 8003cf0:	f5c3 73a0 	rsb	r3, r3, #320	; 0x140
 8003cf4:	b29a      	uxth	r2, r3
 8003cf6:	68bb      	ldr	r3, [r7, #8]
 8003cf8:	801a      	strh	r2, [r3, #0]
		break;
 8003cfa:	e00b      	b.n	8003d14 <Touch_GetXYtouch+0x1c4>
	case TOUCH270:
		*x=(TOUCH_0_HEIGHT- touchy);
 8003cfc:	697b      	ldr	r3, [r7, #20]
 8003cfe:	b29b      	uxth	r3, r3
 8003d00:	f5c3 73a0 	rsb	r3, r3, #320	; 0x140
 8003d04:	b29a      	uxth	r2, r3
 8003d06:	68fb      	ldr	r3, [r7, #12]
 8003d08:	801a      	strh	r2, [r3, #0]
		*y=touchx;
 8003d0a:	69bb      	ldr	r3, [r7, #24]
 8003d0c:	b29a      	uxth	r2, r3
 8003d0e:	68bb      	ldr	r3, [r7, #8]
 8003d10:	801a      	strh	r2, [r3, #0]
		break;
 8003d12:	bf00      	nop
	}

// set flag indicating there was a touch
	*isTouch=1;
 8003d14:	687b      	ldr	r3, [r7, #4]
 8003d16:	2201      	movs	r2, #1
 8003d18:	701a      	strb	r2, [r3, #0]
	return;
 8003d1a:	bf00      	nop
}
 8003d1c:	3728      	adds	r7, #40	; 0x28
 8003d1e:	46bd      	mov	sp, r7
 8003d20:	bd80      	pop	{r7, pc}
 8003d22:	bf00      	nop
 8003d24:	3c033c60 	.word	0x3c033c60
 8003d28:	413ff7cf 	.word	0x413ff7cf
 8003d2c:	3c375643 	.word	0x3c375643
 8003d30:	421c3a5e 	.word	0x421c3a5e
 8003d34:	20000370 	.word	0x20000370

08003d38 <Touch_GotATouch>:
 * 						(use "2" in main loop activating touchgfxSignalVSync()
 * @returns		1	if recorded a touch
 * 				0	if no touch recorded
 ***********************************************************/

uint8_t Touch_GotATouch(uint8_t reset) {
 8003d38:	b580      	push	{r7, lr}
 8003d3a:	b084      	sub	sp, #16
 8003d3c:	af00      	add	r7, sp, #0
 8003d3e:	4603      	mov	r3, r0
 8003d40:	71fb      	strb	r3, [r7, #7]
static uint32_t touchTime=0;
uint8_t result = Touch_PenDown;
 8003d42:	4b10      	ldr	r3, [pc, #64]	; (8003d84 <Touch_GotATouch+0x4c>)
 8003d44:	781b      	ldrb	r3, [r3, #0]
 8003d46:	73fb      	strb	r3, [r7, #15]

//	if (result)
//		result=Touch_PollTouch();

	if (reset==2){
 8003d48:	79fb      	ldrb	r3, [r7, #7]
 8003d4a:	2b02      	cmp	r3, #2
 8003d4c:	d10f      	bne.n	8003d6e <Touch_GotATouch+0x36>
		if ((HAL_GetTick()-touchTime) >= TOUCHGFX_TIMING)
 8003d4e:	f000 f92f 	bl	8003fb0 <HAL_GetTick>
 8003d52:	4602      	mov	r2, r0
 8003d54:	4b0c      	ldr	r3, [pc, #48]	; (8003d88 <Touch_GotATouch+0x50>)
 8003d56:	681b      	ldr	r3, [r3, #0]
 8003d58:	1ad3      	subs	r3, r2, r3
 8003d5a:	2b3b      	cmp	r3, #59	; 0x3b
 8003d5c:	d905      	bls.n	8003d6a <Touch_GotATouch+0x32>
			touchTime=HAL_GetTick();
 8003d5e:	f000 f927 	bl	8003fb0 <HAL_GetTick>
 8003d62:	4603      	mov	r3, r0
 8003d64:	4a08      	ldr	r2, [pc, #32]	; (8003d88 <Touch_GotATouch+0x50>)
 8003d66:	6013      	str	r3, [r2, #0]
 8003d68:	e001      	b.n	8003d6e <Touch_GotATouch+0x36>
		else
			result=0;
 8003d6a:	2300      	movs	r3, #0
 8003d6c:	73fb      	strb	r3, [r7, #15]
	}
	if (reset==1)
 8003d6e:	79fb      	ldrb	r3, [r7, #7]
 8003d70:	2b01      	cmp	r3, #1
 8003d72:	d102      	bne.n	8003d7a <Touch_GotATouch+0x42>
		Touch_PenDown=0;
 8003d74:	4b03      	ldr	r3, [pc, #12]	; (8003d84 <Touch_GotATouch+0x4c>)
 8003d76:	2200      	movs	r2, #0
 8003d78:	701a      	strb	r2, [r3, #0]
	return result;
 8003d7a:	7bfb      	ldrb	r3, [r7, #15]
}
 8003d7c:	4618      	mov	r0, r3
 8003d7e:	3710      	adds	r7, #16
 8003d80:	46bd      	mov	sp, r7
 8003d82:	bd80      	pop	{r7, pc}
 8003d84:	20000380 	.word	0x20000380
 8003d88:	20000384 	.word	0x20000384

08003d8c <Touch_TouchGFXSampleTouch>:
 *			then, into STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
 *			change "return false;"
 *			into:  "return ((bool) Touch_TouchGFXSampleTouch(&x, &y));"
 * 			that's enough for touch integration in TouchGFX
***********************************************************/
uint8_t Touch_TouchGFXSampleTouch(int32_t *x, int32_t *y){
 8003d8c:	b580      	push	{r7, lr}
 8003d8e:	b084      	sub	sp, #16
 8003d90:	af00      	add	r7, sp, #0
 8003d92:	6078      	str	r0, [r7, #4]
 8003d94:	6039      	str	r1, [r7, #0]
	//	sTouchData result;
	uint8_t isTouch=0;				// preset to no touch
 8003d96:	2300      	movs	r3, #0
 8003d98:	73fb      	strb	r3, [r7, #15]
	uint16_t xx=0,yy=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX ones (int32_t)
 8003d9a:	2300      	movs	r3, #0
 8003d9c:	81bb      	strh	r3, [r7, #12]
 8003d9e:	2300      	movs	r3, #0
 8003da0:	817b      	strh	r3, [r7, #10]
	static uint8_t flipTouch=0;		// switches 0/1, on every function call, until sensor is touched allowing to return key repeat
	static uint32_t touchTime=1; 	// tick value get on the first touch. 0 means display untouched.
	static uint16_t avgXX=0, avgYY=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX one (int32_t)
	static uint8_t repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;

	if (Touch_GotATouch(0)){				// polls interrupt flag not resetting it
 8003da2:	2000      	movs	r0, #0
 8003da4:	f7ff ffc8 	bl	8003d38 <Touch_GotATouch>
 8003da8:	4603      	mov	r3, r0
 8003daa:	2b00      	cmp	r3, #0
 8003dac:	d060      	beq.n	8003e70 <Touch_TouchGFXSampleTouch+0xe4>
		Touch_GetXYtouch(&xx,&yy,&isTouch);	// get touch sensor position
 8003dae:	f107 020f 	add.w	r2, r7, #15
 8003db2:	f107 010a 	add.w	r1, r7, #10
 8003db6:	f107 030c 	add.w	r3, r7, #12
 8003dba:	4618      	mov	r0, r3
 8003dbc:	f7ff fec8 	bl	8003b50 <Touch_GetXYtouch>
		if (!isTouch){						// received a "no touch"
 8003dc0:	7bfb      	ldrb	r3, [r7, #15]
 8003dc2:	2b00      	cmp	r3, #0
 8003dc4:	d126      	bne.n	8003e14 <Touch_TouchGFXSampleTouch+0x88>
			if (touchTime != 0){			// if previously touched
 8003dc6:	4b2d      	ldr	r3, [pc, #180]	; (8003e7c <Touch_TouchGFXSampleTouch+0xf0>)
 8003dc8:	681b      	ldr	r3, [r3, #0]
 8003dca:	2b00      	cmp	r3, #0
 8003dcc:	d050      	beq.n	8003e70 <Touch_TouchGFXSampleTouch+0xe4>
				if ((repetition--)>TOUCHGFX_REPEAT_NO+1){		// n-repetition of last touch sending
 8003dce:	4b2c      	ldr	r3, [pc, #176]	; (8003e80 <Touch_TouchGFXSampleTouch+0xf4>)
 8003dd0:	781b      	ldrb	r3, [r3, #0]
 8003dd2:	1e5a      	subs	r2, r3, #1
 8003dd4:	b2d1      	uxtb	r1, r2
 8003dd6:	4a2a      	ldr	r2, [pc, #168]	; (8003e80 <Touch_TouchGFXSampleTouch+0xf4>)
 8003dd8:	7011      	strb	r1, [r2, #0]
 8003dda:	2b01      	cmp	r3, #1
 8003ddc:	d90c      	bls.n	8003df8 <Touch_TouchGFXSampleTouch+0x6c>
					*x = avgXX;
 8003dde:	4b29      	ldr	r3, [pc, #164]	; (8003e84 <Touch_TouchGFXSampleTouch+0xf8>)
 8003de0:	881b      	ldrh	r3, [r3, #0]
 8003de2:	461a      	mov	r2, r3
 8003de4:	687b      	ldr	r3, [r7, #4]
 8003de6:	601a      	str	r2, [r3, #0]
					*y = avgYY;
 8003de8:	4b27      	ldr	r3, [pc, #156]	; (8003e88 <Touch_TouchGFXSampleTouch+0xfc>)
 8003dea:	881b      	ldrh	r3, [r3, #0]
 8003dec:	461a      	mov	r2, r3
 8003dee:	683b      	ldr	r3, [r7, #0]
 8003df0:	601a      	str	r2, [r3, #0]
					isTouch=1;
 8003df2:	2301      	movs	r3, #1
 8003df4:	73fb      	strb	r3, [r7, #15]
 8003df6:	e03b      	b.n	8003e70 <Touch_TouchGFXSampleTouch+0xe4>
				} else if ((repetition==255)) {  // that's -1
 8003df8:	4b21      	ldr	r3, [pc, #132]	; (8003e80 <Touch_TouchGFXSampleTouch+0xf4>)
 8003dfa:	781b      	ldrb	r3, [r3, #0]
 8003dfc:	2bff      	cmp	r3, #255	; 0xff
 8003dfe:	d137      	bne.n	8003e70 <Touch_TouchGFXSampleTouch+0xe4>
					touchTime=0;					// set display as untouched
 8003e00:	4b1e      	ldr	r3, [pc, #120]	; (8003e7c <Touch_TouchGFXSampleTouch+0xf0>)
 8003e02:	2200      	movs	r2, #0
 8003e04:	601a      	str	r2, [r3, #0]
					Touch_GotATouch(1);				// reset interrupt touch flag
 8003e06:	2001      	movs	r0, #1
 8003e08:	f7ff ff96 	bl	8003d38 <Touch_GotATouch>
					repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;  //reset repetition counter
 8003e0c:	4b1c      	ldr	r3, [pc, #112]	; (8003e80 <Touch_TouchGFXSampleTouch+0xf4>)
 8003e0e:	2200      	movs	r2, #0
 8003e10:	701a      	strb	r2, [r3, #0]
 8003e12:	e02d      	b.n	8003e70 <Touch_TouchGFXSampleTouch+0xe4>
				}
			}
		} else {					// display touched

			if (touchTime==0) {				// if previously untouched
 8003e14:	4b19      	ldr	r3, [pc, #100]	; (8003e7c <Touch_TouchGFXSampleTouch+0xf0>)
 8003e16:	681b      	ldr	r3, [r3, #0]
 8003e18:	2b00      	cmp	r3, #0
 8003e1a:	d10e      	bne.n	8003e3a <Touch_TouchGFXSampleTouch+0xae>
				avgXX =(xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 8003e1c:	89ba      	ldrh	r2, [r7, #12]
 8003e1e:	4b19      	ldr	r3, [pc, #100]	; (8003e84 <Touch_TouchGFXSampleTouch+0xf8>)
 8003e20:	801a      	strh	r2, [r3, #0]
				avgYY =(yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 8003e22:	897a      	ldrh	r2, [r7, #10]
 8003e24:	4b18      	ldr	r3, [pc, #96]	; (8003e88 <Touch_TouchGFXSampleTouch+0xfc>)
 8003e26:	801a      	strh	r2, [r3, #0]
				touchTime=HAL_GetTick();	// store tick value at touch time
 8003e28:	f000 f8c2 	bl	8003fb0 <HAL_GetTick>
 8003e2c:	4603      	mov	r3, r0
 8003e2e:	4a13      	ldr	r2, [pc, #76]	; (8003e7c <Touch_TouchGFXSampleTouch+0xf0>)
 8003e30:	6013      	str	r3, [r2, #0]
				flipTouch=1;				// set switch to send touch now
 8003e32:	4b16      	ldr	r3, [pc, #88]	; (8003e8c <Touch_TouchGFXSampleTouch+0x100>)
 8003e34:	2201      	movs	r2, #1
 8003e36:	701a      	strb	r2, [r3, #0]
 8003e38:	e001      	b.n	8003e3e <Touch_TouchGFXSampleTouch+0xb2>
			} else {						// not a new touch
				if (((HAL_GetTick()-touchTime)>DELAY_TO_KEY_REPEAT) && (DELAY_TO_KEY_REPEAT > 0)){	// if timeout to key repeat is over (0 means no key repeat)
 8003e3a:	f000 f8b9 	bl	8003fb0 <HAL_GetTick>
					flipTouch=!flipTouch;	// alternate every time function is called
				} else
					if (DELAY_TO_KEY_REPEAT == 0)
						flipTouch=0;		// (DELAY_TO_KEY_REPEAT == 0) means a single pulse, "-1" keep pulse as long as touch
			}
			if (flipTouch) { 	// return position only if the switching flag is on
 8003e3e:	4b13      	ldr	r3, [pc, #76]	; (8003e8c <Touch_TouchGFXSampleTouch+0x100>)
 8003e40:	781b      	ldrb	r3, [r3, #0]
 8003e42:	2b00      	cmp	r3, #0
 8003e44:	d012      	beq.n	8003e6c <Touch_TouchGFXSampleTouch+0xe0>
				*x=(((avgXX*(TOUCHGFX_MOVAVG-1)+((xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 8003e46:	89bb      	ldrh	r3, [r7, #12]
 8003e48:	461a      	mov	r2, r3
 8003e4a:	687b      	ldr	r3, [r7, #4]
 8003e4c:	601a      	str	r2, [r3, #0]
				*y=(((avgYY*(TOUCHGFX_MOVAVG-1)+((yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 8003e4e:	897b      	ldrh	r3, [r7, #10]
 8003e50:	461a      	mov	r2, r3
 8003e52:	683b      	ldr	r3, [r7, #0]
 8003e54:	601a      	str	r2, [r3, #0]
				avgXX = *x;
 8003e56:	687b      	ldr	r3, [r7, #4]
 8003e58:	681b      	ldr	r3, [r3, #0]
 8003e5a:	b29a      	uxth	r2, r3
 8003e5c:	4b09      	ldr	r3, [pc, #36]	; (8003e84 <Touch_TouchGFXSampleTouch+0xf8>)
 8003e5e:	801a      	strh	r2, [r3, #0]
				avgYY = *y;
 8003e60:	683b      	ldr	r3, [r7, #0]
 8003e62:	681b      	ldr	r3, [r3, #0]
 8003e64:	b29a      	uxth	r2, r3
 8003e66:	4b08      	ldr	r3, [pc, #32]	; (8003e88 <Touch_TouchGFXSampleTouch+0xfc>)
 8003e68:	801a      	strh	r2, [r3, #0]
 8003e6a:	e001      	b.n	8003e70 <Touch_TouchGFXSampleTouch+0xe4>
			} else {			// otherwise return "no touch" from display
				isTouch = 0;
 8003e6c:	2300      	movs	r3, #0
 8003e6e:	73fb      	strb	r3, [r7, #15]
			}
		}
	}
	return isTouch;
 8003e70:	7bfb      	ldrb	r3, [r7, #15]
}
 8003e72:	4618      	mov	r0, r3
 8003e74:	3710      	adds	r7, #16
 8003e76:	46bd      	mov	sp, r7
 8003e78:	bd80      	pop	{r7, pc}
 8003e7a:	bf00      	nop
 8003e7c:	2000000c 	.word	0x2000000c
 8003e80:	20000388 	.word	0x20000388
 8003e84:	2000038a 	.word	0x2000038a
 8003e88:	2000038c 	.word	0x2000038c
 8003e8c:	2000038e 	.word	0x2000038e

08003e90 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 8003e90:	f8df d034 	ldr.w	sp, [pc, #52]	; 8003ec8 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8003e94:	480d      	ldr	r0, [pc, #52]	; (8003ecc <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8003e96:	490e      	ldr	r1, [pc, #56]	; (8003ed0 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8003e98:	4a0e      	ldr	r2, [pc, #56]	; (8003ed4 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8003e9a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8003e9c:	e002      	b.n	8003ea4 <LoopCopyDataInit>

08003e9e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8003e9e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8003ea0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8003ea2:	3304      	adds	r3, #4

08003ea4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8003ea4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8003ea6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8003ea8:	d3f9      	bcc.n	8003e9e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8003eaa:	4a0b      	ldr	r2, [pc, #44]	; (8003ed8 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8003eac:	4c0b      	ldr	r4, [pc, #44]	; (8003edc <LoopFillZerobss+0x26>)
  movs r3, #0
 8003eae:	2300      	movs	r3, #0
  b LoopFillZerobss
 8003eb0:	e001      	b.n	8003eb6 <LoopFillZerobss>

08003eb2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8003eb2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8003eb4:	3204      	adds	r2, #4

08003eb6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8003eb6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8003eb8:	d3fb      	bcc.n	8003eb2 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8003eba:	f7ff faa1 	bl	8003400 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8003ebe:	f027 fd2d 	bl	802b91c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8003ec2:	f7fe faf7 	bl	80024b4 <main>
  bx  lr    
 8003ec6:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8003ec8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8003ecc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8003ed0:	200000fc 	.word	0x200000fc
  ldr r2, =_sidata
 8003ed4:	0804cf20 	.word	0x0804cf20
  ldr r2, =_sbss
 8003ed8:	200000fc 	.word	0x200000fc
  ldr r4, =_ebss
 8003edc:	20002e84 	.word	0x20002e84

08003ee0 <DMA1_Stream0_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8003ee0:	e7fe      	b.n	8003ee0 <DMA1_Stream0_IRQHandler>
	...

08003ee4 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003ee4:	b580      	push	{r7, lr}
 8003ee6:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8003ee8:	4b0e      	ldr	r3, [pc, #56]	; (8003f24 <HAL_Init+0x40>)
 8003eea:	681b      	ldr	r3, [r3, #0]
 8003eec:	4a0d      	ldr	r2, [pc, #52]	; (8003f24 <HAL_Init+0x40>)
 8003eee:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8003ef2:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003ef4:	4b0b      	ldr	r3, [pc, #44]	; (8003f24 <HAL_Init+0x40>)
 8003ef6:	681b      	ldr	r3, [r3, #0]
 8003ef8:	4a0a      	ldr	r2, [pc, #40]	; (8003f24 <HAL_Init+0x40>)
 8003efa:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8003efe:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003f00:	4b08      	ldr	r3, [pc, #32]	; (8003f24 <HAL_Init+0x40>)
 8003f02:	681b      	ldr	r3, [r3, #0]
 8003f04:	4a07      	ldr	r2, [pc, #28]	; (8003f24 <HAL_Init+0x40>)
 8003f06:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003f0a:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003f0c:	2003      	movs	r0, #3
 8003f0e:	f000 f991 	bl	8004234 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003f12:	200f      	movs	r0, #15
 8003f14:	f000 f808 	bl	8003f28 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003f18:	f7fe feee 	bl	8002cf8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8003f1c:	2300      	movs	r3, #0
}
 8003f1e:	4618      	mov	r0, r3
 8003f20:	bd80      	pop	{r7, pc}
 8003f22:	bf00      	nop
 8003f24:	40023c00 	.word	0x40023c00

08003f28 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8003f28:	b580      	push	{r7, lr}
 8003f2a:	b082      	sub	sp, #8
 8003f2c:	af00      	add	r7, sp, #0
 8003f2e:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8003f30:	4b12      	ldr	r3, [pc, #72]	; (8003f7c <HAL_InitTick+0x54>)
 8003f32:	681a      	ldr	r2, [r3, #0]
 8003f34:	4b12      	ldr	r3, [pc, #72]	; (8003f80 <HAL_InitTick+0x58>)
 8003f36:	781b      	ldrb	r3, [r3, #0]
 8003f38:	4619      	mov	r1, r3
 8003f3a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003f3e:	fbb3 f3f1 	udiv	r3, r3, r1
 8003f42:	fbb2 f3f3 	udiv	r3, r2, r3
 8003f46:	4618      	mov	r0, r3
 8003f48:	f000 f9b7 	bl	80042ba <HAL_SYSTICK_Config>
 8003f4c:	4603      	mov	r3, r0
 8003f4e:	2b00      	cmp	r3, #0
 8003f50:	d001      	beq.n	8003f56 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8003f52:	2301      	movs	r3, #1
 8003f54:	e00e      	b.n	8003f74 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8003f56:	687b      	ldr	r3, [r7, #4]
 8003f58:	2b0f      	cmp	r3, #15
 8003f5a:	d80a      	bhi.n	8003f72 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8003f5c:	2200      	movs	r2, #0
 8003f5e:	6879      	ldr	r1, [r7, #4]
 8003f60:	f04f 30ff 	mov.w	r0, #4294967295
 8003f64:	f000 f971 	bl	800424a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8003f68:	4a06      	ldr	r2, [pc, #24]	; (8003f84 <HAL_InitTick+0x5c>)
 8003f6a:	687b      	ldr	r3, [r7, #4]
 8003f6c:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8003f6e:	2300      	movs	r3, #0
 8003f70:	e000      	b.n	8003f74 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8003f72:	2301      	movs	r3, #1
}
 8003f74:	4618      	mov	r0, r3
 8003f76:	3708      	adds	r7, #8
 8003f78:	46bd      	mov	sp, r7
 8003f7a:	bd80      	pop	{r7, pc}
 8003f7c:	20000004 	.word	0x20000004
 8003f80:	20000014 	.word	0x20000014
 8003f84:	20000010 	.word	0x20000010

08003f88 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8003f88:	b480      	push	{r7}
 8003f8a:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8003f8c:	4b06      	ldr	r3, [pc, #24]	; (8003fa8 <HAL_IncTick+0x20>)
 8003f8e:	781b      	ldrb	r3, [r3, #0]
 8003f90:	461a      	mov	r2, r3
 8003f92:	4b06      	ldr	r3, [pc, #24]	; (8003fac <HAL_IncTick+0x24>)
 8003f94:	681b      	ldr	r3, [r3, #0]
 8003f96:	4413      	add	r3, r2
 8003f98:	4a04      	ldr	r2, [pc, #16]	; (8003fac <HAL_IncTick+0x24>)
 8003f9a:	6013      	str	r3, [r2, #0]
}
 8003f9c:	bf00      	nop
 8003f9e:	46bd      	mov	sp, r7
 8003fa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fa4:	4770      	bx	lr
 8003fa6:	bf00      	nop
 8003fa8:	20000014 	.word	0x20000014
 8003fac:	20000390 	.word	0x20000390

08003fb0 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8003fb0:	b480      	push	{r7}
 8003fb2:	af00      	add	r7, sp, #0
  return uwTick;
 8003fb4:	4b03      	ldr	r3, [pc, #12]	; (8003fc4 <HAL_GetTick+0x14>)
 8003fb6:	681b      	ldr	r3, [r3, #0]
}
 8003fb8:	4618      	mov	r0, r3
 8003fba:	46bd      	mov	sp, r7
 8003fbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fc0:	4770      	bx	lr
 8003fc2:	bf00      	nop
 8003fc4:	20000390 	.word	0x20000390

08003fc8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003fc8:	b580      	push	{r7, lr}
 8003fca:	b084      	sub	sp, #16
 8003fcc:	af00      	add	r7, sp, #0
 8003fce:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8003fd0:	f7ff ffee 	bl	8003fb0 <HAL_GetTick>
 8003fd4:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8003fd6:	687b      	ldr	r3, [r7, #4]
 8003fd8:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003fda:	68fb      	ldr	r3, [r7, #12]
 8003fdc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003fe0:	d005      	beq.n	8003fee <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8003fe2:	4b0a      	ldr	r3, [pc, #40]	; (800400c <HAL_Delay+0x44>)
 8003fe4:	781b      	ldrb	r3, [r3, #0]
 8003fe6:	461a      	mov	r2, r3
 8003fe8:	68fb      	ldr	r3, [r7, #12]
 8003fea:	4413      	add	r3, r2
 8003fec:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8003fee:	bf00      	nop
 8003ff0:	f7ff ffde 	bl	8003fb0 <HAL_GetTick>
 8003ff4:	4602      	mov	r2, r0
 8003ff6:	68bb      	ldr	r3, [r7, #8]
 8003ff8:	1ad3      	subs	r3, r2, r3
 8003ffa:	68fa      	ldr	r2, [r7, #12]
 8003ffc:	429a      	cmp	r2, r3
 8003ffe:	d8f7      	bhi.n	8003ff0 <HAL_Delay+0x28>
  {
  }
}
 8004000:	bf00      	nop
 8004002:	bf00      	nop
 8004004:	3710      	adds	r7, #16
 8004006:	46bd      	mov	sp, r7
 8004008:	bd80      	pop	{r7, pc}
 800400a:	bf00      	nop
 800400c:	20000014 	.word	0x20000014

08004010 <__NVIC_SetPriorityGrouping>:
{
 8004010:	b480      	push	{r7}
 8004012:	b085      	sub	sp, #20
 8004014:	af00      	add	r7, sp, #0
 8004016:	6078      	str	r0, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8004018:	687b      	ldr	r3, [r7, #4]
 800401a:	f003 0307 	and.w	r3, r3, #7
 800401e:	60fb      	str	r3, [r7, #12]
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004020:	4b0c      	ldr	r3, [pc, #48]	; (8004054 <__NVIC_SetPriorityGrouping+0x44>)
 8004022:	68db      	ldr	r3, [r3, #12]
 8004024:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004026:	68ba      	ldr	r2, [r7, #8]
 8004028:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 800402c:	4013      	ands	r3, r2
 800402e:	60bb      	str	r3, [r7, #8]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004030:	68fb      	ldr	r3, [r7, #12]
 8004032:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8004034:	68bb      	ldr	r3, [r7, #8]
 8004036:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8004038:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800403c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004040:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8004042:	4a04      	ldr	r2, [pc, #16]	; (8004054 <__NVIC_SetPriorityGrouping+0x44>)
 8004044:	68bb      	ldr	r3, [r7, #8]
 8004046:	60d3      	str	r3, [r2, #12]
}
 8004048:	bf00      	nop
 800404a:	3714      	adds	r7, #20
 800404c:	46bd      	mov	sp, r7
 800404e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004052:	4770      	bx	lr
 8004054:	e000ed00 	.word	0xe000ed00

08004058 <__NVIC_GetPriorityGrouping>:
{
 8004058:	b480      	push	{r7}
 800405a:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800405c:	4b04      	ldr	r3, [pc, #16]	; (8004070 <__NVIC_GetPriorityGrouping+0x18>)
 800405e:	68db      	ldr	r3, [r3, #12]
 8004060:	0a1b      	lsrs	r3, r3, #8
 8004062:	f003 0307 	and.w	r3, r3, #7
}
 8004066:	4618      	mov	r0, r3
 8004068:	46bd      	mov	sp, r7
 800406a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800406e:	4770      	bx	lr
 8004070:	e000ed00 	.word	0xe000ed00

08004074 <__NVIC_EnableIRQ>:
{
 8004074:	b480      	push	{r7}
 8004076:	b083      	sub	sp, #12
 8004078:	af00      	add	r7, sp, #0
 800407a:	4603      	mov	r3, r0
 800407c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800407e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004082:	2b00      	cmp	r3, #0
 8004084:	db0b      	blt.n	800409e <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004086:	79fb      	ldrb	r3, [r7, #7]
 8004088:	f003 021f 	and.w	r2, r3, #31
 800408c:	4907      	ldr	r1, [pc, #28]	; (80040ac <__NVIC_EnableIRQ+0x38>)
 800408e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004092:	095b      	lsrs	r3, r3, #5
 8004094:	2001      	movs	r0, #1
 8004096:	fa00 f202 	lsl.w	r2, r0, r2
 800409a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800409e:	bf00      	nop
 80040a0:	370c      	adds	r7, #12
 80040a2:	46bd      	mov	sp, r7
 80040a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040a8:	4770      	bx	lr
 80040aa:	bf00      	nop
 80040ac:	e000e100 	.word	0xe000e100

080040b0 <__NVIC_DisableIRQ>:
{
 80040b0:	b480      	push	{r7}
 80040b2:	b083      	sub	sp, #12
 80040b4:	af00      	add	r7, sp, #0
 80040b6:	4603      	mov	r3, r0
 80040b8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80040ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80040be:	2b00      	cmp	r3, #0
 80040c0:	db12      	blt.n	80040e8 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80040c2:	79fb      	ldrb	r3, [r7, #7]
 80040c4:	f003 021f 	and.w	r2, r3, #31
 80040c8:	490a      	ldr	r1, [pc, #40]	; (80040f4 <__NVIC_DisableIRQ+0x44>)
 80040ca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80040ce:	095b      	lsrs	r3, r3, #5
 80040d0:	2001      	movs	r0, #1
 80040d2:	fa00 f202 	lsl.w	r2, r0, r2
 80040d6:	3320      	adds	r3, #32
 80040d8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 80040dc:	f3bf 8f4f 	dsb	sy
}
 80040e0:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80040e2:	f3bf 8f6f 	isb	sy
}
 80040e6:	bf00      	nop
}
 80040e8:	bf00      	nop
 80040ea:	370c      	adds	r7, #12
 80040ec:	46bd      	mov	sp, r7
 80040ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040f2:	4770      	bx	lr
 80040f4:	e000e100 	.word	0xe000e100

080040f8 <__NVIC_ClearPendingIRQ>:
{
 80040f8:	b480      	push	{r7}
 80040fa:	b083      	sub	sp, #12
 80040fc:	af00      	add	r7, sp, #0
 80040fe:	4603      	mov	r3, r0
 8004100:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8004102:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004106:	2b00      	cmp	r3, #0
 8004108:	db0c      	blt.n	8004124 <__NVIC_ClearPendingIRQ+0x2c>
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800410a:	79fb      	ldrb	r3, [r7, #7]
 800410c:	f003 021f 	and.w	r2, r3, #31
 8004110:	4907      	ldr	r1, [pc, #28]	; (8004130 <__NVIC_ClearPendingIRQ+0x38>)
 8004112:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004116:	095b      	lsrs	r3, r3, #5
 8004118:	2001      	movs	r0, #1
 800411a:	fa00 f202 	lsl.w	r2, r0, r2
 800411e:	3360      	adds	r3, #96	; 0x60
 8004120:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8004124:	bf00      	nop
 8004126:	370c      	adds	r7, #12
 8004128:	46bd      	mov	sp, r7
 800412a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800412e:	4770      	bx	lr
 8004130:	e000e100 	.word	0xe000e100

08004134 <__NVIC_SetPriority>:
{
 8004134:	b480      	push	{r7}
 8004136:	b083      	sub	sp, #12
 8004138:	af00      	add	r7, sp, #0
 800413a:	4603      	mov	r3, r0
 800413c:	6039      	str	r1, [r7, #0]
 800413e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8004140:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004144:	2b00      	cmp	r3, #0
 8004146:	db0a      	blt.n	800415e <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004148:	683b      	ldr	r3, [r7, #0]
 800414a:	b2da      	uxtb	r2, r3
 800414c:	490c      	ldr	r1, [pc, #48]	; (8004180 <__NVIC_SetPriority+0x4c>)
 800414e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004152:	0112      	lsls	r2, r2, #4
 8004154:	b2d2      	uxtb	r2, r2
 8004156:	440b      	add	r3, r1
 8004158:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 800415c:	e00a      	b.n	8004174 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800415e:	683b      	ldr	r3, [r7, #0]
 8004160:	b2da      	uxtb	r2, r3
 8004162:	4908      	ldr	r1, [pc, #32]	; (8004184 <__NVIC_SetPriority+0x50>)
 8004164:	79fb      	ldrb	r3, [r7, #7]
 8004166:	f003 030f 	and.w	r3, r3, #15
 800416a:	3b04      	subs	r3, #4
 800416c:	0112      	lsls	r2, r2, #4
 800416e:	b2d2      	uxtb	r2, r2
 8004170:	440b      	add	r3, r1
 8004172:	761a      	strb	r2, [r3, #24]
}
 8004174:	bf00      	nop
 8004176:	370c      	adds	r7, #12
 8004178:	46bd      	mov	sp, r7
 800417a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800417e:	4770      	bx	lr
 8004180:	e000e100 	.word	0xe000e100
 8004184:	e000ed00 	.word	0xe000ed00

08004188 <NVIC_EncodePriority>:
{
 8004188:	b480      	push	{r7}
 800418a:	b089      	sub	sp, #36	; 0x24
 800418c:	af00      	add	r7, sp, #0
 800418e:	60f8      	str	r0, [r7, #12]
 8004190:	60b9      	str	r1, [r7, #8]
 8004192:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8004194:	68fb      	ldr	r3, [r7, #12]
 8004196:	f003 0307 	and.w	r3, r3, #7
 800419a:	61fb      	str	r3, [r7, #28]
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800419c:	69fb      	ldr	r3, [r7, #28]
 800419e:	f1c3 0307 	rsb	r3, r3, #7
 80041a2:	2b04      	cmp	r3, #4
 80041a4:	bf28      	it	cs
 80041a6:	2304      	movcs	r3, #4
 80041a8:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80041aa:	69fb      	ldr	r3, [r7, #28]
 80041ac:	3304      	adds	r3, #4
 80041ae:	2b06      	cmp	r3, #6
 80041b0:	d902      	bls.n	80041b8 <NVIC_EncodePriority+0x30>
 80041b2:	69fb      	ldr	r3, [r7, #28]
 80041b4:	3b03      	subs	r3, #3
 80041b6:	e000      	b.n	80041ba <NVIC_EncodePriority+0x32>
 80041b8:	2300      	movs	r3, #0
 80041ba:	617b      	str	r3, [r7, #20]
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80041bc:	f04f 32ff 	mov.w	r2, #4294967295
 80041c0:	69bb      	ldr	r3, [r7, #24]
 80041c2:	fa02 f303 	lsl.w	r3, r2, r3
 80041c6:	43da      	mvns	r2, r3
 80041c8:	68bb      	ldr	r3, [r7, #8]
 80041ca:	401a      	ands	r2, r3
 80041cc:	697b      	ldr	r3, [r7, #20]
 80041ce:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80041d0:	f04f 31ff 	mov.w	r1, #4294967295
 80041d4:	697b      	ldr	r3, [r7, #20]
 80041d6:	fa01 f303 	lsl.w	r3, r1, r3
 80041da:	43d9      	mvns	r1, r3
 80041dc:	687b      	ldr	r3, [r7, #4]
 80041de:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80041e0:	4313      	orrs	r3, r2
}
 80041e2:	4618      	mov	r0, r3
 80041e4:	3724      	adds	r7, #36	; 0x24
 80041e6:	46bd      	mov	sp, r7
 80041e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041ec:	4770      	bx	lr
	...

080041f0 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80041f0:	b580      	push	{r7, lr}
 80041f2:	b082      	sub	sp, #8
 80041f4:	af00      	add	r7, sp, #0
 80041f6:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80041f8:	687b      	ldr	r3, [r7, #4]
 80041fa:	3b01      	subs	r3, #1
 80041fc:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8004200:	d301      	bcc.n	8004206 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8004202:	2301      	movs	r3, #1
 8004204:	e00f      	b.n	8004226 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8004206:	4a0a      	ldr	r2, [pc, #40]	; (8004230 <SysTick_Config+0x40>)
 8004208:	687b      	ldr	r3, [r7, #4]
 800420a:	3b01      	subs	r3, #1
 800420c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800420e:	210f      	movs	r1, #15
 8004210:	f04f 30ff 	mov.w	r0, #4294967295
 8004214:	f7ff ff8e 	bl	8004134 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8004218:	4b05      	ldr	r3, [pc, #20]	; (8004230 <SysTick_Config+0x40>)
 800421a:	2200      	movs	r2, #0
 800421c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800421e:	4b04      	ldr	r3, [pc, #16]	; (8004230 <SysTick_Config+0x40>)
 8004220:	2207      	movs	r2, #7
 8004222:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8004224:	2300      	movs	r3, #0
}
 8004226:	4618      	mov	r0, r3
 8004228:	3708      	adds	r7, #8
 800422a:	46bd      	mov	sp, r7
 800422c:	bd80      	pop	{r7, pc}
 800422e:	bf00      	nop
 8004230:	e000e010 	.word	0xe000e010

08004234 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8004234:	b580      	push	{r7, lr}
 8004236:	b082      	sub	sp, #8
 8004238:	af00      	add	r7, sp, #0
 800423a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 800423c:	6878      	ldr	r0, [r7, #4]
 800423e:	f7ff fee7 	bl	8004010 <__NVIC_SetPriorityGrouping>
}
 8004242:	bf00      	nop
 8004244:	3708      	adds	r7, #8
 8004246:	46bd      	mov	sp, r7
 8004248:	bd80      	pop	{r7, pc}

0800424a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800424a:	b580      	push	{r7, lr}
 800424c:	b086      	sub	sp, #24
 800424e:	af00      	add	r7, sp, #0
 8004250:	4603      	mov	r3, r0
 8004252:	60b9      	str	r1, [r7, #8]
 8004254:	607a      	str	r2, [r7, #4]
 8004256:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8004258:	2300      	movs	r3, #0
 800425a:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 800425c:	f7ff fefc 	bl	8004058 <__NVIC_GetPriorityGrouping>
 8004260:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8004262:	687a      	ldr	r2, [r7, #4]
 8004264:	68b9      	ldr	r1, [r7, #8]
 8004266:	6978      	ldr	r0, [r7, #20]
 8004268:	f7ff ff8e 	bl	8004188 <NVIC_EncodePriority>
 800426c:	4602      	mov	r2, r0
 800426e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004272:	4611      	mov	r1, r2
 8004274:	4618      	mov	r0, r3
 8004276:	f7ff ff5d 	bl	8004134 <__NVIC_SetPriority>
}
 800427a:	bf00      	nop
 800427c:	3718      	adds	r7, #24
 800427e:	46bd      	mov	sp, r7
 8004280:	bd80      	pop	{r7, pc}

08004282 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8004282:	b580      	push	{r7, lr}
 8004284:	b082      	sub	sp, #8
 8004286:	af00      	add	r7, sp, #0
 8004288:	4603      	mov	r3, r0
 800428a:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 800428c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004290:	4618      	mov	r0, r3
 8004292:	f7ff feef 	bl	8004074 <__NVIC_EnableIRQ>
}
 8004296:	bf00      	nop
 8004298:	3708      	adds	r7, #8
 800429a:	46bd      	mov	sp, r7
 800429c:	bd80      	pop	{r7, pc}

0800429e <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 800429e:	b580      	push	{r7, lr}
 80042a0:	b082      	sub	sp, #8
 80042a2:	af00      	add	r7, sp, #0
 80042a4:	4603      	mov	r3, r0
 80042a6:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 80042a8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80042ac:	4618      	mov	r0, r3
 80042ae:	f7ff feff 	bl	80040b0 <__NVIC_DisableIRQ>
}
 80042b2:	bf00      	nop
 80042b4:	3708      	adds	r7, #8
 80042b6:	46bd      	mov	sp, r7
 80042b8:	bd80      	pop	{r7, pc}

080042ba <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80042ba:	b580      	push	{r7, lr}
 80042bc:	b082      	sub	sp, #8
 80042be:	af00      	add	r7, sp, #0
 80042c0:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80042c2:	6878      	ldr	r0, [r7, #4]
 80042c4:	f7ff ff94 	bl	80041f0 <SysTick_Config>
 80042c8:	4603      	mov	r3, r0
}
 80042ca:	4618      	mov	r0, r3
 80042cc:	3708      	adds	r7, #8
 80042ce:	46bd      	mov	sp, r7
 80042d0:	bd80      	pop	{r7, pc}

080042d2 <HAL_NVIC_ClearPendingIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 80042d2:	b580      	push	{r7, lr}
 80042d4:	b082      	sub	sp, #8
 80042d6:	af00      	add	r7, sp, #0
 80042d8:	4603      	mov	r3, r0
 80042da:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Clear pending interrupt */
  NVIC_ClearPendingIRQ(IRQn);
 80042dc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80042e0:	4618      	mov	r0, r3
 80042e2:	f7ff ff09 	bl	80040f8 <__NVIC_ClearPendingIRQ>
}
 80042e6:	bf00      	nop
 80042e8:	3708      	adds	r7, #8
 80042ea:	46bd      	mov	sp, r7
 80042ec:	bd80      	pop	{r7, pc}

080042ee <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80042ee:	b580      	push	{r7, lr}
 80042f0:	b082      	sub	sp, #8
 80042f2:	af00      	add	r7, sp, #0
 80042f4:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80042f6:	687b      	ldr	r3, [r7, #4]
 80042f8:	2b00      	cmp	r3, #0
 80042fa:	d101      	bne.n	8004300 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 80042fc:	2301      	movs	r3, #1
 80042fe:	e00e      	b.n	800431e <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004300:	687b      	ldr	r3, [r7, #4]
 8004302:	795b      	ldrb	r3, [r3, #5]
 8004304:	b2db      	uxtb	r3, r3
 8004306:	2b00      	cmp	r3, #0
 8004308:	d105      	bne.n	8004316 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800430a:	687b      	ldr	r3, [r7, #4]
 800430c:	2200      	movs	r2, #0
 800430e:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8004310:	6878      	ldr	r0, [r7, #4]
 8004312:	f7fe fd19 	bl	8002d48 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004316:	687b      	ldr	r3, [r7, #4]
 8004318:	2201      	movs	r2, #1
 800431a:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 800431c:	2300      	movs	r3, #0
}
 800431e:	4618      	mov	r0, r3
 8004320:	3708      	adds	r7, #8
 8004322:	46bd      	mov	sp, r7
 8004324:	bd80      	pop	{r7, pc}
	...

08004328 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 8004328:	b580      	push	{r7, lr}
 800432a:	b086      	sub	sp, #24
 800432c:	af00      	add	r7, sp, #0
 800432e:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0U;
 8004330:	2300      	movs	r3, #0
 8004332:	617b      	str	r3, [r7, #20]
  uint32_t tickstart = HAL_GetTick();
 8004334:	f7ff fe3c 	bl	8003fb0 <HAL_GetTick>
 8004338:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 800433a:	687b      	ldr	r3, [r7, #4]
 800433c:	2b00      	cmp	r3, #0
 800433e:	d101      	bne.n	8004344 <HAL_DMA_Init+0x1c>
  {
    return HAL_ERROR;
 8004340:	2301      	movs	r3, #1
 8004342:	e099      	b.n	8004478 <HAL_DMA_Init+0x150>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
  }

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8004344:	687b      	ldr	r3, [r7, #4]
 8004346:	2202      	movs	r2, #2
 8004348:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 800434c:	687b      	ldr	r3, [r7, #4]
 800434e:	2200      	movs	r2, #0
 8004350:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 8004354:	687b      	ldr	r3, [r7, #4]
 8004356:	681b      	ldr	r3, [r3, #0]
 8004358:	681a      	ldr	r2, [r3, #0]
 800435a:	687b      	ldr	r3, [r7, #4]
 800435c:	681b      	ldr	r3, [r3, #0]
 800435e:	f022 0201 	bic.w	r2, r2, #1
 8004362:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8004364:	e00f      	b.n	8004386 <HAL_DMA_Init+0x5e>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8004366:	f7ff fe23 	bl	8003fb0 <HAL_GetTick>
 800436a:	4602      	mov	r2, r0
 800436c:	693b      	ldr	r3, [r7, #16]
 800436e:	1ad3      	subs	r3, r2, r3
 8004370:	2b05      	cmp	r3, #5
 8004372:	d908      	bls.n	8004386 <HAL_DMA_Init+0x5e>
    {
      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8004374:	687b      	ldr	r3, [r7, #4]
 8004376:	2220      	movs	r2, #32
 8004378:	655a      	str	r2, [r3, #84]	; 0x54
      
      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800437a:	687b      	ldr	r3, [r7, #4]
 800437c:	2203      	movs	r2, #3
 800437e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
      
      return HAL_TIMEOUT;
 8004382:	2303      	movs	r3, #3
 8004384:	e078      	b.n	8004478 <HAL_DMA_Init+0x150>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8004386:	687b      	ldr	r3, [r7, #4]
 8004388:	681b      	ldr	r3, [r3, #0]
 800438a:	681b      	ldr	r3, [r3, #0]
 800438c:	f003 0301 	and.w	r3, r3, #1
 8004390:	2b00      	cmp	r3, #0
 8004392:	d1e8      	bne.n	8004366 <HAL_DMA_Init+0x3e>
    }
  }
  
  /* Get the CR register value */
  tmp = hdma->Instance->CR;
 8004394:	687b      	ldr	r3, [r7, #4]
 8004396:	681b      	ldr	r3, [r3, #0]
 8004398:	681b      	ldr	r3, [r3, #0]
 800439a:	617b      	str	r3, [r7, #20]

  /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800439c:	697a      	ldr	r2, [r7, #20]
 800439e:	4b38      	ldr	r3, [pc, #224]	; (8004480 <HAL_DMA_Init+0x158>)
 80043a0:	4013      	ands	r3, r2
 80043a2:	617b      	str	r3, [r7, #20]
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80043a4:	687b      	ldr	r3, [r7, #4]
 80043a6:	685a      	ldr	r2, [r3, #4]
 80043a8:	687b      	ldr	r3, [r7, #4]
 80043aa:	689b      	ldr	r3, [r3, #8]
 80043ac:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80043ae:	687b      	ldr	r3, [r7, #4]
 80043b0:	68db      	ldr	r3, [r3, #12]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80043b2:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	691b      	ldr	r3, [r3, #16]
 80043b8:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80043ba:	687b      	ldr	r3, [r7, #4]
 80043bc:	695b      	ldr	r3, [r3, #20]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80043be:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80043c0:	687b      	ldr	r3, [r7, #4]
 80043c2:	699b      	ldr	r3, [r3, #24]
 80043c4:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 80043c6:	687b      	ldr	r3, [r7, #4]
 80043c8:	69db      	ldr	r3, [r3, #28]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80043ca:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 80043cc:	687b      	ldr	r3, [r7, #4]
 80043ce:	6a1b      	ldr	r3, [r3, #32]
 80043d0:	4313      	orrs	r3, r2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80043d2:	697a      	ldr	r2, [r7, #20]
 80043d4:	4313      	orrs	r3, r2
 80043d6:	617b      	str	r3, [r7, #20]

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80043d8:	687b      	ldr	r3, [r7, #4]
 80043da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043dc:	2b04      	cmp	r3, #4
 80043de:	d107      	bne.n	80043f0 <HAL_DMA_Init+0xc8>
  {
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 80043e0:	687b      	ldr	r3, [r7, #4]
 80043e2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80043e4:	687b      	ldr	r3, [r7, #4]
 80043e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80043e8:	4313      	orrs	r3, r2
 80043ea:	697a      	ldr	r2, [r7, #20]
 80043ec:	4313      	orrs	r3, r2
 80043ee:	617b      	str	r3, [r7, #20]
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 80043f0:	687b      	ldr	r3, [r7, #4]
 80043f2:	681b      	ldr	r3, [r3, #0]
 80043f4:	697a      	ldr	r2, [r7, #20]
 80043f6:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 80043f8:	687b      	ldr	r3, [r7, #4]
 80043fa:	681b      	ldr	r3, [r3, #0]
 80043fc:	695b      	ldr	r3, [r3, #20]
 80043fe:	617b      	str	r3, [r7, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8004400:	697b      	ldr	r3, [r7, #20]
 8004402:	f023 0307 	bic.w	r3, r3, #7
 8004406:	617b      	str	r3, [r7, #20]

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 8004408:	687b      	ldr	r3, [r7, #4]
 800440a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800440c:	697a      	ldr	r2, [r7, #20]
 800440e:	4313      	orrs	r3, r2
 8004410:	617b      	str	r3, [r7, #20]

  /* The FIFO threshold is not used when the FIFO mode is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8004412:	687b      	ldr	r3, [r7, #4]
 8004414:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004416:	2b04      	cmp	r3, #4
 8004418:	d117      	bne.n	800444a <HAL_DMA_Init+0x122>
  {
    /* Get the FIFO threshold */
    tmp |= hdma->Init.FIFOThreshold;
 800441a:	687b      	ldr	r3, [r7, #4]
 800441c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800441e:	697a      	ldr	r2, [r7, #20]
 8004420:	4313      	orrs	r3, r2
 8004422:	617b      	str	r3, [r7, #20]
    
    /* Check compatibility between FIFO threshold level and size of the memory burst */
    /* for INCR4, INCR8, INCR16 bursts */
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8004424:	687b      	ldr	r3, [r7, #4]
 8004426:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004428:	2b00      	cmp	r3, #0
 800442a:	d00e      	beq.n	800444a <HAL_DMA_Init+0x122>
    {
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 800442c:	6878      	ldr	r0, [r7, #4]
 800442e:	f000 fa91 	bl	8004954 <DMA_CheckFifoParam>
 8004432:	4603      	mov	r3, r0
 8004434:	2b00      	cmp	r3, #0
 8004436:	d008      	beq.n	800444a <HAL_DMA_Init+0x122>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8004438:	687b      	ldr	r3, [r7, #4]
 800443a:	2240      	movs	r2, #64	; 0x40
 800443c:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 800443e:	687b      	ldr	r3, [r7, #4]
 8004440:	2201      	movs	r2, #1
 8004442:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        
        return HAL_ERROR; 
 8004446:	2301      	movs	r3, #1
 8004448:	e016      	b.n	8004478 <HAL_DMA_Init+0x150>
      }
    }
  }
  
  /* Write to DMA Stream FCR */
  hdma->Instance->FCR = tmp;
 800444a:	687b      	ldr	r3, [r7, #4]
 800444c:	681b      	ldr	r3, [r3, #0]
 800444e:	697a      	ldr	r2, [r7, #20]
 8004450:	615a      	str	r2, [r3, #20]

  /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
     DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8004452:	6878      	ldr	r0, [r7, #4]
 8004454:	f000 fa48 	bl	80048e8 <DMA_CalcBaseAndBitshift>
 8004458:	4603      	mov	r3, r0
 800445a:	60fb      	str	r3, [r7, #12]
  
  /* Clear all interrupt flags */
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800445c:	687b      	ldr	r3, [r7, #4]
 800445e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004460:	223f      	movs	r2, #63	; 0x3f
 8004462:	409a      	lsls	r2, r3
 8004464:	68fb      	ldr	r3, [r7, #12]
 8004466:	609a      	str	r2, [r3, #8]

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004468:	687b      	ldr	r3, [r7, #4]
 800446a:	2200      	movs	r2, #0
 800446c:	655a      	str	r2, [r3, #84]	; 0x54
                                                                                     
  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 800446e:	687b      	ldr	r3, [r7, #4]
 8004470:	2201      	movs	r2, #1
 8004472:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

  return HAL_OK;
 8004476:	2300      	movs	r3, #0
}
 8004478:	4618      	mov	r0, r3
 800447a:	3718      	adds	r7, #24
 800447c:	46bd      	mov	sp, r7
 800447e:	bd80      	pop	{r7, pc}
 8004480:	f010803f 	.word	0xf010803f

08004484 <HAL_DMA_Start_IT>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8004484:	b580      	push	{r7, lr}
 8004486:	b086      	sub	sp, #24
 8004488:	af00      	add	r7, sp, #0
 800448a:	60f8      	str	r0, [r7, #12]
 800448c:	60b9      	str	r1, [r7, #8]
 800448e:	607a      	str	r2, [r7, #4]
 8004490:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8004492:	2300      	movs	r3, #0
 8004494:	75fb      	strb	r3, [r7, #23]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8004496:	68fb      	ldr	r3, [r7, #12]
 8004498:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800449a:	613b      	str	r3, [r7, #16]
  
  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 
  /* Process locked */
  __HAL_LOCK(hdma);
 800449c:	68fb      	ldr	r3, [r7, #12]
 800449e:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80044a2:	2b01      	cmp	r3, #1
 80044a4:	d101      	bne.n	80044aa <HAL_DMA_Start_IT+0x26>
 80044a6:	2302      	movs	r3, #2
 80044a8:	e040      	b.n	800452c <HAL_DMA_Start_IT+0xa8>
 80044aa:	68fb      	ldr	r3, [r7, #12]
 80044ac:	2201      	movs	r2, #1
 80044ae:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  
  if(HAL_DMA_STATE_READY == hdma->State)
 80044b2:	68fb      	ldr	r3, [r7, #12]
 80044b4:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80044b8:	b2db      	uxtb	r3, r3
 80044ba:	2b01      	cmp	r3, #1
 80044bc:	d12f      	bne.n	800451e <HAL_DMA_Start_IT+0x9a>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 80044be:	68fb      	ldr	r3, [r7, #12]
 80044c0:	2202      	movs	r2, #2
 80044c2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80044c6:	68fb      	ldr	r3, [r7, #12]
 80044c8:	2200      	movs	r2, #0
 80044ca:	655a      	str	r2, [r3, #84]	; 0x54
    
    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 80044cc:	683b      	ldr	r3, [r7, #0]
 80044ce:	687a      	ldr	r2, [r7, #4]
 80044d0:	68b9      	ldr	r1, [r7, #8]
 80044d2:	68f8      	ldr	r0, [r7, #12]
 80044d4:	f000 f9da 	bl	800488c <DMA_SetConfig>
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80044d8:	68fb      	ldr	r3, [r7, #12]
 80044da:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80044dc:	223f      	movs	r2, #63	; 0x3f
 80044de:	409a      	lsls	r2, r3
 80044e0:	693b      	ldr	r3, [r7, #16]
 80044e2:	609a      	str	r2, [r3, #8]
    
    /* Enable Common interrupts*/
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 80044e4:	68fb      	ldr	r3, [r7, #12]
 80044e6:	681b      	ldr	r3, [r3, #0]
 80044e8:	681a      	ldr	r2, [r3, #0]
 80044ea:	68fb      	ldr	r3, [r7, #12]
 80044ec:	681b      	ldr	r3, [r3, #0]
 80044ee:	f042 0216 	orr.w	r2, r2, #22
 80044f2:	601a      	str	r2, [r3, #0]
    
    if(hdma->XferHalfCpltCallback != NULL)
 80044f4:	68fb      	ldr	r3, [r7, #12]
 80044f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80044f8:	2b00      	cmp	r3, #0
 80044fa:	d007      	beq.n	800450c <HAL_DMA_Start_IT+0x88>
    {
      hdma->Instance->CR  |= DMA_IT_HT;
 80044fc:	68fb      	ldr	r3, [r7, #12]
 80044fe:	681b      	ldr	r3, [r3, #0]
 8004500:	681a      	ldr	r2, [r3, #0]
 8004502:	68fb      	ldr	r3, [r7, #12]
 8004504:	681b      	ldr	r3, [r3, #0]
 8004506:	f042 0208 	orr.w	r2, r2, #8
 800450a:	601a      	str	r2, [r3, #0]
    }
    
    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 800450c:	68fb      	ldr	r3, [r7, #12]
 800450e:	681b      	ldr	r3, [r3, #0]
 8004510:	681a      	ldr	r2, [r3, #0]
 8004512:	68fb      	ldr	r3, [r7, #12]
 8004514:	681b      	ldr	r3, [r3, #0]
 8004516:	f042 0201 	orr.w	r2, r2, #1
 800451a:	601a      	str	r2, [r3, #0]
 800451c:	e005      	b.n	800452a <HAL_DMA_Start_IT+0xa6>
  }
  else
  {
    /* Process unlocked */
    __HAL_UNLOCK(hdma);	  
 800451e:	68fb      	ldr	r3, [r7, #12]
 8004520:	2200      	movs	r2, #0
 8004522:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    /* Return error status */
    status = HAL_BUSY;
 8004526:	2302      	movs	r3, #2
 8004528:	75fb      	strb	r3, [r7, #23]
  }
  
  return status;
 800452a:	7dfb      	ldrb	r3, [r7, #23]
}
 800452c:	4618      	mov	r0, r3
 800452e:	3718      	adds	r7, #24
 8004530:	46bd      	mov	sp, r7
 8004532:	bd80      	pop	{r7, pc}

08004534 <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 8004534:	b480      	push	{r7}
 8004536:	b083      	sub	sp, #12
 8004538:	af00      	add	r7, sp, #0
 800453a:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800453c:	687b      	ldr	r3, [r7, #4]
 800453e:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004542:	b2db      	uxtb	r3, r3
 8004544:	2b02      	cmp	r3, #2
 8004546:	d004      	beq.n	8004552 <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	2280      	movs	r2, #128	; 0x80
 800454c:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 800454e:	2301      	movs	r3, #1
 8004550:	e00c      	b.n	800456c <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 8004552:	687b      	ldr	r3, [r7, #4]
 8004554:	2205      	movs	r2, #5
 8004556:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800455a:	687b      	ldr	r3, [r7, #4]
 800455c:	681b      	ldr	r3, [r3, #0]
 800455e:	681a      	ldr	r2, [r3, #0]
 8004560:	687b      	ldr	r3, [r7, #4]
 8004562:	681b      	ldr	r3, [r3, #0]
 8004564:	f022 0201 	bic.w	r2, r2, #1
 8004568:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 800456a:	2300      	movs	r3, #0
}
 800456c:	4618      	mov	r0, r3
 800456e:	370c      	adds	r7, #12
 8004570:	46bd      	mov	sp, r7
 8004572:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004576:	4770      	bx	lr

08004578 <HAL_DMA_IRQHandler>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 8004578:	b580      	push	{r7, lr}
 800457a:	b086      	sub	sp, #24
 800457c:	af00      	add	r7, sp, #0
 800457e:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr;
  __IO uint32_t count = 0U;
 8004580:	2300      	movs	r3, #0
 8004582:	60bb      	str	r3, [r7, #8]
  uint32_t timeout = SystemCoreClock / 9600U;
 8004584:	4b8e      	ldr	r3, [pc, #568]	; (80047c0 <HAL_DMA_IRQHandler+0x248>)
 8004586:	681b      	ldr	r3, [r3, #0]
 8004588:	4a8e      	ldr	r2, [pc, #568]	; (80047c4 <HAL_DMA_IRQHandler+0x24c>)
 800458a:	fba2 2303 	umull	r2, r3, r2, r3
 800458e:	0a9b      	lsrs	r3, r3, #10
 8004590:	617b      	str	r3, [r7, #20]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004596:	613b      	str	r3, [r7, #16]

  tmpisr = regs->ISR;
 8004598:	693b      	ldr	r3, [r7, #16]
 800459a:	681b      	ldr	r3, [r3, #0]
 800459c:	60fb      	str	r3, [r7, #12]

  /* Transfer Error Interrupt management ***************************************/
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 800459e:	687b      	ldr	r3, [r7, #4]
 80045a0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80045a2:	2208      	movs	r2, #8
 80045a4:	409a      	lsls	r2, r3
 80045a6:	68fb      	ldr	r3, [r7, #12]
 80045a8:	4013      	ands	r3, r2
 80045aa:	2b00      	cmp	r3, #0
 80045ac:	d01a      	beq.n	80045e4 <HAL_DMA_IRQHandler+0x6c>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 80045ae:	687b      	ldr	r3, [r7, #4]
 80045b0:	681b      	ldr	r3, [r3, #0]
 80045b2:	681b      	ldr	r3, [r3, #0]
 80045b4:	f003 0304 	and.w	r3, r3, #4
 80045b8:	2b00      	cmp	r3, #0
 80045ba:	d013      	beq.n	80045e4 <HAL_DMA_IRQHandler+0x6c>
    {
      /* Disable the transfer error interrupt */
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 80045bc:	687b      	ldr	r3, [r7, #4]
 80045be:	681b      	ldr	r3, [r3, #0]
 80045c0:	681a      	ldr	r2, [r3, #0]
 80045c2:	687b      	ldr	r3, [r7, #4]
 80045c4:	681b      	ldr	r3, [r3, #0]
 80045c6:	f022 0204 	bic.w	r2, r2, #4
 80045ca:	601a      	str	r2, [r3, #0]
      
      /* Clear the transfer error flag */
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 80045cc:	687b      	ldr	r3, [r7, #4]
 80045ce:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80045d0:	2208      	movs	r2, #8
 80045d2:	409a      	lsls	r2, r3
 80045d4:	693b      	ldr	r3, [r7, #16]
 80045d6:	609a      	str	r2, [r3, #8]
      
      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 80045d8:	687b      	ldr	r3, [r7, #4]
 80045da:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80045dc:	f043 0201 	orr.w	r2, r3, #1
 80045e0:	687b      	ldr	r3, [r7, #4]
 80045e2:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* FIFO Error Interrupt management ******************************************/
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 80045e4:	687b      	ldr	r3, [r7, #4]
 80045e6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80045e8:	2201      	movs	r2, #1
 80045ea:	409a      	lsls	r2, r3
 80045ec:	68fb      	ldr	r3, [r7, #12]
 80045ee:	4013      	ands	r3, r2
 80045f0:	2b00      	cmp	r3, #0
 80045f2:	d012      	beq.n	800461a <HAL_DMA_IRQHandler+0xa2>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	681b      	ldr	r3, [r3, #0]
 80045f8:	695b      	ldr	r3, [r3, #20]
 80045fa:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80045fe:	2b00      	cmp	r3, #0
 8004600:	d00b      	beq.n	800461a <HAL_DMA_IRQHandler+0xa2>
    {
      /* Clear the FIFO error flag */
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 8004602:	687b      	ldr	r3, [r7, #4]
 8004604:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004606:	2201      	movs	r2, #1
 8004608:	409a      	lsls	r2, r3
 800460a:	693b      	ldr	r3, [r7, #16]
 800460c:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 800460e:	687b      	ldr	r3, [r7, #4]
 8004610:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004612:	f043 0202 	orr.w	r2, r3, #2
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* Direct Mode Error Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 800461a:	687b      	ldr	r3, [r7, #4]
 800461c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800461e:	2204      	movs	r2, #4
 8004620:	409a      	lsls	r2, r3
 8004622:	68fb      	ldr	r3, [r7, #12]
 8004624:	4013      	ands	r3, r2
 8004626:	2b00      	cmp	r3, #0
 8004628:	d012      	beq.n	8004650 <HAL_DMA_IRQHandler+0xd8>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 800462a:	687b      	ldr	r3, [r7, #4]
 800462c:	681b      	ldr	r3, [r3, #0]
 800462e:	681b      	ldr	r3, [r3, #0]
 8004630:	f003 0302 	and.w	r3, r3, #2
 8004634:	2b00      	cmp	r3, #0
 8004636:	d00b      	beq.n	8004650 <HAL_DMA_IRQHandler+0xd8>
    {
      /* Clear the direct mode error flag */
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 8004638:	687b      	ldr	r3, [r7, #4]
 800463a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800463c:	2204      	movs	r2, #4
 800463e:	409a      	lsls	r2, r3
 8004640:	693b      	ldr	r3, [r7, #16]
 8004642:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8004644:	687b      	ldr	r3, [r7, #4]
 8004646:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004648:	f043 0204 	orr.w	r2, r3, #4
 800464c:	687b      	ldr	r3, [r7, #4]
 800464e:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* Half Transfer Complete Interrupt management ******************************/
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 8004650:	687b      	ldr	r3, [r7, #4]
 8004652:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004654:	2210      	movs	r2, #16
 8004656:	409a      	lsls	r2, r3
 8004658:	68fb      	ldr	r3, [r7, #12]
 800465a:	4013      	ands	r3, r2
 800465c:	2b00      	cmp	r3, #0
 800465e:	d043      	beq.n	80046e8 <HAL_DMA_IRQHandler+0x170>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 8004660:	687b      	ldr	r3, [r7, #4]
 8004662:	681b      	ldr	r3, [r3, #0]
 8004664:	681b      	ldr	r3, [r3, #0]
 8004666:	f003 0308 	and.w	r3, r3, #8
 800466a:	2b00      	cmp	r3, #0
 800466c:	d03c      	beq.n	80046e8 <HAL_DMA_IRQHandler+0x170>
    {
      /* Clear the half transfer complete flag */
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 800466e:	687b      	ldr	r3, [r7, #4]
 8004670:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004672:	2210      	movs	r2, #16
 8004674:	409a      	lsls	r2, r3
 8004676:	693b      	ldr	r3, [r7, #16]
 8004678:	609a      	str	r2, [r3, #8]
      
      /* Multi_Buffering mode enabled */
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800467a:	687b      	ldr	r3, [r7, #4]
 800467c:	681b      	ldr	r3, [r3, #0]
 800467e:	681b      	ldr	r3, [r3, #0]
 8004680:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004684:	2b00      	cmp	r3, #0
 8004686:	d018      	beq.n	80046ba <HAL_DMA_IRQHandler+0x142>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8004688:	687b      	ldr	r3, [r7, #4]
 800468a:	681b      	ldr	r3, [r3, #0]
 800468c:	681b      	ldr	r3, [r3, #0]
 800468e:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004692:	2b00      	cmp	r3, #0
 8004694:	d108      	bne.n	80046a8 <HAL_DMA_IRQHandler+0x130>
        {
          if(hdma->XferHalfCpltCallback != NULL)
 8004696:	687b      	ldr	r3, [r7, #4]
 8004698:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800469a:	2b00      	cmp	r3, #0
 800469c:	d024      	beq.n	80046e8 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 800469e:	687b      	ldr	r3, [r7, #4]
 80046a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80046a2:	6878      	ldr	r0, [r7, #4]
 80046a4:	4798      	blx	r3
 80046a6:	e01f      	b.n	80046e8 <HAL_DMA_IRQHandler+0x170>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 80046a8:	687b      	ldr	r3, [r7, #4]
 80046aa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80046ac:	2b00      	cmp	r3, #0
 80046ae:	d01b      	beq.n	80046e8 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferM1HalfCpltCallback(hdma);
 80046b0:	687b      	ldr	r3, [r7, #4]
 80046b2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80046b4:	6878      	ldr	r0, [r7, #4]
 80046b6:	4798      	blx	r3
 80046b8:	e016      	b.n	80046e8 <HAL_DMA_IRQHandler+0x170>
        }
      }
      else
      {
        /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 80046ba:	687b      	ldr	r3, [r7, #4]
 80046bc:	681b      	ldr	r3, [r3, #0]
 80046be:	681b      	ldr	r3, [r3, #0]
 80046c0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80046c4:	2b00      	cmp	r3, #0
 80046c6:	d107      	bne.n	80046d8 <HAL_DMA_IRQHandler+0x160>
        {
          /* Disable the half transfer interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 80046c8:	687b      	ldr	r3, [r7, #4]
 80046ca:	681b      	ldr	r3, [r3, #0]
 80046cc:	681a      	ldr	r2, [r3, #0]
 80046ce:	687b      	ldr	r3, [r7, #4]
 80046d0:	681b      	ldr	r3, [r3, #0]
 80046d2:	f022 0208 	bic.w	r2, r2, #8
 80046d6:	601a      	str	r2, [r3, #0]
        }
        
        if(hdma->XferHalfCpltCallback != NULL)
 80046d8:	687b      	ldr	r3, [r7, #4]
 80046da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80046dc:	2b00      	cmp	r3, #0
 80046de:	d003      	beq.n	80046e8 <HAL_DMA_IRQHandler+0x170>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80046e4:	6878      	ldr	r0, [r7, #4]
 80046e6:	4798      	blx	r3
        }
      }
    }
  }
  /* Transfer Complete Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 80046e8:	687b      	ldr	r3, [r7, #4]
 80046ea:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80046ec:	2220      	movs	r2, #32
 80046ee:	409a      	lsls	r2, r3
 80046f0:	68fb      	ldr	r3, [r7, #12]
 80046f2:	4013      	ands	r3, r2
 80046f4:	2b00      	cmp	r3, #0
 80046f6:	f000 808f 	beq.w	8004818 <HAL_DMA_IRQHandler+0x2a0>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 80046fa:	687b      	ldr	r3, [r7, #4]
 80046fc:	681b      	ldr	r3, [r3, #0]
 80046fe:	681b      	ldr	r3, [r3, #0]
 8004700:	f003 0310 	and.w	r3, r3, #16
 8004704:	2b00      	cmp	r3, #0
 8004706:	f000 8087 	beq.w	8004818 <HAL_DMA_IRQHandler+0x2a0>
    {
      /* Clear the transfer complete flag */
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 800470a:	687b      	ldr	r3, [r7, #4]
 800470c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800470e:	2220      	movs	r2, #32
 8004710:	409a      	lsls	r2, r3
 8004712:	693b      	ldr	r3, [r7, #16]
 8004714:	609a      	str	r2, [r3, #8]
      
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8004716:	687b      	ldr	r3, [r7, #4]
 8004718:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800471c:	b2db      	uxtb	r3, r3
 800471e:	2b05      	cmp	r3, #5
 8004720:	d136      	bne.n	8004790 <HAL_DMA_IRQHandler+0x218>
      {
        /* Disable all the transfer interrupts */
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8004722:	687b      	ldr	r3, [r7, #4]
 8004724:	681b      	ldr	r3, [r3, #0]
 8004726:	681a      	ldr	r2, [r3, #0]
 8004728:	687b      	ldr	r3, [r7, #4]
 800472a:	681b      	ldr	r3, [r3, #0]
 800472c:	f022 0216 	bic.w	r2, r2, #22
 8004730:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8004732:	687b      	ldr	r3, [r7, #4]
 8004734:	681b      	ldr	r3, [r3, #0]
 8004736:	695a      	ldr	r2, [r3, #20]
 8004738:	687b      	ldr	r3, [r7, #4]
 800473a:	681b      	ldr	r3, [r3, #0]
 800473c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004740:	615a      	str	r2, [r3, #20]
        
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8004742:	687b      	ldr	r3, [r7, #4]
 8004744:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004746:	2b00      	cmp	r3, #0
 8004748:	d103      	bne.n	8004752 <HAL_DMA_IRQHandler+0x1da>
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800474e:	2b00      	cmp	r3, #0
 8004750:	d007      	beq.n	8004762 <HAL_DMA_IRQHandler+0x1ea>
        {
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8004752:	687b      	ldr	r3, [r7, #4]
 8004754:	681b      	ldr	r3, [r3, #0]
 8004756:	681a      	ldr	r2, [r3, #0]
 8004758:	687b      	ldr	r3, [r7, #4]
 800475a:	681b      	ldr	r3, [r3, #0]
 800475c:	f022 0208 	bic.w	r2, r2, #8
 8004760:	601a      	str	r2, [r3, #0]
        }

        /* Clear all interrupt flags at correct offset within the register */
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8004762:	687b      	ldr	r3, [r7, #4]
 8004764:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004766:	223f      	movs	r2, #63	; 0x3f
 8004768:	409a      	lsls	r2, r3
 800476a:	693b      	ldr	r3, [r7, #16]
 800476c:	609a      	str	r2, [r3, #8]

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 800476e:	687b      	ldr	r3, [r7, #4]
 8004770:	2201      	movs	r2, #1
 8004772:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8004776:	687b      	ldr	r3, [r7, #4]
 8004778:	2200      	movs	r2, #0
 800477a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

        if(hdma->XferAbortCallback != NULL)
 800477e:	687b      	ldr	r3, [r7, #4]
 8004780:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004782:	2b00      	cmp	r3, #0
 8004784:	d07e      	beq.n	8004884 <HAL_DMA_IRQHandler+0x30c>
        {
          hdma->XferAbortCallback(hdma);
 8004786:	687b      	ldr	r3, [r7, #4]
 8004788:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800478a:	6878      	ldr	r0, [r7, #4]
 800478c:	4798      	blx	r3
        }
        return;
 800478e:	e079      	b.n	8004884 <HAL_DMA_IRQHandler+0x30c>
      }

      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8004790:	687b      	ldr	r3, [r7, #4]
 8004792:	681b      	ldr	r3, [r3, #0]
 8004794:	681b      	ldr	r3, [r3, #0]
 8004796:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800479a:	2b00      	cmp	r3, #0
 800479c:	d01d      	beq.n	80047da <HAL_DMA_IRQHandler+0x262>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 800479e:	687b      	ldr	r3, [r7, #4]
 80047a0:	681b      	ldr	r3, [r3, #0]
 80047a2:	681b      	ldr	r3, [r3, #0]
 80047a4:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80047a8:	2b00      	cmp	r3, #0
 80047aa:	d10d      	bne.n	80047c8 <HAL_DMA_IRQHandler+0x250>
        {
          if(hdma->XferM1CpltCallback != NULL)
 80047ac:	687b      	ldr	r3, [r7, #4]
 80047ae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80047b0:	2b00      	cmp	r3, #0
 80047b2:	d031      	beq.n	8004818 <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory1 */
            hdma->XferM1CpltCallback(hdma);
 80047b4:	687b      	ldr	r3, [r7, #4]
 80047b6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80047b8:	6878      	ldr	r0, [r7, #4]
 80047ba:	4798      	blx	r3
 80047bc:	e02c      	b.n	8004818 <HAL_DMA_IRQHandler+0x2a0>
 80047be:	bf00      	nop
 80047c0:	20000004 	.word	0x20000004
 80047c4:	1b4e81b5 	.word	0x1b4e81b5
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 80047c8:	687b      	ldr	r3, [r7, #4]
 80047ca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80047cc:	2b00      	cmp	r3, #0
 80047ce:	d023      	beq.n	8004818 <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory0 */
            hdma->XferCpltCallback(hdma);
 80047d0:	687b      	ldr	r3, [r7, #4]
 80047d2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80047d4:	6878      	ldr	r0, [r7, #4]
 80047d6:	4798      	blx	r3
 80047d8:	e01e      	b.n	8004818 <HAL_DMA_IRQHandler+0x2a0>
        }
      }
      /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
      else
      {
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 80047da:	687b      	ldr	r3, [r7, #4]
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	681b      	ldr	r3, [r3, #0]
 80047e0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80047e4:	2b00      	cmp	r3, #0
 80047e6:	d10f      	bne.n	8004808 <HAL_DMA_IRQHandler+0x290>
        {
          /* Disable the transfer complete interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 80047e8:	687b      	ldr	r3, [r7, #4]
 80047ea:	681b      	ldr	r3, [r3, #0]
 80047ec:	681a      	ldr	r2, [r3, #0]
 80047ee:	687b      	ldr	r3, [r7, #4]
 80047f0:	681b      	ldr	r3, [r3, #0]
 80047f2:	f022 0210 	bic.w	r2, r2, #16
 80047f6:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	2201      	movs	r2, #1
 80047fc:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 8004800:	687b      	ldr	r3, [r7, #4]
 8004802:	2200      	movs	r2, #0
 8004804:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        }

        if(hdma->XferCpltCallback != NULL)
 8004808:	687b      	ldr	r3, [r7, #4]
 800480a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800480c:	2b00      	cmp	r3, #0
 800480e:	d003      	beq.n	8004818 <HAL_DMA_IRQHandler+0x2a0>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 8004810:	687b      	ldr	r3, [r7, #4]
 8004812:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004814:	6878      	ldr	r0, [r7, #4]
 8004816:	4798      	blx	r3
      }
    }
  }
  
  /* manage error case */
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8004818:	687b      	ldr	r3, [r7, #4]
 800481a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800481c:	2b00      	cmp	r3, #0
 800481e:	d032      	beq.n	8004886 <HAL_DMA_IRQHandler+0x30e>
  {
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004824:	f003 0301 	and.w	r3, r3, #1
 8004828:	2b00      	cmp	r3, #0
 800482a:	d022      	beq.n	8004872 <HAL_DMA_IRQHandler+0x2fa>
    {
      hdma->State = HAL_DMA_STATE_ABORT;
 800482c:	687b      	ldr	r3, [r7, #4]
 800482e:	2205      	movs	r2, #5
 8004830:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 8004834:	687b      	ldr	r3, [r7, #4]
 8004836:	681b      	ldr	r3, [r3, #0]
 8004838:	681a      	ldr	r2, [r3, #0]
 800483a:	687b      	ldr	r3, [r7, #4]
 800483c:	681b      	ldr	r3, [r3, #0]
 800483e:	f022 0201 	bic.w	r2, r2, #1
 8004842:	601a      	str	r2, [r3, #0]

      do
      {
        if (++count > timeout)
 8004844:	68bb      	ldr	r3, [r7, #8]
 8004846:	3301      	adds	r3, #1
 8004848:	60bb      	str	r3, [r7, #8]
 800484a:	697a      	ldr	r2, [r7, #20]
 800484c:	429a      	cmp	r2, r3
 800484e:	d307      	bcc.n	8004860 <HAL_DMA_IRQHandler+0x2e8>
        {
          break;
        }
      }
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	681b      	ldr	r3, [r3, #0]
 8004854:	681b      	ldr	r3, [r3, #0]
 8004856:	f003 0301 	and.w	r3, r3, #1
 800485a:	2b00      	cmp	r3, #0
 800485c:	d1f2      	bne.n	8004844 <HAL_DMA_IRQHandler+0x2cc>
 800485e:	e000      	b.n	8004862 <HAL_DMA_IRQHandler+0x2ea>
          break;
 8004860:	bf00      	nop

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 8004862:	687b      	ldr	r3, [r7, #4]
 8004864:	2201      	movs	r2, #1
 8004866:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	2200      	movs	r2, #0
 800486e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }

    if(hdma->XferErrorCallback != NULL)
 8004872:	687b      	ldr	r3, [r7, #4]
 8004874:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004876:	2b00      	cmp	r3, #0
 8004878:	d005      	beq.n	8004886 <HAL_DMA_IRQHandler+0x30e>
    {
      /* Transfer error callback */
      hdma->XferErrorCallback(hdma);
 800487a:	687b      	ldr	r3, [r7, #4]
 800487c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800487e:	6878      	ldr	r0, [r7, #4]
 8004880:	4798      	blx	r3
 8004882:	e000      	b.n	8004886 <HAL_DMA_IRQHandler+0x30e>
        return;
 8004884:	bf00      	nop
    }
  }
}
 8004886:	3718      	adds	r7, #24
 8004888:	46bd      	mov	sp, r7
 800488a:	bd80      	pop	{r7, pc}

0800488c <DMA_SetConfig>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 800488c:	b480      	push	{r7}
 800488e:	b085      	sub	sp, #20
 8004890:	af00      	add	r7, sp, #0
 8004892:	60f8      	str	r0, [r7, #12]
 8004894:	60b9      	str	r1, [r7, #8]
 8004896:	607a      	str	r2, [r7, #4]
 8004898:	603b      	str	r3, [r7, #0]
  /* Clear DBM bit */
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 800489a:	68fb      	ldr	r3, [r7, #12]
 800489c:	681b      	ldr	r3, [r3, #0]
 800489e:	681a      	ldr	r2, [r3, #0]
 80048a0:	68fb      	ldr	r3, [r7, #12]
 80048a2:	681b      	ldr	r3, [r3, #0]
 80048a4:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80048a8:	601a      	str	r2, [r3, #0]

  /* Configure DMA Stream data length */
  hdma->Instance->NDTR = DataLength;
 80048aa:	68fb      	ldr	r3, [r7, #12]
 80048ac:	681b      	ldr	r3, [r3, #0]
 80048ae:	683a      	ldr	r2, [r7, #0]
 80048b0:	605a      	str	r2, [r3, #4]

  /* Memory to Peripheral */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 80048b2:	68fb      	ldr	r3, [r7, #12]
 80048b4:	689b      	ldr	r3, [r3, #8]
 80048b6:	2b40      	cmp	r3, #64	; 0x40
 80048b8:	d108      	bne.n	80048cc <DMA_SetConfig+0x40>
  {
    /* Configure DMA Stream destination address */
    hdma->Instance->PAR = DstAddress;
 80048ba:	68fb      	ldr	r3, [r7, #12]
 80048bc:	681b      	ldr	r3, [r3, #0]
 80048be:	687a      	ldr	r2, [r7, #4]
 80048c0:	609a      	str	r2, [r3, #8]

    /* Configure DMA Stream source address */
    hdma->Instance->M0AR = SrcAddress;
 80048c2:	68fb      	ldr	r3, [r7, #12]
 80048c4:	681b      	ldr	r3, [r3, #0]
 80048c6:	68ba      	ldr	r2, [r7, #8]
 80048c8:	60da      	str	r2, [r3, #12]
    hdma->Instance->PAR = SrcAddress;

    /* Configure DMA Stream destination address */
    hdma->Instance->M0AR = DstAddress;
  }
}
 80048ca:	e007      	b.n	80048dc <DMA_SetConfig+0x50>
    hdma->Instance->PAR = SrcAddress;
 80048cc:	68fb      	ldr	r3, [r7, #12]
 80048ce:	681b      	ldr	r3, [r3, #0]
 80048d0:	68ba      	ldr	r2, [r7, #8]
 80048d2:	609a      	str	r2, [r3, #8]
    hdma->Instance->M0AR = DstAddress;
 80048d4:	68fb      	ldr	r3, [r7, #12]
 80048d6:	681b      	ldr	r3, [r3, #0]
 80048d8:	687a      	ldr	r2, [r7, #4]
 80048da:	60da      	str	r2, [r3, #12]
}
 80048dc:	bf00      	nop
 80048de:	3714      	adds	r7, #20
 80048e0:	46bd      	mov	sp, r7
 80048e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048e6:	4770      	bx	lr

080048e8 <DMA_CalcBaseAndBitshift>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 80048e8:	b480      	push	{r7}
 80048ea:	b085      	sub	sp, #20
 80048ec:	af00      	add	r7, sp, #0
 80048ee:	6078      	str	r0, [r7, #4]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 80048f0:	687b      	ldr	r3, [r7, #4]
 80048f2:	681b      	ldr	r3, [r3, #0]
 80048f4:	b2db      	uxtb	r3, r3
 80048f6:	3b10      	subs	r3, #16
 80048f8:	4a14      	ldr	r2, [pc, #80]	; (800494c <DMA_CalcBaseAndBitshift+0x64>)
 80048fa:	fba2 2303 	umull	r2, r3, r2, r3
 80048fe:	091b      	lsrs	r3, r3, #4
 8004900:	60fb      	str	r3, [r7, #12]
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8004902:	4a13      	ldr	r2, [pc, #76]	; (8004950 <DMA_CalcBaseAndBitshift+0x68>)
 8004904:	68fb      	ldr	r3, [r7, #12]
 8004906:	4413      	add	r3, r2
 8004908:	781b      	ldrb	r3, [r3, #0]
 800490a:	461a      	mov	r2, r3
 800490c:	687b      	ldr	r3, [r7, #4]
 800490e:	65da      	str	r2, [r3, #92]	; 0x5c
  
  if (stream_number > 3U)
 8004910:	68fb      	ldr	r3, [r7, #12]
 8004912:	2b03      	cmp	r3, #3
 8004914:	d909      	bls.n	800492a <DMA_CalcBaseAndBitshift+0x42>
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8004916:	687b      	ldr	r3, [r7, #4]
 8004918:	681b      	ldr	r3, [r3, #0]
 800491a:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 800491e:	f023 0303 	bic.w	r3, r3, #3
 8004922:	1d1a      	adds	r2, r3, #4
 8004924:	687b      	ldr	r3, [r7, #4]
 8004926:	659a      	str	r2, [r3, #88]	; 0x58
 8004928:	e007      	b.n	800493a <DMA_CalcBaseAndBitshift+0x52>
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 800492a:	687b      	ldr	r3, [r7, #4]
 800492c:	681b      	ldr	r3, [r3, #0]
 800492e:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8004932:	f023 0303 	bic.w	r3, r3, #3
 8004936:	687a      	ldr	r2, [r7, #4]
 8004938:	6593      	str	r3, [r2, #88]	; 0x58
  }
  
  return hdma->StreamBaseAddress;
 800493a:	687b      	ldr	r3, [r7, #4]
 800493c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
}
 800493e:	4618      	mov	r0, r3
 8004940:	3714      	adds	r7, #20
 8004942:	46bd      	mov	sp, r7
 8004944:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004948:	4770      	bx	lr
 800494a:	bf00      	nop
 800494c:	aaaaaaab 	.word	0xaaaaaaab
 8004950:	0802de54 	.word	0x0802de54

08004954 <DMA_CheckFifoParam>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8004954:	b480      	push	{r7}
 8004956:	b085      	sub	sp, #20
 8004958:	af00      	add	r7, sp, #0
 800495a:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800495c:	2300      	movs	r3, #0
 800495e:	73fb      	strb	r3, [r7, #15]
  uint32_t tmp = hdma->Init.FIFOThreshold;
 8004960:	687b      	ldr	r3, [r7, #4]
 8004962:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004964:	60bb      	str	r3, [r7, #8]
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8004966:	687b      	ldr	r3, [r7, #4]
 8004968:	699b      	ldr	r3, [r3, #24]
 800496a:	2b00      	cmp	r3, #0
 800496c:	d11f      	bne.n	80049ae <DMA_CheckFifoParam+0x5a>
  {
    switch (tmp)
 800496e:	68bb      	ldr	r3, [r7, #8]
 8004970:	2b03      	cmp	r3, #3
 8004972:	d856      	bhi.n	8004a22 <DMA_CheckFifoParam+0xce>
 8004974:	a201      	add	r2, pc, #4	; (adr r2, 800497c <DMA_CheckFifoParam+0x28>)
 8004976:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800497a:	bf00      	nop
 800497c:	0800498d 	.word	0x0800498d
 8004980:	0800499f 	.word	0x0800499f
 8004984:	0800498d 	.word	0x0800498d
 8004988:	08004a23 	.word	0x08004a23
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800498c:	687b      	ldr	r3, [r7, #4]
 800498e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004990:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004994:	2b00      	cmp	r3, #0
 8004996:	d046      	beq.n	8004a26 <DMA_CheckFifoParam+0xd2>
      {
        status = HAL_ERROR;
 8004998:	2301      	movs	r3, #1
 800499a:	73fb      	strb	r3, [r7, #15]
      }
      break;
 800499c:	e043      	b.n	8004a26 <DMA_CheckFifoParam+0xd2>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 800499e:	687b      	ldr	r3, [r7, #4]
 80049a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80049a2:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80049a6:	d140      	bne.n	8004a2a <DMA_CheckFifoParam+0xd6>
      {
        status = HAL_ERROR;
 80049a8:	2301      	movs	r3, #1
 80049aa:	73fb      	strb	r3, [r7, #15]
      }
      break;
 80049ac:	e03d      	b.n	8004a2a <DMA_CheckFifoParam+0xd6>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 80049ae:	687b      	ldr	r3, [r7, #4]
 80049b0:	699b      	ldr	r3, [r3, #24]
 80049b2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80049b6:	d121      	bne.n	80049fc <DMA_CheckFifoParam+0xa8>
  {
    switch (tmp)
 80049b8:	68bb      	ldr	r3, [r7, #8]
 80049ba:	2b03      	cmp	r3, #3
 80049bc:	d837      	bhi.n	8004a2e <DMA_CheckFifoParam+0xda>
 80049be:	a201      	add	r2, pc, #4	; (adr r2, 80049c4 <DMA_CheckFifoParam+0x70>)
 80049c0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80049c4:	080049d5 	.word	0x080049d5
 80049c8:	080049db 	.word	0x080049db
 80049cc:	080049d5 	.word	0x080049d5
 80049d0:	080049ed 	.word	0x080049ed
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
 80049d4:	2301      	movs	r3, #1
 80049d6:	73fb      	strb	r3, [r7, #15]
      break;
 80049d8:	e030      	b.n	8004a3c <DMA_CheckFifoParam+0xe8>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 80049da:	687b      	ldr	r3, [r7, #4]
 80049dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80049de:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80049e2:	2b00      	cmp	r3, #0
 80049e4:	d025      	beq.n	8004a32 <DMA_CheckFifoParam+0xde>
      {
        status = HAL_ERROR;
 80049e6:	2301      	movs	r3, #1
 80049e8:	73fb      	strb	r3, [r7, #15]
      }
      break;
 80049ea:	e022      	b.n	8004a32 <DMA_CheckFifoParam+0xde>
    case DMA_FIFO_THRESHOLD_FULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 80049ec:	687b      	ldr	r3, [r7, #4]
 80049ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80049f0:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80049f4:	d11f      	bne.n	8004a36 <DMA_CheckFifoParam+0xe2>
      {
        status = HAL_ERROR;
 80049f6:	2301      	movs	r3, #1
 80049f8:	73fb      	strb	r3, [r7, #15]
      }
      break;   
 80049fa:	e01c      	b.n	8004a36 <DMA_CheckFifoParam+0xe2>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 80049fc:	68bb      	ldr	r3, [r7, #8]
 80049fe:	2b02      	cmp	r3, #2
 8004a00:	d903      	bls.n	8004a0a <DMA_CheckFifoParam+0xb6>
 8004a02:	68bb      	ldr	r3, [r7, #8]
 8004a04:	2b03      	cmp	r3, #3
 8004a06:	d003      	beq.n	8004a10 <DMA_CheckFifoParam+0xbc>
      {
        status = HAL_ERROR;
      }
      break;
    default:
      break;
 8004a08:	e018      	b.n	8004a3c <DMA_CheckFifoParam+0xe8>
      status = HAL_ERROR;
 8004a0a:	2301      	movs	r3, #1
 8004a0c:	73fb      	strb	r3, [r7, #15]
      break;
 8004a0e:	e015      	b.n	8004a3c <DMA_CheckFifoParam+0xe8>
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8004a10:	687b      	ldr	r3, [r7, #4]
 8004a12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004a14:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004a18:	2b00      	cmp	r3, #0
 8004a1a:	d00e      	beq.n	8004a3a <DMA_CheckFifoParam+0xe6>
        status = HAL_ERROR;
 8004a1c:	2301      	movs	r3, #1
 8004a1e:	73fb      	strb	r3, [r7, #15]
      break;
 8004a20:	e00b      	b.n	8004a3a <DMA_CheckFifoParam+0xe6>
      break;
 8004a22:	bf00      	nop
 8004a24:	e00a      	b.n	8004a3c <DMA_CheckFifoParam+0xe8>
      break;
 8004a26:	bf00      	nop
 8004a28:	e008      	b.n	8004a3c <DMA_CheckFifoParam+0xe8>
      break;
 8004a2a:	bf00      	nop
 8004a2c:	e006      	b.n	8004a3c <DMA_CheckFifoParam+0xe8>
      break;
 8004a2e:	bf00      	nop
 8004a30:	e004      	b.n	8004a3c <DMA_CheckFifoParam+0xe8>
      break;
 8004a32:	bf00      	nop
 8004a34:	e002      	b.n	8004a3c <DMA_CheckFifoParam+0xe8>
      break;   
 8004a36:	bf00      	nop
 8004a38:	e000      	b.n	8004a3c <DMA_CheckFifoParam+0xe8>
      break;
 8004a3a:	bf00      	nop
    }
  } 
  
  return status; 
 8004a3c:	7bfb      	ldrb	r3, [r7, #15]
}
 8004a3e:	4618      	mov	r0, r3
 8004a40:	3714      	adds	r7, #20
 8004a42:	46bd      	mov	sp, r7
 8004a44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a48:	4770      	bx	lr
 8004a4a:	bf00      	nop

08004a4c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004a4c:	b480      	push	{r7}
 8004a4e:	b089      	sub	sp, #36	; 0x24
 8004a50:	af00      	add	r7, sp, #0
 8004a52:	6078      	str	r0, [r7, #4]
 8004a54:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8004a56:	2300      	movs	r3, #0
 8004a58:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8004a5a:	2300      	movs	r3, #0
 8004a5c:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8004a5e:	2300      	movs	r3, #0
 8004a60:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004a62:	2300      	movs	r3, #0
 8004a64:	61fb      	str	r3, [r7, #28]
 8004a66:	e159      	b.n	8004d1c <HAL_GPIO_Init+0x2d0>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8004a68:	2201      	movs	r2, #1
 8004a6a:	69fb      	ldr	r3, [r7, #28]
 8004a6c:	fa02 f303 	lsl.w	r3, r2, r3
 8004a70:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004a72:	683b      	ldr	r3, [r7, #0]
 8004a74:	681b      	ldr	r3, [r3, #0]
 8004a76:	697a      	ldr	r2, [r7, #20]
 8004a78:	4013      	ands	r3, r2
 8004a7a:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8004a7c:	693a      	ldr	r2, [r7, #16]
 8004a7e:	697b      	ldr	r3, [r7, #20]
 8004a80:	429a      	cmp	r2, r3
 8004a82:	f040 8148 	bne.w	8004d16 <HAL_GPIO_Init+0x2ca>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004a86:	683b      	ldr	r3, [r7, #0]
 8004a88:	685b      	ldr	r3, [r3, #4]
 8004a8a:	f003 0303 	and.w	r3, r3, #3
 8004a8e:	2b01      	cmp	r3, #1
 8004a90:	d005      	beq.n	8004a9e <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004a92:	683b      	ldr	r3, [r7, #0]
 8004a94:	685b      	ldr	r3, [r3, #4]
 8004a96:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004a9a:	2b02      	cmp	r3, #2
 8004a9c:	d130      	bne.n	8004b00 <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8004a9e:	687b      	ldr	r3, [r7, #4]
 8004aa0:	689b      	ldr	r3, [r3, #8]
 8004aa2:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004aa4:	69fb      	ldr	r3, [r7, #28]
 8004aa6:	005b      	lsls	r3, r3, #1
 8004aa8:	2203      	movs	r2, #3
 8004aaa:	fa02 f303 	lsl.w	r3, r2, r3
 8004aae:	43db      	mvns	r3, r3
 8004ab0:	69ba      	ldr	r2, [r7, #24]
 8004ab2:	4013      	ands	r3, r2
 8004ab4:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004ab6:	683b      	ldr	r3, [r7, #0]
 8004ab8:	68da      	ldr	r2, [r3, #12]
 8004aba:	69fb      	ldr	r3, [r7, #28]
 8004abc:	005b      	lsls	r3, r3, #1
 8004abe:	fa02 f303 	lsl.w	r3, r2, r3
 8004ac2:	69ba      	ldr	r2, [r7, #24]
 8004ac4:	4313      	orrs	r3, r2
 8004ac6:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8004ac8:	687b      	ldr	r3, [r7, #4]
 8004aca:	69ba      	ldr	r2, [r7, #24]
 8004acc:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8004ace:	687b      	ldr	r3, [r7, #4]
 8004ad0:	685b      	ldr	r3, [r3, #4]
 8004ad2:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004ad4:	2201      	movs	r2, #1
 8004ad6:	69fb      	ldr	r3, [r7, #28]
 8004ad8:	fa02 f303 	lsl.w	r3, r2, r3
 8004adc:	43db      	mvns	r3, r3
 8004ade:	69ba      	ldr	r2, [r7, #24]
 8004ae0:	4013      	ands	r3, r2
 8004ae2:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004ae4:	683b      	ldr	r3, [r7, #0]
 8004ae6:	685b      	ldr	r3, [r3, #4]
 8004ae8:	091b      	lsrs	r3, r3, #4
 8004aea:	f003 0201 	and.w	r2, r3, #1
 8004aee:	69fb      	ldr	r3, [r7, #28]
 8004af0:	fa02 f303 	lsl.w	r3, r2, r3
 8004af4:	69ba      	ldr	r2, [r7, #24]
 8004af6:	4313      	orrs	r3, r2
 8004af8:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8004afa:	687b      	ldr	r3, [r7, #4]
 8004afc:	69ba      	ldr	r2, [r7, #24]
 8004afe:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004b00:	683b      	ldr	r3, [r7, #0]
 8004b02:	685b      	ldr	r3, [r3, #4]
 8004b04:	f003 0303 	and.w	r3, r3, #3
 8004b08:	2b03      	cmp	r3, #3
 8004b0a:	d017      	beq.n	8004b3c <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8004b0c:	687b      	ldr	r3, [r7, #4]
 8004b0e:	68db      	ldr	r3, [r3, #12]
 8004b10:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004b12:	69fb      	ldr	r3, [r7, #28]
 8004b14:	005b      	lsls	r3, r3, #1
 8004b16:	2203      	movs	r2, #3
 8004b18:	fa02 f303 	lsl.w	r3, r2, r3
 8004b1c:	43db      	mvns	r3, r3
 8004b1e:	69ba      	ldr	r2, [r7, #24]
 8004b20:	4013      	ands	r3, r2
 8004b22:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004b24:	683b      	ldr	r3, [r7, #0]
 8004b26:	689a      	ldr	r2, [r3, #8]
 8004b28:	69fb      	ldr	r3, [r7, #28]
 8004b2a:	005b      	lsls	r3, r3, #1
 8004b2c:	fa02 f303 	lsl.w	r3, r2, r3
 8004b30:	69ba      	ldr	r2, [r7, #24]
 8004b32:	4313      	orrs	r3, r2
 8004b34:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 8004b36:	687b      	ldr	r3, [r7, #4]
 8004b38:	69ba      	ldr	r2, [r7, #24]
 8004b3a:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004b3c:	683b      	ldr	r3, [r7, #0]
 8004b3e:	685b      	ldr	r3, [r3, #4]
 8004b40:	f003 0303 	and.w	r3, r3, #3
 8004b44:	2b02      	cmp	r3, #2
 8004b46:	d123      	bne.n	8004b90 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8004b48:	69fb      	ldr	r3, [r7, #28]
 8004b4a:	08da      	lsrs	r2, r3, #3
 8004b4c:	687b      	ldr	r3, [r7, #4]
 8004b4e:	3208      	adds	r2, #8
 8004b50:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004b54:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004b56:	69fb      	ldr	r3, [r7, #28]
 8004b58:	f003 0307 	and.w	r3, r3, #7
 8004b5c:	009b      	lsls	r3, r3, #2
 8004b5e:	220f      	movs	r2, #15
 8004b60:	fa02 f303 	lsl.w	r3, r2, r3
 8004b64:	43db      	mvns	r3, r3
 8004b66:	69ba      	ldr	r2, [r7, #24]
 8004b68:	4013      	ands	r3, r2
 8004b6a:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8004b6c:	683b      	ldr	r3, [r7, #0]
 8004b6e:	691a      	ldr	r2, [r3, #16]
 8004b70:	69fb      	ldr	r3, [r7, #28]
 8004b72:	f003 0307 	and.w	r3, r3, #7
 8004b76:	009b      	lsls	r3, r3, #2
 8004b78:	fa02 f303 	lsl.w	r3, r2, r3
 8004b7c:	69ba      	ldr	r2, [r7, #24]
 8004b7e:	4313      	orrs	r3, r2
 8004b80:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8004b82:	69fb      	ldr	r3, [r7, #28]
 8004b84:	08da      	lsrs	r2, r3, #3
 8004b86:	687b      	ldr	r3, [r7, #4]
 8004b88:	3208      	adds	r2, #8
 8004b8a:	69b9      	ldr	r1, [r7, #24]
 8004b8c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8004b90:	687b      	ldr	r3, [r7, #4]
 8004b92:	681b      	ldr	r3, [r3, #0]
 8004b94:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004b96:	69fb      	ldr	r3, [r7, #28]
 8004b98:	005b      	lsls	r3, r3, #1
 8004b9a:	2203      	movs	r2, #3
 8004b9c:	fa02 f303 	lsl.w	r3, r2, r3
 8004ba0:	43db      	mvns	r3, r3
 8004ba2:	69ba      	ldr	r2, [r7, #24]
 8004ba4:	4013      	ands	r3, r2
 8004ba6:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004ba8:	683b      	ldr	r3, [r7, #0]
 8004baa:	685b      	ldr	r3, [r3, #4]
 8004bac:	f003 0203 	and.w	r2, r3, #3
 8004bb0:	69fb      	ldr	r3, [r7, #28]
 8004bb2:	005b      	lsls	r3, r3, #1
 8004bb4:	fa02 f303 	lsl.w	r3, r2, r3
 8004bb8:	69ba      	ldr	r2, [r7, #24]
 8004bba:	4313      	orrs	r3, r2
 8004bbc:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8004bbe:	687b      	ldr	r3, [r7, #4]
 8004bc0:	69ba      	ldr	r2, [r7, #24]
 8004bc2:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004bc4:	683b      	ldr	r3, [r7, #0]
 8004bc6:	685b      	ldr	r3, [r3, #4]
 8004bc8:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8004bcc:	2b00      	cmp	r3, #0
 8004bce:	f000 80a2 	beq.w	8004d16 <HAL_GPIO_Init+0x2ca>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004bd2:	2300      	movs	r3, #0
 8004bd4:	60fb      	str	r3, [r7, #12]
 8004bd6:	4b57      	ldr	r3, [pc, #348]	; (8004d34 <HAL_GPIO_Init+0x2e8>)
 8004bd8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004bda:	4a56      	ldr	r2, [pc, #344]	; (8004d34 <HAL_GPIO_Init+0x2e8>)
 8004bdc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004be0:	6453      	str	r3, [r2, #68]	; 0x44
 8004be2:	4b54      	ldr	r3, [pc, #336]	; (8004d34 <HAL_GPIO_Init+0x2e8>)
 8004be4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004be6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004bea:	60fb      	str	r3, [r7, #12]
 8004bec:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8004bee:	4a52      	ldr	r2, [pc, #328]	; (8004d38 <HAL_GPIO_Init+0x2ec>)
 8004bf0:	69fb      	ldr	r3, [r7, #28]
 8004bf2:	089b      	lsrs	r3, r3, #2
 8004bf4:	3302      	adds	r3, #2
 8004bf6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004bfa:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004bfc:	69fb      	ldr	r3, [r7, #28]
 8004bfe:	f003 0303 	and.w	r3, r3, #3
 8004c02:	009b      	lsls	r3, r3, #2
 8004c04:	220f      	movs	r2, #15
 8004c06:	fa02 f303 	lsl.w	r3, r2, r3
 8004c0a:	43db      	mvns	r3, r3
 8004c0c:	69ba      	ldr	r2, [r7, #24]
 8004c0e:	4013      	ands	r3, r2
 8004c10:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004c12:	687b      	ldr	r3, [r7, #4]
 8004c14:	4a49      	ldr	r2, [pc, #292]	; (8004d3c <HAL_GPIO_Init+0x2f0>)
 8004c16:	4293      	cmp	r3, r2
 8004c18:	d019      	beq.n	8004c4e <HAL_GPIO_Init+0x202>
 8004c1a:	687b      	ldr	r3, [r7, #4]
 8004c1c:	4a48      	ldr	r2, [pc, #288]	; (8004d40 <HAL_GPIO_Init+0x2f4>)
 8004c1e:	4293      	cmp	r3, r2
 8004c20:	d013      	beq.n	8004c4a <HAL_GPIO_Init+0x1fe>
 8004c22:	687b      	ldr	r3, [r7, #4]
 8004c24:	4a47      	ldr	r2, [pc, #284]	; (8004d44 <HAL_GPIO_Init+0x2f8>)
 8004c26:	4293      	cmp	r3, r2
 8004c28:	d00d      	beq.n	8004c46 <HAL_GPIO_Init+0x1fa>
 8004c2a:	687b      	ldr	r3, [r7, #4]
 8004c2c:	4a46      	ldr	r2, [pc, #280]	; (8004d48 <HAL_GPIO_Init+0x2fc>)
 8004c2e:	4293      	cmp	r3, r2
 8004c30:	d007      	beq.n	8004c42 <HAL_GPIO_Init+0x1f6>
 8004c32:	687b      	ldr	r3, [r7, #4]
 8004c34:	4a45      	ldr	r2, [pc, #276]	; (8004d4c <HAL_GPIO_Init+0x300>)
 8004c36:	4293      	cmp	r3, r2
 8004c38:	d101      	bne.n	8004c3e <HAL_GPIO_Init+0x1f2>
 8004c3a:	2304      	movs	r3, #4
 8004c3c:	e008      	b.n	8004c50 <HAL_GPIO_Init+0x204>
 8004c3e:	2307      	movs	r3, #7
 8004c40:	e006      	b.n	8004c50 <HAL_GPIO_Init+0x204>
 8004c42:	2303      	movs	r3, #3
 8004c44:	e004      	b.n	8004c50 <HAL_GPIO_Init+0x204>
 8004c46:	2302      	movs	r3, #2
 8004c48:	e002      	b.n	8004c50 <HAL_GPIO_Init+0x204>
 8004c4a:	2301      	movs	r3, #1
 8004c4c:	e000      	b.n	8004c50 <HAL_GPIO_Init+0x204>
 8004c4e:	2300      	movs	r3, #0
 8004c50:	69fa      	ldr	r2, [r7, #28]
 8004c52:	f002 0203 	and.w	r2, r2, #3
 8004c56:	0092      	lsls	r2, r2, #2
 8004c58:	4093      	lsls	r3, r2
 8004c5a:	69ba      	ldr	r2, [r7, #24]
 8004c5c:	4313      	orrs	r3, r2
 8004c5e:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004c60:	4935      	ldr	r1, [pc, #212]	; (8004d38 <HAL_GPIO_Init+0x2ec>)
 8004c62:	69fb      	ldr	r3, [r7, #28]
 8004c64:	089b      	lsrs	r3, r3, #2
 8004c66:	3302      	adds	r3, #2
 8004c68:	69ba      	ldr	r2, [r7, #24]
 8004c6a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004c6e:	4b38      	ldr	r3, [pc, #224]	; (8004d50 <HAL_GPIO_Init+0x304>)
 8004c70:	689b      	ldr	r3, [r3, #8]
 8004c72:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004c74:	693b      	ldr	r3, [r7, #16]
 8004c76:	43db      	mvns	r3, r3
 8004c78:	69ba      	ldr	r2, [r7, #24]
 8004c7a:	4013      	ands	r3, r2
 8004c7c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8004c7e:	683b      	ldr	r3, [r7, #0]
 8004c80:	685b      	ldr	r3, [r3, #4]
 8004c82:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004c86:	2b00      	cmp	r3, #0
 8004c88:	d003      	beq.n	8004c92 <HAL_GPIO_Init+0x246>
        {
          temp |= iocurrent;
 8004c8a:	69ba      	ldr	r2, [r7, #24]
 8004c8c:	693b      	ldr	r3, [r7, #16]
 8004c8e:	4313      	orrs	r3, r2
 8004c90:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8004c92:	4a2f      	ldr	r2, [pc, #188]	; (8004d50 <HAL_GPIO_Init+0x304>)
 8004c94:	69bb      	ldr	r3, [r7, #24]
 8004c96:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8004c98:	4b2d      	ldr	r3, [pc, #180]	; (8004d50 <HAL_GPIO_Init+0x304>)
 8004c9a:	68db      	ldr	r3, [r3, #12]
 8004c9c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004c9e:	693b      	ldr	r3, [r7, #16]
 8004ca0:	43db      	mvns	r3, r3
 8004ca2:	69ba      	ldr	r2, [r7, #24]
 8004ca4:	4013      	ands	r3, r2
 8004ca6:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8004ca8:	683b      	ldr	r3, [r7, #0]
 8004caa:	685b      	ldr	r3, [r3, #4]
 8004cac:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004cb0:	2b00      	cmp	r3, #0
 8004cb2:	d003      	beq.n	8004cbc <HAL_GPIO_Init+0x270>
        {
          temp |= iocurrent;
 8004cb4:	69ba      	ldr	r2, [r7, #24]
 8004cb6:	693b      	ldr	r3, [r7, #16]
 8004cb8:	4313      	orrs	r3, r2
 8004cba:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8004cbc:	4a24      	ldr	r2, [pc, #144]	; (8004d50 <HAL_GPIO_Init+0x304>)
 8004cbe:	69bb      	ldr	r3, [r7, #24]
 8004cc0:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 8004cc2:	4b23      	ldr	r3, [pc, #140]	; (8004d50 <HAL_GPIO_Init+0x304>)
 8004cc4:	685b      	ldr	r3, [r3, #4]
 8004cc6:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004cc8:	693b      	ldr	r3, [r7, #16]
 8004cca:	43db      	mvns	r3, r3
 8004ccc:	69ba      	ldr	r2, [r7, #24]
 8004cce:	4013      	ands	r3, r2
 8004cd0:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8004cd2:	683b      	ldr	r3, [r7, #0]
 8004cd4:	685b      	ldr	r3, [r3, #4]
 8004cd6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004cda:	2b00      	cmp	r3, #0
 8004cdc:	d003      	beq.n	8004ce6 <HAL_GPIO_Init+0x29a>
        {
          temp |= iocurrent;
 8004cde:	69ba      	ldr	r2, [r7, #24]
 8004ce0:	693b      	ldr	r3, [r7, #16]
 8004ce2:	4313      	orrs	r3, r2
 8004ce4:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8004ce6:	4a1a      	ldr	r2, [pc, #104]	; (8004d50 <HAL_GPIO_Init+0x304>)
 8004ce8:	69bb      	ldr	r3, [r7, #24]
 8004cea:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004cec:	4b18      	ldr	r3, [pc, #96]	; (8004d50 <HAL_GPIO_Init+0x304>)
 8004cee:	681b      	ldr	r3, [r3, #0]
 8004cf0:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004cf2:	693b      	ldr	r3, [r7, #16]
 8004cf4:	43db      	mvns	r3, r3
 8004cf6:	69ba      	ldr	r2, [r7, #24]
 8004cf8:	4013      	ands	r3, r2
 8004cfa:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004cfc:	683b      	ldr	r3, [r7, #0]
 8004cfe:	685b      	ldr	r3, [r3, #4]
 8004d00:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004d04:	2b00      	cmp	r3, #0
 8004d06:	d003      	beq.n	8004d10 <HAL_GPIO_Init+0x2c4>
        {
          temp |= iocurrent;
 8004d08:	69ba      	ldr	r2, [r7, #24]
 8004d0a:	693b      	ldr	r3, [r7, #16]
 8004d0c:	4313      	orrs	r3, r2
 8004d0e:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8004d10:	4a0f      	ldr	r2, [pc, #60]	; (8004d50 <HAL_GPIO_Init+0x304>)
 8004d12:	69bb      	ldr	r3, [r7, #24]
 8004d14:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004d16:	69fb      	ldr	r3, [r7, #28]
 8004d18:	3301      	adds	r3, #1
 8004d1a:	61fb      	str	r3, [r7, #28]
 8004d1c:	69fb      	ldr	r3, [r7, #28]
 8004d1e:	2b0f      	cmp	r3, #15
 8004d20:	f67f aea2 	bls.w	8004a68 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8004d24:	bf00      	nop
 8004d26:	bf00      	nop
 8004d28:	3724      	adds	r7, #36	; 0x24
 8004d2a:	46bd      	mov	sp, r7
 8004d2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d30:	4770      	bx	lr
 8004d32:	bf00      	nop
 8004d34:	40023800 	.word	0x40023800
 8004d38:	40013800 	.word	0x40013800
 8004d3c:	40020000 	.word	0x40020000
 8004d40:	40020400 	.word	0x40020400
 8004d44:	40020800 	.word	0x40020800
 8004d48:	40020c00 	.word	0x40020c00
 8004d4c:	40021000 	.word	0x40021000
 8004d50:	40013c00 	.word	0x40013c00

08004d54 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8004d54:	b480      	push	{r7}
 8004d56:	b085      	sub	sp, #20
 8004d58:	af00      	add	r7, sp, #0
 8004d5a:	6078      	str	r0, [r7, #4]
 8004d5c:	460b      	mov	r3, r1
 8004d5e:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004d60:	687b      	ldr	r3, [r7, #4]
 8004d62:	691a      	ldr	r2, [r3, #16]
 8004d64:	887b      	ldrh	r3, [r7, #2]
 8004d66:	4013      	ands	r3, r2
 8004d68:	2b00      	cmp	r3, #0
 8004d6a:	d002      	beq.n	8004d72 <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 8004d6c:	2301      	movs	r3, #1
 8004d6e:	73fb      	strb	r3, [r7, #15]
 8004d70:	e001      	b.n	8004d76 <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 8004d72:	2300      	movs	r3, #0
 8004d74:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 8004d76:	7bfb      	ldrb	r3, [r7, #15]
}
 8004d78:	4618      	mov	r0, r3
 8004d7a:	3714      	adds	r7, #20
 8004d7c:	46bd      	mov	sp, r7
 8004d7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d82:	4770      	bx	lr

08004d84 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8004d84:	b480      	push	{r7}
 8004d86:	b083      	sub	sp, #12
 8004d88:	af00      	add	r7, sp, #0
 8004d8a:	6078      	str	r0, [r7, #4]
 8004d8c:	460b      	mov	r3, r1
 8004d8e:	807b      	strh	r3, [r7, #2]
 8004d90:	4613      	mov	r3, r2
 8004d92:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004d94:	787b      	ldrb	r3, [r7, #1]
 8004d96:	2b00      	cmp	r3, #0
 8004d98:	d003      	beq.n	8004da2 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8004d9a:	887a      	ldrh	r2, [r7, #2]
 8004d9c:	687b      	ldr	r3, [r7, #4]
 8004d9e:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 8004da0:	e003      	b.n	8004daa <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004da2:	887b      	ldrh	r3, [r7, #2]
 8004da4:	041a      	lsls	r2, r3, #16
 8004da6:	687b      	ldr	r3, [r7, #4]
 8004da8:	619a      	str	r2, [r3, #24]
}
 8004daa:	bf00      	nop
 8004dac:	370c      	adds	r7, #12
 8004dae:	46bd      	mov	sp, r7
 8004db0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004db4:	4770      	bx	lr

08004db6 <HAL_GPIO_TogglePin>:
  *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427X devices.
  * @param  GPIO_Pin Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8004db6:	b480      	push	{r7}
 8004db8:	b085      	sub	sp, #20
 8004dba:	af00      	add	r7, sp, #0
 8004dbc:	6078      	str	r0, [r7, #4]
 8004dbe:	460b      	mov	r3, r1
 8004dc0:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004dc2:	687b      	ldr	r3, [r7, #4]
 8004dc4:	695b      	ldr	r3, [r3, #20]
 8004dc6:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004dc8:	887a      	ldrh	r2, [r7, #2]
 8004dca:	68fb      	ldr	r3, [r7, #12]
 8004dcc:	4013      	ands	r3, r2
 8004dce:	041a      	lsls	r2, r3, #16
 8004dd0:	68fb      	ldr	r3, [r7, #12]
 8004dd2:	43d9      	mvns	r1, r3
 8004dd4:	887b      	ldrh	r3, [r7, #2]
 8004dd6:	400b      	ands	r3, r1
 8004dd8:	431a      	orrs	r2, r3
 8004dda:	687b      	ldr	r3, [r7, #4]
 8004ddc:	619a      	str	r2, [r3, #24]
}
 8004dde:	bf00      	nop
 8004de0:	3714      	adds	r7, #20
 8004de2:	46bd      	mov	sp, r7
 8004de4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004de8:	4770      	bx	lr
	...

08004dec <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 8004dec:	b580      	push	{r7, lr}
 8004dee:	b082      	sub	sp, #8
 8004df0:	af00      	add	r7, sp, #0
 8004df2:	4603      	mov	r3, r0
 8004df4:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8004df6:	4b08      	ldr	r3, [pc, #32]	; (8004e18 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004df8:	695a      	ldr	r2, [r3, #20]
 8004dfa:	88fb      	ldrh	r3, [r7, #6]
 8004dfc:	4013      	ands	r3, r2
 8004dfe:	2b00      	cmp	r3, #0
 8004e00:	d006      	beq.n	8004e10 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8004e02:	4a05      	ldr	r2, [pc, #20]	; (8004e18 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004e04:	88fb      	ldrh	r3, [r7, #6]
 8004e06:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8004e08:	88fb      	ldrh	r3, [r7, #6]
 8004e0a:	4618      	mov	r0, r3
 8004e0c:	f7fe fe14 	bl	8003a38 <HAL_GPIO_EXTI_Callback>
  }
}
 8004e10:	bf00      	nop
 8004e12:	3708      	adds	r7, #8
 8004e14:	46bd      	mov	sp, r7
 8004e16:	bd80      	pop	{r7, pc}
 8004e18:	40013c00 	.word	0x40013c00

08004e1c <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8004e1c:	b580      	push	{r7, lr}
 8004e1e:	b084      	sub	sp, #16
 8004e20:	af00      	add	r7, sp, #0
 8004e22:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8004e24:	687b      	ldr	r3, [r7, #4]
 8004e26:	2b00      	cmp	r3, #0
 8004e28:	d101      	bne.n	8004e2e <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 8004e2a:	2301      	movs	r3, #1
 8004e2c:	e12b      	b.n	8005086 <HAL_I2C_Init+0x26a>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004e2e:	687b      	ldr	r3, [r7, #4]
 8004e30:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004e34:	b2db      	uxtb	r3, r3
 8004e36:	2b00      	cmp	r3, #0
 8004e38:	d106      	bne.n	8004e48 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 8004e3a:	687b      	ldr	r3, [r7, #4]
 8004e3c:	2200      	movs	r2, #0
 8004e3e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 8004e42:	6878      	ldr	r0, [r7, #4]
 8004e44:	f7fd ffa2 	bl	8002d8c <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8004e48:	687b      	ldr	r3, [r7, #4]
 8004e4a:	2224      	movs	r2, #36	; 0x24
 8004e4c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8004e50:	687b      	ldr	r3, [r7, #4]
 8004e52:	681b      	ldr	r3, [r3, #0]
 8004e54:	681a      	ldr	r2, [r3, #0]
 8004e56:	687b      	ldr	r3, [r7, #4]
 8004e58:	681b      	ldr	r3, [r3, #0]
 8004e5a:	f022 0201 	bic.w	r2, r2, #1
 8004e5e:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8004e60:	687b      	ldr	r3, [r7, #4]
 8004e62:	681b      	ldr	r3, [r3, #0]
 8004e64:	681a      	ldr	r2, [r3, #0]
 8004e66:	687b      	ldr	r3, [r7, #4]
 8004e68:	681b      	ldr	r3, [r3, #0]
 8004e6a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004e6e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8004e70:	687b      	ldr	r3, [r7, #4]
 8004e72:	681b      	ldr	r3, [r3, #0]
 8004e74:	681a      	ldr	r2, [r3, #0]
 8004e76:	687b      	ldr	r3, [r7, #4]
 8004e78:	681b      	ldr	r3, [r3, #0]
 8004e7a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004e7e:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8004e80:	f002 f8a0 	bl	8006fc4 <HAL_RCC_GetPCLK1Freq>
 8004e84:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004e86:	687b      	ldr	r3, [r7, #4]
 8004e88:	685b      	ldr	r3, [r3, #4]
 8004e8a:	4a81      	ldr	r2, [pc, #516]	; (8005090 <HAL_I2C_Init+0x274>)
 8004e8c:	4293      	cmp	r3, r2
 8004e8e:	d807      	bhi.n	8004ea0 <HAL_I2C_Init+0x84>
 8004e90:	68fb      	ldr	r3, [r7, #12]
 8004e92:	4a80      	ldr	r2, [pc, #512]	; (8005094 <HAL_I2C_Init+0x278>)
 8004e94:	4293      	cmp	r3, r2
 8004e96:	bf94      	ite	ls
 8004e98:	2301      	movls	r3, #1
 8004e9a:	2300      	movhi	r3, #0
 8004e9c:	b2db      	uxtb	r3, r3
 8004e9e:	e006      	b.n	8004eae <HAL_I2C_Init+0x92>
 8004ea0:	68fb      	ldr	r3, [r7, #12]
 8004ea2:	4a7d      	ldr	r2, [pc, #500]	; (8005098 <HAL_I2C_Init+0x27c>)
 8004ea4:	4293      	cmp	r3, r2
 8004ea6:	bf94      	ite	ls
 8004ea8:	2301      	movls	r3, #1
 8004eaa:	2300      	movhi	r3, #0
 8004eac:	b2db      	uxtb	r3, r3
 8004eae:	2b00      	cmp	r3, #0
 8004eb0:	d001      	beq.n	8004eb6 <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 8004eb2:	2301      	movs	r3, #1
 8004eb4:	e0e7      	b.n	8005086 <HAL_I2C_Init+0x26a>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 8004eb6:	68fb      	ldr	r3, [r7, #12]
 8004eb8:	4a78      	ldr	r2, [pc, #480]	; (800509c <HAL_I2C_Init+0x280>)
 8004eba:	fba2 2303 	umull	r2, r3, r2, r3
 8004ebe:	0c9b      	lsrs	r3, r3, #18
 8004ec0:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004ec2:	687b      	ldr	r3, [r7, #4]
 8004ec4:	681b      	ldr	r3, [r3, #0]
 8004ec6:	685b      	ldr	r3, [r3, #4]
 8004ec8:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8004ecc:	687b      	ldr	r3, [r7, #4]
 8004ece:	681b      	ldr	r3, [r3, #0]
 8004ed0:	68ba      	ldr	r2, [r7, #8]
 8004ed2:	430a      	orrs	r2, r1
 8004ed4:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004ed6:	687b      	ldr	r3, [r7, #4]
 8004ed8:	681b      	ldr	r3, [r3, #0]
 8004eda:	6a1b      	ldr	r3, [r3, #32]
 8004edc:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8004ee0:	687b      	ldr	r3, [r7, #4]
 8004ee2:	685b      	ldr	r3, [r3, #4]
 8004ee4:	4a6a      	ldr	r2, [pc, #424]	; (8005090 <HAL_I2C_Init+0x274>)
 8004ee6:	4293      	cmp	r3, r2
 8004ee8:	d802      	bhi.n	8004ef0 <HAL_I2C_Init+0xd4>
 8004eea:	68bb      	ldr	r3, [r7, #8]
 8004eec:	3301      	adds	r3, #1
 8004eee:	e009      	b.n	8004f04 <HAL_I2C_Init+0xe8>
 8004ef0:	68bb      	ldr	r3, [r7, #8]
 8004ef2:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8004ef6:	fb02 f303 	mul.w	r3, r2, r3
 8004efa:	4a69      	ldr	r2, [pc, #420]	; (80050a0 <HAL_I2C_Init+0x284>)
 8004efc:	fba2 2303 	umull	r2, r3, r2, r3
 8004f00:	099b      	lsrs	r3, r3, #6
 8004f02:	3301      	adds	r3, #1
 8004f04:	687a      	ldr	r2, [r7, #4]
 8004f06:	6812      	ldr	r2, [r2, #0]
 8004f08:	430b      	orrs	r3, r1
 8004f0a:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004f0c:	687b      	ldr	r3, [r7, #4]
 8004f0e:	681b      	ldr	r3, [r3, #0]
 8004f10:	69db      	ldr	r3, [r3, #28]
 8004f12:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8004f16:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8004f1a:	687b      	ldr	r3, [r7, #4]
 8004f1c:	685b      	ldr	r3, [r3, #4]
 8004f1e:	495c      	ldr	r1, [pc, #368]	; (8005090 <HAL_I2C_Init+0x274>)
 8004f20:	428b      	cmp	r3, r1
 8004f22:	d819      	bhi.n	8004f58 <HAL_I2C_Init+0x13c>
 8004f24:	68fb      	ldr	r3, [r7, #12]
 8004f26:	1e59      	subs	r1, r3, #1
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	685b      	ldr	r3, [r3, #4]
 8004f2c:	005b      	lsls	r3, r3, #1
 8004f2e:	fbb1 f3f3 	udiv	r3, r1, r3
 8004f32:	1c59      	adds	r1, r3, #1
 8004f34:	f640 73fc 	movw	r3, #4092	; 0xffc
 8004f38:	400b      	ands	r3, r1
 8004f3a:	2b00      	cmp	r3, #0
 8004f3c:	d00a      	beq.n	8004f54 <HAL_I2C_Init+0x138>
 8004f3e:	68fb      	ldr	r3, [r7, #12]
 8004f40:	1e59      	subs	r1, r3, #1
 8004f42:	687b      	ldr	r3, [r7, #4]
 8004f44:	685b      	ldr	r3, [r3, #4]
 8004f46:	005b      	lsls	r3, r3, #1
 8004f48:	fbb1 f3f3 	udiv	r3, r1, r3
 8004f4c:	3301      	adds	r3, #1
 8004f4e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004f52:	e051      	b.n	8004ff8 <HAL_I2C_Init+0x1dc>
 8004f54:	2304      	movs	r3, #4
 8004f56:	e04f      	b.n	8004ff8 <HAL_I2C_Init+0x1dc>
 8004f58:	687b      	ldr	r3, [r7, #4]
 8004f5a:	689b      	ldr	r3, [r3, #8]
 8004f5c:	2b00      	cmp	r3, #0
 8004f5e:	d111      	bne.n	8004f84 <HAL_I2C_Init+0x168>
 8004f60:	68fb      	ldr	r3, [r7, #12]
 8004f62:	1e58      	subs	r0, r3, #1
 8004f64:	687b      	ldr	r3, [r7, #4]
 8004f66:	6859      	ldr	r1, [r3, #4]
 8004f68:	460b      	mov	r3, r1
 8004f6a:	005b      	lsls	r3, r3, #1
 8004f6c:	440b      	add	r3, r1
 8004f6e:	fbb0 f3f3 	udiv	r3, r0, r3
 8004f72:	3301      	adds	r3, #1
 8004f74:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004f78:	2b00      	cmp	r3, #0
 8004f7a:	bf0c      	ite	eq
 8004f7c:	2301      	moveq	r3, #1
 8004f7e:	2300      	movne	r3, #0
 8004f80:	b2db      	uxtb	r3, r3
 8004f82:	e012      	b.n	8004faa <HAL_I2C_Init+0x18e>
 8004f84:	68fb      	ldr	r3, [r7, #12]
 8004f86:	1e58      	subs	r0, r3, #1
 8004f88:	687b      	ldr	r3, [r7, #4]
 8004f8a:	6859      	ldr	r1, [r3, #4]
 8004f8c:	460b      	mov	r3, r1
 8004f8e:	009b      	lsls	r3, r3, #2
 8004f90:	440b      	add	r3, r1
 8004f92:	0099      	lsls	r1, r3, #2
 8004f94:	440b      	add	r3, r1
 8004f96:	fbb0 f3f3 	udiv	r3, r0, r3
 8004f9a:	3301      	adds	r3, #1
 8004f9c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004fa0:	2b00      	cmp	r3, #0
 8004fa2:	bf0c      	ite	eq
 8004fa4:	2301      	moveq	r3, #1
 8004fa6:	2300      	movne	r3, #0
 8004fa8:	b2db      	uxtb	r3, r3
 8004faa:	2b00      	cmp	r3, #0
 8004fac:	d001      	beq.n	8004fb2 <HAL_I2C_Init+0x196>
 8004fae:	2301      	movs	r3, #1
 8004fb0:	e022      	b.n	8004ff8 <HAL_I2C_Init+0x1dc>
 8004fb2:	687b      	ldr	r3, [r7, #4]
 8004fb4:	689b      	ldr	r3, [r3, #8]
 8004fb6:	2b00      	cmp	r3, #0
 8004fb8:	d10e      	bne.n	8004fd8 <HAL_I2C_Init+0x1bc>
 8004fba:	68fb      	ldr	r3, [r7, #12]
 8004fbc:	1e58      	subs	r0, r3, #1
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	6859      	ldr	r1, [r3, #4]
 8004fc2:	460b      	mov	r3, r1
 8004fc4:	005b      	lsls	r3, r3, #1
 8004fc6:	440b      	add	r3, r1
 8004fc8:	fbb0 f3f3 	udiv	r3, r0, r3
 8004fcc:	3301      	adds	r3, #1
 8004fce:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004fd2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004fd6:	e00f      	b.n	8004ff8 <HAL_I2C_Init+0x1dc>
 8004fd8:	68fb      	ldr	r3, [r7, #12]
 8004fda:	1e58      	subs	r0, r3, #1
 8004fdc:	687b      	ldr	r3, [r7, #4]
 8004fde:	6859      	ldr	r1, [r3, #4]
 8004fe0:	460b      	mov	r3, r1
 8004fe2:	009b      	lsls	r3, r3, #2
 8004fe4:	440b      	add	r3, r1
 8004fe6:	0099      	lsls	r1, r3, #2
 8004fe8:	440b      	add	r3, r1
 8004fea:	fbb0 f3f3 	udiv	r3, r0, r3
 8004fee:	3301      	adds	r3, #1
 8004ff0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004ff4:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8004ff8:	6879      	ldr	r1, [r7, #4]
 8004ffa:	6809      	ldr	r1, [r1, #0]
 8004ffc:	4313      	orrs	r3, r2
 8004ffe:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8005000:	687b      	ldr	r3, [r7, #4]
 8005002:	681b      	ldr	r3, [r3, #0]
 8005004:	681b      	ldr	r3, [r3, #0]
 8005006:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 800500a:	687b      	ldr	r3, [r7, #4]
 800500c:	69da      	ldr	r2, [r3, #28]
 800500e:	687b      	ldr	r3, [r7, #4]
 8005010:	6a1b      	ldr	r3, [r3, #32]
 8005012:	431a      	orrs	r2, r3
 8005014:	687b      	ldr	r3, [r7, #4]
 8005016:	681b      	ldr	r3, [r3, #0]
 8005018:	430a      	orrs	r2, r1
 800501a:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800501c:	687b      	ldr	r3, [r7, #4]
 800501e:	681b      	ldr	r3, [r3, #0]
 8005020:	689b      	ldr	r3, [r3, #8]
 8005022:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8005026:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800502a:	687a      	ldr	r2, [r7, #4]
 800502c:	6911      	ldr	r1, [r2, #16]
 800502e:	687a      	ldr	r2, [r7, #4]
 8005030:	68d2      	ldr	r2, [r2, #12]
 8005032:	4311      	orrs	r1, r2
 8005034:	687a      	ldr	r2, [r7, #4]
 8005036:	6812      	ldr	r2, [r2, #0]
 8005038:	430b      	orrs	r3, r1
 800503a:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800503c:	687b      	ldr	r3, [r7, #4]
 800503e:	681b      	ldr	r3, [r3, #0]
 8005040:	68db      	ldr	r3, [r3, #12]
 8005042:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8005046:	687b      	ldr	r3, [r7, #4]
 8005048:	695a      	ldr	r2, [r3, #20]
 800504a:	687b      	ldr	r3, [r7, #4]
 800504c:	699b      	ldr	r3, [r3, #24]
 800504e:	431a      	orrs	r2, r3
 8005050:	687b      	ldr	r3, [r7, #4]
 8005052:	681b      	ldr	r3, [r3, #0]
 8005054:	430a      	orrs	r2, r1
 8005056:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 8005058:	687b      	ldr	r3, [r7, #4]
 800505a:	681b      	ldr	r3, [r3, #0]
 800505c:	681a      	ldr	r2, [r3, #0]
 800505e:	687b      	ldr	r3, [r7, #4]
 8005060:	681b      	ldr	r3, [r3, #0]
 8005062:	f042 0201 	orr.w	r2, r2, #1
 8005066:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005068:	687b      	ldr	r3, [r7, #4]
 800506a:	2200      	movs	r2, #0
 800506c:	641a      	str	r2, [r3, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800506e:	687b      	ldr	r3, [r7, #4]
 8005070:	2220      	movs	r2, #32
 8005072:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8005076:	687b      	ldr	r3, [r7, #4]
 8005078:	2200      	movs	r2, #0
 800507a:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800507c:	687b      	ldr	r3, [r7, #4]
 800507e:	2200      	movs	r2, #0
 8005080:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

  return HAL_OK;
 8005084:	2300      	movs	r3, #0
}
 8005086:	4618      	mov	r0, r3
 8005088:	3710      	adds	r7, #16
 800508a:	46bd      	mov	sp, r7
 800508c:	bd80      	pop	{r7, pc}
 800508e:	bf00      	nop
 8005090:	000186a0 	.word	0x000186a0
 8005094:	001e847f 	.word	0x001e847f
 8005098:	003d08ff 	.word	0x003d08ff
 800509c:	431bde83 	.word	0x431bde83
 80050a0:	10624dd3 	.word	0x10624dd3

080050a4 <HAL_I2C_Master_Transmit>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80050a4:	b580      	push	{r7, lr}
 80050a6:	b088      	sub	sp, #32
 80050a8:	af02      	add	r7, sp, #8
 80050aa:	60f8      	str	r0, [r7, #12]
 80050ac:	607a      	str	r2, [r7, #4]
 80050ae:	461a      	mov	r2, r3
 80050b0:	460b      	mov	r3, r1
 80050b2:	817b      	strh	r3, [r7, #10]
 80050b4:	4613      	mov	r3, r2
 80050b6:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 80050b8:	f7fe ff7a 	bl	8003fb0 <HAL_GetTick>
 80050bc:	6178      	str	r0, [r7, #20]

  if (hi2c->State == HAL_I2C_STATE_READY)
 80050be:	68fb      	ldr	r3, [r7, #12]
 80050c0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80050c4:	b2db      	uxtb	r3, r3
 80050c6:	2b20      	cmp	r3, #32
 80050c8:	f040 80e0 	bne.w	800528c <HAL_I2C_Master_Transmit+0x1e8>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80050cc:	697b      	ldr	r3, [r7, #20]
 80050ce:	9300      	str	r3, [sp, #0]
 80050d0:	2319      	movs	r3, #25
 80050d2:	2201      	movs	r2, #1
 80050d4:	4970      	ldr	r1, [pc, #448]	; (8005298 <HAL_I2C_Master_Transmit+0x1f4>)
 80050d6:	68f8      	ldr	r0, [r7, #12]
 80050d8:	f001 f90e 	bl	80062f8 <I2C_WaitOnFlagUntilTimeout>
 80050dc:	4603      	mov	r3, r0
 80050de:	2b00      	cmp	r3, #0
 80050e0:	d001      	beq.n	80050e6 <HAL_I2C_Master_Transmit+0x42>
    {
      return HAL_BUSY;
 80050e2:	2302      	movs	r3, #2
 80050e4:	e0d3      	b.n	800528e <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 80050e6:	68fb      	ldr	r3, [r7, #12]
 80050e8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80050ec:	2b01      	cmp	r3, #1
 80050ee:	d101      	bne.n	80050f4 <HAL_I2C_Master_Transmit+0x50>
 80050f0:	2302      	movs	r3, #2
 80050f2:	e0cc      	b.n	800528e <HAL_I2C_Master_Transmit+0x1ea>
 80050f4:	68fb      	ldr	r3, [r7, #12]
 80050f6:	2201      	movs	r2, #1
 80050f8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80050fc:	68fb      	ldr	r3, [r7, #12]
 80050fe:	681b      	ldr	r3, [r3, #0]
 8005100:	681b      	ldr	r3, [r3, #0]
 8005102:	f003 0301 	and.w	r3, r3, #1
 8005106:	2b01      	cmp	r3, #1
 8005108:	d007      	beq.n	800511a <HAL_I2C_Master_Transmit+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 800510a:	68fb      	ldr	r3, [r7, #12]
 800510c:	681b      	ldr	r3, [r3, #0]
 800510e:	681a      	ldr	r2, [r3, #0]
 8005110:	68fb      	ldr	r3, [r7, #12]
 8005112:	681b      	ldr	r3, [r3, #0]
 8005114:	f042 0201 	orr.w	r2, r2, #1
 8005118:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800511a:	68fb      	ldr	r3, [r7, #12]
 800511c:	681b      	ldr	r3, [r3, #0]
 800511e:	681a      	ldr	r2, [r3, #0]
 8005120:	68fb      	ldr	r3, [r7, #12]
 8005122:	681b      	ldr	r3, [r3, #0]
 8005124:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005128:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 800512a:	68fb      	ldr	r3, [r7, #12]
 800512c:	2221      	movs	r2, #33	; 0x21
 800512e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 8005132:	68fb      	ldr	r3, [r7, #12]
 8005134:	2210      	movs	r2, #16
 8005136:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 800513a:	68fb      	ldr	r3, [r7, #12]
 800513c:	2200      	movs	r2, #0
 800513e:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 8005140:	68fb      	ldr	r3, [r7, #12]
 8005142:	687a      	ldr	r2, [r7, #4]
 8005144:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005146:	68fb      	ldr	r3, [r7, #12]
 8005148:	893a      	ldrh	r2, [r7, #8]
 800514a:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800514c:	68fb      	ldr	r3, [r7, #12]
 800514e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005150:	b29a      	uxth	r2, r3
 8005152:	68fb      	ldr	r3, [r7, #12]
 8005154:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005156:	68fb      	ldr	r3, [r7, #12]
 8005158:	4a50      	ldr	r2, [pc, #320]	; (800529c <HAL_I2C_Master_Transmit+0x1f8>)
 800515a:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestWrite(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 800515c:	8979      	ldrh	r1, [r7, #10]
 800515e:	697b      	ldr	r3, [r7, #20]
 8005160:	6a3a      	ldr	r2, [r7, #32]
 8005162:	68f8      	ldr	r0, [r7, #12]
 8005164:	f000 fdfa 	bl	8005d5c <I2C_MasterRequestWrite>
 8005168:	4603      	mov	r3, r0
 800516a:	2b00      	cmp	r3, #0
 800516c:	d001      	beq.n	8005172 <HAL_I2C_Master_Transmit+0xce>
    {
      return HAL_ERROR;
 800516e:	2301      	movs	r3, #1
 8005170:	e08d      	b.n	800528e <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005172:	2300      	movs	r3, #0
 8005174:	613b      	str	r3, [r7, #16]
 8005176:	68fb      	ldr	r3, [r7, #12]
 8005178:	681b      	ldr	r3, [r3, #0]
 800517a:	695b      	ldr	r3, [r3, #20]
 800517c:	613b      	str	r3, [r7, #16]
 800517e:	68fb      	ldr	r3, [r7, #12]
 8005180:	681b      	ldr	r3, [r3, #0]
 8005182:	699b      	ldr	r3, [r3, #24]
 8005184:	613b      	str	r3, [r7, #16]
 8005186:	693b      	ldr	r3, [r7, #16]

    while (hi2c->XferSize > 0U)
 8005188:	e066      	b.n	8005258 <HAL_I2C_Master_Transmit+0x1b4>
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800518a:	697a      	ldr	r2, [r7, #20]
 800518c:	6a39      	ldr	r1, [r7, #32]
 800518e:	68f8      	ldr	r0, [r7, #12]
 8005190:	f001 f9cc 	bl	800652c <I2C_WaitOnTXEFlagUntilTimeout>
 8005194:	4603      	mov	r3, r0
 8005196:	2b00      	cmp	r3, #0
 8005198:	d00d      	beq.n	80051b6 <HAL_I2C_Master_Transmit+0x112>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800519a:	68fb      	ldr	r3, [r7, #12]
 800519c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800519e:	2b04      	cmp	r3, #4
 80051a0:	d107      	bne.n	80051b2 <HAL_I2C_Master_Transmit+0x10e>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80051a2:	68fb      	ldr	r3, [r7, #12]
 80051a4:	681b      	ldr	r3, [r3, #0]
 80051a6:	681a      	ldr	r2, [r3, #0]
 80051a8:	68fb      	ldr	r3, [r7, #12]
 80051aa:	681b      	ldr	r3, [r3, #0]
 80051ac:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80051b0:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 80051b2:	2301      	movs	r3, #1
 80051b4:	e06b      	b.n	800528e <HAL_I2C_Master_Transmit+0x1ea>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80051b6:	68fb      	ldr	r3, [r7, #12]
 80051b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051ba:	781a      	ldrb	r2, [r3, #0]
 80051bc:	68fb      	ldr	r3, [r7, #12]
 80051be:	681b      	ldr	r3, [r3, #0]
 80051c0:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 80051c2:	68fb      	ldr	r3, [r7, #12]
 80051c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051c6:	1c5a      	adds	r2, r3, #1
 80051c8:	68fb      	ldr	r3, [r7, #12]
 80051ca:	625a      	str	r2, [r3, #36]	; 0x24

      /* Update counter */
      hi2c->XferCount--;
 80051cc:	68fb      	ldr	r3, [r7, #12]
 80051ce:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80051d0:	b29b      	uxth	r3, r3
 80051d2:	3b01      	subs	r3, #1
 80051d4:	b29a      	uxth	r2, r3
 80051d6:	68fb      	ldr	r3, [r7, #12]
 80051d8:	855a      	strh	r2, [r3, #42]	; 0x2a
      hi2c->XferSize--;
 80051da:	68fb      	ldr	r3, [r7, #12]
 80051dc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80051de:	3b01      	subs	r3, #1
 80051e0:	b29a      	uxth	r2, r3
 80051e2:	68fb      	ldr	r3, [r7, #12]
 80051e4:	851a      	strh	r2, [r3, #40]	; 0x28

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80051e6:	68fb      	ldr	r3, [r7, #12]
 80051e8:	681b      	ldr	r3, [r3, #0]
 80051ea:	695b      	ldr	r3, [r3, #20]
 80051ec:	f003 0304 	and.w	r3, r3, #4
 80051f0:	2b04      	cmp	r3, #4
 80051f2:	d11b      	bne.n	800522c <HAL_I2C_Master_Transmit+0x188>
 80051f4:	68fb      	ldr	r3, [r7, #12]
 80051f6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80051f8:	2b00      	cmp	r3, #0
 80051fa:	d017      	beq.n	800522c <HAL_I2C_Master_Transmit+0x188>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 80051fc:	68fb      	ldr	r3, [r7, #12]
 80051fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005200:	781a      	ldrb	r2, [r3, #0]
 8005202:	68fb      	ldr	r3, [r7, #12]
 8005204:	681b      	ldr	r3, [r3, #0]
 8005206:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8005208:	68fb      	ldr	r3, [r7, #12]
 800520a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800520c:	1c5a      	adds	r2, r3, #1
 800520e:	68fb      	ldr	r3, [r7, #12]
 8005210:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferCount--;
 8005212:	68fb      	ldr	r3, [r7, #12]
 8005214:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005216:	b29b      	uxth	r3, r3
 8005218:	3b01      	subs	r3, #1
 800521a:	b29a      	uxth	r2, r3
 800521c:	68fb      	ldr	r3, [r7, #12]
 800521e:	855a      	strh	r2, [r3, #42]	; 0x2a
        hi2c->XferSize--;
 8005220:	68fb      	ldr	r3, [r7, #12]
 8005222:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005224:	3b01      	subs	r3, #1
 8005226:	b29a      	uxth	r2, r3
 8005228:	68fb      	ldr	r3, [r7, #12]
 800522a:	851a      	strh	r2, [r3, #40]	; 0x28
      }

      /* Wait until BTF flag is set */
      if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800522c:	697a      	ldr	r2, [r7, #20]
 800522e:	6a39      	ldr	r1, [r7, #32]
 8005230:	68f8      	ldr	r0, [r7, #12]
 8005232:	f001 f9c3 	bl	80065bc <I2C_WaitOnBTFFlagUntilTimeout>
 8005236:	4603      	mov	r3, r0
 8005238:	2b00      	cmp	r3, #0
 800523a:	d00d      	beq.n	8005258 <HAL_I2C_Master_Transmit+0x1b4>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800523c:	68fb      	ldr	r3, [r7, #12]
 800523e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005240:	2b04      	cmp	r3, #4
 8005242:	d107      	bne.n	8005254 <HAL_I2C_Master_Transmit+0x1b0>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005244:	68fb      	ldr	r3, [r7, #12]
 8005246:	681b      	ldr	r3, [r3, #0]
 8005248:	681a      	ldr	r2, [r3, #0]
 800524a:	68fb      	ldr	r3, [r7, #12]
 800524c:	681b      	ldr	r3, [r3, #0]
 800524e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005252:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 8005254:	2301      	movs	r3, #1
 8005256:	e01a      	b.n	800528e <HAL_I2C_Master_Transmit+0x1ea>
    while (hi2c->XferSize > 0U)
 8005258:	68fb      	ldr	r3, [r7, #12]
 800525a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800525c:	2b00      	cmp	r3, #0
 800525e:	d194      	bne.n	800518a <HAL_I2C_Master_Transmit+0xe6>
      }
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005260:	68fb      	ldr	r3, [r7, #12]
 8005262:	681b      	ldr	r3, [r3, #0]
 8005264:	681a      	ldr	r2, [r3, #0]
 8005266:	68fb      	ldr	r3, [r7, #12]
 8005268:	681b      	ldr	r3, [r3, #0]
 800526a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800526e:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005270:	68fb      	ldr	r3, [r7, #12]
 8005272:	2220      	movs	r2, #32
 8005274:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005278:	68fb      	ldr	r3, [r7, #12]
 800527a:	2200      	movs	r2, #0
 800527c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005280:	68fb      	ldr	r3, [r7, #12]
 8005282:	2200      	movs	r2, #0
 8005284:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 8005288:	2300      	movs	r3, #0
 800528a:	e000      	b.n	800528e <HAL_I2C_Master_Transmit+0x1ea>
  }
  else
  {
    return HAL_BUSY;
 800528c:	2302      	movs	r3, #2
  }
}
 800528e:	4618      	mov	r0, r3
 8005290:	3718      	adds	r7, #24
 8005292:	46bd      	mov	sp, r7
 8005294:	bd80      	pop	{r7, pc}
 8005296:	bf00      	nop
 8005298:	00100002 	.word	0x00100002
 800529c:	ffff0000 	.word	0xffff0000

080052a0 <HAL_I2C_Master_Receive>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80052a0:	b580      	push	{r7, lr}
 80052a2:	b08c      	sub	sp, #48	; 0x30
 80052a4:	af02      	add	r7, sp, #8
 80052a6:	60f8      	str	r0, [r7, #12]
 80052a8:	607a      	str	r2, [r7, #4]
 80052aa:	461a      	mov	r2, r3
 80052ac:	460b      	mov	r3, r1
 80052ae:	817b      	strh	r3, [r7, #10]
 80052b0:	4613      	mov	r3, r2
 80052b2:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 80052b4:	f7fe fe7c 	bl	8003fb0 <HAL_GetTick>
 80052b8:	6278      	str	r0, [r7, #36]	; 0x24

  if (hi2c->State == HAL_I2C_STATE_READY)
 80052ba:	68fb      	ldr	r3, [r7, #12]
 80052bc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80052c0:	b2db      	uxtb	r3, r3
 80052c2:	2b20      	cmp	r3, #32
 80052c4:	f040 8217 	bne.w	80056f6 <HAL_I2C_Master_Receive+0x456>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80052c8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80052ca:	9300      	str	r3, [sp, #0]
 80052cc:	2319      	movs	r3, #25
 80052ce:	2201      	movs	r2, #1
 80052d0:	497c      	ldr	r1, [pc, #496]	; (80054c4 <HAL_I2C_Master_Receive+0x224>)
 80052d2:	68f8      	ldr	r0, [r7, #12]
 80052d4:	f001 f810 	bl	80062f8 <I2C_WaitOnFlagUntilTimeout>
 80052d8:	4603      	mov	r3, r0
 80052da:	2b00      	cmp	r3, #0
 80052dc:	d001      	beq.n	80052e2 <HAL_I2C_Master_Receive+0x42>
    {
      return HAL_BUSY;
 80052de:	2302      	movs	r3, #2
 80052e0:	e20a      	b.n	80056f8 <HAL_I2C_Master_Receive+0x458>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 80052e2:	68fb      	ldr	r3, [r7, #12]
 80052e4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80052e8:	2b01      	cmp	r3, #1
 80052ea:	d101      	bne.n	80052f0 <HAL_I2C_Master_Receive+0x50>
 80052ec:	2302      	movs	r3, #2
 80052ee:	e203      	b.n	80056f8 <HAL_I2C_Master_Receive+0x458>
 80052f0:	68fb      	ldr	r3, [r7, #12]
 80052f2:	2201      	movs	r2, #1
 80052f4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80052f8:	68fb      	ldr	r3, [r7, #12]
 80052fa:	681b      	ldr	r3, [r3, #0]
 80052fc:	681b      	ldr	r3, [r3, #0]
 80052fe:	f003 0301 	and.w	r3, r3, #1
 8005302:	2b01      	cmp	r3, #1
 8005304:	d007      	beq.n	8005316 <HAL_I2C_Master_Receive+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8005306:	68fb      	ldr	r3, [r7, #12]
 8005308:	681b      	ldr	r3, [r3, #0]
 800530a:	681a      	ldr	r2, [r3, #0]
 800530c:	68fb      	ldr	r3, [r7, #12]
 800530e:	681b      	ldr	r3, [r3, #0]
 8005310:	f042 0201 	orr.w	r2, r2, #1
 8005314:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005316:	68fb      	ldr	r3, [r7, #12]
 8005318:	681b      	ldr	r3, [r3, #0]
 800531a:	681a      	ldr	r2, [r3, #0]
 800531c:	68fb      	ldr	r3, [r7, #12]
 800531e:	681b      	ldr	r3, [r3, #0]
 8005320:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005324:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 8005326:	68fb      	ldr	r3, [r7, #12]
 8005328:	2222      	movs	r2, #34	; 0x22
 800532a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 800532e:	68fb      	ldr	r3, [r7, #12]
 8005330:	2210      	movs	r2, #16
 8005332:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 8005336:	68fb      	ldr	r3, [r7, #12]
 8005338:	2200      	movs	r2, #0
 800533a:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 800533c:	68fb      	ldr	r3, [r7, #12]
 800533e:	687a      	ldr	r2, [r7, #4]
 8005340:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005342:	68fb      	ldr	r3, [r7, #12]
 8005344:	893a      	ldrh	r2, [r7, #8]
 8005346:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8005348:	68fb      	ldr	r3, [r7, #12]
 800534a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800534c:	b29a      	uxth	r2, r3
 800534e:	68fb      	ldr	r3, [r7, #12]
 8005350:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005352:	68fb      	ldr	r3, [r7, #12]
 8005354:	4a5c      	ldr	r2, [pc, #368]	; (80054c8 <HAL_I2C_Master_Receive+0x228>)
 8005356:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestRead(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 8005358:	8979      	ldrh	r1, [r7, #10]
 800535a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800535c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800535e:	68f8      	ldr	r0, [r7, #12]
 8005360:	f000 fd7e 	bl	8005e60 <I2C_MasterRequestRead>
 8005364:	4603      	mov	r3, r0
 8005366:	2b00      	cmp	r3, #0
 8005368:	d001      	beq.n	800536e <HAL_I2C_Master_Receive+0xce>
    {
      return HAL_ERROR;
 800536a:	2301      	movs	r3, #1
 800536c:	e1c4      	b.n	80056f8 <HAL_I2C_Master_Receive+0x458>
    }

    if (hi2c->XferSize == 0U)
 800536e:	68fb      	ldr	r3, [r7, #12]
 8005370:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005372:	2b00      	cmp	r3, #0
 8005374:	d113      	bne.n	800539e <HAL_I2C_Master_Receive+0xfe>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005376:	2300      	movs	r3, #0
 8005378:	623b      	str	r3, [r7, #32]
 800537a:	68fb      	ldr	r3, [r7, #12]
 800537c:	681b      	ldr	r3, [r3, #0]
 800537e:	695b      	ldr	r3, [r3, #20]
 8005380:	623b      	str	r3, [r7, #32]
 8005382:	68fb      	ldr	r3, [r7, #12]
 8005384:	681b      	ldr	r3, [r3, #0]
 8005386:	699b      	ldr	r3, [r3, #24]
 8005388:	623b      	str	r3, [r7, #32]
 800538a:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800538c:	68fb      	ldr	r3, [r7, #12]
 800538e:	681b      	ldr	r3, [r3, #0]
 8005390:	681a      	ldr	r2, [r3, #0]
 8005392:	68fb      	ldr	r3, [r7, #12]
 8005394:	681b      	ldr	r3, [r3, #0]
 8005396:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800539a:	601a      	str	r2, [r3, #0]
 800539c:	e198      	b.n	80056d0 <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 1U)
 800539e:	68fb      	ldr	r3, [r7, #12]
 80053a0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80053a2:	2b01      	cmp	r3, #1
 80053a4:	d11b      	bne.n	80053de <HAL_I2C_Master_Receive+0x13e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80053a6:	68fb      	ldr	r3, [r7, #12]
 80053a8:	681b      	ldr	r3, [r3, #0]
 80053aa:	681a      	ldr	r2, [r3, #0]
 80053ac:	68fb      	ldr	r3, [r7, #12]
 80053ae:	681b      	ldr	r3, [r3, #0]
 80053b0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80053b4:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80053b6:	2300      	movs	r3, #0
 80053b8:	61fb      	str	r3, [r7, #28]
 80053ba:	68fb      	ldr	r3, [r7, #12]
 80053bc:	681b      	ldr	r3, [r3, #0]
 80053be:	695b      	ldr	r3, [r3, #20]
 80053c0:	61fb      	str	r3, [r7, #28]
 80053c2:	68fb      	ldr	r3, [r7, #12]
 80053c4:	681b      	ldr	r3, [r3, #0]
 80053c6:	699b      	ldr	r3, [r3, #24]
 80053c8:	61fb      	str	r3, [r7, #28]
 80053ca:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80053cc:	68fb      	ldr	r3, [r7, #12]
 80053ce:	681b      	ldr	r3, [r3, #0]
 80053d0:	681a      	ldr	r2, [r3, #0]
 80053d2:	68fb      	ldr	r3, [r7, #12]
 80053d4:	681b      	ldr	r3, [r3, #0]
 80053d6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80053da:	601a      	str	r2, [r3, #0]
 80053dc:	e178      	b.n	80056d0 <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 2U)
 80053de:	68fb      	ldr	r3, [r7, #12]
 80053e0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80053e2:	2b02      	cmp	r3, #2
 80053e4:	d11b      	bne.n	800541e <HAL_I2C_Master_Receive+0x17e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80053e6:	68fb      	ldr	r3, [r7, #12]
 80053e8:	681b      	ldr	r3, [r3, #0]
 80053ea:	681a      	ldr	r2, [r3, #0]
 80053ec:	68fb      	ldr	r3, [r7, #12]
 80053ee:	681b      	ldr	r3, [r3, #0]
 80053f0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80053f4:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80053f6:	68fb      	ldr	r3, [r7, #12]
 80053f8:	681b      	ldr	r3, [r3, #0]
 80053fa:	681a      	ldr	r2, [r3, #0]
 80053fc:	68fb      	ldr	r3, [r7, #12]
 80053fe:	681b      	ldr	r3, [r3, #0]
 8005400:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005404:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005406:	2300      	movs	r3, #0
 8005408:	61bb      	str	r3, [r7, #24]
 800540a:	68fb      	ldr	r3, [r7, #12]
 800540c:	681b      	ldr	r3, [r3, #0]
 800540e:	695b      	ldr	r3, [r3, #20]
 8005410:	61bb      	str	r3, [r7, #24]
 8005412:	68fb      	ldr	r3, [r7, #12]
 8005414:	681b      	ldr	r3, [r3, #0]
 8005416:	699b      	ldr	r3, [r3, #24]
 8005418:	61bb      	str	r3, [r7, #24]
 800541a:	69bb      	ldr	r3, [r7, #24]
 800541c:	e158      	b.n	80056d0 <HAL_I2C_Master_Receive+0x430>
    }
    else
    {
      /* Enable Acknowledge */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800541e:	68fb      	ldr	r3, [r7, #12]
 8005420:	681b      	ldr	r3, [r3, #0]
 8005422:	681a      	ldr	r2, [r3, #0]
 8005424:	68fb      	ldr	r3, [r7, #12]
 8005426:	681b      	ldr	r3, [r3, #0]
 8005428:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800542c:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800542e:	2300      	movs	r3, #0
 8005430:	617b      	str	r3, [r7, #20]
 8005432:	68fb      	ldr	r3, [r7, #12]
 8005434:	681b      	ldr	r3, [r3, #0]
 8005436:	695b      	ldr	r3, [r3, #20]
 8005438:	617b      	str	r3, [r7, #20]
 800543a:	68fb      	ldr	r3, [r7, #12]
 800543c:	681b      	ldr	r3, [r3, #0]
 800543e:	699b      	ldr	r3, [r3, #24]
 8005440:	617b      	str	r3, [r7, #20]
 8005442:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 8005444:	e144      	b.n	80056d0 <HAL_I2C_Master_Receive+0x430>
    {
      if (hi2c->XferSize <= 3U)
 8005446:	68fb      	ldr	r3, [r7, #12]
 8005448:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800544a:	2b03      	cmp	r3, #3
 800544c:	f200 80f1 	bhi.w	8005632 <HAL_I2C_Master_Receive+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 8005450:	68fb      	ldr	r3, [r7, #12]
 8005452:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005454:	2b01      	cmp	r3, #1
 8005456:	d123      	bne.n	80054a0 <HAL_I2C_Master_Receive+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005458:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800545a:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800545c:	68f8      	ldr	r0, [r7, #12]
 800545e:	f001 f8f5 	bl	800664c <I2C_WaitOnRXNEFlagUntilTimeout>
 8005462:	4603      	mov	r3, r0
 8005464:	2b00      	cmp	r3, #0
 8005466:	d001      	beq.n	800546c <HAL_I2C_Master_Receive+0x1cc>
          {
            return HAL_ERROR;
 8005468:	2301      	movs	r3, #1
 800546a:	e145      	b.n	80056f8 <HAL_I2C_Master_Receive+0x458>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800546c:	68fb      	ldr	r3, [r7, #12]
 800546e:	681b      	ldr	r3, [r3, #0]
 8005470:	691a      	ldr	r2, [r3, #16]
 8005472:	68fb      	ldr	r3, [r7, #12]
 8005474:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005476:	b2d2      	uxtb	r2, r2
 8005478:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800547a:	68fb      	ldr	r3, [r7, #12]
 800547c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800547e:	1c5a      	adds	r2, r3, #1
 8005480:	68fb      	ldr	r3, [r7, #12]
 8005482:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005484:	68fb      	ldr	r3, [r7, #12]
 8005486:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005488:	3b01      	subs	r3, #1
 800548a:	b29a      	uxth	r2, r3
 800548c:	68fb      	ldr	r3, [r7, #12]
 800548e:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005490:	68fb      	ldr	r3, [r7, #12]
 8005492:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005494:	b29b      	uxth	r3, r3
 8005496:	3b01      	subs	r3, #1
 8005498:	b29a      	uxth	r2, r3
 800549a:	68fb      	ldr	r3, [r7, #12]
 800549c:	855a      	strh	r2, [r3, #42]	; 0x2a
 800549e:	e117      	b.n	80056d0 <HAL_I2C_Master_Receive+0x430>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 80054a0:	68fb      	ldr	r3, [r7, #12]
 80054a2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80054a4:	2b02      	cmp	r3, #2
 80054a6:	d14e      	bne.n	8005546 <HAL_I2C_Master_Receive+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80054a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80054aa:	9300      	str	r3, [sp, #0]
 80054ac:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80054ae:	2200      	movs	r2, #0
 80054b0:	4906      	ldr	r1, [pc, #24]	; (80054cc <HAL_I2C_Master_Receive+0x22c>)
 80054b2:	68f8      	ldr	r0, [r7, #12]
 80054b4:	f000 ff20 	bl	80062f8 <I2C_WaitOnFlagUntilTimeout>
 80054b8:	4603      	mov	r3, r0
 80054ba:	2b00      	cmp	r3, #0
 80054bc:	d008      	beq.n	80054d0 <HAL_I2C_Master_Receive+0x230>
          {
            return HAL_ERROR;
 80054be:	2301      	movs	r3, #1
 80054c0:	e11a      	b.n	80056f8 <HAL_I2C_Master_Receive+0x458>
 80054c2:	bf00      	nop
 80054c4:	00100002 	.word	0x00100002
 80054c8:	ffff0000 	.word	0xffff0000
 80054cc:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80054d0:	68fb      	ldr	r3, [r7, #12]
 80054d2:	681b      	ldr	r3, [r3, #0]
 80054d4:	681a      	ldr	r2, [r3, #0]
 80054d6:	68fb      	ldr	r3, [r7, #12]
 80054d8:	681b      	ldr	r3, [r3, #0]
 80054da:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80054de:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80054e0:	68fb      	ldr	r3, [r7, #12]
 80054e2:	681b      	ldr	r3, [r3, #0]
 80054e4:	691a      	ldr	r2, [r3, #16]
 80054e6:	68fb      	ldr	r3, [r7, #12]
 80054e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054ea:	b2d2      	uxtb	r2, r2
 80054ec:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80054ee:	68fb      	ldr	r3, [r7, #12]
 80054f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054f2:	1c5a      	adds	r2, r3, #1
 80054f4:	68fb      	ldr	r3, [r7, #12]
 80054f6:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80054f8:	68fb      	ldr	r3, [r7, #12]
 80054fa:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80054fc:	3b01      	subs	r3, #1
 80054fe:	b29a      	uxth	r2, r3
 8005500:	68fb      	ldr	r3, [r7, #12]
 8005502:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005504:	68fb      	ldr	r3, [r7, #12]
 8005506:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005508:	b29b      	uxth	r3, r3
 800550a:	3b01      	subs	r3, #1
 800550c:	b29a      	uxth	r2, r3
 800550e:	68fb      	ldr	r3, [r7, #12]
 8005510:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005512:	68fb      	ldr	r3, [r7, #12]
 8005514:	681b      	ldr	r3, [r3, #0]
 8005516:	691a      	ldr	r2, [r3, #16]
 8005518:	68fb      	ldr	r3, [r7, #12]
 800551a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800551c:	b2d2      	uxtb	r2, r2
 800551e:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005520:	68fb      	ldr	r3, [r7, #12]
 8005522:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005524:	1c5a      	adds	r2, r3, #1
 8005526:	68fb      	ldr	r3, [r7, #12]
 8005528:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 800552a:	68fb      	ldr	r3, [r7, #12]
 800552c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800552e:	3b01      	subs	r3, #1
 8005530:	b29a      	uxth	r2, r3
 8005532:	68fb      	ldr	r3, [r7, #12]
 8005534:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005536:	68fb      	ldr	r3, [r7, #12]
 8005538:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800553a:	b29b      	uxth	r3, r3
 800553c:	3b01      	subs	r3, #1
 800553e:	b29a      	uxth	r2, r3
 8005540:	68fb      	ldr	r3, [r7, #12]
 8005542:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005544:	e0c4      	b.n	80056d0 <HAL_I2C_Master_Receive+0x430>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005546:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005548:	9300      	str	r3, [sp, #0]
 800554a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800554c:	2200      	movs	r2, #0
 800554e:	496c      	ldr	r1, [pc, #432]	; (8005700 <HAL_I2C_Master_Receive+0x460>)
 8005550:	68f8      	ldr	r0, [r7, #12]
 8005552:	f000 fed1 	bl	80062f8 <I2C_WaitOnFlagUntilTimeout>
 8005556:	4603      	mov	r3, r0
 8005558:	2b00      	cmp	r3, #0
 800555a:	d001      	beq.n	8005560 <HAL_I2C_Master_Receive+0x2c0>
          {
            return HAL_ERROR;
 800555c:	2301      	movs	r3, #1
 800555e:	e0cb      	b.n	80056f8 <HAL_I2C_Master_Receive+0x458>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005560:	68fb      	ldr	r3, [r7, #12]
 8005562:	681b      	ldr	r3, [r3, #0]
 8005564:	681a      	ldr	r2, [r3, #0]
 8005566:	68fb      	ldr	r3, [r7, #12]
 8005568:	681b      	ldr	r3, [r3, #0]
 800556a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800556e:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005570:	68fb      	ldr	r3, [r7, #12]
 8005572:	681b      	ldr	r3, [r3, #0]
 8005574:	691a      	ldr	r2, [r3, #16]
 8005576:	68fb      	ldr	r3, [r7, #12]
 8005578:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800557a:	b2d2      	uxtb	r2, r2
 800557c:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800557e:	68fb      	ldr	r3, [r7, #12]
 8005580:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005582:	1c5a      	adds	r2, r3, #1
 8005584:	68fb      	ldr	r3, [r7, #12]
 8005586:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005588:	68fb      	ldr	r3, [r7, #12]
 800558a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800558c:	3b01      	subs	r3, #1
 800558e:	b29a      	uxth	r2, r3
 8005590:	68fb      	ldr	r3, [r7, #12]
 8005592:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005594:	68fb      	ldr	r3, [r7, #12]
 8005596:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005598:	b29b      	uxth	r3, r3
 800559a:	3b01      	subs	r3, #1
 800559c:	b29a      	uxth	r2, r3
 800559e:	68fb      	ldr	r3, [r7, #12]
 80055a0:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80055a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80055a4:	9300      	str	r3, [sp, #0]
 80055a6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80055a8:	2200      	movs	r2, #0
 80055aa:	4955      	ldr	r1, [pc, #340]	; (8005700 <HAL_I2C_Master_Receive+0x460>)
 80055ac:	68f8      	ldr	r0, [r7, #12]
 80055ae:	f000 fea3 	bl	80062f8 <I2C_WaitOnFlagUntilTimeout>
 80055b2:	4603      	mov	r3, r0
 80055b4:	2b00      	cmp	r3, #0
 80055b6:	d001      	beq.n	80055bc <HAL_I2C_Master_Receive+0x31c>
          {
            return HAL_ERROR;
 80055b8:	2301      	movs	r3, #1
 80055ba:	e09d      	b.n	80056f8 <HAL_I2C_Master_Receive+0x458>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80055bc:	68fb      	ldr	r3, [r7, #12]
 80055be:	681b      	ldr	r3, [r3, #0]
 80055c0:	681a      	ldr	r2, [r3, #0]
 80055c2:	68fb      	ldr	r3, [r7, #12]
 80055c4:	681b      	ldr	r3, [r3, #0]
 80055c6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80055ca:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80055cc:	68fb      	ldr	r3, [r7, #12]
 80055ce:	681b      	ldr	r3, [r3, #0]
 80055d0:	691a      	ldr	r2, [r3, #16]
 80055d2:	68fb      	ldr	r3, [r7, #12]
 80055d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055d6:	b2d2      	uxtb	r2, r2
 80055d8:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80055da:	68fb      	ldr	r3, [r7, #12]
 80055dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055de:	1c5a      	adds	r2, r3, #1
 80055e0:	68fb      	ldr	r3, [r7, #12]
 80055e2:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80055e4:	68fb      	ldr	r3, [r7, #12]
 80055e6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80055e8:	3b01      	subs	r3, #1
 80055ea:	b29a      	uxth	r2, r3
 80055ec:	68fb      	ldr	r3, [r7, #12]
 80055ee:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 80055f0:	68fb      	ldr	r3, [r7, #12]
 80055f2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80055f4:	b29b      	uxth	r3, r3
 80055f6:	3b01      	subs	r3, #1
 80055f8:	b29a      	uxth	r2, r3
 80055fa:	68fb      	ldr	r3, [r7, #12]
 80055fc:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80055fe:	68fb      	ldr	r3, [r7, #12]
 8005600:	681b      	ldr	r3, [r3, #0]
 8005602:	691a      	ldr	r2, [r3, #16]
 8005604:	68fb      	ldr	r3, [r7, #12]
 8005606:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005608:	b2d2      	uxtb	r2, r2
 800560a:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800560c:	68fb      	ldr	r3, [r7, #12]
 800560e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005610:	1c5a      	adds	r2, r3, #1
 8005612:	68fb      	ldr	r3, [r7, #12]
 8005614:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005616:	68fb      	ldr	r3, [r7, #12]
 8005618:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800561a:	3b01      	subs	r3, #1
 800561c:	b29a      	uxth	r2, r3
 800561e:	68fb      	ldr	r3, [r7, #12]
 8005620:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005622:	68fb      	ldr	r3, [r7, #12]
 8005624:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005626:	b29b      	uxth	r3, r3
 8005628:	3b01      	subs	r3, #1
 800562a:	b29a      	uxth	r2, r3
 800562c:	68fb      	ldr	r3, [r7, #12]
 800562e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005630:	e04e      	b.n	80056d0 <HAL_I2C_Master_Receive+0x430>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005632:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005634:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8005636:	68f8      	ldr	r0, [r7, #12]
 8005638:	f001 f808 	bl	800664c <I2C_WaitOnRXNEFlagUntilTimeout>
 800563c:	4603      	mov	r3, r0
 800563e:	2b00      	cmp	r3, #0
 8005640:	d001      	beq.n	8005646 <HAL_I2C_Master_Receive+0x3a6>
        {
          return HAL_ERROR;
 8005642:	2301      	movs	r3, #1
 8005644:	e058      	b.n	80056f8 <HAL_I2C_Master_Receive+0x458>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005646:	68fb      	ldr	r3, [r7, #12]
 8005648:	681b      	ldr	r3, [r3, #0]
 800564a:	691a      	ldr	r2, [r3, #16]
 800564c:	68fb      	ldr	r3, [r7, #12]
 800564e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005650:	b2d2      	uxtb	r2, r2
 8005652:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8005654:	68fb      	ldr	r3, [r7, #12]
 8005656:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005658:	1c5a      	adds	r2, r3, #1
 800565a:	68fb      	ldr	r3, [r7, #12]
 800565c:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferSize--;
 800565e:	68fb      	ldr	r3, [r7, #12]
 8005660:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005662:	3b01      	subs	r3, #1
 8005664:	b29a      	uxth	r2, r3
 8005666:	68fb      	ldr	r3, [r7, #12]
 8005668:	851a      	strh	r2, [r3, #40]	; 0x28
        hi2c->XferCount--;
 800566a:	68fb      	ldr	r3, [r7, #12]
 800566c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800566e:	b29b      	uxth	r3, r3
 8005670:	3b01      	subs	r3, #1
 8005672:	b29a      	uxth	r2, r3
 8005674:	68fb      	ldr	r3, [r7, #12]
 8005676:	855a      	strh	r2, [r3, #42]	; 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005678:	68fb      	ldr	r3, [r7, #12]
 800567a:	681b      	ldr	r3, [r3, #0]
 800567c:	695b      	ldr	r3, [r3, #20]
 800567e:	f003 0304 	and.w	r3, r3, #4
 8005682:	2b04      	cmp	r3, #4
 8005684:	d124      	bne.n	80056d0 <HAL_I2C_Master_Receive+0x430>
        {

          if (hi2c->XferSize == 3U)
 8005686:	68fb      	ldr	r3, [r7, #12]
 8005688:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800568a:	2b03      	cmp	r3, #3
 800568c:	d107      	bne.n	800569e <HAL_I2C_Master_Receive+0x3fe>
          {
            /* Disable Acknowledge */
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800568e:	68fb      	ldr	r3, [r7, #12]
 8005690:	681b      	ldr	r3, [r3, #0]
 8005692:	681a      	ldr	r2, [r3, #0]
 8005694:	68fb      	ldr	r3, [r7, #12]
 8005696:	681b      	ldr	r3, [r3, #0]
 8005698:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800569c:	601a      	str	r2, [r3, #0]
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800569e:	68fb      	ldr	r3, [r7, #12]
 80056a0:	681b      	ldr	r3, [r3, #0]
 80056a2:	691a      	ldr	r2, [r3, #16]
 80056a4:	68fb      	ldr	r3, [r7, #12]
 80056a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056a8:	b2d2      	uxtb	r2, r2
 80056aa:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80056ac:	68fb      	ldr	r3, [r7, #12]
 80056ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056b0:	1c5a      	adds	r2, r3, #1
 80056b2:	68fb      	ldr	r3, [r7, #12]
 80056b4:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80056b6:	68fb      	ldr	r3, [r7, #12]
 80056b8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80056ba:	3b01      	subs	r3, #1
 80056bc:	b29a      	uxth	r2, r3
 80056be:	68fb      	ldr	r3, [r7, #12]
 80056c0:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 80056c2:	68fb      	ldr	r3, [r7, #12]
 80056c4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80056c6:	b29b      	uxth	r3, r3
 80056c8:	3b01      	subs	r3, #1
 80056ca:	b29a      	uxth	r2, r3
 80056cc:	68fb      	ldr	r3, [r7, #12]
 80056ce:	855a      	strh	r2, [r3, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 80056d0:	68fb      	ldr	r3, [r7, #12]
 80056d2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80056d4:	2b00      	cmp	r3, #0
 80056d6:	f47f aeb6 	bne.w	8005446 <HAL_I2C_Master_Receive+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 80056da:	68fb      	ldr	r3, [r7, #12]
 80056dc:	2220      	movs	r2, #32
 80056de:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80056e2:	68fb      	ldr	r3, [r7, #12]
 80056e4:	2200      	movs	r2, #0
 80056e6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80056ea:	68fb      	ldr	r3, [r7, #12]
 80056ec:	2200      	movs	r2, #0
 80056ee:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 80056f2:	2300      	movs	r3, #0
 80056f4:	e000      	b.n	80056f8 <HAL_I2C_Master_Receive+0x458>
  }
  else
  {
    return HAL_BUSY;
 80056f6:	2302      	movs	r3, #2
  }
}
 80056f8:	4618      	mov	r0, r3
 80056fa:	3728      	adds	r7, #40	; 0x28
 80056fc:	46bd      	mov	sp, r7
 80056fe:	bd80      	pop	{r7, pc}
 8005700:	00010004 	.word	0x00010004

08005704 <HAL_I2C_Mem_Write>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8005704:	b580      	push	{r7, lr}
 8005706:	b088      	sub	sp, #32
 8005708:	af02      	add	r7, sp, #8
 800570a:	60f8      	str	r0, [r7, #12]
 800570c:	4608      	mov	r0, r1
 800570e:	4611      	mov	r1, r2
 8005710:	461a      	mov	r2, r3
 8005712:	4603      	mov	r3, r0
 8005714:	817b      	strh	r3, [r7, #10]
 8005716:	460b      	mov	r3, r1
 8005718:	813b      	strh	r3, [r7, #8]
 800571a:	4613      	mov	r3, r2
 800571c:	80fb      	strh	r3, [r7, #6]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 800571e:	f7fe fc47 	bl	8003fb0 <HAL_GetTick>
 8005722:	6178      	str	r0, [r7, #20]

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005724:	68fb      	ldr	r3, [r7, #12]
 8005726:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800572a:	b2db      	uxtb	r3, r3
 800572c:	2b20      	cmp	r3, #32
 800572e:	f040 80d9 	bne.w	80058e4 <HAL_I2C_Mem_Write+0x1e0>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005732:	697b      	ldr	r3, [r7, #20]
 8005734:	9300      	str	r3, [sp, #0]
 8005736:	2319      	movs	r3, #25
 8005738:	2201      	movs	r2, #1
 800573a:	496d      	ldr	r1, [pc, #436]	; (80058f0 <HAL_I2C_Mem_Write+0x1ec>)
 800573c:	68f8      	ldr	r0, [r7, #12]
 800573e:	f000 fddb 	bl	80062f8 <I2C_WaitOnFlagUntilTimeout>
 8005742:	4603      	mov	r3, r0
 8005744:	2b00      	cmp	r3, #0
 8005746:	d001      	beq.n	800574c <HAL_I2C_Mem_Write+0x48>
    {
      return HAL_BUSY;
 8005748:	2302      	movs	r3, #2
 800574a:	e0cc      	b.n	80058e6 <HAL_I2C_Mem_Write+0x1e2>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 800574c:	68fb      	ldr	r3, [r7, #12]
 800574e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005752:	2b01      	cmp	r3, #1
 8005754:	d101      	bne.n	800575a <HAL_I2C_Mem_Write+0x56>
 8005756:	2302      	movs	r3, #2
 8005758:	e0c5      	b.n	80058e6 <HAL_I2C_Mem_Write+0x1e2>
 800575a:	68fb      	ldr	r3, [r7, #12]
 800575c:	2201      	movs	r2, #1
 800575e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005762:	68fb      	ldr	r3, [r7, #12]
 8005764:	681b      	ldr	r3, [r3, #0]
 8005766:	681b      	ldr	r3, [r3, #0]
 8005768:	f003 0301 	and.w	r3, r3, #1
 800576c:	2b01      	cmp	r3, #1
 800576e:	d007      	beq.n	8005780 <HAL_I2C_Mem_Write+0x7c>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8005770:	68fb      	ldr	r3, [r7, #12]
 8005772:	681b      	ldr	r3, [r3, #0]
 8005774:	681a      	ldr	r2, [r3, #0]
 8005776:	68fb      	ldr	r3, [r7, #12]
 8005778:	681b      	ldr	r3, [r3, #0]
 800577a:	f042 0201 	orr.w	r2, r2, #1
 800577e:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005780:	68fb      	ldr	r3, [r7, #12]
 8005782:	681b      	ldr	r3, [r3, #0]
 8005784:	681a      	ldr	r2, [r3, #0]
 8005786:	68fb      	ldr	r3, [r7, #12]
 8005788:	681b      	ldr	r3, [r3, #0]
 800578a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800578e:	601a      	str	r2, [r3, #0]

    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005790:	68fb      	ldr	r3, [r7, #12]
 8005792:	2221      	movs	r2, #33	; 0x21
 8005794:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005798:	68fb      	ldr	r3, [r7, #12]
 800579a:	2240      	movs	r2, #64	; 0x40
 800579c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80057a0:	68fb      	ldr	r3, [r7, #12]
 80057a2:	2200      	movs	r2, #0
 80057a4:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 80057a6:	68fb      	ldr	r3, [r7, #12]
 80057a8:	6a3a      	ldr	r2, [r7, #32]
 80057aa:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 80057ac:	68fb      	ldr	r3, [r7, #12]
 80057ae:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 80057b0:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80057b2:	68fb      	ldr	r3, [r7, #12]
 80057b4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80057b6:	b29a      	uxth	r2, r3
 80057b8:	68fb      	ldr	r3, [r7, #12]
 80057ba:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80057bc:	68fb      	ldr	r3, [r7, #12]
 80057be:	4a4d      	ldr	r2, [pc, #308]	; (80058f4 <HAL_I2C_Mem_Write+0x1f0>)
 80057c0:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80057c2:	88f8      	ldrh	r0, [r7, #6]
 80057c4:	893a      	ldrh	r2, [r7, #8]
 80057c6:	8979      	ldrh	r1, [r7, #10]
 80057c8:	697b      	ldr	r3, [r7, #20]
 80057ca:	9301      	str	r3, [sp, #4]
 80057cc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80057ce:	9300      	str	r3, [sp, #0]
 80057d0:	4603      	mov	r3, r0
 80057d2:	68f8      	ldr	r0, [r7, #12]
 80057d4:	f000 fc12 	bl	8005ffc <I2C_RequestMemoryWrite>
 80057d8:	4603      	mov	r3, r0
 80057da:	2b00      	cmp	r3, #0
 80057dc:	d052      	beq.n	8005884 <HAL_I2C_Mem_Write+0x180>
    {
      return HAL_ERROR;
 80057de:	2301      	movs	r3, #1
 80057e0:	e081      	b.n	80058e6 <HAL_I2C_Mem_Write+0x1e2>
    }

    while (hi2c->XferSize > 0U)
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80057e2:	697a      	ldr	r2, [r7, #20]
 80057e4:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80057e6:	68f8      	ldr	r0, [r7, #12]
 80057e8:	f000 fea0 	bl	800652c <I2C_WaitOnTXEFlagUntilTimeout>
 80057ec:	4603      	mov	r3, r0
 80057ee:	2b00      	cmp	r3, #0
 80057f0:	d00d      	beq.n	800580e <HAL_I2C_Mem_Write+0x10a>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80057f2:	68fb      	ldr	r3, [r7, #12]
 80057f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80057f6:	2b04      	cmp	r3, #4
 80057f8:	d107      	bne.n	800580a <HAL_I2C_Mem_Write+0x106>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80057fa:	68fb      	ldr	r3, [r7, #12]
 80057fc:	681b      	ldr	r3, [r3, #0]
 80057fe:	681a      	ldr	r2, [r3, #0]
 8005800:	68fb      	ldr	r3, [r7, #12]
 8005802:	681b      	ldr	r3, [r3, #0]
 8005804:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005808:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 800580a:	2301      	movs	r3, #1
 800580c:	e06b      	b.n	80058e6 <HAL_I2C_Mem_Write+0x1e2>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800580e:	68fb      	ldr	r3, [r7, #12]
 8005810:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005812:	781a      	ldrb	r2, [r3, #0]
 8005814:	68fb      	ldr	r3, [r7, #12]
 8005816:	681b      	ldr	r3, [r3, #0]
 8005818:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 800581a:	68fb      	ldr	r3, [r7, #12]
 800581c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800581e:	1c5a      	adds	r2, r3, #1
 8005820:	68fb      	ldr	r3, [r7, #12]
 8005822:	625a      	str	r2, [r3, #36]	; 0x24

      /* Update counter */
      hi2c->XferSize--;
 8005824:	68fb      	ldr	r3, [r7, #12]
 8005826:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005828:	3b01      	subs	r3, #1
 800582a:	b29a      	uxth	r2, r3
 800582c:	68fb      	ldr	r3, [r7, #12]
 800582e:	851a      	strh	r2, [r3, #40]	; 0x28
      hi2c->XferCount--;
 8005830:	68fb      	ldr	r3, [r7, #12]
 8005832:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005834:	b29b      	uxth	r3, r3
 8005836:	3b01      	subs	r3, #1
 8005838:	b29a      	uxth	r2, r3
 800583a:	68fb      	ldr	r3, [r7, #12]
 800583c:	855a      	strh	r2, [r3, #42]	; 0x2a

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800583e:	68fb      	ldr	r3, [r7, #12]
 8005840:	681b      	ldr	r3, [r3, #0]
 8005842:	695b      	ldr	r3, [r3, #20]
 8005844:	f003 0304 	and.w	r3, r3, #4
 8005848:	2b04      	cmp	r3, #4
 800584a:	d11b      	bne.n	8005884 <HAL_I2C_Mem_Write+0x180>
 800584c:	68fb      	ldr	r3, [r7, #12]
 800584e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005850:	2b00      	cmp	r3, #0
 8005852:	d017      	beq.n	8005884 <HAL_I2C_Mem_Write+0x180>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005854:	68fb      	ldr	r3, [r7, #12]
 8005856:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005858:	781a      	ldrb	r2, [r3, #0]
 800585a:	68fb      	ldr	r3, [r7, #12]
 800585c:	681b      	ldr	r3, [r3, #0]
 800585e:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8005860:	68fb      	ldr	r3, [r7, #12]
 8005862:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005864:	1c5a      	adds	r2, r3, #1
 8005866:	68fb      	ldr	r3, [r7, #12]
 8005868:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferSize--;
 800586a:	68fb      	ldr	r3, [r7, #12]
 800586c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800586e:	3b01      	subs	r3, #1
 8005870:	b29a      	uxth	r2, r3
 8005872:	68fb      	ldr	r3, [r7, #12]
 8005874:	851a      	strh	r2, [r3, #40]	; 0x28
        hi2c->XferCount--;
 8005876:	68fb      	ldr	r3, [r7, #12]
 8005878:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800587a:	b29b      	uxth	r3, r3
 800587c:	3b01      	subs	r3, #1
 800587e:	b29a      	uxth	r2, r3
 8005880:	68fb      	ldr	r3, [r7, #12]
 8005882:	855a      	strh	r2, [r3, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8005884:	68fb      	ldr	r3, [r7, #12]
 8005886:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005888:	2b00      	cmp	r3, #0
 800588a:	d1aa      	bne.n	80057e2 <HAL_I2C_Mem_Write+0xde>
      }
    }

    /* Wait until BTF flag is set */
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800588c:	697a      	ldr	r2, [r7, #20]
 800588e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8005890:	68f8      	ldr	r0, [r7, #12]
 8005892:	f000 fe93 	bl	80065bc <I2C_WaitOnBTFFlagUntilTimeout>
 8005896:	4603      	mov	r3, r0
 8005898:	2b00      	cmp	r3, #0
 800589a:	d00d      	beq.n	80058b8 <HAL_I2C_Mem_Write+0x1b4>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800589c:	68fb      	ldr	r3, [r7, #12]
 800589e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80058a0:	2b04      	cmp	r3, #4
 80058a2:	d107      	bne.n	80058b4 <HAL_I2C_Mem_Write+0x1b0>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80058a4:	68fb      	ldr	r3, [r7, #12]
 80058a6:	681b      	ldr	r3, [r3, #0]
 80058a8:	681a      	ldr	r2, [r3, #0]
 80058aa:	68fb      	ldr	r3, [r7, #12]
 80058ac:	681b      	ldr	r3, [r3, #0]
 80058ae:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80058b2:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 80058b4:	2301      	movs	r3, #1
 80058b6:	e016      	b.n	80058e6 <HAL_I2C_Mem_Write+0x1e2>
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80058b8:	68fb      	ldr	r3, [r7, #12]
 80058ba:	681b      	ldr	r3, [r3, #0]
 80058bc:	681a      	ldr	r2, [r3, #0]
 80058be:	68fb      	ldr	r3, [r7, #12]
 80058c0:	681b      	ldr	r3, [r3, #0]
 80058c2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80058c6:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80058c8:	68fb      	ldr	r3, [r7, #12]
 80058ca:	2220      	movs	r2, #32
 80058cc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80058d0:	68fb      	ldr	r3, [r7, #12]
 80058d2:	2200      	movs	r2, #0
 80058d4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80058d8:	68fb      	ldr	r3, [r7, #12]
 80058da:	2200      	movs	r2, #0
 80058dc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 80058e0:	2300      	movs	r3, #0
 80058e2:	e000      	b.n	80058e6 <HAL_I2C_Mem_Write+0x1e2>
  }
  else
  {
    return HAL_BUSY;
 80058e4:	2302      	movs	r3, #2
  }
}
 80058e6:	4618      	mov	r0, r3
 80058e8:	3718      	adds	r7, #24
 80058ea:	46bd      	mov	sp, r7
 80058ec:	bd80      	pop	{r7, pc}
 80058ee:	bf00      	nop
 80058f0:	00100002 	.word	0x00100002
 80058f4:	ffff0000 	.word	0xffff0000

080058f8 <HAL_I2C_Mem_Read>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80058f8:	b580      	push	{r7, lr}
 80058fa:	b08c      	sub	sp, #48	; 0x30
 80058fc:	af02      	add	r7, sp, #8
 80058fe:	60f8      	str	r0, [r7, #12]
 8005900:	4608      	mov	r0, r1
 8005902:	4611      	mov	r1, r2
 8005904:	461a      	mov	r2, r3
 8005906:	4603      	mov	r3, r0
 8005908:	817b      	strh	r3, [r7, #10]
 800590a:	460b      	mov	r3, r1
 800590c:	813b      	strh	r3, [r7, #8]
 800590e:	4613      	mov	r3, r2
 8005910:	80fb      	strh	r3, [r7, #6]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8005912:	f7fe fb4d 	bl	8003fb0 <HAL_GetTick>
 8005916:	6278      	str	r0, [r7, #36]	; 0x24

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005918:	68fb      	ldr	r3, [r7, #12]
 800591a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800591e:	b2db      	uxtb	r3, r3
 8005920:	2b20      	cmp	r3, #32
 8005922:	f040 8214 	bne.w	8005d4e <HAL_I2C_Mem_Read+0x456>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005926:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005928:	9300      	str	r3, [sp, #0]
 800592a:	2319      	movs	r3, #25
 800592c:	2201      	movs	r2, #1
 800592e:	497b      	ldr	r1, [pc, #492]	; (8005b1c <HAL_I2C_Mem_Read+0x224>)
 8005930:	68f8      	ldr	r0, [r7, #12]
 8005932:	f000 fce1 	bl	80062f8 <I2C_WaitOnFlagUntilTimeout>
 8005936:	4603      	mov	r3, r0
 8005938:	2b00      	cmp	r3, #0
 800593a:	d001      	beq.n	8005940 <HAL_I2C_Mem_Read+0x48>
    {
      return HAL_BUSY;
 800593c:	2302      	movs	r3, #2
 800593e:	e207      	b.n	8005d50 <HAL_I2C_Mem_Read+0x458>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005940:	68fb      	ldr	r3, [r7, #12]
 8005942:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005946:	2b01      	cmp	r3, #1
 8005948:	d101      	bne.n	800594e <HAL_I2C_Mem_Read+0x56>
 800594a:	2302      	movs	r3, #2
 800594c:	e200      	b.n	8005d50 <HAL_I2C_Mem_Read+0x458>
 800594e:	68fb      	ldr	r3, [r7, #12]
 8005950:	2201      	movs	r2, #1
 8005952:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005956:	68fb      	ldr	r3, [r7, #12]
 8005958:	681b      	ldr	r3, [r3, #0]
 800595a:	681b      	ldr	r3, [r3, #0]
 800595c:	f003 0301 	and.w	r3, r3, #1
 8005960:	2b01      	cmp	r3, #1
 8005962:	d007      	beq.n	8005974 <HAL_I2C_Mem_Read+0x7c>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8005964:	68fb      	ldr	r3, [r7, #12]
 8005966:	681b      	ldr	r3, [r3, #0]
 8005968:	681a      	ldr	r2, [r3, #0]
 800596a:	68fb      	ldr	r3, [r7, #12]
 800596c:	681b      	ldr	r3, [r3, #0]
 800596e:	f042 0201 	orr.w	r2, r2, #1
 8005972:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005974:	68fb      	ldr	r3, [r7, #12]
 8005976:	681b      	ldr	r3, [r3, #0]
 8005978:	681a      	ldr	r2, [r3, #0]
 800597a:	68fb      	ldr	r3, [r7, #12]
 800597c:	681b      	ldr	r3, [r3, #0]
 800597e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005982:	601a      	str	r2, [r3, #0]

    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005984:	68fb      	ldr	r3, [r7, #12]
 8005986:	2222      	movs	r2, #34	; 0x22
 8005988:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800598c:	68fb      	ldr	r3, [r7, #12]
 800598e:	2240      	movs	r2, #64	; 0x40
 8005990:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005994:	68fb      	ldr	r3, [r7, #12]
 8005996:	2200      	movs	r2, #0
 8005998:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 800599a:	68fb      	ldr	r3, [r7, #12]
 800599c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800599e:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 80059a0:	68fb      	ldr	r3, [r7, #12]
 80059a2:	8eba      	ldrh	r2, [r7, #52]	; 0x34
 80059a4:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80059a6:	68fb      	ldr	r3, [r7, #12]
 80059a8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80059aa:	b29a      	uxth	r2, r3
 80059ac:	68fb      	ldr	r3, [r7, #12]
 80059ae:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80059b0:	68fb      	ldr	r3, [r7, #12]
 80059b2:	4a5b      	ldr	r2, [pc, #364]	; (8005b20 <HAL_I2C_Mem_Read+0x228>)
 80059b4:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80059b6:	88f8      	ldrh	r0, [r7, #6]
 80059b8:	893a      	ldrh	r2, [r7, #8]
 80059ba:	8979      	ldrh	r1, [r7, #10]
 80059bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80059be:	9301      	str	r3, [sp, #4]
 80059c0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80059c2:	9300      	str	r3, [sp, #0]
 80059c4:	4603      	mov	r3, r0
 80059c6:	68f8      	ldr	r0, [r7, #12]
 80059c8:	f000 fbae 	bl	8006128 <I2C_RequestMemoryRead>
 80059cc:	4603      	mov	r3, r0
 80059ce:	2b00      	cmp	r3, #0
 80059d0:	d001      	beq.n	80059d6 <HAL_I2C_Mem_Read+0xde>
    {
      return HAL_ERROR;
 80059d2:	2301      	movs	r3, #1
 80059d4:	e1bc      	b.n	8005d50 <HAL_I2C_Mem_Read+0x458>
    }

    if (hi2c->XferSize == 0U)
 80059d6:	68fb      	ldr	r3, [r7, #12]
 80059d8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80059da:	2b00      	cmp	r3, #0
 80059dc:	d113      	bne.n	8005a06 <HAL_I2C_Mem_Read+0x10e>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80059de:	2300      	movs	r3, #0
 80059e0:	623b      	str	r3, [r7, #32]
 80059e2:	68fb      	ldr	r3, [r7, #12]
 80059e4:	681b      	ldr	r3, [r3, #0]
 80059e6:	695b      	ldr	r3, [r3, #20]
 80059e8:	623b      	str	r3, [r7, #32]
 80059ea:	68fb      	ldr	r3, [r7, #12]
 80059ec:	681b      	ldr	r3, [r3, #0]
 80059ee:	699b      	ldr	r3, [r3, #24]
 80059f0:	623b      	str	r3, [r7, #32]
 80059f2:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80059f4:	68fb      	ldr	r3, [r7, #12]
 80059f6:	681b      	ldr	r3, [r3, #0]
 80059f8:	681a      	ldr	r2, [r3, #0]
 80059fa:	68fb      	ldr	r3, [r7, #12]
 80059fc:	681b      	ldr	r3, [r3, #0]
 80059fe:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005a02:	601a      	str	r2, [r3, #0]
 8005a04:	e190      	b.n	8005d28 <HAL_I2C_Mem_Read+0x430>
    }
    else if (hi2c->XferSize == 1U)
 8005a06:	68fb      	ldr	r3, [r7, #12]
 8005a08:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005a0a:	2b01      	cmp	r3, #1
 8005a0c:	d11b      	bne.n	8005a46 <HAL_I2C_Mem_Read+0x14e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005a0e:	68fb      	ldr	r3, [r7, #12]
 8005a10:	681b      	ldr	r3, [r3, #0]
 8005a12:	681a      	ldr	r2, [r3, #0]
 8005a14:	68fb      	ldr	r3, [r7, #12]
 8005a16:	681b      	ldr	r3, [r3, #0]
 8005a18:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005a1c:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005a1e:	2300      	movs	r3, #0
 8005a20:	61fb      	str	r3, [r7, #28]
 8005a22:	68fb      	ldr	r3, [r7, #12]
 8005a24:	681b      	ldr	r3, [r3, #0]
 8005a26:	695b      	ldr	r3, [r3, #20]
 8005a28:	61fb      	str	r3, [r7, #28]
 8005a2a:	68fb      	ldr	r3, [r7, #12]
 8005a2c:	681b      	ldr	r3, [r3, #0]
 8005a2e:	699b      	ldr	r3, [r3, #24]
 8005a30:	61fb      	str	r3, [r7, #28]
 8005a32:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005a34:	68fb      	ldr	r3, [r7, #12]
 8005a36:	681b      	ldr	r3, [r3, #0]
 8005a38:	681a      	ldr	r2, [r3, #0]
 8005a3a:	68fb      	ldr	r3, [r7, #12]
 8005a3c:	681b      	ldr	r3, [r3, #0]
 8005a3e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005a42:	601a      	str	r2, [r3, #0]
 8005a44:	e170      	b.n	8005d28 <HAL_I2C_Mem_Read+0x430>
    }
    else if (hi2c->XferSize == 2U)
 8005a46:	68fb      	ldr	r3, [r7, #12]
 8005a48:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005a4a:	2b02      	cmp	r3, #2
 8005a4c:	d11b      	bne.n	8005a86 <HAL_I2C_Mem_Read+0x18e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005a4e:	68fb      	ldr	r3, [r7, #12]
 8005a50:	681b      	ldr	r3, [r3, #0]
 8005a52:	681a      	ldr	r2, [r3, #0]
 8005a54:	68fb      	ldr	r3, [r7, #12]
 8005a56:	681b      	ldr	r3, [r3, #0]
 8005a58:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005a5c:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005a5e:	68fb      	ldr	r3, [r7, #12]
 8005a60:	681b      	ldr	r3, [r3, #0]
 8005a62:	681a      	ldr	r2, [r3, #0]
 8005a64:	68fb      	ldr	r3, [r7, #12]
 8005a66:	681b      	ldr	r3, [r3, #0]
 8005a68:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005a6c:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005a6e:	2300      	movs	r3, #0
 8005a70:	61bb      	str	r3, [r7, #24]
 8005a72:	68fb      	ldr	r3, [r7, #12]
 8005a74:	681b      	ldr	r3, [r3, #0]
 8005a76:	695b      	ldr	r3, [r3, #20]
 8005a78:	61bb      	str	r3, [r7, #24]
 8005a7a:	68fb      	ldr	r3, [r7, #12]
 8005a7c:	681b      	ldr	r3, [r3, #0]
 8005a7e:	699b      	ldr	r3, [r3, #24]
 8005a80:	61bb      	str	r3, [r7, #24]
 8005a82:	69bb      	ldr	r3, [r7, #24]
 8005a84:	e150      	b.n	8005d28 <HAL_I2C_Mem_Read+0x430>
    }
    else
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005a86:	2300      	movs	r3, #0
 8005a88:	617b      	str	r3, [r7, #20]
 8005a8a:	68fb      	ldr	r3, [r7, #12]
 8005a8c:	681b      	ldr	r3, [r3, #0]
 8005a8e:	695b      	ldr	r3, [r3, #20]
 8005a90:	617b      	str	r3, [r7, #20]
 8005a92:	68fb      	ldr	r3, [r7, #12]
 8005a94:	681b      	ldr	r3, [r3, #0]
 8005a96:	699b      	ldr	r3, [r3, #24]
 8005a98:	617b      	str	r3, [r7, #20]
 8005a9a:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 8005a9c:	e144      	b.n	8005d28 <HAL_I2C_Mem_Read+0x430>
    {
      if (hi2c->XferSize <= 3U)
 8005a9e:	68fb      	ldr	r3, [r7, #12]
 8005aa0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005aa2:	2b03      	cmp	r3, #3
 8005aa4:	f200 80f1 	bhi.w	8005c8a <HAL_I2C_Mem_Read+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 8005aa8:	68fb      	ldr	r3, [r7, #12]
 8005aaa:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005aac:	2b01      	cmp	r3, #1
 8005aae:	d123      	bne.n	8005af8 <HAL_I2C_Mem_Read+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005ab0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005ab2:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8005ab4:	68f8      	ldr	r0, [r7, #12]
 8005ab6:	f000 fdc9 	bl	800664c <I2C_WaitOnRXNEFlagUntilTimeout>
 8005aba:	4603      	mov	r3, r0
 8005abc:	2b00      	cmp	r3, #0
 8005abe:	d001      	beq.n	8005ac4 <HAL_I2C_Mem_Read+0x1cc>
          {
            return HAL_ERROR;
 8005ac0:	2301      	movs	r3, #1
 8005ac2:	e145      	b.n	8005d50 <HAL_I2C_Mem_Read+0x458>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005ac4:	68fb      	ldr	r3, [r7, #12]
 8005ac6:	681b      	ldr	r3, [r3, #0]
 8005ac8:	691a      	ldr	r2, [r3, #16]
 8005aca:	68fb      	ldr	r3, [r7, #12]
 8005acc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ace:	b2d2      	uxtb	r2, r2
 8005ad0:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005ad2:	68fb      	ldr	r3, [r7, #12]
 8005ad4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ad6:	1c5a      	adds	r2, r3, #1
 8005ad8:	68fb      	ldr	r3, [r7, #12]
 8005ada:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005adc:	68fb      	ldr	r3, [r7, #12]
 8005ade:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005ae0:	3b01      	subs	r3, #1
 8005ae2:	b29a      	uxth	r2, r3
 8005ae4:	68fb      	ldr	r3, [r7, #12]
 8005ae6:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005ae8:	68fb      	ldr	r3, [r7, #12]
 8005aea:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005aec:	b29b      	uxth	r3, r3
 8005aee:	3b01      	subs	r3, #1
 8005af0:	b29a      	uxth	r2, r3
 8005af2:	68fb      	ldr	r3, [r7, #12]
 8005af4:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005af6:	e117      	b.n	8005d28 <HAL_I2C_Mem_Read+0x430>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 8005af8:	68fb      	ldr	r3, [r7, #12]
 8005afa:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005afc:	2b02      	cmp	r3, #2
 8005afe:	d14e      	bne.n	8005b9e <HAL_I2C_Mem_Read+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005b00:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005b02:	9300      	str	r3, [sp, #0]
 8005b04:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005b06:	2200      	movs	r2, #0
 8005b08:	4906      	ldr	r1, [pc, #24]	; (8005b24 <HAL_I2C_Mem_Read+0x22c>)
 8005b0a:	68f8      	ldr	r0, [r7, #12]
 8005b0c:	f000 fbf4 	bl	80062f8 <I2C_WaitOnFlagUntilTimeout>
 8005b10:	4603      	mov	r3, r0
 8005b12:	2b00      	cmp	r3, #0
 8005b14:	d008      	beq.n	8005b28 <HAL_I2C_Mem_Read+0x230>
          {
            return HAL_ERROR;
 8005b16:	2301      	movs	r3, #1
 8005b18:	e11a      	b.n	8005d50 <HAL_I2C_Mem_Read+0x458>
 8005b1a:	bf00      	nop
 8005b1c:	00100002 	.word	0x00100002
 8005b20:	ffff0000 	.word	0xffff0000
 8005b24:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005b28:	68fb      	ldr	r3, [r7, #12]
 8005b2a:	681b      	ldr	r3, [r3, #0]
 8005b2c:	681a      	ldr	r2, [r3, #0]
 8005b2e:	68fb      	ldr	r3, [r7, #12]
 8005b30:	681b      	ldr	r3, [r3, #0]
 8005b32:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005b36:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005b38:	68fb      	ldr	r3, [r7, #12]
 8005b3a:	681b      	ldr	r3, [r3, #0]
 8005b3c:	691a      	ldr	r2, [r3, #16]
 8005b3e:	68fb      	ldr	r3, [r7, #12]
 8005b40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b42:	b2d2      	uxtb	r2, r2
 8005b44:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005b46:	68fb      	ldr	r3, [r7, #12]
 8005b48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b4a:	1c5a      	adds	r2, r3, #1
 8005b4c:	68fb      	ldr	r3, [r7, #12]
 8005b4e:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005b50:	68fb      	ldr	r3, [r7, #12]
 8005b52:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005b54:	3b01      	subs	r3, #1
 8005b56:	b29a      	uxth	r2, r3
 8005b58:	68fb      	ldr	r3, [r7, #12]
 8005b5a:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005b5c:	68fb      	ldr	r3, [r7, #12]
 8005b5e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005b60:	b29b      	uxth	r3, r3
 8005b62:	3b01      	subs	r3, #1
 8005b64:	b29a      	uxth	r2, r3
 8005b66:	68fb      	ldr	r3, [r7, #12]
 8005b68:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005b6a:	68fb      	ldr	r3, [r7, #12]
 8005b6c:	681b      	ldr	r3, [r3, #0]
 8005b6e:	691a      	ldr	r2, [r3, #16]
 8005b70:	68fb      	ldr	r3, [r7, #12]
 8005b72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b74:	b2d2      	uxtb	r2, r2
 8005b76:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005b78:	68fb      	ldr	r3, [r7, #12]
 8005b7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b7c:	1c5a      	adds	r2, r3, #1
 8005b7e:	68fb      	ldr	r3, [r7, #12]
 8005b80:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005b82:	68fb      	ldr	r3, [r7, #12]
 8005b84:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005b86:	3b01      	subs	r3, #1
 8005b88:	b29a      	uxth	r2, r3
 8005b8a:	68fb      	ldr	r3, [r7, #12]
 8005b8c:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005b8e:	68fb      	ldr	r3, [r7, #12]
 8005b90:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005b92:	b29b      	uxth	r3, r3
 8005b94:	3b01      	subs	r3, #1
 8005b96:	b29a      	uxth	r2, r3
 8005b98:	68fb      	ldr	r3, [r7, #12]
 8005b9a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005b9c:	e0c4      	b.n	8005d28 <HAL_I2C_Mem_Read+0x430>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005b9e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005ba0:	9300      	str	r3, [sp, #0]
 8005ba2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005ba4:	2200      	movs	r2, #0
 8005ba6:	496c      	ldr	r1, [pc, #432]	; (8005d58 <HAL_I2C_Mem_Read+0x460>)
 8005ba8:	68f8      	ldr	r0, [r7, #12]
 8005baa:	f000 fba5 	bl	80062f8 <I2C_WaitOnFlagUntilTimeout>
 8005bae:	4603      	mov	r3, r0
 8005bb0:	2b00      	cmp	r3, #0
 8005bb2:	d001      	beq.n	8005bb8 <HAL_I2C_Mem_Read+0x2c0>
          {
            return HAL_ERROR;
 8005bb4:	2301      	movs	r3, #1
 8005bb6:	e0cb      	b.n	8005d50 <HAL_I2C_Mem_Read+0x458>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005bb8:	68fb      	ldr	r3, [r7, #12]
 8005bba:	681b      	ldr	r3, [r3, #0]
 8005bbc:	681a      	ldr	r2, [r3, #0]
 8005bbe:	68fb      	ldr	r3, [r7, #12]
 8005bc0:	681b      	ldr	r3, [r3, #0]
 8005bc2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005bc6:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005bc8:	68fb      	ldr	r3, [r7, #12]
 8005bca:	681b      	ldr	r3, [r3, #0]
 8005bcc:	691a      	ldr	r2, [r3, #16]
 8005bce:	68fb      	ldr	r3, [r7, #12]
 8005bd0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005bd2:	b2d2      	uxtb	r2, r2
 8005bd4:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005bd6:	68fb      	ldr	r3, [r7, #12]
 8005bd8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005bda:	1c5a      	adds	r2, r3, #1
 8005bdc:	68fb      	ldr	r3, [r7, #12]
 8005bde:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005be0:	68fb      	ldr	r3, [r7, #12]
 8005be2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005be4:	3b01      	subs	r3, #1
 8005be6:	b29a      	uxth	r2, r3
 8005be8:	68fb      	ldr	r3, [r7, #12]
 8005bea:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005bec:	68fb      	ldr	r3, [r7, #12]
 8005bee:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005bf0:	b29b      	uxth	r3, r3
 8005bf2:	3b01      	subs	r3, #1
 8005bf4:	b29a      	uxth	r2, r3
 8005bf6:	68fb      	ldr	r3, [r7, #12]
 8005bf8:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005bfa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005bfc:	9300      	str	r3, [sp, #0]
 8005bfe:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005c00:	2200      	movs	r2, #0
 8005c02:	4955      	ldr	r1, [pc, #340]	; (8005d58 <HAL_I2C_Mem_Read+0x460>)
 8005c04:	68f8      	ldr	r0, [r7, #12]
 8005c06:	f000 fb77 	bl	80062f8 <I2C_WaitOnFlagUntilTimeout>
 8005c0a:	4603      	mov	r3, r0
 8005c0c:	2b00      	cmp	r3, #0
 8005c0e:	d001      	beq.n	8005c14 <HAL_I2C_Mem_Read+0x31c>
          {
            return HAL_ERROR;
 8005c10:	2301      	movs	r3, #1
 8005c12:	e09d      	b.n	8005d50 <HAL_I2C_Mem_Read+0x458>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005c14:	68fb      	ldr	r3, [r7, #12]
 8005c16:	681b      	ldr	r3, [r3, #0]
 8005c18:	681a      	ldr	r2, [r3, #0]
 8005c1a:	68fb      	ldr	r3, [r7, #12]
 8005c1c:	681b      	ldr	r3, [r3, #0]
 8005c1e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005c22:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005c24:	68fb      	ldr	r3, [r7, #12]
 8005c26:	681b      	ldr	r3, [r3, #0]
 8005c28:	691a      	ldr	r2, [r3, #16]
 8005c2a:	68fb      	ldr	r3, [r7, #12]
 8005c2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c2e:	b2d2      	uxtb	r2, r2
 8005c30:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005c32:	68fb      	ldr	r3, [r7, #12]
 8005c34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c36:	1c5a      	adds	r2, r3, #1
 8005c38:	68fb      	ldr	r3, [r7, #12]
 8005c3a:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005c3c:	68fb      	ldr	r3, [r7, #12]
 8005c3e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005c40:	3b01      	subs	r3, #1
 8005c42:	b29a      	uxth	r2, r3
 8005c44:	68fb      	ldr	r3, [r7, #12]
 8005c46:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005c48:	68fb      	ldr	r3, [r7, #12]
 8005c4a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005c4c:	b29b      	uxth	r3, r3
 8005c4e:	3b01      	subs	r3, #1
 8005c50:	b29a      	uxth	r2, r3
 8005c52:	68fb      	ldr	r3, [r7, #12]
 8005c54:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005c56:	68fb      	ldr	r3, [r7, #12]
 8005c58:	681b      	ldr	r3, [r3, #0]
 8005c5a:	691a      	ldr	r2, [r3, #16]
 8005c5c:	68fb      	ldr	r3, [r7, #12]
 8005c5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c60:	b2d2      	uxtb	r2, r2
 8005c62:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005c64:	68fb      	ldr	r3, [r7, #12]
 8005c66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c68:	1c5a      	adds	r2, r3, #1
 8005c6a:	68fb      	ldr	r3, [r7, #12]
 8005c6c:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005c6e:	68fb      	ldr	r3, [r7, #12]
 8005c70:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005c72:	3b01      	subs	r3, #1
 8005c74:	b29a      	uxth	r2, r3
 8005c76:	68fb      	ldr	r3, [r7, #12]
 8005c78:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005c7a:	68fb      	ldr	r3, [r7, #12]
 8005c7c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005c7e:	b29b      	uxth	r3, r3
 8005c80:	3b01      	subs	r3, #1
 8005c82:	b29a      	uxth	r2, r3
 8005c84:	68fb      	ldr	r3, [r7, #12]
 8005c86:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005c88:	e04e      	b.n	8005d28 <HAL_I2C_Mem_Read+0x430>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005c8a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005c8c:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8005c8e:	68f8      	ldr	r0, [r7, #12]
 8005c90:	f000 fcdc 	bl	800664c <I2C_WaitOnRXNEFlagUntilTimeout>
 8005c94:	4603      	mov	r3, r0
 8005c96:	2b00      	cmp	r3, #0
 8005c98:	d001      	beq.n	8005c9e <HAL_I2C_Mem_Read+0x3a6>
        {
          return HAL_ERROR;
 8005c9a:	2301      	movs	r3, #1
 8005c9c:	e058      	b.n	8005d50 <HAL_I2C_Mem_Read+0x458>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005c9e:	68fb      	ldr	r3, [r7, #12]
 8005ca0:	681b      	ldr	r3, [r3, #0]
 8005ca2:	691a      	ldr	r2, [r3, #16]
 8005ca4:	68fb      	ldr	r3, [r7, #12]
 8005ca6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ca8:	b2d2      	uxtb	r2, r2
 8005caa:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8005cac:	68fb      	ldr	r3, [r7, #12]
 8005cae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005cb0:	1c5a      	adds	r2, r3, #1
 8005cb2:	68fb      	ldr	r3, [r7, #12]
 8005cb4:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferSize--;
 8005cb6:	68fb      	ldr	r3, [r7, #12]
 8005cb8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005cba:	3b01      	subs	r3, #1
 8005cbc:	b29a      	uxth	r2, r3
 8005cbe:	68fb      	ldr	r3, [r7, #12]
 8005cc0:	851a      	strh	r2, [r3, #40]	; 0x28
        hi2c->XferCount--;
 8005cc2:	68fb      	ldr	r3, [r7, #12]
 8005cc4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005cc6:	b29b      	uxth	r3, r3
 8005cc8:	3b01      	subs	r3, #1
 8005cca:	b29a      	uxth	r2, r3
 8005ccc:	68fb      	ldr	r3, [r7, #12]
 8005cce:	855a      	strh	r2, [r3, #42]	; 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005cd0:	68fb      	ldr	r3, [r7, #12]
 8005cd2:	681b      	ldr	r3, [r3, #0]
 8005cd4:	695b      	ldr	r3, [r3, #20]
 8005cd6:	f003 0304 	and.w	r3, r3, #4
 8005cda:	2b04      	cmp	r3, #4
 8005cdc:	d124      	bne.n	8005d28 <HAL_I2C_Mem_Read+0x430>
        {
          if (hi2c->XferSize == 3U)
 8005cde:	68fb      	ldr	r3, [r7, #12]
 8005ce0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005ce2:	2b03      	cmp	r3, #3
 8005ce4:	d107      	bne.n	8005cf6 <HAL_I2C_Mem_Read+0x3fe>
          {
            /* Disable Acknowledge */
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005ce6:	68fb      	ldr	r3, [r7, #12]
 8005ce8:	681b      	ldr	r3, [r3, #0]
 8005cea:	681a      	ldr	r2, [r3, #0]
 8005cec:	68fb      	ldr	r3, [r7, #12]
 8005cee:	681b      	ldr	r3, [r3, #0]
 8005cf0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005cf4:	601a      	str	r2, [r3, #0]
          }
          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005cf6:	68fb      	ldr	r3, [r7, #12]
 8005cf8:	681b      	ldr	r3, [r3, #0]
 8005cfa:	691a      	ldr	r2, [r3, #16]
 8005cfc:	68fb      	ldr	r3, [r7, #12]
 8005cfe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d00:	b2d2      	uxtb	r2, r2
 8005d02:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005d04:	68fb      	ldr	r3, [r7, #12]
 8005d06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d08:	1c5a      	adds	r2, r3, #1
 8005d0a:	68fb      	ldr	r3, [r7, #12]
 8005d0c:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005d0e:	68fb      	ldr	r3, [r7, #12]
 8005d10:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005d12:	3b01      	subs	r3, #1
 8005d14:	b29a      	uxth	r2, r3
 8005d16:	68fb      	ldr	r3, [r7, #12]
 8005d18:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005d1a:	68fb      	ldr	r3, [r7, #12]
 8005d1c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005d1e:	b29b      	uxth	r3, r3
 8005d20:	3b01      	subs	r3, #1
 8005d22:	b29a      	uxth	r2, r3
 8005d24:	68fb      	ldr	r3, [r7, #12]
 8005d26:	855a      	strh	r2, [r3, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8005d28:	68fb      	ldr	r3, [r7, #12]
 8005d2a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005d2c:	2b00      	cmp	r3, #0
 8005d2e:	f47f aeb6 	bne.w	8005a9e <HAL_I2C_Mem_Read+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 8005d32:	68fb      	ldr	r3, [r7, #12]
 8005d34:	2220      	movs	r2, #32
 8005d36:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005d3a:	68fb      	ldr	r3, [r7, #12]
 8005d3c:	2200      	movs	r2, #0
 8005d3e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005d42:	68fb      	ldr	r3, [r7, #12]
 8005d44:	2200      	movs	r2, #0
 8005d46:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 8005d4a:	2300      	movs	r3, #0
 8005d4c:	e000      	b.n	8005d50 <HAL_I2C_Mem_Read+0x458>
  }
  else
  {
    return HAL_BUSY;
 8005d4e:	2302      	movs	r3, #2
  }
}
 8005d50:	4618      	mov	r0, r3
 8005d52:	3728      	adds	r7, #40	; 0x28
 8005d54:	46bd      	mov	sp, r7
 8005d56:	bd80      	pop	{r7, pc}
 8005d58:	00010004 	.word	0x00010004

08005d5c <I2C_MasterRequestWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8005d5c:	b580      	push	{r7, lr}
 8005d5e:	b088      	sub	sp, #32
 8005d60:	af02      	add	r7, sp, #8
 8005d62:	60f8      	str	r0, [r7, #12]
 8005d64:	607a      	str	r2, [r7, #4]
 8005d66:	603b      	str	r3, [r7, #0]
 8005d68:	460b      	mov	r3, r1
 8005d6a:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8005d6c:	68fb      	ldr	r3, [r7, #12]
 8005d6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005d70:	617b      	str	r3, [r7, #20]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8005d72:	697b      	ldr	r3, [r7, #20]
 8005d74:	2b08      	cmp	r3, #8
 8005d76:	d006      	beq.n	8005d86 <I2C_MasterRequestWrite+0x2a>
 8005d78:	697b      	ldr	r3, [r7, #20]
 8005d7a:	2b01      	cmp	r3, #1
 8005d7c:	d003      	beq.n	8005d86 <I2C_MasterRequestWrite+0x2a>
 8005d7e:	697b      	ldr	r3, [r7, #20]
 8005d80:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8005d84:	d108      	bne.n	8005d98 <I2C_MasterRequestWrite+0x3c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005d86:	68fb      	ldr	r3, [r7, #12]
 8005d88:	681b      	ldr	r3, [r3, #0]
 8005d8a:	681a      	ldr	r2, [r3, #0]
 8005d8c:	68fb      	ldr	r3, [r7, #12]
 8005d8e:	681b      	ldr	r3, [r3, #0]
 8005d90:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005d94:	601a      	str	r2, [r3, #0]
 8005d96:	e00b      	b.n	8005db0 <I2C_MasterRequestWrite+0x54>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 8005d98:	68fb      	ldr	r3, [r7, #12]
 8005d9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005d9c:	2b12      	cmp	r3, #18
 8005d9e:	d107      	bne.n	8005db0 <I2C_MasterRequestWrite+0x54>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005da0:	68fb      	ldr	r3, [r7, #12]
 8005da2:	681b      	ldr	r3, [r3, #0]
 8005da4:	681a      	ldr	r2, [r3, #0]
 8005da6:	68fb      	ldr	r3, [r7, #12]
 8005da8:	681b      	ldr	r3, [r3, #0]
 8005daa:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005dae:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005db0:	683b      	ldr	r3, [r7, #0]
 8005db2:	9300      	str	r3, [sp, #0]
 8005db4:	687b      	ldr	r3, [r7, #4]
 8005db6:	2200      	movs	r2, #0
 8005db8:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8005dbc:	68f8      	ldr	r0, [r7, #12]
 8005dbe:	f000 fa9b 	bl	80062f8 <I2C_WaitOnFlagUntilTimeout>
 8005dc2:	4603      	mov	r3, r0
 8005dc4:	2b00      	cmp	r3, #0
 8005dc6:	d00d      	beq.n	8005de4 <I2C_MasterRequestWrite+0x88>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005dc8:	68fb      	ldr	r3, [r7, #12]
 8005dca:	681b      	ldr	r3, [r3, #0]
 8005dcc:	681b      	ldr	r3, [r3, #0]
 8005dce:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005dd2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005dd6:	d103      	bne.n	8005de0 <I2C_MasterRequestWrite+0x84>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005dd8:	68fb      	ldr	r3, [r7, #12]
 8005dda:	f44f 7200 	mov.w	r2, #512	; 0x200
 8005dde:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8005de0:	2303      	movs	r3, #3
 8005de2:	e035      	b.n	8005e50 <I2C_MasterRequestWrite+0xf4>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8005de4:	68fb      	ldr	r3, [r7, #12]
 8005de6:	691b      	ldr	r3, [r3, #16]
 8005de8:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8005dec:	d108      	bne.n	8005e00 <I2C_MasterRequestWrite+0xa4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005dee:	897b      	ldrh	r3, [r7, #10]
 8005df0:	b2db      	uxtb	r3, r3
 8005df2:	461a      	mov	r2, r3
 8005df4:	68fb      	ldr	r3, [r7, #12]
 8005df6:	681b      	ldr	r3, [r3, #0]
 8005df8:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8005dfc:	611a      	str	r2, [r3, #16]
 8005dfe:	e01b      	b.n	8005e38 <I2C_MasterRequestWrite+0xdc>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8005e00:	897b      	ldrh	r3, [r7, #10]
 8005e02:	11db      	asrs	r3, r3, #7
 8005e04:	b2db      	uxtb	r3, r3
 8005e06:	f003 0306 	and.w	r3, r3, #6
 8005e0a:	b2db      	uxtb	r3, r3
 8005e0c:	f063 030f 	orn	r3, r3, #15
 8005e10:	b2da      	uxtb	r2, r3
 8005e12:	68fb      	ldr	r3, [r7, #12]
 8005e14:	681b      	ldr	r3, [r3, #0]
 8005e16:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8005e18:	683b      	ldr	r3, [r7, #0]
 8005e1a:	687a      	ldr	r2, [r7, #4]
 8005e1c:	490e      	ldr	r1, [pc, #56]	; (8005e58 <I2C_MasterRequestWrite+0xfc>)
 8005e1e:	68f8      	ldr	r0, [r7, #12]
 8005e20:	f000 fae4 	bl	80063ec <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005e24:	4603      	mov	r3, r0
 8005e26:	2b00      	cmp	r3, #0
 8005e28:	d001      	beq.n	8005e2e <I2C_MasterRequestWrite+0xd2>
    {
      return HAL_ERROR;
 8005e2a:	2301      	movs	r3, #1
 8005e2c:	e010      	b.n	8005e50 <I2C_MasterRequestWrite+0xf4>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8005e2e:	897b      	ldrh	r3, [r7, #10]
 8005e30:	b2da      	uxtb	r2, r3
 8005e32:	68fb      	ldr	r3, [r7, #12]
 8005e34:	681b      	ldr	r3, [r3, #0]
 8005e36:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005e38:	683b      	ldr	r3, [r7, #0]
 8005e3a:	687a      	ldr	r2, [r7, #4]
 8005e3c:	4907      	ldr	r1, [pc, #28]	; (8005e5c <I2C_MasterRequestWrite+0x100>)
 8005e3e:	68f8      	ldr	r0, [r7, #12]
 8005e40:	f000 fad4 	bl	80063ec <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005e44:	4603      	mov	r3, r0
 8005e46:	2b00      	cmp	r3, #0
 8005e48:	d001      	beq.n	8005e4e <I2C_MasterRequestWrite+0xf2>
  {
    return HAL_ERROR;
 8005e4a:	2301      	movs	r3, #1
 8005e4c:	e000      	b.n	8005e50 <I2C_MasterRequestWrite+0xf4>
  }

  return HAL_OK;
 8005e4e:	2300      	movs	r3, #0
}
 8005e50:	4618      	mov	r0, r3
 8005e52:	3718      	adds	r7, #24
 8005e54:	46bd      	mov	sp, r7
 8005e56:	bd80      	pop	{r7, pc}
 8005e58:	00010008 	.word	0x00010008
 8005e5c:	00010002 	.word	0x00010002

08005e60 <I2C_MasterRequestRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8005e60:	b580      	push	{r7, lr}
 8005e62:	b088      	sub	sp, #32
 8005e64:	af02      	add	r7, sp, #8
 8005e66:	60f8      	str	r0, [r7, #12]
 8005e68:	607a      	str	r2, [r7, #4]
 8005e6a:	603b      	str	r3, [r7, #0]
 8005e6c:	460b      	mov	r3, r1
 8005e6e:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8005e70:	68fb      	ldr	r3, [r7, #12]
 8005e72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005e74:	617b      	str	r3, [r7, #20]

  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005e76:	68fb      	ldr	r3, [r7, #12]
 8005e78:	681b      	ldr	r3, [r3, #0]
 8005e7a:	681a      	ldr	r2, [r3, #0]
 8005e7c:	68fb      	ldr	r3, [r7, #12]
 8005e7e:	681b      	ldr	r3, [r3, #0]
 8005e80:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005e84:	601a      	str	r2, [r3, #0]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME)  || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8005e86:	697b      	ldr	r3, [r7, #20]
 8005e88:	2b08      	cmp	r3, #8
 8005e8a:	d006      	beq.n	8005e9a <I2C_MasterRequestRead+0x3a>
 8005e8c:	697b      	ldr	r3, [r7, #20]
 8005e8e:	2b01      	cmp	r3, #1
 8005e90:	d003      	beq.n	8005e9a <I2C_MasterRequestRead+0x3a>
 8005e92:	697b      	ldr	r3, [r7, #20]
 8005e94:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8005e98:	d108      	bne.n	8005eac <I2C_MasterRequestRead+0x4c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005e9a:	68fb      	ldr	r3, [r7, #12]
 8005e9c:	681b      	ldr	r3, [r3, #0]
 8005e9e:	681a      	ldr	r2, [r3, #0]
 8005ea0:	68fb      	ldr	r3, [r7, #12]
 8005ea2:	681b      	ldr	r3, [r3, #0]
 8005ea4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005ea8:	601a      	str	r2, [r3, #0]
 8005eaa:	e00b      	b.n	8005ec4 <I2C_MasterRequestRead+0x64>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
 8005eac:	68fb      	ldr	r3, [r7, #12]
 8005eae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005eb0:	2b11      	cmp	r3, #17
 8005eb2:	d107      	bne.n	8005ec4 <I2C_MasterRequestRead+0x64>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005eb4:	68fb      	ldr	r3, [r7, #12]
 8005eb6:	681b      	ldr	r3, [r3, #0]
 8005eb8:	681a      	ldr	r2, [r3, #0]
 8005eba:	68fb      	ldr	r3, [r7, #12]
 8005ebc:	681b      	ldr	r3, [r3, #0]
 8005ebe:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005ec2:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005ec4:	683b      	ldr	r3, [r7, #0]
 8005ec6:	9300      	str	r3, [sp, #0]
 8005ec8:	687b      	ldr	r3, [r7, #4]
 8005eca:	2200      	movs	r2, #0
 8005ecc:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8005ed0:	68f8      	ldr	r0, [r7, #12]
 8005ed2:	f000 fa11 	bl	80062f8 <I2C_WaitOnFlagUntilTimeout>
 8005ed6:	4603      	mov	r3, r0
 8005ed8:	2b00      	cmp	r3, #0
 8005eda:	d00d      	beq.n	8005ef8 <I2C_MasterRequestRead+0x98>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005edc:	68fb      	ldr	r3, [r7, #12]
 8005ede:	681b      	ldr	r3, [r3, #0]
 8005ee0:	681b      	ldr	r3, [r3, #0]
 8005ee2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005ee6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005eea:	d103      	bne.n	8005ef4 <I2C_MasterRequestRead+0x94>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005eec:	68fb      	ldr	r3, [r7, #12]
 8005eee:	f44f 7200 	mov.w	r2, #512	; 0x200
 8005ef2:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8005ef4:	2303      	movs	r3, #3
 8005ef6:	e079      	b.n	8005fec <I2C_MasterRequestRead+0x18c>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8005ef8:	68fb      	ldr	r3, [r7, #12]
 8005efa:	691b      	ldr	r3, [r3, #16]
 8005efc:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8005f00:	d108      	bne.n	8005f14 <I2C_MasterRequestRead+0xb4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8005f02:	897b      	ldrh	r3, [r7, #10]
 8005f04:	b2db      	uxtb	r3, r3
 8005f06:	f043 0301 	orr.w	r3, r3, #1
 8005f0a:	b2da      	uxtb	r2, r3
 8005f0c:	68fb      	ldr	r3, [r7, #12]
 8005f0e:	681b      	ldr	r3, [r3, #0]
 8005f10:	611a      	str	r2, [r3, #16]
 8005f12:	e05f      	b.n	8005fd4 <I2C_MasterRequestRead+0x174>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8005f14:	897b      	ldrh	r3, [r7, #10]
 8005f16:	11db      	asrs	r3, r3, #7
 8005f18:	b2db      	uxtb	r3, r3
 8005f1a:	f003 0306 	and.w	r3, r3, #6
 8005f1e:	b2db      	uxtb	r3, r3
 8005f20:	f063 030f 	orn	r3, r3, #15
 8005f24:	b2da      	uxtb	r2, r3
 8005f26:	68fb      	ldr	r3, [r7, #12]
 8005f28:	681b      	ldr	r3, [r3, #0]
 8005f2a:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8005f2c:	683b      	ldr	r3, [r7, #0]
 8005f2e:	687a      	ldr	r2, [r7, #4]
 8005f30:	4930      	ldr	r1, [pc, #192]	; (8005ff4 <I2C_MasterRequestRead+0x194>)
 8005f32:	68f8      	ldr	r0, [r7, #12]
 8005f34:	f000 fa5a 	bl	80063ec <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005f38:	4603      	mov	r3, r0
 8005f3a:	2b00      	cmp	r3, #0
 8005f3c:	d001      	beq.n	8005f42 <I2C_MasterRequestRead+0xe2>
    {
      return HAL_ERROR;
 8005f3e:	2301      	movs	r3, #1
 8005f40:	e054      	b.n	8005fec <I2C_MasterRequestRead+0x18c>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8005f42:	897b      	ldrh	r3, [r7, #10]
 8005f44:	b2da      	uxtb	r2, r3
 8005f46:	68fb      	ldr	r3, [r7, #12]
 8005f48:	681b      	ldr	r3, [r3, #0]
 8005f4a:	611a      	str	r2, [r3, #16]

    /* Wait until ADDR flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005f4c:	683b      	ldr	r3, [r7, #0]
 8005f4e:	687a      	ldr	r2, [r7, #4]
 8005f50:	4929      	ldr	r1, [pc, #164]	; (8005ff8 <I2C_MasterRequestRead+0x198>)
 8005f52:	68f8      	ldr	r0, [r7, #12]
 8005f54:	f000 fa4a 	bl	80063ec <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005f58:	4603      	mov	r3, r0
 8005f5a:	2b00      	cmp	r3, #0
 8005f5c:	d001      	beq.n	8005f62 <I2C_MasterRequestRead+0x102>
    {
      return HAL_ERROR;
 8005f5e:	2301      	movs	r3, #1
 8005f60:	e044      	b.n	8005fec <I2C_MasterRequestRead+0x18c>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005f62:	2300      	movs	r3, #0
 8005f64:	613b      	str	r3, [r7, #16]
 8005f66:	68fb      	ldr	r3, [r7, #12]
 8005f68:	681b      	ldr	r3, [r3, #0]
 8005f6a:	695b      	ldr	r3, [r3, #20]
 8005f6c:	613b      	str	r3, [r7, #16]
 8005f6e:	68fb      	ldr	r3, [r7, #12]
 8005f70:	681b      	ldr	r3, [r3, #0]
 8005f72:	699b      	ldr	r3, [r3, #24]
 8005f74:	613b      	str	r3, [r7, #16]
 8005f76:	693b      	ldr	r3, [r7, #16]

    /* Generate Restart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005f78:	68fb      	ldr	r3, [r7, #12]
 8005f7a:	681b      	ldr	r3, [r3, #0]
 8005f7c:	681a      	ldr	r2, [r3, #0]
 8005f7e:	68fb      	ldr	r3, [r7, #12]
 8005f80:	681b      	ldr	r3, [r3, #0]
 8005f82:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005f86:	601a      	str	r2, [r3, #0]

    /* Wait until SB flag is set */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005f88:	683b      	ldr	r3, [r7, #0]
 8005f8a:	9300      	str	r3, [sp, #0]
 8005f8c:	687b      	ldr	r3, [r7, #4]
 8005f8e:	2200      	movs	r2, #0
 8005f90:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8005f94:	68f8      	ldr	r0, [r7, #12]
 8005f96:	f000 f9af 	bl	80062f8 <I2C_WaitOnFlagUntilTimeout>
 8005f9a:	4603      	mov	r3, r0
 8005f9c:	2b00      	cmp	r3, #0
 8005f9e:	d00d      	beq.n	8005fbc <I2C_MasterRequestRead+0x15c>
    {
      if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005fa0:	68fb      	ldr	r3, [r7, #12]
 8005fa2:	681b      	ldr	r3, [r3, #0]
 8005fa4:	681b      	ldr	r3, [r3, #0]
 8005fa6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005faa:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005fae:	d103      	bne.n	8005fb8 <I2C_MasterRequestRead+0x158>
      {
        hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005fb0:	68fb      	ldr	r3, [r7, #12]
 8005fb2:	f44f 7200 	mov.w	r2, #512	; 0x200
 8005fb6:	641a      	str	r2, [r3, #64]	; 0x40
      }
      return HAL_TIMEOUT;
 8005fb8:	2303      	movs	r3, #3
 8005fba:	e017      	b.n	8005fec <I2C_MasterRequestRead+0x18c>
    }

    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_READ(DevAddress);
 8005fbc:	897b      	ldrh	r3, [r7, #10]
 8005fbe:	11db      	asrs	r3, r3, #7
 8005fc0:	b2db      	uxtb	r3, r3
 8005fc2:	f003 0306 	and.w	r3, r3, #6
 8005fc6:	b2db      	uxtb	r3, r3
 8005fc8:	f063 030e 	orn	r3, r3, #14
 8005fcc:	b2da      	uxtb	r2, r3
 8005fce:	68fb      	ldr	r3, [r7, #12]
 8005fd0:	681b      	ldr	r3, [r3, #0]
 8005fd2:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005fd4:	683b      	ldr	r3, [r7, #0]
 8005fd6:	687a      	ldr	r2, [r7, #4]
 8005fd8:	4907      	ldr	r1, [pc, #28]	; (8005ff8 <I2C_MasterRequestRead+0x198>)
 8005fda:	68f8      	ldr	r0, [r7, #12]
 8005fdc:	f000 fa06 	bl	80063ec <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005fe0:	4603      	mov	r3, r0
 8005fe2:	2b00      	cmp	r3, #0
 8005fe4:	d001      	beq.n	8005fea <I2C_MasterRequestRead+0x18a>
  {
    return HAL_ERROR;
 8005fe6:	2301      	movs	r3, #1
 8005fe8:	e000      	b.n	8005fec <I2C_MasterRequestRead+0x18c>
  }

  return HAL_OK;
 8005fea:	2300      	movs	r3, #0
}
 8005fec:	4618      	mov	r0, r3
 8005fee:	3718      	adds	r7, #24
 8005ff0:	46bd      	mov	sp, r7
 8005ff2:	bd80      	pop	{r7, pc}
 8005ff4:	00010008 	.word	0x00010008
 8005ff8:	00010002 	.word	0x00010002

08005ffc <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 8005ffc:	b580      	push	{r7, lr}
 8005ffe:	b088      	sub	sp, #32
 8006000:	af02      	add	r7, sp, #8
 8006002:	60f8      	str	r0, [r7, #12]
 8006004:	4608      	mov	r0, r1
 8006006:	4611      	mov	r1, r2
 8006008:	461a      	mov	r2, r3
 800600a:	4603      	mov	r3, r0
 800600c:	817b      	strh	r3, [r7, #10]
 800600e:	460b      	mov	r3, r1
 8006010:	813b      	strh	r3, [r7, #8]
 8006012:	4613      	mov	r3, r2
 8006014:	80fb      	strh	r3, [r7, #6]
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006016:	68fb      	ldr	r3, [r7, #12]
 8006018:	681b      	ldr	r3, [r3, #0]
 800601a:	681a      	ldr	r2, [r3, #0]
 800601c:	68fb      	ldr	r3, [r7, #12]
 800601e:	681b      	ldr	r3, [r3, #0]
 8006020:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006024:	601a      	str	r2, [r3, #0]

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006026:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006028:	9300      	str	r3, [sp, #0]
 800602a:	6a3b      	ldr	r3, [r7, #32]
 800602c:	2200      	movs	r2, #0
 800602e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8006032:	68f8      	ldr	r0, [r7, #12]
 8006034:	f000 f960 	bl	80062f8 <I2C_WaitOnFlagUntilTimeout>
 8006038:	4603      	mov	r3, r0
 800603a:	2b00      	cmp	r3, #0
 800603c:	d00d      	beq.n	800605a <I2C_RequestMemoryWrite+0x5e>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800603e:	68fb      	ldr	r3, [r7, #12]
 8006040:	681b      	ldr	r3, [r3, #0]
 8006042:	681b      	ldr	r3, [r3, #0]
 8006044:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006048:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800604c:	d103      	bne.n	8006056 <I2C_RequestMemoryWrite+0x5a>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800604e:	68fb      	ldr	r3, [r7, #12]
 8006050:	f44f 7200 	mov.w	r2, #512	; 0x200
 8006054:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8006056:	2303      	movs	r3, #3
 8006058:	e05f      	b.n	800611a <I2C_RequestMemoryWrite+0x11e>
  }

  /* Send slave address */
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800605a:	897b      	ldrh	r3, [r7, #10]
 800605c:	b2db      	uxtb	r3, r3
 800605e:	461a      	mov	r2, r3
 8006060:	68fb      	ldr	r3, [r7, #12]
 8006062:	681b      	ldr	r3, [r3, #0]
 8006064:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8006068:	611a      	str	r2, [r3, #16]

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800606a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800606c:	6a3a      	ldr	r2, [r7, #32]
 800606e:	492d      	ldr	r1, [pc, #180]	; (8006124 <I2C_RequestMemoryWrite+0x128>)
 8006070:	68f8      	ldr	r0, [r7, #12]
 8006072:	f000 f9bb 	bl	80063ec <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006076:	4603      	mov	r3, r0
 8006078:	2b00      	cmp	r3, #0
 800607a:	d001      	beq.n	8006080 <I2C_RequestMemoryWrite+0x84>
  {
    return HAL_ERROR;
 800607c:	2301      	movs	r3, #1
 800607e:	e04c      	b.n	800611a <I2C_RequestMemoryWrite+0x11e>
  }

  /* Clear ADDR flag */
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006080:	2300      	movs	r3, #0
 8006082:	617b      	str	r3, [r7, #20]
 8006084:	68fb      	ldr	r3, [r7, #12]
 8006086:	681b      	ldr	r3, [r3, #0]
 8006088:	695b      	ldr	r3, [r3, #20]
 800608a:	617b      	str	r3, [r7, #20]
 800608c:	68fb      	ldr	r3, [r7, #12]
 800608e:	681b      	ldr	r3, [r3, #0]
 8006090:	699b      	ldr	r3, [r3, #24]
 8006092:	617b      	str	r3, [r7, #20]
 8006094:	697b      	ldr	r3, [r7, #20]

  /* Wait until TXE flag is set */
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006096:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006098:	6a39      	ldr	r1, [r7, #32]
 800609a:	68f8      	ldr	r0, [r7, #12]
 800609c:	f000 fa46 	bl	800652c <I2C_WaitOnTXEFlagUntilTimeout>
 80060a0:	4603      	mov	r3, r0
 80060a2:	2b00      	cmp	r3, #0
 80060a4:	d00d      	beq.n	80060c2 <I2C_RequestMemoryWrite+0xc6>
  {
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80060a6:	68fb      	ldr	r3, [r7, #12]
 80060a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80060aa:	2b04      	cmp	r3, #4
 80060ac:	d107      	bne.n	80060be <I2C_RequestMemoryWrite+0xc2>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80060ae:	68fb      	ldr	r3, [r7, #12]
 80060b0:	681b      	ldr	r3, [r3, #0]
 80060b2:	681a      	ldr	r2, [r3, #0]
 80060b4:	68fb      	ldr	r3, [r7, #12]
 80060b6:	681b      	ldr	r3, [r3, #0]
 80060b8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80060bc:	601a      	str	r2, [r3, #0]
    }
    return HAL_ERROR;
 80060be:	2301      	movs	r3, #1
 80060c0:	e02b      	b.n	800611a <I2C_RequestMemoryWrite+0x11e>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80060c2:	88fb      	ldrh	r3, [r7, #6]
 80060c4:	2b01      	cmp	r3, #1
 80060c6:	d105      	bne.n	80060d4 <I2C_RequestMemoryWrite+0xd8>
  {
    /* Send Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80060c8:	893b      	ldrh	r3, [r7, #8]
 80060ca:	b2da      	uxtb	r2, r3
 80060cc:	68fb      	ldr	r3, [r7, #12]
 80060ce:	681b      	ldr	r3, [r3, #0]
 80060d0:	611a      	str	r2, [r3, #16]
 80060d2:	e021      	b.n	8006118 <I2C_RequestMemoryWrite+0x11c>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80060d4:	893b      	ldrh	r3, [r7, #8]
 80060d6:	0a1b      	lsrs	r3, r3, #8
 80060d8:	b29b      	uxth	r3, r3
 80060da:	b2da      	uxtb	r2, r3
 80060dc:	68fb      	ldr	r3, [r7, #12]
 80060de:	681b      	ldr	r3, [r3, #0]
 80060e0:	611a      	str	r2, [r3, #16]

    /* Wait until TXE flag is set */
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80060e2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80060e4:	6a39      	ldr	r1, [r7, #32]
 80060e6:	68f8      	ldr	r0, [r7, #12]
 80060e8:	f000 fa20 	bl	800652c <I2C_WaitOnTXEFlagUntilTimeout>
 80060ec:	4603      	mov	r3, r0
 80060ee:	2b00      	cmp	r3, #0
 80060f0:	d00d      	beq.n	800610e <I2C_RequestMemoryWrite+0x112>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80060f2:	68fb      	ldr	r3, [r7, #12]
 80060f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80060f6:	2b04      	cmp	r3, #4
 80060f8:	d107      	bne.n	800610a <I2C_RequestMemoryWrite+0x10e>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80060fa:	68fb      	ldr	r3, [r7, #12]
 80060fc:	681b      	ldr	r3, [r3, #0]
 80060fe:	681a      	ldr	r2, [r3, #0]
 8006100:	68fb      	ldr	r3, [r7, #12]
 8006102:	681b      	ldr	r3, [r3, #0]
 8006104:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006108:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 800610a:	2301      	movs	r3, #1
 800610c:	e005      	b.n	800611a <I2C_RequestMemoryWrite+0x11e>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800610e:	893b      	ldrh	r3, [r7, #8]
 8006110:	b2da      	uxtb	r2, r3
 8006112:	68fb      	ldr	r3, [r7, #12]
 8006114:	681b      	ldr	r3, [r3, #0]
 8006116:	611a      	str	r2, [r3, #16]
  }

  return HAL_OK;
 8006118:	2300      	movs	r3, #0
}
 800611a:	4618      	mov	r0, r3
 800611c:	3718      	adds	r7, #24
 800611e:	46bd      	mov	sp, r7
 8006120:	bd80      	pop	{r7, pc}
 8006122:	bf00      	nop
 8006124:	00010002 	.word	0x00010002

08006128 <I2C_RequestMemoryRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 8006128:	b580      	push	{r7, lr}
 800612a:	b088      	sub	sp, #32
 800612c:	af02      	add	r7, sp, #8
 800612e:	60f8      	str	r0, [r7, #12]
 8006130:	4608      	mov	r0, r1
 8006132:	4611      	mov	r1, r2
 8006134:	461a      	mov	r2, r3
 8006136:	4603      	mov	r3, r0
 8006138:	817b      	strh	r3, [r7, #10]
 800613a:	460b      	mov	r3, r1
 800613c:	813b      	strh	r3, [r7, #8]
 800613e:	4613      	mov	r3, r2
 8006140:	80fb      	strh	r3, [r7, #6]
  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006142:	68fb      	ldr	r3, [r7, #12]
 8006144:	681b      	ldr	r3, [r3, #0]
 8006146:	681a      	ldr	r2, [r3, #0]
 8006148:	68fb      	ldr	r3, [r7, #12]
 800614a:	681b      	ldr	r3, [r3, #0]
 800614c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006150:	601a      	str	r2, [r3, #0]

  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006152:	68fb      	ldr	r3, [r7, #12]
 8006154:	681b      	ldr	r3, [r3, #0]
 8006156:	681a      	ldr	r2, [r3, #0]
 8006158:	68fb      	ldr	r3, [r7, #12]
 800615a:	681b      	ldr	r3, [r3, #0]
 800615c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006160:	601a      	str	r2, [r3, #0]

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006162:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006164:	9300      	str	r3, [sp, #0]
 8006166:	6a3b      	ldr	r3, [r7, #32]
 8006168:	2200      	movs	r2, #0
 800616a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800616e:	68f8      	ldr	r0, [r7, #12]
 8006170:	f000 f8c2 	bl	80062f8 <I2C_WaitOnFlagUntilTimeout>
 8006174:	4603      	mov	r3, r0
 8006176:	2b00      	cmp	r3, #0
 8006178:	d00d      	beq.n	8006196 <I2C_RequestMemoryRead+0x6e>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800617a:	68fb      	ldr	r3, [r7, #12]
 800617c:	681b      	ldr	r3, [r3, #0]
 800617e:	681b      	ldr	r3, [r3, #0]
 8006180:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006184:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8006188:	d103      	bne.n	8006192 <I2C_RequestMemoryRead+0x6a>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800618a:	68fb      	ldr	r3, [r7, #12]
 800618c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8006190:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8006192:	2303      	movs	r3, #3
 8006194:	e0aa      	b.n	80062ec <I2C_RequestMemoryRead+0x1c4>
  }

  /* Send slave address */
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006196:	897b      	ldrh	r3, [r7, #10]
 8006198:	b2db      	uxtb	r3, r3
 800619a:	461a      	mov	r2, r3
 800619c:	68fb      	ldr	r3, [r7, #12]
 800619e:	681b      	ldr	r3, [r3, #0]
 80061a0:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 80061a4:	611a      	str	r2, [r3, #16]

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80061a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80061a8:	6a3a      	ldr	r2, [r7, #32]
 80061aa:	4952      	ldr	r1, [pc, #328]	; (80062f4 <I2C_RequestMemoryRead+0x1cc>)
 80061ac:	68f8      	ldr	r0, [r7, #12]
 80061ae:	f000 f91d 	bl	80063ec <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80061b2:	4603      	mov	r3, r0
 80061b4:	2b00      	cmp	r3, #0
 80061b6:	d001      	beq.n	80061bc <I2C_RequestMemoryRead+0x94>
  {
    return HAL_ERROR;
 80061b8:	2301      	movs	r3, #1
 80061ba:	e097      	b.n	80062ec <I2C_RequestMemoryRead+0x1c4>
  }

  /* Clear ADDR flag */
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80061bc:	2300      	movs	r3, #0
 80061be:	617b      	str	r3, [r7, #20]
 80061c0:	68fb      	ldr	r3, [r7, #12]
 80061c2:	681b      	ldr	r3, [r3, #0]
 80061c4:	695b      	ldr	r3, [r3, #20]
 80061c6:	617b      	str	r3, [r7, #20]
 80061c8:	68fb      	ldr	r3, [r7, #12]
 80061ca:	681b      	ldr	r3, [r3, #0]
 80061cc:	699b      	ldr	r3, [r3, #24]
 80061ce:	617b      	str	r3, [r7, #20]
 80061d0:	697b      	ldr	r3, [r7, #20]

  /* Wait until TXE flag is set */
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80061d2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80061d4:	6a39      	ldr	r1, [r7, #32]
 80061d6:	68f8      	ldr	r0, [r7, #12]
 80061d8:	f000 f9a8 	bl	800652c <I2C_WaitOnTXEFlagUntilTimeout>
 80061dc:	4603      	mov	r3, r0
 80061de:	2b00      	cmp	r3, #0
 80061e0:	d00d      	beq.n	80061fe <I2C_RequestMemoryRead+0xd6>
  {
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80061e2:	68fb      	ldr	r3, [r7, #12]
 80061e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80061e6:	2b04      	cmp	r3, #4
 80061e8:	d107      	bne.n	80061fa <I2C_RequestMemoryRead+0xd2>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80061ea:	68fb      	ldr	r3, [r7, #12]
 80061ec:	681b      	ldr	r3, [r3, #0]
 80061ee:	681a      	ldr	r2, [r3, #0]
 80061f0:	68fb      	ldr	r3, [r7, #12]
 80061f2:	681b      	ldr	r3, [r3, #0]
 80061f4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80061f8:	601a      	str	r2, [r3, #0]
    }
    return HAL_ERROR;
 80061fa:	2301      	movs	r3, #1
 80061fc:	e076      	b.n	80062ec <I2C_RequestMemoryRead+0x1c4>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80061fe:	88fb      	ldrh	r3, [r7, #6]
 8006200:	2b01      	cmp	r3, #1
 8006202:	d105      	bne.n	8006210 <I2C_RequestMemoryRead+0xe8>
  {
    /* Send Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006204:	893b      	ldrh	r3, [r7, #8]
 8006206:	b2da      	uxtb	r2, r3
 8006208:	68fb      	ldr	r3, [r7, #12]
 800620a:	681b      	ldr	r3, [r3, #0]
 800620c:	611a      	str	r2, [r3, #16]
 800620e:	e021      	b.n	8006254 <I2C_RequestMemoryRead+0x12c>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006210:	893b      	ldrh	r3, [r7, #8]
 8006212:	0a1b      	lsrs	r3, r3, #8
 8006214:	b29b      	uxth	r3, r3
 8006216:	b2da      	uxtb	r2, r3
 8006218:	68fb      	ldr	r3, [r7, #12]
 800621a:	681b      	ldr	r3, [r3, #0]
 800621c:	611a      	str	r2, [r3, #16]

    /* Wait until TXE flag is set */
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800621e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006220:	6a39      	ldr	r1, [r7, #32]
 8006222:	68f8      	ldr	r0, [r7, #12]
 8006224:	f000 f982 	bl	800652c <I2C_WaitOnTXEFlagUntilTimeout>
 8006228:	4603      	mov	r3, r0
 800622a:	2b00      	cmp	r3, #0
 800622c:	d00d      	beq.n	800624a <I2C_RequestMemoryRead+0x122>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800622e:	68fb      	ldr	r3, [r7, #12]
 8006230:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006232:	2b04      	cmp	r3, #4
 8006234:	d107      	bne.n	8006246 <I2C_RequestMemoryRead+0x11e>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006236:	68fb      	ldr	r3, [r7, #12]
 8006238:	681b      	ldr	r3, [r3, #0]
 800623a:	681a      	ldr	r2, [r3, #0]
 800623c:	68fb      	ldr	r3, [r7, #12]
 800623e:	681b      	ldr	r3, [r3, #0]
 8006240:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006244:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 8006246:	2301      	movs	r3, #1
 8006248:	e050      	b.n	80062ec <I2C_RequestMemoryRead+0x1c4>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800624a:	893b      	ldrh	r3, [r7, #8]
 800624c:	b2da      	uxtb	r2, r3
 800624e:	68fb      	ldr	r3, [r7, #12]
 8006250:	681b      	ldr	r3, [r3, #0]
 8006252:	611a      	str	r2, [r3, #16]
  }

  /* Wait until TXE flag is set */
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006254:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006256:	6a39      	ldr	r1, [r7, #32]
 8006258:	68f8      	ldr	r0, [r7, #12]
 800625a:	f000 f967 	bl	800652c <I2C_WaitOnTXEFlagUntilTimeout>
 800625e:	4603      	mov	r3, r0
 8006260:	2b00      	cmp	r3, #0
 8006262:	d00d      	beq.n	8006280 <I2C_RequestMemoryRead+0x158>
  {
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006264:	68fb      	ldr	r3, [r7, #12]
 8006266:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006268:	2b04      	cmp	r3, #4
 800626a:	d107      	bne.n	800627c <I2C_RequestMemoryRead+0x154>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800626c:	68fb      	ldr	r3, [r7, #12]
 800626e:	681b      	ldr	r3, [r3, #0]
 8006270:	681a      	ldr	r2, [r3, #0]
 8006272:	68fb      	ldr	r3, [r7, #12]
 8006274:	681b      	ldr	r3, [r3, #0]
 8006276:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800627a:	601a      	str	r2, [r3, #0]
    }
    return HAL_ERROR;
 800627c:	2301      	movs	r3, #1
 800627e:	e035      	b.n	80062ec <I2C_RequestMemoryRead+0x1c4>
  }

  /* Generate Restart */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006280:	68fb      	ldr	r3, [r7, #12]
 8006282:	681b      	ldr	r3, [r3, #0]
 8006284:	681a      	ldr	r2, [r3, #0]
 8006286:	68fb      	ldr	r3, [r7, #12]
 8006288:	681b      	ldr	r3, [r3, #0]
 800628a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800628e:	601a      	str	r2, [r3, #0]

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006290:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006292:	9300      	str	r3, [sp, #0]
 8006294:	6a3b      	ldr	r3, [r7, #32]
 8006296:	2200      	movs	r2, #0
 8006298:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800629c:	68f8      	ldr	r0, [r7, #12]
 800629e:	f000 f82b 	bl	80062f8 <I2C_WaitOnFlagUntilTimeout>
 80062a2:	4603      	mov	r3, r0
 80062a4:	2b00      	cmp	r3, #0
 80062a6:	d00d      	beq.n	80062c4 <I2C_RequestMemoryRead+0x19c>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80062a8:	68fb      	ldr	r3, [r7, #12]
 80062aa:	681b      	ldr	r3, [r3, #0]
 80062ac:	681b      	ldr	r3, [r3, #0]
 80062ae:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80062b2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80062b6:	d103      	bne.n	80062c0 <I2C_RequestMemoryRead+0x198>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80062b8:	68fb      	ldr	r3, [r7, #12]
 80062ba:	f44f 7200 	mov.w	r2, #512	; 0x200
 80062be:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 80062c0:	2303      	movs	r3, #3
 80062c2:	e013      	b.n	80062ec <I2C_RequestMemoryRead+0x1c4>
  }

  /* Send slave address */
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80062c4:	897b      	ldrh	r3, [r7, #10]
 80062c6:	b2db      	uxtb	r3, r3
 80062c8:	f043 0301 	orr.w	r3, r3, #1
 80062cc:	b2da      	uxtb	r2, r3
 80062ce:	68fb      	ldr	r3, [r7, #12]
 80062d0:	681b      	ldr	r3, [r3, #0]
 80062d2:	611a      	str	r2, [r3, #16]

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80062d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80062d6:	6a3a      	ldr	r2, [r7, #32]
 80062d8:	4906      	ldr	r1, [pc, #24]	; (80062f4 <I2C_RequestMemoryRead+0x1cc>)
 80062da:	68f8      	ldr	r0, [r7, #12]
 80062dc:	f000 f886 	bl	80063ec <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80062e0:	4603      	mov	r3, r0
 80062e2:	2b00      	cmp	r3, #0
 80062e4:	d001      	beq.n	80062ea <I2C_RequestMemoryRead+0x1c2>
  {
    return HAL_ERROR;
 80062e6:	2301      	movs	r3, #1
 80062e8:	e000      	b.n	80062ec <I2C_RequestMemoryRead+0x1c4>
  }

  return HAL_OK;
 80062ea:	2300      	movs	r3, #0
}
 80062ec:	4618      	mov	r0, r3
 80062ee:	3718      	adds	r7, #24
 80062f0:	46bd      	mov	sp, r7
 80062f2:	bd80      	pop	{r7, pc}
 80062f4:	00010002 	.word	0x00010002

080062f8 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 80062f8:	b580      	push	{r7, lr}
 80062fa:	b084      	sub	sp, #16
 80062fc:	af00      	add	r7, sp, #0
 80062fe:	60f8      	str	r0, [r7, #12]
 8006300:	60b9      	str	r1, [r7, #8]
 8006302:	603b      	str	r3, [r7, #0]
 8006304:	4613      	mov	r3, r2
 8006306:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8006308:	e048      	b.n	800639c <I2C_WaitOnFlagUntilTimeout+0xa4>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800630a:	683b      	ldr	r3, [r7, #0]
 800630c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006310:	d044      	beq.n	800639c <I2C_WaitOnFlagUntilTimeout+0xa4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006312:	f7fd fe4d 	bl	8003fb0 <HAL_GetTick>
 8006316:	4602      	mov	r2, r0
 8006318:	69bb      	ldr	r3, [r7, #24]
 800631a:	1ad3      	subs	r3, r2, r3
 800631c:	683a      	ldr	r2, [r7, #0]
 800631e:	429a      	cmp	r2, r3
 8006320:	d302      	bcc.n	8006328 <I2C_WaitOnFlagUntilTimeout+0x30>
 8006322:	683b      	ldr	r3, [r7, #0]
 8006324:	2b00      	cmp	r3, #0
 8006326:	d139      	bne.n	800639c <I2C_WaitOnFlagUntilTimeout+0xa4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8006328:	68bb      	ldr	r3, [r7, #8]
 800632a:	0c1b      	lsrs	r3, r3, #16
 800632c:	b2db      	uxtb	r3, r3
 800632e:	2b01      	cmp	r3, #1
 8006330:	d10d      	bne.n	800634e <I2C_WaitOnFlagUntilTimeout+0x56>
 8006332:	68fb      	ldr	r3, [r7, #12]
 8006334:	681b      	ldr	r3, [r3, #0]
 8006336:	695b      	ldr	r3, [r3, #20]
 8006338:	43da      	mvns	r2, r3
 800633a:	68bb      	ldr	r3, [r7, #8]
 800633c:	4013      	ands	r3, r2
 800633e:	b29b      	uxth	r3, r3
 8006340:	2b00      	cmp	r3, #0
 8006342:	bf0c      	ite	eq
 8006344:	2301      	moveq	r3, #1
 8006346:	2300      	movne	r3, #0
 8006348:	b2db      	uxtb	r3, r3
 800634a:	461a      	mov	r2, r3
 800634c:	e00c      	b.n	8006368 <I2C_WaitOnFlagUntilTimeout+0x70>
 800634e:	68fb      	ldr	r3, [r7, #12]
 8006350:	681b      	ldr	r3, [r3, #0]
 8006352:	699b      	ldr	r3, [r3, #24]
 8006354:	43da      	mvns	r2, r3
 8006356:	68bb      	ldr	r3, [r7, #8]
 8006358:	4013      	ands	r3, r2
 800635a:	b29b      	uxth	r3, r3
 800635c:	2b00      	cmp	r3, #0
 800635e:	bf0c      	ite	eq
 8006360:	2301      	moveq	r3, #1
 8006362:	2300      	movne	r3, #0
 8006364:	b2db      	uxtb	r3, r3
 8006366:	461a      	mov	r2, r3
 8006368:	79fb      	ldrb	r3, [r7, #7]
 800636a:	429a      	cmp	r2, r3
 800636c:	d116      	bne.n	800639c <I2C_WaitOnFlagUntilTimeout+0xa4>
        {
          hi2c->PreviousState     = I2C_STATE_NONE;
 800636e:	68fb      	ldr	r3, [r7, #12]
 8006370:	2200      	movs	r2, #0
 8006372:	631a      	str	r2, [r3, #48]	; 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 8006374:	68fb      	ldr	r3, [r7, #12]
 8006376:	2220      	movs	r2, #32
 8006378:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 800637c:	68fb      	ldr	r3, [r7, #12]
 800637e:	2200      	movs	r2, #0
 8006380:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006384:	68fb      	ldr	r3, [r7, #12]
 8006386:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006388:	f043 0220 	orr.w	r2, r3, #32
 800638c:	68fb      	ldr	r3, [r7, #12]
 800638e:	641a      	str	r2, [r3, #64]	; 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8006390:	68fb      	ldr	r3, [r7, #12]
 8006392:	2200      	movs	r2, #0
 8006394:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

          return HAL_ERROR;
 8006398:	2301      	movs	r3, #1
 800639a:	e023      	b.n	80063e4 <I2C_WaitOnFlagUntilTimeout+0xec>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800639c:	68bb      	ldr	r3, [r7, #8]
 800639e:	0c1b      	lsrs	r3, r3, #16
 80063a0:	b2db      	uxtb	r3, r3
 80063a2:	2b01      	cmp	r3, #1
 80063a4:	d10d      	bne.n	80063c2 <I2C_WaitOnFlagUntilTimeout+0xca>
 80063a6:	68fb      	ldr	r3, [r7, #12]
 80063a8:	681b      	ldr	r3, [r3, #0]
 80063aa:	695b      	ldr	r3, [r3, #20]
 80063ac:	43da      	mvns	r2, r3
 80063ae:	68bb      	ldr	r3, [r7, #8]
 80063b0:	4013      	ands	r3, r2
 80063b2:	b29b      	uxth	r3, r3
 80063b4:	2b00      	cmp	r3, #0
 80063b6:	bf0c      	ite	eq
 80063b8:	2301      	moveq	r3, #1
 80063ba:	2300      	movne	r3, #0
 80063bc:	b2db      	uxtb	r3, r3
 80063be:	461a      	mov	r2, r3
 80063c0:	e00c      	b.n	80063dc <I2C_WaitOnFlagUntilTimeout+0xe4>
 80063c2:	68fb      	ldr	r3, [r7, #12]
 80063c4:	681b      	ldr	r3, [r3, #0]
 80063c6:	699b      	ldr	r3, [r3, #24]
 80063c8:	43da      	mvns	r2, r3
 80063ca:	68bb      	ldr	r3, [r7, #8]
 80063cc:	4013      	ands	r3, r2
 80063ce:	b29b      	uxth	r3, r3
 80063d0:	2b00      	cmp	r3, #0
 80063d2:	bf0c      	ite	eq
 80063d4:	2301      	moveq	r3, #1
 80063d6:	2300      	movne	r3, #0
 80063d8:	b2db      	uxtb	r3, r3
 80063da:	461a      	mov	r2, r3
 80063dc:	79fb      	ldrb	r3, [r7, #7]
 80063de:	429a      	cmp	r2, r3
 80063e0:	d093      	beq.n	800630a <I2C_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 80063e2:	2300      	movs	r3, #0
}
 80063e4:	4618      	mov	r0, r3
 80063e6:	3710      	adds	r7, #16
 80063e8:	46bd      	mov	sp, r7
 80063ea:	bd80      	pop	{r7, pc}

080063ec <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 80063ec:	b580      	push	{r7, lr}
 80063ee:	b084      	sub	sp, #16
 80063f0:	af00      	add	r7, sp, #0
 80063f2:	60f8      	str	r0, [r7, #12]
 80063f4:	60b9      	str	r1, [r7, #8]
 80063f6:	607a      	str	r2, [r7, #4]
 80063f8:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80063fa:	e071      	b.n	80064e0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80063fc:	68fb      	ldr	r3, [r7, #12]
 80063fe:	681b      	ldr	r3, [r3, #0]
 8006400:	695b      	ldr	r3, [r3, #20]
 8006402:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8006406:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800640a:	d123      	bne.n	8006454 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800640c:	68fb      	ldr	r3, [r7, #12]
 800640e:	681b      	ldr	r3, [r3, #0]
 8006410:	681a      	ldr	r2, [r3, #0]
 8006412:	68fb      	ldr	r3, [r7, #12]
 8006414:	681b      	ldr	r3, [r3, #0]
 8006416:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800641a:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800641c:	68fb      	ldr	r3, [r7, #12]
 800641e:	681b      	ldr	r3, [r3, #0]
 8006420:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8006424:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8006426:	68fb      	ldr	r3, [r7, #12]
 8006428:	2200      	movs	r2, #0
 800642a:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800642c:	68fb      	ldr	r3, [r7, #12]
 800642e:	2220      	movs	r2, #32
 8006430:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006434:	68fb      	ldr	r3, [r7, #12]
 8006436:	2200      	movs	r2, #0
 8006438:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800643c:	68fb      	ldr	r3, [r7, #12]
 800643e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006440:	f043 0204 	orr.w	r2, r3, #4
 8006444:	68fb      	ldr	r3, [r7, #12]
 8006446:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8006448:	68fb      	ldr	r3, [r7, #12]
 800644a:	2200      	movs	r2, #0
 800644c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 8006450:	2301      	movs	r3, #1
 8006452:	e067      	b.n	8006524 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8006454:	687b      	ldr	r3, [r7, #4]
 8006456:	f1b3 3fff 	cmp.w	r3, #4294967295
 800645a:	d041      	beq.n	80064e0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800645c:	f7fd fda8 	bl	8003fb0 <HAL_GetTick>
 8006460:	4602      	mov	r2, r0
 8006462:	683b      	ldr	r3, [r7, #0]
 8006464:	1ad3      	subs	r3, r2, r3
 8006466:	687a      	ldr	r2, [r7, #4]
 8006468:	429a      	cmp	r2, r3
 800646a:	d302      	bcc.n	8006472 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 800646c:	687b      	ldr	r3, [r7, #4]
 800646e:	2b00      	cmp	r3, #0
 8006470:	d136      	bne.n	80064e0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 8006472:	68bb      	ldr	r3, [r7, #8]
 8006474:	0c1b      	lsrs	r3, r3, #16
 8006476:	b2db      	uxtb	r3, r3
 8006478:	2b01      	cmp	r3, #1
 800647a:	d10c      	bne.n	8006496 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 800647c:	68fb      	ldr	r3, [r7, #12]
 800647e:	681b      	ldr	r3, [r3, #0]
 8006480:	695b      	ldr	r3, [r3, #20]
 8006482:	43da      	mvns	r2, r3
 8006484:	68bb      	ldr	r3, [r7, #8]
 8006486:	4013      	ands	r3, r2
 8006488:	b29b      	uxth	r3, r3
 800648a:	2b00      	cmp	r3, #0
 800648c:	bf14      	ite	ne
 800648e:	2301      	movne	r3, #1
 8006490:	2300      	moveq	r3, #0
 8006492:	b2db      	uxtb	r3, r3
 8006494:	e00b      	b.n	80064ae <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8006496:	68fb      	ldr	r3, [r7, #12]
 8006498:	681b      	ldr	r3, [r3, #0]
 800649a:	699b      	ldr	r3, [r3, #24]
 800649c:	43da      	mvns	r2, r3
 800649e:	68bb      	ldr	r3, [r7, #8]
 80064a0:	4013      	ands	r3, r2
 80064a2:	b29b      	uxth	r3, r3
 80064a4:	2b00      	cmp	r3, #0
 80064a6:	bf14      	ite	ne
 80064a8:	2301      	movne	r3, #1
 80064aa:	2300      	moveq	r3, #0
 80064ac:	b2db      	uxtb	r3, r3
 80064ae:	2b00      	cmp	r3, #0
 80064b0:	d016      	beq.n	80064e0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 80064b2:	68fb      	ldr	r3, [r7, #12]
 80064b4:	2200      	movs	r2, #0
 80064b6:	631a      	str	r2, [r3, #48]	; 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80064b8:	68fb      	ldr	r3, [r7, #12]
 80064ba:	2220      	movs	r2, #32
 80064bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 80064c0:	68fb      	ldr	r3, [r7, #12]
 80064c2:	2200      	movs	r2, #0
 80064c4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80064c8:	68fb      	ldr	r3, [r7, #12]
 80064ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80064cc:	f043 0220 	orr.w	r2, r3, #32
 80064d0:	68fb      	ldr	r3, [r7, #12]
 80064d2:	641a      	str	r2, [r3, #64]	; 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 80064d4:	68fb      	ldr	r3, [r7, #12]
 80064d6:	2200      	movs	r2, #0
 80064d8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

          return HAL_ERROR;
 80064dc:	2301      	movs	r3, #1
 80064de:	e021      	b.n	8006524 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80064e0:	68bb      	ldr	r3, [r7, #8]
 80064e2:	0c1b      	lsrs	r3, r3, #16
 80064e4:	b2db      	uxtb	r3, r3
 80064e6:	2b01      	cmp	r3, #1
 80064e8:	d10c      	bne.n	8006504 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 80064ea:	68fb      	ldr	r3, [r7, #12]
 80064ec:	681b      	ldr	r3, [r3, #0]
 80064ee:	695b      	ldr	r3, [r3, #20]
 80064f0:	43da      	mvns	r2, r3
 80064f2:	68bb      	ldr	r3, [r7, #8]
 80064f4:	4013      	ands	r3, r2
 80064f6:	b29b      	uxth	r3, r3
 80064f8:	2b00      	cmp	r3, #0
 80064fa:	bf14      	ite	ne
 80064fc:	2301      	movne	r3, #1
 80064fe:	2300      	moveq	r3, #0
 8006500:	b2db      	uxtb	r3, r3
 8006502:	e00b      	b.n	800651c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8006504:	68fb      	ldr	r3, [r7, #12]
 8006506:	681b      	ldr	r3, [r3, #0]
 8006508:	699b      	ldr	r3, [r3, #24]
 800650a:	43da      	mvns	r2, r3
 800650c:	68bb      	ldr	r3, [r7, #8]
 800650e:	4013      	ands	r3, r2
 8006510:	b29b      	uxth	r3, r3
 8006512:	2b00      	cmp	r3, #0
 8006514:	bf14      	ite	ne
 8006516:	2301      	movne	r3, #1
 8006518:	2300      	moveq	r3, #0
 800651a:	b2db      	uxtb	r3, r3
 800651c:	2b00      	cmp	r3, #0
 800651e:	f47f af6d 	bne.w	80063fc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
        }
      }
    }
  }
  return HAL_OK;
 8006522:	2300      	movs	r3, #0
}
 8006524:	4618      	mov	r0, r3
 8006526:	3710      	adds	r7, #16
 8006528:	46bd      	mov	sp, r7
 800652a:	bd80      	pop	{r7, pc}

0800652c <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 800652c:	b580      	push	{r7, lr}
 800652e:	b084      	sub	sp, #16
 8006530:	af00      	add	r7, sp, #0
 8006532:	60f8      	str	r0, [r7, #12]
 8006534:	60b9      	str	r1, [r7, #8]
 8006536:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8006538:	e034      	b.n	80065a4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800653a:	68f8      	ldr	r0, [r7, #12]
 800653c:	f000 f8e3 	bl	8006706 <I2C_IsAcknowledgeFailed>
 8006540:	4603      	mov	r3, r0
 8006542:	2b00      	cmp	r3, #0
 8006544:	d001      	beq.n	800654a <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 8006546:	2301      	movs	r3, #1
 8006548:	e034      	b.n	80065b4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800654a:	68bb      	ldr	r3, [r7, #8]
 800654c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006550:	d028      	beq.n	80065a4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006552:	f7fd fd2d 	bl	8003fb0 <HAL_GetTick>
 8006556:	4602      	mov	r2, r0
 8006558:	687b      	ldr	r3, [r7, #4]
 800655a:	1ad3      	subs	r3, r2, r3
 800655c:	68ba      	ldr	r2, [r7, #8]
 800655e:	429a      	cmp	r2, r3
 8006560:	d302      	bcc.n	8006568 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8006562:	68bb      	ldr	r3, [r7, #8]
 8006564:	2b00      	cmp	r3, #0
 8006566:	d11d      	bne.n	80065a4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 8006568:	68fb      	ldr	r3, [r7, #12]
 800656a:	681b      	ldr	r3, [r3, #0]
 800656c:	695b      	ldr	r3, [r3, #20]
 800656e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006572:	2b80      	cmp	r3, #128	; 0x80
 8006574:	d016      	beq.n	80065a4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 8006576:	68fb      	ldr	r3, [r7, #12]
 8006578:	2200      	movs	r2, #0
 800657a:	631a      	str	r2, [r3, #48]	; 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800657c:	68fb      	ldr	r3, [r7, #12]
 800657e:	2220      	movs	r2, #32
 8006580:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006584:	68fb      	ldr	r3, [r7, #12]
 8006586:	2200      	movs	r2, #0
 8006588:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800658c:	68fb      	ldr	r3, [r7, #12]
 800658e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006590:	f043 0220 	orr.w	r2, r3, #32
 8006594:	68fb      	ldr	r3, [r7, #12]
 8006596:	641a      	str	r2, [r3, #64]	; 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8006598:	68fb      	ldr	r3, [r7, #12]
 800659a:	2200      	movs	r2, #0
 800659c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

          return HAL_ERROR;
 80065a0:	2301      	movs	r3, #1
 80065a2:	e007      	b.n	80065b4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80065a4:	68fb      	ldr	r3, [r7, #12]
 80065a6:	681b      	ldr	r3, [r3, #0]
 80065a8:	695b      	ldr	r3, [r3, #20]
 80065aa:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80065ae:	2b80      	cmp	r3, #128	; 0x80
 80065b0:	d1c3      	bne.n	800653a <I2C_WaitOnTXEFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 80065b2:	2300      	movs	r3, #0
}
 80065b4:	4618      	mov	r0, r3
 80065b6:	3710      	adds	r7, #16
 80065b8:	46bd      	mov	sp, r7
 80065ba:	bd80      	pop	{r7, pc}

080065bc <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 80065bc:	b580      	push	{r7, lr}
 80065be:	b084      	sub	sp, #16
 80065c0:	af00      	add	r7, sp, #0
 80065c2:	60f8      	str	r0, [r7, #12]
 80065c4:	60b9      	str	r1, [r7, #8]
 80065c6:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80065c8:	e034      	b.n	8006634 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80065ca:	68f8      	ldr	r0, [r7, #12]
 80065cc:	f000 f89b 	bl	8006706 <I2C_IsAcknowledgeFailed>
 80065d0:	4603      	mov	r3, r0
 80065d2:	2b00      	cmp	r3, #0
 80065d4:	d001      	beq.n	80065da <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 80065d6:	2301      	movs	r3, #1
 80065d8:	e034      	b.n	8006644 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80065da:	68bb      	ldr	r3, [r7, #8]
 80065dc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80065e0:	d028      	beq.n	8006634 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80065e2:	f7fd fce5 	bl	8003fb0 <HAL_GetTick>
 80065e6:	4602      	mov	r2, r0
 80065e8:	687b      	ldr	r3, [r7, #4]
 80065ea:	1ad3      	subs	r3, r2, r3
 80065ec:	68ba      	ldr	r2, [r7, #8]
 80065ee:	429a      	cmp	r2, r3
 80065f0:	d302      	bcc.n	80065f8 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 80065f2:	68bb      	ldr	r3, [r7, #8]
 80065f4:	2b00      	cmp	r3, #0
 80065f6:	d11d      	bne.n	8006634 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 80065f8:	68fb      	ldr	r3, [r7, #12]
 80065fa:	681b      	ldr	r3, [r3, #0]
 80065fc:	695b      	ldr	r3, [r3, #20]
 80065fe:	f003 0304 	and.w	r3, r3, #4
 8006602:	2b04      	cmp	r3, #4
 8006604:	d016      	beq.n	8006634 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 8006606:	68fb      	ldr	r3, [r7, #12]
 8006608:	2200      	movs	r2, #0
 800660a:	631a      	str	r2, [r3, #48]	; 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800660c:	68fb      	ldr	r3, [r7, #12]
 800660e:	2220      	movs	r2, #32
 8006610:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006614:	68fb      	ldr	r3, [r7, #12]
 8006616:	2200      	movs	r2, #0
 8006618:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800661c:	68fb      	ldr	r3, [r7, #12]
 800661e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006620:	f043 0220 	orr.w	r2, r3, #32
 8006624:	68fb      	ldr	r3, [r7, #12]
 8006626:	641a      	str	r2, [r3, #64]	; 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8006628:	68fb      	ldr	r3, [r7, #12]
 800662a:	2200      	movs	r2, #0
 800662c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

          return HAL_ERROR;
 8006630:	2301      	movs	r3, #1
 8006632:	e007      	b.n	8006644 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8006634:	68fb      	ldr	r3, [r7, #12]
 8006636:	681b      	ldr	r3, [r3, #0]
 8006638:	695b      	ldr	r3, [r3, #20]
 800663a:	f003 0304 	and.w	r3, r3, #4
 800663e:	2b04      	cmp	r3, #4
 8006640:	d1c3      	bne.n	80065ca <I2C_WaitOnBTFFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 8006642:	2300      	movs	r3, #0
}
 8006644:	4618      	mov	r0, r3
 8006646:	3710      	adds	r7, #16
 8006648:	46bd      	mov	sp, r7
 800664a:	bd80      	pop	{r7, pc}

0800664c <I2C_WaitOnRXNEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 800664c:	b580      	push	{r7, lr}
 800664e:	b084      	sub	sp, #16
 8006650:	af00      	add	r7, sp, #0
 8006652:	60f8      	str	r0, [r7, #12]
 8006654:	60b9      	str	r1, [r7, #8]
 8006656:	607a      	str	r2, [r7, #4]

  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8006658:	e049      	b.n	80066ee <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
  {
    /* Check if a STOPF is detected */
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800665a:	68fb      	ldr	r3, [r7, #12]
 800665c:	681b      	ldr	r3, [r3, #0]
 800665e:	695b      	ldr	r3, [r3, #20]
 8006660:	f003 0310 	and.w	r3, r3, #16
 8006664:	2b10      	cmp	r3, #16
 8006666:	d119      	bne.n	800669c <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8006668:	68fb      	ldr	r3, [r7, #12]
 800666a:	681b      	ldr	r3, [r3, #0]
 800666c:	f06f 0210 	mvn.w	r2, #16
 8006670:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8006672:	68fb      	ldr	r3, [r7, #12]
 8006674:	2200      	movs	r2, #0
 8006676:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006678:	68fb      	ldr	r3, [r7, #12]
 800667a:	2220      	movs	r2, #32
 800667c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006680:	68fb      	ldr	r3, [r7, #12]
 8006682:	2200      	movs	r2, #0
 8006684:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8006688:	68fb      	ldr	r3, [r7, #12]
 800668a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800668c:	68fb      	ldr	r3, [r7, #12]
 800668e:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8006690:	68fb      	ldr	r3, [r7, #12]
 8006692:	2200      	movs	r2, #0
 8006694:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 8006698:	2301      	movs	r3, #1
 800669a:	e030      	b.n	80066fe <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800669c:	f7fd fc88 	bl	8003fb0 <HAL_GetTick>
 80066a0:	4602      	mov	r2, r0
 80066a2:	687b      	ldr	r3, [r7, #4]
 80066a4:	1ad3      	subs	r3, r2, r3
 80066a6:	68ba      	ldr	r2, [r7, #8]
 80066a8:	429a      	cmp	r2, r3
 80066aa:	d302      	bcc.n	80066b2 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 80066ac:	68bb      	ldr	r3, [r7, #8]
 80066ae:	2b00      	cmp	r3, #0
 80066b0:	d11d      	bne.n	80066ee <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
    {
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 80066b2:	68fb      	ldr	r3, [r7, #12]
 80066b4:	681b      	ldr	r3, [r3, #0]
 80066b6:	695b      	ldr	r3, [r3, #20]
 80066b8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80066bc:	2b40      	cmp	r3, #64	; 0x40
 80066be:	d016      	beq.n	80066ee <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 80066c0:	68fb      	ldr	r3, [r7, #12]
 80066c2:	2200      	movs	r2, #0
 80066c4:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80066c6:	68fb      	ldr	r3, [r7, #12]
 80066c8:	2220      	movs	r2, #32
 80066ca:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80066ce:	68fb      	ldr	r3, [r7, #12]
 80066d0:	2200      	movs	r2, #0
 80066d2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80066d6:	68fb      	ldr	r3, [r7, #12]
 80066d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80066da:	f043 0220 	orr.w	r2, r3, #32
 80066de:	68fb      	ldr	r3, [r7, #12]
 80066e0:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80066e2:	68fb      	ldr	r3, [r7, #12]
 80066e4:	2200      	movs	r2, #0
 80066e6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 80066ea:	2301      	movs	r3, #1
 80066ec:	e007      	b.n	80066fe <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80066ee:	68fb      	ldr	r3, [r7, #12]
 80066f0:	681b      	ldr	r3, [r3, #0]
 80066f2:	695b      	ldr	r3, [r3, #20]
 80066f4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80066f8:	2b40      	cmp	r3, #64	; 0x40
 80066fa:	d1ae      	bne.n	800665a <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 80066fc:	2300      	movs	r3, #0
}
 80066fe:	4618      	mov	r0, r3
 8006700:	3710      	adds	r7, #16
 8006702:	46bd      	mov	sp, r7
 8006704:	bd80      	pop	{r7, pc}

08006706 <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 8006706:	b480      	push	{r7}
 8006708:	b083      	sub	sp, #12
 800670a:	af00      	add	r7, sp, #0
 800670c:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800670e:	687b      	ldr	r3, [r7, #4]
 8006710:	681b      	ldr	r3, [r3, #0]
 8006712:	695b      	ldr	r3, [r3, #20]
 8006714:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8006718:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800671c:	d11b      	bne.n	8006756 <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800671e:	687b      	ldr	r3, [r7, #4]
 8006720:	681b      	ldr	r3, [r3, #0]
 8006722:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8006726:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 8006728:	687b      	ldr	r3, [r7, #4]
 800672a:	2200      	movs	r2, #0
 800672c:	631a      	str	r2, [r3, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800672e:	687b      	ldr	r3, [r7, #4]
 8006730:	2220      	movs	r2, #32
 8006732:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006736:	687b      	ldr	r3, [r7, #4]
 8006738:	2200      	movs	r2, #0
 800673a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800673e:	687b      	ldr	r3, [r7, #4]
 8006740:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006742:	f043 0204 	orr.w	r2, r3, #4
 8006746:	687b      	ldr	r3, [r7, #4]
 8006748:	641a      	str	r2, [r3, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800674a:	687b      	ldr	r3, [r7, #4]
 800674c:	2200      	movs	r2, #0
 800674e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_ERROR;
 8006752:	2301      	movs	r3, #1
 8006754:	e000      	b.n	8006758 <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 8006756:	2300      	movs	r3, #0
}
 8006758:	4618      	mov	r0, r3
 800675a:	370c      	adds	r7, #12
 800675c:	46bd      	mov	sp, r7
 800675e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006762:	4770      	bx	lr

08006764 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006764:	b580      	push	{r7, lr}
 8006766:	b086      	sub	sp, #24
 8006768:	af00      	add	r7, sp, #0
 800676a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800676c:	687b      	ldr	r3, [r7, #4]
 800676e:	2b00      	cmp	r3, #0
 8006770:	d101      	bne.n	8006776 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8006772:	2301      	movs	r3, #1
 8006774:	e267      	b.n	8006c46 <HAL_RCC_OscConfig+0x4e2>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006776:	687b      	ldr	r3, [r7, #4]
 8006778:	681b      	ldr	r3, [r3, #0]
 800677a:	f003 0301 	and.w	r3, r3, #1
 800677e:	2b00      	cmp	r3, #0
 8006780:	d075      	beq.n	800686e <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8006782:	4b88      	ldr	r3, [pc, #544]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 8006784:	689b      	ldr	r3, [r3, #8]
 8006786:	f003 030c 	and.w	r3, r3, #12
 800678a:	2b04      	cmp	r3, #4
 800678c:	d00c      	beq.n	80067a8 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800678e:	4b85      	ldr	r3, [pc, #532]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 8006790:	689b      	ldr	r3, [r3, #8]
 8006792:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8006796:	2b08      	cmp	r3, #8
 8006798:	d112      	bne.n	80067c0 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800679a:	4b82      	ldr	r3, [pc, #520]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 800679c:	685b      	ldr	r3, [r3, #4]
 800679e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80067a2:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80067a6:	d10b      	bne.n	80067c0 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80067a8:	4b7e      	ldr	r3, [pc, #504]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 80067aa:	681b      	ldr	r3, [r3, #0]
 80067ac:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80067b0:	2b00      	cmp	r3, #0
 80067b2:	d05b      	beq.n	800686c <HAL_RCC_OscConfig+0x108>
 80067b4:	687b      	ldr	r3, [r7, #4]
 80067b6:	685b      	ldr	r3, [r3, #4]
 80067b8:	2b00      	cmp	r3, #0
 80067ba:	d157      	bne.n	800686c <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 80067bc:	2301      	movs	r3, #1
 80067be:	e242      	b.n	8006c46 <HAL_RCC_OscConfig+0x4e2>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80067c0:	687b      	ldr	r3, [r7, #4]
 80067c2:	685b      	ldr	r3, [r3, #4]
 80067c4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80067c8:	d106      	bne.n	80067d8 <HAL_RCC_OscConfig+0x74>
 80067ca:	4b76      	ldr	r3, [pc, #472]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 80067cc:	681b      	ldr	r3, [r3, #0]
 80067ce:	4a75      	ldr	r2, [pc, #468]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 80067d0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80067d4:	6013      	str	r3, [r2, #0]
 80067d6:	e01d      	b.n	8006814 <HAL_RCC_OscConfig+0xb0>
 80067d8:	687b      	ldr	r3, [r7, #4]
 80067da:	685b      	ldr	r3, [r3, #4]
 80067dc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80067e0:	d10c      	bne.n	80067fc <HAL_RCC_OscConfig+0x98>
 80067e2:	4b70      	ldr	r3, [pc, #448]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 80067e4:	681b      	ldr	r3, [r3, #0]
 80067e6:	4a6f      	ldr	r2, [pc, #444]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 80067e8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80067ec:	6013      	str	r3, [r2, #0]
 80067ee:	4b6d      	ldr	r3, [pc, #436]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 80067f0:	681b      	ldr	r3, [r3, #0]
 80067f2:	4a6c      	ldr	r2, [pc, #432]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 80067f4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80067f8:	6013      	str	r3, [r2, #0]
 80067fa:	e00b      	b.n	8006814 <HAL_RCC_OscConfig+0xb0>
 80067fc:	4b69      	ldr	r3, [pc, #420]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 80067fe:	681b      	ldr	r3, [r3, #0]
 8006800:	4a68      	ldr	r2, [pc, #416]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 8006802:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006806:	6013      	str	r3, [r2, #0]
 8006808:	4b66      	ldr	r3, [pc, #408]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 800680a:	681b      	ldr	r3, [r3, #0]
 800680c:	4a65      	ldr	r2, [pc, #404]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 800680e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006812:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006814:	687b      	ldr	r3, [r7, #4]
 8006816:	685b      	ldr	r3, [r3, #4]
 8006818:	2b00      	cmp	r3, #0
 800681a:	d013      	beq.n	8006844 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800681c:	f7fd fbc8 	bl	8003fb0 <HAL_GetTick>
 8006820:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006822:	e008      	b.n	8006836 <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006824:	f7fd fbc4 	bl	8003fb0 <HAL_GetTick>
 8006828:	4602      	mov	r2, r0
 800682a:	693b      	ldr	r3, [r7, #16]
 800682c:	1ad3      	subs	r3, r2, r3
 800682e:	2b64      	cmp	r3, #100	; 0x64
 8006830:	d901      	bls.n	8006836 <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 8006832:	2303      	movs	r3, #3
 8006834:	e207      	b.n	8006c46 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006836:	4b5b      	ldr	r3, [pc, #364]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 8006838:	681b      	ldr	r3, [r3, #0]
 800683a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800683e:	2b00      	cmp	r3, #0
 8006840:	d0f0      	beq.n	8006824 <HAL_RCC_OscConfig+0xc0>
 8006842:	e014      	b.n	800686e <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8006844:	f7fd fbb4 	bl	8003fb0 <HAL_GetTick>
 8006848:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800684a:	e008      	b.n	800685e <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800684c:	f7fd fbb0 	bl	8003fb0 <HAL_GetTick>
 8006850:	4602      	mov	r2, r0
 8006852:	693b      	ldr	r3, [r7, #16]
 8006854:	1ad3      	subs	r3, r2, r3
 8006856:	2b64      	cmp	r3, #100	; 0x64
 8006858:	d901      	bls.n	800685e <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 800685a:	2303      	movs	r3, #3
 800685c:	e1f3      	b.n	8006c46 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800685e:	4b51      	ldr	r3, [pc, #324]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 8006860:	681b      	ldr	r3, [r3, #0]
 8006862:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006866:	2b00      	cmp	r3, #0
 8006868:	d1f0      	bne.n	800684c <HAL_RCC_OscConfig+0xe8>
 800686a:	e000      	b.n	800686e <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800686c:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800686e:	687b      	ldr	r3, [r7, #4]
 8006870:	681b      	ldr	r3, [r3, #0]
 8006872:	f003 0302 	and.w	r3, r3, #2
 8006876:	2b00      	cmp	r3, #0
 8006878:	d063      	beq.n	8006942 <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800687a:	4b4a      	ldr	r3, [pc, #296]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 800687c:	689b      	ldr	r3, [r3, #8]
 800687e:	f003 030c 	and.w	r3, r3, #12
 8006882:	2b00      	cmp	r3, #0
 8006884:	d00b      	beq.n	800689e <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006886:	4b47      	ldr	r3, [pc, #284]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 8006888:	689b      	ldr	r3, [r3, #8]
 800688a:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800688e:	2b08      	cmp	r3, #8
 8006890:	d11c      	bne.n	80068cc <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006892:	4b44      	ldr	r3, [pc, #272]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 8006894:	685b      	ldr	r3, [r3, #4]
 8006896:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800689a:	2b00      	cmp	r3, #0
 800689c:	d116      	bne.n	80068cc <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800689e:	4b41      	ldr	r3, [pc, #260]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 80068a0:	681b      	ldr	r3, [r3, #0]
 80068a2:	f003 0302 	and.w	r3, r3, #2
 80068a6:	2b00      	cmp	r3, #0
 80068a8:	d005      	beq.n	80068b6 <HAL_RCC_OscConfig+0x152>
 80068aa:	687b      	ldr	r3, [r7, #4]
 80068ac:	68db      	ldr	r3, [r3, #12]
 80068ae:	2b01      	cmp	r3, #1
 80068b0:	d001      	beq.n	80068b6 <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 80068b2:	2301      	movs	r3, #1
 80068b4:	e1c7      	b.n	8006c46 <HAL_RCC_OscConfig+0x4e2>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80068b6:	4b3b      	ldr	r3, [pc, #236]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 80068b8:	681b      	ldr	r3, [r3, #0]
 80068ba:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80068be:	687b      	ldr	r3, [r7, #4]
 80068c0:	691b      	ldr	r3, [r3, #16]
 80068c2:	00db      	lsls	r3, r3, #3
 80068c4:	4937      	ldr	r1, [pc, #220]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 80068c6:	4313      	orrs	r3, r2
 80068c8:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80068ca:	e03a      	b.n	8006942 <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80068cc:	687b      	ldr	r3, [r7, #4]
 80068ce:	68db      	ldr	r3, [r3, #12]
 80068d0:	2b00      	cmp	r3, #0
 80068d2:	d020      	beq.n	8006916 <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 80068d4:	4b34      	ldr	r3, [pc, #208]	; (80069a8 <HAL_RCC_OscConfig+0x244>)
 80068d6:	2201      	movs	r2, #1
 80068d8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80068da:	f7fd fb69 	bl	8003fb0 <HAL_GetTick>
 80068de:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80068e0:	e008      	b.n	80068f4 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80068e2:	f7fd fb65 	bl	8003fb0 <HAL_GetTick>
 80068e6:	4602      	mov	r2, r0
 80068e8:	693b      	ldr	r3, [r7, #16]
 80068ea:	1ad3      	subs	r3, r2, r3
 80068ec:	2b02      	cmp	r3, #2
 80068ee:	d901      	bls.n	80068f4 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 80068f0:	2303      	movs	r3, #3
 80068f2:	e1a8      	b.n	8006c46 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80068f4:	4b2b      	ldr	r3, [pc, #172]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 80068f6:	681b      	ldr	r3, [r3, #0]
 80068f8:	f003 0302 	and.w	r3, r3, #2
 80068fc:	2b00      	cmp	r3, #0
 80068fe:	d0f0      	beq.n	80068e2 <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006900:	4b28      	ldr	r3, [pc, #160]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 8006902:	681b      	ldr	r3, [r3, #0]
 8006904:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8006908:	687b      	ldr	r3, [r7, #4]
 800690a:	691b      	ldr	r3, [r3, #16]
 800690c:	00db      	lsls	r3, r3, #3
 800690e:	4925      	ldr	r1, [pc, #148]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 8006910:	4313      	orrs	r3, r2
 8006912:	600b      	str	r3, [r1, #0]
 8006914:	e015      	b.n	8006942 <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8006916:	4b24      	ldr	r3, [pc, #144]	; (80069a8 <HAL_RCC_OscConfig+0x244>)
 8006918:	2200      	movs	r2, #0
 800691a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800691c:	f7fd fb48 	bl	8003fb0 <HAL_GetTick>
 8006920:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006922:	e008      	b.n	8006936 <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006924:	f7fd fb44 	bl	8003fb0 <HAL_GetTick>
 8006928:	4602      	mov	r2, r0
 800692a:	693b      	ldr	r3, [r7, #16]
 800692c:	1ad3      	subs	r3, r2, r3
 800692e:	2b02      	cmp	r3, #2
 8006930:	d901      	bls.n	8006936 <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 8006932:	2303      	movs	r3, #3
 8006934:	e187      	b.n	8006c46 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006936:	4b1b      	ldr	r3, [pc, #108]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 8006938:	681b      	ldr	r3, [r3, #0]
 800693a:	f003 0302 	and.w	r3, r3, #2
 800693e:	2b00      	cmp	r3, #0
 8006940:	d1f0      	bne.n	8006924 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006942:	687b      	ldr	r3, [r7, #4]
 8006944:	681b      	ldr	r3, [r3, #0]
 8006946:	f003 0308 	and.w	r3, r3, #8
 800694a:	2b00      	cmp	r3, #0
 800694c:	d036      	beq.n	80069bc <HAL_RCC_OscConfig+0x258>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800694e:	687b      	ldr	r3, [r7, #4]
 8006950:	695b      	ldr	r3, [r3, #20]
 8006952:	2b00      	cmp	r3, #0
 8006954:	d016      	beq.n	8006984 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8006956:	4b15      	ldr	r3, [pc, #84]	; (80069ac <HAL_RCC_OscConfig+0x248>)
 8006958:	2201      	movs	r2, #1
 800695a:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800695c:	f7fd fb28 	bl	8003fb0 <HAL_GetTick>
 8006960:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006962:	e008      	b.n	8006976 <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006964:	f7fd fb24 	bl	8003fb0 <HAL_GetTick>
 8006968:	4602      	mov	r2, r0
 800696a:	693b      	ldr	r3, [r7, #16]
 800696c:	1ad3      	subs	r3, r2, r3
 800696e:	2b02      	cmp	r3, #2
 8006970:	d901      	bls.n	8006976 <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 8006972:	2303      	movs	r3, #3
 8006974:	e167      	b.n	8006c46 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006976:	4b0b      	ldr	r3, [pc, #44]	; (80069a4 <HAL_RCC_OscConfig+0x240>)
 8006978:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800697a:	f003 0302 	and.w	r3, r3, #2
 800697e:	2b00      	cmp	r3, #0
 8006980:	d0f0      	beq.n	8006964 <HAL_RCC_OscConfig+0x200>
 8006982:	e01b      	b.n	80069bc <HAL_RCC_OscConfig+0x258>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8006984:	4b09      	ldr	r3, [pc, #36]	; (80069ac <HAL_RCC_OscConfig+0x248>)
 8006986:	2200      	movs	r2, #0
 8006988:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800698a:	f7fd fb11 	bl	8003fb0 <HAL_GetTick>
 800698e:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006990:	e00e      	b.n	80069b0 <HAL_RCC_OscConfig+0x24c>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006992:	f7fd fb0d 	bl	8003fb0 <HAL_GetTick>
 8006996:	4602      	mov	r2, r0
 8006998:	693b      	ldr	r3, [r7, #16]
 800699a:	1ad3      	subs	r3, r2, r3
 800699c:	2b02      	cmp	r3, #2
 800699e:	d907      	bls.n	80069b0 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 80069a0:	2303      	movs	r3, #3
 80069a2:	e150      	b.n	8006c46 <HAL_RCC_OscConfig+0x4e2>
 80069a4:	40023800 	.word	0x40023800
 80069a8:	42470000 	.word	0x42470000
 80069ac:	42470e80 	.word	0x42470e80
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80069b0:	4b88      	ldr	r3, [pc, #544]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 80069b2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80069b4:	f003 0302 	and.w	r3, r3, #2
 80069b8:	2b00      	cmp	r3, #0
 80069ba:	d1ea      	bne.n	8006992 <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80069bc:	687b      	ldr	r3, [r7, #4]
 80069be:	681b      	ldr	r3, [r3, #0]
 80069c0:	f003 0304 	and.w	r3, r3, #4
 80069c4:	2b00      	cmp	r3, #0
 80069c6:	f000 8097 	beq.w	8006af8 <HAL_RCC_OscConfig+0x394>
  {
    FlagStatus       pwrclkchanged = RESET;
 80069ca:	2300      	movs	r3, #0
 80069cc:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80069ce:	4b81      	ldr	r3, [pc, #516]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 80069d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80069d2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80069d6:	2b00      	cmp	r3, #0
 80069d8:	d10f      	bne.n	80069fa <HAL_RCC_OscConfig+0x296>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80069da:	2300      	movs	r3, #0
 80069dc:	60bb      	str	r3, [r7, #8]
 80069de:	4b7d      	ldr	r3, [pc, #500]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 80069e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80069e2:	4a7c      	ldr	r2, [pc, #496]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 80069e4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80069e8:	6413      	str	r3, [r2, #64]	; 0x40
 80069ea:	4b7a      	ldr	r3, [pc, #488]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 80069ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80069ee:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80069f2:	60bb      	str	r3, [r7, #8]
 80069f4:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 80069f6:	2301      	movs	r3, #1
 80069f8:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80069fa:	4b77      	ldr	r3, [pc, #476]	; (8006bd8 <HAL_RCC_OscConfig+0x474>)
 80069fc:	681b      	ldr	r3, [r3, #0]
 80069fe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006a02:	2b00      	cmp	r3, #0
 8006a04:	d118      	bne.n	8006a38 <HAL_RCC_OscConfig+0x2d4>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8006a06:	4b74      	ldr	r3, [pc, #464]	; (8006bd8 <HAL_RCC_OscConfig+0x474>)
 8006a08:	681b      	ldr	r3, [r3, #0]
 8006a0a:	4a73      	ldr	r2, [pc, #460]	; (8006bd8 <HAL_RCC_OscConfig+0x474>)
 8006a0c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006a10:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8006a12:	f7fd facd 	bl	8003fb0 <HAL_GetTick>
 8006a16:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006a18:	e008      	b.n	8006a2c <HAL_RCC_OscConfig+0x2c8>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006a1a:	f7fd fac9 	bl	8003fb0 <HAL_GetTick>
 8006a1e:	4602      	mov	r2, r0
 8006a20:	693b      	ldr	r3, [r7, #16]
 8006a22:	1ad3      	subs	r3, r2, r3
 8006a24:	2b02      	cmp	r3, #2
 8006a26:	d901      	bls.n	8006a2c <HAL_RCC_OscConfig+0x2c8>
        {
          return HAL_TIMEOUT;
 8006a28:	2303      	movs	r3, #3
 8006a2a:	e10c      	b.n	8006c46 <HAL_RCC_OscConfig+0x4e2>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006a2c:	4b6a      	ldr	r3, [pc, #424]	; (8006bd8 <HAL_RCC_OscConfig+0x474>)
 8006a2e:	681b      	ldr	r3, [r3, #0]
 8006a30:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006a34:	2b00      	cmp	r3, #0
 8006a36:	d0f0      	beq.n	8006a1a <HAL_RCC_OscConfig+0x2b6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006a38:	687b      	ldr	r3, [r7, #4]
 8006a3a:	689b      	ldr	r3, [r3, #8]
 8006a3c:	2b01      	cmp	r3, #1
 8006a3e:	d106      	bne.n	8006a4e <HAL_RCC_OscConfig+0x2ea>
 8006a40:	4b64      	ldr	r3, [pc, #400]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 8006a42:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006a44:	4a63      	ldr	r2, [pc, #396]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 8006a46:	f043 0301 	orr.w	r3, r3, #1
 8006a4a:	6713      	str	r3, [r2, #112]	; 0x70
 8006a4c:	e01c      	b.n	8006a88 <HAL_RCC_OscConfig+0x324>
 8006a4e:	687b      	ldr	r3, [r7, #4]
 8006a50:	689b      	ldr	r3, [r3, #8]
 8006a52:	2b05      	cmp	r3, #5
 8006a54:	d10c      	bne.n	8006a70 <HAL_RCC_OscConfig+0x30c>
 8006a56:	4b5f      	ldr	r3, [pc, #380]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 8006a58:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006a5a:	4a5e      	ldr	r2, [pc, #376]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 8006a5c:	f043 0304 	orr.w	r3, r3, #4
 8006a60:	6713      	str	r3, [r2, #112]	; 0x70
 8006a62:	4b5c      	ldr	r3, [pc, #368]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 8006a64:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006a66:	4a5b      	ldr	r2, [pc, #364]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 8006a68:	f043 0301 	orr.w	r3, r3, #1
 8006a6c:	6713      	str	r3, [r2, #112]	; 0x70
 8006a6e:	e00b      	b.n	8006a88 <HAL_RCC_OscConfig+0x324>
 8006a70:	4b58      	ldr	r3, [pc, #352]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 8006a72:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006a74:	4a57      	ldr	r2, [pc, #348]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 8006a76:	f023 0301 	bic.w	r3, r3, #1
 8006a7a:	6713      	str	r3, [r2, #112]	; 0x70
 8006a7c:	4b55      	ldr	r3, [pc, #340]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 8006a7e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006a80:	4a54      	ldr	r2, [pc, #336]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 8006a82:	f023 0304 	bic.w	r3, r3, #4
 8006a86:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8006a88:	687b      	ldr	r3, [r7, #4]
 8006a8a:	689b      	ldr	r3, [r3, #8]
 8006a8c:	2b00      	cmp	r3, #0
 8006a8e:	d015      	beq.n	8006abc <HAL_RCC_OscConfig+0x358>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8006a90:	f7fd fa8e 	bl	8003fb0 <HAL_GetTick>
 8006a94:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006a96:	e00a      	b.n	8006aae <HAL_RCC_OscConfig+0x34a>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006a98:	f7fd fa8a 	bl	8003fb0 <HAL_GetTick>
 8006a9c:	4602      	mov	r2, r0
 8006a9e:	693b      	ldr	r3, [r7, #16]
 8006aa0:	1ad3      	subs	r3, r2, r3
 8006aa2:	f241 3288 	movw	r2, #5000	; 0x1388
 8006aa6:	4293      	cmp	r3, r2
 8006aa8:	d901      	bls.n	8006aae <HAL_RCC_OscConfig+0x34a>
        {
          return HAL_TIMEOUT;
 8006aaa:	2303      	movs	r3, #3
 8006aac:	e0cb      	b.n	8006c46 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006aae:	4b49      	ldr	r3, [pc, #292]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 8006ab0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006ab2:	f003 0302 	and.w	r3, r3, #2
 8006ab6:	2b00      	cmp	r3, #0
 8006ab8:	d0ee      	beq.n	8006a98 <HAL_RCC_OscConfig+0x334>
 8006aba:	e014      	b.n	8006ae6 <HAL_RCC_OscConfig+0x382>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8006abc:	f7fd fa78 	bl	8003fb0 <HAL_GetTick>
 8006ac0:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006ac2:	e00a      	b.n	8006ada <HAL_RCC_OscConfig+0x376>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006ac4:	f7fd fa74 	bl	8003fb0 <HAL_GetTick>
 8006ac8:	4602      	mov	r2, r0
 8006aca:	693b      	ldr	r3, [r7, #16]
 8006acc:	1ad3      	subs	r3, r2, r3
 8006ace:	f241 3288 	movw	r2, #5000	; 0x1388
 8006ad2:	4293      	cmp	r3, r2
 8006ad4:	d901      	bls.n	8006ada <HAL_RCC_OscConfig+0x376>
        {
          return HAL_TIMEOUT;
 8006ad6:	2303      	movs	r3, #3
 8006ad8:	e0b5      	b.n	8006c46 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006ada:	4b3e      	ldr	r3, [pc, #248]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 8006adc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006ade:	f003 0302 	and.w	r3, r3, #2
 8006ae2:	2b00      	cmp	r3, #0
 8006ae4:	d1ee      	bne.n	8006ac4 <HAL_RCC_OscConfig+0x360>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8006ae6:	7dfb      	ldrb	r3, [r7, #23]
 8006ae8:	2b01      	cmp	r3, #1
 8006aea:	d105      	bne.n	8006af8 <HAL_RCC_OscConfig+0x394>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8006aec:	4b39      	ldr	r3, [pc, #228]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 8006aee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006af0:	4a38      	ldr	r2, [pc, #224]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 8006af2:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006af6:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006af8:	687b      	ldr	r3, [r7, #4]
 8006afa:	699b      	ldr	r3, [r3, #24]
 8006afc:	2b00      	cmp	r3, #0
 8006afe:	f000 80a1 	beq.w	8006c44 <HAL_RCC_OscConfig+0x4e0>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8006b02:	4b34      	ldr	r3, [pc, #208]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 8006b04:	689b      	ldr	r3, [r3, #8]
 8006b06:	f003 030c 	and.w	r3, r3, #12
 8006b0a:	2b08      	cmp	r3, #8
 8006b0c:	d05c      	beq.n	8006bc8 <HAL_RCC_OscConfig+0x464>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006b0e:	687b      	ldr	r3, [r7, #4]
 8006b10:	699b      	ldr	r3, [r3, #24]
 8006b12:	2b02      	cmp	r3, #2
 8006b14:	d141      	bne.n	8006b9a <HAL_RCC_OscConfig+0x436>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8006b16:	4b31      	ldr	r3, [pc, #196]	; (8006bdc <HAL_RCC_OscConfig+0x478>)
 8006b18:	2200      	movs	r2, #0
 8006b1a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8006b1c:	f7fd fa48 	bl	8003fb0 <HAL_GetTick>
 8006b20:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006b22:	e008      	b.n	8006b36 <HAL_RCC_OscConfig+0x3d2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006b24:	f7fd fa44 	bl	8003fb0 <HAL_GetTick>
 8006b28:	4602      	mov	r2, r0
 8006b2a:	693b      	ldr	r3, [r7, #16]
 8006b2c:	1ad3      	subs	r3, r2, r3
 8006b2e:	2b02      	cmp	r3, #2
 8006b30:	d901      	bls.n	8006b36 <HAL_RCC_OscConfig+0x3d2>
          {
            return HAL_TIMEOUT;
 8006b32:	2303      	movs	r3, #3
 8006b34:	e087      	b.n	8006c46 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006b36:	4b27      	ldr	r3, [pc, #156]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 8006b38:	681b      	ldr	r3, [r3, #0]
 8006b3a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006b3e:	2b00      	cmp	r3, #0
 8006b40:	d1f0      	bne.n	8006b24 <HAL_RCC_OscConfig+0x3c0>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8006b42:	687b      	ldr	r3, [r7, #4]
 8006b44:	69da      	ldr	r2, [r3, #28]
 8006b46:	687b      	ldr	r3, [r7, #4]
 8006b48:	6a1b      	ldr	r3, [r3, #32]
 8006b4a:	431a      	orrs	r2, r3
 8006b4c:	687b      	ldr	r3, [r7, #4]
 8006b4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006b50:	019b      	lsls	r3, r3, #6
 8006b52:	431a      	orrs	r2, r3
 8006b54:	687b      	ldr	r3, [r7, #4]
 8006b56:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006b58:	085b      	lsrs	r3, r3, #1
 8006b5a:	3b01      	subs	r3, #1
 8006b5c:	041b      	lsls	r3, r3, #16
 8006b5e:	431a      	orrs	r2, r3
 8006b60:	687b      	ldr	r3, [r7, #4]
 8006b62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b64:	061b      	lsls	r3, r3, #24
 8006b66:	491b      	ldr	r1, [pc, #108]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 8006b68:	4313      	orrs	r3, r2
 8006b6a:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8006b6c:	4b1b      	ldr	r3, [pc, #108]	; (8006bdc <HAL_RCC_OscConfig+0x478>)
 8006b6e:	2201      	movs	r2, #1
 8006b70:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8006b72:	f7fd fa1d 	bl	8003fb0 <HAL_GetTick>
 8006b76:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006b78:	e008      	b.n	8006b8c <HAL_RCC_OscConfig+0x428>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006b7a:	f7fd fa19 	bl	8003fb0 <HAL_GetTick>
 8006b7e:	4602      	mov	r2, r0
 8006b80:	693b      	ldr	r3, [r7, #16]
 8006b82:	1ad3      	subs	r3, r2, r3
 8006b84:	2b02      	cmp	r3, #2
 8006b86:	d901      	bls.n	8006b8c <HAL_RCC_OscConfig+0x428>
          {
            return HAL_TIMEOUT;
 8006b88:	2303      	movs	r3, #3
 8006b8a:	e05c      	b.n	8006c46 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006b8c:	4b11      	ldr	r3, [pc, #68]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 8006b8e:	681b      	ldr	r3, [r3, #0]
 8006b90:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006b94:	2b00      	cmp	r3, #0
 8006b96:	d0f0      	beq.n	8006b7a <HAL_RCC_OscConfig+0x416>
 8006b98:	e054      	b.n	8006c44 <HAL_RCC_OscConfig+0x4e0>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8006b9a:	4b10      	ldr	r3, [pc, #64]	; (8006bdc <HAL_RCC_OscConfig+0x478>)
 8006b9c:	2200      	movs	r2, #0
 8006b9e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8006ba0:	f7fd fa06 	bl	8003fb0 <HAL_GetTick>
 8006ba4:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006ba6:	e008      	b.n	8006bba <HAL_RCC_OscConfig+0x456>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006ba8:	f7fd fa02 	bl	8003fb0 <HAL_GetTick>
 8006bac:	4602      	mov	r2, r0
 8006bae:	693b      	ldr	r3, [r7, #16]
 8006bb0:	1ad3      	subs	r3, r2, r3
 8006bb2:	2b02      	cmp	r3, #2
 8006bb4:	d901      	bls.n	8006bba <HAL_RCC_OscConfig+0x456>
          {
            return HAL_TIMEOUT;
 8006bb6:	2303      	movs	r3, #3
 8006bb8:	e045      	b.n	8006c46 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006bba:	4b06      	ldr	r3, [pc, #24]	; (8006bd4 <HAL_RCC_OscConfig+0x470>)
 8006bbc:	681b      	ldr	r3, [r3, #0]
 8006bbe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006bc2:	2b00      	cmp	r3, #0
 8006bc4:	d1f0      	bne.n	8006ba8 <HAL_RCC_OscConfig+0x444>
 8006bc6:	e03d      	b.n	8006c44 <HAL_RCC_OscConfig+0x4e0>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8006bc8:	687b      	ldr	r3, [r7, #4]
 8006bca:	699b      	ldr	r3, [r3, #24]
 8006bcc:	2b01      	cmp	r3, #1
 8006bce:	d107      	bne.n	8006be0 <HAL_RCC_OscConfig+0x47c>
      {
        return HAL_ERROR;
 8006bd0:	2301      	movs	r3, #1
 8006bd2:	e038      	b.n	8006c46 <HAL_RCC_OscConfig+0x4e2>
 8006bd4:	40023800 	.word	0x40023800
 8006bd8:	40007000 	.word	0x40007000
 8006bdc:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8006be0:	4b1b      	ldr	r3, [pc, #108]	; (8006c50 <HAL_RCC_OscConfig+0x4ec>)
 8006be2:	685b      	ldr	r3, [r3, #4]
 8006be4:	60fb      	str	r3, [r7, #12]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006be6:	687b      	ldr	r3, [r7, #4]
 8006be8:	699b      	ldr	r3, [r3, #24]
 8006bea:	2b01      	cmp	r3, #1
 8006bec:	d028      	beq.n	8006c40 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006bee:	68fb      	ldr	r3, [r7, #12]
 8006bf0:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8006bf4:	687b      	ldr	r3, [r7, #4]
 8006bf6:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006bf8:	429a      	cmp	r2, r3
 8006bfa:	d121      	bne.n	8006c40 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006bfc:	68fb      	ldr	r3, [r7, #12]
 8006bfe:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8006c02:	687b      	ldr	r3, [r7, #4]
 8006c04:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006c06:	429a      	cmp	r2, r3
 8006c08:	d11a      	bne.n	8006c40 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006c0a:	68fa      	ldr	r2, [r7, #12]
 8006c0c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8006c10:	4013      	ands	r3, r2
 8006c12:	687a      	ldr	r2, [r7, #4]
 8006c14:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8006c16:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006c18:	4293      	cmp	r3, r2
 8006c1a:	d111      	bne.n	8006c40 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006c1c:	68fb      	ldr	r3, [r7, #12]
 8006c1e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8006c22:	687b      	ldr	r3, [r7, #4]
 8006c24:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006c26:	085b      	lsrs	r3, r3, #1
 8006c28:	3b01      	subs	r3, #1
 8006c2a:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006c2c:	429a      	cmp	r2, r3
 8006c2e:	d107      	bne.n	8006c40 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8006c30:	68fb      	ldr	r3, [r7, #12]
 8006c32:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8006c36:	687b      	ldr	r3, [r7, #4]
 8006c38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006c3a:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006c3c:	429a      	cmp	r2, r3
 8006c3e:	d001      	beq.n	8006c44 <HAL_RCC_OscConfig+0x4e0>
#endif
        {
          return HAL_ERROR;
 8006c40:	2301      	movs	r3, #1
 8006c42:	e000      	b.n	8006c46 <HAL_RCC_OscConfig+0x4e2>
        }
      }
    }
  }
  return HAL_OK;
 8006c44:	2300      	movs	r3, #0
}
 8006c46:	4618      	mov	r0, r3
 8006c48:	3718      	adds	r7, #24
 8006c4a:	46bd      	mov	sp, r7
 8006c4c:	bd80      	pop	{r7, pc}
 8006c4e:	bf00      	nop
 8006c50:	40023800 	.word	0x40023800

08006c54 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8006c54:	b580      	push	{r7, lr}
 8006c56:	b084      	sub	sp, #16
 8006c58:	af00      	add	r7, sp, #0
 8006c5a:	6078      	str	r0, [r7, #4]
 8006c5c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8006c5e:	687b      	ldr	r3, [r7, #4]
 8006c60:	2b00      	cmp	r3, #0
 8006c62:	d101      	bne.n	8006c68 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8006c64:	2301      	movs	r3, #1
 8006c66:	e0cc      	b.n	8006e02 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8006c68:	4b68      	ldr	r3, [pc, #416]	; (8006e0c <HAL_RCC_ClockConfig+0x1b8>)
 8006c6a:	681b      	ldr	r3, [r3, #0]
 8006c6c:	f003 0307 	and.w	r3, r3, #7
 8006c70:	683a      	ldr	r2, [r7, #0]
 8006c72:	429a      	cmp	r2, r3
 8006c74:	d90c      	bls.n	8006c90 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006c76:	4b65      	ldr	r3, [pc, #404]	; (8006e0c <HAL_RCC_ClockConfig+0x1b8>)
 8006c78:	683a      	ldr	r2, [r7, #0]
 8006c7a:	b2d2      	uxtb	r2, r2
 8006c7c:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006c7e:	4b63      	ldr	r3, [pc, #396]	; (8006e0c <HAL_RCC_ClockConfig+0x1b8>)
 8006c80:	681b      	ldr	r3, [r3, #0]
 8006c82:	f003 0307 	and.w	r3, r3, #7
 8006c86:	683a      	ldr	r2, [r7, #0]
 8006c88:	429a      	cmp	r2, r3
 8006c8a:	d001      	beq.n	8006c90 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 8006c8c:	2301      	movs	r3, #1
 8006c8e:	e0b8      	b.n	8006e02 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006c90:	687b      	ldr	r3, [r7, #4]
 8006c92:	681b      	ldr	r3, [r3, #0]
 8006c94:	f003 0302 	and.w	r3, r3, #2
 8006c98:	2b00      	cmp	r3, #0
 8006c9a:	d020      	beq.n	8006cde <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006c9c:	687b      	ldr	r3, [r7, #4]
 8006c9e:	681b      	ldr	r3, [r3, #0]
 8006ca0:	f003 0304 	and.w	r3, r3, #4
 8006ca4:	2b00      	cmp	r3, #0
 8006ca6:	d005      	beq.n	8006cb4 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006ca8:	4b59      	ldr	r3, [pc, #356]	; (8006e10 <HAL_RCC_ClockConfig+0x1bc>)
 8006caa:	689b      	ldr	r3, [r3, #8]
 8006cac:	4a58      	ldr	r2, [pc, #352]	; (8006e10 <HAL_RCC_ClockConfig+0x1bc>)
 8006cae:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8006cb2:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006cb4:	687b      	ldr	r3, [r7, #4]
 8006cb6:	681b      	ldr	r3, [r3, #0]
 8006cb8:	f003 0308 	and.w	r3, r3, #8
 8006cbc:	2b00      	cmp	r3, #0
 8006cbe:	d005      	beq.n	8006ccc <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8006cc0:	4b53      	ldr	r3, [pc, #332]	; (8006e10 <HAL_RCC_ClockConfig+0x1bc>)
 8006cc2:	689b      	ldr	r3, [r3, #8]
 8006cc4:	4a52      	ldr	r2, [pc, #328]	; (8006e10 <HAL_RCC_ClockConfig+0x1bc>)
 8006cc6:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8006cca:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8006ccc:	4b50      	ldr	r3, [pc, #320]	; (8006e10 <HAL_RCC_ClockConfig+0x1bc>)
 8006cce:	689b      	ldr	r3, [r3, #8]
 8006cd0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8006cd4:	687b      	ldr	r3, [r7, #4]
 8006cd6:	689b      	ldr	r3, [r3, #8]
 8006cd8:	494d      	ldr	r1, [pc, #308]	; (8006e10 <HAL_RCC_ClockConfig+0x1bc>)
 8006cda:	4313      	orrs	r3, r2
 8006cdc:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006cde:	687b      	ldr	r3, [r7, #4]
 8006ce0:	681b      	ldr	r3, [r3, #0]
 8006ce2:	f003 0301 	and.w	r3, r3, #1
 8006ce6:	2b00      	cmp	r3, #0
 8006ce8:	d044      	beq.n	8006d74 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006cea:	687b      	ldr	r3, [r7, #4]
 8006cec:	685b      	ldr	r3, [r3, #4]
 8006cee:	2b01      	cmp	r3, #1
 8006cf0:	d107      	bne.n	8006d02 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006cf2:	4b47      	ldr	r3, [pc, #284]	; (8006e10 <HAL_RCC_ClockConfig+0x1bc>)
 8006cf4:	681b      	ldr	r3, [r3, #0]
 8006cf6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006cfa:	2b00      	cmp	r3, #0
 8006cfc:	d119      	bne.n	8006d32 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8006cfe:	2301      	movs	r3, #1
 8006d00:	e07f      	b.n	8006e02 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006d02:	687b      	ldr	r3, [r7, #4]
 8006d04:	685b      	ldr	r3, [r3, #4]
 8006d06:	2b02      	cmp	r3, #2
 8006d08:	d003      	beq.n	8006d12 <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 8006d0a:	687b      	ldr	r3, [r7, #4]
 8006d0c:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006d0e:	2b03      	cmp	r3, #3
 8006d10:	d107      	bne.n	8006d22 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006d12:	4b3f      	ldr	r3, [pc, #252]	; (8006e10 <HAL_RCC_ClockConfig+0x1bc>)
 8006d14:	681b      	ldr	r3, [r3, #0]
 8006d16:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006d1a:	2b00      	cmp	r3, #0
 8006d1c:	d109      	bne.n	8006d32 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8006d1e:	2301      	movs	r3, #1
 8006d20:	e06f      	b.n	8006e02 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006d22:	4b3b      	ldr	r3, [pc, #236]	; (8006e10 <HAL_RCC_ClockConfig+0x1bc>)
 8006d24:	681b      	ldr	r3, [r3, #0]
 8006d26:	f003 0302 	and.w	r3, r3, #2
 8006d2a:	2b00      	cmp	r3, #0
 8006d2c:	d101      	bne.n	8006d32 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8006d2e:	2301      	movs	r3, #1
 8006d30:	e067      	b.n	8006e02 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006d32:	4b37      	ldr	r3, [pc, #220]	; (8006e10 <HAL_RCC_ClockConfig+0x1bc>)
 8006d34:	689b      	ldr	r3, [r3, #8]
 8006d36:	f023 0203 	bic.w	r2, r3, #3
 8006d3a:	687b      	ldr	r3, [r7, #4]
 8006d3c:	685b      	ldr	r3, [r3, #4]
 8006d3e:	4934      	ldr	r1, [pc, #208]	; (8006e10 <HAL_RCC_ClockConfig+0x1bc>)
 8006d40:	4313      	orrs	r3, r2
 8006d42:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8006d44:	f7fd f934 	bl	8003fb0 <HAL_GetTick>
 8006d48:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006d4a:	e00a      	b.n	8006d62 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006d4c:	f7fd f930 	bl	8003fb0 <HAL_GetTick>
 8006d50:	4602      	mov	r2, r0
 8006d52:	68fb      	ldr	r3, [r7, #12]
 8006d54:	1ad3      	subs	r3, r2, r3
 8006d56:	f241 3288 	movw	r2, #5000	; 0x1388
 8006d5a:	4293      	cmp	r3, r2
 8006d5c:	d901      	bls.n	8006d62 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8006d5e:	2303      	movs	r3, #3
 8006d60:	e04f      	b.n	8006e02 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006d62:	4b2b      	ldr	r3, [pc, #172]	; (8006e10 <HAL_RCC_ClockConfig+0x1bc>)
 8006d64:	689b      	ldr	r3, [r3, #8]
 8006d66:	f003 020c 	and.w	r2, r3, #12
 8006d6a:	687b      	ldr	r3, [r7, #4]
 8006d6c:	685b      	ldr	r3, [r3, #4]
 8006d6e:	009b      	lsls	r3, r3, #2
 8006d70:	429a      	cmp	r2, r3
 8006d72:	d1eb      	bne.n	8006d4c <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8006d74:	4b25      	ldr	r3, [pc, #148]	; (8006e0c <HAL_RCC_ClockConfig+0x1b8>)
 8006d76:	681b      	ldr	r3, [r3, #0]
 8006d78:	f003 0307 	and.w	r3, r3, #7
 8006d7c:	683a      	ldr	r2, [r7, #0]
 8006d7e:	429a      	cmp	r2, r3
 8006d80:	d20c      	bcs.n	8006d9c <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006d82:	4b22      	ldr	r3, [pc, #136]	; (8006e0c <HAL_RCC_ClockConfig+0x1b8>)
 8006d84:	683a      	ldr	r2, [r7, #0]
 8006d86:	b2d2      	uxtb	r2, r2
 8006d88:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006d8a:	4b20      	ldr	r3, [pc, #128]	; (8006e0c <HAL_RCC_ClockConfig+0x1b8>)
 8006d8c:	681b      	ldr	r3, [r3, #0]
 8006d8e:	f003 0307 	and.w	r3, r3, #7
 8006d92:	683a      	ldr	r2, [r7, #0]
 8006d94:	429a      	cmp	r2, r3
 8006d96:	d001      	beq.n	8006d9c <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8006d98:	2301      	movs	r3, #1
 8006d9a:	e032      	b.n	8006e02 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006d9c:	687b      	ldr	r3, [r7, #4]
 8006d9e:	681b      	ldr	r3, [r3, #0]
 8006da0:	f003 0304 	and.w	r3, r3, #4
 8006da4:	2b00      	cmp	r3, #0
 8006da6:	d008      	beq.n	8006dba <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8006da8:	4b19      	ldr	r3, [pc, #100]	; (8006e10 <HAL_RCC_ClockConfig+0x1bc>)
 8006daa:	689b      	ldr	r3, [r3, #8]
 8006dac:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8006db0:	687b      	ldr	r3, [r7, #4]
 8006db2:	68db      	ldr	r3, [r3, #12]
 8006db4:	4916      	ldr	r1, [pc, #88]	; (8006e10 <HAL_RCC_ClockConfig+0x1bc>)
 8006db6:	4313      	orrs	r3, r2
 8006db8:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006dba:	687b      	ldr	r3, [r7, #4]
 8006dbc:	681b      	ldr	r3, [r3, #0]
 8006dbe:	f003 0308 	and.w	r3, r3, #8
 8006dc2:	2b00      	cmp	r3, #0
 8006dc4:	d009      	beq.n	8006dda <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8006dc6:	4b12      	ldr	r3, [pc, #72]	; (8006e10 <HAL_RCC_ClockConfig+0x1bc>)
 8006dc8:	689b      	ldr	r3, [r3, #8]
 8006dca:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8006dce:	687b      	ldr	r3, [r7, #4]
 8006dd0:	691b      	ldr	r3, [r3, #16]
 8006dd2:	00db      	lsls	r3, r3, #3
 8006dd4:	490e      	ldr	r1, [pc, #56]	; (8006e10 <HAL_RCC_ClockConfig+0x1bc>)
 8006dd6:	4313      	orrs	r3, r2
 8006dd8:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8006dda:	f000 f821 	bl	8006e20 <HAL_RCC_GetSysClockFreq>
 8006dde:	4602      	mov	r2, r0
 8006de0:	4b0b      	ldr	r3, [pc, #44]	; (8006e10 <HAL_RCC_ClockConfig+0x1bc>)
 8006de2:	689b      	ldr	r3, [r3, #8]
 8006de4:	091b      	lsrs	r3, r3, #4
 8006de6:	f003 030f 	and.w	r3, r3, #15
 8006dea:	490a      	ldr	r1, [pc, #40]	; (8006e14 <HAL_RCC_ClockConfig+0x1c0>)
 8006dec:	5ccb      	ldrb	r3, [r1, r3]
 8006dee:	fa22 f303 	lsr.w	r3, r2, r3
 8006df2:	4a09      	ldr	r2, [pc, #36]	; (8006e18 <HAL_RCC_ClockConfig+0x1c4>)
 8006df4:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 8006df6:	4b09      	ldr	r3, [pc, #36]	; (8006e1c <HAL_RCC_ClockConfig+0x1c8>)
 8006df8:	681b      	ldr	r3, [r3, #0]
 8006dfa:	4618      	mov	r0, r3
 8006dfc:	f7fd f894 	bl	8003f28 <HAL_InitTick>

  return HAL_OK;
 8006e00:	2300      	movs	r3, #0
}
 8006e02:	4618      	mov	r0, r3
 8006e04:	3710      	adds	r7, #16
 8006e06:	46bd      	mov	sp, r7
 8006e08:	bd80      	pop	{r7, pc}
 8006e0a:	bf00      	nop
 8006e0c:	40023c00 	.word	0x40023c00
 8006e10:	40023800 	.word	0x40023800
 8006e14:	0802de3c 	.word	0x0802de3c
 8006e18:	20000004 	.word	0x20000004
 8006e1c:	20000010 	.word	0x20000010

08006e20 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8006e20:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8006e24:	b090      	sub	sp, #64	; 0x40
 8006e26:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 8006e28:	2300      	movs	r3, #0
 8006e2a:	637b      	str	r3, [r7, #52]	; 0x34
 8006e2c:	2300      	movs	r3, #0
 8006e2e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006e30:	2300      	movs	r3, #0
 8006e32:	633b      	str	r3, [r7, #48]	; 0x30
  uint32_t sysclockfreq = 0U;
 8006e34:	2300      	movs	r3, #0
 8006e36:	63bb      	str	r3, [r7, #56]	; 0x38

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006e38:	4b59      	ldr	r3, [pc, #356]	; (8006fa0 <HAL_RCC_GetSysClockFreq+0x180>)
 8006e3a:	689b      	ldr	r3, [r3, #8]
 8006e3c:	f003 030c 	and.w	r3, r3, #12
 8006e40:	2b08      	cmp	r3, #8
 8006e42:	d00d      	beq.n	8006e60 <HAL_RCC_GetSysClockFreq+0x40>
 8006e44:	2b08      	cmp	r3, #8
 8006e46:	f200 80a1 	bhi.w	8006f8c <HAL_RCC_GetSysClockFreq+0x16c>
 8006e4a:	2b00      	cmp	r3, #0
 8006e4c:	d002      	beq.n	8006e54 <HAL_RCC_GetSysClockFreq+0x34>
 8006e4e:	2b04      	cmp	r3, #4
 8006e50:	d003      	beq.n	8006e5a <HAL_RCC_GetSysClockFreq+0x3a>
 8006e52:	e09b      	b.n	8006f8c <HAL_RCC_GetSysClockFreq+0x16c>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8006e54:	4b53      	ldr	r3, [pc, #332]	; (8006fa4 <HAL_RCC_GetSysClockFreq+0x184>)
 8006e56:	63bb      	str	r3, [r7, #56]	; 0x38
       break;
 8006e58:	e09b      	b.n	8006f92 <HAL_RCC_GetSysClockFreq+0x172>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8006e5a:	4b53      	ldr	r3, [pc, #332]	; (8006fa8 <HAL_RCC_GetSysClockFreq+0x188>)
 8006e5c:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8006e5e:	e098      	b.n	8006f92 <HAL_RCC_GetSysClockFreq+0x172>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006e60:	4b4f      	ldr	r3, [pc, #316]	; (8006fa0 <HAL_RCC_GetSysClockFreq+0x180>)
 8006e62:	685b      	ldr	r3, [r3, #4]
 8006e64:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8006e68:	637b      	str	r3, [r7, #52]	; 0x34
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006e6a:	4b4d      	ldr	r3, [pc, #308]	; (8006fa0 <HAL_RCC_GetSysClockFreq+0x180>)
 8006e6c:	685b      	ldr	r3, [r3, #4]
 8006e6e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006e72:	2b00      	cmp	r3, #0
 8006e74:	d028      	beq.n	8006ec8 <HAL_RCC_GetSysClockFreq+0xa8>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006e76:	4b4a      	ldr	r3, [pc, #296]	; (8006fa0 <HAL_RCC_GetSysClockFreq+0x180>)
 8006e78:	685b      	ldr	r3, [r3, #4]
 8006e7a:	099b      	lsrs	r3, r3, #6
 8006e7c:	2200      	movs	r2, #0
 8006e7e:	623b      	str	r3, [r7, #32]
 8006e80:	627a      	str	r2, [r7, #36]	; 0x24
 8006e82:	6a3b      	ldr	r3, [r7, #32]
 8006e84:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8006e88:	2100      	movs	r1, #0
 8006e8a:	4b47      	ldr	r3, [pc, #284]	; (8006fa8 <HAL_RCC_GetSysClockFreq+0x188>)
 8006e8c:	fb03 f201 	mul.w	r2, r3, r1
 8006e90:	2300      	movs	r3, #0
 8006e92:	fb00 f303 	mul.w	r3, r0, r3
 8006e96:	4413      	add	r3, r2
 8006e98:	4a43      	ldr	r2, [pc, #268]	; (8006fa8 <HAL_RCC_GetSysClockFreq+0x188>)
 8006e9a:	fba0 1202 	umull	r1, r2, r0, r2
 8006e9e:	62fa      	str	r2, [r7, #44]	; 0x2c
 8006ea0:	460a      	mov	r2, r1
 8006ea2:	62ba      	str	r2, [r7, #40]	; 0x28
 8006ea4:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8006ea6:	4413      	add	r3, r2
 8006ea8:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006eaa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006eac:	2200      	movs	r2, #0
 8006eae:	61bb      	str	r3, [r7, #24]
 8006eb0:	61fa      	str	r2, [r7, #28]
 8006eb2:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8006eb6:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8006eba:	f7f9 fe4f 	bl	8000b5c <__aeabi_uldivmod>
 8006ebe:	4602      	mov	r2, r0
 8006ec0:	460b      	mov	r3, r1
 8006ec2:	4613      	mov	r3, r2
 8006ec4:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006ec6:	e053      	b.n	8006f70 <HAL_RCC_GetSysClockFreq+0x150>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006ec8:	4b35      	ldr	r3, [pc, #212]	; (8006fa0 <HAL_RCC_GetSysClockFreq+0x180>)
 8006eca:	685b      	ldr	r3, [r3, #4]
 8006ecc:	099b      	lsrs	r3, r3, #6
 8006ece:	2200      	movs	r2, #0
 8006ed0:	613b      	str	r3, [r7, #16]
 8006ed2:	617a      	str	r2, [r7, #20]
 8006ed4:	693b      	ldr	r3, [r7, #16]
 8006ed6:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8006eda:	f04f 0b00 	mov.w	fp, #0
 8006ede:	4652      	mov	r2, sl
 8006ee0:	465b      	mov	r3, fp
 8006ee2:	f04f 0000 	mov.w	r0, #0
 8006ee6:	f04f 0100 	mov.w	r1, #0
 8006eea:	0159      	lsls	r1, r3, #5
 8006eec:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8006ef0:	0150      	lsls	r0, r2, #5
 8006ef2:	4602      	mov	r2, r0
 8006ef4:	460b      	mov	r3, r1
 8006ef6:	ebb2 080a 	subs.w	r8, r2, sl
 8006efa:	eb63 090b 	sbc.w	r9, r3, fp
 8006efe:	f04f 0200 	mov.w	r2, #0
 8006f02:	f04f 0300 	mov.w	r3, #0
 8006f06:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8006f0a:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8006f0e:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8006f12:	ebb2 0408 	subs.w	r4, r2, r8
 8006f16:	eb63 0509 	sbc.w	r5, r3, r9
 8006f1a:	f04f 0200 	mov.w	r2, #0
 8006f1e:	f04f 0300 	mov.w	r3, #0
 8006f22:	00eb      	lsls	r3, r5, #3
 8006f24:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8006f28:	00e2      	lsls	r2, r4, #3
 8006f2a:	4614      	mov	r4, r2
 8006f2c:	461d      	mov	r5, r3
 8006f2e:	eb14 030a 	adds.w	r3, r4, sl
 8006f32:	603b      	str	r3, [r7, #0]
 8006f34:	eb45 030b 	adc.w	r3, r5, fp
 8006f38:	607b      	str	r3, [r7, #4]
 8006f3a:	f04f 0200 	mov.w	r2, #0
 8006f3e:	f04f 0300 	mov.w	r3, #0
 8006f42:	e9d7 4500 	ldrd	r4, r5, [r7]
 8006f46:	4629      	mov	r1, r5
 8006f48:	028b      	lsls	r3, r1, #10
 8006f4a:	4621      	mov	r1, r4
 8006f4c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8006f50:	4621      	mov	r1, r4
 8006f52:	028a      	lsls	r2, r1, #10
 8006f54:	4610      	mov	r0, r2
 8006f56:	4619      	mov	r1, r3
 8006f58:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006f5a:	2200      	movs	r2, #0
 8006f5c:	60bb      	str	r3, [r7, #8]
 8006f5e:	60fa      	str	r2, [r7, #12]
 8006f60:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8006f64:	f7f9 fdfa 	bl	8000b5c <__aeabi_uldivmod>
 8006f68:	4602      	mov	r2, r0
 8006f6a:	460b      	mov	r3, r1
 8006f6c:	4613      	mov	r3, r2
 8006f6e:	63fb      	str	r3, [r7, #60]	; 0x3c
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8006f70:	4b0b      	ldr	r3, [pc, #44]	; (8006fa0 <HAL_RCC_GetSysClockFreq+0x180>)
 8006f72:	685b      	ldr	r3, [r3, #4]
 8006f74:	0c1b      	lsrs	r3, r3, #16
 8006f76:	f003 0303 	and.w	r3, r3, #3
 8006f7a:	3301      	adds	r3, #1
 8006f7c:	005b      	lsls	r3, r3, #1
 8006f7e:	633b      	str	r3, [r7, #48]	; 0x30

      sysclockfreq = pllvco/pllp;
 8006f80:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8006f82:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006f84:	fbb2 f3f3 	udiv	r3, r2, r3
 8006f88:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8006f8a:	e002      	b.n	8006f92 <HAL_RCC_GetSysClockFreq+0x172>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8006f8c:	4b05      	ldr	r3, [pc, #20]	; (8006fa4 <HAL_RCC_GetSysClockFreq+0x184>)
 8006f8e:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8006f90:	bf00      	nop
    }
  }
  return sysclockfreq;
 8006f92:	6bbb      	ldr	r3, [r7, #56]	; 0x38
}
 8006f94:	4618      	mov	r0, r3
 8006f96:	3740      	adds	r7, #64	; 0x40
 8006f98:	46bd      	mov	sp, r7
 8006f9a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8006f9e:	bf00      	nop
 8006fa0:	40023800 	.word	0x40023800
 8006fa4:	00f42400 	.word	0x00f42400
 8006fa8:	017d7840 	.word	0x017d7840

08006fac <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8006fac:	b480      	push	{r7}
 8006fae:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8006fb0:	4b03      	ldr	r3, [pc, #12]	; (8006fc0 <HAL_RCC_GetHCLKFreq+0x14>)
 8006fb2:	681b      	ldr	r3, [r3, #0]
}
 8006fb4:	4618      	mov	r0, r3
 8006fb6:	46bd      	mov	sp, r7
 8006fb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fbc:	4770      	bx	lr
 8006fbe:	bf00      	nop
 8006fc0:	20000004 	.word	0x20000004

08006fc4 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8006fc4:	b580      	push	{r7, lr}
 8006fc6:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8006fc8:	f7ff fff0 	bl	8006fac <HAL_RCC_GetHCLKFreq>
 8006fcc:	4602      	mov	r2, r0
 8006fce:	4b05      	ldr	r3, [pc, #20]	; (8006fe4 <HAL_RCC_GetPCLK1Freq+0x20>)
 8006fd0:	689b      	ldr	r3, [r3, #8]
 8006fd2:	0a9b      	lsrs	r3, r3, #10
 8006fd4:	f003 0307 	and.w	r3, r3, #7
 8006fd8:	4903      	ldr	r1, [pc, #12]	; (8006fe8 <HAL_RCC_GetPCLK1Freq+0x24>)
 8006fda:	5ccb      	ldrb	r3, [r1, r3]
 8006fdc:	fa22 f303 	lsr.w	r3, r2, r3
}
 8006fe0:	4618      	mov	r0, r3
 8006fe2:	bd80      	pop	{r7, pc}
 8006fe4:	40023800 	.word	0x40023800
 8006fe8:	0802de4c 	.word	0x0802de4c

08006fec <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8006fec:	b580      	push	{r7, lr}
 8006fee:	b082      	sub	sp, #8
 8006ff0:	af00      	add	r7, sp, #0
 8006ff2:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8006ff4:	687b      	ldr	r3, [r7, #4]
 8006ff6:	2b00      	cmp	r3, #0
 8006ff8:	d101      	bne.n	8006ffe <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8006ffa:	2301      	movs	r3, #1
 8006ffc:	e07b      	b.n	80070f6 <HAL_SPI_Init+0x10a>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8006ffe:	687b      	ldr	r3, [r7, #4]
 8007000:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007002:	2b00      	cmp	r3, #0
 8007004:	d108      	bne.n	8007018 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007006:	687b      	ldr	r3, [r7, #4]
 8007008:	685b      	ldr	r3, [r3, #4]
 800700a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800700e:	d009      	beq.n	8007024 <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8007010:	687b      	ldr	r3, [r7, #4]
 8007012:	2200      	movs	r2, #0
 8007014:	61da      	str	r2, [r3, #28]
 8007016:	e005      	b.n	8007024 <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8007018:	687b      	ldr	r3, [r7, #4]
 800701a:	2200      	movs	r2, #0
 800701c:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800701e:	687b      	ldr	r3, [r7, #4]
 8007020:	2200      	movs	r2, #0
 8007022:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8007024:	687b      	ldr	r3, [r7, #4]
 8007026:	2200      	movs	r2, #0
 8007028:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 800702a:	687b      	ldr	r3, [r7, #4]
 800702c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8007030:	b2db      	uxtb	r3, r3
 8007032:	2b00      	cmp	r3, #0
 8007034:	d106      	bne.n	8007044 <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8007036:	687b      	ldr	r3, [r7, #4]
 8007038:	2200      	movs	r2, #0
 800703a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 800703e:	6878      	ldr	r0, [r7, #4]
 8007040:	f7fb feec 	bl	8002e1c <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8007044:	687b      	ldr	r3, [r7, #4]
 8007046:	2202      	movs	r2, #2
 8007048:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 800704c:	687b      	ldr	r3, [r7, #4]
 800704e:	681b      	ldr	r3, [r3, #0]
 8007050:	681a      	ldr	r2, [r3, #0]
 8007052:	687b      	ldr	r3, [r7, #4]
 8007054:	681b      	ldr	r3, [r3, #0]
 8007056:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800705a:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800705c:	687b      	ldr	r3, [r7, #4]
 800705e:	685b      	ldr	r3, [r3, #4]
 8007060:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8007064:	687b      	ldr	r3, [r7, #4]
 8007066:	689b      	ldr	r3, [r3, #8]
 8007068:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 800706c:	431a      	orrs	r2, r3
 800706e:	687b      	ldr	r3, [r7, #4]
 8007070:	68db      	ldr	r3, [r3, #12]
 8007072:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8007076:	431a      	orrs	r2, r3
 8007078:	687b      	ldr	r3, [r7, #4]
 800707a:	691b      	ldr	r3, [r3, #16]
 800707c:	f003 0302 	and.w	r3, r3, #2
 8007080:	431a      	orrs	r2, r3
 8007082:	687b      	ldr	r3, [r7, #4]
 8007084:	695b      	ldr	r3, [r3, #20]
 8007086:	f003 0301 	and.w	r3, r3, #1
 800708a:	431a      	orrs	r2, r3
 800708c:	687b      	ldr	r3, [r7, #4]
 800708e:	699b      	ldr	r3, [r3, #24]
 8007090:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8007094:	431a      	orrs	r2, r3
 8007096:	687b      	ldr	r3, [r7, #4]
 8007098:	69db      	ldr	r3, [r3, #28]
 800709a:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800709e:	431a      	orrs	r2, r3
 80070a0:	687b      	ldr	r3, [r7, #4]
 80070a2:	6a1b      	ldr	r3, [r3, #32]
 80070a4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80070a8:	ea42 0103 	orr.w	r1, r2, r3
 80070ac:	687b      	ldr	r3, [r7, #4]
 80070ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80070b0:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 80070b4:	687b      	ldr	r3, [r7, #4]
 80070b6:	681b      	ldr	r3, [r3, #0]
 80070b8:	430a      	orrs	r2, r1
 80070ba:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 80070bc:	687b      	ldr	r3, [r7, #4]
 80070be:	699b      	ldr	r3, [r3, #24]
 80070c0:	0c1b      	lsrs	r3, r3, #16
 80070c2:	f003 0104 	and.w	r1, r3, #4
 80070c6:	687b      	ldr	r3, [r7, #4]
 80070c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80070ca:	f003 0210 	and.w	r2, r3, #16
 80070ce:	687b      	ldr	r3, [r7, #4]
 80070d0:	681b      	ldr	r3, [r3, #0]
 80070d2:	430a      	orrs	r2, r1
 80070d4:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80070d6:	687b      	ldr	r3, [r7, #4]
 80070d8:	681b      	ldr	r3, [r3, #0]
 80070da:	69da      	ldr	r2, [r3, #28]
 80070dc:	687b      	ldr	r3, [r7, #4]
 80070de:	681b      	ldr	r3, [r3, #0]
 80070e0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80070e4:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80070e6:	687b      	ldr	r3, [r7, #4]
 80070e8:	2200      	movs	r2, #0
 80070ea:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 80070ec:	687b      	ldr	r3, [r7, #4]
 80070ee:	2201      	movs	r2, #1
 80070f0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  return HAL_OK;
 80070f4:	2300      	movs	r3, #0
}
 80070f6:	4618      	mov	r0, r3
 80070f8:	3708      	adds	r7, #8
 80070fa:	46bd      	mov	sp, r7
 80070fc:	bd80      	pop	{r7, pc}

080070fe <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80070fe:	b580      	push	{r7, lr}
 8007100:	b088      	sub	sp, #32
 8007102:	af00      	add	r7, sp, #0
 8007104:	60f8      	str	r0, [r7, #12]
 8007106:	60b9      	str	r1, [r7, #8]
 8007108:	603b      	str	r3, [r7, #0]
 800710a:	4613      	mov	r3, r2
 800710c:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 800710e:	2300      	movs	r3, #0
 8007110:	77fb      	strb	r3, [r7, #31]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8007112:	68fb      	ldr	r3, [r7, #12]
 8007114:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8007118:	2b01      	cmp	r3, #1
 800711a:	d101      	bne.n	8007120 <HAL_SPI_Transmit+0x22>
 800711c:	2302      	movs	r3, #2
 800711e:	e12d      	b.n	800737c <HAL_SPI_Transmit+0x27e>
 8007120:	68fb      	ldr	r3, [r7, #12]
 8007122:	2201      	movs	r2, #1
 8007124:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8007128:	f7fc ff42 	bl	8003fb0 <HAL_GetTick>
 800712c:	61b8      	str	r0, [r7, #24]
  initial_TxXferCount = Size;
 800712e:	88fb      	ldrh	r3, [r7, #6]
 8007130:	82fb      	strh	r3, [r7, #22]

  if (hspi->State != HAL_SPI_STATE_READY)
 8007132:	68fb      	ldr	r3, [r7, #12]
 8007134:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8007138:	b2db      	uxtb	r3, r3
 800713a:	2b01      	cmp	r3, #1
 800713c:	d002      	beq.n	8007144 <HAL_SPI_Transmit+0x46>
  {
    errorcode = HAL_BUSY;
 800713e:	2302      	movs	r3, #2
 8007140:	77fb      	strb	r3, [r7, #31]
    goto error;
 8007142:	e116      	b.n	8007372 <HAL_SPI_Transmit+0x274>
  }

  if ((pData == NULL) || (Size == 0U))
 8007144:	68bb      	ldr	r3, [r7, #8]
 8007146:	2b00      	cmp	r3, #0
 8007148:	d002      	beq.n	8007150 <HAL_SPI_Transmit+0x52>
 800714a:	88fb      	ldrh	r3, [r7, #6]
 800714c:	2b00      	cmp	r3, #0
 800714e:	d102      	bne.n	8007156 <HAL_SPI_Transmit+0x58>
  {
    errorcode = HAL_ERROR;
 8007150:	2301      	movs	r3, #1
 8007152:	77fb      	strb	r3, [r7, #31]
    goto error;
 8007154:	e10d      	b.n	8007372 <HAL_SPI_Transmit+0x274>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8007156:	68fb      	ldr	r3, [r7, #12]
 8007158:	2203      	movs	r2, #3
 800715a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800715e:	68fb      	ldr	r3, [r7, #12]
 8007160:	2200      	movs	r2, #0
 8007162:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8007164:	68fb      	ldr	r3, [r7, #12]
 8007166:	68ba      	ldr	r2, [r7, #8]
 8007168:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800716a:	68fb      	ldr	r3, [r7, #12]
 800716c:	88fa      	ldrh	r2, [r7, #6]
 800716e:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 8007170:	68fb      	ldr	r3, [r7, #12]
 8007172:	88fa      	ldrh	r2, [r7, #6]
 8007174:	86da      	strh	r2, [r3, #54]	; 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8007176:	68fb      	ldr	r3, [r7, #12]
 8007178:	2200      	movs	r2, #0
 800717a:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800717c:	68fb      	ldr	r3, [r7, #12]
 800717e:	2200      	movs	r2, #0
 8007180:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8007182:	68fb      	ldr	r3, [r7, #12]
 8007184:	2200      	movs	r2, #0
 8007186:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxISR       = NULL;
 8007188:	68fb      	ldr	r3, [r7, #12]
 800718a:	2200      	movs	r2, #0
 800718c:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 800718e:	68fb      	ldr	r3, [r7, #12]
 8007190:	2200      	movs	r2, #0
 8007192:	641a      	str	r2, [r3, #64]	; 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007194:	68fb      	ldr	r3, [r7, #12]
 8007196:	689b      	ldr	r3, [r3, #8]
 8007198:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800719c:	d10f      	bne.n	80071be <HAL_SPI_Transmit+0xc0>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 800719e:	68fb      	ldr	r3, [r7, #12]
 80071a0:	681b      	ldr	r3, [r3, #0]
 80071a2:	681a      	ldr	r2, [r3, #0]
 80071a4:	68fb      	ldr	r3, [r7, #12]
 80071a6:	681b      	ldr	r3, [r3, #0]
 80071a8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80071ac:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 80071ae:	68fb      	ldr	r3, [r7, #12]
 80071b0:	681b      	ldr	r3, [r3, #0]
 80071b2:	681a      	ldr	r2, [r3, #0]
 80071b4:	68fb      	ldr	r3, [r7, #12]
 80071b6:	681b      	ldr	r3, [r3, #0]
 80071b8:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80071bc:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80071be:	68fb      	ldr	r3, [r7, #12]
 80071c0:	681b      	ldr	r3, [r3, #0]
 80071c2:	681b      	ldr	r3, [r3, #0]
 80071c4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80071c8:	2b40      	cmp	r3, #64	; 0x40
 80071ca:	d007      	beq.n	80071dc <HAL_SPI_Transmit+0xde>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80071cc:	68fb      	ldr	r3, [r7, #12]
 80071ce:	681b      	ldr	r3, [r3, #0]
 80071d0:	681a      	ldr	r2, [r3, #0]
 80071d2:	68fb      	ldr	r3, [r7, #12]
 80071d4:	681b      	ldr	r3, [r3, #0]
 80071d6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80071da:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80071dc:	68fb      	ldr	r3, [r7, #12]
 80071de:	68db      	ldr	r3, [r3, #12]
 80071e0:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80071e4:	d14f      	bne.n	8007286 <HAL_SPI_Transmit+0x188>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80071e6:	68fb      	ldr	r3, [r7, #12]
 80071e8:	685b      	ldr	r3, [r3, #4]
 80071ea:	2b00      	cmp	r3, #0
 80071ec:	d002      	beq.n	80071f4 <HAL_SPI_Transmit+0xf6>
 80071ee:	8afb      	ldrh	r3, [r7, #22]
 80071f0:	2b01      	cmp	r3, #1
 80071f2:	d142      	bne.n	800727a <HAL_SPI_Transmit+0x17c>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80071f4:	68fb      	ldr	r3, [r7, #12]
 80071f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80071f8:	881a      	ldrh	r2, [r3, #0]
 80071fa:	68fb      	ldr	r3, [r7, #12]
 80071fc:	681b      	ldr	r3, [r3, #0]
 80071fe:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007200:	68fb      	ldr	r3, [r7, #12]
 8007202:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007204:	1c9a      	adds	r2, r3, #2
 8007206:	68fb      	ldr	r3, [r7, #12]
 8007208:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 800720a:	68fb      	ldr	r3, [r7, #12]
 800720c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800720e:	b29b      	uxth	r3, r3
 8007210:	3b01      	subs	r3, #1
 8007212:	b29a      	uxth	r2, r3
 8007214:	68fb      	ldr	r3, [r7, #12]
 8007216:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8007218:	e02f      	b.n	800727a <HAL_SPI_Transmit+0x17c>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800721a:	68fb      	ldr	r3, [r7, #12]
 800721c:	681b      	ldr	r3, [r3, #0]
 800721e:	689b      	ldr	r3, [r3, #8]
 8007220:	f003 0302 	and.w	r3, r3, #2
 8007224:	2b02      	cmp	r3, #2
 8007226:	d112      	bne.n	800724e <HAL_SPI_Transmit+0x150>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007228:	68fb      	ldr	r3, [r7, #12]
 800722a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800722c:	881a      	ldrh	r2, [r3, #0]
 800722e:	68fb      	ldr	r3, [r7, #12]
 8007230:	681b      	ldr	r3, [r3, #0]
 8007232:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007234:	68fb      	ldr	r3, [r7, #12]
 8007236:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007238:	1c9a      	adds	r2, r3, #2
 800723a:	68fb      	ldr	r3, [r7, #12]
 800723c:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 800723e:	68fb      	ldr	r3, [r7, #12]
 8007240:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007242:	b29b      	uxth	r3, r3
 8007244:	3b01      	subs	r3, #1
 8007246:	b29a      	uxth	r2, r3
 8007248:	68fb      	ldr	r3, [r7, #12]
 800724a:	86da      	strh	r2, [r3, #54]	; 0x36
 800724c:	e015      	b.n	800727a <HAL_SPI_Transmit+0x17c>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800724e:	f7fc feaf 	bl	8003fb0 <HAL_GetTick>
 8007252:	4602      	mov	r2, r0
 8007254:	69bb      	ldr	r3, [r7, #24]
 8007256:	1ad3      	subs	r3, r2, r3
 8007258:	683a      	ldr	r2, [r7, #0]
 800725a:	429a      	cmp	r2, r3
 800725c:	d803      	bhi.n	8007266 <HAL_SPI_Transmit+0x168>
 800725e:	683b      	ldr	r3, [r7, #0]
 8007260:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007264:	d102      	bne.n	800726c <HAL_SPI_Transmit+0x16e>
 8007266:	683b      	ldr	r3, [r7, #0]
 8007268:	2b00      	cmp	r3, #0
 800726a:	d106      	bne.n	800727a <HAL_SPI_Transmit+0x17c>
        {
          errorcode = HAL_TIMEOUT;
 800726c:	2303      	movs	r3, #3
 800726e:	77fb      	strb	r3, [r7, #31]
          hspi->State = HAL_SPI_STATE_READY;
 8007270:	68fb      	ldr	r3, [r7, #12]
 8007272:	2201      	movs	r2, #1
 8007274:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
          goto error;
 8007278:	e07b      	b.n	8007372 <HAL_SPI_Transmit+0x274>
    while (hspi->TxXferCount > 0U)
 800727a:	68fb      	ldr	r3, [r7, #12]
 800727c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800727e:	b29b      	uxth	r3, r3
 8007280:	2b00      	cmp	r3, #0
 8007282:	d1ca      	bne.n	800721a <HAL_SPI_Transmit+0x11c>
 8007284:	e050      	b.n	8007328 <HAL_SPI_Transmit+0x22a>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007286:	68fb      	ldr	r3, [r7, #12]
 8007288:	685b      	ldr	r3, [r3, #4]
 800728a:	2b00      	cmp	r3, #0
 800728c:	d002      	beq.n	8007294 <HAL_SPI_Transmit+0x196>
 800728e:	8afb      	ldrh	r3, [r7, #22]
 8007290:	2b01      	cmp	r3, #1
 8007292:	d144      	bne.n	800731e <HAL_SPI_Transmit+0x220>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007294:	68fb      	ldr	r3, [r7, #12]
 8007296:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8007298:	68fb      	ldr	r3, [r7, #12]
 800729a:	681b      	ldr	r3, [r3, #0]
 800729c:	330c      	adds	r3, #12
 800729e:	7812      	ldrb	r2, [r2, #0]
 80072a0:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80072a2:	68fb      	ldr	r3, [r7, #12]
 80072a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80072a6:	1c5a      	adds	r2, r3, #1
 80072a8:	68fb      	ldr	r3, [r7, #12]
 80072aa:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 80072ac:	68fb      	ldr	r3, [r7, #12]
 80072ae:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80072b0:	b29b      	uxth	r3, r3
 80072b2:	3b01      	subs	r3, #1
 80072b4:	b29a      	uxth	r2, r3
 80072b6:	68fb      	ldr	r3, [r7, #12]
 80072b8:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while (hspi->TxXferCount > 0U)
 80072ba:	e030      	b.n	800731e <HAL_SPI_Transmit+0x220>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80072bc:	68fb      	ldr	r3, [r7, #12]
 80072be:	681b      	ldr	r3, [r3, #0]
 80072c0:	689b      	ldr	r3, [r3, #8]
 80072c2:	f003 0302 	and.w	r3, r3, #2
 80072c6:	2b02      	cmp	r3, #2
 80072c8:	d113      	bne.n	80072f2 <HAL_SPI_Transmit+0x1f4>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80072ca:	68fb      	ldr	r3, [r7, #12]
 80072cc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80072ce:	68fb      	ldr	r3, [r7, #12]
 80072d0:	681b      	ldr	r3, [r3, #0]
 80072d2:	330c      	adds	r3, #12
 80072d4:	7812      	ldrb	r2, [r2, #0]
 80072d6:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80072d8:	68fb      	ldr	r3, [r7, #12]
 80072da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80072dc:	1c5a      	adds	r2, r3, #1
 80072de:	68fb      	ldr	r3, [r7, #12]
 80072e0:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 80072e2:	68fb      	ldr	r3, [r7, #12]
 80072e4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80072e6:	b29b      	uxth	r3, r3
 80072e8:	3b01      	subs	r3, #1
 80072ea:	b29a      	uxth	r2, r3
 80072ec:	68fb      	ldr	r3, [r7, #12]
 80072ee:	86da      	strh	r2, [r3, #54]	; 0x36
 80072f0:	e015      	b.n	800731e <HAL_SPI_Transmit+0x220>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80072f2:	f7fc fe5d 	bl	8003fb0 <HAL_GetTick>
 80072f6:	4602      	mov	r2, r0
 80072f8:	69bb      	ldr	r3, [r7, #24]
 80072fa:	1ad3      	subs	r3, r2, r3
 80072fc:	683a      	ldr	r2, [r7, #0]
 80072fe:	429a      	cmp	r2, r3
 8007300:	d803      	bhi.n	800730a <HAL_SPI_Transmit+0x20c>
 8007302:	683b      	ldr	r3, [r7, #0]
 8007304:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007308:	d102      	bne.n	8007310 <HAL_SPI_Transmit+0x212>
 800730a:	683b      	ldr	r3, [r7, #0]
 800730c:	2b00      	cmp	r3, #0
 800730e:	d106      	bne.n	800731e <HAL_SPI_Transmit+0x220>
        {
          errorcode = HAL_TIMEOUT;
 8007310:	2303      	movs	r3, #3
 8007312:	77fb      	strb	r3, [r7, #31]
          hspi->State = HAL_SPI_STATE_READY;
 8007314:	68fb      	ldr	r3, [r7, #12]
 8007316:	2201      	movs	r2, #1
 8007318:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
          goto error;
 800731c:	e029      	b.n	8007372 <HAL_SPI_Transmit+0x274>
    while (hspi->TxXferCount > 0U)
 800731e:	68fb      	ldr	r3, [r7, #12]
 8007320:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007322:	b29b      	uxth	r3, r3
 8007324:	2b00      	cmp	r3, #0
 8007326:	d1c9      	bne.n	80072bc <HAL_SPI_Transmit+0x1be>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007328:	69ba      	ldr	r2, [r7, #24]
 800732a:	6839      	ldr	r1, [r7, #0]
 800732c:	68f8      	ldr	r0, [r7, #12]
 800732e:	f000 fe25 	bl	8007f7c <SPI_EndRxTxTransaction>
 8007332:	4603      	mov	r3, r0
 8007334:	2b00      	cmp	r3, #0
 8007336:	d002      	beq.n	800733e <HAL_SPI_Transmit+0x240>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007338:	68fb      	ldr	r3, [r7, #12]
 800733a:	2220      	movs	r2, #32
 800733c:	655a      	str	r2, [r3, #84]	; 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800733e:	68fb      	ldr	r3, [r7, #12]
 8007340:	689b      	ldr	r3, [r3, #8]
 8007342:	2b00      	cmp	r3, #0
 8007344:	d10a      	bne.n	800735c <HAL_SPI_Transmit+0x25e>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007346:	2300      	movs	r3, #0
 8007348:	613b      	str	r3, [r7, #16]
 800734a:	68fb      	ldr	r3, [r7, #12]
 800734c:	681b      	ldr	r3, [r3, #0]
 800734e:	68db      	ldr	r3, [r3, #12]
 8007350:	613b      	str	r3, [r7, #16]
 8007352:	68fb      	ldr	r3, [r7, #12]
 8007354:	681b      	ldr	r3, [r3, #0]
 8007356:	689b      	ldr	r3, [r3, #8]
 8007358:	613b      	str	r3, [r7, #16]
 800735a:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800735c:	68fb      	ldr	r3, [r7, #12]
 800735e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007360:	2b00      	cmp	r3, #0
 8007362:	d002      	beq.n	800736a <HAL_SPI_Transmit+0x26c>
  {
    errorcode = HAL_ERROR;
 8007364:	2301      	movs	r3, #1
 8007366:	77fb      	strb	r3, [r7, #31]
 8007368:	e003      	b.n	8007372 <HAL_SPI_Transmit+0x274>
  }
  else
  {
    hspi->State = HAL_SPI_STATE_READY;
 800736a:	68fb      	ldr	r3, [r7, #12]
 800736c:	2201      	movs	r2, #1
 800736e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  }

error:
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8007372:	68fb      	ldr	r3, [r7, #12]
 8007374:	2200      	movs	r2, #0
 8007376:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 800737a:	7ffb      	ldrb	r3, [r7, #31]
}
 800737c:	4618      	mov	r0, r3
 800737e:	3720      	adds	r7, #32
 8007380:	46bd      	mov	sp, r7
 8007382:	bd80      	pop	{r7, pc}

08007384 <HAL_SPI_Receive>:
  * @param  Size amount of data to be received
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8007384:	b580      	push	{r7, lr}
 8007386:	b088      	sub	sp, #32
 8007388:	af02      	add	r7, sp, #8
 800738a:	60f8      	str	r0, [r7, #12]
 800738c:	60b9      	str	r1, [r7, #8]
 800738e:	603b      	str	r3, [r7, #0]
 8007390:	4613      	mov	r3, r2
 8007392:	80fb      	strh	r3, [r7, #6]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 8007394:	2300      	movs	r3, #0
 8007396:	75fb      	strb	r3, [r7, #23]

  if (hspi->State != HAL_SPI_STATE_READY)
 8007398:	68fb      	ldr	r3, [r7, #12]
 800739a:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800739e:	b2db      	uxtb	r3, r3
 80073a0:	2b01      	cmp	r3, #1
 80073a2:	d002      	beq.n	80073aa <HAL_SPI_Receive+0x26>
  {
    errorcode = HAL_BUSY;
 80073a4:	2302      	movs	r3, #2
 80073a6:	75fb      	strb	r3, [r7, #23]
    goto error;
 80073a8:	e0fb      	b.n	80075a2 <HAL_SPI_Receive+0x21e>
  }

  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80073aa:	68fb      	ldr	r3, [r7, #12]
 80073ac:	685b      	ldr	r3, [r3, #4]
 80073ae:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80073b2:	d112      	bne.n	80073da <HAL_SPI_Receive+0x56>
 80073b4:	68fb      	ldr	r3, [r7, #12]
 80073b6:	689b      	ldr	r3, [r3, #8]
 80073b8:	2b00      	cmp	r3, #0
 80073ba:	d10e      	bne.n	80073da <HAL_SPI_Receive+0x56>
  {
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 80073bc:	68fb      	ldr	r3, [r7, #12]
 80073be:	2204      	movs	r2, #4
 80073c0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
    /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line */
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 80073c4:	88fa      	ldrh	r2, [r7, #6]
 80073c6:	683b      	ldr	r3, [r7, #0]
 80073c8:	9300      	str	r3, [sp, #0]
 80073ca:	4613      	mov	r3, r2
 80073cc:	68ba      	ldr	r2, [r7, #8]
 80073ce:	68b9      	ldr	r1, [r7, #8]
 80073d0:	68f8      	ldr	r0, [r7, #12]
 80073d2:	f000 f8ef 	bl	80075b4 <HAL_SPI_TransmitReceive>
 80073d6:	4603      	mov	r3, r0
 80073d8:	e0e8      	b.n	80075ac <HAL_SPI_Receive+0x228>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 80073da:	68fb      	ldr	r3, [r7, #12]
 80073dc:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80073e0:	2b01      	cmp	r3, #1
 80073e2:	d101      	bne.n	80073e8 <HAL_SPI_Receive+0x64>
 80073e4:	2302      	movs	r3, #2
 80073e6:	e0e1      	b.n	80075ac <HAL_SPI_Receive+0x228>
 80073e8:	68fb      	ldr	r3, [r7, #12]
 80073ea:	2201      	movs	r2, #1
 80073ec:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80073f0:	f7fc fdde 	bl	8003fb0 <HAL_GetTick>
 80073f4:	6138      	str	r0, [r7, #16]

  if ((pData == NULL) || (Size == 0U))
 80073f6:	68bb      	ldr	r3, [r7, #8]
 80073f8:	2b00      	cmp	r3, #0
 80073fa:	d002      	beq.n	8007402 <HAL_SPI_Receive+0x7e>
 80073fc:	88fb      	ldrh	r3, [r7, #6]
 80073fe:	2b00      	cmp	r3, #0
 8007400:	d102      	bne.n	8007408 <HAL_SPI_Receive+0x84>
  {
    errorcode = HAL_ERROR;
 8007402:	2301      	movs	r3, #1
 8007404:	75fb      	strb	r3, [r7, #23]
    goto error;
 8007406:	e0cc      	b.n	80075a2 <HAL_SPI_Receive+0x21e>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8007408:	68fb      	ldr	r3, [r7, #12]
 800740a:	2204      	movs	r2, #4
 800740c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007410:	68fb      	ldr	r3, [r7, #12]
 8007412:	2200      	movs	r2, #0
 8007414:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8007416:	68fb      	ldr	r3, [r7, #12]
 8007418:	68ba      	ldr	r2, [r7, #8]
 800741a:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = Size;
 800741c:	68fb      	ldr	r3, [r7, #12]
 800741e:	88fa      	ldrh	r2, [r7, #6]
 8007420:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = Size;
 8007422:	68fb      	ldr	r3, [r7, #12]
 8007424:	88fa      	ldrh	r2, [r7, #6]
 8007426:	87da      	strh	r2, [r3, #62]	; 0x3e

  /*Init field not used in handle to zero */
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8007428:	68fb      	ldr	r3, [r7, #12]
 800742a:	2200      	movs	r2, #0
 800742c:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800742e:	68fb      	ldr	r3, [r7, #12]
 8007430:	2200      	movs	r2, #0
 8007432:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = 0U;
 8007434:	68fb      	ldr	r3, [r7, #12]
 8007436:	2200      	movs	r2, #0
 8007438:	86da      	strh	r2, [r3, #54]	; 0x36
  hspi->RxISR       = NULL;
 800743a:	68fb      	ldr	r3, [r7, #12]
 800743c:	2200      	movs	r2, #0
 800743e:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->TxISR       = NULL;
 8007440:	68fb      	ldr	r3, [r7, #12]
 8007442:	2200      	movs	r2, #0
 8007444:	645a      	str	r2, [r3, #68]	; 0x44
    hspi->RxXferCount--;
  }
#endif /* USE_SPI_CRC */

  /* Configure communication direction: 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007446:	68fb      	ldr	r3, [r7, #12]
 8007448:	689b      	ldr	r3, [r3, #8]
 800744a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800744e:	d10f      	bne.n	8007470 <HAL_SPI_Receive+0xec>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8007450:	68fb      	ldr	r3, [r7, #12]
 8007452:	681b      	ldr	r3, [r3, #0]
 8007454:	681a      	ldr	r2, [r3, #0]
 8007456:	68fb      	ldr	r3, [r7, #12]
 8007458:	681b      	ldr	r3, [r3, #0]
 800745a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800745e:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8007460:	68fb      	ldr	r3, [r7, #12]
 8007462:	681b      	ldr	r3, [r3, #0]
 8007464:	681a      	ldr	r2, [r3, #0]
 8007466:	68fb      	ldr	r3, [r7, #12]
 8007468:	681b      	ldr	r3, [r3, #0]
 800746a:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800746e:	601a      	str	r2, [r3, #0]
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007470:	68fb      	ldr	r3, [r7, #12]
 8007472:	681b      	ldr	r3, [r3, #0]
 8007474:	681b      	ldr	r3, [r3, #0]
 8007476:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800747a:	2b40      	cmp	r3, #64	; 0x40
 800747c:	d007      	beq.n	800748e <HAL_SPI_Receive+0x10a>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 800747e:	68fb      	ldr	r3, [r7, #12]
 8007480:	681b      	ldr	r3, [r3, #0]
 8007482:	681a      	ldr	r2, [r3, #0]
 8007484:	68fb      	ldr	r3, [r7, #12]
 8007486:	681b      	ldr	r3, [r3, #0]
 8007488:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800748c:	601a      	str	r2, [r3, #0]
  }

  /* Receive data in 8 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800748e:	68fb      	ldr	r3, [r7, #12]
 8007490:	68db      	ldr	r3, [r3, #12]
 8007492:	2b00      	cmp	r3, #0
 8007494:	d16a      	bne.n	800756c <HAL_SPI_Receive+0x1e8>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
 8007496:	e032      	b.n	80074fe <HAL_SPI_Receive+0x17a>
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007498:	68fb      	ldr	r3, [r7, #12]
 800749a:	681b      	ldr	r3, [r3, #0]
 800749c:	689b      	ldr	r3, [r3, #8]
 800749e:	f003 0301 	and.w	r3, r3, #1
 80074a2:	2b01      	cmp	r3, #1
 80074a4:	d115      	bne.n	80074d2 <HAL_SPI_Receive+0x14e>
      {
        /* read the received data */
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80074a6:	68fb      	ldr	r3, [r7, #12]
 80074a8:	681b      	ldr	r3, [r3, #0]
 80074aa:	f103 020c 	add.w	r2, r3, #12
 80074ae:	68fb      	ldr	r3, [r7, #12]
 80074b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80074b2:	7812      	ldrb	r2, [r2, #0]
 80074b4:	b2d2      	uxtb	r2, r2
 80074b6:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 80074b8:	68fb      	ldr	r3, [r7, #12]
 80074ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80074bc:	1c5a      	adds	r2, r3, #1
 80074be:	68fb      	ldr	r3, [r7, #12]
 80074c0:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 80074c2:	68fb      	ldr	r3, [r7, #12]
 80074c4:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80074c6:	b29b      	uxth	r3, r3
 80074c8:	3b01      	subs	r3, #1
 80074ca:	b29a      	uxth	r2, r3
 80074cc:	68fb      	ldr	r3, [r7, #12]
 80074ce:	87da      	strh	r2, [r3, #62]	; 0x3e
 80074d0:	e015      	b.n	80074fe <HAL_SPI_Receive+0x17a>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80074d2:	f7fc fd6d 	bl	8003fb0 <HAL_GetTick>
 80074d6:	4602      	mov	r2, r0
 80074d8:	693b      	ldr	r3, [r7, #16]
 80074da:	1ad3      	subs	r3, r2, r3
 80074dc:	683a      	ldr	r2, [r7, #0]
 80074de:	429a      	cmp	r2, r3
 80074e0:	d803      	bhi.n	80074ea <HAL_SPI_Receive+0x166>
 80074e2:	683b      	ldr	r3, [r7, #0]
 80074e4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80074e8:	d102      	bne.n	80074f0 <HAL_SPI_Receive+0x16c>
 80074ea:	683b      	ldr	r3, [r7, #0]
 80074ec:	2b00      	cmp	r3, #0
 80074ee:	d106      	bne.n	80074fe <HAL_SPI_Receive+0x17a>
        {
          errorcode = HAL_TIMEOUT;
 80074f0:	2303      	movs	r3, #3
 80074f2:	75fb      	strb	r3, [r7, #23]
          hspi->State = HAL_SPI_STATE_READY;
 80074f4:	68fb      	ldr	r3, [r7, #12]
 80074f6:	2201      	movs	r2, #1
 80074f8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
          goto error;
 80074fc:	e051      	b.n	80075a2 <HAL_SPI_Receive+0x21e>
    while (hspi->RxXferCount > 0U)
 80074fe:	68fb      	ldr	r3, [r7, #12]
 8007500:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007502:	b29b      	uxth	r3, r3
 8007504:	2b00      	cmp	r3, #0
 8007506:	d1c7      	bne.n	8007498 <HAL_SPI_Receive+0x114>
 8007508:	e035      	b.n	8007576 <HAL_SPI_Receive+0x1f2>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800750a:	68fb      	ldr	r3, [r7, #12]
 800750c:	681b      	ldr	r3, [r3, #0]
 800750e:	689b      	ldr	r3, [r3, #8]
 8007510:	f003 0301 	and.w	r3, r3, #1
 8007514:	2b01      	cmp	r3, #1
 8007516:	d113      	bne.n	8007540 <HAL_SPI_Receive+0x1bc>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007518:	68fb      	ldr	r3, [r7, #12]
 800751a:	681b      	ldr	r3, [r3, #0]
 800751c:	68da      	ldr	r2, [r3, #12]
 800751e:	68fb      	ldr	r3, [r7, #12]
 8007520:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007522:	b292      	uxth	r2, r2
 8007524:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007526:	68fb      	ldr	r3, [r7, #12]
 8007528:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800752a:	1c9a      	adds	r2, r3, #2
 800752c:	68fb      	ldr	r3, [r7, #12]
 800752e:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 8007530:	68fb      	ldr	r3, [r7, #12]
 8007532:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007534:	b29b      	uxth	r3, r3
 8007536:	3b01      	subs	r3, #1
 8007538:	b29a      	uxth	r2, r3
 800753a:	68fb      	ldr	r3, [r7, #12]
 800753c:	87da      	strh	r2, [r3, #62]	; 0x3e
 800753e:	e015      	b.n	800756c <HAL_SPI_Receive+0x1e8>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007540:	f7fc fd36 	bl	8003fb0 <HAL_GetTick>
 8007544:	4602      	mov	r2, r0
 8007546:	693b      	ldr	r3, [r7, #16]
 8007548:	1ad3      	subs	r3, r2, r3
 800754a:	683a      	ldr	r2, [r7, #0]
 800754c:	429a      	cmp	r2, r3
 800754e:	d803      	bhi.n	8007558 <HAL_SPI_Receive+0x1d4>
 8007550:	683b      	ldr	r3, [r7, #0]
 8007552:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007556:	d102      	bne.n	800755e <HAL_SPI_Receive+0x1da>
 8007558:	683b      	ldr	r3, [r7, #0]
 800755a:	2b00      	cmp	r3, #0
 800755c:	d106      	bne.n	800756c <HAL_SPI_Receive+0x1e8>
        {
          errorcode = HAL_TIMEOUT;
 800755e:	2303      	movs	r3, #3
 8007560:	75fb      	strb	r3, [r7, #23]
          hspi->State = HAL_SPI_STATE_READY;
 8007562:	68fb      	ldr	r3, [r7, #12]
 8007564:	2201      	movs	r2, #1
 8007566:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
          goto error;
 800756a:	e01a      	b.n	80075a2 <HAL_SPI_Receive+0x21e>
    while (hspi->RxXferCount > 0U)
 800756c:	68fb      	ldr	r3, [r7, #12]
 800756e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007570:	b29b      	uxth	r3, r3
 8007572:	2b00      	cmp	r3, #0
 8007574:	d1c9      	bne.n	800750a <HAL_SPI_Receive+0x186>
    UNUSED(tmpreg);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007576:	693a      	ldr	r2, [r7, #16]
 8007578:	6839      	ldr	r1, [r7, #0]
 800757a:	68f8      	ldr	r0, [r7, #12]
 800757c:	f000 fc98 	bl	8007eb0 <SPI_EndRxTransaction>
 8007580:	4603      	mov	r3, r0
 8007582:	2b00      	cmp	r3, #0
 8007584:	d002      	beq.n	800758c <HAL_SPI_Receive+0x208>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007586:	68fb      	ldr	r3, [r7, #12]
 8007588:	2220      	movs	r2, #32
 800758a:	655a      	str	r2, [r3, #84]	; 0x54
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
    __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
  }
#endif /* USE_SPI_CRC */

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800758c:	68fb      	ldr	r3, [r7, #12]
 800758e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007590:	2b00      	cmp	r3, #0
 8007592:	d002      	beq.n	800759a <HAL_SPI_Receive+0x216>
  {
    errorcode = HAL_ERROR;
 8007594:	2301      	movs	r3, #1
 8007596:	75fb      	strb	r3, [r7, #23]
 8007598:	e003      	b.n	80075a2 <HAL_SPI_Receive+0x21e>
  }
  else
  {
    hspi->State = HAL_SPI_STATE_READY;
 800759a:	68fb      	ldr	r3, [r7, #12]
 800759c:	2201      	movs	r2, #1
 800759e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  }

error :
  __HAL_UNLOCK(hspi);
 80075a2:	68fb      	ldr	r3, [r7, #12]
 80075a4:	2200      	movs	r2, #0
 80075a6:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 80075aa:	7dfb      	ldrb	r3, [r7, #23]
}
 80075ac:	4618      	mov	r0, r3
 80075ae:	3718      	adds	r7, #24
 80075b0:	46bd      	mov	sp, r7
 80075b2:	bd80      	pop	{r7, pc}

080075b4 <HAL_SPI_TransmitReceive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxData, uint16_t Size,
                                          uint32_t Timeout)
{
 80075b4:	b580      	push	{r7, lr}
 80075b6:	b08c      	sub	sp, #48	; 0x30
 80075b8:	af00      	add	r7, sp, #0
 80075ba:	60f8      	str	r0, [r7, #12]
 80075bc:	60b9      	str	r1, [r7, #8]
 80075be:	607a      	str	r2, [r7, #4]
 80075c0:	807b      	strh	r3, [r7, #2]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */

  /* Variable used to alternate Rx and Tx during transfer */
  uint32_t             txallowed = 1U;
 80075c2:	2301      	movs	r3, #1
 80075c4:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_StatusTypeDef    errorcode = HAL_OK;
 80075c6:	2300      	movs	r3, #0
 80075c8:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 80075cc:	68fb      	ldr	r3, [r7, #12]
 80075ce:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80075d2:	2b01      	cmp	r3, #1
 80075d4:	d101      	bne.n	80075da <HAL_SPI_TransmitReceive+0x26>
 80075d6:	2302      	movs	r3, #2
 80075d8:	e198      	b.n	800790c <HAL_SPI_TransmitReceive+0x358>
 80075da:	68fb      	ldr	r3, [r7, #12]
 80075dc:	2201      	movs	r2, #1
 80075de:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80075e2:	f7fc fce5 	bl	8003fb0 <HAL_GetTick>
 80075e6:	6278      	str	r0, [r7, #36]	; 0x24

  /* Init temporary variables */
  tmp_state           = hspi->State;
 80075e8:	68fb      	ldr	r3, [r7, #12]
 80075ea:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80075ee:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
  tmp_mode            = hspi->Init.Mode;
 80075f2:	68fb      	ldr	r3, [r7, #12]
 80075f4:	685b      	ldr	r3, [r3, #4]
 80075f6:	61fb      	str	r3, [r7, #28]
  initial_TxXferCount = Size;
 80075f8:	887b      	ldrh	r3, [r7, #2]
 80075fa:	837b      	strh	r3, [r7, #26]

  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80075fc:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8007600:	2b01      	cmp	r3, #1
 8007602:	d00f      	beq.n	8007624 <HAL_SPI_TransmitReceive+0x70>
 8007604:	69fb      	ldr	r3, [r7, #28]
 8007606:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800760a:	d107      	bne.n	800761c <HAL_SPI_TransmitReceive+0x68>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800760c:	68fb      	ldr	r3, [r7, #12]
 800760e:	689b      	ldr	r3, [r3, #8]
 8007610:	2b00      	cmp	r3, #0
 8007612:	d103      	bne.n	800761c <HAL_SPI_TransmitReceive+0x68>
 8007614:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8007618:	2b04      	cmp	r3, #4
 800761a:	d003      	beq.n	8007624 <HAL_SPI_TransmitReceive+0x70>
  {
    errorcode = HAL_BUSY;
 800761c:	2302      	movs	r3, #2
 800761e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    goto error;
 8007622:	e16d      	b.n	8007900 <HAL_SPI_TransmitReceive+0x34c>
  }

  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8007624:	68bb      	ldr	r3, [r7, #8]
 8007626:	2b00      	cmp	r3, #0
 8007628:	d005      	beq.n	8007636 <HAL_SPI_TransmitReceive+0x82>
 800762a:	687b      	ldr	r3, [r7, #4]
 800762c:	2b00      	cmp	r3, #0
 800762e:	d002      	beq.n	8007636 <HAL_SPI_TransmitReceive+0x82>
 8007630:	887b      	ldrh	r3, [r7, #2]
 8007632:	2b00      	cmp	r3, #0
 8007634:	d103      	bne.n	800763e <HAL_SPI_TransmitReceive+0x8a>
  {
    errorcode = HAL_ERROR;
 8007636:	2301      	movs	r3, #1
 8007638:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    goto error;
 800763c:	e160      	b.n	8007900 <HAL_SPI_TransmitReceive+0x34c>
  }

  /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800763e:	68fb      	ldr	r3, [r7, #12]
 8007640:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8007644:	b2db      	uxtb	r3, r3
 8007646:	2b04      	cmp	r3, #4
 8007648:	d003      	beq.n	8007652 <HAL_SPI_TransmitReceive+0x9e>
  {
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800764a:	68fb      	ldr	r3, [r7, #12]
 800764c:	2205      	movs	r2, #5
 800764e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  }

  /* Set the transaction information */
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007652:	68fb      	ldr	r3, [r7, #12]
 8007654:	2200      	movs	r2, #0
 8007656:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8007658:	68fb      	ldr	r3, [r7, #12]
 800765a:	687a      	ldr	r2, [r7, #4]
 800765c:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferCount = Size;
 800765e:	68fb      	ldr	r3, [r7, #12]
 8007660:	887a      	ldrh	r2, [r7, #2]
 8007662:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->RxXferSize  = Size;
 8007664:	68fb      	ldr	r3, [r7, #12]
 8007666:	887a      	ldrh	r2, [r7, #2]
 8007668:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800766a:	68fb      	ldr	r3, [r7, #12]
 800766c:	68ba      	ldr	r2, [r7, #8]
 800766e:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferCount = Size;
 8007670:	68fb      	ldr	r3, [r7, #12]
 8007672:	887a      	ldrh	r2, [r7, #2]
 8007674:	86da      	strh	r2, [r3, #54]	; 0x36
  hspi->TxXferSize  = Size;
 8007676:	68fb      	ldr	r3, [r7, #12]
 8007678:	887a      	ldrh	r2, [r7, #2]
 800767a:	869a      	strh	r2, [r3, #52]	; 0x34

  /*Init field not used in handle to zero */
  hspi->RxISR       = NULL;
 800767c:	68fb      	ldr	r3, [r7, #12]
 800767e:	2200      	movs	r2, #0
 8007680:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->TxISR       = NULL;
 8007682:	68fb      	ldr	r3, [r7, #12]
 8007684:	2200      	movs	r2, #0
 8007686:	645a      	str	r2, [r3, #68]	; 0x44
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007688:	68fb      	ldr	r3, [r7, #12]
 800768a:	681b      	ldr	r3, [r3, #0]
 800768c:	681b      	ldr	r3, [r3, #0]
 800768e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007692:	2b40      	cmp	r3, #64	; 0x40
 8007694:	d007      	beq.n	80076a6 <HAL_SPI_TransmitReceive+0xf2>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8007696:	68fb      	ldr	r3, [r7, #12]
 8007698:	681b      	ldr	r3, [r3, #0]
 800769a:	681a      	ldr	r2, [r3, #0]
 800769c:	68fb      	ldr	r3, [r7, #12]
 800769e:	681b      	ldr	r3, [r3, #0]
 80076a0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80076a4:	601a      	str	r2, [r3, #0]
  }

  /* Transmit and Receive data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80076a6:	68fb      	ldr	r3, [r7, #12]
 80076a8:	68db      	ldr	r3, [r3, #12]
 80076aa:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80076ae:	d17c      	bne.n	80077aa <HAL_SPI_TransmitReceive+0x1f6>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80076b0:	68fb      	ldr	r3, [r7, #12]
 80076b2:	685b      	ldr	r3, [r3, #4]
 80076b4:	2b00      	cmp	r3, #0
 80076b6:	d002      	beq.n	80076be <HAL_SPI_TransmitReceive+0x10a>
 80076b8:	8b7b      	ldrh	r3, [r7, #26]
 80076ba:	2b01      	cmp	r3, #1
 80076bc:	d16a      	bne.n	8007794 <HAL_SPI_TransmitReceive+0x1e0>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80076be:	68fb      	ldr	r3, [r7, #12]
 80076c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80076c2:	881a      	ldrh	r2, [r3, #0]
 80076c4:	68fb      	ldr	r3, [r7, #12]
 80076c6:	681b      	ldr	r3, [r3, #0]
 80076c8:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80076ca:	68fb      	ldr	r3, [r7, #12]
 80076cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80076ce:	1c9a      	adds	r2, r3, #2
 80076d0:	68fb      	ldr	r3, [r7, #12]
 80076d2:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 80076d4:	68fb      	ldr	r3, [r7, #12]
 80076d6:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80076d8:	b29b      	uxth	r3, r3
 80076da:	3b01      	subs	r3, #1
 80076dc:	b29a      	uxth	r2, r3
 80076de:	68fb      	ldr	r3, [r7, #12]
 80076e0:	86da      	strh	r2, [r3, #54]	; 0x36
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */

    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80076e2:	e057      	b.n	8007794 <HAL_SPI_TransmitReceive+0x1e0>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80076e4:	68fb      	ldr	r3, [r7, #12]
 80076e6:	681b      	ldr	r3, [r3, #0]
 80076e8:	689b      	ldr	r3, [r3, #8]
 80076ea:	f003 0302 	and.w	r3, r3, #2
 80076ee:	2b02      	cmp	r3, #2
 80076f0:	d11b      	bne.n	800772a <HAL_SPI_TransmitReceive+0x176>
 80076f2:	68fb      	ldr	r3, [r7, #12]
 80076f4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80076f6:	b29b      	uxth	r3, r3
 80076f8:	2b00      	cmp	r3, #0
 80076fa:	d016      	beq.n	800772a <HAL_SPI_TransmitReceive+0x176>
 80076fc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80076fe:	2b01      	cmp	r3, #1
 8007700:	d113      	bne.n	800772a <HAL_SPI_TransmitReceive+0x176>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007702:	68fb      	ldr	r3, [r7, #12]
 8007704:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007706:	881a      	ldrh	r2, [r3, #0]
 8007708:	68fb      	ldr	r3, [r7, #12]
 800770a:	681b      	ldr	r3, [r3, #0]
 800770c:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800770e:	68fb      	ldr	r3, [r7, #12]
 8007710:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007712:	1c9a      	adds	r2, r3, #2
 8007714:	68fb      	ldr	r3, [r7, #12]
 8007716:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8007718:	68fb      	ldr	r3, [r7, #12]
 800771a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800771c:	b29b      	uxth	r3, r3
 800771e:	3b01      	subs	r3, #1
 8007720:	b29a      	uxth	r2, r3
 8007722:	68fb      	ldr	r3, [r7, #12]
 8007724:	86da      	strh	r2, [r3, #54]	; 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8007726:	2300      	movs	r3, #0
 8007728:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
#endif /* USE_SPI_CRC */
      }

      /* Check RXNE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800772a:	68fb      	ldr	r3, [r7, #12]
 800772c:	681b      	ldr	r3, [r3, #0]
 800772e:	689b      	ldr	r3, [r3, #8]
 8007730:	f003 0301 	and.w	r3, r3, #1
 8007734:	2b01      	cmp	r3, #1
 8007736:	d119      	bne.n	800776c <HAL_SPI_TransmitReceive+0x1b8>
 8007738:	68fb      	ldr	r3, [r7, #12]
 800773a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800773c:	b29b      	uxth	r3, r3
 800773e:	2b00      	cmp	r3, #0
 8007740:	d014      	beq.n	800776c <HAL_SPI_TransmitReceive+0x1b8>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007742:	68fb      	ldr	r3, [r7, #12]
 8007744:	681b      	ldr	r3, [r3, #0]
 8007746:	68da      	ldr	r2, [r3, #12]
 8007748:	68fb      	ldr	r3, [r7, #12]
 800774a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800774c:	b292      	uxth	r2, r2
 800774e:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007750:	68fb      	ldr	r3, [r7, #12]
 8007752:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007754:	1c9a      	adds	r2, r3, #2
 8007756:	68fb      	ldr	r3, [r7, #12]
 8007758:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 800775a:	68fb      	ldr	r3, [r7, #12]
 800775c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800775e:	b29b      	uxth	r3, r3
 8007760:	3b01      	subs	r3, #1
 8007762:	b29a      	uxth	r2, r3
 8007764:	68fb      	ldr	r3, [r7, #12]
 8007766:	87da      	strh	r2, [r3, #62]	; 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8007768:	2301      	movs	r3, #1
 800776a:	62fb      	str	r3, [r7, #44]	; 0x2c
      }
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800776c:	f7fc fc20 	bl	8003fb0 <HAL_GetTick>
 8007770:	4602      	mov	r2, r0
 8007772:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007774:	1ad3      	subs	r3, r2, r3
 8007776:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8007778:	429a      	cmp	r2, r3
 800777a:	d80b      	bhi.n	8007794 <HAL_SPI_TransmitReceive+0x1e0>
 800777c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800777e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007782:	d007      	beq.n	8007794 <HAL_SPI_TransmitReceive+0x1e0>
      {
        errorcode = HAL_TIMEOUT;
 8007784:	2303      	movs	r3, #3
 8007786:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
        hspi->State = HAL_SPI_STATE_READY;
 800778a:	68fb      	ldr	r3, [r7, #12]
 800778c:	2201      	movs	r2, #1
 800778e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
        goto error;
 8007792:	e0b5      	b.n	8007900 <HAL_SPI_TransmitReceive+0x34c>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007794:	68fb      	ldr	r3, [r7, #12]
 8007796:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007798:	b29b      	uxth	r3, r3
 800779a:	2b00      	cmp	r3, #0
 800779c:	d1a2      	bne.n	80076e4 <HAL_SPI_TransmitReceive+0x130>
 800779e:	68fb      	ldr	r3, [r7, #12]
 80077a0:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80077a2:	b29b      	uxth	r3, r3
 80077a4:	2b00      	cmp	r3, #0
 80077a6:	d19d      	bne.n	80076e4 <HAL_SPI_TransmitReceive+0x130>
 80077a8:	e080      	b.n	80078ac <HAL_SPI_TransmitReceive+0x2f8>
    }
  }
  /* Transmit and Receive data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80077aa:	68fb      	ldr	r3, [r7, #12]
 80077ac:	685b      	ldr	r3, [r3, #4]
 80077ae:	2b00      	cmp	r3, #0
 80077b0:	d002      	beq.n	80077b8 <HAL_SPI_TransmitReceive+0x204>
 80077b2:	8b7b      	ldrh	r3, [r7, #26]
 80077b4:	2b01      	cmp	r3, #1
 80077b6:	d16f      	bne.n	8007898 <HAL_SPI_TransmitReceive+0x2e4>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80077b8:	68fb      	ldr	r3, [r7, #12]
 80077ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80077bc:	68fb      	ldr	r3, [r7, #12]
 80077be:	681b      	ldr	r3, [r3, #0]
 80077c0:	330c      	adds	r3, #12
 80077c2:	7812      	ldrb	r2, [r2, #0]
 80077c4:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80077c6:	68fb      	ldr	r3, [r7, #12]
 80077c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80077ca:	1c5a      	adds	r2, r3, #1
 80077cc:	68fb      	ldr	r3, [r7, #12]
 80077ce:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 80077d0:	68fb      	ldr	r3, [r7, #12]
 80077d2:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80077d4:	b29b      	uxth	r3, r3
 80077d6:	3b01      	subs	r3, #1
 80077d8:	b29a      	uxth	r2, r3
 80077da:	68fb      	ldr	r3, [r7, #12]
 80077dc:	86da      	strh	r2, [r3, #54]	; 0x36
      {
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80077de:	e05b      	b.n	8007898 <HAL_SPI_TransmitReceive+0x2e4>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80077e0:	68fb      	ldr	r3, [r7, #12]
 80077e2:	681b      	ldr	r3, [r3, #0]
 80077e4:	689b      	ldr	r3, [r3, #8]
 80077e6:	f003 0302 	and.w	r3, r3, #2
 80077ea:	2b02      	cmp	r3, #2
 80077ec:	d11c      	bne.n	8007828 <HAL_SPI_TransmitReceive+0x274>
 80077ee:	68fb      	ldr	r3, [r7, #12]
 80077f0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80077f2:	b29b      	uxth	r3, r3
 80077f4:	2b00      	cmp	r3, #0
 80077f6:	d017      	beq.n	8007828 <HAL_SPI_TransmitReceive+0x274>
 80077f8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80077fa:	2b01      	cmp	r3, #1
 80077fc:	d114      	bne.n	8007828 <HAL_SPI_TransmitReceive+0x274>
      {
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 80077fe:	68fb      	ldr	r3, [r7, #12]
 8007800:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8007802:	68fb      	ldr	r3, [r7, #12]
 8007804:	681b      	ldr	r3, [r3, #0]
 8007806:	330c      	adds	r3, #12
 8007808:	7812      	ldrb	r2, [r2, #0]
 800780a:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr++;
 800780c:	68fb      	ldr	r3, [r7, #12]
 800780e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007810:	1c5a      	adds	r2, r3, #1
 8007812:	68fb      	ldr	r3, [r7, #12]
 8007814:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8007816:	68fb      	ldr	r3, [r7, #12]
 8007818:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800781a:	b29b      	uxth	r3, r3
 800781c:	3b01      	subs	r3, #1
 800781e:	b29a      	uxth	r2, r3
 8007820:	68fb      	ldr	r3, [r7, #12]
 8007822:	86da      	strh	r2, [r3, #54]	; 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8007824:	2300      	movs	r3, #0
 8007826:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
#endif /* USE_SPI_CRC */
      }

      /* Wait until RXNE flag is reset */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007828:	68fb      	ldr	r3, [r7, #12]
 800782a:	681b      	ldr	r3, [r3, #0]
 800782c:	689b      	ldr	r3, [r3, #8]
 800782e:	f003 0301 	and.w	r3, r3, #1
 8007832:	2b01      	cmp	r3, #1
 8007834:	d119      	bne.n	800786a <HAL_SPI_TransmitReceive+0x2b6>
 8007836:	68fb      	ldr	r3, [r7, #12]
 8007838:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800783a:	b29b      	uxth	r3, r3
 800783c:	2b00      	cmp	r3, #0
 800783e:	d014      	beq.n	800786a <HAL_SPI_TransmitReceive+0x2b6>
      {
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8007840:	68fb      	ldr	r3, [r7, #12]
 8007842:	681b      	ldr	r3, [r3, #0]
 8007844:	68da      	ldr	r2, [r3, #12]
 8007846:	68fb      	ldr	r3, [r7, #12]
 8007848:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800784a:	b2d2      	uxtb	r2, r2
 800784c:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800784e:	68fb      	ldr	r3, [r7, #12]
 8007850:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007852:	1c5a      	adds	r2, r3, #1
 8007854:	68fb      	ldr	r3, [r7, #12]
 8007856:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 8007858:	68fb      	ldr	r3, [r7, #12]
 800785a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800785c:	b29b      	uxth	r3, r3
 800785e:	3b01      	subs	r3, #1
 8007860:	b29a      	uxth	r2, r3
 8007862:	68fb      	ldr	r3, [r7, #12]
 8007864:	87da      	strh	r2, [r3, #62]	; 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8007866:	2301      	movs	r3, #1
 8007868:	62fb      	str	r3, [r7, #44]	; 0x2c
      }
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800786a:	f7fc fba1 	bl	8003fb0 <HAL_GetTick>
 800786e:	4602      	mov	r2, r0
 8007870:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007872:	1ad3      	subs	r3, r2, r3
 8007874:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8007876:	429a      	cmp	r2, r3
 8007878:	d803      	bhi.n	8007882 <HAL_SPI_TransmitReceive+0x2ce>
 800787a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800787c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007880:	d102      	bne.n	8007888 <HAL_SPI_TransmitReceive+0x2d4>
 8007882:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007884:	2b00      	cmp	r3, #0
 8007886:	d107      	bne.n	8007898 <HAL_SPI_TransmitReceive+0x2e4>
      {
        errorcode = HAL_TIMEOUT;
 8007888:	2303      	movs	r3, #3
 800788a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
        hspi->State = HAL_SPI_STATE_READY;
 800788e:	68fb      	ldr	r3, [r7, #12]
 8007890:	2201      	movs	r2, #1
 8007892:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
        goto error;
 8007896:	e033      	b.n	8007900 <HAL_SPI_TransmitReceive+0x34c>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007898:	68fb      	ldr	r3, [r7, #12]
 800789a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800789c:	b29b      	uxth	r3, r3
 800789e:	2b00      	cmp	r3, #0
 80078a0:	d19e      	bne.n	80077e0 <HAL_SPI_TransmitReceive+0x22c>
 80078a2:	68fb      	ldr	r3, [r7, #12]
 80078a4:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80078a6:	b29b      	uxth	r3, r3
 80078a8:	2b00      	cmp	r3, #0
 80078aa:	d199      	bne.n	80077e0 <HAL_SPI_TransmitReceive+0x22c>
    errorcode = HAL_ERROR;
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80078ac:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80078ae:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 80078b0:	68f8      	ldr	r0, [r7, #12]
 80078b2:	f000 fb63 	bl	8007f7c <SPI_EndRxTxTransaction>
 80078b6:	4603      	mov	r3, r0
 80078b8:	2b00      	cmp	r3, #0
 80078ba:	d006      	beq.n	80078ca <HAL_SPI_TransmitReceive+0x316>
  {
    errorcode = HAL_ERROR;
 80078bc:	2301      	movs	r3, #1
 80078be:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80078c2:	68fb      	ldr	r3, [r7, #12]
 80078c4:	2220      	movs	r2, #32
 80078c6:	655a      	str	r2, [r3, #84]	; 0x54
    goto error;
 80078c8:	e01a      	b.n	8007900 <HAL_SPI_TransmitReceive+0x34c>
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80078ca:	68fb      	ldr	r3, [r7, #12]
 80078cc:	689b      	ldr	r3, [r3, #8]
 80078ce:	2b00      	cmp	r3, #0
 80078d0:	d10a      	bne.n	80078e8 <HAL_SPI_TransmitReceive+0x334>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80078d2:	2300      	movs	r3, #0
 80078d4:	617b      	str	r3, [r7, #20]
 80078d6:	68fb      	ldr	r3, [r7, #12]
 80078d8:	681b      	ldr	r3, [r3, #0]
 80078da:	68db      	ldr	r3, [r3, #12]
 80078dc:	617b      	str	r3, [r7, #20]
 80078de:	68fb      	ldr	r3, [r7, #12]
 80078e0:	681b      	ldr	r3, [r3, #0]
 80078e2:	689b      	ldr	r3, [r3, #8]
 80078e4:	617b      	str	r3, [r7, #20]
 80078e6:	697b      	ldr	r3, [r7, #20]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80078e8:	68fb      	ldr	r3, [r7, #12]
 80078ea:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80078ec:	2b00      	cmp	r3, #0
 80078ee:	d003      	beq.n	80078f8 <HAL_SPI_TransmitReceive+0x344>
  {
    errorcode = HAL_ERROR;
 80078f0:	2301      	movs	r3, #1
 80078f2:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80078f6:	e003      	b.n	8007900 <HAL_SPI_TransmitReceive+0x34c>
  }
  else
  {
    hspi->State = HAL_SPI_STATE_READY;
 80078f8:	68fb      	ldr	r3, [r7, #12]
 80078fa:	2201      	movs	r2, #1
 80078fc:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  }
  
error :
  __HAL_UNLOCK(hspi);
 8007900:	68fb      	ldr	r3, [r7, #12]
 8007902:	2200      	movs	r2, #0
 8007904:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 8007908:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
}
 800790c:	4618      	mov	r0, r3
 800790e:	3730      	adds	r7, #48	; 0x30
 8007910:	46bd      	mov	sp, r7
 8007912:	bd80      	pop	{r7, pc}

08007914 <HAL_SPI_Transmit_DMA>:
  * @param  pData pointer to data buffer
  * @param  Size amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
{
 8007914:	b580      	push	{r7, lr}
 8007916:	b086      	sub	sp, #24
 8007918:	af00      	add	r7, sp, #0
 800791a:	60f8      	str	r0, [r7, #12]
 800791c:	60b9      	str	r1, [r7, #8]
 800791e:	4613      	mov	r3, r2
 8007920:	80fb      	strh	r3, [r7, #6]
  HAL_StatusTypeDef errorcode = HAL_OK;
 8007922:	2300      	movs	r3, #0
 8007924:	75fb      	strb	r3, [r7, #23]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8007926:	68fb      	ldr	r3, [r7, #12]
 8007928:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 800792c:	2b01      	cmp	r3, #1
 800792e:	d101      	bne.n	8007934 <HAL_SPI_Transmit_DMA+0x20>
 8007930:	2302      	movs	r3, #2
 8007932:	e097      	b.n	8007a64 <HAL_SPI_Transmit_DMA+0x150>
 8007934:	68fb      	ldr	r3, [r7, #12]
 8007936:	2201      	movs	r2, #1
 8007938:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  if (hspi->State != HAL_SPI_STATE_READY)
 800793c:	68fb      	ldr	r3, [r7, #12]
 800793e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8007942:	b2db      	uxtb	r3, r3
 8007944:	2b01      	cmp	r3, #1
 8007946:	d002      	beq.n	800794e <HAL_SPI_Transmit_DMA+0x3a>
  {
    errorcode = HAL_BUSY;
 8007948:	2302      	movs	r3, #2
 800794a:	75fb      	strb	r3, [r7, #23]
    goto error;
 800794c:	e085      	b.n	8007a5a <HAL_SPI_Transmit_DMA+0x146>
  }

  if ((pData == NULL) || (Size == 0U))
 800794e:	68bb      	ldr	r3, [r7, #8]
 8007950:	2b00      	cmp	r3, #0
 8007952:	d002      	beq.n	800795a <HAL_SPI_Transmit_DMA+0x46>
 8007954:	88fb      	ldrh	r3, [r7, #6]
 8007956:	2b00      	cmp	r3, #0
 8007958:	d102      	bne.n	8007960 <HAL_SPI_Transmit_DMA+0x4c>
  {
    errorcode = HAL_ERROR;
 800795a:	2301      	movs	r3, #1
 800795c:	75fb      	strb	r3, [r7, #23]
    goto error;
 800795e:	e07c      	b.n	8007a5a <HAL_SPI_Transmit_DMA+0x146>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8007960:	68fb      	ldr	r3, [r7, #12]
 8007962:	2203      	movs	r2, #3
 8007964:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007968:	68fb      	ldr	r3, [r7, #12]
 800796a:	2200      	movs	r2, #0
 800796c:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800796e:	68fb      	ldr	r3, [r7, #12]
 8007970:	68ba      	ldr	r2, [r7, #8]
 8007972:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 8007974:	68fb      	ldr	r3, [r7, #12]
 8007976:	88fa      	ldrh	r2, [r7, #6]
 8007978:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 800797a:	68fb      	ldr	r3, [r7, #12]
 800797c:	88fa      	ldrh	r2, [r7, #6]
 800797e:	86da      	strh	r2, [r3, #54]	; 0x36

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8007980:	68fb      	ldr	r3, [r7, #12]
 8007982:	2200      	movs	r2, #0
 8007984:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->TxISR       = NULL;
 8007986:	68fb      	ldr	r3, [r7, #12]
 8007988:	2200      	movs	r2, #0
 800798a:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 800798c:	68fb      	ldr	r3, [r7, #12]
 800798e:	2200      	movs	r2, #0
 8007990:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->RxXferSize  = 0U;
 8007992:	68fb      	ldr	r3, [r7, #12]
 8007994:	2200      	movs	r2, #0
 8007996:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8007998:	68fb      	ldr	r3, [r7, #12]
 800799a:	2200      	movs	r2, #0
 800799c:	87da      	strh	r2, [r3, #62]	; 0x3e

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800799e:	68fb      	ldr	r3, [r7, #12]
 80079a0:	689b      	ldr	r3, [r3, #8]
 80079a2:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80079a6:	d10f      	bne.n	80079c8 <HAL_SPI_Transmit_DMA+0xb4>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 80079a8:	68fb      	ldr	r3, [r7, #12]
 80079aa:	681b      	ldr	r3, [r3, #0]
 80079ac:	681a      	ldr	r2, [r3, #0]
 80079ae:	68fb      	ldr	r3, [r7, #12]
 80079b0:	681b      	ldr	r3, [r3, #0]
 80079b2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80079b6:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 80079b8:	68fb      	ldr	r3, [r7, #12]
 80079ba:	681b      	ldr	r3, [r3, #0]
 80079bc:	681a      	ldr	r2, [r3, #0]
 80079be:	68fb      	ldr	r3, [r7, #12]
 80079c0:	681b      	ldr	r3, [r3, #0]
 80079c2:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80079c6:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 80079c8:	68fb      	ldr	r3, [r7, #12]
 80079ca:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80079cc:	4a27      	ldr	r2, [pc, #156]	; (8007a6c <HAL_SPI_Transmit_DMA+0x158>)
 80079ce:	641a      	str	r2, [r3, #64]	; 0x40

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 80079d0:	68fb      	ldr	r3, [r7, #12]
 80079d2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80079d4:	4a26      	ldr	r2, [pc, #152]	; (8007a70 <HAL_SPI_Transmit_DMA+0x15c>)
 80079d6:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 80079d8:	68fb      	ldr	r3, [r7, #12]
 80079da:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80079dc:	4a25      	ldr	r2, [pc, #148]	; (8007a74 <HAL_SPI_Transmit_DMA+0x160>)
 80079de:	64da      	str	r2, [r3, #76]	; 0x4c

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 80079e0:	68fb      	ldr	r3, [r7, #12]
 80079e2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80079e4:	2200      	movs	r2, #0
 80079e6:	651a      	str	r2, [r3, #80]	; 0x50

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 80079e8:	68fb      	ldr	r3, [r7, #12]
 80079ea:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80079ec:	68fb      	ldr	r3, [r7, #12]
 80079ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80079f0:	4619      	mov	r1, r3
 80079f2:	68fb      	ldr	r3, [r7, #12]
 80079f4:	681b      	ldr	r3, [r3, #0]
 80079f6:	330c      	adds	r3, #12
 80079f8:	461a      	mov	r2, r3
                                 hspi->TxXferCount))
 80079fa:	68fb      	ldr	r3, [r7, #12]
 80079fc:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80079fe:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 8007a00:	f7fc fd40 	bl	8004484 <HAL_DMA_Start_IT>
 8007a04:	4603      	mov	r3, r0
 8007a06:	2b00      	cmp	r3, #0
 8007a08:	d008      	beq.n	8007a1c <HAL_SPI_Transmit_DMA+0x108>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8007a0a:	68fb      	ldr	r3, [r7, #12]
 8007a0c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007a0e:	f043 0210 	orr.w	r2, r3, #16
 8007a12:	68fb      	ldr	r3, [r7, #12]
 8007a14:	655a      	str	r2, [r3, #84]	; 0x54
    errorcode = HAL_ERROR;
 8007a16:	2301      	movs	r3, #1
 8007a18:	75fb      	strb	r3, [r7, #23]

    goto error;
 8007a1a:	e01e      	b.n	8007a5a <HAL_SPI_Transmit_DMA+0x146>
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007a1c:	68fb      	ldr	r3, [r7, #12]
 8007a1e:	681b      	ldr	r3, [r3, #0]
 8007a20:	681b      	ldr	r3, [r3, #0]
 8007a22:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007a26:	2b40      	cmp	r3, #64	; 0x40
 8007a28:	d007      	beq.n	8007a3a <HAL_SPI_Transmit_DMA+0x126>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8007a2a:	68fb      	ldr	r3, [r7, #12]
 8007a2c:	681b      	ldr	r3, [r3, #0]
 8007a2e:	681a      	ldr	r2, [r3, #0]
 8007a30:	68fb      	ldr	r3, [r7, #12]
 8007a32:	681b      	ldr	r3, [r3, #0]
 8007a34:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8007a38:	601a      	str	r2, [r3, #0]
  }

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 8007a3a:	68fb      	ldr	r3, [r7, #12]
 8007a3c:	681b      	ldr	r3, [r3, #0]
 8007a3e:	685a      	ldr	r2, [r3, #4]
 8007a40:	68fb      	ldr	r3, [r7, #12]
 8007a42:	681b      	ldr	r3, [r3, #0]
 8007a44:	f042 0220 	orr.w	r2, r2, #32
 8007a48:	605a      	str	r2, [r3, #4]

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 8007a4a:	68fb      	ldr	r3, [r7, #12]
 8007a4c:	681b      	ldr	r3, [r3, #0]
 8007a4e:	685a      	ldr	r2, [r3, #4]
 8007a50:	68fb      	ldr	r3, [r7, #12]
 8007a52:	681b      	ldr	r3, [r3, #0]
 8007a54:	f042 0202 	orr.w	r2, r2, #2
 8007a58:	605a      	str	r2, [r3, #4]

error :
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8007a5a:	68fb      	ldr	r3, [r7, #12]
 8007a5c:	2200      	movs	r2, #0
 8007a5e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 8007a62:	7dfb      	ldrb	r3, [r7, #23]
}
 8007a64:	4618      	mov	r0, r3
 8007a66:	3718      	adds	r7, #24
 8007a68:	46bd      	mov	sp, r7
 8007a6a:	bd80      	pop	{r7, pc}
 8007a6c:	08007d1d 	.word	0x08007d1d
 8007a70:	08007c75 	.word	0x08007c75
 8007a74:	08007d39 	.word	0x08007d39

08007a78 <HAL_SPI_IRQHandler>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 8007a78:	b580      	push	{r7, lr}
 8007a7a:	b088      	sub	sp, #32
 8007a7c:	af00      	add	r7, sp, #0
 8007a7e:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->CR2;
 8007a80:	687b      	ldr	r3, [r7, #4]
 8007a82:	681b      	ldr	r3, [r3, #0]
 8007a84:	685b      	ldr	r3, [r3, #4]
 8007a86:	61fb      	str	r3, [r7, #28]
  uint32_t itflag   = hspi->Instance->SR;
 8007a88:	687b      	ldr	r3, [r7, #4]
 8007a8a:	681b      	ldr	r3, [r3, #0]
 8007a8c:	689b      	ldr	r3, [r3, #8]
 8007a8e:	61bb      	str	r3, [r7, #24]

  /* SPI in mode Receiver ----------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8007a90:	69bb      	ldr	r3, [r7, #24]
 8007a92:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007a96:	2b00      	cmp	r3, #0
 8007a98:	d10e      	bne.n	8007ab8 <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8007a9a:	69bb      	ldr	r3, [r7, #24]
 8007a9c:	f003 0301 	and.w	r3, r3, #1
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8007aa0:	2b00      	cmp	r3, #0
 8007aa2:	d009      	beq.n	8007ab8 <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8007aa4:	69fb      	ldr	r3, [r7, #28]
 8007aa6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007aaa:	2b00      	cmp	r3, #0
 8007aac:	d004      	beq.n	8007ab8 <HAL_SPI_IRQHandler+0x40>
  {
    hspi->RxISR(hspi);
 8007aae:	687b      	ldr	r3, [r7, #4]
 8007ab0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007ab2:	6878      	ldr	r0, [r7, #4]
 8007ab4:	4798      	blx	r3
    return;
 8007ab6:	e0ce      	b.n	8007c56 <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE) != RESET))
 8007ab8:	69bb      	ldr	r3, [r7, #24]
 8007aba:	f003 0302 	and.w	r3, r3, #2
 8007abe:	2b00      	cmp	r3, #0
 8007ac0:	d009      	beq.n	8007ad6 <HAL_SPI_IRQHandler+0x5e>
 8007ac2:	69fb      	ldr	r3, [r7, #28]
 8007ac4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007ac8:	2b00      	cmp	r3, #0
 8007aca:	d004      	beq.n	8007ad6 <HAL_SPI_IRQHandler+0x5e>
  {
    hspi->TxISR(hspi);
 8007acc:	687b      	ldr	r3, [r7, #4]
 8007ace:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007ad0:	6878      	ldr	r0, [r7, #4]
 8007ad2:	4798      	blx	r3
    return;
 8007ad4:	e0bf      	b.n	8007c56 <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8007ad6:	69bb      	ldr	r3, [r7, #24]
 8007ad8:	f003 0320 	and.w	r3, r3, #32
 8007adc:	2b00      	cmp	r3, #0
 8007ade:	d10a      	bne.n	8007af6 <HAL_SPI_IRQHandler+0x7e>
 8007ae0:	69bb      	ldr	r3, [r7, #24]
 8007ae2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007ae6:	2b00      	cmp	r3, #0
 8007ae8:	d105      	bne.n	8007af6 <HAL_SPI_IRQHandler+0x7e>
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 8007aea:	69bb      	ldr	r3, [r7, #24]
 8007aec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007af0:	2b00      	cmp	r3, #0
 8007af2:	f000 80b0 	beq.w	8007c56 <HAL_SPI_IRQHandler+0x1de>
 8007af6:	69fb      	ldr	r3, [r7, #28]
 8007af8:	f003 0320 	and.w	r3, r3, #32
 8007afc:	2b00      	cmp	r3, #0
 8007afe:	f000 80aa 	beq.w	8007c56 <HAL_SPI_IRQHandler+0x1de>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8007b02:	69bb      	ldr	r3, [r7, #24]
 8007b04:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007b08:	2b00      	cmp	r3, #0
 8007b0a:	d023      	beq.n	8007b54 <HAL_SPI_IRQHandler+0xdc>
    {
      if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 8007b0c:	687b      	ldr	r3, [r7, #4]
 8007b0e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8007b12:	b2db      	uxtb	r3, r3
 8007b14:	2b03      	cmp	r3, #3
 8007b16:	d011      	beq.n	8007b3c <HAL_SPI_IRQHandler+0xc4>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 8007b18:	687b      	ldr	r3, [r7, #4]
 8007b1a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007b1c:	f043 0204 	orr.w	r2, r3, #4
 8007b20:	687b      	ldr	r3, [r7, #4]
 8007b22:	655a      	str	r2, [r3, #84]	; 0x54
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007b24:	2300      	movs	r3, #0
 8007b26:	617b      	str	r3, [r7, #20]
 8007b28:	687b      	ldr	r3, [r7, #4]
 8007b2a:	681b      	ldr	r3, [r3, #0]
 8007b2c:	68db      	ldr	r3, [r3, #12]
 8007b2e:	617b      	str	r3, [r7, #20]
 8007b30:	687b      	ldr	r3, [r7, #4]
 8007b32:	681b      	ldr	r3, [r3, #0]
 8007b34:	689b      	ldr	r3, [r3, #8]
 8007b36:	617b      	str	r3, [r7, #20]
 8007b38:	697b      	ldr	r3, [r7, #20]
 8007b3a:	e00b      	b.n	8007b54 <HAL_SPI_IRQHandler+0xdc>
      }
      else
      {
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007b3c:	2300      	movs	r3, #0
 8007b3e:	613b      	str	r3, [r7, #16]
 8007b40:	687b      	ldr	r3, [r7, #4]
 8007b42:	681b      	ldr	r3, [r3, #0]
 8007b44:	68db      	ldr	r3, [r3, #12]
 8007b46:	613b      	str	r3, [r7, #16]
 8007b48:	687b      	ldr	r3, [r7, #4]
 8007b4a:	681b      	ldr	r3, [r3, #0]
 8007b4c:	689b      	ldr	r3, [r3, #8]
 8007b4e:	613b      	str	r3, [r7, #16]
 8007b50:	693b      	ldr	r3, [r7, #16]
        return;
 8007b52:	e080      	b.n	8007c56 <HAL_SPI_IRQHandler+0x1de>
      }
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 8007b54:	69bb      	ldr	r3, [r7, #24]
 8007b56:	f003 0320 	and.w	r3, r3, #32
 8007b5a:	2b00      	cmp	r3, #0
 8007b5c:	d014      	beq.n	8007b88 <HAL_SPI_IRQHandler+0x110>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 8007b5e:	687b      	ldr	r3, [r7, #4]
 8007b60:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007b62:	f043 0201 	orr.w	r2, r3, #1
 8007b66:	687b      	ldr	r3, [r7, #4]
 8007b68:	655a      	str	r2, [r3, #84]	; 0x54
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 8007b6a:	2300      	movs	r3, #0
 8007b6c:	60fb      	str	r3, [r7, #12]
 8007b6e:	687b      	ldr	r3, [r7, #4]
 8007b70:	681b      	ldr	r3, [r3, #0]
 8007b72:	689b      	ldr	r3, [r3, #8]
 8007b74:	60fb      	str	r3, [r7, #12]
 8007b76:	687b      	ldr	r3, [r7, #4]
 8007b78:	681b      	ldr	r3, [r3, #0]
 8007b7a:	681a      	ldr	r2, [r3, #0]
 8007b7c:	687b      	ldr	r3, [r7, #4]
 8007b7e:	681b      	ldr	r3, [r3, #0]
 8007b80:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007b84:	601a      	str	r2, [r3, #0]
 8007b86:	68fb      	ldr	r3, [r7, #12]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
 8007b88:	69bb      	ldr	r3, [r7, #24]
 8007b8a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007b8e:	2b00      	cmp	r3, #0
 8007b90:	d00c      	beq.n	8007bac <HAL_SPI_IRQHandler+0x134>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 8007b92:	687b      	ldr	r3, [r7, #4]
 8007b94:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007b96:	f043 0208 	orr.w	r2, r3, #8
 8007b9a:	687b      	ldr	r3, [r7, #4]
 8007b9c:	655a      	str	r2, [r3, #84]	; 0x54
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 8007b9e:	2300      	movs	r3, #0
 8007ba0:	60bb      	str	r3, [r7, #8]
 8007ba2:	687b      	ldr	r3, [r7, #4]
 8007ba4:	681b      	ldr	r3, [r3, #0]
 8007ba6:	689b      	ldr	r3, [r3, #8]
 8007ba8:	60bb      	str	r3, [r7, #8]
 8007baa:	68bb      	ldr	r3, [r7, #8]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007bac:	687b      	ldr	r3, [r7, #4]
 8007bae:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007bb0:	2b00      	cmp	r3, #0
 8007bb2:	d04f      	beq.n	8007c54 <HAL_SPI_IRQHandler+0x1dc>
    {
      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 8007bb4:	687b      	ldr	r3, [r7, #4]
 8007bb6:	681b      	ldr	r3, [r3, #0]
 8007bb8:	685a      	ldr	r2, [r3, #4]
 8007bba:	687b      	ldr	r3, [r7, #4]
 8007bbc:	681b      	ldr	r3, [r3, #0]
 8007bbe:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007bc2:	605a      	str	r2, [r3, #4]

      hspi->State = HAL_SPI_STATE_READY;
 8007bc4:	687b      	ldr	r3, [r7, #4]
 8007bc6:	2201      	movs	r2, #1
 8007bc8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
      /* Disable the SPI DMA requests if enabled */
      if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
 8007bcc:	69fb      	ldr	r3, [r7, #28]
 8007bce:	f003 0302 	and.w	r3, r3, #2
 8007bd2:	2b00      	cmp	r3, #0
 8007bd4:	d104      	bne.n	8007be0 <HAL_SPI_IRQHandler+0x168>
 8007bd6:	69fb      	ldr	r3, [r7, #28]
 8007bd8:	f003 0301 	and.w	r3, r3, #1
 8007bdc:	2b00      	cmp	r3, #0
 8007bde:	d034      	beq.n	8007c4a <HAL_SPI_IRQHandler+0x1d2>
      {
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 8007be0:	687b      	ldr	r3, [r7, #4]
 8007be2:	681b      	ldr	r3, [r3, #0]
 8007be4:	685a      	ldr	r2, [r3, #4]
 8007be6:	687b      	ldr	r3, [r7, #4]
 8007be8:	681b      	ldr	r3, [r3, #0]
 8007bea:	f022 0203 	bic.w	r2, r2, #3
 8007bee:	605a      	str	r2, [r3, #4]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 8007bf0:	687b      	ldr	r3, [r7, #4]
 8007bf2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007bf4:	2b00      	cmp	r3, #0
 8007bf6:	d011      	beq.n	8007c1c <HAL_SPI_IRQHandler+0x1a4>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 8007bf8:	687b      	ldr	r3, [r7, #4]
 8007bfa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007bfc:	4a17      	ldr	r2, [pc, #92]	; (8007c5c <HAL_SPI_IRQHandler+0x1e4>)
 8007bfe:	651a      	str	r2, [r3, #80]	; 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 8007c00:	687b      	ldr	r3, [r7, #4]
 8007c02:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007c04:	4618      	mov	r0, r3
 8007c06:	f7fc fc95 	bl	8004534 <HAL_DMA_Abort_IT>
 8007c0a:	4603      	mov	r3, r0
 8007c0c:	2b00      	cmp	r3, #0
 8007c0e:	d005      	beq.n	8007c1c <HAL_SPI_IRQHandler+0x1a4>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8007c10:	687b      	ldr	r3, [r7, #4]
 8007c12:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007c14:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8007c18:	687b      	ldr	r3, [r7, #4]
 8007c1a:	655a      	str	r2, [r3, #84]	; 0x54
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 8007c1c:	687b      	ldr	r3, [r7, #4]
 8007c1e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007c20:	2b00      	cmp	r3, #0
 8007c22:	d016      	beq.n	8007c52 <HAL_SPI_IRQHandler+0x1da>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 8007c24:	687b      	ldr	r3, [r7, #4]
 8007c26:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007c28:	4a0c      	ldr	r2, [pc, #48]	; (8007c5c <HAL_SPI_IRQHandler+0x1e4>)
 8007c2a:	651a      	str	r2, [r3, #80]	; 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 8007c2c:	687b      	ldr	r3, [r7, #4]
 8007c2e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007c30:	4618      	mov	r0, r3
 8007c32:	f7fc fc7f 	bl	8004534 <HAL_DMA_Abort_IT>
 8007c36:	4603      	mov	r3, r0
 8007c38:	2b00      	cmp	r3, #0
 8007c3a:	d00a      	beq.n	8007c52 <HAL_SPI_IRQHandler+0x1da>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8007c3c:	687b      	ldr	r3, [r7, #4]
 8007c3e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007c40:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8007c44:	687b      	ldr	r3, [r7, #4]
 8007c46:	655a      	str	r2, [r3, #84]	; 0x54
        if (hspi->hdmatx != NULL)
 8007c48:	e003      	b.n	8007c52 <HAL_SPI_IRQHandler+0x1da>
      {
        /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
        hspi->ErrorCallback(hspi);
#else
        HAL_SPI_ErrorCallback(hspi);
 8007c4a:	6878      	ldr	r0, [r7, #4]
 8007c4c:	f7fb fd9e 	bl	800378c <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      }
    }
    return;
 8007c50:	e000      	b.n	8007c54 <HAL_SPI_IRQHandler+0x1dc>
        if (hspi->hdmatx != NULL)
 8007c52:	bf00      	nop
    return;
 8007c54:	bf00      	nop
  }
}
 8007c56:	3720      	adds	r7, #32
 8007c58:	46bd      	mov	sp, r7
 8007c5a:	bd80      	pop	{r7, pc}
 8007c5c:	08007d79 	.word	0x08007d79

08007c60 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 8007c60:	b480      	push	{r7}
 8007c62:	b083      	sub	sp, #12
 8007c64:	af00      	add	r7, sp, #0
 8007c66:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 8007c68:	bf00      	nop
 8007c6a:	370c      	adds	r7, #12
 8007c6c:	46bd      	mov	sp, r7
 8007c6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c72:	4770      	bx	lr

08007c74 <SPI_DMATransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 8007c74:	b580      	push	{r7, lr}
 8007c76:	b086      	sub	sp, #24
 8007c78:	af00      	add	r7, sp, #0
 8007c7a:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8007c7c:	687b      	ldr	r3, [r7, #4]
 8007c7e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007c80:	617b      	str	r3, [r7, #20]
  uint32_t tickstart;

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8007c82:	f7fc f995 	bl	8003fb0 <HAL_GetTick>
 8007c86:	6138      	str	r0, [r7, #16]

  /* DMA Normal Mode */
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 8007c88:	687b      	ldr	r3, [r7, #4]
 8007c8a:	681b      	ldr	r3, [r3, #0]
 8007c8c:	681b      	ldr	r3, [r3, #0]
 8007c8e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007c92:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007c96:	d03b      	beq.n	8007d10 <SPI_DMATransmitCplt+0x9c>
  {
    /* Disable ERR interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 8007c98:	697b      	ldr	r3, [r7, #20]
 8007c9a:	681b      	ldr	r3, [r3, #0]
 8007c9c:	685a      	ldr	r2, [r3, #4]
 8007c9e:	697b      	ldr	r3, [r7, #20]
 8007ca0:	681b      	ldr	r3, [r3, #0]
 8007ca2:	f022 0220 	bic.w	r2, r2, #32
 8007ca6:	605a      	str	r2, [r3, #4]

    /* Disable Tx DMA Request */
    CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 8007ca8:	697b      	ldr	r3, [r7, #20]
 8007caa:	681b      	ldr	r3, [r3, #0]
 8007cac:	685a      	ldr	r2, [r3, #4]
 8007cae:	697b      	ldr	r3, [r7, #20]
 8007cb0:	681b      	ldr	r3, [r3, #0]
 8007cb2:	f022 0202 	bic.w	r2, r2, #2
 8007cb6:	605a      	str	r2, [r3, #4]

    /* Check the end of the transaction */
    if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 8007cb8:	693a      	ldr	r2, [r7, #16]
 8007cba:	2164      	movs	r1, #100	; 0x64
 8007cbc:	6978      	ldr	r0, [r7, #20]
 8007cbe:	f000 f95d 	bl	8007f7c <SPI_EndRxTxTransaction>
 8007cc2:	4603      	mov	r3, r0
 8007cc4:	2b00      	cmp	r3, #0
 8007cc6:	d005      	beq.n	8007cd4 <SPI_DMATransmitCplt+0x60>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007cc8:	697b      	ldr	r3, [r7, #20]
 8007cca:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007ccc:	f043 0220 	orr.w	r2, r3, #32
 8007cd0:	697b      	ldr	r3, [r7, #20]
 8007cd2:	655a      	str	r2, [r3, #84]	; 0x54
    }

    /* Clear overrun flag in 2 Lines communication mode because received data is not read */
    if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007cd4:	697b      	ldr	r3, [r7, #20]
 8007cd6:	689b      	ldr	r3, [r3, #8]
 8007cd8:	2b00      	cmp	r3, #0
 8007cda:	d10a      	bne.n	8007cf2 <SPI_DMATransmitCplt+0x7e>
    {
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007cdc:	2300      	movs	r3, #0
 8007cde:	60fb      	str	r3, [r7, #12]
 8007ce0:	697b      	ldr	r3, [r7, #20]
 8007ce2:	681b      	ldr	r3, [r3, #0]
 8007ce4:	68db      	ldr	r3, [r3, #12]
 8007ce6:	60fb      	str	r3, [r7, #12]
 8007ce8:	697b      	ldr	r3, [r7, #20]
 8007cea:	681b      	ldr	r3, [r3, #0]
 8007cec:	689b      	ldr	r3, [r3, #8]
 8007cee:	60fb      	str	r3, [r7, #12]
 8007cf0:	68fb      	ldr	r3, [r7, #12]
    }

    hspi->TxXferCount = 0U;
 8007cf2:	697b      	ldr	r3, [r7, #20]
 8007cf4:	2200      	movs	r2, #0
 8007cf6:	86da      	strh	r2, [r3, #54]	; 0x36
    hspi->State = HAL_SPI_STATE_READY;
 8007cf8:	697b      	ldr	r3, [r7, #20]
 8007cfa:	2201      	movs	r2, #1
 8007cfc:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007d00:	697b      	ldr	r3, [r7, #20]
 8007d02:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007d04:	2b00      	cmp	r3, #0
 8007d06:	d003      	beq.n	8007d10 <SPI_DMATransmitCplt+0x9c>
    {
      /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 8007d08:	6978      	ldr	r0, [r7, #20]
 8007d0a:	f7fb fd3f 	bl	800378c <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 8007d0e:	e002      	b.n	8007d16 <SPI_DMATransmitCplt+0xa2>
  }
  /* Call user Tx complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxCpltCallback(hspi);
#else
  HAL_SPI_TxCpltCallback(hspi);
 8007d10:	6978      	ldr	r0, [r7, #20]
 8007d12:	f7fb fd51 	bl	80037b8 <HAL_SPI_TxCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8007d16:	3718      	adds	r7, #24
 8007d18:	46bd      	mov	sp, r7
 8007d1a:	bd80      	pop	{r7, pc}

08007d1c <SPI_DMAHalfTransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
{
 8007d1c:	b580      	push	{r7, lr}
 8007d1e:	b084      	sub	sp, #16
 8007d20:	af00      	add	r7, sp, #0
 8007d22:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8007d24:	687b      	ldr	r3, [r7, #4]
 8007d26:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007d28:	60fb      	str	r3, [r7, #12]

  /* Call user Tx half complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 8007d2a:	68f8      	ldr	r0, [r7, #12]
 8007d2c:	f7ff ff98 	bl	8007c60 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8007d30:	bf00      	nop
 8007d32:	3710      	adds	r7, #16
 8007d34:	46bd      	mov	sp, r7
 8007d36:	bd80      	pop	{r7, pc}

08007d38 <SPI_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 8007d38:	b580      	push	{r7, lr}
 8007d3a:	b084      	sub	sp, #16
 8007d3c:	af00      	add	r7, sp, #0
 8007d3e:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8007d40:	687b      	ldr	r3, [r7, #4]
 8007d42:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007d44:	60fb      	str	r3, [r7, #12]

  /* Stop the disable DMA transfer on SPI side */
  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 8007d46:	68fb      	ldr	r3, [r7, #12]
 8007d48:	681b      	ldr	r3, [r3, #0]
 8007d4a:	685a      	ldr	r2, [r3, #4]
 8007d4c:	68fb      	ldr	r3, [r7, #12]
 8007d4e:	681b      	ldr	r3, [r3, #0]
 8007d50:	f022 0203 	bic.w	r2, r2, #3
 8007d54:	605a      	str	r2, [r3, #4]

  SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8007d56:	68fb      	ldr	r3, [r7, #12]
 8007d58:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007d5a:	f043 0210 	orr.w	r2, r3, #16
 8007d5e:	68fb      	ldr	r3, [r7, #12]
 8007d60:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State = HAL_SPI_STATE_READY;
 8007d62:	68fb      	ldr	r3, [r7, #12]
 8007d64:	2201      	movs	r2, #1
 8007d66:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8007d6a:	68f8      	ldr	r0, [r7, #12]
 8007d6c:	f7fb fd0e 	bl	800378c <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8007d70:	bf00      	nop
 8007d72:	3710      	adds	r7, #16
 8007d74:	46bd      	mov	sp, r7
 8007d76:	bd80      	pop	{r7, pc}

08007d78 <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8007d78:	b580      	push	{r7, lr}
 8007d7a:	b084      	sub	sp, #16
 8007d7c:	af00      	add	r7, sp, #0
 8007d7e:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8007d80:	687b      	ldr	r3, [r7, #4]
 8007d82:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007d84:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = 0U;
 8007d86:	68fb      	ldr	r3, [r7, #12]
 8007d88:	2200      	movs	r2, #0
 8007d8a:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 8007d8c:	68fb      	ldr	r3, [r7, #12]
 8007d8e:	2200      	movs	r2, #0
 8007d90:	86da      	strh	r2, [r3, #54]	; 0x36

  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8007d92:	68f8      	ldr	r0, [r7, #12]
 8007d94:	f7fb fcfa 	bl	800378c <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8007d98:	bf00      	nop
 8007d9a:	3710      	adds	r7, #16
 8007d9c:	46bd      	mov	sp, r7
 8007d9e:	bd80      	pop	{r7, pc}

08007da0 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8007da0:	b580      	push	{r7, lr}
 8007da2:	b088      	sub	sp, #32
 8007da4:	af00      	add	r7, sp, #0
 8007da6:	60f8      	str	r0, [r7, #12]
 8007da8:	60b9      	str	r1, [r7, #8]
 8007daa:	603b      	str	r3, [r7, #0]
 8007dac:	4613      	mov	r3, r2
 8007dae:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8007db0:	f7fc f8fe 	bl	8003fb0 <HAL_GetTick>
 8007db4:	4602      	mov	r2, r0
 8007db6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007db8:	1a9b      	subs	r3, r3, r2
 8007dba:	683a      	ldr	r2, [r7, #0]
 8007dbc:	4413      	add	r3, r2
 8007dbe:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8007dc0:	f7fc f8f6 	bl	8003fb0 <HAL_GetTick>
 8007dc4:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8007dc6:	4b39      	ldr	r3, [pc, #228]	; (8007eac <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8007dc8:	681b      	ldr	r3, [r3, #0]
 8007dca:	015b      	lsls	r3, r3, #5
 8007dcc:	0d1b      	lsrs	r3, r3, #20
 8007dce:	69fa      	ldr	r2, [r7, #28]
 8007dd0:	fb02 f303 	mul.w	r3, r2, r3
 8007dd4:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007dd6:	e054      	b.n	8007e82 <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 8007dd8:	683b      	ldr	r3, [r7, #0]
 8007dda:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007dde:	d050      	beq.n	8007e82 <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8007de0:	f7fc f8e6 	bl	8003fb0 <HAL_GetTick>
 8007de4:	4602      	mov	r2, r0
 8007de6:	69bb      	ldr	r3, [r7, #24]
 8007de8:	1ad3      	subs	r3, r2, r3
 8007dea:	69fa      	ldr	r2, [r7, #28]
 8007dec:	429a      	cmp	r2, r3
 8007dee:	d902      	bls.n	8007df6 <SPI_WaitFlagStateUntilTimeout+0x56>
 8007df0:	69fb      	ldr	r3, [r7, #28]
 8007df2:	2b00      	cmp	r3, #0
 8007df4:	d13d      	bne.n	8007e72 <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8007df6:	68fb      	ldr	r3, [r7, #12]
 8007df8:	681b      	ldr	r3, [r3, #0]
 8007dfa:	685a      	ldr	r2, [r3, #4]
 8007dfc:	68fb      	ldr	r3, [r7, #12]
 8007dfe:	681b      	ldr	r3, [r3, #0]
 8007e00:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007e04:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007e06:	68fb      	ldr	r3, [r7, #12]
 8007e08:	685b      	ldr	r3, [r3, #4]
 8007e0a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007e0e:	d111      	bne.n	8007e34 <SPI_WaitFlagStateUntilTimeout+0x94>
 8007e10:	68fb      	ldr	r3, [r7, #12]
 8007e12:	689b      	ldr	r3, [r3, #8]
 8007e14:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007e18:	d004      	beq.n	8007e24 <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007e1a:	68fb      	ldr	r3, [r7, #12]
 8007e1c:	689b      	ldr	r3, [r3, #8]
 8007e1e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007e22:	d107      	bne.n	8007e34 <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8007e24:	68fb      	ldr	r3, [r7, #12]
 8007e26:	681b      	ldr	r3, [r3, #0]
 8007e28:	681a      	ldr	r2, [r3, #0]
 8007e2a:	68fb      	ldr	r3, [r7, #12]
 8007e2c:	681b      	ldr	r3, [r3, #0]
 8007e2e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007e32:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007e34:	68fb      	ldr	r3, [r7, #12]
 8007e36:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007e38:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007e3c:	d10f      	bne.n	8007e5e <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 8007e3e:	68fb      	ldr	r3, [r7, #12]
 8007e40:	681b      	ldr	r3, [r3, #0]
 8007e42:	681a      	ldr	r2, [r3, #0]
 8007e44:	68fb      	ldr	r3, [r7, #12]
 8007e46:	681b      	ldr	r3, [r3, #0]
 8007e48:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007e4c:	601a      	str	r2, [r3, #0]
 8007e4e:	68fb      	ldr	r3, [r7, #12]
 8007e50:	681b      	ldr	r3, [r3, #0]
 8007e52:	681a      	ldr	r2, [r3, #0]
 8007e54:	68fb      	ldr	r3, [r7, #12]
 8007e56:	681b      	ldr	r3, [r3, #0]
 8007e58:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007e5c:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8007e5e:	68fb      	ldr	r3, [r7, #12]
 8007e60:	2201      	movs	r2, #1
 8007e62:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8007e66:	68fb      	ldr	r3, [r7, #12]
 8007e68:	2200      	movs	r2, #0
 8007e6a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

        return HAL_TIMEOUT;
 8007e6e:	2303      	movs	r3, #3
 8007e70:	e017      	b.n	8007ea2 <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8007e72:	697b      	ldr	r3, [r7, #20]
 8007e74:	2b00      	cmp	r3, #0
 8007e76:	d101      	bne.n	8007e7c <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 8007e78:	2300      	movs	r3, #0
 8007e7a:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8007e7c:	697b      	ldr	r3, [r7, #20]
 8007e7e:	3b01      	subs	r3, #1
 8007e80:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007e82:	68fb      	ldr	r3, [r7, #12]
 8007e84:	681b      	ldr	r3, [r3, #0]
 8007e86:	689a      	ldr	r2, [r3, #8]
 8007e88:	68bb      	ldr	r3, [r7, #8]
 8007e8a:	4013      	ands	r3, r2
 8007e8c:	68ba      	ldr	r2, [r7, #8]
 8007e8e:	429a      	cmp	r2, r3
 8007e90:	bf0c      	ite	eq
 8007e92:	2301      	moveq	r3, #1
 8007e94:	2300      	movne	r3, #0
 8007e96:	b2db      	uxtb	r3, r3
 8007e98:	461a      	mov	r2, r3
 8007e9a:	79fb      	ldrb	r3, [r7, #7]
 8007e9c:	429a      	cmp	r2, r3
 8007e9e:	d19b      	bne.n	8007dd8 <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8007ea0:	2300      	movs	r3, #0
}
 8007ea2:	4618      	mov	r0, r3
 8007ea4:	3720      	adds	r7, #32
 8007ea6:	46bd      	mov	sp, r7
 8007ea8:	bd80      	pop	{r7, pc}
 8007eaa:	bf00      	nop
 8007eac:	20000004 	.word	0x20000004

08007eb0 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8007eb0:	b580      	push	{r7, lr}
 8007eb2:	b086      	sub	sp, #24
 8007eb4:	af02      	add	r7, sp, #8
 8007eb6:	60f8      	str	r0, [r7, #12]
 8007eb8:	60b9      	str	r1, [r7, #8]
 8007eba:	607a      	str	r2, [r7, #4]
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007ebc:	68fb      	ldr	r3, [r7, #12]
 8007ebe:	685b      	ldr	r3, [r3, #4]
 8007ec0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007ec4:	d111      	bne.n	8007eea <SPI_EndRxTransaction+0x3a>
 8007ec6:	68fb      	ldr	r3, [r7, #12]
 8007ec8:	689b      	ldr	r3, [r3, #8]
 8007eca:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007ece:	d004      	beq.n	8007eda <SPI_EndRxTransaction+0x2a>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007ed0:	68fb      	ldr	r3, [r7, #12]
 8007ed2:	689b      	ldr	r3, [r3, #8]
 8007ed4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007ed8:	d107      	bne.n	8007eea <SPI_EndRxTransaction+0x3a>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8007eda:	68fb      	ldr	r3, [r7, #12]
 8007edc:	681b      	ldr	r3, [r3, #0]
 8007ede:	681a      	ldr	r2, [r3, #0]
 8007ee0:	68fb      	ldr	r3, [r7, #12]
 8007ee2:	681b      	ldr	r3, [r3, #0]
 8007ee4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007ee8:	601a      	str	r2, [r3, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007eea:	68fb      	ldr	r3, [r7, #12]
 8007eec:	685b      	ldr	r3, [r3, #4]
 8007eee:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007ef2:	d12a      	bne.n	8007f4a <SPI_EndRxTransaction+0x9a>
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007ef4:	68fb      	ldr	r3, [r7, #12]
 8007ef6:	689b      	ldr	r3, [r3, #8]
 8007ef8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007efc:	d012      	beq.n	8007f24 <SPI_EndRxTransaction+0x74>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007efe:	687b      	ldr	r3, [r7, #4]
 8007f00:	9300      	str	r3, [sp, #0]
 8007f02:	68bb      	ldr	r3, [r7, #8]
 8007f04:	2200      	movs	r2, #0
 8007f06:	2180      	movs	r1, #128	; 0x80
 8007f08:	68f8      	ldr	r0, [r7, #12]
 8007f0a:	f7ff ff49 	bl	8007da0 <SPI_WaitFlagStateUntilTimeout>
 8007f0e:	4603      	mov	r3, r0
 8007f10:	2b00      	cmp	r3, #0
 8007f12:	d02d      	beq.n	8007f70 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007f14:	68fb      	ldr	r3, [r7, #12]
 8007f16:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007f18:	f043 0220 	orr.w	r2, r3, #32
 8007f1c:	68fb      	ldr	r3, [r7, #12]
 8007f1e:	655a      	str	r2, [r3, #84]	; 0x54
        return HAL_TIMEOUT;
 8007f20:	2303      	movs	r3, #3
 8007f22:	e026      	b.n	8007f72 <SPI_EndRxTransaction+0xc2>
      }
    }
    else
    {
      /* Wait the RXNE reset */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007f24:	687b      	ldr	r3, [r7, #4]
 8007f26:	9300      	str	r3, [sp, #0]
 8007f28:	68bb      	ldr	r3, [r7, #8]
 8007f2a:	2200      	movs	r2, #0
 8007f2c:	2101      	movs	r1, #1
 8007f2e:	68f8      	ldr	r0, [r7, #12]
 8007f30:	f7ff ff36 	bl	8007da0 <SPI_WaitFlagStateUntilTimeout>
 8007f34:	4603      	mov	r3, r0
 8007f36:	2b00      	cmp	r3, #0
 8007f38:	d01a      	beq.n	8007f70 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007f3a:	68fb      	ldr	r3, [r7, #12]
 8007f3c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007f3e:	f043 0220 	orr.w	r2, r3, #32
 8007f42:	68fb      	ldr	r3, [r7, #12]
 8007f44:	655a      	str	r2, [r3, #84]	; 0x54
        return HAL_TIMEOUT;
 8007f46:	2303      	movs	r3, #3
 8007f48:	e013      	b.n	8007f72 <SPI_EndRxTransaction+0xc2>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007f4a:	687b      	ldr	r3, [r7, #4]
 8007f4c:	9300      	str	r3, [sp, #0]
 8007f4e:	68bb      	ldr	r3, [r7, #8]
 8007f50:	2200      	movs	r2, #0
 8007f52:	2101      	movs	r1, #1
 8007f54:	68f8      	ldr	r0, [r7, #12]
 8007f56:	f7ff ff23 	bl	8007da0 <SPI_WaitFlagStateUntilTimeout>
 8007f5a:	4603      	mov	r3, r0
 8007f5c:	2b00      	cmp	r3, #0
 8007f5e:	d007      	beq.n	8007f70 <SPI_EndRxTransaction+0xc0>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007f60:	68fb      	ldr	r3, [r7, #12]
 8007f62:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007f64:	f043 0220 	orr.w	r2, r3, #32
 8007f68:	68fb      	ldr	r3, [r7, #12]
 8007f6a:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 8007f6c:	2303      	movs	r3, #3
 8007f6e:	e000      	b.n	8007f72 <SPI_EndRxTransaction+0xc2>
    }
  }
  return HAL_OK;
 8007f70:	2300      	movs	r3, #0
}
 8007f72:	4618      	mov	r0, r3
 8007f74:	3710      	adds	r7, #16
 8007f76:	46bd      	mov	sp, r7
 8007f78:	bd80      	pop	{r7, pc}
	...

08007f7c <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8007f7c:	b580      	push	{r7, lr}
 8007f7e:	b088      	sub	sp, #32
 8007f80:	af02      	add	r7, sp, #8
 8007f82:	60f8      	str	r0, [r7, #12]
 8007f84:	60b9      	str	r1, [r7, #8]
 8007f86:	607a      	str	r2, [r7, #4]
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8007f88:	687b      	ldr	r3, [r7, #4]
 8007f8a:	9300      	str	r3, [sp, #0]
 8007f8c:	68bb      	ldr	r3, [r7, #8]
 8007f8e:	2201      	movs	r2, #1
 8007f90:	2102      	movs	r1, #2
 8007f92:	68f8      	ldr	r0, [r7, #12]
 8007f94:	f7ff ff04 	bl	8007da0 <SPI_WaitFlagStateUntilTimeout>
 8007f98:	4603      	mov	r3, r0
 8007f9a:	2b00      	cmp	r3, #0
 8007f9c:	d007      	beq.n	8007fae <SPI_EndRxTxTransaction+0x32>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007f9e:	68fb      	ldr	r3, [r7, #12]
 8007fa0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007fa2:	f043 0220 	orr.w	r2, r3, #32
 8007fa6:	68fb      	ldr	r3, [r7, #12]
 8007fa8:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_TIMEOUT;
 8007faa:	2303      	movs	r3, #3
 8007fac:	e032      	b.n	8008014 <SPI_EndRxTxTransaction+0x98>
  }

  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007fae:	4b1b      	ldr	r3, [pc, #108]	; (800801c <SPI_EndRxTxTransaction+0xa0>)
 8007fb0:	681b      	ldr	r3, [r3, #0]
 8007fb2:	4a1b      	ldr	r2, [pc, #108]	; (8008020 <SPI_EndRxTxTransaction+0xa4>)
 8007fb4:	fba2 2303 	umull	r2, r3, r2, r3
 8007fb8:	0d5b      	lsrs	r3, r3, #21
 8007fba:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8007fbe:	fb02 f303 	mul.w	r3, r2, r3
 8007fc2:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007fc4:	68fb      	ldr	r3, [r7, #12]
 8007fc6:	685b      	ldr	r3, [r3, #4]
 8007fc8:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007fcc:	d112      	bne.n	8007ff4 <SPI_EndRxTxTransaction+0x78>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007fce:	687b      	ldr	r3, [r7, #4]
 8007fd0:	9300      	str	r3, [sp, #0]
 8007fd2:	68bb      	ldr	r3, [r7, #8]
 8007fd4:	2200      	movs	r2, #0
 8007fd6:	2180      	movs	r1, #128	; 0x80
 8007fd8:	68f8      	ldr	r0, [r7, #12]
 8007fda:	f7ff fee1 	bl	8007da0 <SPI_WaitFlagStateUntilTimeout>
 8007fde:	4603      	mov	r3, r0
 8007fe0:	2b00      	cmp	r3, #0
 8007fe2:	d016      	beq.n	8008012 <SPI_EndRxTxTransaction+0x96>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007fe4:	68fb      	ldr	r3, [r7, #12]
 8007fe6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007fe8:	f043 0220 	orr.w	r2, r3, #32
 8007fec:	68fb      	ldr	r3, [r7, #12]
 8007fee:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 8007ff0:	2303      	movs	r3, #3
 8007ff2:	e00f      	b.n	8008014 <SPI_EndRxTxTransaction+0x98>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 8007ff4:	697b      	ldr	r3, [r7, #20]
 8007ff6:	2b00      	cmp	r3, #0
 8007ff8:	d00a      	beq.n	8008010 <SPI_EndRxTxTransaction+0x94>
      {
        break;
      }
      count--;
 8007ffa:	697b      	ldr	r3, [r7, #20]
 8007ffc:	3b01      	subs	r3, #1
 8007ffe:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8008000:	68fb      	ldr	r3, [r7, #12]
 8008002:	681b      	ldr	r3, [r3, #0]
 8008004:	689b      	ldr	r3, [r3, #8]
 8008006:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800800a:	2b80      	cmp	r3, #128	; 0x80
 800800c:	d0f2      	beq.n	8007ff4 <SPI_EndRxTxTransaction+0x78>
 800800e:	e000      	b.n	8008012 <SPI_EndRxTxTransaction+0x96>
        break;
 8008010:	bf00      	nop
  }

  return HAL_OK;
 8008012:	2300      	movs	r3, #0
}
 8008014:	4618      	mov	r0, r3
 8008016:	3718      	adds	r7, #24
 8008018:	46bd      	mov	sp, r7
 800801a:	bd80      	pop	{r7, pc}
 800801c:	20000004 	.word	0x20000004
 8008020:	165e9f81 	.word	0x165e9f81

08008024 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8008024:	b580      	push	{r7, lr}
 8008026:	b082      	sub	sp, #8
 8008028:	af00      	add	r7, sp, #0
 800802a:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800802c:	687b      	ldr	r3, [r7, #4]
 800802e:	2b00      	cmp	r3, #0
 8008030:	d101      	bne.n	8008036 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8008032:	2301      	movs	r3, #1
 8008034:	e041      	b.n	80080ba <HAL_TIM_Base_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8008036:	687b      	ldr	r3, [r7, #4]
 8008038:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800803c:	b2db      	uxtb	r3, r3
 800803e:	2b00      	cmp	r3, #0
 8008040:	d106      	bne.n	8008050 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8008042:	687b      	ldr	r3, [r7, #4]
 8008044:	2200      	movs	r2, #0
 8008046:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 800804a:	6878      	ldr	r0, [r7, #4]
 800804c:	f7fa ff88 	bl	8002f60 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008050:	687b      	ldr	r3, [r7, #4]
 8008052:	2202      	movs	r2, #2
 8008054:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008058:	687b      	ldr	r3, [r7, #4]
 800805a:	681a      	ldr	r2, [r3, #0]
 800805c:	687b      	ldr	r3, [r7, #4]
 800805e:	3304      	adds	r3, #4
 8008060:	4619      	mov	r1, r3
 8008062:	4610      	mov	r0, r2
 8008064:	f000 fce2 	bl	8008a2c <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8008068:	687b      	ldr	r3, [r7, #4]
 800806a:	2201      	movs	r2, #1
 800806c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8008070:	687b      	ldr	r3, [r7, #4]
 8008072:	2201      	movs	r2, #1
 8008074:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008078:	687b      	ldr	r3, [r7, #4]
 800807a:	2201      	movs	r2, #1
 800807c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8008080:	687b      	ldr	r3, [r7, #4]
 8008082:	2201      	movs	r2, #1
 8008084:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008088:	687b      	ldr	r3, [r7, #4]
 800808a:	2201      	movs	r2, #1
 800808c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8008090:	687b      	ldr	r3, [r7, #4]
 8008092:	2201      	movs	r2, #1
 8008094:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8008098:	687b      	ldr	r3, [r7, #4]
 800809a:	2201      	movs	r2, #1
 800809c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80080a0:	687b      	ldr	r3, [r7, #4]
 80080a2:	2201      	movs	r2, #1
 80080a4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80080a8:	687b      	ldr	r3, [r7, #4]
 80080aa:	2201      	movs	r2, #1
 80080ac:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 80080b0:	687b      	ldr	r3, [r7, #4]
 80080b2:	2201      	movs	r2, #1
 80080b4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 80080b8:	2300      	movs	r3, #0
}
 80080ba:	4618      	mov	r0, r3
 80080bc:	3708      	adds	r7, #8
 80080be:	46bd      	mov	sp, r7
 80080c0:	bd80      	pop	{r7, pc}
	...

080080c4 <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 80080c4:	b480      	push	{r7}
 80080c6:	b085      	sub	sp, #20
 80080c8:	af00      	add	r7, sp, #0
 80080ca:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80080cc:	687b      	ldr	r3, [r7, #4]
 80080ce:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80080d2:	b2db      	uxtb	r3, r3
 80080d4:	2b01      	cmp	r3, #1
 80080d6:	d001      	beq.n	80080dc <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 80080d8:	2301      	movs	r3, #1
 80080da:	e044      	b.n	8008166 <HAL_TIM_Base_Start_IT+0xa2>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80080dc:	687b      	ldr	r3, [r7, #4]
 80080de:	2202      	movs	r2, #2
 80080e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80080e4:	687b      	ldr	r3, [r7, #4]
 80080e6:	681b      	ldr	r3, [r3, #0]
 80080e8:	68da      	ldr	r2, [r3, #12]
 80080ea:	687b      	ldr	r3, [r7, #4]
 80080ec:	681b      	ldr	r3, [r3, #0]
 80080ee:	f042 0201 	orr.w	r2, r2, #1
 80080f2:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80080f4:	687b      	ldr	r3, [r7, #4]
 80080f6:	681b      	ldr	r3, [r3, #0]
 80080f8:	4a1e      	ldr	r2, [pc, #120]	; (8008174 <HAL_TIM_Base_Start_IT+0xb0>)
 80080fa:	4293      	cmp	r3, r2
 80080fc:	d018      	beq.n	8008130 <HAL_TIM_Base_Start_IT+0x6c>
 80080fe:	687b      	ldr	r3, [r7, #4]
 8008100:	681b      	ldr	r3, [r3, #0]
 8008102:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008106:	d013      	beq.n	8008130 <HAL_TIM_Base_Start_IT+0x6c>
 8008108:	687b      	ldr	r3, [r7, #4]
 800810a:	681b      	ldr	r3, [r3, #0]
 800810c:	4a1a      	ldr	r2, [pc, #104]	; (8008178 <HAL_TIM_Base_Start_IT+0xb4>)
 800810e:	4293      	cmp	r3, r2
 8008110:	d00e      	beq.n	8008130 <HAL_TIM_Base_Start_IT+0x6c>
 8008112:	687b      	ldr	r3, [r7, #4]
 8008114:	681b      	ldr	r3, [r3, #0]
 8008116:	4a19      	ldr	r2, [pc, #100]	; (800817c <HAL_TIM_Base_Start_IT+0xb8>)
 8008118:	4293      	cmp	r3, r2
 800811a:	d009      	beq.n	8008130 <HAL_TIM_Base_Start_IT+0x6c>
 800811c:	687b      	ldr	r3, [r7, #4]
 800811e:	681b      	ldr	r3, [r3, #0]
 8008120:	4a17      	ldr	r2, [pc, #92]	; (8008180 <HAL_TIM_Base_Start_IT+0xbc>)
 8008122:	4293      	cmp	r3, r2
 8008124:	d004      	beq.n	8008130 <HAL_TIM_Base_Start_IT+0x6c>
 8008126:	687b      	ldr	r3, [r7, #4]
 8008128:	681b      	ldr	r3, [r3, #0]
 800812a:	4a16      	ldr	r2, [pc, #88]	; (8008184 <HAL_TIM_Base_Start_IT+0xc0>)
 800812c:	4293      	cmp	r3, r2
 800812e:	d111      	bne.n	8008154 <HAL_TIM_Base_Start_IT+0x90>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008130:	687b      	ldr	r3, [r7, #4]
 8008132:	681b      	ldr	r3, [r3, #0]
 8008134:	689b      	ldr	r3, [r3, #8]
 8008136:	f003 0307 	and.w	r3, r3, #7
 800813a:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800813c:	68fb      	ldr	r3, [r7, #12]
 800813e:	2b06      	cmp	r3, #6
 8008140:	d010      	beq.n	8008164 <HAL_TIM_Base_Start_IT+0xa0>
    {
      __HAL_TIM_ENABLE(htim);
 8008142:	687b      	ldr	r3, [r7, #4]
 8008144:	681b      	ldr	r3, [r3, #0]
 8008146:	681a      	ldr	r2, [r3, #0]
 8008148:	687b      	ldr	r3, [r7, #4]
 800814a:	681b      	ldr	r3, [r3, #0]
 800814c:	f042 0201 	orr.w	r2, r2, #1
 8008150:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8008152:	e007      	b.n	8008164 <HAL_TIM_Base_Start_IT+0xa0>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8008154:	687b      	ldr	r3, [r7, #4]
 8008156:	681b      	ldr	r3, [r3, #0]
 8008158:	681a      	ldr	r2, [r3, #0]
 800815a:	687b      	ldr	r3, [r7, #4]
 800815c:	681b      	ldr	r3, [r3, #0]
 800815e:	f042 0201 	orr.w	r2, r2, #1
 8008162:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8008164:	2300      	movs	r3, #0
}
 8008166:	4618      	mov	r0, r3
 8008168:	3714      	adds	r7, #20
 800816a:	46bd      	mov	sp, r7
 800816c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008170:	4770      	bx	lr
 8008172:	bf00      	nop
 8008174:	40010000 	.word	0x40010000
 8008178:	40000400 	.word	0x40000400
 800817c:	40000800 	.word	0x40000800
 8008180:	40000c00 	.word	0x40000c00
 8008184:	40014000 	.word	0x40014000

08008188 <HAL_TIM_OC_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_OC_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8008188:	b580      	push	{r7, lr}
 800818a:	b084      	sub	sp, #16
 800818c:	af00      	add	r7, sp, #0
 800818e:	6078      	str	r0, [r7, #4]
 8008190:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 8008192:	683b      	ldr	r3, [r7, #0]
 8008194:	2b00      	cmp	r3, #0
 8008196:	d109      	bne.n	80081ac <HAL_TIM_OC_Start+0x24>
 8008198:	687b      	ldr	r3, [r7, #4]
 800819a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800819e:	b2db      	uxtb	r3, r3
 80081a0:	2b01      	cmp	r3, #1
 80081a2:	bf14      	ite	ne
 80081a4:	2301      	movne	r3, #1
 80081a6:	2300      	moveq	r3, #0
 80081a8:	b2db      	uxtb	r3, r3
 80081aa:	e022      	b.n	80081f2 <HAL_TIM_OC_Start+0x6a>
 80081ac:	683b      	ldr	r3, [r7, #0]
 80081ae:	2b04      	cmp	r3, #4
 80081b0:	d109      	bne.n	80081c6 <HAL_TIM_OC_Start+0x3e>
 80081b2:	687b      	ldr	r3, [r7, #4]
 80081b4:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 80081b8:	b2db      	uxtb	r3, r3
 80081ba:	2b01      	cmp	r3, #1
 80081bc:	bf14      	ite	ne
 80081be:	2301      	movne	r3, #1
 80081c0:	2300      	moveq	r3, #0
 80081c2:	b2db      	uxtb	r3, r3
 80081c4:	e015      	b.n	80081f2 <HAL_TIM_OC_Start+0x6a>
 80081c6:	683b      	ldr	r3, [r7, #0]
 80081c8:	2b08      	cmp	r3, #8
 80081ca:	d109      	bne.n	80081e0 <HAL_TIM_OC_Start+0x58>
 80081cc:	687b      	ldr	r3, [r7, #4]
 80081ce:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80081d2:	b2db      	uxtb	r3, r3
 80081d4:	2b01      	cmp	r3, #1
 80081d6:	bf14      	ite	ne
 80081d8:	2301      	movne	r3, #1
 80081da:	2300      	moveq	r3, #0
 80081dc:	b2db      	uxtb	r3, r3
 80081de:	e008      	b.n	80081f2 <HAL_TIM_OC_Start+0x6a>
 80081e0:	687b      	ldr	r3, [r7, #4]
 80081e2:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80081e6:	b2db      	uxtb	r3, r3
 80081e8:	2b01      	cmp	r3, #1
 80081ea:	bf14      	ite	ne
 80081ec:	2301      	movne	r3, #1
 80081ee:	2300      	moveq	r3, #0
 80081f0:	b2db      	uxtb	r3, r3
 80081f2:	2b00      	cmp	r3, #0
 80081f4:	d001      	beq.n	80081fa <HAL_TIM_OC_Start+0x72>
  {
    return HAL_ERROR;
 80081f6:	2301      	movs	r3, #1
 80081f8:	e068      	b.n	80082cc <HAL_TIM_OC_Start+0x144>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 80081fa:	683b      	ldr	r3, [r7, #0]
 80081fc:	2b00      	cmp	r3, #0
 80081fe:	d104      	bne.n	800820a <HAL_TIM_OC_Start+0x82>
 8008200:	687b      	ldr	r3, [r7, #4]
 8008202:	2202      	movs	r2, #2
 8008204:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008208:	e013      	b.n	8008232 <HAL_TIM_OC_Start+0xaa>
 800820a:	683b      	ldr	r3, [r7, #0]
 800820c:	2b04      	cmp	r3, #4
 800820e:	d104      	bne.n	800821a <HAL_TIM_OC_Start+0x92>
 8008210:	687b      	ldr	r3, [r7, #4]
 8008212:	2202      	movs	r2, #2
 8008214:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8008218:	e00b      	b.n	8008232 <HAL_TIM_OC_Start+0xaa>
 800821a:	683b      	ldr	r3, [r7, #0]
 800821c:	2b08      	cmp	r3, #8
 800821e:	d104      	bne.n	800822a <HAL_TIM_OC_Start+0xa2>
 8008220:	687b      	ldr	r3, [r7, #4]
 8008222:	2202      	movs	r2, #2
 8008224:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008228:	e003      	b.n	8008232 <HAL_TIM_OC_Start+0xaa>
 800822a:	687b      	ldr	r3, [r7, #4]
 800822c:	2202      	movs	r2, #2
 800822e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

  /* Enable the Output compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8008232:	687b      	ldr	r3, [r7, #4]
 8008234:	681b      	ldr	r3, [r3, #0]
 8008236:	2201      	movs	r2, #1
 8008238:	6839      	ldr	r1, [r7, #0]
 800823a:	4618      	mov	r0, r3
 800823c:	f000 fea8 	bl	8008f90 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8008240:	687b      	ldr	r3, [r7, #4]
 8008242:	681b      	ldr	r3, [r3, #0]
 8008244:	4a23      	ldr	r2, [pc, #140]	; (80082d4 <HAL_TIM_OC_Start+0x14c>)
 8008246:	4293      	cmp	r3, r2
 8008248:	d107      	bne.n	800825a <HAL_TIM_OC_Start+0xd2>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 800824a:	687b      	ldr	r3, [r7, #4]
 800824c:	681b      	ldr	r3, [r3, #0]
 800824e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8008250:	687b      	ldr	r3, [r7, #4]
 8008252:	681b      	ldr	r3, [r3, #0]
 8008254:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8008258:	645a      	str	r2, [r3, #68]	; 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800825a:	687b      	ldr	r3, [r7, #4]
 800825c:	681b      	ldr	r3, [r3, #0]
 800825e:	4a1d      	ldr	r2, [pc, #116]	; (80082d4 <HAL_TIM_OC_Start+0x14c>)
 8008260:	4293      	cmp	r3, r2
 8008262:	d018      	beq.n	8008296 <HAL_TIM_OC_Start+0x10e>
 8008264:	687b      	ldr	r3, [r7, #4]
 8008266:	681b      	ldr	r3, [r3, #0]
 8008268:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800826c:	d013      	beq.n	8008296 <HAL_TIM_OC_Start+0x10e>
 800826e:	687b      	ldr	r3, [r7, #4]
 8008270:	681b      	ldr	r3, [r3, #0]
 8008272:	4a19      	ldr	r2, [pc, #100]	; (80082d8 <HAL_TIM_OC_Start+0x150>)
 8008274:	4293      	cmp	r3, r2
 8008276:	d00e      	beq.n	8008296 <HAL_TIM_OC_Start+0x10e>
 8008278:	687b      	ldr	r3, [r7, #4]
 800827a:	681b      	ldr	r3, [r3, #0]
 800827c:	4a17      	ldr	r2, [pc, #92]	; (80082dc <HAL_TIM_OC_Start+0x154>)
 800827e:	4293      	cmp	r3, r2
 8008280:	d009      	beq.n	8008296 <HAL_TIM_OC_Start+0x10e>
 8008282:	687b      	ldr	r3, [r7, #4]
 8008284:	681b      	ldr	r3, [r3, #0]
 8008286:	4a16      	ldr	r2, [pc, #88]	; (80082e0 <HAL_TIM_OC_Start+0x158>)
 8008288:	4293      	cmp	r3, r2
 800828a:	d004      	beq.n	8008296 <HAL_TIM_OC_Start+0x10e>
 800828c:	687b      	ldr	r3, [r7, #4]
 800828e:	681b      	ldr	r3, [r3, #0]
 8008290:	4a14      	ldr	r2, [pc, #80]	; (80082e4 <HAL_TIM_OC_Start+0x15c>)
 8008292:	4293      	cmp	r3, r2
 8008294:	d111      	bne.n	80082ba <HAL_TIM_OC_Start+0x132>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008296:	687b      	ldr	r3, [r7, #4]
 8008298:	681b      	ldr	r3, [r3, #0]
 800829a:	689b      	ldr	r3, [r3, #8]
 800829c:	f003 0307 	and.w	r3, r3, #7
 80082a0:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80082a2:	68fb      	ldr	r3, [r7, #12]
 80082a4:	2b06      	cmp	r3, #6
 80082a6:	d010      	beq.n	80082ca <HAL_TIM_OC_Start+0x142>
    {
      __HAL_TIM_ENABLE(htim);
 80082a8:	687b      	ldr	r3, [r7, #4]
 80082aa:	681b      	ldr	r3, [r3, #0]
 80082ac:	681a      	ldr	r2, [r3, #0]
 80082ae:	687b      	ldr	r3, [r7, #4]
 80082b0:	681b      	ldr	r3, [r3, #0]
 80082b2:	f042 0201 	orr.w	r2, r2, #1
 80082b6:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80082b8:	e007      	b.n	80082ca <HAL_TIM_OC_Start+0x142>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 80082ba:	687b      	ldr	r3, [r7, #4]
 80082bc:	681b      	ldr	r3, [r3, #0]
 80082be:	681a      	ldr	r2, [r3, #0]
 80082c0:	687b      	ldr	r3, [r7, #4]
 80082c2:	681b      	ldr	r3, [r3, #0]
 80082c4:	f042 0201 	orr.w	r2, r2, #1
 80082c8:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80082ca:	2300      	movs	r3, #0
}
 80082cc:	4618      	mov	r0, r3
 80082ce:	3710      	adds	r7, #16
 80082d0:	46bd      	mov	sp, r7
 80082d2:	bd80      	pop	{r7, pc}
 80082d4:	40010000 	.word	0x40010000
 80082d8:	40000400 	.word	0x40000400
 80082dc:	40000800 	.word	0x40000800
 80082e0:	40000c00 	.word	0x40000c00
 80082e4:	40014000 	.word	0x40014000

080082e8 <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 80082e8:	b580      	push	{r7, lr}
 80082ea:	b082      	sub	sp, #8
 80082ec:	af00      	add	r7, sp, #0
 80082ee:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 80082f0:	687b      	ldr	r3, [r7, #4]
 80082f2:	2b00      	cmp	r3, #0
 80082f4:	d101      	bne.n	80082fa <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 80082f6:	2301      	movs	r3, #1
 80082f8:	e041      	b.n	800837e <HAL_TIM_PWM_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 80082fa:	687b      	ldr	r3, [r7, #4]
 80082fc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8008300:	b2db      	uxtb	r3, r3
 8008302:	2b00      	cmp	r3, #0
 8008304:	d106      	bne.n	8008314 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8008306:	687b      	ldr	r3, [r7, #4]
 8008308:	2200      	movs	r2, #0
 800830a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 800830e:	6878      	ldr	r0, [r7, #4]
 8008310:	f7fa fe06 	bl	8002f20 <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008314:	687b      	ldr	r3, [r7, #4]
 8008316:	2202      	movs	r2, #2
 8008318:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800831c:	687b      	ldr	r3, [r7, #4]
 800831e:	681a      	ldr	r2, [r3, #0]
 8008320:	687b      	ldr	r3, [r7, #4]
 8008322:	3304      	adds	r3, #4
 8008324:	4619      	mov	r1, r3
 8008326:	4610      	mov	r0, r2
 8008328:	f000 fb80 	bl	8008a2c <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800832c:	687b      	ldr	r3, [r7, #4]
 800832e:	2201      	movs	r2, #1
 8008330:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8008334:	687b      	ldr	r3, [r7, #4]
 8008336:	2201      	movs	r2, #1
 8008338:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800833c:	687b      	ldr	r3, [r7, #4]
 800833e:	2201      	movs	r2, #1
 8008340:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8008344:	687b      	ldr	r3, [r7, #4]
 8008346:	2201      	movs	r2, #1
 8008348:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800834c:	687b      	ldr	r3, [r7, #4]
 800834e:	2201      	movs	r2, #1
 8008350:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8008354:	687b      	ldr	r3, [r7, #4]
 8008356:	2201      	movs	r2, #1
 8008358:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800835c:	687b      	ldr	r3, [r7, #4]
 800835e:	2201      	movs	r2, #1
 8008360:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8008364:	687b      	ldr	r3, [r7, #4]
 8008366:	2201      	movs	r2, #1
 8008368:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800836c:	687b      	ldr	r3, [r7, #4]
 800836e:	2201      	movs	r2, #1
 8008370:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8008374:	687b      	ldr	r3, [r7, #4]
 8008376:	2201      	movs	r2, #1
 8008378:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 800837c:	2300      	movs	r3, #0
}
 800837e:	4618      	mov	r0, r3
 8008380:	3708      	adds	r7, #8
 8008382:	46bd      	mov	sp, r7
 8008384:	bd80      	pop	{r7, pc}
	...

08008388 <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8008388:	b580      	push	{r7, lr}
 800838a:	b084      	sub	sp, #16
 800838c:	af00      	add	r7, sp, #0
 800838e:	6078      	str	r0, [r7, #4]
 8008390:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 8008392:	683b      	ldr	r3, [r7, #0]
 8008394:	2b00      	cmp	r3, #0
 8008396:	d109      	bne.n	80083ac <HAL_TIM_PWM_Start+0x24>
 8008398:	687b      	ldr	r3, [r7, #4]
 800839a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800839e:	b2db      	uxtb	r3, r3
 80083a0:	2b01      	cmp	r3, #1
 80083a2:	bf14      	ite	ne
 80083a4:	2301      	movne	r3, #1
 80083a6:	2300      	moveq	r3, #0
 80083a8:	b2db      	uxtb	r3, r3
 80083aa:	e022      	b.n	80083f2 <HAL_TIM_PWM_Start+0x6a>
 80083ac:	683b      	ldr	r3, [r7, #0]
 80083ae:	2b04      	cmp	r3, #4
 80083b0:	d109      	bne.n	80083c6 <HAL_TIM_PWM_Start+0x3e>
 80083b2:	687b      	ldr	r3, [r7, #4]
 80083b4:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 80083b8:	b2db      	uxtb	r3, r3
 80083ba:	2b01      	cmp	r3, #1
 80083bc:	bf14      	ite	ne
 80083be:	2301      	movne	r3, #1
 80083c0:	2300      	moveq	r3, #0
 80083c2:	b2db      	uxtb	r3, r3
 80083c4:	e015      	b.n	80083f2 <HAL_TIM_PWM_Start+0x6a>
 80083c6:	683b      	ldr	r3, [r7, #0]
 80083c8:	2b08      	cmp	r3, #8
 80083ca:	d109      	bne.n	80083e0 <HAL_TIM_PWM_Start+0x58>
 80083cc:	687b      	ldr	r3, [r7, #4]
 80083ce:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80083d2:	b2db      	uxtb	r3, r3
 80083d4:	2b01      	cmp	r3, #1
 80083d6:	bf14      	ite	ne
 80083d8:	2301      	movne	r3, #1
 80083da:	2300      	moveq	r3, #0
 80083dc:	b2db      	uxtb	r3, r3
 80083de:	e008      	b.n	80083f2 <HAL_TIM_PWM_Start+0x6a>
 80083e0:	687b      	ldr	r3, [r7, #4]
 80083e2:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80083e6:	b2db      	uxtb	r3, r3
 80083e8:	2b01      	cmp	r3, #1
 80083ea:	bf14      	ite	ne
 80083ec:	2301      	movne	r3, #1
 80083ee:	2300      	moveq	r3, #0
 80083f0:	b2db      	uxtb	r3, r3
 80083f2:	2b00      	cmp	r3, #0
 80083f4:	d001      	beq.n	80083fa <HAL_TIM_PWM_Start+0x72>
  {
    return HAL_ERROR;
 80083f6:	2301      	movs	r3, #1
 80083f8:	e068      	b.n	80084cc <HAL_TIM_PWM_Start+0x144>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 80083fa:	683b      	ldr	r3, [r7, #0]
 80083fc:	2b00      	cmp	r3, #0
 80083fe:	d104      	bne.n	800840a <HAL_TIM_PWM_Start+0x82>
 8008400:	687b      	ldr	r3, [r7, #4]
 8008402:	2202      	movs	r2, #2
 8008404:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008408:	e013      	b.n	8008432 <HAL_TIM_PWM_Start+0xaa>
 800840a:	683b      	ldr	r3, [r7, #0]
 800840c:	2b04      	cmp	r3, #4
 800840e:	d104      	bne.n	800841a <HAL_TIM_PWM_Start+0x92>
 8008410:	687b      	ldr	r3, [r7, #4]
 8008412:	2202      	movs	r2, #2
 8008414:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8008418:	e00b      	b.n	8008432 <HAL_TIM_PWM_Start+0xaa>
 800841a:	683b      	ldr	r3, [r7, #0]
 800841c:	2b08      	cmp	r3, #8
 800841e:	d104      	bne.n	800842a <HAL_TIM_PWM_Start+0xa2>
 8008420:	687b      	ldr	r3, [r7, #4]
 8008422:	2202      	movs	r2, #2
 8008424:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008428:	e003      	b.n	8008432 <HAL_TIM_PWM_Start+0xaa>
 800842a:	687b      	ldr	r3, [r7, #4]
 800842c:	2202      	movs	r2, #2
 800842e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8008432:	687b      	ldr	r3, [r7, #4]
 8008434:	681b      	ldr	r3, [r3, #0]
 8008436:	2201      	movs	r2, #1
 8008438:	6839      	ldr	r1, [r7, #0]
 800843a:	4618      	mov	r0, r3
 800843c:	f000 fda8 	bl	8008f90 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8008440:	687b      	ldr	r3, [r7, #4]
 8008442:	681b      	ldr	r3, [r3, #0]
 8008444:	4a23      	ldr	r2, [pc, #140]	; (80084d4 <HAL_TIM_PWM_Start+0x14c>)
 8008446:	4293      	cmp	r3, r2
 8008448:	d107      	bne.n	800845a <HAL_TIM_PWM_Start+0xd2>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 800844a:	687b      	ldr	r3, [r7, #4]
 800844c:	681b      	ldr	r3, [r3, #0]
 800844e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8008450:	687b      	ldr	r3, [r7, #4]
 8008452:	681b      	ldr	r3, [r3, #0]
 8008454:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8008458:	645a      	str	r2, [r3, #68]	; 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800845a:	687b      	ldr	r3, [r7, #4]
 800845c:	681b      	ldr	r3, [r3, #0]
 800845e:	4a1d      	ldr	r2, [pc, #116]	; (80084d4 <HAL_TIM_PWM_Start+0x14c>)
 8008460:	4293      	cmp	r3, r2
 8008462:	d018      	beq.n	8008496 <HAL_TIM_PWM_Start+0x10e>
 8008464:	687b      	ldr	r3, [r7, #4]
 8008466:	681b      	ldr	r3, [r3, #0]
 8008468:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800846c:	d013      	beq.n	8008496 <HAL_TIM_PWM_Start+0x10e>
 800846e:	687b      	ldr	r3, [r7, #4]
 8008470:	681b      	ldr	r3, [r3, #0]
 8008472:	4a19      	ldr	r2, [pc, #100]	; (80084d8 <HAL_TIM_PWM_Start+0x150>)
 8008474:	4293      	cmp	r3, r2
 8008476:	d00e      	beq.n	8008496 <HAL_TIM_PWM_Start+0x10e>
 8008478:	687b      	ldr	r3, [r7, #4]
 800847a:	681b      	ldr	r3, [r3, #0]
 800847c:	4a17      	ldr	r2, [pc, #92]	; (80084dc <HAL_TIM_PWM_Start+0x154>)
 800847e:	4293      	cmp	r3, r2
 8008480:	d009      	beq.n	8008496 <HAL_TIM_PWM_Start+0x10e>
 8008482:	687b      	ldr	r3, [r7, #4]
 8008484:	681b      	ldr	r3, [r3, #0]
 8008486:	4a16      	ldr	r2, [pc, #88]	; (80084e0 <HAL_TIM_PWM_Start+0x158>)
 8008488:	4293      	cmp	r3, r2
 800848a:	d004      	beq.n	8008496 <HAL_TIM_PWM_Start+0x10e>
 800848c:	687b      	ldr	r3, [r7, #4]
 800848e:	681b      	ldr	r3, [r3, #0]
 8008490:	4a14      	ldr	r2, [pc, #80]	; (80084e4 <HAL_TIM_PWM_Start+0x15c>)
 8008492:	4293      	cmp	r3, r2
 8008494:	d111      	bne.n	80084ba <HAL_TIM_PWM_Start+0x132>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008496:	687b      	ldr	r3, [r7, #4]
 8008498:	681b      	ldr	r3, [r3, #0]
 800849a:	689b      	ldr	r3, [r3, #8]
 800849c:	f003 0307 	and.w	r3, r3, #7
 80084a0:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80084a2:	68fb      	ldr	r3, [r7, #12]
 80084a4:	2b06      	cmp	r3, #6
 80084a6:	d010      	beq.n	80084ca <HAL_TIM_PWM_Start+0x142>
    {
      __HAL_TIM_ENABLE(htim);
 80084a8:	687b      	ldr	r3, [r7, #4]
 80084aa:	681b      	ldr	r3, [r3, #0]
 80084ac:	681a      	ldr	r2, [r3, #0]
 80084ae:	687b      	ldr	r3, [r7, #4]
 80084b0:	681b      	ldr	r3, [r3, #0]
 80084b2:	f042 0201 	orr.w	r2, r2, #1
 80084b6:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80084b8:	e007      	b.n	80084ca <HAL_TIM_PWM_Start+0x142>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 80084ba:	687b      	ldr	r3, [r7, #4]
 80084bc:	681b      	ldr	r3, [r3, #0]
 80084be:	681a      	ldr	r2, [r3, #0]
 80084c0:	687b      	ldr	r3, [r7, #4]
 80084c2:	681b      	ldr	r3, [r3, #0]
 80084c4:	f042 0201 	orr.w	r2, r2, #1
 80084c8:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80084ca:	2300      	movs	r3, #0
}
 80084cc:	4618      	mov	r0, r3
 80084ce:	3710      	adds	r7, #16
 80084d0:	46bd      	mov	sp, r7
 80084d2:	bd80      	pop	{r7, pc}
 80084d4:	40010000 	.word	0x40010000
 80084d8:	40000400 	.word	0x40000400
 80084dc:	40000800 	.word	0x40000800
 80084e0:	40000c00 	.word	0x40000c00
 80084e4:	40014000 	.word	0x40014000

080084e8 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 80084e8:	b580      	push	{r7, lr}
 80084ea:	b084      	sub	sp, #16
 80084ec:	af00      	add	r7, sp, #0
 80084ee:	6078      	str	r0, [r7, #4]
  uint32_t itsource = htim->Instance->DIER;
 80084f0:	687b      	ldr	r3, [r7, #4]
 80084f2:	681b      	ldr	r3, [r3, #0]
 80084f4:	68db      	ldr	r3, [r3, #12]
 80084f6:	60fb      	str	r3, [r7, #12]
  uint32_t itflag   = htim->Instance->SR;
 80084f8:	687b      	ldr	r3, [r7, #4]
 80084fa:	681b      	ldr	r3, [r3, #0]
 80084fc:	691b      	ldr	r3, [r3, #16]
 80084fe:	60bb      	str	r3, [r7, #8]

  /* Capture compare 1 event */
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8008500:	68bb      	ldr	r3, [r7, #8]
 8008502:	f003 0302 	and.w	r3, r3, #2
 8008506:	2b00      	cmp	r3, #0
 8008508:	d020      	beq.n	800854c <HAL_TIM_IRQHandler+0x64>
  {
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 800850a:	68fb      	ldr	r3, [r7, #12]
 800850c:	f003 0302 	and.w	r3, r3, #2
 8008510:	2b00      	cmp	r3, #0
 8008512:	d01b      	beq.n	800854c <HAL_TIM_IRQHandler+0x64>
    {
      {
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8008514:	687b      	ldr	r3, [r7, #4]
 8008516:	681b      	ldr	r3, [r3, #0]
 8008518:	f06f 0202 	mvn.w	r2, #2
 800851c:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800851e:	687b      	ldr	r3, [r7, #4]
 8008520:	2201      	movs	r2, #1
 8008522:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8008524:	687b      	ldr	r3, [r7, #4]
 8008526:	681b      	ldr	r3, [r3, #0]
 8008528:	699b      	ldr	r3, [r3, #24]
 800852a:	f003 0303 	and.w	r3, r3, #3
 800852e:	2b00      	cmp	r3, #0
 8008530:	d003      	beq.n	800853a <HAL_TIM_IRQHandler+0x52>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8008532:	6878      	ldr	r0, [r7, #4]
 8008534:	f000 fa5b 	bl	80089ee <HAL_TIM_IC_CaptureCallback>
 8008538:	e005      	b.n	8008546 <HAL_TIM_IRQHandler+0x5e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800853a:	6878      	ldr	r0, [r7, #4]
 800853c:	f000 fa4d 	bl	80089da <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008540:	6878      	ldr	r0, [r7, #4]
 8008542:	f000 fa5e 	bl	8008a02 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008546:	687b      	ldr	r3, [r7, #4]
 8008548:	2200      	movs	r2, #0
 800854a:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 800854c:	68bb      	ldr	r3, [r7, #8]
 800854e:	f003 0304 	and.w	r3, r3, #4
 8008552:	2b00      	cmp	r3, #0
 8008554:	d020      	beq.n	8008598 <HAL_TIM_IRQHandler+0xb0>
  {
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8008556:	68fb      	ldr	r3, [r7, #12]
 8008558:	f003 0304 	and.w	r3, r3, #4
 800855c:	2b00      	cmp	r3, #0
 800855e:	d01b      	beq.n	8008598 <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8008560:	687b      	ldr	r3, [r7, #4]
 8008562:	681b      	ldr	r3, [r3, #0]
 8008564:	f06f 0204 	mvn.w	r2, #4
 8008568:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800856a:	687b      	ldr	r3, [r7, #4]
 800856c:	2202      	movs	r2, #2
 800856e:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8008570:	687b      	ldr	r3, [r7, #4]
 8008572:	681b      	ldr	r3, [r3, #0]
 8008574:	699b      	ldr	r3, [r3, #24]
 8008576:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800857a:	2b00      	cmp	r3, #0
 800857c:	d003      	beq.n	8008586 <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800857e:	6878      	ldr	r0, [r7, #4]
 8008580:	f000 fa35 	bl	80089ee <HAL_TIM_IC_CaptureCallback>
 8008584:	e005      	b.n	8008592 <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8008586:	6878      	ldr	r0, [r7, #4]
 8008588:	f000 fa27 	bl	80089da <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800858c:	6878      	ldr	r0, [r7, #4]
 800858e:	f000 fa38 	bl	8008a02 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008592:	687b      	ldr	r3, [r7, #4]
 8008594:	2200      	movs	r2, #0
 8008596:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8008598:	68bb      	ldr	r3, [r7, #8]
 800859a:	f003 0308 	and.w	r3, r3, #8
 800859e:	2b00      	cmp	r3, #0
 80085a0:	d020      	beq.n	80085e4 <HAL_TIM_IRQHandler+0xfc>
  {
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 80085a2:	68fb      	ldr	r3, [r7, #12]
 80085a4:	f003 0308 	and.w	r3, r3, #8
 80085a8:	2b00      	cmp	r3, #0
 80085aa:	d01b      	beq.n	80085e4 <HAL_TIM_IRQHandler+0xfc>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 80085ac:	687b      	ldr	r3, [r7, #4]
 80085ae:	681b      	ldr	r3, [r3, #0]
 80085b0:	f06f 0208 	mvn.w	r2, #8
 80085b4:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80085b6:	687b      	ldr	r3, [r7, #4]
 80085b8:	2204      	movs	r2, #4
 80085ba:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80085bc:	687b      	ldr	r3, [r7, #4]
 80085be:	681b      	ldr	r3, [r3, #0]
 80085c0:	69db      	ldr	r3, [r3, #28]
 80085c2:	f003 0303 	and.w	r3, r3, #3
 80085c6:	2b00      	cmp	r3, #0
 80085c8:	d003      	beq.n	80085d2 <HAL_TIM_IRQHandler+0xea>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80085ca:	6878      	ldr	r0, [r7, #4]
 80085cc:	f000 fa0f 	bl	80089ee <HAL_TIM_IC_CaptureCallback>
 80085d0:	e005      	b.n	80085de <HAL_TIM_IRQHandler+0xf6>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80085d2:	6878      	ldr	r0, [r7, #4]
 80085d4:	f000 fa01 	bl	80089da <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80085d8:	6878      	ldr	r0, [r7, #4]
 80085da:	f000 fa12 	bl	8008a02 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80085de:	687b      	ldr	r3, [r7, #4]
 80085e0:	2200      	movs	r2, #0
 80085e2:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 80085e4:	68bb      	ldr	r3, [r7, #8]
 80085e6:	f003 0310 	and.w	r3, r3, #16
 80085ea:	2b00      	cmp	r3, #0
 80085ec:	d020      	beq.n	8008630 <HAL_TIM_IRQHandler+0x148>
  {
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 80085ee:	68fb      	ldr	r3, [r7, #12]
 80085f0:	f003 0310 	and.w	r3, r3, #16
 80085f4:	2b00      	cmp	r3, #0
 80085f6:	d01b      	beq.n	8008630 <HAL_TIM_IRQHandler+0x148>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 80085f8:	687b      	ldr	r3, [r7, #4]
 80085fa:	681b      	ldr	r3, [r3, #0]
 80085fc:	f06f 0210 	mvn.w	r2, #16
 8008600:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8008602:	687b      	ldr	r3, [r7, #4]
 8008604:	2208      	movs	r2, #8
 8008606:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008608:	687b      	ldr	r3, [r7, #4]
 800860a:	681b      	ldr	r3, [r3, #0]
 800860c:	69db      	ldr	r3, [r3, #28]
 800860e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8008612:	2b00      	cmp	r3, #0
 8008614:	d003      	beq.n	800861e <HAL_TIM_IRQHandler+0x136>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008616:	6878      	ldr	r0, [r7, #4]
 8008618:	f000 f9e9 	bl	80089ee <HAL_TIM_IC_CaptureCallback>
 800861c:	e005      	b.n	800862a <HAL_TIM_IRQHandler+0x142>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800861e:	6878      	ldr	r0, [r7, #4]
 8008620:	f000 f9db 	bl	80089da <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008624:	6878      	ldr	r0, [r7, #4]
 8008626:	f000 f9ec 	bl	8008a02 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800862a:	687b      	ldr	r3, [r7, #4]
 800862c:	2200      	movs	r2, #0
 800862e:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8008630:	68bb      	ldr	r3, [r7, #8]
 8008632:	f003 0301 	and.w	r3, r3, #1
 8008636:	2b00      	cmp	r3, #0
 8008638:	d00c      	beq.n	8008654 <HAL_TIM_IRQHandler+0x16c>
  {
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 800863a:	68fb      	ldr	r3, [r7, #12]
 800863c:	f003 0301 	and.w	r3, r3, #1
 8008640:	2b00      	cmp	r3, #0
 8008642:	d007      	beq.n	8008654 <HAL_TIM_IRQHandler+0x16c>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8008644:	687b      	ldr	r3, [r7, #4]
 8008646:	681b      	ldr	r3, [r3, #0]
 8008648:	f06f 0201 	mvn.w	r2, #1
 800864c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800864e:	6878      	ldr	r0, [r7, #4]
 8008650:	f7fb f9ce 	bl	80039f0 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 8008654:	68bb      	ldr	r3, [r7, #8]
 8008656:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800865a:	2b00      	cmp	r3, #0
 800865c:	d00c      	beq.n	8008678 <HAL_TIM_IRQHandler+0x190>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 800865e:	68fb      	ldr	r3, [r7, #12]
 8008660:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008664:	2b00      	cmp	r3, #0
 8008666:	d007      	beq.n	8008678 <HAL_TIM_IRQHandler+0x190>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8008668:	687b      	ldr	r3, [r7, #4]
 800866a:	681b      	ldr	r3, [r3, #0]
 800866c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8008670:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8008672:	6878      	ldr	r0, [r7, #4]
 8008674:	f000 fd2a 	bl	80090cc <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8008678:	68bb      	ldr	r3, [r7, #8]
 800867a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800867e:	2b00      	cmp	r3, #0
 8008680:	d00c      	beq.n	800869c <HAL_TIM_IRQHandler+0x1b4>
  {
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8008682:	68fb      	ldr	r3, [r7, #12]
 8008684:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008688:	2b00      	cmp	r3, #0
 800868a:	d007      	beq.n	800869c <HAL_TIM_IRQHandler+0x1b4>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 800868c:	687b      	ldr	r3, [r7, #4]
 800868e:	681b      	ldr	r3, [r3, #0]
 8008690:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8008694:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8008696:	6878      	ldr	r0, [r7, #4]
 8008698:	f000 f9bd 	bl	8008a16 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 800869c:	68bb      	ldr	r3, [r7, #8]
 800869e:	f003 0320 	and.w	r3, r3, #32
 80086a2:	2b00      	cmp	r3, #0
 80086a4:	d00c      	beq.n	80086c0 <HAL_TIM_IRQHandler+0x1d8>
  {
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 80086a6:	68fb      	ldr	r3, [r7, #12]
 80086a8:	f003 0320 	and.w	r3, r3, #32
 80086ac:	2b00      	cmp	r3, #0
 80086ae:	d007      	beq.n	80086c0 <HAL_TIM_IRQHandler+0x1d8>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 80086b0:	687b      	ldr	r3, [r7, #4]
 80086b2:	681b      	ldr	r3, [r3, #0]
 80086b4:	f06f 0220 	mvn.w	r2, #32
 80086b8:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80086ba:	6878      	ldr	r0, [r7, #4]
 80086bc:	f000 fcfc 	bl	80090b8 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80086c0:	bf00      	nop
 80086c2:	3710      	adds	r7, #16
 80086c4:	46bd      	mov	sp, r7
 80086c6:	bd80      	pop	{r7, pc}

080086c8 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            const TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 80086c8:	b580      	push	{r7, lr}
 80086ca:	b086      	sub	sp, #24
 80086cc:	af00      	add	r7, sp, #0
 80086ce:	60f8      	str	r0, [r7, #12]
 80086d0:	60b9      	str	r1, [r7, #8]
 80086d2:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80086d4:	2300      	movs	r3, #0
 80086d6:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 80086d8:	68fb      	ldr	r3, [r7, #12]
 80086da:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80086de:	2b01      	cmp	r3, #1
 80086e0:	d101      	bne.n	80086e6 <HAL_TIM_PWM_ConfigChannel+0x1e>
 80086e2:	2302      	movs	r3, #2
 80086e4:	e0ae      	b.n	8008844 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80086e6:	68fb      	ldr	r3, [r7, #12]
 80086e8:	2201      	movs	r2, #1
 80086ea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  switch (Channel)
 80086ee:	687b      	ldr	r3, [r7, #4]
 80086f0:	2b0c      	cmp	r3, #12
 80086f2:	f200 809f 	bhi.w	8008834 <HAL_TIM_PWM_ConfigChannel+0x16c>
 80086f6:	a201      	add	r2, pc, #4	; (adr r2, 80086fc <HAL_TIM_PWM_ConfigChannel+0x34>)
 80086f8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80086fc:	08008731 	.word	0x08008731
 8008700:	08008835 	.word	0x08008835
 8008704:	08008835 	.word	0x08008835
 8008708:	08008835 	.word	0x08008835
 800870c:	08008771 	.word	0x08008771
 8008710:	08008835 	.word	0x08008835
 8008714:	08008835 	.word	0x08008835
 8008718:	08008835 	.word	0x08008835
 800871c:	080087b3 	.word	0x080087b3
 8008720:	08008835 	.word	0x08008835
 8008724:	08008835 	.word	0x08008835
 8008728:	08008835 	.word	0x08008835
 800872c:	080087f3 	.word	0x080087f3
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8008730:	68fb      	ldr	r3, [r7, #12]
 8008732:	681b      	ldr	r3, [r3, #0]
 8008734:	68b9      	ldr	r1, [r7, #8]
 8008736:	4618      	mov	r0, r3
 8008738:	f000 fa04 	bl	8008b44 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800873c:	68fb      	ldr	r3, [r7, #12]
 800873e:	681b      	ldr	r3, [r3, #0]
 8008740:	699a      	ldr	r2, [r3, #24]
 8008742:	68fb      	ldr	r3, [r7, #12]
 8008744:	681b      	ldr	r3, [r3, #0]
 8008746:	f042 0208 	orr.w	r2, r2, #8
 800874a:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800874c:	68fb      	ldr	r3, [r7, #12]
 800874e:	681b      	ldr	r3, [r3, #0]
 8008750:	699a      	ldr	r2, [r3, #24]
 8008752:	68fb      	ldr	r3, [r7, #12]
 8008754:	681b      	ldr	r3, [r3, #0]
 8008756:	f022 0204 	bic.w	r2, r2, #4
 800875a:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800875c:	68fb      	ldr	r3, [r7, #12]
 800875e:	681b      	ldr	r3, [r3, #0]
 8008760:	6999      	ldr	r1, [r3, #24]
 8008762:	68bb      	ldr	r3, [r7, #8]
 8008764:	691a      	ldr	r2, [r3, #16]
 8008766:	68fb      	ldr	r3, [r7, #12]
 8008768:	681b      	ldr	r3, [r3, #0]
 800876a:	430a      	orrs	r2, r1
 800876c:	619a      	str	r2, [r3, #24]
      break;
 800876e:	e064      	b.n	800883a <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8008770:	68fb      	ldr	r3, [r7, #12]
 8008772:	681b      	ldr	r3, [r3, #0]
 8008774:	68b9      	ldr	r1, [r7, #8]
 8008776:	4618      	mov	r0, r3
 8008778:	f000 fa4a 	bl	8008c10 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800877c:	68fb      	ldr	r3, [r7, #12]
 800877e:	681b      	ldr	r3, [r3, #0]
 8008780:	699a      	ldr	r2, [r3, #24]
 8008782:	68fb      	ldr	r3, [r7, #12]
 8008784:	681b      	ldr	r3, [r3, #0]
 8008786:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800878a:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800878c:	68fb      	ldr	r3, [r7, #12]
 800878e:	681b      	ldr	r3, [r3, #0]
 8008790:	699a      	ldr	r2, [r3, #24]
 8008792:	68fb      	ldr	r3, [r7, #12]
 8008794:	681b      	ldr	r3, [r3, #0]
 8008796:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800879a:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800879c:	68fb      	ldr	r3, [r7, #12]
 800879e:	681b      	ldr	r3, [r3, #0]
 80087a0:	6999      	ldr	r1, [r3, #24]
 80087a2:	68bb      	ldr	r3, [r7, #8]
 80087a4:	691b      	ldr	r3, [r3, #16]
 80087a6:	021a      	lsls	r2, r3, #8
 80087a8:	68fb      	ldr	r3, [r7, #12]
 80087aa:	681b      	ldr	r3, [r3, #0]
 80087ac:	430a      	orrs	r2, r1
 80087ae:	619a      	str	r2, [r3, #24]
      break;
 80087b0:	e043      	b.n	800883a <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 80087b2:	68fb      	ldr	r3, [r7, #12]
 80087b4:	681b      	ldr	r3, [r3, #0]
 80087b6:	68b9      	ldr	r1, [r7, #8]
 80087b8:	4618      	mov	r0, r3
 80087ba:	f000 fa95 	bl	8008ce8 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80087be:	68fb      	ldr	r3, [r7, #12]
 80087c0:	681b      	ldr	r3, [r3, #0]
 80087c2:	69da      	ldr	r2, [r3, #28]
 80087c4:	68fb      	ldr	r3, [r7, #12]
 80087c6:	681b      	ldr	r3, [r3, #0]
 80087c8:	f042 0208 	orr.w	r2, r2, #8
 80087cc:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 80087ce:	68fb      	ldr	r3, [r7, #12]
 80087d0:	681b      	ldr	r3, [r3, #0]
 80087d2:	69da      	ldr	r2, [r3, #28]
 80087d4:	68fb      	ldr	r3, [r7, #12]
 80087d6:	681b      	ldr	r3, [r3, #0]
 80087d8:	f022 0204 	bic.w	r2, r2, #4
 80087dc:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80087de:	68fb      	ldr	r3, [r7, #12]
 80087e0:	681b      	ldr	r3, [r3, #0]
 80087e2:	69d9      	ldr	r1, [r3, #28]
 80087e4:	68bb      	ldr	r3, [r7, #8]
 80087e6:	691a      	ldr	r2, [r3, #16]
 80087e8:	68fb      	ldr	r3, [r7, #12]
 80087ea:	681b      	ldr	r3, [r3, #0]
 80087ec:	430a      	orrs	r2, r1
 80087ee:	61da      	str	r2, [r3, #28]
      break;
 80087f0:	e023      	b.n	800883a <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 80087f2:	68fb      	ldr	r3, [r7, #12]
 80087f4:	681b      	ldr	r3, [r3, #0]
 80087f6:	68b9      	ldr	r1, [r7, #8]
 80087f8:	4618      	mov	r0, r3
 80087fa:	f000 fadf 	bl	8008dbc <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 80087fe:	68fb      	ldr	r3, [r7, #12]
 8008800:	681b      	ldr	r3, [r3, #0]
 8008802:	69da      	ldr	r2, [r3, #28]
 8008804:	68fb      	ldr	r3, [r7, #12]
 8008806:	681b      	ldr	r3, [r3, #0]
 8008808:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800880c:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800880e:	68fb      	ldr	r3, [r7, #12]
 8008810:	681b      	ldr	r3, [r3, #0]
 8008812:	69da      	ldr	r2, [r3, #28]
 8008814:	68fb      	ldr	r3, [r7, #12]
 8008816:	681b      	ldr	r3, [r3, #0]
 8008818:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800881c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800881e:	68fb      	ldr	r3, [r7, #12]
 8008820:	681b      	ldr	r3, [r3, #0]
 8008822:	69d9      	ldr	r1, [r3, #28]
 8008824:	68bb      	ldr	r3, [r7, #8]
 8008826:	691b      	ldr	r3, [r3, #16]
 8008828:	021a      	lsls	r2, r3, #8
 800882a:	68fb      	ldr	r3, [r7, #12]
 800882c:	681b      	ldr	r3, [r3, #0]
 800882e:	430a      	orrs	r2, r1
 8008830:	61da      	str	r2, [r3, #28]
      break;
 8008832:	e002      	b.n	800883a <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      status = HAL_ERROR;
 8008834:	2301      	movs	r3, #1
 8008836:	75fb      	strb	r3, [r7, #23]
      break;
 8008838:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 800883a:	68fb      	ldr	r3, [r7, #12]
 800883c:	2200      	movs	r2, #0
 800883e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 8008842:	7dfb      	ldrb	r3, [r7, #23]
}
 8008844:	4618      	mov	r0, r3
 8008846:	3718      	adds	r7, #24
 8008848:	46bd      	mov	sp, r7
 800884a:	bd80      	pop	{r7, pc}

0800884c <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 800884c:	b580      	push	{r7, lr}
 800884e:	b084      	sub	sp, #16
 8008850:	af00      	add	r7, sp, #0
 8008852:	6078      	str	r0, [r7, #4]
 8008854:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8008856:	2300      	movs	r3, #0
 8008858:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 800885a:	687b      	ldr	r3, [r7, #4]
 800885c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008860:	2b01      	cmp	r3, #1
 8008862:	d101      	bne.n	8008868 <HAL_TIM_ConfigClockSource+0x1c>
 8008864:	2302      	movs	r3, #2
 8008866:	e0b4      	b.n	80089d2 <HAL_TIM_ConfigClockSource+0x186>
 8008868:	687b      	ldr	r3, [r7, #4]
 800886a:	2201      	movs	r2, #1
 800886c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8008870:	687b      	ldr	r3, [r7, #4]
 8008872:	2202      	movs	r2, #2
 8008874:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 8008878:	687b      	ldr	r3, [r7, #4]
 800887a:	681b      	ldr	r3, [r3, #0]
 800887c:	689b      	ldr	r3, [r3, #8]
 800887e:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 8008880:	68bb      	ldr	r3, [r7, #8]
 8008882:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8008886:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8008888:	68bb      	ldr	r3, [r7, #8]
 800888a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800888e:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 8008890:	687b      	ldr	r3, [r7, #4]
 8008892:	681b      	ldr	r3, [r3, #0]
 8008894:	68ba      	ldr	r2, [r7, #8]
 8008896:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 8008898:	683b      	ldr	r3, [r7, #0]
 800889a:	681b      	ldr	r3, [r3, #0]
 800889c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80088a0:	d03e      	beq.n	8008920 <HAL_TIM_ConfigClockSource+0xd4>
 80088a2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80088a6:	f200 8087 	bhi.w	80089b8 <HAL_TIM_ConfigClockSource+0x16c>
 80088aa:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80088ae:	f000 8086 	beq.w	80089be <HAL_TIM_ConfigClockSource+0x172>
 80088b2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80088b6:	d87f      	bhi.n	80089b8 <HAL_TIM_ConfigClockSource+0x16c>
 80088b8:	2b70      	cmp	r3, #112	; 0x70
 80088ba:	d01a      	beq.n	80088f2 <HAL_TIM_ConfigClockSource+0xa6>
 80088bc:	2b70      	cmp	r3, #112	; 0x70
 80088be:	d87b      	bhi.n	80089b8 <HAL_TIM_ConfigClockSource+0x16c>
 80088c0:	2b60      	cmp	r3, #96	; 0x60
 80088c2:	d050      	beq.n	8008966 <HAL_TIM_ConfigClockSource+0x11a>
 80088c4:	2b60      	cmp	r3, #96	; 0x60
 80088c6:	d877      	bhi.n	80089b8 <HAL_TIM_ConfigClockSource+0x16c>
 80088c8:	2b50      	cmp	r3, #80	; 0x50
 80088ca:	d03c      	beq.n	8008946 <HAL_TIM_ConfigClockSource+0xfa>
 80088cc:	2b50      	cmp	r3, #80	; 0x50
 80088ce:	d873      	bhi.n	80089b8 <HAL_TIM_ConfigClockSource+0x16c>
 80088d0:	2b40      	cmp	r3, #64	; 0x40
 80088d2:	d058      	beq.n	8008986 <HAL_TIM_ConfigClockSource+0x13a>
 80088d4:	2b40      	cmp	r3, #64	; 0x40
 80088d6:	d86f      	bhi.n	80089b8 <HAL_TIM_ConfigClockSource+0x16c>
 80088d8:	2b30      	cmp	r3, #48	; 0x30
 80088da:	d064      	beq.n	80089a6 <HAL_TIM_ConfigClockSource+0x15a>
 80088dc:	2b30      	cmp	r3, #48	; 0x30
 80088de:	d86b      	bhi.n	80089b8 <HAL_TIM_ConfigClockSource+0x16c>
 80088e0:	2b20      	cmp	r3, #32
 80088e2:	d060      	beq.n	80089a6 <HAL_TIM_ConfigClockSource+0x15a>
 80088e4:	2b20      	cmp	r3, #32
 80088e6:	d867      	bhi.n	80089b8 <HAL_TIM_ConfigClockSource+0x16c>
 80088e8:	2b00      	cmp	r3, #0
 80088ea:	d05c      	beq.n	80089a6 <HAL_TIM_ConfigClockSource+0x15a>
 80088ec:	2b10      	cmp	r3, #16
 80088ee:	d05a      	beq.n	80089a6 <HAL_TIM_ConfigClockSource+0x15a>
 80088f0:	e062      	b.n	80089b8 <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 80088f2:	687b      	ldr	r3, [r7, #4]
 80088f4:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 80088f6:	683b      	ldr	r3, [r7, #0]
 80088f8:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 80088fa:	683b      	ldr	r3, [r7, #0]
 80088fc:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 80088fe:	683b      	ldr	r3, [r7, #0]
 8008900:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 8008902:	f000 fb25 	bl	8008f50 <TIM_ETR_SetConfig>

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 8008906:	687b      	ldr	r3, [r7, #4]
 8008908:	681b      	ldr	r3, [r3, #0]
 800890a:	689b      	ldr	r3, [r3, #8]
 800890c:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800890e:	68bb      	ldr	r3, [r7, #8]
 8008910:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8008914:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 8008916:	687b      	ldr	r3, [r7, #4]
 8008918:	681b      	ldr	r3, [r3, #0]
 800891a:	68ba      	ldr	r2, [r7, #8]
 800891c:	609a      	str	r2, [r3, #8]
      break;
 800891e:	e04f      	b.n	80089c0 <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8008920:	687b      	ldr	r3, [r7, #4]
 8008922:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 8008924:	683b      	ldr	r3, [r7, #0]
 8008926:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 8008928:	683b      	ldr	r3, [r7, #0]
 800892a:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 800892c:	683b      	ldr	r3, [r7, #0]
 800892e:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 8008930:	f000 fb0e 	bl	8008f50 <TIM_ETR_SetConfig>
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8008934:	687b      	ldr	r3, [r7, #4]
 8008936:	681b      	ldr	r3, [r3, #0]
 8008938:	689a      	ldr	r2, [r3, #8]
 800893a:	687b      	ldr	r3, [r7, #4]
 800893c:	681b      	ldr	r3, [r3, #0]
 800893e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8008942:	609a      	str	r2, [r3, #8]
      break;
 8008944:	e03c      	b.n	80089c0 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8008946:	687b      	ldr	r3, [r7, #4]
 8008948:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800894a:	683b      	ldr	r3, [r7, #0]
 800894c:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800894e:	683b      	ldr	r3, [r7, #0]
 8008950:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 8008952:	461a      	mov	r2, r3
 8008954:	f000 fa82 	bl	8008e5c <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 8008958:	687b      	ldr	r3, [r7, #4]
 800895a:	681b      	ldr	r3, [r3, #0]
 800895c:	2150      	movs	r1, #80	; 0x50
 800895e:	4618      	mov	r0, r3
 8008960:	f000 fadb 	bl	8008f1a <TIM_ITRx_SetConfig>
      break;
 8008964:	e02c      	b.n	80089c0 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 8008966:	687b      	ldr	r3, [r7, #4]
 8008968:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800896a:	683b      	ldr	r3, [r7, #0]
 800896c:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800896e:	683b      	ldr	r3, [r7, #0]
 8008970:	68db      	ldr	r3, [r3, #12]
      TIM_TI2_ConfigInputStage(htim->Instance,
 8008972:	461a      	mov	r2, r3
 8008974:	f000 faa1 	bl	8008eba <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 8008978:	687b      	ldr	r3, [r7, #4]
 800897a:	681b      	ldr	r3, [r3, #0]
 800897c:	2160      	movs	r1, #96	; 0x60
 800897e:	4618      	mov	r0, r3
 8008980:	f000 facb 	bl	8008f1a <TIM_ITRx_SetConfig>
      break;
 8008984:	e01c      	b.n	80089c0 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8008986:	687b      	ldr	r3, [r7, #4]
 8008988:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800898a:	683b      	ldr	r3, [r7, #0]
 800898c:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800898e:	683b      	ldr	r3, [r7, #0]
 8008990:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 8008992:	461a      	mov	r2, r3
 8008994:	f000 fa62 	bl	8008e5c <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 8008998:	687b      	ldr	r3, [r7, #4]
 800899a:	681b      	ldr	r3, [r3, #0]
 800899c:	2140      	movs	r1, #64	; 0x40
 800899e:	4618      	mov	r0, r3
 80089a0:	f000 fabb 	bl	8008f1a <TIM_ITRx_SetConfig>
      break;
 80089a4:	e00c      	b.n	80089c0 <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 80089a6:	687b      	ldr	r3, [r7, #4]
 80089a8:	681a      	ldr	r2, [r3, #0]
 80089aa:	683b      	ldr	r3, [r7, #0]
 80089ac:	681b      	ldr	r3, [r3, #0]
 80089ae:	4619      	mov	r1, r3
 80089b0:	4610      	mov	r0, r2
 80089b2:	f000 fab2 	bl	8008f1a <TIM_ITRx_SetConfig>
      break;
 80089b6:	e003      	b.n	80089c0 <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 80089b8:	2301      	movs	r3, #1
 80089ba:	73fb      	strb	r3, [r7, #15]
      break;
 80089bc:	e000      	b.n	80089c0 <HAL_TIM_ConfigClockSource+0x174>
      break;
 80089be:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 80089c0:	687b      	ldr	r3, [r7, #4]
 80089c2:	2201      	movs	r2, #1
 80089c4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 80089c8:	687b      	ldr	r3, [r7, #4]
 80089ca:	2200      	movs	r2, #0
 80089cc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 80089d0:	7bfb      	ldrb	r3, [r7, #15]
}
 80089d2:	4618      	mov	r0, r3
 80089d4:	3710      	adds	r7, #16
 80089d6:	46bd      	mov	sp, r7
 80089d8:	bd80      	pop	{r7, pc}

080089da <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 80089da:	b480      	push	{r7}
 80089dc:	b083      	sub	sp, #12
 80089de:	af00      	add	r7, sp, #0
 80089e0:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 80089e2:	bf00      	nop
 80089e4:	370c      	adds	r7, #12
 80089e6:	46bd      	mov	sp, r7
 80089e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089ec:	4770      	bx	lr

080089ee <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 80089ee:	b480      	push	{r7}
 80089f0:	b083      	sub	sp, #12
 80089f2:	af00      	add	r7, sp, #0
 80089f4:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 80089f6:	bf00      	nop
 80089f8:	370c      	adds	r7, #12
 80089fa:	46bd      	mov	sp, r7
 80089fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a00:	4770      	bx	lr

08008a02 <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 8008a02:	b480      	push	{r7}
 8008a04:	b083      	sub	sp, #12
 8008a06:	af00      	add	r7, sp, #0
 8008a08:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 8008a0a:	bf00      	nop
 8008a0c:	370c      	adds	r7, #12
 8008a0e:	46bd      	mov	sp, r7
 8008a10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a14:	4770      	bx	lr

08008a16 <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 8008a16:	b480      	push	{r7}
 8008a18:	b083      	sub	sp, #12
 8008a1a:	af00      	add	r7, sp, #0
 8008a1c:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 8008a1e:	bf00      	nop
 8008a20:	370c      	adds	r7, #12
 8008a22:	46bd      	mov	sp, r7
 8008a24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a28:	4770      	bx	lr
	...

08008a2c <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 8008a2c:	b480      	push	{r7}
 8008a2e:	b085      	sub	sp, #20
 8008a30:	af00      	add	r7, sp, #0
 8008a32:	6078      	str	r0, [r7, #4]
 8008a34:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 8008a36:	687b      	ldr	r3, [r7, #4]
 8008a38:	681b      	ldr	r3, [r3, #0]
 8008a3a:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8008a3c:	687b      	ldr	r3, [r7, #4]
 8008a3e:	4a3a      	ldr	r2, [pc, #232]	; (8008b28 <TIM_Base_SetConfig+0xfc>)
 8008a40:	4293      	cmp	r3, r2
 8008a42:	d00f      	beq.n	8008a64 <TIM_Base_SetConfig+0x38>
 8008a44:	687b      	ldr	r3, [r7, #4]
 8008a46:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008a4a:	d00b      	beq.n	8008a64 <TIM_Base_SetConfig+0x38>
 8008a4c:	687b      	ldr	r3, [r7, #4]
 8008a4e:	4a37      	ldr	r2, [pc, #220]	; (8008b2c <TIM_Base_SetConfig+0x100>)
 8008a50:	4293      	cmp	r3, r2
 8008a52:	d007      	beq.n	8008a64 <TIM_Base_SetConfig+0x38>
 8008a54:	687b      	ldr	r3, [r7, #4]
 8008a56:	4a36      	ldr	r2, [pc, #216]	; (8008b30 <TIM_Base_SetConfig+0x104>)
 8008a58:	4293      	cmp	r3, r2
 8008a5a:	d003      	beq.n	8008a64 <TIM_Base_SetConfig+0x38>
 8008a5c:	687b      	ldr	r3, [r7, #4]
 8008a5e:	4a35      	ldr	r2, [pc, #212]	; (8008b34 <TIM_Base_SetConfig+0x108>)
 8008a60:	4293      	cmp	r3, r2
 8008a62:	d108      	bne.n	8008a76 <TIM_Base_SetConfig+0x4a>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8008a64:	68fb      	ldr	r3, [r7, #12]
 8008a66:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008a6a:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 8008a6c:	683b      	ldr	r3, [r7, #0]
 8008a6e:	685b      	ldr	r3, [r3, #4]
 8008a70:	68fa      	ldr	r2, [r7, #12]
 8008a72:	4313      	orrs	r3, r2
 8008a74:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8008a76:	687b      	ldr	r3, [r7, #4]
 8008a78:	4a2b      	ldr	r2, [pc, #172]	; (8008b28 <TIM_Base_SetConfig+0xfc>)
 8008a7a:	4293      	cmp	r3, r2
 8008a7c:	d01b      	beq.n	8008ab6 <TIM_Base_SetConfig+0x8a>
 8008a7e:	687b      	ldr	r3, [r7, #4]
 8008a80:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008a84:	d017      	beq.n	8008ab6 <TIM_Base_SetConfig+0x8a>
 8008a86:	687b      	ldr	r3, [r7, #4]
 8008a88:	4a28      	ldr	r2, [pc, #160]	; (8008b2c <TIM_Base_SetConfig+0x100>)
 8008a8a:	4293      	cmp	r3, r2
 8008a8c:	d013      	beq.n	8008ab6 <TIM_Base_SetConfig+0x8a>
 8008a8e:	687b      	ldr	r3, [r7, #4]
 8008a90:	4a27      	ldr	r2, [pc, #156]	; (8008b30 <TIM_Base_SetConfig+0x104>)
 8008a92:	4293      	cmp	r3, r2
 8008a94:	d00f      	beq.n	8008ab6 <TIM_Base_SetConfig+0x8a>
 8008a96:	687b      	ldr	r3, [r7, #4]
 8008a98:	4a26      	ldr	r2, [pc, #152]	; (8008b34 <TIM_Base_SetConfig+0x108>)
 8008a9a:	4293      	cmp	r3, r2
 8008a9c:	d00b      	beq.n	8008ab6 <TIM_Base_SetConfig+0x8a>
 8008a9e:	687b      	ldr	r3, [r7, #4]
 8008aa0:	4a25      	ldr	r2, [pc, #148]	; (8008b38 <TIM_Base_SetConfig+0x10c>)
 8008aa2:	4293      	cmp	r3, r2
 8008aa4:	d007      	beq.n	8008ab6 <TIM_Base_SetConfig+0x8a>
 8008aa6:	687b      	ldr	r3, [r7, #4]
 8008aa8:	4a24      	ldr	r2, [pc, #144]	; (8008b3c <TIM_Base_SetConfig+0x110>)
 8008aaa:	4293      	cmp	r3, r2
 8008aac:	d003      	beq.n	8008ab6 <TIM_Base_SetConfig+0x8a>
 8008aae:	687b      	ldr	r3, [r7, #4]
 8008ab0:	4a23      	ldr	r2, [pc, #140]	; (8008b40 <TIM_Base_SetConfig+0x114>)
 8008ab2:	4293      	cmp	r3, r2
 8008ab4:	d108      	bne.n	8008ac8 <TIM_Base_SetConfig+0x9c>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8008ab6:	68fb      	ldr	r3, [r7, #12]
 8008ab8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008abc:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008abe:	683b      	ldr	r3, [r7, #0]
 8008ac0:	68db      	ldr	r3, [r3, #12]
 8008ac2:	68fa      	ldr	r2, [r7, #12]
 8008ac4:	4313      	orrs	r3, r2
 8008ac6:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008ac8:	68fb      	ldr	r3, [r7, #12]
 8008aca:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8008ace:	683b      	ldr	r3, [r7, #0]
 8008ad0:	695b      	ldr	r3, [r3, #20]
 8008ad2:	4313      	orrs	r3, r2
 8008ad4:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8008ad6:	687b      	ldr	r3, [r7, #4]
 8008ad8:	68fa      	ldr	r2, [r7, #12]
 8008ada:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8008adc:	683b      	ldr	r3, [r7, #0]
 8008ade:	689a      	ldr	r2, [r3, #8]
 8008ae0:	687b      	ldr	r3, [r7, #4]
 8008ae2:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8008ae4:	683b      	ldr	r3, [r7, #0]
 8008ae6:	681a      	ldr	r2, [r3, #0]
 8008ae8:	687b      	ldr	r3, [r7, #4]
 8008aea:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8008aec:	687b      	ldr	r3, [r7, #4]
 8008aee:	4a0e      	ldr	r2, [pc, #56]	; (8008b28 <TIM_Base_SetConfig+0xfc>)
 8008af0:	4293      	cmp	r3, r2
 8008af2:	d103      	bne.n	8008afc <TIM_Base_SetConfig+0xd0>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8008af4:	683b      	ldr	r3, [r7, #0]
 8008af6:	691a      	ldr	r2, [r3, #16]
 8008af8:	687b      	ldr	r3, [r7, #4]
 8008afa:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8008afc:	687b      	ldr	r3, [r7, #4]
 8008afe:	2201      	movs	r2, #1
 8008b00:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 8008b02:	687b      	ldr	r3, [r7, #4]
 8008b04:	691b      	ldr	r3, [r3, #16]
 8008b06:	f003 0301 	and.w	r3, r3, #1
 8008b0a:	2b01      	cmp	r3, #1
 8008b0c:	d105      	bne.n	8008b1a <TIM_Base_SetConfig+0xee>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8008b0e:	687b      	ldr	r3, [r7, #4]
 8008b10:	691b      	ldr	r3, [r3, #16]
 8008b12:	f023 0201 	bic.w	r2, r3, #1
 8008b16:	687b      	ldr	r3, [r7, #4]
 8008b18:	611a      	str	r2, [r3, #16]
  }
}
 8008b1a:	bf00      	nop
 8008b1c:	3714      	adds	r7, #20
 8008b1e:	46bd      	mov	sp, r7
 8008b20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b24:	4770      	bx	lr
 8008b26:	bf00      	nop
 8008b28:	40010000 	.word	0x40010000
 8008b2c:	40000400 	.word	0x40000400
 8008b30:	40000800 	.word	0x40000800
 8008b34:	40000c00 	.word	0x40000c00
 8008b38:	40014000 	.word	0x40014000
 8008b3c:	40014400 	.word	0x40014400
 8008b40:	40014800 	.word	0x40014800

08008b44 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8008b44:	b480      	push	{r7}
 8008b46:	b087      	sub	sp, #28
 8008b48:	af00      	add	r7, sp, #0
 8008b4a:	6078      	str	r0, [r7, #4]
 8008b4c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8008b4e:	687b      	ldr	r3, [r7, #4]
 8008b50:	6a1b      	ldr	r3, [r3, #32]
 8008b52:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8008b54:	687b      	ldr	r3, [r7, #4]
 8008b56:	6a1b      	ldr	r3, [r3, #32]
 8008b58:	f023 0201 	bic.w	r2, r3, #1
 8008b5c:	687b      	ldr	r3, [r7, #4]
 8008b5e:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008b60:	687b      	ldr	r3, [r7, #4]
 8008b62:	685b      	ldr	r3, [r3, #4]
 8008b64:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8008b66:	687b      	ldr	r3, [r7, #4]
 8008b68:	699b      	ldr	r3, [r3, #24]
 8008b6a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 8008b6c:	68fb      	ldr	r3, [r7, #12]
 8008b6e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008b72:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8008b74:	68fb      	ldr	r3, [r7, #12]
 8008b76:	f023 0303 	bic.w	r3, r3, #3
 8008b7a:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8008b7c:	683b      	ldr	r3, [r7, #0]
 8008b7e:	681b      	ldr	r3, [r3, #0]
 8008b80:	68fa      	ldr	r2, [r7, #12]
 8008b82:	4313      	orrs	r3, r2
 8008b84:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 8008b86:	697b      	ldr	r3, [r7, #20]
 8008b88:	f023 0302 	bic.w	r3, r3, #2
 8008b8c:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8008b8e:	683b      	ldr	r3, [r7, #0]
 8008b90:	689b      	ldr	r3, [r3, #8]
 8008b92:	697a      	ldr	r2, [r7, #20]
 8008b94:	4313      	orrs	r3, r2
 8008b96:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8008b98:	687b      	ldr	r3, [r7, #4]
 8008b9a:	4a1c      	ldr	r2, [pc, #112]	; (8008c0c <TIM_OC1_SetConfig+0xc8>)
 8008b9c:	4293      	cmp	r3, r2
 8008b9e:	d10c      	bne.n	8008bba <TIM_OC1_SetConfig+0x76>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 8008ba0:	697b      	ldr	r3, [r7, #20]
 8008ba2:	f023 0308 	bic.w	r3, r3, #8
 8008ba6:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8008ba8:	683b      	ldr	r3, [r7, #0]
 8008baa:	68db      	ldr	r3, [r3, #12]
 8008bac:	697a      	ldr	r2, [r7, #20]
 8008bae:	4313      	orrs	r3, r2
 8008bb0:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 8008bb2:	697b      	ldr	r3, [r7, #20]
 8008bb4:	f023 0304 	bic.w	r3, r3, #4
 8008bb8:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008bba:	687b      	ldr	r3, [r7, #4]
 8008bbc:	4a13      	ldr	r2, [pc, #76]	; (8008c0c <TIM_OC1_SetConfig+0xc8>)
 8008bbe:	4293      	cmp	r3, r2
 8008bc0:	d111      	bne.n	8008be6 <TIM_OC1_SetConfig+0xa2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 8008bc2:	693b      	ldr	r3, [r7, #16]
 8008bc4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8008bc8:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8008bca:	693b      	ldr	r3, [r7, #16]
 8008bcc:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8008bd0:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 8008bd2:	683b      	ldr	r3, [r7, #0]
 8008bd4:	695b      	ldr	r3, [r3, #20]
 8008bd6:	693a      	ldr	r2, [r7, #16]
 8008bd8:	4313      	orrs	r3, r2
 8008bda:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8008bdc:	683b      	ldr	r3, [r7, #0]
 8008bde:	699b      	ldr	r3, [r3, #24]
 8008be0:	693a      	ldr	r2, [r7, #16]
 8008be2:	4313      	orrs	r3, r2
 8008be4:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8008be6:	687b      	ldr	r3, [r7, #4]
 8008be8:	693a      	ldr	r2, [r7, #16]
 8008bea:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8008bec:	687b      	ldr	r3, [r7, #4]
 8008bee:	68fa      	ldr	r2, [r7, #12]
 8008bf0:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8008bf2:	683b      	ldr	r3, [r7, #0]
 8008bf4:	685a      	ldr	r2, [r3, #4]
 8008bf6:	687b      	ldr	r3, [r7, #4]
 8008bf8:	635a      	str	r2, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008bfa:	687b      	ldr	r3, [r7, #4]
 8008bfc:	697a      	ldr	r2, [r7, #20]
 8008bfe:	621a      	str	r2, [r3, #32]
}
 8008c00:	bf00      	nop
 8008c02:	371c      	adds	r7, #28
 8008c04:	46bd      	mov	sp, r7
 8008c06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c0a:	4770      	bx	lr
 8008c0c:	40010000 	.word	0x40010000

08008c10 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8008c10:	b480      	push	{r7}
 8008c12:	b087      	sub	sp, #28
 8008c14:	af00      	add	r7, sp, #0
 8008c16:	6078      	str	r0, [r7, #4]
 8008c18:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8008c1a:	687b      	ldr	r3, [r7, #4]
 8008c1c:	6a1b      	ldr	r3, [r3, #32]
 8008c1e:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8008c20:	687b      	ldr	r3, [r7, #4]
 8008c22:	6a1b      	ldr	r3, [r3, #32]
 8008c24:	f023 0210 	bic.w	r2, r3, #16
 8008c28:	687b      	ldr	r3, [r7, #4]
 8008c2a:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008c2c:	687b      	ldr	r3, [r7, #4]
 8008c2e:	685b      	ldr	r3, [r3, #4]
 8008c30:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8008c32:	687b      	ldr	r3, [r7, #4]
 8008c34:	699b      	ldr	r3, [r3, #24]
 8008c36:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 8008c38:	68fb      	ldr	r3, [r7, #12]
 8008c3a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008c3e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8008c40:	68fb      	ldr	r3, [r7, #12]
 8008c42:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008c46:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8008c48:	683b      	ldr	r3, [r7, #0]
 8008c4a:	681b      	ldr	r3, [r3, #0]
 8008c4c:	021b      	lsls	r3, r3, #8
 8008c4e:	68fa      	ldr	r2, [r7, #12]
 8008c50:	4313      	orrs	r3, r2
 8008c52:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8008c54:	697b      	ldr	r3, [r7, #20]
 8008c56:	f023 0320 	bic.w	r3, r3, #32
 8008c5a:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8008c5c:	683b      	ldr	r3, [r7, #0]
 8008c5e:	689b      	ldr	r3, [r3, #8]
 8008c60:	011b      	lsls	r3, r3, #4
 8008c62:	697a      	ldr	r2, [r7, #20]
 8008c64:	4313      	orrs	r3, r2
 8008c66:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8008c68:	687b      	ldr	r3, [r7, #4]
 8008c6a:	4a1e      	ldr	r2, [pc, #120]	; (8008ce4 <TIM_OC2_SetConfig+0xd4>)
 8008c6c:	4293      	cmp	r3, r2
 8008c6e:	d10d      	bne.n	8008c8c <TIM_OC2_SetConfig+0x7c>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 8008c70:	697b      	ldr	r3, [r7, #20]
 8008c72:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008c76:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8008c78:	683b      	ldr	r3, [r7, #0]
 8008c7a:	68db      	ldr	r3, [r3, #12]
 8008c7c:	011b      	lsls	r3, r3, #4
 8008c7e:	697a      	ldr	r2, [r7, #20]
 8008c80:	4313      	orrs	r3, r2
 8008c82:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 8008c84:	697b      	ldr	r3, [r7, #20]
 8008c86:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8008c8a:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008c8c:	687b      	ldr	r3, [r7, #4]
 8008c8e:	4a15      	ldr	r2, [pc, #84]	; (8008ce4 <TIM_OC2_SetConfig+0xd4>)
 8008c90:	4293      	cmp	r3, r2
 8008c92:	d113      	bne.n	8008cbc <TIM_OC2_SetConfig+0xac>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 8008c94:	693b      	ldr	r3, [r7, #16]
 8008c96:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8008c9a:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8008c9c:	693b      	ldr	r3, [r7, #16]
 8008c9e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8008ca2:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 8008ca4:	683b      	ldr	r3, [r7, #0]
 8008ca6:	695b      	ldr	r3, [r3, #20]
 8008ca8:	009b      	lsls	r3, r3, #2
 8008caa:	693a      	ldr	r2, [r7, #16]
 8008cac:	4313      	orrs	r3, r2
 8008cae:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8008cb0:	683b      	ldr	r3, [r7, #0]
 8008cb2:	699b      	ldr	r3, [r3, #24]
 8008cb4:	009b      	lsls	r3, r3, #2
 8008cb6:	693a      	ldr	r2, [r7, #16]
 8008cb8:	4313      	orrs	r3, r2
 8008cba:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8008cbc:	687b      	ldr	r3, [r7, #4]
 8008cbe:	693a      	ldr	r2, [r7, #16]
 8008cc0:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8008cc2:	687b      	ldr	r3, [r7, #4]
 8008cc4:	68fa      	ldr	r2, [r7, #12]
 8008cc6:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 8008cc8:	683b      	ldr	r3, [r7, #0]
 8008cca:	685a      	ldr	r2, [r3, #4]
 8008ccc:	687b      	ldr	r3, [r7, #4]
 8008cce:	639a      	str	r2, [r3, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008cd0:	687b      	ldr	r3, [r7, #4]
 8008cd2:	697a      	ldr	r2, [r7, #20]
 8008cd4:	621a      	str	r2, [r3, #32]
}
 8008cd6:	bf00      	nop
 8008cd8:	371c      	adds	r7, #28
 8008cda:	46bd      	mov	sp, r7
 8008cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ce0:	4770      	bx	lr
 8008ce2:	bf00      	nop
 8008ce4:	40010000 	.word	0x40010000

08008ce8 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8008ce8:	b480      	push	{r7}
 8008cea:	b087      	sub	sp, #28
 8008cec:	af00      	add	r7, sp, #0
 8008cee:	6078      	str	r0, [r7, #4]
 8008cf0:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8008cf2:	687b      	ldr	r3, [r7, #4]
 8008cf4:	6a1b      	ldr	r3, [r3, #32]
 8008cf6:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8008cf8:	687b      	ldr	r3, [r7, #4]
 8008cfa:	6a1b      	ldr	r3, [r3, #32]
 8008cfc:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8008d00:	687b      	ldr	r3, [r7, #4]
 8008d02:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008d04:	687b      	ldr	r3, [r7, #4]
 8008d06:	685b      	ldr	r3, [r3, #4]
 8008d08:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8008d0a:	687b      	ldr	r3, [r7, #4]
 8008d0c:	69db      	ldr	r3, [r3, #28]
 8008d0e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 8008d10:	68fb      	ldr	r3, [r7, #12]
 8008d12:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008d16:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8008d18:	68fb      	ldr	r3, [r7, #12]
 8008d1a:	f023 0303 	bic.w	r3, r3, #3
 8008d1e:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8008d20:	683b      	ldr	r3, [r7, #0]
 8008d22:	681b      	ldr	r3, [r3, #0]
 8008d24:	68fa      	ldr	r2, [r7, #12]
 8008d26:	4313      	orrs	r3, r2
 8008d28:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 8008d2a:	697b      	ldr	r3, [r7, #20]
 8008d2c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8008d30:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8008d32:	683b      	ldr	r3, [r7, #0]
 8008d34:	689b      	ldr	r3, [r3, #8]
 8008d36:	021b      	lsls	r3, r3, #8
 8008d38:	697a      	ldr	r2, [r7, #20]
 8008d3a:	4313      	orrs	r3, r2
 8008d3c:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8008d3e:	687b      	ldr	r3, [r7, #4]
 8008d40:	4a1d      	ldr	r2, [pc, #116]	; (8008db8 <TIM_OC3_SetConfig+0xd0>)
 8008d42:	4293      	cmp	r3, r2
 8008d44:	d10d      	bne.n	8008d62 <TIM_OC3_SetConfig+0x7a>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 8008d46:	697b      	ldr	r3, [r7, #20]
 8008d48:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8008d4c:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8008d4e:	683b      	ldr	r3, [r7, #0]
 8008d50:	68db      	ldr	r3, [r3, #12]
 8008d52:	021b      	lsls	r3, r3, #8
 8008d54:	697a      	ldr	r2, [r7, #20]
 8008d56:	4313      	orrs	r3, r2
 8008d58:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 8008d5a:	697b      	ldr	r3, [r7, #20]
 8008d5c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8008d60:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008d62:	687b      	ldr	r3, [r7, #4]
 8008d64:	4a14      	ldr	r2, [pc, #80]	; (8008db8 <TIM_OC3_SetConfig+0xd0>)
 8008d66:	4293      	cmp	r3, r2
 8008d68:	d113      	bne.n	8008d92 <TIM_OC3_SetConfig+0xaa>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 8008d6a:	693b      	ldr	r3, [r7, #16]
 8008d6c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8008d70:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8008d72:	693b      	ldr	r3, [r7, #16]
 8008d74:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8008d78:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8008d7a:	683b      	ldr	r3, [r7, #0]
 8008d7c:	695b      	ldr	r3, [r3, #20]
 8008d7e:	011b      	lsls	r3, r3, #4
 8008d80:	693a      	ldr	r2, [r7, #16]
 8008d82:	4313      	orrs	r3, r2
 8008d84:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8008d86:	683b      	ldr	r3, [r7, #0]
 8008d88:	699b      	ldr	r3, [r3, #24]
 8008d8a:	011b      	lsls	r3, r3, #4
 8008d8c:	693a      	ldr	r2, [r7, #16]
 8008d8e:	4313      	orrs	r3, r2
 8008d90:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8008d92:	687b      	ldr	r3, [r7, #4]
 8008d94:	693a      	ldr	r2, [r7, #16]
 8008d96:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8008d98:	687b      	ldr	r3, [r7, #4]
 8008d9a:	68fa      	ldr	r2, [r7, #12]
 8008d9c:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8008d9e:	683b      	ldr	r3, [r7, #0]
 8008da0:	685a      	ldr	r2, [r3, #4]
 8008da2:	687b      	ldr	r3, [r7, #4]
 8008da4:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008da6:	687b      	ldr	r3, [r7, #4]
 8008da8:	697a      	ldr	r2, [r7, #20]
 8008daa:	621a      	str	r2, [r3, #32]
}
 8008dac:	bf00      	nop
 8008dae:	371c      	adds	r7, #28
 8008db0:	46bd      	mov	sp, r7
 8008db2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008db6:	4770      	bx	lr
 8008db8:	40010000 	.word	0x40010000

08008dbc <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8008dbc:	b480      	push	{r7}
 8008dbe:	b087      	sub	sp, #28
 8008dc0:	af00      	add	r7, sp, #0
 8008dc2:	6078      	str	r0, [r7, #4]
 8008dc4:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8008dc6:	687b      	ldr	r3, [r7, #4]
 8008dc8:	6a1b      	ldr	r3, [r3, #32]
 8008dca:	613b      	str	r3, [r7, #16]

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8008dcc:	687b      	ldr	r3, [r7, #4]
 8008dce:	6a1b      	ldr	r3, [r3, #32]
 8008dd0:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8008dd4:	687b      	ldr	r3, [r7, #4]
 8008dd6:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008dd8:	687b      	ldr	r3, [r7, #4]
 8008dda:	685b      	ldr	r3, [r3, #4]
 8008ddc:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8008dde:	687b      	ldr	r3, [r7, #4]
 8008de0:	69db      	ldr	r3, [r3, #28]
 8008de2:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 8008de4:	68fb      	ldr	r3, [r7, #12]
 8008de6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008dea:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8008dec:	68fb      	ldr	r3, [r7, #12]
 8008dee:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008df2:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8008df4:	683b      	ldr	r3, [r7, #0]
 8008df6:	681b      	ldr	r3, [r3, #0]
 8008df8:	021b      	lsls	r3, r3, #8
 8008dfa:	68fa      	ldr	r2, [r7, #12]
 8008dfc:	4313      	orrs	r3, r2
 8008dfe:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 8008e00:	693b      	ldr	r3, [r7, #16]
 8008e02:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8008e06:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8008e08:	683b      	ldr	r3, [r7, #0]
 8008e0a:	689b      	ldr	r3, [r3, #8]
 8008e0c:	031b      	lsls	r3, r3, #12
 8008e0e:	693a      	ldr	r2, [r7, #16]
 8008e10:	4313      	orrs	r3, r2
 8008e12:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008e14:	687b      	ldr	r3, [r7, #4]
 8008e16:	4a10      	ldr	r2, [pc, #64]	; (8008e58 <TIM_OC4_SetConfig+0x9c>)
 8008e18:	4293      	cmp	r3, r2
 8008e1a:	d109      	bne.n	8008e30 <TIM_OC4_SetConfig+0x74>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8008e1c:	697b      	ldr	r3, [r7, #20]
 8008e1e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8008e22:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8008e24:	683b      	ldr	r3, [r7, #0]
 8008e26:	695b      	ldr	r3, [r3, #20]
 8008e28:	019b      	lsls	r3, r3, #6
 8008e2a:	697a      	ldr	r2, [r7, #20]
 8008e2c:	4313      	orrs	r3, r2
 8008e2e:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8008e30:	687b      	ldr	r3, [r7, #4]
 8008e32:	697a      	ldr	r2, [r7, #20]
 8008e34:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8008e36:	687b      	ldr	r3, [r7, #4]
 8008e38:	68fa      	ldr	r2, [r7, #12]
 8008e3a:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8008e3c:	683b      	ldr	r3, [r7, #0]
 8008e3e:	685a      	ldr	r2, [r3, #4]
 8008e40:	687b      	ldr	r3, [r7, #4]
 8008e42:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008e44:	687b      	ldr	r3, [r7, #4]
 8008e46:	693a      	ldr	r2, [r7, #16]
 8008e48:	621a      	str	r2, [r3, #32]
}
 8008e4a:	bf00      	nop
 8008e4c:	371c      	adds	r7, #28
 8008e4e:	46bd      	mov	sp, r7
 8008e50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e54:	4770      	bx	lr
 8008e56:	bf00      	nop
 8008e58:	40010000 	.word	0x40010000

08008e5c <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8008e5c:	b480      	push	{r7}
 8008e5e:	b087      	sub	sp, #28
 8008e60:	af00      	add	r7, sp, #0
 8008e62:	60f8      	str	r0, [r7, #12]
 8008e64:	60b9      	str	r1, [r7, #8]
 8008e66:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8008e68:	68fb      	ldr	r3, [r7, #12]
 8008e6a:	6a1b      	ldr	r3, [r3, #32]
 8008e6c:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8008e6e:	68fb      	ldr	r3, [r7, #12]
 8008e70:	6a1b      	ldr	r3, [r3, #32]
 8008e72:	f023 0201 	bic.w	r2, r3, #1
 8008e76:	68fb      	ldr	r3, [r7, #12]
 8008e78:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8008e7a:	68fb      	ldr	r3, [r7, #12]
 8008e7c:	699b      	ldr	r3, [r3, #24]
 8008e7e:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8008e80:	693b      	ldr	r3, [r7, #16]
 8008e82:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8008e86:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8008e88:	687b      	ldr	r3, [r7, #4]
 8008e8a:	011b      	lsls	r3, r3, #4
 8008e8c:	693a      	ldr	r2, [r7, #16]
 8008e8e:	4313      	orrs	r3, r2
 8008e90:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8008e92:	697b      	ldr	r3, [r7, #20]
 8008e94:	f023 030a 	bic.w	r3, r3, #10
 8008e98:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8008e9a:	697a      	ldr	r2, [r7, #20]
 8008e9c:	68bb      	ldr	r3, [r7, #8]
 8008e9e:	4313      	orrs	r3, r2
 8008ea0:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8008ea2:	68fb      	ldr	r3, [r7, #12]
 8008ea4:	693a      	ldr	r2, [r7, #16]
 8008ea6:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8008ea8:	68fb      	ldr	r3, [r7, #12]
 8008eaa:	697a      	ldr	r2, [r7, #20]
 8008eac:	621a      	str	r2, [r3, #32]
}
 8008eae:	bf00      	nop
 8008eb0:	371c      	adds	r7, #28
 8008eb2:	46bd      	mov	sp, r7
 8008eb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008eb8:	4770      	bx	lr

08008eba <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8008eba:	b480      	push	{r7}
 8008ebc:	b087      	sub	sp, #28
 8008ebe:	af00      	add	r7, sp, #0
 8008ec0:	60f8      	str	r0, [r7, #12]
 8008ec2:	60b9      	str	r1, [r7, #8]
 8008ec4:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  tmpccer = TIMx->CCER;
 8008ec6:	68fb      	ldr	r3, [r7, #12]
 8008ec8:	6a1b      	ldr	r3, [r3, #32]
 8008eca:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8008ecc:	68fb      	ldr	r3, [r7, #12]
 8008ece:	6a1b      	ldr	r3, [r3, #32]
 8008ed0:	f023 0210 	bic.w	r2, r3, #16
 8008ed4:	68fb      	ldr	r3, [r7, #12]
 8008ed6:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8008ed8:	68fb      	ldr	r3, [r7, #12]
 8008eda:	699b      	ldr	r3, [r3, #24]
 8008edc:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8008ede:	693b      	ldr	r3, [r7, #16]
 8008ee0:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8008ee4:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8008ee6:	687b      	ldr	r3, [r7, #4]
 8008ee8:	031b      	lsls	r3, r3, #12
 8008eea:	693a      	ldr	r2, [r7, #16]
 8008eec:	4313      	orrs	r3, r2
 8008eee:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8008ef0:	697b      	ldr	r3, [r7, #20]
 8008ef2:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8008ef6:	617b      	str	r3, [r7, #20]
  tmpccer |= (TIM_ICPolarity << 4U);
 8008ef8:	68bb      	ldr	r3, [r7, #8]
 8008efa:	011b      	lsls	r3, r3, #4
 8008efc:	697a      	ldr	r2, [r7, #20]
 8008efe:	4313      	orrs	r3, r2
 8008f00:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8008f02:	68fb      	ldr	r3, [r7, #12]
 8008f04:	693a      	ldr	r2, [r7, #16]
 8008f06:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8008f08:	68fb      	ldr	r3, [r7, #12]
 8008f0a:	697a      	ldr	r2, [r7, #20]
 8008f0c:	621a      	str	r2, [r3, #32]
}
 8008f0e:	bf00      	nop
 8008f10:	371c      	adds	r7, #28
 8008f12:	46bd      	mov	sp, r7
 8008f14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f18:	4770      	bx	lr

08008f1a <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8008f1a:	b480      	push	{r7}
 8008f1c:	b085      	sub	sp, #20
 8008f1e:	af00      	add	r7, sp, #0
 8008f20:	6078      	str	r0, [r7, #4]
 8008f22:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8008f24:	687b      	ldr	r3, [r7, #4]
 8008f26:	689b      	ldr	r3, [r3, #8]
 8008f28:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8008f2a:	68fb      	ldr	r3, [r7, #12]
 8008f2c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008f30:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8008f32:	683a      	ldr	r2, [r7, #0]
 8008f34:	68fb      	ldr	r3, [r7, #12]
 8008f36:	4313      	orrs	r3, r2
 8008f38:	f043 0307 	orr.w	r3, r3, #7
 8008f3c:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8008f3e:	687b      	ldr	r3, [r7, #4]
 8008f40:	68fa      	ldr	r2, [r7, #12]
 8008f42:	609a      	str	r2, [r3, #8]
}
 8008f44:	bf00      	nop
 8008f46:	3714      	adds	r7, #20
 8008f48:	46bd      	mov	sp, r7
 8008f4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f4e:	4770      	bx	lr

08008f50 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8008f50:	b480      	push	{r7}
 8008f52:	b087      	sub	sp, #28
 8008f54:	af00      	add	r7, sp, #0
 8008f56:	60f8      	str	r0, [r7, #12]
 8008f58:	60b9      	str	r1, [r7, #8]
 8008f5a:	607a      	str	r2, [r7, #4]
 8008f5c:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8008f5e:	68fb      	ldr	r3, [r7, #12]
 8008f60:	689b      	ldr	r3, [r3, #8]
 8008f62:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8008f64:	697b      	ldr	r3, [r7, #20]
 8008f66:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8008f6a:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8008f6c:	683b      	ldr	r3, [r7, #0]
 8008f6e:	021a      	lsls	r2, r3, #8
 8008f70:	687b      	ldr	r3, [r7, #4]
 8008f72:	431a      	orrs	r2, r3
 8008f74:	68bb      	ldr	r3, [r7, #8]
 8008f76:	4313      	orrs	r3, r2
 8008f78:	697a      	ldr	r2, [r7, #20]
 8008f7a:	4313      	orrs	r3, r2
 8008f7c:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8008f7e:	68fb      	ldr	r3, [r7, #12]
 8008f80:	697a      	ldr	r2, [r7, #20]
 8008f82:	609a      	str	r2, [r3, #8]
}
 8008f84:	bf00      	nop
 8008f86:	371c      	adds	r7, #28
 8008f88:	46bd      	mov	sp, r7
 8008f8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f8e:	4770      	bx	lr

08008f90 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8008f90:	b480      	push	{r7}
 8008f92:	b087      	sub	sp, #28
 8008f94:	af00      	add	r7, sp, #0
 8008f96:	60f8      	str	r0, [r7, #12]
 8008f98:	60b9      	str	r1, [r7, #8]
 8008f9a:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8008f9c:	68bb      	ldr	r3, [r7, #8]
 8008f9e:	f003 031f 	and.w	r3, r3, #31
 8008fa2:	2201      	movs	r2, #1
 8008fa4:	fa02 f303 	lsl.w	r3, r2, r3
 8008fa8:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8008faa:	68fb      	ldr	r3, [r7, #12]
 8008fac:	6a1a      	ldr	r2, [r3, #32]
 8008fae:	697b      	ldr	r3, [r7, #20]
 8008fb0:	43db      	mvns	r3, r3
 8008fb2:	401a      	ands	r2, r3
 8008fb4:	68fb      	ldr	r3, [r7, #12]
 8008fb6:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8008fb8:	68fb      	ldr	r3, [r7, #12]
 8008fba:	6a1a      	ldr	r2, [r3, #32]
 8008fbc:	68bb      	ldr	r3, [r7, #8]
 8008fbe:	f003 031f 	and.w	r3, r3, #31
 8008fc2:	6879      	ldr	r1, [r7, #4]
 8008fc4:	fa01 f303 	lsl.w	r3, r1, r3
 8008fc8:	431a      	orrs	r2, r3
 8008fca:	68fb      	ldr	r3, [r7, #12]
 8008fcc:	621a      	str	r2, [r3, #32]
}
 8008fce:	bf00      	nop
 8008fd0:	371c      	adds	r7, #28
 8008fd2:	46bd      	mov	sp, r7
 8008fd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fd8:	4770      	bx	lr
	...

08008fdc <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 8008fdc:	b480      	push	{r7}
 8008fde:	b085      	sub	sp, #20
 8008fe0:	af00      	add	r7, sp, #0
 8008fe2:	6078      	str	r0, [r7, #4]
 8008fe4:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8008fe6:	687b      	ldr	r3, [r7, #4]
 8008fe8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008fec:	2b01      	cmp	r3, #1
 8008fee:	d101      	bne.n	8008ff4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8008ff0:	2302      	movs	r3, #2
 8008ff2:	e050      	b.n	8009096 <HAL_TIMEx_MasterConfigSynchronization+0xba>
 8008ff4:	687b      	ldr	r3, [r7, #4]
 8008ff6:	2201      	movs	r2, #1
 8008ff8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008ffc:	687b      	ldr	r3, [r7, #4]
 8008ffe:	2202      	movs	r2, #2
 8009000:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8009004:	687b      	ldr	r3, [r7, #4]
 8009006:	681b      	ldr	r3, [r3, #0]
 8009008:	685b      	ldr	r3, [r3, #4]
 800900a:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 800900c:	687b      	ldr	r3, [r7, #4]
 800900e:	681b      	ldr	r3, [r3, #0]
 8009010:	689b      	ldr	r3, [r3, #8]
 8009012:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8009014:	68fb      	ldr	r3, [r7, #12]
 8009016:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800901a:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800901c:	683b      	ldr	r3, [r7, #0]
 800901e:	681b      	ldr	r3, [r3, #0]
 8009020:	68fa      	ldr	r2, [r7, #12]
 8009022:	4313      	orrs	r3, r2
 8009024:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8009026:	687b      	ldr	r3, [r7, #4]
 8009028:	681b      	ldr	r3, [r3, #0]
 800902a:	68fa      	ldr	r2, [r7, #12]
 800902c:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800902e:	687b      	ldr	r3, [r7, #4]
 8009030:	681b      	ldr	r3, [r3, #0]
 8009032:	4a1c      	ldr	r2, [pc, #112]	; (80090a4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 8009034:	4293      	cmp	r3, r2
 8009036:	d018      	beq.n	800906a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8009038:	687b      	ldr	r3, [r7, #4]
 800903a:	681b      	ldr	r3, [r3, #0]
 800903c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009040:	d013      	beq.n	800906a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8009042:	687b      	ldr	r3, [r7, #4]
 8009044:	681b      	ldr	r3, [r3, #0]
 8009046:	4a18      	ldr	r2, [pc, #96]	; (80090a8 <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 8009048:	4293      	cmp	r3, r2
 800904a:	d00e      	beq.n	800906a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800904c:	687b      	ldr	r3, [r7, #4]
 800904e:	681b      	ldr	r3, [r3, #0]
 8009050:	4a16      	ldr	r2, [pc, #88]	; (80090ac <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8009052:	4293      	cmp	r3, r2
 8009054:	d009      	beq.n	800906a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8009056:	687b      	ldr	r3, [r7, #4]
 8009058:	681b      	ldr	r3, [r3, #0]
 800905a:	4a15      	ldr	r2, [pc, #84]	; (80090b0 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 800905c:	4293      	cmp	r3, r2
 800905e:	d004      	beq.n	800906a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8009060:	687b      	ldr	r3, [r7, #4]
 8009062:	681b      	ldr	r3, [r3, #0]
 8009064:	4a13      	ldr	r2, [pc, #76]	; (80090b4 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 8009066:	4293      	cmp	r3, r2
 8009068:	d10c      	bne.n	8009084 <HAL_TIMEx_MasterConfigSynchronization+0xa8>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 800906a:	68bb      	ldr	r3, [r7, #8]
 800906c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8009070:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8009072:	683b      	ldr	r3, [r7, #0]
 8009074:	685b      	ldr	r3, [r3, #4]
 8009076:	68ba      	ldr	r2, [r7, #8]
 8009078:	4313      	orrs	r3, r2
 800907a:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800907c:	687b      	ldr	r3, [r7, #4]
 800907e:	681b      	ldr	r3, [r3, #0]
 8009080:	68ba      	ldr	r2, [r7, #8]
 8009082:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8009084:	687b      	ldr	r3, [r7, #4]
 8009086:	2201      	movs	r2, #1
 8009088:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800908c:	687b      	ldr	r3, [r7, #4]
 800908e:	2200      	movs	r2, #0
 8009090:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8009094:	2300      	movs	r3, #0
}
 8009096:	4618      	mov	r0, r3
 8009098:	3714      	adds	r7, #20
 800909a:	46bd      	mov	sp, r7
 800909c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090a0:	4770      	bx	lr
 80090a2:	bf00      	nop
 80090a4:	40010000 	.word	0x40010000
 80090a8:	40000400 	.word	0x40000400
 80090ac:	40000800 	.word	0x40000800
 80090b0:	40000c00 	.word	0x40000c00
 80090b4:	40014000 	.word	0x40014000

080090b8 <HAL_TIMEx_CommutCallback>:
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 80090b8:	b480      	push	{r7}
 80090ba:	b083      	sub	sp, #12
 80090bc:	af00      	add	r7, sp, #0
 80090be:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 80090c0:	bf00      	nop
 80090c2:	370c      	adds	r7, #12
 80090c4:	46bd      	mov	sp, r7
 80090c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090ca:	4770      	bx	lr

080090cc <HAL_TIMEx_BreakCallback>:
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 80090cc:	b480      	push	{r7}
 80090ce:	b083      	sub	sp, #12
 80090d0:	af00      	add	r7, sp, #0
 80090d2:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 80090d4:	bf00      	nop
 80090d6:	370c      	adds	r7, #12
 80090d8:	46bd      	mov	sp, r7
 80090da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090de:	4770      	bx	lr

080090e0 <LL_ADC_SetCommonClock>:
{
 80090e0:	b480      	push	{r7}
 80090e2:	b083      	sub	sp, #12
 80090e4:	af00      	add	r7, sp, #0
 80090e6:	6078      	str	r0, [r7, #4]
 80090e8:	6039      	str	r1, [r7, #0]
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_ADCPRE, CommonClock);
 80090ea:	687b      	ldr	r3, [r7, #4]
 80090ec:	685b      	ldr	r3, [r3, #4]
 80090ee:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80090f2:	683b      	ldr	r3, [r7, #0]
 80090f4:	431a      	orrs	r2, r3
 80090f6:	687b      	ldr	r3, [r7, #4]
 80090f8:	605a      	str	r2, [r3, #4]
}
 80090fa:	bf00      	nop
 80090fc:	370c      	adds	r7, #12
 80090fe:	46bd      	mov	sp, r7
 8009100:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009104:	4770      	bx	lr

08009106 <LL_ADC_REG_SetSequencerLength>:
{
 8009106:	b480      	push	{r7}
 8009108:	b083      	sub	sp, #12
 800910a:	af00      	add	r7, sp, #0
 800910c:	6078      	str	r0, [r7, #4]
 800910e:	6039      	str	r1, [r7, #0]
  MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
 8009110:	687b      	ldr	r3, [r7, #4]
 8009112:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009114:	f423 0270 	bic.w	r2, r3, #15728640	; 0xf00000
 8009118:	683b      	ldr	r3, [r7, #0]
 800911a:	431a      	orrs	r2, r3
 800911c:	687b      	ldr	r3, [r7, #4]
 800911e:	62da      	str	r2, [r3, #44]	; 0x2c
}
 8009120:	bf00      	nop
 8009122:	370c      	adds	r7, #12
 8009124:	46bd      	mov	sp, r7
 8009126:	f85d 7b04 	ldr.w	r7, [sp], #4
 800912a:	4770      	bx	lr

0800912c <LL_ADC_IsEnabled>:
{
 800912c:	b480      	push	{r7}
 800912e:	b083      	sub	sp, #12
 8009130:	af00      	add	r7, sp, #0
 8009132:	6078      	str	r0, [r7, #4]
  return (READ_BIT(ADCx->CR2, ADC_CR2_ADON) == (ADC_CR2_ADON));
 8009134:	687b      	ldr	r3, [r7, #4]
 8009136:	689b      	ldr	r3, [r3, #8]
 8009138:	f003 0301 	and.w	r3, r3, #1
 800913c:	2b01      	cmp	r3, #1
 800913e:	bf0c      	ite	eq
 8009140:	2301      	moveq	r3, #1
 8009142:	2300      	movne	r3, #0
 8009144:	b2db      	uxtb	r3, r3
}
 8009146:	4618      	mov	r0, r3
 8009148:	370c      	adds	r7, #12
 800914a:	46bd      	mov	sp, r7
 800914c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009150:	4770      	bx	lr
	...

08009154 <LL_ADC_CommonInit>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: ADC common registers are initialized
  *          - ERROR: ADC common registers are not initialized
  */
ErrorStatus LL_ADC_CommonInit(ADC_Common_TypeDef *ADCxy_COMMON, LL_ADC_CommonInitTypeDef *ADC_CommonInitStruct)
{
 8009154:	b580      	push	{r7, lr}
 8009156:	b084      	sub	sp, #16
 8009158:	af00      	add	r7, sp, #0
 800915a:	6078      	str	r0, [r7, #4]
 800915c:	6039      	str	r1, [r7, #0]
  ErrorStatus status = SUCCESS;
 800915e:	2300      	movs	r3, #0
 8009160:	73fb      	strb	r3, [r7, #15]
  /* Note: Hardware constraint (refer to description of functions             */
  /*       "LL_ADC_SetCommonXXX()" and "LL_ADC_SetMultiXXX()"):               */
  /*       On this STM32 series, setting of these features is conditioned to  */
  /*       ADC state:                                                         */
  /*       All ADC instances of the ADC common group must be disabled.        */
  if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(ADCxy_COMMON) == 0UL)
 8009162:	480a      	ldr	r0, [pc, #40]	; (800918c <LL_ADC_CommonInit+0x38>)
 8009164:	f7ff ffe2 	bl	800912c <LL_ADC_IsEnabled>
 8009168:	4603      	mov	r3, r0
 800916a:	2b00      	cmp	r3, #0
 800916c:	d106      	bne.n	800917c <LL_ADC_CommonInit+0x28>
                 ADC_CommonInitStruct->CommonClock
                 | LL_ADC_MULTI_INDEPENDENT
                );
    }
#else
    LL_ADC_SetCommonClock(ADCxy_COMMON, ADC_CommonInitStruct->CommonClock);
 800916e:	683b      	ldr	r3, [r7, #0]
 8009170:	681b      	ldr	r3, [r3, #0]
 8009172:	4619      	mov	r1, r3
 8009174:	6878      	ldr	r0, [r7, #4]
 8009176:	f7ff ffb3 	bl	80090e0 <LL_ADC_SetCommonClock>
 800917a:	e001      	b.n	8009180 <LL_ADC_CommonInit+0x2c>
  }
  else
  {
    /* Initialization error: One or several ADC instances belonging to        */
    /* the same ADC common instance are not disabled.                         */
    status = ERROR;
 800917c:	2301      	movs	r3, #1
 800917e:	73fb      	strb	r3, [r7, #15]
  }

  return status;
 8009180:	7bfb      	ldrb	r3, [r7, #15]
}
 8009182:	4618      	mov	r0, r3
 8009184:	3710      	adds	r7, #16
 8009186:	46bd      	mov	sp, r7
 8009188:	bd80      	pop	{r7, pc}
 800918a:	bf00      	nop
 800918c:	40012000 	.word	0x40012000

08009190 <LL_ADC_Init>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: ADC registers are initialized
  *          - ERROR: ADC registers are not initialized
  */
ErrorStatus LL_ADC_Init(ADC_TypeDef *ADCx, LL_ADC_InitTypeDef *ADC_InitStruct)
{
 8009190:	b580      	push	{r7, lr}
 8009192:	b084      	sub	sp, #16
 8009194:	af00      	add	r7, sp, #0
 8009196:	6078      	str	r0, [r7, #4]
 8009198:	6039      	str	r1, [r7, #0]
  ErrorStatus status = SUCCESS;
 800919a:	2300      	movs	r3, #0
 800919c:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_LL_ADC_DATA_ALIGN(ADC_InitStruct->DataAlignment));
  assert_param(IS_LL_ADC_SCAN_SELECTION(ADC_InitStruct->SequencersScanMode));

  /* Note: Hardware constraint (refer to description of this function):       */
  /*       ADC instance must be disabled.                                     */
  if (LL_ADC_IsEnabled(ADCx) == 0UL)
 800919e:	6878      	ldr	r0, [r7, #4]
 80091a0:	f7ff ffc4 	bl	800912c <LL_ADC_IsEnabled>
 80091a4:	4603      	mov	r3, r0
 80091a6:	2b00      	cmp	r3, #0
 80091a8:	d117      	bne.n	80091da <LL_ADC_Init+0x4a>
  {
    /* Configuration of ADC hierarchical scope:                               */
    /*  - ADC instance                                                        */
    /*    - Set ADC data resolution                                           */
    /*    - Set ADC conversion data alignment                                 */
    MODIFY_REG(ADCx->CR1,
 80091aa:	687b      	ldr	r3, [r7, #4]
 80091ac:	685b      	ldr	r3, [r3, #4]
 80091ae:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 80091b2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80091b6:	683a      	ldr	r2, [r7, #0]
 80091b8:	6811      	ldr	r1, [r2, #0]
 80091ba:	683a      	ldr	r2, [r7, #0]
 80091bc:	6892      	ldr	r2, [r2, #8]
 80091be:	430a      	orrs	r2, r1
 80091c0:	431a      	orrs	r2, r3
 80091c2:	687b      	ldr	r3, [r7, #4]
 80091c4:	605a      	str	r2, [r3, #4]
               ,
               ADC_InitStruct->Resolution
               | ADC_InitStruct->SequencersScanMode
              );

    MODIFY_REG(ADCx->CR2,
 80091c6:	687b      	ldr	r3, [r7, #4]
 80091c8:	689b      	ldr	r3, [r3, #8]
 80091ca:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 80091ce:	683b      	ldr	r3, [r7, #0]
 80091d0:	685b      	ldr	r3, [r3, #4]
 80091d2:	431a      	orrs	r2, r3
 80091d4:	687b      	ldr	r3, [r7, #4]
 80091d6:	609a      	str	r2, [r3, #8]
 80091d8:	e001      	b.n	80091de <LL_ADC_Init+0x4e>

  }
  else
  {
    /* Initialization error: ADC instance is not disabled. */
    status = ERROR;
 80091da:	2301      	movs	r3, #1
 80091dc:	73fb      	strb	r3, [r7, #15]
  }
  return status;
 80091de:	7bfb      	ldrb	r3, [r7, #15]
}
 80091e0:	4618      	mov	r0, r3
 80091e2:	3710      	adds	r7, #16
 80091e4:	46bd      	mov	sp, r7
 80091e6:	bd80      	pop	{r7, pc}

080091e8 <LL_ADC_REG_Init>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: ADC registers are initialized
  *          - ERROR: ADC registers are not initialized
  */
ErrorStatus LL_ADC_REG_Init(ADC_TypeDef *ADCx, LL_ADC_REG_InitTypeDef *ADC_REG_InitStruct)
{
 80091e8:	b580      	push	{r7, lr}
 80091ea:	b084      	sub	sp, #16
 80091ec:	af00      	add	r7, sp, #0
 80091ee:	6078      	str	r0, [r7, #4]
 80091f0:	6039      	str	r1, [r7, #0]
  ErrorStatus status = SUCCESS;
 80091f2:	2300      	movs	r3, #0
 80091f4:	73fb      	strb	r3, [r7, #15]
  assert_param((ADC_REG_InitStruct->ContinuousMode == LL_ADC_REG_CONV_SINGLE)
               || (ADC_REG_InitStruct->SequencerDiscont == LL_ADC_REG_SEQ_DISCONT_DISABLE));

  /* Note: Hardware constraint (refer to description of this function):       */
  /*       ADC instance must be disabled.                                     */
  if (LL_ADC_IsEnabled(ADCx) == 0UL)
 80091f6:	6878      	ldr	r0, [r7, #4]
 80091f8:	f7ff ff98 	bl	800912c <LL_ADC_IsEnabled>
 80091fc:	4603      	mov	r3, r0
 80091fe:	2b00      	cmp	r3, #0
 8009200:	d12b      	bne.n	800925a <LL_ADC_REG_Init+0x72>
    /*    - Set ADC group regular conversion data transfer: no transfer or    */
    /*      transfer by DMA, and DMA requests mode                            */
    /* Note: On this STM32 series, ADC trigger edge is set when starting      */
    /*       ADC conversion.                                                  */
    /*       Refer to function @ref LL_ADC_REG_StartConversionExtTrig().      */
    if (ADC_REG_InitStruct->SequencerLength != LL_ADC_REG_SEQ_SCAN_DISABLE)
 8009202:	683b      	ldr	r3, [r7, #0]
 8009204:	685b      	ldr	r3, [r3, #4]
 8009206:	2b00      	cmp	r3, #0
 8009208:	d009      	beq.n	800921e <LL_ADC_REG_Init+0x36>
    {
      MODIFY_REG(ADCx->CR1,
 800920a:	687b      	ldr	r3, [r7, #4]
 800920c:	685b      	ldr	r3, [r3, #4]
 800920e:	f423 4268 	bic.w	r2, r3, #59392	; 0xe800
 8009212:	683b      	ldr	r3, [r7, #0]
 8009214:	689b      	ldr	r3, [r3, #8]
 8009216:	431a      	orrs	r2, r3
 8009218:	687b      	ldr	r3, [r7, #4]
 800921a:	605a      	str	r2, [r3, #4]
 800921c:	e005      	b.n	800922a <LL_ADC_REG_Init+0x42>
                 ADC_REG_InitStruct->SequencerDiscont
                );
    }
    else
    {
      MODIFY_REG(ADCx->CR1,
 800921e:	687b      	ldr	r3, [r7, #4]
 8009220:	685b      	ldr	r3, [r3, #4]
 8009222:	f423 4268 	bic.w	r2, r3, #59392	; 0xe800
 8009226:	687b      	ldr	r3, [r7, #4]
 8009228:	605a      	str	r2, [r3, #4]
                 ,
                 LL_ADC_REG_SEQ_DISCONT_DISABLE
                );
    }

    MODIFY_REG(ADCx->CR2,
 800922a:	687b      	ldr	r3, [r7, #4]
 800922c:	689a      	ldr	r2, [r3, #8]
 800922e:	4b0e      	ldr	r3, [pc, #56]	; (8009268 <LL_ADC_REG_Init+0x80>)
 8009230:	4013      	ands	r3, r2
 8009232:	683a      	ldr	r2, [r7, #0]
 8009234:	6812      	ldr	r2, [r2, #0]
 8009236:	f002 6170 	and.w	r1, r2, #251658240	; 0xf000000
 800923a:	683a      	ldr	r2, [r7, #0]
 800923c:	68d2      	ldr	r2, [r2, #12]
 800923e:	4311      	orrs	r1, r2
 8009240:	683a      	ldr	r2, [r7, #0]
 8009242:	6912      	ldr	r2, [r2, #16]
 8009244:	430a      	orrs	r2, r1
 8009246:	431a      	orrs	r2, r3
 8009248:	687b      	ldr	r3, [r7, #4]
 800924a:	609a      	str	r2, [r3, #8]
    /* Note: If ADC instance feature scan mode is disabled                    */
    /*       (refer to  ADC instance initialization structure                 */
    /*       parameter @ref SequencersScanMode                                */
    /*       or function @ref LL_ADC_SetSequencersScanMode() ),               */
    /*       this parameter is discarded.                                     */
    LL_ADC_REG_SetSequencerLength(ADCx, ADC_REG_InitStruct->SequencerLength);
 800924c:	683b      	ldr	r3, [r7, #0]
 800924e:	685b      	ldr	r3, [r3, #4]
 8009250:	4619      	mov	r1, r3
 8009252:	6878      	ldr	r0, [r7, #4]
 8009254:	f7ff ff57 	bl	8009106 <LL_ADC_REG_SetSequencerLength>
 8009258:	e001      	b.n	800925e <LL_ADC_REG_Init+0x76>
  }
  else
  {
    /* Initialization error: ADC instance is not disabled. */
    status = ERROR;
 800925a:	2301      	movs	r3, #1
 800925c:	73fb      	strb	r3, [r7, #15]
  }
  return status;
 800925e:	7bfb      	ldrb	r3, [r7, #15]
}
 8009260:	4618      	mov	r0, r3
 8009262:	3710      	adds	r7, #16
 8009264:	46bd      	mov	sp, r7
 8009266:	bd80      	pop	{r7, pc}
 8009268:	c0fffcfd 	.word	0xc0fffcfd

0800926c <LL_GPIO_SetPinMode>:
  *         @arg @ref LL_GPIO_MODE_ALTERNATE
  *         @arg @ref LL_GPIO_MODE_ANALOG
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
{
 800926c:	b480      	push	{r7}
 800926e:	b08b      	sub	sp, #44	; 0x2c
 8009270:	af00      	add	r7, sp, #0
 8009272:	60f8      	str	r0, [r7, #12]
 8009274:	60b9      	str	r1, [r7, #8]
 8009276:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->MODER, (GPIO_MODER_MODER0 << (POSITION_VAL(Pin) * 2U)), (Mode << (POSITION_VAL(Pin) * 2U)));
 8009278:	68fb      	ldr	r3, [r7, #12]
 800927a:	681a      	ldr	r2, [r3, #0]
 800927c:	68bb      	ldr	r3, [r7, #8]
 800927e:	617b      	str	r3, [r7, #20]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8009280:	697b      	ldr	r3, [r7, #20]
 8009282:	fa93 f3a3 	rbit	r3, r3
 8009286:	613b      	str	r3, [r7, #16]
  return result;
 8009288:	693b      	ldr	r3, [r7, #16]
 800928a:	61bb      	str	r3, [r7, #24]
  if (value == 0U)
 800928c:	69bb      	ldr	r3, [r7, #24]
 800928e:	2b00      	cmp	r3, #0
 8009290:	d101      	bne.n	8009296 <LL_GPIO_SetPinMode+0x2a>
    return 32U;
 8009292:	2320      	movs	r3, #32
 8009294:	e003      	b.n	800929e <LL_GPIO_SetPinMode+0x32>
  return __builtin_clz(value);
 8009296:	69bb      	ldr	r3, [r7, #24]
 8009298:	fab3 f383 	clz	r3, r3
 800929c:	b2db      	uxtb	r3, r3
 800929e:	005b      	lsls	r3, r3, #1
 80092a0:	2103      	movs	r1, #3
 80092a2:	fa01 f303 	lsl.w	r3, r1, r3
 80092a6:	43db      	mvns	r3, r3
 80092a8:	401a      	ands	r2, r3
 80092aa:	68bb      	ldr	r3, [r7, #8]
 80092ac:	623b      	str	r3, [r7, #32]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80092ae:	6a3b      	ldr	r3, [r7, #32]
 80092b0:	fa93 f3a3 	rbit	r3, r3
 80092b4:	61fb      	str	r3, [r7, #28]
  return result;
 80092b6:	69fb      	ldr	r3, [r7, #28]
 80092b8:	627b      	str	r3, [r7, #36]	; 0x24
  if (value == 0U)
 80092ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80092bc:	2b00      	cmp	r3, #0
 80092be:	d101      	bne.n	80092c4 <LL_GPIO_SetPinMode+0x58>
    return 32U;
 80092c0:	2320      	movs	r3, #32
 80092c2:	e003      	b.n	80092cc <LL_GPIO_SetPinMode+0x60>
  return __builtin_clz(value);
 80092c4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80092c6:	fab3 f383 	clz	r3, r3
 80092ca:	b2db      	uxtb	r3, r3
 80092cc:	005b      	lsls	r3, r3, #1
 80092ce:	6879      	ldr	r1, [r7, #4]
 80092d0:	fa01 f303 	lsl.w	r3, r1, r3
 80092d4:	431a      	orrs	r2, r3
 80092d6:	68fb      	ldr	r3, [r7, #12]
 80092d8:	601a      	str	r2, [r3, #0]
}
 80092da:	bf00      	nop
 80092dc:	372c      	adds	r7, #44	; 0x2c
 80092de:	46bd      	mov	sp, r7
 80092e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092e4:	4770      	bx	lr

080092e6 <LL_GPIO_SetPinOutputType>:
  *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
  *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t PinMask, uint32_t OutputType)
{
 80092e6:	b480      	push	{r7}
 80092e8:	b085      	sub	sp, #20
 80092ea:	af00      	add	r7, sp, #0
 80092ec:	60f8      	str	r0, [r7, #12]
 80092ee:	60b9      	str	r1, [r7, #8]
 80092f0:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 80092f2:	68fb      	ldr	r3, [r7, #12]
 80092f4:	685a      	ldr	r2, [r3, #4]
 80092f6:	68bb      	ldr	r3, [r7, #8]
 80092f8:	43db      	mvns	r3, r3
 80092fa:	401a      	ands	r2, r3
 80092fc:	68bb      	ldr	r3, [r7, #8]
 80092fe:	6879      	ldr	r1, [r7, #4]
 8009300:	fb01 f303 	mul.w	r3, r1, r3
 8009304:	431a      	orrs	r2, r3
 8009306:	68fb      	ldr	r3, [r7, #12]
 8009308:	605a      	str	r2, [r3, #4]
}
 800930a:	bf00      	nop
 800930c:	3714      	adds	r7, #20
 800930e:	46bd      	mov	sp, r7
 8009310:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009314:	4770      	bx	lr

08009316 <LL_GPIO_SetPinSpeed>:
  *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
  *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
{
 8009316:	b480      	push	{r7}
 8009318:	b08b      	sub	sp, #44	; 0x2c
 800931a:	af00      	add	r7, sp, #0
 800931c:	60f8      	str	r0, [r7, #12]
 800931e:	60b9      	str	r1, [r7, #8]
 8009320:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->OSPEEDR, (GPIO_OSPEEDER_OSPEEDR0 << (POSITION_VAL(Pin) * 2U)),
 8009322:	68fb      	ldr	r3, [r7, #12]
 8009324:	689a      	ldr	r2, [r3, #8]
 8009326:	68bb      	ldr	r3, [r7, #8]
 8009328:	617b      	str	r3, [r7, #20]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800932a:	697b      	ldr	r3, [r7, #20]
 800932c:	fa93 f3a3 	rbit	r3, r3
 8009330:	613b      	str	r3, [r7, #16]
  return result;
 8009332:	693b      	ldr	r3, [r7, #16]
 8009334:	61bb      	str	r3, [r7, #24]
  if (value == 0U)
 8009336:	69bb      	ldr	r3, [r7, #24]
 8009338:	2b00      	cmp	r3, #0
 800933a:	d101      	bne.n	8009340 <LL_GPIO_SetPinSpeed+0x2a>
    return 32U;
 800933c:	2320      	movs	r3, #32
 800933e:	e003      	b.n	8009348 <LL_GPIO_SetPinSpeed+0x32>
  return __builtin_clz(value);
 8009340:	69bb      	ldr	r3, [r7, #24]
 8009342:	fab3 f383 	clz	r3, r3
 8009346:	b2db      	uxtb	r3, r3
 8009348:	005b      	lsls	r3, r3, #1
 800934a:	2103      	movs	r1, #3
 800934c:	fa01 f303 	lsl.w	r3, r1, r3
 8009350:	43db      	mvns	r3, r3
 8009352:	401a      	ands	r2, r3
 8009354:	68bb      	ldr	r3, [r7, #8]
 8009356:	623b      	str	r3, [r7, #32]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8009358:	6a3b      	ldr	r3, [r7, #32]
 800935a:	fa93 f3a3 	rbit	r3, r3
 800935e:	61fb      	str	r3, [r7, #28]
  return result;
 8009360:	69fb      	ldr	r3, [r7, #28]
 8009362:	627b      	str	r3, [r7, #36]	; 0x24
  if (value == 0U)
 8009364:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009366:	2b00      	cmp	r3, #0
 8009368:	d101      	bne.n	800936e <LL_GPIO_SetPinSpeed+0x58>
    return 32U;
 800936a:	2320      	movs	r3, #32
 800936c:	e003      	b.n	8009376 <LL_GPIO_SetPinSpeed+0x60>
  return __builtin_clz(value);
 800936e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009370:	fab3 f383 	clz	r3, r3
 8009374:	b2db      	uxtb	r3, r3
 8009376:	005b      	lsls	r3, r3, #1
 8009378:	6879      	ldr	r1, [r7, #4]
 800937a:	fa01 f303 	lsl.w	r3, r1, r3
 800937e:	431a      	orrs	r2, r3
 8009380:	68fb      	ldr	r3, [r7, #12]
 8009382:	609a      	str	r2, [r3, #8]
             (Speed << (POSITION_VAL(Pin) * 2U)));
}
 8009384:	bf00      	nop
 8009386:	372c      	adds	r7, #44	; 0x2c
 8009388:	46bd      	mov	sp, r7
 800938a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800938e:	4770      	bx	lr

08009390 <LL_GPIO_SetPinPull>:
  *         @arg @ref LL_GPIO_PULL_UP
  *         @arg @ref LL_GPIO_PULL_DOWN
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
{
 8009390:	b480      	push	{r7}
 8009392:	b08b      	sub	sp, #44	; 0x2c
 8009394:	af00      	add	r7, sp, #0
 8009396:	60f8      	str	r0, [r7, #12]
 8009398:	60b9      	str	r1, [r7, #8]
 800939a:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->PUPDR, (GPIO_PUPDR_PUPDR0 << (POSITION_VAL(Pin) * 2U)), (Pull << (POSITION_VAL(Pin) * 2U)));
 800939c:	68fb      	ldr	r3, [r7, #12]
 800939e:	68da      	ldr	r2, [r3, #12]
 80093a0:	68bb      	ldr	r3, [r7, #8]
 80093a2:	617b      	str	r3, [r7, #20]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80093a4:	697b      	ldr	r3, [r7, #20]
 80093a6:	fa93 f3a3 	rbit	r3, r3
 80093aa:	613b      	str	r3, [r7, #16]
  return result;
 80093ac:	693b      	ldr	r3, [r7, #16]
 80093ae:	61bb      	str	r3, [r7, #24]
  if (value == 0U)
 80093b0:	69bb      	ldr	r3, [r7, #24]
 80093b2:	2b00      	cmp	r3, #0
 80093b4:	d101      	bne.n	80093ba <LL_GPIO_SetPinPull+0x2a>
    return 32U;
 80093b6:	2320      	movs	r3, #32
 80093b8:	e003      	b.n	80093c2 <LL_GPIO_SetPinPull+0x32>
  return __builtin_clz(value);
 80093ba:	69bb      	ldr	r3, [r7, #24]
 80093bc:	fab3 f383 	clz	r3, r3
 80093c0:	b2db      	uxtb	r3, r3
 80093c2:	005b      	lsls	r3, r3, #1
 80093c4:	2103      	movs	r1, #3
 80093c6:	fa01 f303 	lsl.w	r3, r1, r3
 80093ca:	43db      	mvns	r3, r3
 80093cc:	401a      	ands	r2, r3
 80093ce:	68bb      	ldr	r3, [r7, #8]
 80093d0:	623b      	str	r3, [r7, #32]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80093d2:	6a3b      	ldr	r3, [r7, #32]
 80093d4:	fa93 f3a3 	rbit	r3, r3
 80093d8:	61fb      	str	r3, [r7, #28]
  return result;
 80093da:	69fb      	ldr	r3, [r7, #28]
 80093dc:	627b      	str	r3, [r7, #36]	; 0x24
  if (value == 0U)
 80093de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80093e0:	2b00      	cmp	r3, #0
 80093e2:	d101      	bne.n	80093e8 <LL_GPIO_SetPinPull+0x58>
    return 32U;
 80093e4:	2320      	movs	r3, #32
 80093e6:	e003      	b.n	80093f0 <LL_GPIO_SetPinPull+0x60>
  return __builtin_clz(value);
 80093e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80093ea:	fab3 f383 	clz	r3, r3
 80093ee:	b2db      	uxtb	r3, r3
 80093f0:	005b      	lsls	r3, r3, #1
 80093f2:	6879      	ldr	r1, [r7, #4]
 80093f4:	fa01 f303 	lsl.w	r3, r1, r3
 80093f8:	431a      	orrs	r2, r3
 80093fa:	68fb      	ldr	r3, [r7, #12]
 80093fc:	60da      	str	r2, [r3, #12]
}
 80093fe:	bf00      	nop
 8009400:	372c      	adds	r7, #44	; 0x2c
 8009402:	46bd      	mov	sp, r7
 8009404:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009408:	4770      	bx	lr

0800940a <LL_GPIO_SetAFPin_0_7>:
  *         @arg @ref LL_GPIO_AF_14
  *         @arg @ref LL_GPIO_AF_15
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
{
 800940a:	b480      	push	{r7}
 800940c:	b08b      	sub	sp, #44	; 0x2c
 800940e:	af00      	add	r7, sp, #0
 8009410:	60f8      	str	r0, [r7, #12]
 8009412:	60b9      	str	r1, [r7, #8]
 8009414:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->AFR[0], (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U)),
 8009416:	68fb      	ldr	r3, [r7, #12]
 8009418:	6a1a      	ldr	r2, [r3, #32]
 800941a:	68bb      	ldr	r3, [r7, #8]
 800941c:	617b      	str	r3, [r7, #20]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800941e:	697b      	ldr	r3, [r7, #20]
 8009420:	fa93 f3a3 	rbit	r3, r3
 8009424:	613b      	str	r3, [r7, #16]
  return result;
 8009426:	693b      	ldr	r3, [r7, #16]
 8009428:	61bb      	str	r3, [r7, #24]
  if (value == 0U)
 800942a:	69bb      	ldr	r3, [r7, #24]
 800942c:	2b00      	cmp	r3, #0
 800942e:	d101      	bne.n	8009434 <LL_GPIO_SetAFPin_0_7+0x2a>
    return 32U;
 8009430:	2320      	movs	r3, #32
 8009432:	e003      	b.n	800943c <LL_GPIO_SetAFPin_0_7+0x32>
  return __builtin_clz(value);
 8009434:	69bb      	ldr	r3, [r7, #24]
 8009436:	fab3 f383 	clz	r3, r3
 800943a:	b2db      	uxtb	r3, r3
 800943c:	009b      	lsls	r3, r3, #2
 800943e:	210f      	movs	r1, #15
 8009440:	fa01 f303 	lsl.w	r3, r1, r3
 8009444:	43db      	mvns	r3, r3
 8009446:	401a      	ands	r2, r3
 8009448:	68bb      	ldr	r3, [r7, #8]
 800944a:	623b      	str	r3, [r7, #32]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800944c:	6a3b      	ldr	r3, [r7, #32]
 800944e:	fa93 f3a3 	rbit	r3, r3
 8009452:	61fb      	str	r3, [r7, #28]
  return result;
 8009454:	69fb      	ldr	r3, [r7, #28]
 8009456:	627b      	str	r3, [r7, #36]	; 0x24
  if (value == 0U)
 8009458:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800945a:	2b00      	cmp	r3, #0
 800945c:	d101      	bne.n	8009462 <LL_GPIO_SetAFPin_0_7+0x58>
    return 32U;
 800945e:	2320      	movs	r3, #32
 8009460:	e003      	b.n	800946a <LL_GPIO_SetAFPin_0_7+0x60>
  return __builtin_clz(value);
 8009462:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009464:	fab3 f383 	clz	r3, r3
 8009468:	b2db      	uxtb	r3, r3
 800946a:	009b      	lsls	r3, r3, #2
 800946c:	6879      	ldr	r1, [r7, #4]
 800946e:	fa01 f303 	lsl.w	r3, r1, r3
 8009472:	431a      	orrs	r2, r3
 8009474:	68fb      	ldr	r3, [r7, #12]
 8009476:	621a      	str	r2, [r3, #32]
             (Alternate << (POSITION_VAL(Pin) * 4U)));
}
 8009478:	bf00      	nop
 800947a:	372c      	adds	r7, #44	; 0x2c
 800947c:	46bd      	mov	sp, r7
 800947e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009482:	4770      	bx	lr

08009484 <LL_GPIO_SetAFPin_8_15>:
  *         @arg @ref LL_GPIO_AF_14
  *         @arg @ref LL_GPIO_AF_15
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
{
 8009484:	b480      	push	{r7}
 8009486:	b08b      	sub	sp, #44	; 0x2c
 8009488:	af00      	add	r7, sp, #0
 800948a:	60f8      	str	r0, [r7, #12]
 800948c:	60b9      	str	r1, [r7, #8]
 800948e:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->AFR[1], (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U)),
 8009490:	68fb      	ldr	r3, [r7, #12]
 8009492:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8009494:	68bb      	ldr	r3, [r7, #8]
 8009496:	0a1b      	lsrs	r3, r3, #8
 8009498:	617b      	str	r3, [r7, #20]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800949a:	697b      	ldr	r3, [r7, #20]
 800949c:	fa93 f3a3 	rbit	r3, r3
 80094a0:	613b      	str	r3, [r7, #16]
  return result;
 80094a2:	693b      	ldr	r3, [r7, #16]
 80094a4:	61bb      	str	r3, [r7, #24]
  if (value == 0U)
 80094a6:	69bb      	ldr	r3, [r7, #24]
 80094a8:	2b00      	cmp	r3, #0
 80094aa:	d101      	bne.n	80094b0 <LL_GPIO_SetAFPin_8_15+0x2c>
    return 32U;
 80094ac:	2320      	movs	r3, #32
 80094ae:	e003      	b.n	80094b8 <LL_GPIO_SetAFPin_8_15+0x34>
  return __builtin_clz(value);
 80094b0:	69bb      	ldr	r3, [r7, #24]
 80094b2:	fab3 f383 	clz	r3, r3
 80094b6:	b2db      	uxtb	r3, r3
 80094b8:	009b      	lsls	r3, r3, #2
 80094ba:	210f      	movs	r1, #15
 80094bc:	fa01 f303 	lsl.w	r3, r1, r3
 80094c0:	43db      	mvns	r3, r3
 80094c2:	401a      	ands	r2, r3
 80094c4:	68bb      	ldr	r3, [r7, #8]
 80094c6:	0a1b      	lsrs	r3, r3, #8
 80094c8:	623b      	str	r3, [r7, #32]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80094ca:	6a3b      	ldr	r3, [r7, #32]
 80094cc:	fa93 f3a3 	rbit	r3, r3
 80094d0:	61fb      	str	r3, [r7, #28]
  return result;
 80094d2:	69fb      	ldr	r3, [r7, #28]
 80094d4:	627b      	str	r3, [r7, #36]	; 0x24
  if (value == 0U)
 80094d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80094d8:	2b00      	cmp	r3, #0
 80094da:	d101      	bne.n	80094e0 <LL_GPIO_SetAFPin_8_15+0x5c>
    return 32U;
 80094dc:	2320      	movs	r3, #32
 80094de:	e003      	b.n	80094e8 <LL_GPIO_SetAFPin_8_15+0x64>
  return __builtin_clz(value);
 80094e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80094e2:	fab3 f383 	clz	r3, r3
 80094e6:	b2db      	uxtb	r3, r3
 80094e8:	009b      	lsls	r3, r3, #2
 80094ea:	6879      	ldr	r1, [r7, #4]
 80094ec:	fa01 f303 	lsl.w	r3, r1, r3
 80094f0:	431a      	orrs	r2, r3
 80094f2:	68fb      	ldr	r3, [r7, #12]
 80094f4:	625a      	str	r2, [r3, #36]	; 0x24
             (Alternate << (POSITION_VAL(Pin >> 8U) * 4U)));
}
 80094f6:	bf00      	nop
 80094f8:	372c      	adds	r7, #44	; 0x2c
 80094fa:	46bd      	mov	sp, r7
 80094fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009500:	4770      	bx	lr

08009502 <LL_GPIO_Init>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: GPIO registers are initialized according to GPIO_InitStruct content
  *          - ERROR:   Not applicable
  */
ErrorStatus LL_GPIO_Init(GPIO_TypeDef *GPIOx, LL_GPIO_InitTypeDef *GPIO_InitStruct)
{
 8009502:	b580      	push	{r7, lr}
 8009504:	b08a      	sub	sp, #40	; 0x28
 8009506:	af00      	add	r7, sp, #0
 8009508:	6078      	str	r0, [r7, #4]
 800950a:	6039      	str	r1, [r7, #0]
  uint32_t pinpos     = 0x00000000U;
 800950c:	2300      	movs	r3, #0
 800950e:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t currentpin = 0x00000000U;
 8009510:	2300      	movs	r3, #0
 8009512:	623b      	str	r3, [r7, #32]
  assert_param(IS_LL_GPIO_MODE(GPIO_InitStruct->Mode));
  assert_param(IS_LL_GPIO_PULL(GPIO_InitStruct->Pull));

  /* ------------------------- Configure the port pins ---------------- */
  /* Initialize  pinpos on first pin set */
  pinpos = POSITION_VAL(GPIO_InitStruct->Pin);
 8009514:	683b      	ldr	r3, [r7, #0]
 8009516:	681b      	ldr	r3, [r3, #0]
 8009518:	61bb      	str	r3, [r7, #24]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800951a:	69bb      	ldr	r3, [r7, #24]
 800951c:	fa93 f3a3 	rbit	r3, r3
 8009520:	617b      	str	r3, [r7, #20]
  return result;
 8009522:	697b      	ldr	r3, [r7, #20]
 8009524:	61fb      	str	r3, [r7, #28]
  if (value == 0U)
 8009526:	69fb      	ldr	r3, [r7, #28]
 8009528:	2b00      	cmp	r3, #0
 800952a:	d101      	bne.n	8009530 <LL_GPIO_Init+0x2e>
    return 32U;
 800952c:	2320      	movs	r3, #32
 800952e:	e003      	b.n	8009538 <LL_GPIO_Init+0x36>
  return __builtin_clz(value);
 8009530:	69fb      	ldr	r3, [r7, #28]
 8009532:	fab3 f383 	clz	r3, r3
 8009536:	b2db      	uxtb	r3, r3
 8009538:	627b      	str	r3, [r7, #36]	; 0x24
  
  /* Configure the port pins */
  while (((GPIO_InitStruct->Pin) >> pinpos) != 0x00000000U)
 800953a:	e057      	b.n	80095ec <LL_GPIO_Init+0xea>
  {
    /* Get current io position */
    currentpin = (GPIO_InitStruct->Pin) & (0x00000001U << pinpos);
 800953c:	683b      	ldr	r3, [r7, #0]
 800953e:	681a      	ldr	r2, [r3, #0]
 8009540:	2101      	movs	r1, #1
 8009542:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009544:	fa01 f303 	lsl.w	r3, r1, r3
 8009548:	4013      	ands	r3, r2
 800954a:	623b      	str	r3, [r7, #32]
    
    if (currentpin)
 800954c:	6a3b      	ldr	r3, [r7, #32]
 800954e:	2b00      	cmp	r3, #0
 8009550:	d049      	beq.n	80095e6 <LL_GPIO_Init+0xe4>
    {
      
      if ((GPIO_InitStruct->Mode == LL_GPIO_MODE_OUTPUT) || (GPIO_InitStruct->Mode == LL_GPIO_MODE_ALTERNATE))
 8009552:	683b      	ldr	r3, [r7, #0]
 8009554:	685b      	ldr	r3, [r3, #4]
 8009556:	2b01      	cmp	r3, #1
 8009558:	d003      	beq.n	8009562 <LL_GPIO_Init+0x60>
 800955a:	683b      	ldr	r3, [r7, #0]
 800955c:	685b      	ldr	r3, [r3, #4]
 800955e:	2b02      	cmp	r3, #2
 8009560:	d10d      	bne.n	800957e <LL_GPIO_Init+0x7c>
      {
        /* Check Speed mode parameters */
        assert_param(IS_LL_GPIO_SPEED(GPIO_InitStruct->Speed));
        
        /* Speed mode configuration */
        LL_GPIO_SetPinSpeed(GPIOx, currentpin, GPIO_InitStruct->Speed);
 8009562:	683b      	ldr	r3, [r7, #0]
 8009564:	689b      	ldr	r3, [r3, #8]
 8009566:	461a      	mov	r2, r3
 8009568:	6a39      	ldr	r1, [r7, #32]
 800956a:	6878      	ldr	r0, [r7, #4]
 800956c:	f7ff fed3 	bl	8009316 <LL_GPIO_SetPinSpeed>
        
        /* Check Output mode parameters */
        assert_param(IS_LL_GPIO_OUTPUT_TYPE(GPIO_InitStruct->OutputType));
        
        /* Output mode configuration*/
        LL_GPIO_SetPinOutputType(GPIOx, currentpin, GPIO_InitStruct->OutputType);
 8009570:	683b      	ldr	r3, [r7, #0]
 8009572:	68db      	ldr	r3, [r3, #12]
 8009574:	461a      	mov	r2, r3
 8009576:	6a39      	ldr	r1, [r7, #32]
 8009578:	6878      	ldr	r0, [r7, #4]
 800957a:	f7ff feb4 	bl	80092e6 <LL_GPIO_SetPinOutputType>
      }
      
      /* Pull-up Pull down resistor configuration*/
      LL_GPIO_SetPinPull(GPIOx, currentpin, GPIO_InitStruct->Pull);
 800957e:	683b      	ldr	r3, [r7, #0]
 8009580:	691b      	ldr	r3, [r3, #16]
 8009582:	461a      	mov	r2, r3
 8009584:	6a39      	ldr	r1, [r7, #32]
 8009586:	6878      	ldr	r0, [r7, #4]
 8009588:	f7ff ff02 	bl	8009390 <LL_GPIO_SetPinPull>
      
      if (GPIO_InitStruct->Mode == LL_GPIO_MODE_ALTERNATE)
 800958c:	683b      	ldr	r3, [r7, #0]
 800958e:	685b      	ldr	r3, [r3, #4]
 8009590:	2b02      	cmp	r3, #2
 8009592:	d121      	bne.n	80095d8 <LL_GPIO_Init+0xd6>
 8009594:	6a3b      	ldr	r3, [r7, #32]
 8009596:	60fb      	str	r3, [r7, #12]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8009598:	68fb      	ldr	r3, [r7, #12]
 800959a:	fa93 f3a3 	rbit	r3, r3
 800959e:	60bb      	str	r3, [r7, #8]
  return result;
 80095a0:	68bb      	ldr	r3, [r7, #8]
 80095a2:	613b      	str	r3, [r7, #16]
  if (value == 0U)
 80095a4:	693b      	ldr	r3, [r7, #16]
 80095a6:	2b00      	cmp	r3, #0
 80095a8:	d101      	bne.n	80095ae <LL_GPIO_Init+0xac>
    return 32U;
 80095aa:	2320      	movs	r3, #32
 80095ac:	e003      	b.n	80095b6 <LL_GPIO_Init+0xb4>
  return __builtin_clz(value);
 80095ae:	693b      	ldr	r3, [r7, #16]
 80095b0:	fab3 f383 	clz	r3, r3
 80095b4:	b2db      	uxtb	r3, r3
      {
        /* Check Alternate parameter */
        assert_param(IS_LL_GPIO_ALTERNATE(GPIO_InitStruct->Alternate));
        
        /* Speed mode configuration */
        if (POSITION_VAL(currentpin) < 0x00000008U)
 80095b6:	2b07      	cmp	r3, #7
 80095b8:	d807      	bhi.n	80095ca <LL_GPIO_Init+0xc8>
        {
          LL_GPIO_SetAFPin_0_7(GPIOx, currentpin, GPIO_InitStruct->Alternate);
 80095ba:	683b      	ldr	r3, [r7, #0]
 80095bc:	695b      	ldr	r3, [r3, #20]
 80095be:	461a      	mov	r2, r3
 80095c0:	6a39      	ldr	r1, [r7, #32]
 80095c2:	6878      	ldr	r0, [r7, #4]
 80095c4:	f7ff ff21 	bl	800940a <LL_GPIO_SetAFPin_0_7>
 80095c8:	e006      	b.n	80095d8 <LL_GPIO_Init+0xd6>
        }
        else
        {
          LL_GPIO_SetAFPin_8_15(GPIOx, currentpin, GPIO_InitStruct->Alternate);
 80095ca:	683b      	ldr	r3, [r7, #0]
 80095cc:	695b      	ldr	r3, [r3, #20]
 80095ce:	461a      	mov	r2, r3
 80095d0:	6a39      	ldr	r1, [r7, #32]
 80095d2:	6878      	ldr	r0, [r7, #4]
 80095d4:	f7ff ff56 	bl	8009484 <LL_GPIO_SetAFPin_8_15>
        }
      }
      
      /* Pin Mode configuration */
      LL_GPIO_SetPinMode(GPIOx, currentpin, GPIO_InitStruct->Mode);
 80095d8:	683b      	ldr	r3, [r7, #0]
 80095da:	685b      	ldr	r3, [r3, #4]
 80095dc:	461a      	mov	r2, r3
 80095de:	6a39      	ldr	r1, [r7, #32]
 80095e0:	6878      	ldr	r0, [r7, #4]
 80095e2:	f7ff fe43 	bl	800926c <LL_GPIO_SetPinMode>
    }
    pinpos++;
 80095e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80095e8:	3301      	adds	r3, #1
 80095ea:	627b      	str	r3, [r7, #36]	; 0x24
  while (((GPIO_InitStruct->Pin) >> pinpos) != 0x00000000U)
 80095ec:	683b      	ldr	r3, [r7, #0]
 80095ee:	681a      	ldr	r2, [r3, #0]
 80095f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80095f2:	fa22 f303 	lsr.w	r3, r2, r3
 80095f6:	2b00      	cmp	r3, #0
 80095f8:	d1a0      	bne.n	800953c <LL_GPIO_Init+0x3a>
  }

  return (SUCCESS);
 80095fa:	2300      	movs	r3, #0
}
 80095fc:	4618      	mov	r0, r3
 80095fe:	3728      	adds	r7, #40	; 0x28
 8009600:	46bd      	mov	sp, r7
 8009602:	bd80      	pop	{r7, pc}

08009604 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8009604:	b580      	push	{r7, lr}
 8009606:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8009608:	f008 fb4c 	bl	8011ca4 <touchgfx_components_init>
  touchgfx_init();
 800960c:	f008 fb20 	bl	8011c50 <touchgfx_init>
}
 8009610:	bf00      	nop
 8009612:	bd80      	pop	{r7, pc}

08009614 <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 8009614:	b580      	push	{r7, lr}
 8009616:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8009618:	f008 fb4c 	bl	8011cb4 <touchgfx_taskEntry>
}
 800961c:	bf00      	nop
 800961e:	bd80      	pop	{r7, pc}

08009620 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 8009620:	b480      	push	{r7}
 8009622:	b083      	sub	sp, #12
 8009624:	af00      	add	r7, sp, #0
 8009626:	6078      	str	r0, [r7, #4]
    {
 8009628:	4a04      	ldr	r2, [pc, #16]	; (800963c <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 800962a:	687b      	ldr	r3, [r7, #4]
 800962c:	601a      	str	r2, [r3, #0]
    }
 800962e:	687b      	ldr	r3, [r7, #4]
 8009630:	4618      	mov	r0, r3
 8009632:	370c      	adds	r7, #12
 8009634:	46bd      	mov	sp, r7
 8009636:	f85d 7b04 	ldr.w	r7, [sp], #4
 800963a:	4770      	bx	lr
 800963c:	0802de78 	.word	0x0802de78

08009640 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 8009640:	b580      	push	{r7, lr}
 8009642:	b082      	sub	sp, #8
 8009644:	af00      	add	r7, sp, #0
 8009646:	6078      	str	r0, [r7, #4]
    }
 8009648:	6878      	ldr	r0, [r7, #4]
 800964a:	f7ff ffe9 	bl	8009620 <_ZN8touchgfx12FontProviderD1Ev>
 800964e:	2104      	movs	r1, #4
 8009650:	6878      	ldr	r0, [r7, #4]
 8009652:	f021 f8c4 	bl	802a7de <_ZdlPvj>
 8009656:	687b      	ldr	r3, [r7, #4]
 8009658:	4618      	mov	r0, r3
 800965a:	3708      	adds	r7, #8
 800965c:	46bd      	mov	sp, r7
 800965e:	bd80      	pop	{r7, pc}

08009660 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8009660:	b580      	push	{r7, lr}
 8009662:	b082      	sub	sp, #8
 8009664:	af00      	add	r7, sp, #0
 8009666:	6078      	str	r0, [r7, #4]
 8009668:	460b      	mov	r3, r1
 800966a:	807b      	strh	r3, [r7, #2]
    switch (typography)
 800966c:	887b      	ldrh	r3, [r7, #2]
 800966e:	2b02      	cmp	r3, #2
 8009670:	d010      	beq.n	8009694 <_ZN23ApplicationFontProvider7getFontEt+0x34>
 8009672:	2b02      	cmp	r3, #2
 8009674:	dc13      	bgt.n	800969e <_ZN23ApplicationFontProvider7getFontEt+0x3e>
 8009676:	2b00      	cmp	r3, #0
 8009678:	d002      	beq.n	8009680 <_ZN23ApplicationFontProvider7getFontEt+0x20>
 800967a:	2b01      	cmp	r3, #1
 800967c:	d005      	beq.n	800968a <_ZN23ApplicationFontProvider7getFontEt+0x2a>
 800967e:	e00e      	b.n	800969e <_ZN23ApplicationFontProvider7getFontEt+0x3e>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8009680:	f006 fd52 	bl	8010128 <_ZN17TypedTextDatabase8getFontsEv>
 8009684:	4603      	mov	r3, r0
 8009686:	681b      	ldr	r3, [r3, #0]
 8009688:	e00a      	b.n	80096a0 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800968a:	f006 fd4d 	bl	8010128 <_ZN17TypedTextDatabase8getFontsEv>
 800968e:	4603      	mov	r3, r0
 8009690:	685b      	ldr	r3, [r3, #4]
 8009692:	e005      	b.n	80096a0 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8009694:	f006 fd48 	bl	8010128 <_ZN17TypedTextDatabase8getFontsEv>
 8009698:	4603      	mov	r3, r0
 800969a:	689b      	ldr	r3, [r3, #8]
 800969c:	e000      	b.n	80096a0 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    default:
        return 0;
 800969e:	2300      	movs	r3, #0
    }
}
 80096a0:	4618      	mov	r0, r3
 80096a2:	3708      	adds	r7, #8
 80096a4:	46bd      	mov	sp, r7
 80096a6:	bd80      	pop	{r7, pc}

080096a8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80096a8:	b580      	push	{r7, lr}
 80096aa:	b082      	sub	sp, #8
 80096ac:	af00      	add	r7, sp, #0
 80096ae:	6078      	str	r0, [r7, #4]
 80096b0:	4a05      	ldr	r2, [pc, #20]	; (80096c8 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 80096b2:	687b      	ldr	r3, [r7, #4]
 80096b4:	601a      	str	r2, [r3, #0]
 80096b6:	687b      	ldr	r3, [r7, #4]
 80096b8:	4618      	mov	r0, r3
 80096ba:	f7ff ffb1 	bl	8009620 <_ZN8touchgfx12FontProviderD1Ev>
 80096be:	687b      	ldr	r3, [r7, #4]
 80096c0:	4618      	mov	r0, r3
 80096c2:	3708      	adds	r7, #8
 80096c4:	46bd      	mov	sp, r7
 80096c6:	bd80      	pop	{r7, pc}
 80096c8:	0802de64 	.word	0x0802de64

080096cc <_ZN23ApplicationFontProviderD0Ev>:
 80096cc:	b580      	push	{r7, lr}
 80096ce:	b082      	sub	sp, #8
 80096d0:	af00      	add	r7, sp, #0
 80096d2:	6078      	str	r0, [r7, #4]
 80096d4:	6878      	ldr	r0, [r7, #4]
 80096d6:	f7ff ffe7 	bl	80096a8 <_ZN23ApplicationFontProviderD1Ev>
 80096da:	2104      	movs	r1, #4
 80096dc:	6878      	ldr	r0, [r7, #4]
 80096de:	f021 f87e 	bl	802a7de <_ZdlPvj>
 80096e2:	687b      	ldr	r3, [r7, #4]
 80096e4:	4618      	mov	r0, r3
 80096e6:	3708      	adds	r7, #8
 80096e8:	46bd      	mov	sp, r7
 80096ea:	bd80      	pop	{r7, pc}

080096ec <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 80096ec:	b480      	push	{r7}
 80096ee:	b083      	sub	sp, #12
 80096f0:	af00      	add	r7, sp, #0
 80096f2:	6078      	str	r0, [r7, #4]
    {
 80096f4:	4a04      	ldr	r2, [pc, #16]	; (8009708 <_ZN8touchgfx4FontD1Ev+0x1c>)
 80096f6:	687b      	ldr	r3, [r7, #4]
 80096f8:	601a      	str	r2, [r3, #0]
    }
 80096fa:	687b      	ldr	r3, [r7, #4]
 80096fc:	4618      	mov	r0, r3
 80096fe:	370c      	adds	r7, #12
 8009700:	46bd      	mov	sp, r7
 8009702:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009706:	4770      	bx	lr
 8009708:	0802e66c 	.word	0x0802e66c

0800970c <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 800970c:	b580      	push	{r7, lr}
 800970e:	b082      	sub	sp, #8
 8009710:	af00      	add	r7, sp, #0
 8009712:	6078      	str	r0, [r7, #4]
    }
 8009714:	6878      	ldr	r0, [r7, #4]
 8009716:	f7ff ffe9 	bl	80096ec <_ZN8touchgfx4FontD1Ev>
 800971a:	2114      	movs	r1, #20
 800971c:	6878      	ldr	r0, [r7, #4]
 800971e:	f021 f85e 	bl	802a7de <_ZdlPvj>
 8009722:	687b      	ldr	r3, [r7, #4]
 8009724:	4618      	mov	r0, r3
 8009726:	3708      	adds	r7, #8
 8009728:	46bd      	mov	sp, r7
 800972a:	bd80      	pop	{r7, pc}

0800972c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800972c:	b590      	push	{r4, r7, lr}
 800972e:	b087      	sub	sp, #28
 8009730:	af00      	add	r7, sp, #0
 8009732:	6078      	str	r0, [r7, #4]
 8009734:	460b      	mov	r3, r1
 8009736:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 8009738:	887b      	ldrh	r3, [r7, #2]
 800973a:	2b00      	cmp	r3, #0
 800973c:	d101      	bne.n	8009742 <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 800973e:	2300      	movs	r3, #0
 8009740:	e010      	b.n	8009764 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 8009742:	2300      	movs	r3, #0
 8009744:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 8009746:	2300      	movs	r3, #0
 8009748:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800974a:	687b      	ldr	r3, [r7, #4]
 800974c:	681b      	ldr	r3, [r3, #0]
 800974e:	3308      	adds	r3, #8
 8009750:	681c      	ldr	r4, [r3, #0]
 8009752:	f107 030f 	add.w	r3, r7, #15
 8009756:	f107 0210 	add.w	r2, r7, #16
 800975a:	8879      	ldrh	r1, [r7, #2]
 800975c:	6878      	ldr	r0, [r7, #4]
 800975e:	47a0      	blx	r4
 8009760:	6178      	str	r0, [r7, #20]
        return glyph;
 8009762:	697b      	ldr	r3, [r7, #20]
    }
 8009764:	4618      	mov	r0, r3
 8009766:	371c      	adds	r7, #28
 8009768:	46bd      	mov	sp, r7
 800976a:	bd90      	pop	{r4, r7, pc}

0800976c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 800976c:	b480      	push	{r7}
 800976e:	b083      	sub	sp, #12
 8009770:	af00      	add	r7, sp, #0
 8009772:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 8009774:	687b      	ldr	r3, [r7, #4]
 8009776:	89db      	ldrh	r3, [r3, #14]
    }
 8009778:	4618      	mov	r0, r3
 800977a:	370c      	adds	r7, #12
 800977c:	46bd      	mov	sp, r7
 800977e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009782:	4770      	bx	lr

08009784 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 8009784:	b480      	push	{r7}
 8009786:	b083      	sub	sp, #12
 8009788:	af00      	add	r7, sp, #0
 800978a:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 800978c:	687b      	ldr	r3, [r7, #4]
 800978e:	8a1b      	ldrh	r3, [r3, #16]
    }
 8009790:	4618      	mov	r0, r3
 8009792:	370c      	adds	r7, #12
 8009794:	46bd      	mov	sp, r7
 8009796:	f85d 7b04 	ldr.w	r7, [sp], #4
 800979a:	4770      	bx	lr

0800979c <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 800979c:	b480      	push	{r7}
 800979e:	b083      	sub	sp, #12
 80097a0:	af00      	add	r7, sp, #0
 80097a2:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 80097a4:	687b      	ldr	r3, [r7, #4]
 80097a6:	88db      	ldrh	r3, [r3, #6]
    }
 80097a8:	4618      	mov	r0, r3
 80097aa:	370c      	adds	r7, #12
 80097ac:	46bd      	mov	sp, r7
 80097ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097b2:	4770      	bx	lr

080097b4 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 80097b4:	b480      	push	{r7}
 80097b6:	b083      	sub	sp, #12
 80097b8:	af00      	add	r7, sp, #0
 80097ba:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 80097bc:	687b      	ldr	r3, [r7, #4]
 80097be:	889b      	ldrh	r3, [r3, #4]
    }
 80097c0:	4618      	mov	r0, r3
 80097c2:	370c      	adds	r7, #12
 80097c4:	46bd      	mov	sp, r7
 80097c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097ca:	4770      	bx	lr

080097cc <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 80097cc:	b480      	push	{r7}
 80097ce:	b083      	sub	sp, #12
 80097d0:	af00      	add	r7, sp, #0
 80097d2:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 80097d4:	687b      	ldr	r3, [r7, #4]
 80097d6:	7a9b      	ldrb	r3, [r3, #10]
 80097d8:	f3c3 0306 	ubfx	r3, r3, #0, #7
 80097dc:	b2db      	uxtb	r3, r3
    }
 80097de:	4618      	mov	r0, r3
 80097e0:	370c      	adds	r7, #12
 80097e2:	46bd      	mov	sp, r7
 80097e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097e8:	4770      	bx	lr

080097ea <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 80097ea:	b480      	push	{r7}
 80097ec:	b083      	sub	sp, #12
 80097ee:	af00      	add	r7, sp, #0
 80097f0:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 80097f2:	687b      	ldr	r3, [r7, #4]
 80097f4:	7a9b      	ldrb	r3, [r3, #10]
 80097f6:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 80097fa:	b2db      	uxtb	r3, r3
    }
 80097fc:	4618      	mov	r0, r3
 80097fe:	370c      	adds	r7, #12
 8009800:	46bd      	mov	sp, r7
 8009802:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009806:	4770      	bx	lr

08009808 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 8009808:	b580      	push	{r7, lr}
 800980a:	b082      	sub	sp, #8
 800980c:	af00      	add	r7, sp, #0
 800980e:	6078      	str	r0, [r7, #4]
 8009810:	4a05      	ldr	r2, [pc, #20]	; (8009828 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 8009812:	687b      	ldr	r3, [r7, #4]
 8009814:	601a      	str	r2, [r3, #0]
 8009816:	687b      	ldr	r3, [r7, #4]
 8009818:	4618      	mov	r0, r3
 800981a:	f7ff ff67 	bl	80096ec <_ZN8touchgfx4FontD1Ev>
 800981e:	687b      	ldr	r3, [r7, #4]
 8009820:	4618      	mov	r0, r3
 8009822:	3708      	adds	r7, #8
 8009824:	46bd      	mov	sp, r7
 8009826:	bd80      	pop	{r7, pc}
 8009828:	0802faa0 	.word	0x0802faa0

0800982c <_ZN8touchgfx9ConstFontD0Ev>:
 800982c:	b580      	push	{r7, lr}
 800982e:	b082      	sub	sp, #8
 8009830:	af00      	add	r7, sp, #0
 8009832:	6078      	str	r0, [r7, #4]
 8009834:	6878      	ldr	r0, [r7, #4]
 8009836:	f7ff ffe7 	bl	8009808 <_ZN8touchgfx9ConstFontD1Ev>
 800983a:	211c      	movs	r1, #28
 800983c:	6878      	ldr	r0, [r7, #4]
 800983e:	f020 ffce 	bl	802a7de <_ZdlPvj>
 8009842:	687b      	ldr	r3, [r7, #4]
 8009844:	4618      	mov	r0, r3
 8009846:	3708      	adds	r7, #8
 8009848:	46bd      	mov	sp, r7
 800984a:	bd80      	pop	{r7, pc}

0800984c <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 800984c:	b580      	push	{r7, lr}
 800984e:	b082      	sub	sp, #8
 8009850:	af00      	add	r7, sp, #0
 8009852:	6078      	str	r0, [r7, #4]
 8009854:	4a05      	ldr	r2, [pc, #20]	; (800986c <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 8009856:	687b      	ldr	r3, [r7, #4]
 8009858:	601a      	str	r2, [r3, #0]
 800985a:	687b      	ldr	r3, [r7, #4]
 800985c:	4618      	mov	r0, r3
 800985e:	f7ff ffd3 	bl	8009808 <_ZN8touchgfx9ConstFontD1Ev>
 8009862:	687b      	ldr	r3, [r7, #4]
 8009864:	4618      	mov	r0, r3
 8009866:	3708      	adds	r7, #8
 8009868:	46bd      	mov	sp, r7
 800986a:	bd80      	pop	{r7, pc}
 800986c:	0802de9c 	.word	0x0802de9c

08009870 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8009870:	b580      	push	{r7, lr}
 8009872:	b082      	sub	sp, #8
 8009874:	af00      	add	r7, sp, #0
 8009876:	6078      	str	r0, [r7, #4]
 8009878:	6878      	ldr	r0, [r7, #4]
 800987a:	f7ff ffe7 	bl	800984c <_ZN8touchgfx13GeneratedFontD1Ev>
 800987e:	212c      	movs	r1, #44	; 0x2c
 8009880:	6878      	ldr	r0, [r7, #4]
 8009882:	f020 ffac 	bl	802a7de <_ZdlPvj>
 8009886:	687b      	ldr	r3, [r7, #4]
 8009888:	4618      	mov	r0, r3
 800988a:	3708      	adds	r7, #8
 800988c:	46bd      	mov	sp, r7
 800988e:	bd80      	pop	{r7, pc}

08009890 <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 8009890:	b480      	push	{r7}
 8009892:	b083      	sub	sp, #12
 8009894:	af00      	add	r7, sp, #0
 8009896:	6078      	str	r0, [r7, #4]
    {
 8009898:	4a04      	ldr	r2, [pc, #16]	; (80098ac <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 800989a:	687b      	ldr	r3, [r7, #4]
 800989c:	601a      	str	r2, [r3, #0]
    }
 800989e:	687b      	ldr	r3, [r7, #4]
 80098a0:	4618      	mov	r0, r3
 80098a2:	370c      	adds	r7, #12
 80098a4:	46bd      	mov	sp, r7
 80098a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098aa:	4770      	bx	lr
 80098ac:	0802de8c 	.word	0x0802de8c

080098b0 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80098b0:	b580      	push	{r7, lr}
 80098b2:	b082      	sub	sp, #8
 80098b4:	af00      	add	r7, sp, #0
 80098b6:	6078      	str	r0, [r7, #4]
    }
 80098b8:	6878      	ldr	r0, [r7, #4]
 80098ba:	f7ff ffe9 	bl	8009890 <_ZN8touchgfx9TypedTextD1Ev>
 80098be:	2108      	movs	r1, #8
 80098c0:	6878      	ldr	r0, [r7, #4]
 80098c2:	f020 ff8c 	bl	802a7de <_ZdlPvj>
 80098c6:	687b      	ldr	r3, [r7, #4]
 80098c8:	4618      	mov	r0, r3
 80098ca:	3708      	adds	r7, #8
 80098cc:	46bd      	mov	sp, r7
 80098ce:	bd80      	pop	{r7, pc}

080098d0 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 80098d0:	b480      	push	{r7}
 80098d2:	b083      	sub	sp, #12
 80098d4:	af00      	add	r7, sp, #0
 80098d6:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 80098d8:	687b      	ldr	r3, [r7, #4]
 80098da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    }
 80098dc:	4618      	mov	r0, r3
 80098de:	370c      	adds	r7, #12
 80098e0:	46bd      	mov	sp, r7
 80098e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098e6:	4770      	bx	lr

080098e8 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 80098e8:	b480      	push	{r7}
 80098ea:	b083      	sub	sp, #12
 80098ec:	af00      	add	r7, sp, #0
 80098ee:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 80098f0:	687b      	ldr	r3, [r7, #4]
 80098f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 80098f4:	4618      	mov	r0, r3
 80098f6:	370c      	adds	r7, #12
 80098f8:	46bd      	mov	sp, r7
 80098fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098fe:	4770      	bx	lr

08009900 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8009900:	b580      	push	{r7, lr}
 8009902:	b08e      	sub	sp, #56	; 0x38
 8009904:	af0a      	add	r7, sp, #40	; 0x28
 8009906:	60f8      	str	r0, [r7, #12]
 8009908:	60b9      	str	r1, [r7, #8]
 800990a:	4611      	mov	r1, r2
 800990c:	461a      	mov	r2, r3
 800990e:	460b      	mov	r3, r1
 8009910:	80fb      	strh	r3, [r7, #6]
 8009912:	4613      	mov	r3, r2
 8009914:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 8009916:	68f8      	ldr	r0, [r7, #12]
 8009918:	88b9      	ldrh	r1, [r7, #4]
 800991a:	88fa      	ldrh	r2, [r7, #6]
 800991c:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 8009920:	9308      	str	r3, [sp, #32]
 8009922:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 8009924:	9307      	str	r3, [sp, #28]
 8009926:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 800992a:	9306      	str	r3, [sp, #24]
 800992c:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8009930:	9305      	str	r3, [sp, #20]
 8009932:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8009936:	9304      	str	r3, [sp, #16]
 8009938:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800993c:	9303      	str	r3, [sp, #12]
 800993e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8009942:	9302      	str	r3, [sp, #8]
 8009944:	7f3b      	ldrb	r3, [r7, #28]
 8009946:	9301      	str	r3, [sp, #4]
 8009948:	8b3b      	ldrh	r3, [r7, #24]
 800994a:	9300      	str	r3, [sp, #0]
 800994c:	460b      	mov	r3, r1
 800994e:	68b9      	ldr	r1, [r7, #8]
 8009950:	f010 fe56 	bl	801a600 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8009954:	4a09      	ldr	r2, [pc, #36]	; (800997c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 8009956:	68fb      	ldr	r3, [r7, #12]
 8009958:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 800995a:	68fb      	ldr	r3, [r7, #12]
 800995c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800995e:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 8009960:	68fb      	ldr	r3, [r7, #12]
 8009962:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8009964:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 8009966:	68fb      	ldr	r3, [r7, #12]
 8009968:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800996a:	625a      	str	r2, [r3, #36]	; 0x24
      arabicTable(formsTable)
 800996c:	68fb      	ldr	r3, [r7, #12]
 800996e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8009970:	629a      	str	r2, [r3, #40]	; 0x28
{
}
 8009972:	68fb      	ldr	r3, [r7, #12]
 8009974:	4618      	mov	r0, r3
 8009976:	3710      	adds	r7, #16
 8009978:	46bd      	mov	sp, r7
 800997a:	bd80      	pop	{r7, pc}
 800997c:	0802de9c 	.word	0x0802de9c

08009980 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 8009980:	b480      	push	{r7}
 8009982:	b085      	sub	sp, #20
 8009984:	af00      	add	r7, sp, #0
 8009986:	6078      	str	r0, [r7, #4]
 8009988:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 800998a:	687b      	ldr	r3, [r7, #4]
 800998c:	69db      	ldr	r3, [r3, #28]
 800998e:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8009990:	683b      	ldr	r3, [r7, #0]
 8009992:	889b      	ldrh	r3, [r3, #4]
 8009994:	0adb      	lsrs	r3, r3, #11
 8009996:	b29b      	uxth	r3, r3
 8009998:	009b      	lsls	r3, r3, #2
 800999a:	68fa      	ldr	r2, [r7, #12]
 800999c:	4413      	add	r3, r2
 800999e:	681a      	ldr	r2, [r3, #0]
 80099a0:	683b      	ldr	r3, [r7, #0]
 80099a2:	681b      	ldr	r3, [r3, #0]
 80099a4:	4413      	add	r3, r2
}
 80099a6:	4618      	mov	r0, r3
 80099a8:	3714      	adds	r7, #20
 80099aa:	46bd      	mov	sp, r7
 80099ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099b0:	4770      	bx	lr

080099b2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80099b2:	b480      	push	{r7}
 80099b4:	b089      	sub	sp, #36	; 0x24
 80099b6:	af00      	add	r7, sp, #0
 80099b8:	60f8      	str	r0, [r7, #12]
 80099ba:	460b      	mov	r3, r1
 80099bc:	607a      	str	r2, [r7, #4]
 80099be:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 80099c0:	687b      	ldr	r3, [r7, #4]
 80099c2:	2b00      	cmp	r3, #0
 80099c4:	d003      	beq.n	80099ce <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80099c6:	687b      	ldr	r3, [r7, #4]
 80099c8:	7b1b      	ldrb	r3, [r3, #12]
 80099ca:	2b00      	cmp	r3, #0
 80099cc:	d101      	bne.n	80099d2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 80099ce:	2300      	movs	r3, #0
 80099d0:	e031      	b.n	8009a36 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80099d2:	68fb      	ldr	r3, [r7, #12]
 80099d4:	6a1a      	ldr	r2, [r3, #32]
 80099d6:	687b      	ldr	r3, [r7, #4]
 80099d8:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80099da:	697b      	ldr	r3, [r7, #20]
 80099dc:	7b5b      	ldrb	r3, [r3, #13]
 80099de:	021b      	lsls	r3, r3, #8
 80099e0:	b21b      	sxth	r3, r3
 80099e2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80099e6:	b219      	sxth	r1, r3
 80099e8:	697b      	ldr	r3, [r7, #20]
 80099ea:	7adb      	ldrb	r3, [r3, #11]
 80099ec:	b21b      	sxth	r3, r3
 80099ee:	430b      	orrs	r3, r1
 80099f0:	b21b      	sxth	r3, r3
 80099f2:	b29b      	uxth	r3, r3
 80099f4:	009b      	lsls	r3, r3, #2
 80099f6:	4413      	add	r3, r2
 80099f8:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80099fa:	687b      	ldr	r3, [r7, #4]
 80099fc:	7b1b      	ldrb	r3, [r3, #12]
 80099fe:	837b      	strh	r3, [r7, #26]
 8009a00:	e013      	b.n	8009a2a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 8009a02:	69fb      	ldr	r3, [r7, #28]
 8009a04:	881b      	ldrh	r3, [r3, #0]
 8009a06:	897a      	ldrh	r2, [r7, #10]
 8009a08:	429a      	cmp	r2, r3
 8009a0a:	d103      	bne.n	8009a14 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 8009a0c:	69fb      	ldr	r3, [r7, #28]
 8009a0e:	f993 3002 	ldrsb.w	r3, [r3, #2]
 8009a12:	e010      	b.n	8009a36 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 8009a14:	69fb      	ldr	r3, [r7, #28]
 8009a16:	881b      	ldrh	r3, [r3, #0]
 8009a18:	897a      	ldrh	r2, [r7, #10]
 8009a1a:	429a      	cmp	r2, r3
 8009a1c:	d309      	bcc.n	8009a32 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8009a1e:	8b7b      	ldrh	r3, [r7, #26]
 8009a20:	3b01      	subs	r3, #1
 8009a22:	837b      	strh	r3, [r7, #26]
 8009a24:	69fb      	ldr	r3, [r7, #28]
 8009a26:	3304      	adds	r3, #4
 8009a28:	61fb      	str	r3, [r7, #28]
 8009a2a:	8b7b      	ldrh	r3, [r7, #26]
 8009a2c:	2b00      	cmp	r3, #0
 8009a2e:	d1e8      	bne.n	8009a02 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 8009a30:	e000      	b.n	8009a34 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 8009a32:	bf00      	nop
        }
    }
    return 0;
 8009a34:	2300      	movs	r3, #0
}
 8009a36:	4618      	mov	r0, r3
 8009a38:	3724      	adds	r7, #36	; 0x24
 8009a3a:	46bd      	mov	sp, r7
 8009a3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a40:	4770      	bx	lr
	...

08009a44 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8009a44:	b580      	push	{r7, lr}
 8009a46:	af00      	add	r7, sp, #0
 8009a48:	4801      	ldr	r0, [pc, #4]	; (8009a50 <__tcf_0+0xc>)
 8009a4a:	f7ff feff 	bl	800984c <_ZN8touchgfx13GeneratedFontD1Ev>
 8009a4e:	bd80      	pop	{r7, pc}
 8009a50:	20000394 	.word	0x20000394

08009a54 <_Z23getFont_verdana_10_4bppv>:
{
 8009a54:	b580      	push	{r7, lr}
 8009a56:	b08e      	sub	sp, #56	; 0x38
 8009a58:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8009a5a:	4b21      	ldr	r3, [pc, #132]	; (8009ae0 <_Z23getFont_verdana_10_4bppv+0x8c>)
 8009a5c:	681b      	ldr	r3, [r3, #0]
 8009a5e:	f3bf 8f5b 	dmb	ish
 8009a62:	f003 0301 	and.w	r3, r3, #1
 8009a66:	2b00      	cmp	r3, #0
 8009a68:	bf0c      	ite	eq
 8009a6a:	2301      	moveq	r3, #1
 8009a6c:	2300      	movne	r3, #0
 8009a6e:	b2db      	uxtb	r3, r3
 8009a70:	2b00      	cmp	r3, #0
 8009a72:	d030      	beq.n	8009ad6 <_Z23getFont_verdana_10_4bppv+0x82>
 8009a74:	481a      	ldr	r0, [pc, #104]	; (8009ae0 <_Z23getFont_verdana_10_4bppv+0x8c>)
 8009a76:	f020 feb4 	bl	802a7e2 <__cxa_guard_acquire>
 8009a7a:	4603      	mov	r3, r0
 8009a7c:	2b00      	cmp	r3, #0
 8009a7e:	bf14      	ite	ne
 8009a80:	2301      	movne	r3, #1
 8009a82:	2300      	moveq	r3, #0
 8009a84:	b2db      	uxtb	r3, r3
 8009a86:	2b00      	cmp	r3, #0
 8009a88:	d025      	beq.n	8009ad6 <_Z23getFont_verdana_10_4bppv+0x82>
 8009a8a:	2300      	movs	r3, #0
 8009a8c:	930c      	str	r3, [sp, #48]	; 0x30
 8009a8e:	2300      	movs	r3, #0
 8009a90:	930b      	str	r3, [sp, #44]	; 0x2c
 8009a92:	2300      	movs	r3, #0
 8009a94:	930a      	str	r3, [sp, #40]	; 0x28
 8009a96:	233f      	movs	r3, #63	; 0x3f
 8009a98:	9309      	str	r3, [sp, #36]	; 0x24
 8009a9a:	4b12      	ldr	r3, [pc, #72]	; (8009ae4 <_Z23getFont_verdana_10_4bppv+0x90>)
 8009a9c:	9308      	str	r3, [sp, #32]
 8009a9e:	4b12      	ldr	r3, [pc, #72]	; (8009ae8 <_Z23getFont_verdana_10_4bppv+0x94>)
 8009aa0:	9307      	str	r3, [sp, #28]
 8009aa2:	2300      	movs	r3, #0
 8009aa4:	9306      	str	r3, [sp, #24]
 8009aa6:	2300      	movs	r3, #0
 8009aa8:	9305      	str	r3, [sp, #20]
 8009aaa:	2301      	movs	r3, #1
 8009aac:	9304      	str	r3, [sp, #16]
 8009aae:	2304      	movs	r3, #4
 8009ab0:	9303      	str	r3, [sp, #12]
 8009ab2:	2300      	movs	r3, #0
 8009ab4:	9302      	str	r3, [sp, #8]
 8009ab6:	2300      	movs	r3, #0
 8009ab8:	9301      	str	r3, [sp, #4]
 8009aba:	230a      	movs	r3, #10
 8009abc:	9300      	str	r3, [sp, #0]
 8009abe:	230a      	movs	r3, #10
 8009ac0:	2201      	movs	r2, #1
 8009ac2:	490a      	ldr	r1, [pc, #40]	; (8009aec <_Z23getFont_verdana_10_4bppv+0x98>)
 8009ac4:	480a      	ldr	r0, [pc, #40]	; (8009af0 <_Z23getFont_verdana_10_4bppv+0x9c>)
 8009ac6:	f7ff ff1b 	bl	8009900 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8009aca:	480a      	ldr	r0, [pc, #40]	; (8009af4 <_Z23getFont_verdana_10_4bppv+0xa0>)
 8009acc:	f021 fc96 	bl	802b3fc <atexit>
 8009ad0:	4803      	ldr	r0, [pc, #12]	; (8009ae0 <_Z23getFont_verdana_10_4bppv+0x8c>)
 8009ad2:	f020 fe92 	bl	802a7fa <__cxa_guard_release>
    return verdana_10_4bpp;
 8009ad6:	4b06      	ldr	r3, [pc, #24]	; (8009af0 <_Z23getFont_verdana_10_4bppv+0x9c>)
}
 8009ad8:	4618      	mov	r0, r3
 8009ada:	46bd      	mov	sp, r7
 8009adc:	bd80      	pop	{r7, pc}
 8009ade:	bf00      	nop
 8009ae0:	200003c0 	.word	0x200003c0
 8009ae4:	08034d30 	.word	0x08034d30
 8009ae8:	08034f4c 	.word	0x08034f4c
 8009aec:	08034600 	.word	0x08034600
 8009af0:	20000394 	.word	0x20000394
 8009af4:	08009a45 	.word	0x08009a45

08009af8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 95, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 0, 0, 0, 0);
 8009af8:	b580      	push	{r7, lr}
 8009afa:	af00      	add	r7, sp, #0
 8009afc:	4801      	ldr	r0, [pc, #4]	; (8009b04 <__tcf_0+0xc>)
 8009afe:	f7ff fea5 	bl	800984c <_ZN8touchgfx13GeneratedFontD1Ev>
 8009b02:	bd80      	pop	{r7, pc}
 8009b04:	200003c4 	.word	0x200003c4

08009b08 <_Z23getFont_verdana_20_4bppv>:
{
 8009b08:	b580      	push	{r7, lr}
 8009b0a:	b08e      	sub	sp, #56	; 0x38
 8009b0c:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 95, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 0, 0, 0, 0);
 8009b0e:	4b21      	ldr	r3, [pc, #132]	; (8009b94 <_Z23getFont_verdana_20_4bppv+0x8c>)
 8009b10:	681b      	ldr	r3, [r3, #0]
 8009b12:	f3bf 8f5b 	dmb	ish
 8009b16:	f003 0301 	and.w	r3, r3, #1
 8009b1a:	2b00      	cmp	r3, #0
 8009b1c:	bf0c      	ite	eq
 8009b1e:	2301      	moveq	r3, #1
 8009b20:	2300      	movne	r3, #0
 8009b22:	b2db      	uxtb	r3, r3
 8009b24:	2b00      	cmp	r3, #0
 8009b26:	d030      	beq.n	8009b8a <_Z23getFont_verdana_20_4bppv+0x82>
 8009b28:	481a      	ldr	r0, [pc, #104]	; (8009b94 <_Z23getFont_verdana_20_4bppv+0x8c>)
 8009b2a:	f020 fe5a 	bl	802a7e2 <__cxa_guard_acquire>
 8009b2e:	4603      	mov	r3, r0
 8009b30:	2b00      	cmp	r3, #0
 8009b32:	bf14      	ite	ne
 8009b34:	2301      	movne	r3, #1
 8009b36:	2300      	moveq	r3, #0
 8009b38:	b2db      	uxtb	r3, r3
 8009b3a:	2b00      	cmp	r3, #0
 8009b3c:	d025      	beq.n	8009b8a <_Z23getFont_verdana_20_4bppv+0x82>
 8009b3e:	2300      	movs	r3, #0
 8009b40:	930c      	str	r3, [sp, #48]	; 0x30
 8009b42:	2300      	movs	r3, #0
 8009b44:	930b      	str	r3, [sp, #44]	; 0x2c
 8009b46:	2300      	movs	r3, #0
 8009b48:	930a      	str	r3, [sp, #40]	; 0x28
 8009b4a:	2300      	movs	r3, #0
 8009b4c:	9309      	str	r3, [sp, #36]	; 0x24
 8009b4e:	4b12      	ldr	r3, [pc, #72]	; (8009b98 <_Z23getFont_verdana_20_4bppv+0x90>)
 8009b50:	9308      	str	r3, [sp, #32]
 8009b52:	4b12      	ldr	r3, [pc, #72]	; (8009b9c <_Z23getFont_verdana_20_4bppv+0x94>)
 8009b54:	9307      	str	r3, [sp, #28]
 8009b56:	2301      	movs	r3, #1
 8009b58:	9306      	str	r3, [sp, #24]
 8009b5a:	2301      	movs	r3, #1
 8009b5c:	9305      	str	r3, [sp, #20]
 8009b5e:	2301      	movs	r3, #1
 8009b60:	9304      	str	r3, [sp, #16]
 8009b62:	2304      	movs	r3, #4
 8009b64:	9303      	str	r3, [sp, #12]
 8009b66:	2300      	movs	r3, #0
 8009b68:	9302      	str	r3, [sp, #8]
 8009b6a:	2300      	movs	r3, #0
 8009b6c:	9301      	str	r3, [sp, #4]
 8009b6e:	2314      	movs	r3, #20
 8009b70:	9300      	str	r3, [sp, #0]
 8009b72:	2318      	movs	r3, #24
 8009b74:	225f      	movs	r2, #95	; 0x5f
 8009b76:	490a      	ldr	r1, [pc, #40]	; (8009ba0 <_Z23getFont_verdana_20_4bppv+0x98>)
 8009b78:	480a      	ldr	r0, [pc, #40]	; (8009ba4 <_Z23getFont_verdana_20_4bppv+0x9c>)
 8009b7a:	f7ff fec1 	bl	8009900 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8009b7e:	480a      	ldr	r0, [pc, #40]	; (8009ba8 <_Z23getFont_verdana_20_4bppv+0xa0>)
 8009b80:	f021 fc3c 	bl	802b3fc <atexit>
 8009b84:	4803      	ldr	r0, [pc, #12]	; (8009b94 <_Z23getFont_verdana_20_4bppv+0x8c>)
 8009b86:	f020 fe38 	bl	802a7fa <__cxa_guard_release>
    return verdana_20_4bpp;
 8009b8a:	4b06      	ldr	r3, [pc, #24]	; (8009ba4 <_Z23getFont_verdana_20_4bppv+0x9c>)
}
 8009b8c:	4618      	mov	r0, r3
 8009b8e:	46bd      	mov	sp, r7
 8009b90:	bd80      	pop	{r7, pc}
 8009b92:	bf00      	nop
 8009b94:	200003f0 	.word	0x200003f0
 8009b98:	08034d34 	.word	0x08034d34
 8009b9c:	08034f50 	.word	0x08034f50
 8009ba0:	08034610 	.word	0x08034610
 8009ba4:	200003c4 	.word	0x200003c4
 8009ba8:	08009af9 	.word	0x08009af9

08009bac <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 35, 48, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8009bac:	b580      	push	{r7, lr}
 8009bae:	af00      	add	r7, sp, #0
 8009bb0:	4801      	ldr	r0, [pc, #4]	; (8009bb8 <__tcf_0+0xc>)
 8009bb2:	f7ff fe4b 	bl	800984c <_ZN8touchgfx13GeneratedFontD1Ev>
 8009bb6:	bd80      	pop	{r7, pc}
 8009bb8:	200003f4 	.word	0x200003f4

08009bbc <_Z23getFont_verdana_40_4bppv>:
{
 8009bbc:	b580      	push	{r7, lr}
 8009bbe:	b08e      	sub	sp, #56	; 0x38
 8009bc0:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 35, 48, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8009bc2:	4b21      	ldr	r3, [pc, #132]	; (8009c48 <_Z23getFont_verdana_40_4bppv+0x8c>)
 8009bc4:	681b      	ldr	r3, [r3, #0]
 8009bc6:	f3bf 8f5b 	dmb	ish
 8009bca:	f003 0301 	and.w	r3, r3, #1
 8009bce:	2b00      	cmp	r3, #0
 8009bd0:	bf0c      	ite	eq
 8009bd2:	2301      	moveq	r3, #1
 8009bd4:	2300      	movne	r3, #0
 8009bd6:	b2db      	uxtb	r3, r3
 8009bd8:	2b00      	cmp	r3, #0
 8009bda:	d030      	beq.n	8009c3e <_Z23getFont_verdana_40_4bppv+0x82>
 8009bdc:	481a      	ldr	r0, [pc, #104]	; (8009c48 <_Z23getFont_verdana_40_4bppv+0x8c>)
 8009bde:	f020 fe00 	bl	802a7e2 <__cxa_guard_acquire>
 8009be2:	4603      	mov	r3, r0
 8009be4:	2b00      	cmp	r3, #0
 8009be6:	bf14      	ite	ne
 8009be8:	2301      	movne	r3, #1
 8009bea:	2300      	moveq	r3, #0
 8009bec:	b2db      	uxtb	r3, r3
 8009bee:	2b00      	cmp	r3, #0
 8009bf0:	d025      	beq.n	8009c3e <_Z23getFont_verdana_40_4bppv+0x82>
 8009bf2:	2300      	movs	r3, #0
 8009bf4:	930c      	str	r3, [sp, #48]	; 0x30
 8009bf6:	2300      	movs	r3, #0
 8009bf8:	930b      	str	r3, [sp, #44]	; 0x2c
 8009bfa:	2300      	movs	r3, #0
 8009bfc:	930a      	str	r3, [sp, #40]	; 0x28
 8009bfe:	233f      	movs	r3, #63	; 0x3f
 8009c00:	9309      	str	r3, [sp, #36]	; 0x24
 8009c02:	4b12      	ldr	r3, [pc, #72]	; (8009c4c <_Z23getFont_verdana_40_4bppv+0x90>)
 8009c04:	9308      	str	r3, [sp, #32]
 8009c06:	4b12      	ldr	r3, [pc, #72]	; (8009c50 <_Z23getFont_verdana_40_4bppv+0x94>)
 8009c08:	9307      	str	r3, [sp, #28]
 8009c0a:	2301      	movs	r3, #1
 8009c0c:	9306      	str	r3, [sp, #24]
 8009c0e:	2300      	movs	r3, #0
 8009c10:	9305      	str	r3, [sp, #20]
 8009c12:	2301      	movs	r3, #1
 8009c14:	9304      	str	r3, [sp, #16]
 8009c16:	2304      	movs	r3, #4
 8009c18:	9303      	str	r3, [sp, #12]
 8009c1a:	2300      	movs	r3, #0
 8009c1c:	9302      	str	r3, [sp, #8]
 8009c1e:	2300      	movs	r3, #0
 8009c20:	9301      	str	r3, [sp, #4]
 8009c22:	2328      	movs	r3, #40	; 0x28
 8009c24:	9300      	str	r3, [sp, #0]
 8009c26:	2330      	movs	r3, #48	; 0x30
 8009c28:	2223      	movs	r2, #35	; 0x23
 8009c2a:	490a      	ldr	r1, [pc, #40]	; (8009c54 <_Z23getFont_verdana_40_4bppv+0x98>)
 8009c2c:	480a      	ldr	r0, [pc, #40]	; (8009c58 <_Z23getFont_verdana_40_4bppv+0x9c>)
 8009c2e:	f7ff fe67 	bl	8009900 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8009c32:	480a      	ldr	r0, [pc, #40]	; (8009c5c <_Z23getFont_verdana_40_4bppv+0xa0>)
 8009c34:	f021 fbe2 	bl	802b3fc <atexit>
 8009c38:	4803      	ldr	r0, [pc, #12]	; (8009c48 <_Z23getFont_verdana_40_4bppv+0x8c>)
 8009c3a:	f020 fdde 	bl	802a7fa <__cxa_guard_release>
    return verdana_40_4bpp;
 8009c3e:	4b06      	ldr	r3, [pc, #24]	; (8009c58 <_Z23getFont_verdana_40_4bppv+0x9c>)
}
 8009c40:	4618      	mov	r0, r3
 8009c42:	46bd      	mov	sp, r7
 8009c44:	bd80      	pop	{r7, pc}
 8009c46:	bf00      	nop
 8009c48:	20000420 	.word	0x20000420
 8009c4c:	08034ed8 	.word	0x08034ed8
 8009c50:	08034f54 	.word	0x08034f54
 8009c54:	08034b44 	.word	0x08034b44
 8009c58:	200003f4 	.word	0x200003f4
 8009c5c:	08009bad 	.word	0x08009bad

08009c60 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 8009c60:	b480      	push	{r7}
 8009c62:	b083      	sub	sp, #12
 8009c64:	af00      	add	r7, sp, #0
 8009c66:	6078      	str	r0, [r7, #4]
 8009c68:	6039      	str	r1, [r7, #0]
        : color(col)
 8009c6a:	687b      	ldr	r3, [r7, #4]
 8009c6c:	683a      	ldr	r2, [r7, #0]
 8009c6e:	601a      	str	r2, [r3, #0]
    {
    }
 8009c70:	687b      	ldr	r3, [r7, #4]
 8009c72:	4618      	mov	r0, r3
 8009c74:	370c      	adds	r7, #12
 8009c76:	46bd      	mov	sp, r7
 8009c78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c7c:	4770      	bx	lr

08009c7e <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 8009c7e:	b480      	push	{r7}
 8009c80:	b083      	sub	sp, #12
 8009c82:	af00      	add	r7, sp, #0
 8009c84:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 8009c86:	687b      	ldr	r3, [r7, #4]
 8009c88:	2200      	movs	r2, #0
 8009c8a:	801a      	strh	r2, [r3, #0]
 8009c8c:	687b      	ldr	r3, [r7, #4]
 8009c8e:	2200      	movs	r2, #0
 8009c90:	805a      	strh	r2, [r3, #2]
 8009c92:	687b      	ldr	r3, [r7, #4]
 8009c94:	2200      	movs	r2, #0
 8009c96:	809a      	strh	r2, [r3, #4]
 8009c98:	687b      	ldr	r3, [r7, #4]
 8009c9a:	2200      	movs	r2, #0
 8009c9c:	80da      	strh	r2, [r3, #6]
    {
    }
 8009c9e:	687b      	ldr	r3, [r7, #4]
 8009ca0:	4618      	mov	r0, r3
 8009ca2:	370c      	adds	r7, #12
 8009ca4:	46bd      	mov	sp, r7
 8009ca6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009caa:	4770      	bx	lr

08009cac <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 8009cac:	b480      	push	{r7}
 8009cae:	b085      	sub	sp, #20
 8009cb0:	af00      	add	r7, sp, #0
 8009cb2:	60f8      	str	r0, [r7, #12]
 8009cb4:	4608      	mov	r0, r1
 8009cb6:	4611      	mov	r1, r2
 8009cb8:	461a      	mov	r2, r3
 8009cba:	4603      	mov	r3, r0
 8009cbc:	817b      	strh	r3, [r7, #10]
 8009cbe:	460b      	mov	r3, r1
 8009cc0:	813b      	strh	r3, [r7, #8]
 8009cc2:	4613      	mov	r3, r2
 8009cc4:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8009cc6:	68fb      	ldr	r3, [r7, #12]
 8009cc8:	897a      	ldrh	r2, [r7, #10]
 8009cca:	801a      	strh	r2, [r3, #0]
 8009ccc:	68fb      	ldr	r3, [r7, #12]
 8009cce:	893a      	ldrh	r2, [r7, #8]
 8009cd0:	805a      	strh	r2, [r3, #2]
 8009cd2:	68fb      	ldr	r3, [r7, #12]
 8009cd4:	88fa      	ldrh	r2, [r7, #6]
 8009cd6:	809a      	strh	r2, [r3, #4]
 8009cd8:	68fb      	ldr	r3, [r7, #12]
 8009cda:	8b3a      	ldrh	r2, [r7, #24]
 8009cdc:	80da      	strh	r2, [r3, #6]
    {
    }
 8009cde:	68fb      	ldr	r3, [r7, #12]
 8009ce0:	4618      	mov	r0, r3
 8009ce2:	3714      	adds	r7, #20
 8009ce4:	46bd      	mov	sp, r7
 8009ce6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cea:	4770      	bx	lr

08009cec <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 8009cec:	b480      	push	{r7}
 8009cee:	b083      	sub	sp, #12
 8009cf0:	af00      	add	r7, sp, #0
 8009cf2:	6078      	str	r0, [r7, #4]
 8009cf4:	460b      	mov	r3, r1
 8009cf6:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 8009cf8:	687b      	ldr	r3, [r7, #4]
 8009cfa:	887a      	ldrh	r2, [r7, #2]
 8009cfc:	801a      	strh	r2, [r3, #0]
    {
    }
 8009cfe:	687b      	ldr	r3, [r7, #4]
 8009d00:	4618      	mov	r0, r3
 8009d02:	370c      	adds	r7, #12
 8009d04:	46bd      	mov	sp, r7
 8009d06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d0a:	4770      	bx	lr

08009d0c <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 8009d0c:	b580      	push	{r7, lr}
 8009d0e:	b082      	sub	sp, #8
 8009d10:	af00      	add	r7, sp, #0
 8009d12:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 8009d14:	4a14      	ldr	r2, [pc, #80]	; (8009d68 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 8009d16:	687b      	ldr	r3, [r7, #4]
 8009d18:	601a      	str	r2, [r3, #0]
        : rect(),
 8009d1a:	687b      	ldr	r3, [r7, #4]
 8009d1c:	3304      	adds	r3, #4
 8009d1e:	4618      	mov	r0, r3
 8009d20:	f7ff ffad 	bl	8009c7e <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 8009d24:	687b      	ldr	r3, [r7, #4]
 8009d26:	330c      	adds	r3, #12
 8009d28:	4618      	mov	r0, r3
 8009d2a:	f7ff ffa8 	bl	8009c7e <_ZN8touchgfx4RectC1Ev>
          parent(0),
 8009d2e:	687b      	ldr	r3, [r7, #4]
 8009d30:	2200      	movs	r2, #0
 8009d32:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 8009d34:	687b      	ldr	r3, [r7, #4]
 8009d36:	2200      	movs	r2, #0
 8009d38:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 8009d3a:	687b      	ldr	r3, [r7, #4]
 8009d3c:	2200      	movs	r2, #0
 8009d3e:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 8009d40:	687b      	ldr	r3, [r7, #4]
 8009d42:	2200      	movs	r2, #0
 8009d44:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 8009d46:	687b      	ldr	r3, [r7, #4]
 8009d48:	2200      	movs	r2, #0
 8009d4a:	845a      	strh	r2, [r3, #34]	; 0x22
          touchable(false),
 8009d4c:	687b      	ldr	r3, [r7, #4]
 8009d4e:	2200      	movs	r2, #0
 8009d50:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
          visible(true)
 8009d54:	687b      	ldr	r3, [r7, #4]
 8009d56:	2201      	movs	r2, #1
 8009d58:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 8009d5c:	687b      	ldr	r3, [r7, #4]
 8009d5e:	4618      	mov	r0, r3
 8009d60:	3708      	adds	r7, #8
 8009d62:	46bd      	mov	sp, r7
 8009d64:	bd80      	pop	{r7, pc}
 8009d66:	bf00      	nop
 8009d68:	0802fa38 	.word	0x0802fa38

08009d6c <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 8009d6c:	b480      	push	{r7}
 8009d6e:	b083      	sub	sp, #12
 8009d70:	af00      	add	r7, sp, #0
 8009d72:	6078      	str	r0, [r7, #4]
    {
 8009d74:	4a04      	ldr	r2, [pc, #16]	; (8009d88 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 8009d76:	687b      	ldr	r3, [r7, #4]
 8009d78:	601a      	str	r2, [r3, #0]
    }
 8009d7a:	687b      	ldr	r3, [r7, #4]
 8009d7c:	4618      	mov	r0, r3
 8009d7e:	370c      	adds	r7, #12
 8009d80:	46bd      	mov	sp, r7
 8009d82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d86:	4770      	bx	lr
 8009d88:	0802fa38 	.word	0x0802fa38

08009d8c <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 8009d8c:	b580      	push	{r7, lr}
 8009d8e:	b082      	sub	sp, #8
 8009d90:	af00      	add	r7, sp, #0
 8009d92:	6078      	str	r0, [r7, #4]
    }
 8009d94:	6878      	ldr	r0, [r7, #4]
 8009d96:	f7ff ffe9 	bl	8009d6c <_ZN8touchgfx8DrawableD1Ev>
 8009d9a:	2128      	movs	r1, #40	; 0x28
 8009d9c:	6878      	ldr	r0, [r7, #4]
 8009d9e:	f020 fd1e 	bl	802a7de <_ZdlPvj>
 8009da2:	687b      	ldr	r3, [r7, #4]
 8009da4:	4618      	mov	r0, r3
 8009da6:	3708      	adds	r7, #8
 8009da8:	46bd      	mov	sp, r7
 8009daa:	bd80      	pop	{r7, pc}

08009dac <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 8009dac:	b580      	push	{r7, lr}
 8009dae:	b082      	sub	sp, #8
 8009db0:	af00      	add	r7, sp, #0
 8009db2:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 8009db4:	687b      	ldr	r3, [r7, #4]
 8009db6:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 8009dba:	2b00      	cmp	r3, #0
 8009dbc:	d005      	beq.n	8009dca <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 8009dbe:	687b      	ldr	r3, [r7, #4]
 8009dc0:	681b      	ldr	r3, [r3, #0]
 8009dc2:	3314      	adds	r3, #20
 8009dc4:	681b      	ldr	r3, [r3, #0]
 8009dc6:	6878      	ldr	r0, [r7, #4]
 8009dc8:	4798      	blx	r3
        }
    }
 8009dca:	bf00      	nop
 8009dcc:	3708      	adds	r7, #8
 8009dce:	46bd      	mov	sp, r7
 8009dd0:	bd80      	pop	{r7, pc}

08009dd2 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 8009dd2:	b480      	push	{r7}
 8009dd4:	b083      	sub	sp, #12
 8009dd6:	af00      	add	r7, sp, #0
 8009dd8:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8009dda:	2300      	movs	r3, #0
    }
 8009ddc:	4618      	mov	r0, r3
 8009dde:	370c      	adds	r7, #12
 8009de0:	46bd      	mov	sp, r7
 8009de2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009de6:	4770      	bx	lr

08009de8 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8009de8:	b580      	push	{r7, lr}
 8009dea:	b084      	sub	sp, #16
 8009dec:	af00      	add	r7, sp, #0
 8009dee:	60f8      	str	r0, [r7, #12]
 8009df0:	4608      	mov	r0, r1
 8009df2:	4611      	mov	r1, r2
 8009df4:	461a      	mov	r2, r3
 8009df6:	4603      	mov	r3, r0
 8009df8:	817b      	strh	r3, [r7, #10]
 8009dfa:	460b      	mov	r3, r1
 8009dfc:	813b      	strh	r3, [r7, #8]
 8009dfe:	4613      	mov	r3, r2
 8009e00:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 8009e02:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8009e06:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8009e0a:	4619      	mov	r1, r3
 8009e0c:	68f8      	ldr	r0, [r7, #12]
 8009e0e:	f000 f82a 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8009e12:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 8009e16:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8009e1a:	4619      	mov	r1, r3
 8009e1c:	68f8      	ldr	r0, [r7, #12]
 8009e1e:	f000 f87e 	bl	8009f1e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 8009e22:	bf00      	nop
 8009e24:	3710      	adds	r7, #16
 8009e26:	46bd      	mov	sp, r7
 8009e28:	bd80      	pop	{r7, pc}

08009e2a <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 8009e2a:	b480      	push	{r7}
 8009e2c:	b083      	sub	sp, #12
 8009e2e:	af00      	add	r7, sp, #0
 8009e30:	6078      	str	r0, [r7, #4]
 8009e32:	460b      	mov	r3, r1
 8009e34:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 8009e36:	687b      	ldr	r3, [r7, #4]
 8009e38:	887a      	ldrh	r2, [r7, #2]
 8009e3a:	809a      	strh	r2, [r3, #4]
    }
 8009e3c:	bf00      	nop
 8009e3e:	370c      	adds	r7, #12
 8009e40:	46bd      	mov	sp, r7
 8009e42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e46:	4770      	bx	lr

08009e48 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 8009e48:	b480      	push	{r7}
 8009e4a:	b083      	sub	sp, #12
 8009e4c:	af00      	add	r7, sp, #0
 8009e4e:	6078      	str	r0, [r7, #4]
 8009e50:	460b      	mov	r3, r1
 8009e52:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 8009e54:	687b      	ldr	r3, [r7, #4]
 8009e56:	887a      	ldrh	r2, [r7, #2]
 8009e58:	80da      	strh	r2, [r3, #6]
    }
 8009e5a:	bf00      	nop
 8009e5c:	370c      	adds	r7, #12
 8009e5e:	46bd      	mov	sp, r7
 8009e60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e64:	4770      	bx	lr

08009e66 <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 8009e66:	b580      	push	{r7, lr}
 8009e68:	b082      	sub	sp, #8
 8009e6a:	af00      	add	r7, sp, #0
 8009e6c:	6078      	str	r0, [r7, #4]
 8009e6e:	460b      	mov	r3, r1
 8009e70:	807b      	strh	r3, [r7, #2]
 8009e72:	4613      	mov	r3, r2
 8009e74:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 8009e76:	687b      	ldr	r3, [r7, #4]
 8009e78:	681b      	ldr	r3, [r3, #0]
 8009e7a:	3330      	adds	r3, #48	; 0x30
 8009e7c:	681b      	ldr	r3, [r3, #0]
 8009e7e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8009e82:	4611      	mov	r1, r2
 8009e84:	6878      	ldr	r0, [r7, #4]
 8009e86:	4798      	blx	r3
        setY(y);
 8009e88:	687b      	ldr	r3, [r7, #4]
 8009e8a:	681b      	ldr	r3, [r3, #0]
 8009e8c:	3334      	adds	r3, #52	; 0x34
 8009e8e:	681b      	ldr	r3, [r3, #0]
 8009e90:	f9b7 2000 	ldrsh.w	r2, [r7]
 8009e94:	4611      	mov	r1, r2
 8009e96:	6878      	ldr	r0, [r7, #4]
 8009e98:	4798      	blx	r3
    }
 8009e9a:	bf00      	nop
 8009e9c:	3708      	adds	r7, #8
 8009e9e:	46bd      	mov	sp, r7
 8009ea0:	bd80      	pop	{r7, pc}

08009ea2 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 8009ea2:	b480      	push	{r7}
 8009ea4:	b083      	sub	sp, #12
 8009ea6:	af00      	add	r7, sp, #0
 8009ea8:	6078      	str	r0, [r7, #4]
 8009eaa:	460b      	mov	r3, r1
 8009eac:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 8009eae:	687b      	ldr	r3, [r7, #4]
 8009eb0:	887a      	ldrh	r2, [r7, #2]
 8009eb2:	811a      	strh	r2, [r3, #8]
    }
 8009eb4:	bf00      	nop
 8009eb6:	370c      	adds	r7, #12
 8009eb8:	46bd      	mov	sp, r7
 8009eba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ebe:	4770      	bx	lr

08009ec0 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 8009ec0:	b480      	push	{r7}
 8009ec2:	b083      	sub	sp, #12
 8009ec4:	af00      	add	r7, sp, #0
 8009ec6:	6078      	str	r0, [r7, #4]
 8009ec8:	460b      	mov	r3, r1
 8009eca:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 8009ecc:	687b      	ldr	r3, [r7, #4]
 8009ece:	887a      	ldrh	r2, [r7, #2]
 8009ed0:	815a      	strh	r2, [r3, #10]
    }
 8009ed2:	bf00      	nop
 8009ed4:	370c      	adds	r7, #12
 8009ed6:	46bd      	mov	sp, r7
 8009ed8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009edc:	4770      	bx	lr

08009ede <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 8009ede:	b480      	push	{r7}
 8009ee0:	b083      	sub	sp, #12
 8009ee2:	af00      	add	r7, sp, #0
 8009ee4:	6078      	str	r0, [r7, #4]
    {
    }
 8009ee6:	bf00      	nop
 8009ee8:	370c      	adds	r7, #12
 8009eea:	46bd      	mov	sp, r7
 8009eec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ef0:	4770      	bx	lr

08009ef2 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8009ef2:	b480      	push	{r7}
 8009ef4:	b083      	sub	sp, #12
 8009ef6:	af00      	add	r7, sp, #0
 8009ef8:	6078      	str	r0, [r7, #4]
 8009efa:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009efc:	bf00      	nop
 8009efe:	370c      	adds	r7, #12
 8009f00:	46bd      	mov	sp, r7
 8009f02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f06:	4770      	bx	lr

08009f08 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8009f08:	b480      	push	{r7}
 8009f0a:	b083      	sub	sp, #12
 8009f0c:	af00      	add	r7, sp, #0
 8009f0e:	6078      	str	r0, [r7, #4]
 8009f10:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009f12:	bf00      	nop
 8009f14:	370c      	adds	r7, #12
 8009f16:	46bd      	mov	sp, r7
 8009f18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f1c:	4770      	bx	lr

08009f1e <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 8009f1e:	b580      	push	{r7, lr}
 8009f20:	b082      	sub	sp, #8
 8009f22:	af00      	add	r7, sp, #0
 8009f24:	6078      	str	r0, [r7, #4]
 8009f26:	460b      	mov	r3, r1
 8009f28:	807b      	strh	r3, [r7, #2]
 8009f2a:	4613      	mov	r3, r2
 8009f2c:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 8009f2e:	687b      	ldr	r3, [r7, #4]
 8009f30:	681b      	ldr	r3, [r3, #0]
 8009f32:	3338      	adds	r3, #56	; 0x38
 8009f34:	681b      	ldr	r3, [r3, #0]
 8009f36:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8009f3a:	4611      	mov	r1, r2
 8009f3c:	6878      	ldr	r0, [r7, #4]
 8009f3e:	4798      	blx	r3
        setHeight(height);
 8009f40:	687b      	ldr	r3, [r7, #4]
 8009f42:	681b      	ldr	r3, [r3, #0]
 8009f44:	333c      	adds	r3, #60	; 0x3c
 8009f46:	681b      	ldr	r3, [r3, #0]
 8009f48:	f9b7 2000 	ldrsh.w	r2, [r7]
 8009f4c:	4611      	mov	r1, r2
 8009f4e:	6878      	ldr	r0, [r7, #4]
 8009f50:	4798      	blx	r3
    }
 8009f52:	bf00      	nop
 8009f54:	3708      	adds	r7, #8
 8009f56:	46bd      	mov	sp, r7
 8009f58:	bd80      	pop	{r7, pc}

08009f5a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8009f5a:	b480      	push	{r7}
 8009f5c:	b083      	sub	sp, #12
 8009f5e:	af00      	add	r7, sp, #0
 8009f60:	6078      	str	r0, [r7, #4]
 8009f62:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009f64:	bf00      	nop
 8009f66:	370c      	adds	r7, #12
 8009f68:	46bd      	mov	sp, r7
 8009f6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f6e:	4770      	bx	lr

08009f70 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 8009f70:	b480      	push	{r7}
 8009f72:	b083      	sub	sp, #12
 8009f74:	af00      	add	r7, sp, #0
 8009f76:	6078      	str	r0, [r7, #4]
    {
    }
 8009f78:	bf00      	nop
 8009f7a:	370c      	adds	r7, #12
 8009f7c:	46bd      	mov	sp, r7
 8009f7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f82:	4770      	bx	lr

08009f84 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 8009f84:	b480      	push	{r7}
 8009f86:	b083      	sub	sp, #12
 8009f88:	af00      	add	r7, sp, #0
 8009f8a:	6078      	str	r0, [r7, #4]
    {
        return visible;
 8009f8c:	687b      	ldr	r3, [r7, #4]
 8009f8e:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 8009f92:	4618      	mov	r0, r3
 8009f94:	370c      	adds	r7, #12
 8009f96:	46bd      	mov	sp, r7
 8009f98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f9c:	4770      	bx	lr

08009f9e <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 8009f9e:	b480      	push	{r7}
 8009fa0:	b083      	sub	sp, #12
 8009fa2:	af00      	add	r7, sp, #0
 8009fa4:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 8009fa6:	687b      	ldr	r3, [r7, #4]
 8009fa8:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 8009fac:	4618      	mov	r0, r3
 8009fae:	370c      	adds	r7, #12
 8009fb0:	46bd      	mov	sp, r7
 8009fb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fb6:	4770      	bx	lr

08009fb8 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8009fb8:	b580      	push	{r7, lr}
 8009fba:	b082      	sub	sp, #8
 8009fbc:	af00      	add	r7, sp, #0
 8009fbe:	6078      	str	r0, [r7, #4]
 8009fc0:	460b      	mov	r3, r1
 8009fc2:	807b      	strh	r3, [r7, #2]
 8009fc4:	4613      	mov	r3, r2
 8009fc6:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 8009fc8:	687b      	ldr	r3, [r7, #4]
 8009fca:	681b      	ldr	r3, [r3, #0]
 8009fcc:	3354      	adds	r3, #84	; 0x54
 8009fce:	681b      	ldr	r3, [r3, #0]
 8009fd0:	8879      	ldrh	r1, [r7, #2]
 8009fd2:	687a      	ldr	r2, [r7, #4]
 8009fd4:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 8009fd8:	b292      	uxth	r2, r2
 8009fda:	1a8a      	subs	r2, r1, r2
 8009fdc:	b292      	uxth	r2, r2
 8009fde:	b210      	sxth	r0, r2
 8009fe0:	8839      	ldrh	r1, [r7, #0]
 8009fe2:	687a      	ldr	r2, [r7, #4]
 8009fe4:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8009fe8:	b292      	uxth	r2, r2
 8009fea:	1a8a      	subs	r2, r1, r2
 8009fec:	b292      	uxth	r2, r2
 8009fee:	b212      	sxth	r2, r2
 8009ff0:	4601      	mov	r1, r0
 8009ff2:	6878      	ldr	r0, [r7, #4]
 8009ff4:	4798      	blx	r3
    }
 8009ff6:	bf00      	nop
 8009ff8:	3708      	adds	r7, #8
 8009ffa:	46bd      	mov	sp, r7
 8009ffc:	bd80      	pop	{r7, pc}

08009ffe <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 8009ffe:	b480      	push	{r7}
 800a000:	b083      	sub	sp, #12
 800a002:	af00      	add	r7, sp, #0
 800a004:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800a006:	687b      	ldr	r3, [r7, #4]
 800a008:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a00c:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800a00e:	687b      	ldr	r3, [r7, #4]
 800a010:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a014:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 800a016:	687b      	ldr	r3, [r7, #4]
 800a018:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a01c:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 800a01e:	bf00      	nop
 800a020:	370c      	adds	r7, #12
 800a022:	46bd      	mov	sp, r7
 800a024:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a028:	4770      	bx	lr

0800a02a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800a02a:	b580      	push	{r7, lr}
 800a02c:	b084      	sub	sp, #16
 800a02e:	af00      	add	r7, sp, #0
 800a030:	60f8      	str	r0, [r7, #12]
 800a032:	60b9      	str	r1, [r7, #8]
 800a034:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 800a036:	68f8      	ldr	r0, [r7, #12]
 800a038:	f7ff ffe1 	bl	8009ffe <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800a03c:	687b      	ldr	r3, [r7, #4]
 800a03e:	681a      	ldr	r2, [r3, #0]
 800a040:	68fb      	ldr	r3, [r7, #12]
 800a042:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800a044:	687b      	ldr	r3, [r7, #4]
 800a046:	68fa      	ldr	r2, [r7, #12]
 800a048:	601a      	str	r2, [r3, #0]
    }
 800a04a:	bf00      	nop
 800a04c:	3710      	adds	r7, #16
 800a04e:	46bd      	mov	sp, r7
 800a050:	bd80      	pop	{r7, pc}
	...

0800a054 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 800a054:	b580      	push	{r7, lr}
 800a056:	b082      	sub	sp, #8
 800a058:	af00      	add	r7, sp, #0
 800a05a:	6078      	str	r0, [r7, #4]
    {
 800a05c:	4a06      	ldr	r2, [pc, #24]	; (800a078 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800a05e:	687b      	ldr	r3, [r7, #4]
 800a060:	601a      	str	r2, [r3, #0]
 800a062:	687b      	ldr	r3, [r7, #4]
 800a064:	3304      	adds	r3, #4
 800a066:	4618      	mov	r0, r3
 800a068:	f000 fdca 	bl	800ac00 <_ZN8touchgfx9ContainerD1Ev>
    }
 800a06c:	687b      	ldr	r3, [r7, #4]
 800a06e:	4618      	mov	r0, r3
 800a070:	3708      	adds	r7, #8
 800a072:	46bd      	mov	sp, r7
 800a074:	bd80      	pop	{r7, pc}
 800a076:	bf00      	nop
 800a078:	0802fb3c 	.word	0x0802fb3c

0800a07c <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 800a07c:	b580      	push	{r7, lr}
 800a07e:	b082      	sub	sp, #8
 800a080:	af00      	add	r7, sp, #0
 800a082:	6078      	str	r0, [r7, #4]
    }
 800a084:	6878      	ldr	r0, [r7, #4]
 800a086:	f7ff ffe5 	bl	800a054 <_ZN8touchgfx6ScreenD1Ev>
 800a08a:	213c      	movs	r1, #60	; 0x3c
 800a08c:	6878      	ldr	r0, [r7, #4]
 800a08e:	f020 fba6 	bl	802a7de <_ZdlPvj>
 800a092:	687b      	ldr	r3, [r7, #4]
 800a094:	4618      	mov	r0, r3
 800a096:	3708      	adds	r7, #8
 800a098:	46bd      	mov	sp, r7
 800a09a:	bd80      	pop	{r7, pc}

0800a09c <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 800a09c:	b480      	push	{r7}
 800a09e:	b083      	sub	sp, #12
 800a0a0:	af00      	add	r7, sp, #0
 800a0a2:	6078      	str	r0, [r7, #4]
    {
    }
 800a0a4:	bf00      	nop
 800a0a6:	370c      	adds	r7, #12
 800a0a8:	46bd      	mov	sp, r7
 800a0aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0ae:	4770      	bx	lr

0800a0b0 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 800a0b0:	b480      	push	{r7}
 800a0b2:	b083      	sub	sp, #12
 800a0b4:	af00      	add	r7, sp, #0
 800a0b6:	6078      	str	r0, [r7, #4]
    {
    }
 800a0b8:	bf00      	nop
 800a0ba:	370c      	adds	r7, #12
 800a0bc:	46bd      	mov	sp, r7
 800a0be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0c2:	4770      	bx	lr

0800a0c4 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 800a0c4:	b480      	push	{r7}
 800a0c6:	b083      	sub	sp, #12
 800a0c8:	af00      	add	r7, sp, #0
 800a0ca:	6078      	str	r0, [r7, #4]
    {
    }
 800a0cc:	bf00      	nop
 800a0ce:	370c      	adds	r7, #12
 800a0d0:	46bd      	mov	sp, r7
 800a0d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0d6:	4770      	bx	lr

0800a0d8 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800a0d8:	b480      	push	{r7}
 800a0da:	b083      	sub	sp, #12
 800a0dc:	af00      	add	r7, sp, #0
 800a0de:	6078      	str	r0, [r7, #4]
    {
    }
 800a0e0:	bf00      	nop
 800a0e2:	370c      	adds	r7, #12
 800a0e4:	46bd      	mov	sp, r7
 800a0e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0ea:	4770      	bx	lr

0800a0ec <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800a0ec:	b480      	push	{r7}
 800a0ee:	b083      	sub	sp, #12
 800a0f0:	af00      	add	r7, sp, #0
 800a0f2:	6078      	str	r0, [r7, #4]
 800a0f4:	460b      	mov	r3, r1
 800a0f6:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 800a0f8:	bf00      	nop
 800a0fa:	370c      	adds	r7, #12
 800a0fc:	46bd      	mov	sp, r7
 800a0fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a102:	4770      	bx	lr

0800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 800a104:	b580      	push	{r7, lr}
 800a106:	b082      	sub	sp, #8
 800a108:	af00      	add	r7, sp, #0
 800a10a:	6078      	str	r0, [r7, #4]
 800a10c:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800a10e:	687b      	ldr	r3, [r7, #4]
 800a110:	3304      	adds	r3, #4
 800a112:	6839      	ldr	r1, [r7, #0]
 800a114:	4618      	mov	r0, r3
 800a116:	f008 ff8d 	bl	8013034 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800a11a:	bf00      	nop
 800a11c:	3708      	adds	r7, #8
 800a11e:	46bd      	mov	sp, r7
 800a120:	bd80      	pop	{r7, pc}

0800a122 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800a122:	b580      	push	{r7, lr}
 800a124:	b084      	sub	sp, #16
 800a126:	af00      	add	r7, sp, #0
 800a128:	60f8      	str	r0, [r7, #12]
 800a12a:	607b      	str	r3, [r7, #4]
 800a12c:	460b      	mov	r3, r1
 800a12e:	817b      	strh	r3, [r7, #10]
 800a130:	4613      	mov	r3, r2
 800a132:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800a134:	68fb      	ldr	r3, [r7, #12]
 800a136:	4618      	mov	r0, r3
 800a138:	f7ff ff24 	bl	8009f84 <_ZNK8touchgfx8Drawable9isVisibleEv>
 800a13c:	4603      	mov	r3, r0
 800a13e:	2b00      	cmp	r3, #0
 800a140:	d008      	beq.n	800a154 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800a142:	68fb      	ldr	r3, [r7, #12]
 800a144:	4618      	mov	r0, r3
 800a146:	f7ff ff2a 	bl	8009f9e <_ZNK8touchgfx8Drawable11isTouchableEv>
 800a14a:	4603      	mov	r3, r0
 800a14c:	2b00      	cmp	r3, #0
 800a14e:	d001      	beq.n	800a154 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800a150:	2301      	movs	r3, #1
 800a152:	e000      	b.n	800a156 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800a154:	2300      	movs	r3, #0
 800a156:	2b00      	cmp	r3, #0
 800a158:	d002      	beq.n	800a160 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800a15a:	68fa      	ldr	r2, [r7, #12]
 800a15c:	687b      	ldr	r3, [r7, #4]
 800a15e:	601a      	str	r2, [r3, #0]
        }
    }
 800a160:	bf00      	nop
 800a162:	3710      	adds	r7, #16
 800a164:	46bd      	mov	sp, r7
 800a166:	bd80      	pop	{r7, pc}

0800a168 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 800a168:	b580      	push	{r7, lr}
 800a16a:	b082      	sub	sp, #8
 800a16c:	af00      	add	r7, sp, #0
 800a16e:	6078      	str	r0, [r7, #4]
 800a170:	687b      	ldr	r3, [r7, #4]
 800a172:	4618      	mov	r0, r3
 800a174:	f7ff fdca 	bl	8009d0c <_ZN8touchgfx8DrawableC1Ev>
 800a178:	4a03      	ldr	r2, [pc, #12]	; (800a188 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800a17a:	687b      	ldr	r3, [r7, #4]
 800a17c:	601a      	str	r2, [r3, #0]
 800a17e:	687b      	ldr	r3, [r7, #4]
 800a180:	4618      	mov	r0, r3
 800a182:	3708      	adds	r7, #8
 800a184:	46bd      	mov	sp, r7
 800a186:	bd80      	pop	{r7, pc}
 800a188:	0802e024 	.word	0x0802e024

0800a18c <_ZN8touchgfx6WidgetD1Ev>:
 800a18c:	b580      	push	{r7, lr}
 800a18e:	b082      	sub	sp, #8
 800a190:	af00      	add	r7, sp, #0
 800a192:	6078      	str	r0, [r7, #4]
 800a194:	4a05      	ldr	r2, [pc, #20]	; (800a1ac <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800a196:	687b      	ldr	r3, [r7, #4]
 800a198:	601a      	str	r2, [r3, #0]
 800a19a:	687b      	ldr	r3, [r7, #4]
 800a19c:	4618      	mov	r0, r3
 800a19e:	f7ff fde5 	bl	8009d6c <_ZN8touchgfx8DrawableD1Ev>
 800a1a2:	687b      	ldr	r3, [r7, #4]
 800a1a4:	4618      	mov	r0, r3
 800a1a6:	3708      	adds	r7, #8
 800a1a8:	46bd      	mov	sp, r7
 800a1aa:	bd80      	pop	{r7, pc}
 800a1ac:	0802e024 	.word	0x0802e024

0800a1b0 <_ZN8touchgfx6WidgetD0Ev>:
 800a1b0:	b580      	push	{r7, lr}
 800a1b2:	b082      	sub	sp, #8
 800a1b4:	af00      	add	r7, sp, #0
 800a1b6:	6078      	str	r0, [r7, #4]
 800a1b8:	6878      	ldr	r0, [r7, #4]
 800a1ba:	f7ff ffe7 	bl	800a18c <_ZN8touchgfx6WidgetD1Ev>
 800a1be:	2128      	movs	r1, #40	; 0x28
 800a1c0:	6878      	ldr	r0, [r7, #4]
 800a1c2:	f020 fb0c 	bl	802a7de <_ZdlPvj>
 800a1c6:	687b      	ldr	r3, [r7, #4]
 800a1c8:	4618      	mov	r0, r3
 800a1ca:	3708      	adds	r7, #8
 800a1cc:	46bd      	mov	sp, r7
 800a1ce:	bd80      	pop	{r7, pc}

0800a1d0 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 800a1d0:	b580      	push	{r7, lr}
 800a1d2:	b082      	sub	sp, #8
 800a1d4:	af00      	add	r7, sp, #0
 800a1d6:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800a1d8:	687b      	ldr	r3, [r7, #4]
 800a1da:	4618      	mov	r0, r3
 800a1dc:	2326      	movs	r3, #38	; 0x26
 800a1de:	461a      	mov	r2, r3
 800a1e0:	2100      	movs	r1, #0
 800a1e2:	f021 faf2 	bl	802b7ca <memset>
 800a1e6:	687b      	ldr	r3, [r7, #4]
 800a1e8:	4618      	mov	r0, r3
 800a1ea:	f7ff ffbd 	bl	800a168 <_ZN8touchgfx6WidgetC1Ev>
 800a1ee:	4a09      	ldr	r2, [pc, #36]	; (800a214 <_ZN8touchgfx3BoxC1Ev+0x44>)
 800a1f0:	687b      	ldr	r3, [r7, #4]
 800a1f2:	601a      	str	r2, [r3, #0]
 800a1f4:	687b      	ldr	r3, [r7, #4]
 800a1f6:	22ff      	movs	r2, #255	; 0xff
 800a1f8:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 800a1fc:	687b      	ldr	r3, [r7, #4]
 800a1fe:	3328      	adds	r3, #40	; 0x28
 800a200:	2100      	movs	r1, #0
 800a202:	4618      	mov	r0, r3
 800a204:	f7ff fd2c 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 800a208:	687b      	ldr	r3, [r7, #4]
 800a20a:	4618      	mov	r0, r3
 800a20c:	3708      	adds	r7, #8
 800a20e:	46bd      	mov	sp, r7
 800a210:	bd80      	pop	{r7, pc}
 800a212:	bf00      	nop
 800a214:	0802f5dc 	.word	0x0802f5dc

0800a218 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 800a218:	b480      	push	{r7}
 800a21a:	b083      	sub	sp, #12
 800a21c:	af00      	add	r7, sp, #0
 800a21e:	6078      	str	r0, [r7, #4]
 800a220:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 800a222:	687b      	ldr	r3, [r7, #4]
 800a224:	683a      	ldr	r2, [r7, #0]
 800a226:	629a      	str	r2, [r3, #40]	; 0x28
    }
 800a228:	bf00      	nop
 800a22a:	370c      	adds	r7, #12
 800a22c:	46bd      	mov	sp, r7
 800a22e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a232:	4770      	bx	lr

0800a234 <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 800a234:	b480      	push	{r7}
 800a236:	b083      	sub	sp, #12
 800a238:	af00      	add	r7, sp, #0
 800a23a:	6078      	str	r0, [r7, #4]
 800a23c:	460b      	mov	r3, r1
 800a23e:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 800a240:	4a06      	ldr	r2, [pc, #24]	; (800a25c <_ZN8touchgfx9TypedTextC1Et+0x28>)
 800a242:	687b      	ldr	r3, [r7, #4]
 800a244:	601a      	str	r2, [r3, #0]
 800a246:	687b      	ldr	r3, [r7, #4]
 800a248:	887a      	ldrh	r2, [r7, #2]
 800a24a:	809a      	strh	r2, [r3, #4]
    }
 800a24c:	687b      	ldr	r3, [r7, #4]
 800a24e:	4618      	mov	r0, r3
 800a250:	370c      	adds	r7, #12
 800a252:	46bd      	mov	sp, r7
 800a254:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a258:	4770      	bx	lr
 800a25a:	bf00      	nop
 800a25c:	0802de8c 	.word	0x0802de8c

0800a260 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 800a260:	b580      	push	{r7, lr}
 800a262:	b082      	sub	sp, #8
 800a264:	af00      	add	r7, sp, #0
 800a266:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800a268:	687b      	ldr	r3, [r7, #4]
 800a26a:	4618      	mov	r0, r3
 800a26c:	2326      	movs	r3, #38	; 0x26
 800a26e:	461a      	mov	r2, r3
 800a270:	2100      	movs	r1, #0
 800a272:	f021 faaa 	bl	802b7ca <memset>
 800a276:	687b      	ldr	r3, [r7, #4]
 800a278:	4618      	mov	r0, r3
 800a27a:	f7ff ff75 	bl	800a168 <_ZN8touchgfx6WidgetC1Ev>
 800a27e:	4a16      	ldr	r2, [pc, #88]	; (800a2d8 <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 800a280:	687b      	ldr	r3, [r7, #4]
 800a282:	601a      	str	r2, [r3, #0]
 800a284:	687b      	ldr	r3, [r7, #4]
 800a286:	3328      	adds	r3, #40	; 0x28
 800a288:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800a28c:	4618      	mov	r0, r3
 800a28e:	f7ff ffd1 	bl	800a234 <_ZN8touchgfx9TypedTextC1Et>
 800a292:	687b      	ldr	r3, [r7, #4]
 800a294:	3330      	adds	r3, #48	; 0x30
 800a296:	2100      	movs	r1, #0
 800a298:	4618      	mov	r0, r3
 800a29a:	f7ff fce1 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800a29e:	687b      	ldr	r3, [r7, #4]
 800a2a0:	2200      	movs	r2, #0
 800a2a2:	869a      	strh	r2, [r3, #52]	; 0x34
 800a2a4:	687b      	ldr	r3, [r7, #4]
 800a2a6:	22ff      	movs	r2, #255	; 0xff
 800a2a8:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 800a2ac:	687b      	ldr	r3, [r7, #4]
 800a2ae:	2200      	movs	r2, #0
 800a2b0:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 800a2b4:	687b      	ldr	r3, [r7, #4]
 800a2b6:	2200      	movs	r2, #0
 800a2b8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800a2bc:	687b      	ldr	r3, [r7, #4]
 800a2be:	2200      	movs	r2, #0
 800a2c0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800a2c4:	687b      	ldr	r3, [r7, #4]
 800a2c6:	333c      	adds	r3, #60	; 0x3c
 800a2c8:	4618      	mov	r0, r3
 800a2ca:	f000 f8f0 	bl	800a4ae <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 800a2ce:	687b      	ldr	r3, [r7, #4]
 800a2d0:	4618      	mov	r0, r3
 800a2d2:	3708      	adds	r7, #8
 800a2d4:	46bd      	mov	sp, r7
 800a2d6:	bd80      	pop	{r7, pc}
 800a2d8:	0802f54c 	.word	0x0802f54c

0800a2dc <_ZN8touchgfx8TextArea8setWidthEs>:

    virtual void setWidth(int16_t width)
 800a2dc:	b590      	push	{r4, r7, lr}
 800a2de:	b087      	sub	sp, #28
 800a2e0:	af00      	add	r7, sp, #0
 800a2e2:	6178      	str	r0, [r7, #20]
 800a2e4:	460b      	mov	r3, r1
 800a2e6:	827b      	strh	r3, [r7, #18]
    {
        Widget::setWidth(width);
 800a2e8:	697b      	ldr	r3, [r7, #20]
 800a2ea:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800a2ee:	4611      	mov	r1, r2
 800a2f0:	4618      	mov	r0, r3
 800a2f2:	f7ff fdd6 	bl	8009ea2 <_ZN8touchgfx8Drawable8setWidthEs>
        boundingArea = calculateBoundingArea();
 800a2f6:	697b      	ldr	r3, [r7, #20]
 800a2f8:	681b      	ldr	r3, [r3, #0]
 800a2fa:	3384      	adds	r3, #132	; 0x84
 800a2fc:	681b      	ldr	r3, [r3, #0]
 800a2fe:	697c      	ldr	r4, [r7, #20]
 800a300:	463a      	mov	r2, r7
 800a302:	6979      	ldr	r1, [r7, #20]
 800a304:	4610      	mov	r0, r2
 800a306:	4798      	blx	r3
 800a308:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800a30c:	463a      	mov	r2, r7
 800a30e:	ca07      	ldmia	r2, {r0, r1, r2}
 800a310:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a314:	bf00      	nop
 800a316:	371c      	adds	r7, #28
 800a318:	46bd      	mov	sp, r7
 800a31a:	bd90      	pop	{r4, r7, pc}

0800a31c <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800a31c:	b590      	push	{r4, r7, lr}
 800a31e:	b087      	sub	sp, #28
 800a320:	af00      	add	r7, sp, #0
 800a322:	6178      	str	r0, [r7, #20]
 800a324:	460b      	mov	r3, r1
 800a326:	827b      	strh	r3, [r7, #18]
    {
        Widget::setHeight(height);
 800a328:	697b      	ldr	r3, [r7, #20]
 800a32a:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800a32e:	4611      	mov	r1, r2
 800a330:	4618      	mov	r0, r3
 800a332:	f7ff fdc5 	bl	8009ec0 <_ZN8touchgfx8Drawable9setHeightEs>
        boundingArea = calculateBoundingArea();
 800a336:	697b      	ldr	r3, [r7, #20]
 800a338:	681b      	ldr	r3, [r3, #0]
 800a33a:	3384      	adds	r3, #132	; 0x84
 800a33c:	681b      	ldr	r3, [r3, #0]
 800a33e:	697c      	ldr	r4, [r7, #20]
 800a340:	463a      	mov	r2, r7
 800a342:	6979      	ldr	r1, [r7, #20]
 800a344:	4610      	mov	r0, r2
 800a346:	4798      	blx	r3
 800a348:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800a34c:	463a      	mov	r2, r7
 800a34e:	ca07      	ldmia	r2, {r0, r1, r2}
 800a350:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a354:	bf00      	nop
 800a356:	371c      	adds	r7, #28
 800a358:	46bd      	mov	sp, r7
 800a35a:	bd90      	pop	{r4, r7, pc}

0800a35c <_ZNK8touchgfx8TextArea12getSolidRectEv>:

    virtual Rect getSolidRect() const
 800a35c:	b580      	push	{r7, lr}
 800a35e:	b082      	sub	sp, #8
 800a360:	af00      	add	r7, sp, #0
 800a362:	6078      	str	r0, [r7, #4]
 800a364:	6039      	str	r1, [r7, #0]
    {
        return Rect();
 800a366:	6878      	ldr	r0, [r7, #4]
 800a368:	f7ff fc89 	bl	8009c7e <_ZN8touchgfx4RectC1Ev>
    }
 800a36c:	6878      	ldr	r0, [r7, #4]
 800a36e:	3708      	adds	r7, #8
 800a370:	46bd      	mov	sp, r7
 800a372:	bd80      	pop	{r7, pc}

0800a374 <_ZN8touchgfx8TextArea8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
 800a374:	b480      	push	{r7}
 800a376:	b083      	sub	sp, #12
 800a378:	af00      	add	r7, sp, #0
 800a37a:	6078      	str	r0, [r7, #4]
 800a37c:	460b      	mov	r3, r1
 800a37e:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800a380:	687b      	ldr	r3, [r7, #4]
 800a382:	78fa      	ldrb	r2, [r7, #3]
 800a384:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
    }
 800a388:	bf00      	nop
 800a38a:	370c      	adds	r7, #12
 800a38c:	46bd      	mov	sp, r7
 800a38e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a392:	4770      	bx	lr

0800a394 <_ZN8touchgfx8TextArea12setBaselineYEs>:
     *
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setBaselineY(int16_t baselineY)
 800a394:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a396:	b085      	sub	sp, #20
 800a398:	af00      	add	r7, sp, #0
 800a39a:	6078      	str	r0, [r7, #4]
 800a39c:	460b      	mov	r3, r1
 800a39e:	807b      	strh	r3, [r7, #2]
    {
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800a3a0:	687e      	ldr	r6, [r7, #4]
 800a3a2:	687b      	ldr	r3, [r7, #4]
 800a3a4:	681b      	ldr	r3, [r3, #0]
 800a3a6:	3334      	adds	r3, #52	; 0x34
 800a3a8:	681c      	ldr	r4, [r3, #0]
 800a3aa:	887d      	ldrh	r5, [r7, #2]
 800a3ac:	6878      	ldr	r0, [r7, #4]
 800a3ae:	f000 f867 	bl	800a480 <_ZNK8touchgfx8TextArea12getTypedTextEv>
 800a3b2:	4603      	mov	r3, r0
 800a3b4:	60fb      	str	r3, [r7, #12]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800a3b6:	4b1c      	ldr	r3, [pc, #112]	; (800a428 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800a3b8:	681b      	ldr	r3, [r3, #0]
 800a3ba:	2b00      	cmp	r3, #0
 800a3bc:	d105      	bne.n	800a3ca <_ZN8touchgfx8TextArea12setBaselineYEs+0x36>
 800a3be:	4b1b      	ldr	r3, [pc, #108]	; (800a42c <_ZN8touchgfx8TextArea12setBaselineYEs+0x98>)
 800a3c0:	4a1b      	ldr	r2, [pc, #108]	; (800a430 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800a3c2:	216c      	movs	r1, #108	; 0x6c
 800a3c4:	481b      	ldr	r0, [pc, #108]	; (800a434 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800a3c6:	f020 fffb 	bl	802b3c0 <__assert_func>
 800a3ca:	68fb      	ldr	r3, [r7, #12]
 800a3cc:	60bb      	str	r3, [r7, #8]
        return typedTextId < numberOfTypedTexts;
 800a3ce:	68bb      	ldr	r3, [r7, #8]
 800a3d0:	889a      	ldrh	r2, [r3, #4]
 800a3d2:	4b19      	ldr	r3, [pc, #100]	; (800a438 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa4>)
 800a3d4:	881b      	ldrh	r3, [r3, #0]
 800a3d6:	429a      	cmp	r2, r3
 800a3d8:	bf34      	ite	cc
 800a3da:	2301      	movcc	r3, #1
 800a3dc:	2300      	movcs	r3, #0
 800a3de:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800a3e0:	2b00      	cmp	r3, #0
 800a3e2:	d105      	bne.n	800a3f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>
 800a3e4:	4b15      	ldr	r3, [pc, #84]	; (800a43c <_ZN8touchgfx8TextArea12setBaselineYEs+0xa8>)
 800a3e6:	4a12      	ldr	r2, [pc, #72]	; (800a430 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800a3e8:	216d      	movs	r1, #109	; 0x6d
 800a3ea:	4812      	ldr	r0, [pc, #72]	; (800a434 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800a3ec:	f020 ffe8 	bl	802b3c0 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800a3f0:	4b13      	ldr	r3, [pc, #76]	; (800a440 <_ZN8touchgfx8TextArea12setBaselineYEs+0xac>)
 800a3f2:	681a      	ldr	r2, [r3, #0]
 800a3f4:	4b0c      	ldr	r3, [pc, #48]	; (800a428 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800a3f6:	6819      	ldr	r1, [r3, #0]
 800a3f8:	68fb      	ldr	r3, [r7, #12]
 800a3fa:	889b      	ldrh	r3, [r3, #4]
 800a3fc:	005b      	lsls	r3, r3, #1
 800a3fe:	440b      	add	r3, r1
 800a400:	781b      	ldrb	r3, [r3, #0]
 800a402:	009b      	lsls	r3, r3, #2
 800a404:	4413      	add	r3, r2
 800a406:	681b      	ldr	r3, [r3, #0]
 800a408:	681a      	ldr	r2, [r3, #0]
 800a40a:	3230      	adds	r2, #48	; 0x30
 800a40c:	6812      	ldr	r2, [r2, #0]
 800a40e:	4618      	mov	r0, r3
 800a410:	4790      	blx	r2
 800a412:	4603      	mov	r3, r0
 800a414:	1aeb      	subs	r3, r5, r3
 800a416:	b29b      	uxth	r3, r3
 800a418:	b21b      	sxth	r3, r3
 800a41a:	4619      	mov	r1, r3
 800a41c:	4630      	mov	r0, r6
 800a41e:	47a0      	blx	r4
    }
 800a420:	bf00      	nop
 800a422:	3714      	adds	r7, #20
 800a424:	46bd      	mov	sp, r7
 800a426:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a428:	200022a4 	.word	0x200022a4
 800a42c:	0802c434 	.word	0x0802c434
 800a430:	0802c478 	.word	0x0802c478
 800a434:	0802c4b4 	.word	0x0802c4b4
 800a438:	200022a8 	.word	0x200022a8
 800a43c:	0802c4f8 	.word	0x0802c4f8
 800a440:	200022ac 	.word	0x200022ac

0800a444 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800a444:	b580      	push	{r7, lr}
 800a446:	b082      	sub	sp, #8
 800a448:	af00      	add	r7, sp, #0
 800a44a:	6078      	str	r0, [r7, #4]
 800a44c:	460b      	mov	r3, r1
 800a44e:	807b      	strh	r3, [r7, #2]
 800a450:	4613      	mov	r3, r2
 800a452:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800a454:	687a      	ldr	r2, [r7, #4]
 800a456:	687b      	ldr	r3, [r7, #4]
 800a458:	681b      	ldr	r3, [r3, #0]
 800a45a:	3330      	adds	r3, #48	; 0x30
 800a45c:	681b      	ldr	r3, [r3, #0]
 800a45e:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 800a462:	4610      	mov	r0, r2
 800a464:	4798      	blx	r3
        setBaselineY(baselineY);
 800a466:	687b      	ldr	r3, [r7, #4]
 800a468:	681b      	ldr	r3, [r3, #0]
 800a46a:	3364      	adds	r3, #100	; 0x64
 800a46c:	681b      	ldr	r3, [r3, #0]
 800a46e:	f9b7 2000 	ldrsh.w	r2, [r7]
 800a472:	4611      	mov	r1, r2
 800a474:	6878      	ldr	r0, [r7, #4]
 800a476:	4798      	blx	r3
    }
 800a478:	bf00      	nop
 800a47a:	3708      	adds	r7, #8
 800a47c:	46bd      	mov	sp, r7
 800a47e:	bd80      	pop	{r7, pc}

0800a480 <_ZNK8touchgfx8TextArea12getTypedTextEv>:
    /**
     * Gets the TypedText of the text area.
     *
     * @return The currently used TypedText.
     */
    const TypedText& getTypedText() const
 800a480:	b480      	push	{r7}
 800a482:	b083      	sub	sp, #12
 800a484:	af00      	add	r7, sp, #0
 800a486:	6078      	str	r0, [r7, #4]
    {
        return typedText;
 800a488:	687b      	ldr	r3, [r7, #4]
 800a48a:	3328      	adds	r3, #40	; 0x28
    }
 800a48c:	4618      	mov	r0, r3
 800a48e:	370c      	adds	r7, #12
 800a490:	46bd      	mov	sp, r7
 800a492:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a496:	4770      	bx	lr

0800a498 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     *
     * @return A pointer to the second wildcard, if this text area has two wildcards, otherwise 0.
     *
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
 800a498:	b480      	push	{r7}
 800a49a:	b083      	sub	sp, #12
 800a49c:	af00      	add	r7, sp, #0
 800a49e:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800a4a0:	2300      	movs	r3, #0
    }
 800a4a2:	4618      	mov	r0, r3
 800a4a4:	370c      	adds	r7, #12
 800a4a6:	46bd      	mov	sp, r7
 800a4a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4ac:	4770      	bx	lr

0800a4ae <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 800a4ae:	b580      	push	{r7, lr}
 800a4b0:	b084      	sub	sp, #16
 800a4b2:	af02      	add	r7, sp, #8
 800a4b4:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800a4b6:	6878      	ldr	r0, [r7, #4]
 800a4b8:	f04f 33ff 	mov.w	r3, #4294967295
 800a4bc:	9300      	str	r3, [sp, #0]
 800a4be:	f04f 33ff 	mov.w	r3, #4294967295
 800a4c2:	2200      	movs	r2, #0
 800a4c4:	2100      	movs	r1, #0
 800a4c6:	f7ff fbf1 	bl	8009cac <_ZN8touchgfx4RectC1Essss>
              text(0)
 800a4ca:	687b      	ldr	r3, [r7, #4]
 800a4cc:	2200      	movs	r2, #0
 800a4ce:	609a      	str	r2, [r3, #8]
        {
        }
 800a4d0:	687b      	ldr	r3, [r7, #4]
 800a4d2:	4618      	mov	r0, r3
 800a4d4:	3708      	adds	r7, #8
 800a4d6:	46bd      	mov	sp, r7
 800a4d8:	bd80      	pop	{r7, pc}
	...

0800a4dc <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 800a4dc:	b580      	push	{r7, lr}
 800a4de:	b082      	sub	sp, #8
 800a4e0:	af00      	add	r7, sp, #0
 800a4e2:	6078      	str	r0, [r7, #4]
 800a4e4:	4a08      	ldr	r2, [pc, #32]	; (800a508 <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 800a4e6:	687b      	ldr	r3, [r7, #4]
 800a4e8:	601a      	str	r2, [r3, #0]
 800a4ea:	687b      	ldr	r3, [r7, #4]
 800a4ec:	3328      	adds	r3, #40	; 0x28
 800a4ee:	4618      	mov	r0, r3
 800a4f0:	f7ff f9ce 	bl	8009890 <_ZN8touchgfx9TypedTextD1Ev>
 800a4f4:	687b      	ldr	r3, [r7, #4]
 800a4f6:	4618      	mov	r0, r3
 800a4f8:	f7ff fe48 	bl	800a18c <_ZN8touchgfx6WidgetD1Ev>
 800a4fc:	687b      	ldr	r3, [r7, #4]
 800a4fe:	4618      	mov	r0, r3
 800a500:	3708      	adds	r7, #8
 800a502:	46bd      	mov	sp, r7
 800a504:	bd80      	pop	{r7, pc}
 800a506:	bf00      	nop
 800a508:	0802f54c 	.word	0x0802f54c

0800a50c <_ZN8touchgfx8TextAreaD0Ev>:
 800a50c:	b580      	push	{r7, lr}
 800a50e:	b082      	sub	sp, #8
 800a510:	af00      	add	r7, sp, #0
 800a512:	6078      	str	r0, [r7, #4]
 800a514:	6878      	ldr	r0, [r7, #4]
 800a516:	f7ff ffe1 	bl	800a4dc <_ZN8touchgfx8TextAreaD1Ev>
 800a51a:	2148      	movs	r1, #72	; 0x48
 800a51c:	6878      	ldr	r0, [r7, #4]
 800a51e:	f020 f95e 	bl	802a7de <_ZdlPvj>
 800a522:	687b      	ldr	r3, [r7, #4]
 800a524:	4618      	mov	r0, r3
 800a526:	3708      	adds	r7, #8
 800a528:	46bd      	mov	sp, r7
 800a52a:	bd80      	pop	{r7, pc}

0800a52c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    {
    }

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 800a52c:	b580      	push	{r7, lr}
 800a52e:	b082      	sub	sp, #8
 800a530:	af00      	add	r7, sp, #0
 800a532:	6078      	str	r0, [r7, #4]
    {
        Widget::invalidateContent();
 800a534:	687b      	ldr	r3, [r7, #4]
 800a536:	4618      	mov	r0, r3
 800a538:	f7ff fc38 	bl	8009dac <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800a53c:	bf00      	nop
 800a53e:	3708      	adds	r7, #8
 800a540:	46bd      	mov	sp, r7
 800a542:	bd80      	pop	{r7, pc}

0800a544 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 800a544:	b580      	push	{r7, lr}
 800a546:	b082      	sub	sp, #8
 800a548:	af00      	add	r7, sp, #0
 800a54a:	6078      	str	r0, [r7, #4]
 800a54c:	6039      	str	r1, [r7, #0]
    {
        return TextArea::BoundingArea();
 800a54e:	6878      	ldr	r0, [r7, #4]
 800a550:	f7ff ffad 	bl	800a4ae <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 800a554:	6878      	ldr	r0, [r7, #4]
 800a556:	3708      	adds	r7, #8
 800a558:	46bd      	mov	sp, r7
 800a55a:	bd80      	pop	{r7, pc}

0800a55c <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
class TextAreaWithWildcardBase : public TextArea
 800a55c:	b580      	push	{r7, lr}
 800a55e:	b082      	sub	sp, #8
 800a560:	af00      	add	r7, sp, #0
 800a562:	6078      	str	r0, [r7, #4]
 800a564:	4a05      	ldr	r2, [pc, #20]	; (800a57c <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev+0x20>)
 800a566:	687b      	ldr	r3, [r7, #4]
 800a568:	601a      	str	r2, [r3, #0]
 800a56a:	687b      	ldr	r3, [r7, #4]
 800a56c:	4618      	mov	r0, r3
 800a56e:	f7ff ffb5 	bl	800a4dc <_ZN8touchgfx8TextAreaD1Ev>
 800a572:	687b      	ldr	r3, [r7, #4]
 800a574:	4618      	mov	r0, r3
 800a576:	3708      	adds	r7, #8
 800a578:	46bd      	mov	sp, r7
 800a57a:	bd80      	pop	{r7, pc}
 800a57c:	0802f7a0 	.word	0x0802f7a0

0800a580 <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 800a580:	b580      	push	{r7, lr}
 800a582:	b082      	sub	sp, #8
 800a584:	af00      	add	r7, sp, #0
 800a586:	6078      	str	r0, [r7, #4]
 800a588:	6878      	ldr	r0, [r7, #4]
 800a58a:	f7ff ffe7 	bl	800a55c <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800a58e:	2148      	movs	r1, #72	; 0x48
 800a590:	6878      	ldr	r0, [r7, #4]
 800a592:	f020 f924 	bl	802a7de <_ZdlPvj>
 800a596:	687b      	ldr	r3, [r7, #4]
 800a598:	4618      	mov	r0, r3
 800a59a:	3708      	adds	r7, #8
 800a59c:	46bd      	mov	sp, r7
 800a59e:	bd80      	pop	{r7, pc}

0800a5a0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    void setWildcard1(const Unicode::UnicodeChar* value)
    {
        wc1 = value;
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
 800a5a0:	b480      	push	{r7}
 800a5a2:	b083      	sub	sp, #12
 800a5a4:	af00      	add	r7, sp, #0
 800a5a6:	6078      	str	r0, [r7, #4]
    {
        return wc1;
 800a5a8:	687b      	ldr	r3, [r7, #4]
 800a5aa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    }
 800a5ac:	4618      	mov	r0, r3
 800a5ae:	370c      	adds	r7, #12
 800a5b0:	46bd      	mov	sp, r7
 800a5b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5b6:	4770      	bx	lr

0800a5b8 <_ZN8touchgfx12DigitalClock14setDisplayModeENS0_11DisplayModeE>:
     *
     * @param  dm The new display mode.
     *
     * @see DisplayMode, getDisplayMode
     */
    virtual void setDisplayMode(DisplayMode dm)
 800a5b8:	b480      	push	{r7}
 800a5ba:	b083      	sub	sp, #12
 800a5bc:	af00      	add	r7, sp, #0
 800a5be:	6078      	str	r0, [r7, #4]
 800a5c0:	460b      	mov	r3, r1
 800a5c2:	70fb      	strb	r3, [r7, #3]
    {
        displayMode = dm;
 800a5c4:	687b      	ldr	r3, [r7, #4]
 800a5c6:	78fa      	ldrb	r2, [r7, #3]
 800a5c8:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
    }
 800a5cc:	bf00      	nop
 800a5ce:	370c      	adds	r7, #12
 800a5d0:	46bd      	mov	sp, r7
 800a5d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5d6:	4770      	bx	lr

0800a5d8 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     * @param  callback The callback to be executed. The callback will be executed with a
     *                  reference to the AbstractButton.
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
 800a5d8:	b480      	push	{r7}
 800a5da:	b083      	sub	sp, #12
 800a5dc:	af00      	add	r7, sp, #0
 800a5de:	6078      	str	r0, [r7, #4]
 800a5e0:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800a5e2:	687b      	ldr	r3, [r7, #4]
 800a5e4:	683a      	ldr	r2, [r7, #0]
 800a5e6:	629a      	str	r2, [r3, #40]	; 0x28
    }
 800a5e8:	bf00      	nop
 800a5ea:	370c      	adds	r7, #12
 800a5ec:	46bd      	mov	sp, r7
 800a5ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5f2:	4770      	bx	lr

0800a5f4 <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
 800a5f4:	b580      	push	{r7, lr}
 800a5f6:	b082      	sub	sp, #8
 800a5f8:	af00      	add	r7, sp, #0
 800a5fa:	6078      	str	r0, [r7, #4]
 800a5fc:	4a05      	ldr	r2, [pc, #20]	; (800a614 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 800a5fe:	687b      	ldr	r3, [r7, #4]
 800a600:	601a      	str	r2, [r3, #0]
 800a602:	687b      	ldr	r3, [r7, #4]
 800a604:	4618      	mov	r0, r3
 800a606:	f7ff fdc1 	bl	800a18c <_ZN8touchgfx6WidgetD1Ev>
 800a60a:	687b      	ldr	r3, [r7, #4]
 800a60c:	4618      	mov	r0, r3
 800a60e:	3708      	adds	r7, #8
 800a610:	46bd      	mov	sp, r7
 800a612:	bd80      	pop	{r7, pc}
 800a614:	0802f358 	.word	0x0802f358

0800a618 <_ZN8touchgfx14AbstractButtonD0Ev>:
 800a618:	b580      	push	{r7, lr}
 800a61a:	b082      	sub	sp, #8
 800a61c:	af00      	add	r7, sp, #0
 800a61e:	6078      	str	r0, [r7, #4]
 800a620:	6878      	ldr	r0, [r7, #4]
 800a622:	f7ff ffe7 	bl	800a5f4 <_ZN8touchgfx14AbstractButtonD1Ev>
 800a626:	2130      	movs	r1, #48	; 0x30
 800a628:	6878      	ldr	r0, [r7, #4]
 800a62a:	f020 f8d8 	bl	802a7de <_ZdlPvj>
 800a62e:	687b      	ldr	r3, [r7, #4]
 800a630:	4618      	mov	r0, r3
 800a632:	3708      	adds	r7, #8
 800a634:	46bd      	mov	sp, r7
 800a636:	bd80      	pop	{r7, pc}

0800a638 <_ZN8touchgfx14ButtonWithIcon8setIconXEs>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
 800a638:	b480      	push	{r7}
 800a63a:	b083      	sub	sp, #12
 800a63c:	af00      	add	r7, sp, #0
 800a63e:	6078      	str	r0, [r7, #4]
 800a640:	460b      	mov	r3, r1
 800a642:	807b      	strh	r3, [r7, #2]
    {
        iconX = x;
 800a644:	687b      	ldr	r3, [r7, #4]
 800a646:	887a      	ldrh	r2, [r7, #2]
 800a648:	871a      	strh	r2, [r3, #56]	; 0x38
    }
 800a64a:	bf00      	nop
 800a64c:	370c      	adds	r7, #12
 800a64e:	46bd      	mov	sp, r7
 800a650:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a654:	4770      	bx	lr

0800a656 <_ZN8touchgfx14ButtonWithIcon8setIconYEs>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconY(int16_t y)
 800a656:	b480      	push	{r7}
 800a658:	b083      	sub	sp, #12
 800a65a:	af00      	add	r7, sp, #0
 800a65c:	6078      	str	r0, [r7, #4]
 800a65e:	460b      	mov	r3, r1
 800a660:	807b      	strh	r3, [r7, #2]
    {
        iconY = y;
 800a662:	687b      	ldr	r3, [r7, #4]
 800a664:	887a      	ldrh	r2, [r7, #2]
 800a666:	875a      	strh	r2, [r3, #58]	; 0x3a
    }
 800a668:	bf00      	nop
 800a66a:	370c      	adds	r7, #12
 800a66c:	46bd      	mov	sp, r7
 800a66e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a672:	4770      	bx	lr

0800a674 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The values set are overwritten on a subsequent call to setBitmaps.
     */
    void setIconXY(int16_t x, int16_t y)
 800a674:	b580      	push	{r7, lr}
 800a676:	b082      	sub	sp, #8
 800a678:	af00      	add	r7, sp, #0
 800a67a:	6078      	str	r0, [r7, #4]
 800a67c:	460b      	mov	r3, r1
 800a67e:	807b      	strh	r3, [r7, #2]
 800a680:	4613      	mov	r3, r2
 800a682:	803b      	strh	r3, [r7, #0]
    {
        setIconX(x);
 800a684:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800a688:	4619      	mov	r1, r3
 800a68a:	6878      	ldr	r0, [r7, #4]
 800a68c:	f7ff ffd4 	bl	800a638 <_ZN8touchgfx14ButtonWithIcon8setIconXEs>
        setIconY(y);
 800a690:	f9b7 3000 	ldrsh.w	r3, [r7]
 800a694:	4619      	mov	r1, r3
 800a696:	6878      	ldr	r0, [r7, #4]
 800a698:	f7ff ffdd 	bl	800a656 <_ZN8touchgfx14ButtonWithIcon8setIconYEs>
    }
 800a69c:	bf00      	nop
 800a69e:	3708      	adds	r7, #8
 800a6a0:	46bd      	mov	sp, r7
 800a6a2:	bd80      	pop	{r7, pc}

0800a6a4 <_ZN19ClockScreenViewBase11applicationEv>:
    ClockScreenViewBase();
    virtual ~ClockScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800a6a4:	b580      	push	{r7, lr}
 800a6a6:	b082      	sub	sp, #8
 800a6a8:	af00      	add	r7, sp, #0
 800a6aa:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800a6ac:	f00e fe3a 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 800a6b0:	4603      	mov	r3, r0
    }
 800a6b2:	4618      	mov	r0, r3
 800a6b4:	3708      	adds	r7, #8
 800a6b6:	46bd      	mov	sp, r7
 800a6b8:	bd80      	pop	{r7, pc}
	...

0800a6bc <_ZN8touchgfx4ViewI20ClockScreenPresenterED1Ev>:
 * @see Screen
 *
 * @note All views in the application must be a subclass of this type.
 */
template <class T>
class View : public Screen
 800a6bc:	b580      	push	{r7, lr}
 800a6be:	b082      	sub	sp, #8
 800a6c0:	af00      	add	r7, sp, #0
 800a6c2:	6078      	str	r0, [r7, #4]
 800a6c4:	4a05      	ldr	r2, [pc, #20]	; (800a6dc <_ZN8touchgfx4ViewI20ClockScreenPresenterED1Ev+0x20>)
 800a6c6:	687b      	ldr	r3, [r7, #4]
 800a6c8:	601a      	str	r2, [r3, #0]
 800a6ca:	687b      	ldr	r3, [r7, #4]
 800a6cc:	4618      	mov	r0, r3
 800a6ce:	f7ff fcc1 	bl	800a054 <_ZN8touchgfx6ScreenD1Ev>
 800a6d2:	687b      	ldr	r3, [r7, #4]
 800a6d4:	4618      	mov	r0, r3
 800a6d6:	3708      	adds	r7, #8
 800a6d8:	46bd      	mov	sp, r7
 800a6da:	bd80      	pop	{r7, pc}
 800a6dc:	0802df48 	.word	0x0802df48

0800a6e0 <_ZN8touchgfx4ViewI20ClockScreenPresenterED0Ev>:
 800a6e0:	b580      	push	{r7, lr}
 800a6e2:	b082      	sub	sp, #8
 800a6e4:	af00      	add	r7, sp, #0
 800a6e6:	6078      	str	r0, [r7, #4]
 800a6e8:	6878      	ldr	r0, [r7, #4]
 800a6ea:	f7ff ffe7 	bl	800a6bc <_ZN8touchgfx4ViewI20ClockScreenPresenterED1Ev>
 800a6ee:	2140      	movs	r1, #64	; 0x40
 800a6f0:	6878      	ldr	r0, [r7, #4]
 800a6f2:	f020 f874 	bl	802a7de <_ZdlPvj>
 800a6f6:	687b      	ldr	r3, [r7, #4]
 800a6f8:	4618      	mov	r0, r3
 800a6fa:	3708      	adds	r7, #8
 800a6fc:	46bd      	mov	sp, r7
 800a6fe:	bd80      	pop	{r7, pc}

0800a700 <_ZN19ClockScreenViewBaseC1Ev>:
#include <gui_generated/clockscreen_screen/ClockScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

ClockScreenViewBase::ClockScreenViewBase() :
 800a700:	b590      	push	{r4, r7, lr}
 800a702:	b09d      	sub	sp, #116	; 0x74
 800a704:	af02      	add	r7, sp, #8
 800a706:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &ClockScreenViewBase::buttonCallbackHandler)
 800a708:	697b      	ldr	r3, [r7, #20]
 800a70a:	4618      	mov	r0, r3
 800a70c:	f000 f9ce 	bl	800aaac <_ZN8touchgfx4ViewI20ClockScreenPresenterEC1Ev>
 800a710:	4ab4      	ldr	r2, [pc, #720]	; (800a9e4 <_ZN19ClockScreenViewBaseC1Ev+0x2e4>)
 800a712:	697b      	ldr	r3, [r7, #20]
 800a714:	601a      	str	r2, [r3, #0]
 800a716:	697b      	ldr	r3, [r7, #20]
 800a718:	3340      	adds	r3, #64	; 0x40
 800a71a:	4618      	mov	r0, r3
 800a71c:	f7ff fd58 	bl	800a1d0 <_ZN8touchgfx3BoxC1Ev>
 800a720:	697b      	ldr	r3, [r7, #20]
 800a722:	336c      	adds	r3, #108	; 0x6c
 800a724:	4618      	mov	r0, r3
 800a726:	f7ff fd9b 	bl	800a260 <_ZN8touchgfx8TextAreaC1Ev>
 800a72a:	697b      	ldr	r3, [r7, #20]
 800a72c:	33b4      	adds	r3, #180	; 0xb4
 800a72e:	4618      	mov	r0, r3
 800a730:	f008 fbbe 	bl	8012eb0 <_ZN8touchgfx12DigitalClockC1Ev>
 800a734:	697b      	ldr	r3, [r7, #20]
 800a736:	f503 73a6 	add.w	r3, r3, #332	; 0x14c
 800a73a:	4618      	mov	r0, r3
 800a73c:	f00c f9d8 	bl	8016af0 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800a740:	697b      	ldr	r3, [r7, #20]
 800a742:	f503 70c4 	add.w	r0, r3, #392	; 0x188
 800a746:	4ba8      	ldr	r3, [pc, #672]	; (800a9e8 <_ZN19ClockScreenViewBaseC1Ev+0x2e8>)
 800a748:	61fb      	str	r3, [r7, #28]
 800a74a:	2300      	movs	r3, #0
 800a74c:	623b      	str	r3, [r7, #32]
 800a74e:	f107 031c 	add.w	r3, r7, #28
 800a752:	cb0c      	ldmia	r3, {r2, r3}
 800a754:	6979      	ldr	r1, [r7, #20]
 800a756:	f000 f9cf 	bl	800aaf8 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800a75a:	697b      	ldr	r3, [r7, #20]
 800a75c:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800a760:	23f0      	movs	r3, #240	; 0xf0
 800a762:	9300      	str	r3, [sp, #0]
 800a764:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800a768:	2200      	movs	r2, #0
 800a76a:	2100      	movs	r1, #0
 800a76c:	f7ff fb3c 	bl	8009de8 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800a770:	697b      	ldr	r3, [r7, #20]
 800a772:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800a776:	2300      	movs	r3, #0
 800a778:	f887 3054 	strb.w	r3, [r7, #84]	; 0x54
 800a77c:	2300      	movs	r3, #0
 800a77e:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
 800a782:	2300      	movs	r3, #0
 800a784:	f887 3052 	strb.w	r3, [r7, #82]	; 0x52
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800a788:	f897 3054 	ldrb.w	r3, [r7, #84]	; 0x54
 800a78c:	041b      	lsls	r3, r3, #16
 800a78e:	461a      	mov	r2, r3
 800a790:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 800a794:	021b      	lsls	r3, r3, #8
 800a796:	431a      	orrs	r2, r3
 800a798:	f897 3052 	ldrb.w	r3, [r7, #82]	; 0x52
 800a79c:	4313      	orrs	r3, r2
 800a79e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800a7a2:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800a7a6:	4611      	mov	r1, r2
 800a7a8:	4618      	mov	r0, r3
 800a7aa:	f7ff fa59 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800a7ae:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800a7b0:	4619      	mov	r1, r3
 800a7b2:	4620      	mov	r0, r4
 800a7b4:	f7ff fd30 	bl	800a218 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800a7b8:	697a      	ldr	r2, [r7, #20]
 800a7ba:	697b      	ldr	r3, [r7, #20]
 800a7bc:	3340      	adds	r3, #64	; 0x40
 800a7be:	4619      	mov	r1, r3
 800a7c0:	4610      	mov	r0, r2
 800a7c2:	f7ff fc9f 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Clock_text.setXY(106, 10);
 800a7c6:	697b      	ldr	r3, [r7, #20]
 800a7c8:	336c      	adds	r3, #108	; 0x6c
 800a7ca:	220a      	movs	r2, #10
 800a7cc:	216a      	movs	r1, #106	; 0x6a
 800a7ce:	4618      	mov	r0, r3
 800a7d0:	f7ff fb49 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
    Clock_text.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
 800a7d4:	697b      	ldr	r3, [r7, #20]
 800a7d6:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800a7da:	23f2      	movs	r3, #242	; 0xf2
 800a7dc:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 800a7e0:	23ae      	movs	r3, #174	; 0xae
 800a7e2:	f887 3056 	strb.w	r3, [r7, #86]	; 0x56
 800a7e6:	23ae      	movs	r3, #174	; 0xae
 800a7e8:	f887 3055 	strb.w	r3, [r7, #85]	; 0x55
 800a7ec:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 800a7f0:	041b      	lsls	r3, r3, #16
 800a7f2:	461a      	mov	r2, r3
 800a7f4:	f897 3056 	ldrb.w	r3, [r7, #86]	; 0x56
 800a7f8:	021b      	lsls	r3, r3, #8
 800a7fa:	431a      	orrs	r2, r3
 800a7fc:	f897 3055 	ldrb.w	r3, [r7, #85]	; 0x55
 800a800:	4313      	orrs	r3, r2
 800a802:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800a806:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800a80a:	4611      	mov	r1, r2
 800a80c:	4618      	mov	r0, r3
 800a80e:	f7ff fa27 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800a812:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800a814:	65bc      	str	r4, [r7, #88]	; 0x58
 800a816:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800a818:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800a81a:	69ba      	ldr	r2, [r7, #24]
 800a81c:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800a81e:	bf00      	nop
    Clock_text.setLinespacing(0);
 800a820:	697b      	ldr	r3, [r7, #20]
 800a822:	336c      	adds	r3, #108	; 0x6c
 800a824:	663b      	str	r3, [r7, #96]	; 0x60
 800a826:	2300      	movs	r3, #0
 800a828:	f8a7 305e 	strh.w	r3, [r7, #94]	; 0x5e
        linespace = space;
 800a82c:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a82e:	f8b7 205e 	ldrh.w	r2, [r7, #94]	; 0x5e
 800a832:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800a834:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a836:	681b      	ldr	r3, [r3, #0]
 800a838:	3384      	adds	r3, #132	; 0x84
 800a83a:	681b      	ldr	r3, [r3, #0]
 800a83c:	6e3c      	ldr	r4, [r7, #96]	; 0x60
 800a83e:	463a      	mov	r2, r7
 800a840:	6e39      	ldr	r1, [r7, #96]	; 0x60
 800a842:	4610      	mov	r0, r2
 800a844:	4798      	blx	r3
 800a846:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800a84a:	463a      	mov	r2, r7
 800a84c:	ca07      	ldmia	r2, {r0, r1, r2}
 800a84e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a852:	bf00      	nop
    Clock_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XHQB));
 800a854:	697b      	ldr	r3, [r7, #20]
 800a856:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800a85a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800a85e:	210b      	movs	r1, #11
 800a860:	4618      	mov	r0, r3
 800a862:	f7ff fce7 	bl	800a234 <_ZN8touchgfx9TypedTextC1Et>
 800a866:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800a86a:	4619      	mov	r1, r3
 800a86c:	4620      	mov	r0, r4
 800a86e:	f00b fd29 	bl	80162c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a872:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800a876:	4618      	mov	r0, r3
 800a878:	f7ff f80a 	bl	8009890 <_ZN8touchgfx9TypedTextD1Ev>
    add(Clock_text);
 800a87c:	697a      	ldr	r2, [r7, #20]
 800a87e:	697b      	ldr	r3, [r7, #20]
 800a880:	336c      	adds	r3, #108	; 0x6c
 800a882:	4619      	mov	r1, r3
 800a884:	4610      	mov	r0, r2
 800a886:	f7ff fc3d 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Clock.setPosition(89, 93, 196, 55);
 800a88a:	697b      	ldr	r3, [r7, #20]
 800a88c:	f103 00b4 	add.w	r0, r3, #180	; 0xb4
 800a890:	2337      	movs	r3, #55	; 0x37
 800a892:	9300      	str	r3, [sp, #0]
 800a894:	23c4      	movs	r3, #196	; 0xc4
 800a896:	225d      	movs	r2, #93	; 0x5d
 800a898:	2159      	movs	r1, #89	; 0x59
 800a89a:	f7ff faa5 	bl	8009de8 <_ZN8touchgfx8Drawable11setPositionEssss>
    Clock.setColor(touchgfx::Color::getColorFromRGB(237, 157, 157));
 800a89e:	697b      	ldr	r3, [r7, #20]
 800a8a0:	f103 04b4 	add.w	r4, r3, #180	; 0xb4
 800a8a4:	23ed      	movs	r3, #237	; 0xed
 800a8a6:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 800a8aa:	239d      	movs	r3, #157	; 0x9d
 800a8ac:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
 800a8b0:	239d      	movs	r3, #157	; 0x9d
 800a8b2:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 800a8b6:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800a8ba:	041b      	lsls	r3, r3, #16
 800a8bc:	461a      	mov	r2, r3
 800a8be:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 800a8c2:	021b      	lsls	r3, r3, #8
 800a8c4:	431a      	orrs	r2, r3
 800a8c6:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 800a8ca:	4313      	orrs	r3, r2
 800a8cc:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800a8d0:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800a8d4:	4611      	mov	r1, r2
 800a8d6:	4618      	mov	r0, r3
 800a8d8:	f7ff f9c2 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800a8dc:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800a8de:	4619      	mov	r1, r3
 800a8e0:	4620      	mov	r0, r4
 800a8e2:	f008 fa2b 	bl	8012d3c <_ZN8touchgfx12DigitalClock8setColorENS_9colortypeE>
    Clock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8RXH));
 800a8e6:	697b      	ldr	r3, [r7, #20]
 800a8e8:	f103 04b4 	add.w	r4, r3, #180	; 0xb4
 800a8ec:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800a8f0:	210a      	movs	r1, #10
 800a8f2:	4618      	mov	r0, r3
 800a8f4:	f7ff fc9e 	bl	800a234 <_ZN8touchgfx9TypedTextC1Et>
 800a8f8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800a8fc:	4619      	mov	r1, r3
 800a8fe:	4620      	mov	r0, r4
 800a900:	f008 fa27 	bl	8012d52 <_ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE>
 800a904:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800a908:	4618      	mov	r0, r3
 800a90a:	f7fe ffc1 	bl	8009890 <_ZN8touchgfx9TypedTextD1Ev>
    Clock.displayLeadingZeroForHourIndicator(true);
 800a90e:	697b      	ldr	r3, [r7, #20]
 800a910:	33b4      	adds	r3, #180	; 0xb4
 800a912:	2101      	movs	r1, #1
 800a914:	4618      	mov	r0, r3
 800a916:	f008 fb19 	bl	8012f4c <_ZN8touchgfx12DigitalClock34displayLeadingZeroForHourIndicatorEb>
    Clock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR);
 800a91a:	697b      	ldr	r3, [r7, #20]
 800a91c:	33b4      	adds	r3, #180	; 0xb4
 800a91e:	2103      	movs	r1, #3
 800a920:	4618      	mov	r0, r3
 800a922:	f7ff fe49 	bl	800a5b8 <_ZN8touchgfx12DigitalClock14setDisplayModeENS0_11DisplayModeE>
    Clock.setTime24Hour(10, 10, 0);
 800a926:	697b      	ldr	r3, [r7, #20]
 800a928:	f103 00b4 	add.w	r0, r3, #180	; 0xb4
 800a92c:	2300      	movs	r3, #0
 800a92e:	220a      	movs	r2, #10
 800a930:	210a      	movs	r1, #10
 800a932:	f008 fb0e 	bl	8012f52 <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>
    add(Clock);
 800a936:	697a      	ldr	r2, [r7, #20]
 800a938:	697b      	ldr	r3, [r7, #20]
 800a93a:	33b4      	adds	r3, #180	; 0xb4
 800a93c:	4619      	mov	r1, r3
 800a93e:	4610      	mov	r0, r2
 800a940:	f7ff fbe0 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Back_button.setXY(12, 90);
 800a944:	697b      	ldr	r3, [r7, #20]
 800a946:	f503 73a6 	add.w	r3, r3, #332	; 0x14c
 800a94a:	225a      	movs	r2, #90	; 0x5a
 800a94c:	210c      	movs	r1, #12
 800a94e:	4618      	mov	r0, r3
 800a950:	f7ff fa89 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
    Back_button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
 800a954:	697b      	ldr	r3, [r7, #20]
 800a956:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
 800a95a:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800a95e:	2100      	movs	r1, #0
 800a960:	4618      	mov	r0, r3
 800a962:	f7ff f9c3 	bl	8009cec <_ZN8touchgfx6BitmapC1Et>
 800a966:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800a96a:	2101      	movs	r1, #1
 800a96c:	4618      	mov	r0, r3
 800a96e:	f7ff f9bd 	bl	8009cec <_ZN8touchgfx6BitmapC1Et>
 800a972:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800a976:	2104      	movs	r1, #4
 800a978:	4618      	mov	r0, r3
 800a97a:	f7ff f9b7 	bl	8009cec <_ZN8touchgfx6BitmapC1Et>
 800a97e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800a982:	2104      	movs	r1, #4
 800a984:	4618      	mov	r0, r3
 800a986:	f7ff f9b1 	bl	8009cec <_ZN8touchgfx6BitmapC1Et>
 800a98a:	f107 003c 	add.w	r0, r7, #60	; 0x3c
 800a98e:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800a992:	f107 0134 	add.w	r1, r7, #52	; 0x34
 800a996:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800a99a:	9300      	str	r3, [sp, #0]
 800a99c:	4603      	mov	r3, r0
 800a99e:	4620      	mov	r0, r4
 800a9a0:	f00c f810 	bl	80169c4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    Back_button.setIconXY(5, 5);
 800a9a4:	697b      	ldr	r3, [r7, #20]
 800a9a6:	f503 73a6 	add.w	r3, r3, #332	; 0x14c
 800a9aa:	2205      	movs	r2, #5
 800a9ac:	2105      	movs	r1, #5
 800a9ae:	4618      	mov	r0, r3
 800a9b0:	f7ff fe60 	bl	800a674 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    Back_button.setAction(buttonCallback);
 800a9b4:	697b      	ldr	r3, [r7, #20]
 800a9b6:	f503 72a6 	add.w	r2, r3, #332	; 0x14c
 800a9ba:	697b      	ldr	r3, [r7, #20]
 800a9bc:	f503 73c4 	add.w	r3, r3, #392	; 0x188
 800a9c0:	4619      	mov	r1, r3
 800a9c2:	4610      	mov	r0, r2
 800a9c4:	f7ff fe08 	bl	800a5d8 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(Back_button);
 800a9c8:	697a      	ldr	r2, [r7, #20]
 800a9ca:	697b      	ldr	r3, [r7, #20]
 800a9cc:	f503 73a6 	add.w	r3, r3, #332	; 0x14c
 800a9d0:	4619      	mov	r1, r3
 800a9d2:	4610      	mov	r0, r2
 800a9d4:	f7ff fb96 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800a9d8:	697b      	ldr	r3, [r7, #20]
 800a9da:	4618      	mov	r0, r3
 800a9dc:	376c      	adds	r7, #108	; 0x6c
 800a9de:	46bd      	mov	sp, r7
 800a9e0:	bd90      	pop	{r4, r7, pc}
 800a9e2:	bf00      	nop
 800a9e4:	0802defc 	.word	0x0802defc
 800a9e8:	0800aa7f 	.word	0x0800aa7f

0800a9ec <_ZN19ClockScreenViewBaseD1Ev>:

ClockScreenViewBase::~ClockScreenViewBase()
 800a9ec:	b580      	push	{r7, lr}
 800a9ee:	b082      	sub	sp, #8
 800a9f0:	af00      	add	r7, sp, #0
 800a9f2:	6078      	str	r0, [r7, #4]
 800a9f4:	4a13      	ldr	r2, [pc, #76]	; (800aa44 <_ZN19ClockScreenViewBaseD1Ev+0x58>)
 800a9f6:	687b      	ldr	r3, [r7, #4]
 800a9f8:	601a      	str	r2, [r3, #0]
 800a9fa:	687b      	ldr	r3, [r7, #4]
 800a9fc:	f503 73c4 	add.w	r3, r3, #392	; 0x188
 800aa00:	4618      	mov	r0, r3
 800aa02:	f000 f8b9 	bl	800ab78 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800aa06:	687b      	ldr	r3, [r7, #4]
 800aa08:	f503 73a6 	add.w	r3, r3, #332	; 0x14c
 800aa0c:	4618      	mov	r0, r3
 800aa0e:	f000 f9a7 	bl	800ad60 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800aa12:	687b      	ldr	r3, [r7, #4]
 800aa14:	33b4      	adds	r3, #180	; 0xb4
 800aa16:	4618      	mov	r0, r3
 800aa18:	f000 f958 	bl	800accc <_ZN8touchgfx12DigitalClockD1Ev>
 800aa1c:	687b      	ldr	r3, [r7, #4]
 800aa1e:	336c      	adds	r3, #108	; 0x6c
 800aa20:	4618      	mov	r0, r3
 800aa22:	f7ff fd5b 	bl	800a4dc <_ZN8touchgfx8TextAreaD1Ev>
 800aa26:	687b      	ldr	r3, [r7, #4]
 800aa28:	3340      	adds	r3, #64	; 0x40
 800aa2a:	4618      	mov	r0, r3
 800aa2c:	f000 f90a 	bl	800ac44 <_ZN8touchgfx3BoxD1Ev>
 800aa30:	687b      	ldr	r3, [r7, #4]
 800aa32:	4618      	mov	r0, r3
 800aa34:	f7ff fe42 	bl	800a6bc <_ZN8touchgfx4ViewI20ClockScreenPresenterED1Ev>
{

}
 800aa38:	687b      	ldr	r3, [r7, #4]
 800aa3a:	4618      	mov	r0, r3
 800aa3c:	3708      	adds	r7, #8
 800aa3e:	46bd      	mov	sp, r7
 800aa40:	bd80      	pop	{r7, pc}
 800aa42:	bf00      	nop
 800aa44:	0802defc 	.word	0x0802defc

0800aa48 <_ZN19ClockScreenViewBaseD0Ev>:
ClockScreenViewBase::~ClockScreenViewBase()
 800aa48:	b580      	push	{r7, lr}
 800aa4a:	b082      	sub	sp, #8
 800aa4c:	af00      	add	r7, sp, #0
 800aa4e:	6078      	str	r0, [r7, #4]
}
 800aa50:	6878      	ldr	r0, [r7, #4]
 800aa52:	f7ff ffcb 	bl	800a9ec <_ZN19ClockScreenViewBaseD1Ev>
 800aa56:	f44f 71cc 	mov.w	r1, #408	; 0x198
 800aa5a:	6878      	ldr	r0, [r7, #4]
 800aa5c:	f01f febf 	bl	802a7de <_ZdlPvj>
 800aa60:	687b      	ldr	r3, [r7, #4]
 800aa62:	4618      	mov	r0, r3
 800aa64:	3708      	adds	r7, #8
 800aa66:	46bd      	mov	sp, r7
 800aa68:	bd80      	pop	{r7, pc}

0800aa6a <_ZN19ClockScreenViewBase11setupScreenEv>:

void ClockScreenViewBase::setupScreen()
{
 800aa6a:	b480      	push	{r7}
 800aa6c:	b083      	sub	sp, #12
 800aa6e:	af00      	add	r7, sp, #0
 800aa70:	6078      	str	r0, [r7, #4]

}
 800aa72:	bf00      	nop
 800aa74:	370c      	adds	r7, #12
 800aa76:	46bd      	mov	sp, r7
 800aa78:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa7c:	4770      	bx	lr

0800aa7e <_ZN19ClockScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void ClockScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800aa7e:	b580      	push	{r7, lr}
 800aa80:	b082      	sub	sp, #8
 800aa82:	af00      	add	r7, sp, #0
 800aa84:	6078      	str	r0, [r7, #4]
 800aa86:	6039      	str	r1, [r7, #0]
    if (&src == &Back_button)
 800aa88:	687b      	ldr	r3, [r7, #4]
 800aa8a:	f503 73a6 	add.w	r3, r3, #332	; 0x14c
 800aa8e:	683a      	ldr	r2, [r7, #0]
 800aa90:	429a      	cmp	r2, r3
 800aa92:	d106      	bne.n	800aaa2 <_ZN19ClockScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x24>
    {
        //ClockToMain
        //When Back_button clicked change screen to MainScreen
        //Go to MainScreen with screen transition towards West
        application().gotoMainScreenScreenSlideTransitionWest();
 800aa94:	6878      	ldr	r0, [r7, #4]
 800aa96:	f7ff fe05 	bl	800a6a4 <_ZN19ClockScreenViewBase11applicationEv>
 800aa9a:	4603      	mov	r3, r0
 800aa9c:	4618      	mov	r0, r3
 800aa9e:	f000 fc9f 	bl	800b3e0 <_ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionWestEv>
    }
}
 800aaa2:	bf00      	nop
 800aaa4:	3708      	adds	r7, #8
 800aaa6:	46bd      	mov	sp, r7
 800aaa8:	bd80      	pop	{r7, pc}
	...

0800aaac <_ZN8touchgfx4ViewI20ClockScreenPresenterEC1Ev>:
{
public:
    View()
 800aaac:	b580      	push	{r7, lr}
 800aaae:	b082      	sub	sp, #8
 800aab0:	af00      	add	r7, sp, #0
 800aab2:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800aab4:	687b      	ldr	r3, [r7, #4]
 800aab6:	4618      	mov	r0, r3
 800aab8:	f010 f842 	bl	801ab40 <_ZN8touchgfx6ScreenC1Ev>
 800aabc:	4a05      	ldr	r2, [pc, #20]	; (800aad4 <_ZN8touchgfx4ViewI20ClockScreenPresenterEC1Ev+0x28>)
 800aabe:	687b      	ldr	r3, [r7, #4]
 800aac0:	601a      	str	r2, [r3, #0]
 800aac2:	687b      	ldr	r3, [r7, #4]
 800aac4:	2200      	movs	r2, #0
 800aac6:	63da      	str	r2, [r3, #60]	; 0x3c
    {
    }
 800aac8:	687b      	ldr	r3, [r7, #4]
 800aaca:	4618      	mov	r0, r3
 800aacc:	3708      	adds	r7, #8
 800aace:	46bd      	mov	sp, r7
 800aad0:	bd80      	pop	{r7, pc}
 800aad2:	bf00      	nop
 800aad4:	0802df48 	.word	0x0802df48

0800aad8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>:
 *
 * @note As with Callback, this class exists in four versions to support callback functions
 *       taking zero, one, two or three arguments.
 */
template <class T1>
class GenericCallback<T1, void, void>
 800aad8:	b480      	push	{r7}
 800aada:	b083      	sub	sp, #12
 800aadc:	af00      	add	r7, sp, #0
 800aade:	6078      	str	r0, [r7, #4]
 800aae0:	4a04      	ldr	r2, [pc, #16]	; (800aaf4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev+0x1c>)
 800aae2:	687b      	ldr	r3, [r7, #4]
 800aae4:	601a      	str	r2, [r3, #0]
 800aae6:	687b      	ldr	r3, [r7, #4]
 800aae8:	4618      	mov	r0, r3
 800aaea:	370c      	adds	r7, #12
 800aaec:	46bd      	mov	sp, r7
 800aaee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aaf2:	4770      	bx	lr
 800aaf4:	0802df7c 	.word	0x0802df7c

0800aaf8 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_1 Address of member function. This is the version where function takes one
     *                       argument.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800aaf8:	b580      	push	{r7, lr}
 800aafa:	b084      	sub	sp, #16
 800aafc:	af00      	add	r7, sp, #0
 800aafe:	60f8      	str	r0, [r7, #12]
 800ab00:	60b9      	str	r1, [r7, #8]
 800ab02:	4639      	mov	r1, r7
 800ab04:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800ab08:	68fb      	ldr	r3, [r7, #12]
 800ab0a:	4618      	mov	r0, r3
 800ab0c:	f7ff ffe4 	bl	800aad8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800ab10:	4a08      	ldr	r2, [pc, #32]	; (800ab34 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800ab12:	68fb      	ldr	r3, [r7, #12]
 800ab14:	601a      	str	r2, [r3, #0]
 800ab16:	68fb      	ldr	r3, [r7, #12]
 800ab18:	68ba      	ldr	r2, [r7, #8]
 800ab1a:	605a      	str	r2, [r3, #4]
 800ab1c:	68fb      	ldr	r3, [r7, #12]
 800ab1e:	3308      	adds	r3, #8
 800ab20:	463a      	mov	r2, r7
 800ab22:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ab26:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800ab2a:	68fb      	ldr	r3, [r7, #12]
 800ab2c:	4618      	mov	r0, r3
 800ab2e:	3710      	adds	r7, #16
 800ab30:	46bd      	mov	sp, r7
 800ab32:	bd80      	pop	{r7, pc}
 800ab34:	0802df30 	.word	0x0802df30

0800ab38 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>:
    virtual ~GenericCallback()
 800ab38:	b480      	push	{r7}
 800ab3a:	b083      	sub	sp, #12
 800ab3c:	af00      	add	r7, sp, #0
 800ab3e:	6078      	str	r0, [r7, #4]
    }
 800ab40:	4a04      	ldr	r2, [pc, #16]	; (800ab54 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev+0x1c>)
 800ab42:	687b      	ldr	r3, [r7, #4]
 800ab44:	601a      	str	r2, [r3, #0]
 800ab46:	687b      	ldr	r3, [r7, #4]
 800ab48:	4618      	mov	r0, r3
 800ab4a:	370c      	adds	r7, #12
 800ab4c:	46bd      	mov	sp, r7
 800ab4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab52:	4770      	bx	lr
 800ab54:	0802df7c 	.word	0x0802df7c

0800ab58 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev>:
    virtual ~GenericCallback()
 800ab58:	b580      	push	{r7, lr}
 800ab5a:	b082      	sub	sp, #8
 800ab5c:	af00      	add	r7, sp, #0
 800ab5e:	6078      	str	r0, [r7, #4]
    }
 800ab60:	6878      	ldr	r0, [r7, #4]
 800ab62:	f7ff ffe9 	bl	800ab38 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800ab66:	2104      	movs	r1, #4
 800ab68:	6878      	ldr	r0, [r7, #4]
 800ab6a:	f01f fe38 	bl	802a7de <_ZdlPvj>
 800ab6e:	687b      	ldr	r3, [r7, #4]
 800ab70:	4618      	mov	r0, r3
 800ab72:	3708      	adds	r7, #8
 800ab74:	46bd      	mov	sp, r7
 800ab76:	bd80      	pop	{r7, pc}

0800ab78 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800ab78:	b580      	push	{r7, lr}
 800ab7a:	b082      	sub	sp, #8
 800ab7c:	af00      	add	r7, sp, #0
 800ab7e:	6078      	str	r0, [r7, #4]
 800ab80:	4a05      	ldr	r2, [pc, #20]	; (800ab98 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800ab82:	687b      	ldr	r3, [r7, #4]
 800ab84:	601a      	str	r2, [r3, #0]
 800ab86:	687b      	ldr	r3, [r7, #4]
 800ab88:	4618      	mov	r0, r3
 800ab8a:	f7ff ffd5 	bl	800ab38 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800ab8e:	687b      	ldr	r3, [r7, #4]
 800ab90:	4618      	mov	r0, r3
 800ab92:	3708      	adds	r7, #8
 800ab94:	46bd      	mov	sp, r7
 800ab96:	bd80      	pop	{r7, pc}
 800ab98:	0802df30 	.word	0x0802df30

0800ab9c <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800ab9c:	b580      	push	{r7, lr}
 800ab9e:	b082      	sub	sp, #8
 800aba0:	af00      	add	r7, sp, #0
 800aba2:	6078      	str	r0, [r7, #4]
 800aba4:	6878      	ldr	r0, [r7, #4]
 800aba6:	f7ff ffe7 	bl	800ab78 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800abaa:	2110      	movs	r1, #16
 800abac:	6878      	ldr	r0, [r7, #4]
 800abae:	f01f fe16 	bl	802a7de <_ZdlPvj>
 800abb2:	687b      	ldr	r3, [r7, #4]
 800abb4:	4618      	mov	r0, r3
 800abb6:	3708      	adds	r7, #8
 800abb8:	46bd      	mov	sp, r7
 800abba:	bd80      	pop	{r7, pc}

0800abbc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800abbc:	b580      	push	{r7, lr}
 800abbe:	b082      	sub	sp, #8
 800abc0:	af00      	add	r7, sp, #0
 800abc2:	6078      	str	r0, [r7, #4]
 800abc4:	4a05      	ldr	r2, [pc, #20]	; (800abdc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 800abc6:	687b      	ldr	r3, [r7, #4]
 800abc8:	601a      	str	r2, [r3, #0]
 800abca:	687b      	ldr	r3, [r7, #4]
 800abcc:	4618      	mov	r0, r3
 800abce:	f7ff fcc5 	bl	800a55c <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800abd2:	687b      	ldr	r3, [r7, #4]
 800abd4:	4618      	mov	r0, r3
 800abd6:	3708      	adds	r7, #8
 800abd8:	46bd      	mov	sp, r7
 800abda:	bd80      	pop	{r7, pc}
 800abdc:	0802df94 	.word	0x0802df94

0800abe0 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800abe0:	b580      	push	{r7, lr}
 800abe2:	b082      	sub	sp, #8
 800abe4:	af00      	add	r7, sp, #0
 800abe6:	6078      	str	r0, [r7, #4]
 800abe8:	6878      	ldr	r0, [r7, #4]
 800abea:	f7ff ffe7 	bl	800abbc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800abee:	214c      	movs	r1, #76	; 0x4c
 800abf0:	6878      	ldr	r0, [r7, #4]
 800abf2:	f01f fdf4 	bl	802a7de <_ZdlPvj>
 800abf6:	687b      	ldr	r3, [r7, #4]
 800abf8:	4618      	mov	r0, r3
 800abfa:	3708      	adds	r7, #8
 800abfc:	46bd      	mov	sp, r7
 800abfe:	bd80      	pop	{r7, pc}

0800ac00 <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
 800ac00:	b580      	push	{r7, lr}
 800ac02:	b082      	sub	sp, #8
 800ac04:	af00      	add	r7, sp, #0
 800ac06:	6078      	str	r0, [r7, #4]
 800ac08:	4a05      	ldr	r2, [pc, #20]	; (800ac20 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800ac0a:	687b      	ldr	r3, [r7, #4]
 800ac0c:	601a      	str	r2, [r3, #0]
 800ac0e:	687b      	ldr	r3, [r7, #4]
 800ac10:	4618      	mov	r0, r3
 800ac12:	f7ff f8ab 	bl	8009d6c <_ZN8touchgfx8DrawableD1Ev>
 800ac16:	687b      	ldr	r3, [r7, #4]
 800ac18:	4618      	mov	r0, r3
 800ac1a:	3708      	adds	r7, #8
 800ac1c:	46bd      	mov	sp, r7
 800ac1e:	bd80      	pop	{r7, pc}
 800ac20:	0802efc8 	.word	0x0802efc8

0800ac24 <_ZN8touchgfx9ContainerD0Ev>:
 800ac24:	b580      	push	{r7, lr}
 800ac26:	b082      	sub	sp, #8
 800ac28:	af00      	add	r7, sp, #0
 800ac2a:	6078      	str	r0, [r7, #4]
 800ac2c:	6878      	ldr	r0, [r7, #4]
 800ac2e:	f7ff ffe7 	bl	800ac00 <_ZN8touchgfx9ContainerD1Ev>
 800ac32:	212c      	movs	r1, #44	; 0x2c
 800ac34:	6878      	ldr	r0, [r7, #4]
 800ac36:	f01f fdd2 	bl	802a7de <_ZdlPvj>
 800ac3a:	687b      	ldr	r3, [r7, #4]
 800ac3c:	4618      	mov	r0, r3
 800ac3e:	3708      	adds	r7, #8
 800ac40:	46bd      	mov	sp, r7
 800ac42:	bd80      	pop	{r7, pc}

0800ac44 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800ac44:	b580      	push	{r7, lr}
 800ac46:	b082      	sub	sp, #8
 800ac48:	af00      	add	r7, sp, #0
 800ac4a:	6078      	str	r0, [r7, #4]
 800ac4c:	4a05      	ldr	r2, [pc, #20]	; (800ac64 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800ac4e:	687b      	ldr	r3, [r7, #4]
 800ac50:	601a      	str	r2, [r3, #0]
 800ac52:	687b      	ldr	r3, [r7, #4]
 800ac54:	4618      	mov	r0, r3
 800ac56:	f7ff fa99 	bl	800a18c <_ZN8touchgfx6WidgetD1Ev>
 800ac5a:	687b      	ldr	r3, [r7, #4]
 800ac5c:	4618      	mov	r0, r3
 800ac5e:	3708      	adds	r7, #8
 800ac60:	46bd      	mov	sp, r7
 800ac62:	bd80      	pop	{r7, pc}
 800ac64:	0802f5dc 	.word	0x0802f5dc

0800ac68 <_ZN8touchgfx3BoxD0Ev>:
 800ac68:	b580      	push	{r7, lr}
 800ac6a:	b082      	sub	sp, #8
 800ac6c:	af00      	add	r7, sp, #0
 800ac6e:	6078      	str	r0, [r7, #4]
 800ac70:	6878      	ldr	r0, [r7, #4]
 800ac72:	f7ff ffe7 	bl	800ac44 <_ZN8touchgfx3BoxD1Ev>
 800ac76:	212c      	movs	r1, #44	; 0x2c
 800ac78:	6878      	ldr	r0, [r7, #4]
 800ac7a:	f01f fdb0 	bl	802a7de <_ZdlPvj>
 800ac7e:	687b      	ldr	r3, [r7, #4]
 800ac80:	4618      	mov	r0, r3
 800ac82:	3708      	adds	r7, #8
 800ac84:	46bd      	mov	sp, r7
 800ac86:	bd80      	pop	{r7, pc}

0800ac88 <_ZN8touchgfx13AbstractClockD1Ev>:
 * Superclass of clock widgets. Allows the hour, minute and second of the clock to be set and
 * read.
 *
 * @see AnalogClock, DigitalClock
 */
class AbstractClock : public Container
 800ac88:	b580      	push	{r7, lr}
 800ac8a:	b082      	sub	sp, #8
 800ac8c:	af00      	add	r7, sp, #0
 800ac8e:	6078      	str	r0, [r7, #4]
 800ac90:	4a05      	ldr	r2, [pc, #20]	; (800aca8 <_ZN8touchgfx13AbstractClockD1Ev+0x20>)
 800ac92:	687b      	ldr	r3, [r7, #4]
 800ac94:	601a      	str	r2, [r3, #0]
 800ac96:	687b      	ldr	r3, [r7, #4]
 800ac98:	4618      	mov	r0, r3
 800ac9a:	f7ff ffb1 	bl	800ac00 <_ZN8touchgfx9ContainerD1Ev>
 800ac9e:	687b      	ldr	r3, [r7, #4]
 800aca0:	4618      	mov	r0, r3
 800aca2:	3708      	adds	r7, #8
 800aca4:	46bd      	mov	sp, r7
 800aca6:	bd80      	pop	{r7, pc}
 800aca8:	0802ef2c 	.word	0x0802ef2c

0800acac <_ZN8touchgfx13AbstractClockD0Ev>:
 800acac:	b580      	push	{r7, lr}
 800acae:	b082      	sub	sp, #8
 800acb0:	af00      	add	r7, sp, #0
 800acb2:	6078      	str	r0, [r7, #4]
 800acb4:	6878      	ldr	r0, [r7, #4]
 800acb6:	f7ff ffe7 	bl	800ac88 <_ZN8touchgfx13AbstractClockD1Ev>
 800acba:	2130      	movs	r1, #48	; 0x30
 800acbc:	6878      	ldr	r0, [r7, #4]
 800acbe:	f01f fd8e 	bl	802a7de <_ZdlPvj>
 800acc2:	687b      	ldr	r3, [r7, #4]
 800acc4:	4618      	mov	r0, r3
 800acc6:	3708      	adds	r7, #8
 800acc8:	46bd      	mov	sp, r7
 800acca:	bd80      	pop	{r7, pc}

0800accc <_ZN8touchgfx12DigitalClockD1Ev>:
class DigitalClock : public AbstractClock
 800accc:	b580      	push	{r7, lr}
 800acce:	b082      	sub	sp, #8
 800acd0:	af00      	add	r7, sp, #0
 800acd2:	6078      	str	r0, [r7, #4]
 800acd4:	4a08      	ldr	r2, [pc, #32]	; (800acf8 <_ZN8touchgfx12DigitalClockD1Ev+0x2c>)
 800acd6:	687b      	ldr	r3, [r7, #4]
 800acd8:	601a      	str	r2, [r3, #0]
 800acda:	687b      	ldr	r3, [r7, #4]
 800acdc:	3334      	adds	r3, #52	; 0x34
 800acde:	4618      	mov	r0, r3
 800ace0:	f7ff ff6c 	bl	800abbc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800ace4:	687b      	ldr	r3, [r7, #4]
 800ace6:	4618      	mov	r0, r3
 800ace8:	f7ff ffce 	bl	800ac88 <_ZN8touchgfx13AbstractClockD1Ev>
 800acec:	687b      	ldr	r3, [r7, #4]
 800acee:	4618      	mov	r0, r3
 800acf0:	3708      	adds	r7, #8
 800acf2:	46bd      	mov	sp, r7
 800acf4:	bd80      	pop	{r7, pc}
 800acf6:	bf00      	nop
 800acf8:	0802ee6c 	.word	0x0802ee6c

0800acfc <_ZN8touchgfx12DigitalClockD0Ev>:
 800acfc:	b580      	push	{r7, lr}
 800acfe:	b082      	sub	sp, #8
 800ad00:	af00      	add	r7, sp, #0
 800ad02:	6078      	str	r0, [r7, #4]
 800ad04:	6878      	ldr	r0, [r7, #4]
 800ad06:	f7ff ffe1 	bl	800accc <_ZN8touchgfx12DigitalClockD1Ev>
 800ad0a:	2198      	movs	r1, #152	; 0x98
 800ad0c:	6878      	ldr	r0, [r7, #4]
 800ad0e:	f01f fd66 	bl	802a7de <_ZdlPvj>
 800ad12:	687b      	ldr	r3, [r7, #4]
 800ad14:	4618      	mov	r0, r3
 800ad16:	3708      	adds	r7, #8
 800ad18:	46bd      	mov	sp, r7
 800ad1a:	bd80      	pop	{r7, pc}

0800ad1c <_ZN8touchgfx6ButtonD1Ev>:
{
/**
 * A button with two images. One image showing the unpressed button and one image showing the
 * pressed state.
 */
class Button : public AbstractButton
 800ad1c:	b580      	push	{r7, lr}
 800ad1e:	b082      	sub	sp, #8
 800ad20:	af00      	add	r7, sp, #0
 800ad22:	6078      	str	r0, [r7, #4]
 800ad24:	4a05      	ldr	r2, [pc, #20]	; (800ad3c <_ZN8touchgfx6ButtonD1Ev+0x20>)
 800ad26:	687b      	ldr	r3, [r7, #4]
 800ad28:	601a      	str	r2, [r3, #0]
 800ad2a:	687b      	ldr	r3, [r7, #4]
 800ad2c:	4618      	mov	r0, r3
 800ad2e:	f7ff fc61 	bl	800a5f4 <_ZN8touchgfx14AbstractButtonD1Ev>
 800ad32:	687b      	ldr	r3, [r7, #4]
 800ad34:	4618      	mov	r0, r3
 800ad36:	3708      	adds	r7, #8
 800ad38:	46bd      	mov	sp, r7
 800ad3a:	bd80      	pop	{r7, pc}
 800ad3c:	0802f72c 	.word	0x0802f72c

0800ad40 <_ZN8touchgfx6ButtonD0Ev>:
 800ad40:	b580      	push	{r7, lr}
 800ad42:	b082      	sub	sp, #8
 800ad44:	af00      	add	r7, sp, #0
 800ad46:	6078      	str	r0, [r7, #4]
 800ad48:	6878      	ldr	r0, [r7, #4]
 800ad4a:	f7ff ffe7 	bl	800ad1c <_ZN8touchgfx6ButtonD1Ev>
 800ad4e:	2134      	movs	r1, #52	; 0x34
 800ad50:	6878      	ldr	r0, [r7, #4]
 800ad52:	f01f fd44 	bl	802a7de <_ZdlPvj>
 800ad56:	687b      	ldr	r3, [r7, #4]
 800ad58:	4618      	mov	r0, r3
 800ad5a:	3708      	adds	r7, #8
 800ad5c:	46bd      	mov	sp, r7
 800ad5e:	bd80      	pop	{r7, pc}

0800ad60 <_ZN8touchgfx14ButtonWithIconD1Ev>:
class ButtonWithIcon : public Button
 800ad60:	b580      	push	{r7, lr}
 800ad62:	b082      	sub	sp, #8
 800ad64:	af00      	add	r7, sp, #0
 800ad66:	6078      	str	r0, [r7, #4]
 800ad68:	4a05      	ldr	r2, [pc, #20]	; (800ad80 <_ZN8touchgfx14ButtonWithIconD1Ev+0x20>)
 800ad6a:	687b      	ldr	r3, [r7, #4]
 800ad6c:	601a      	str	r2, [r3, #0]
 800ad6e:	687b      	ldr	r3, [r7, #4]
 800ad70:	4618      	mov	r0, r3
 800ad72:	f7ff ffd3 	bl	800ad1c <_ZN8touchgfx6ButtonD1Ev>
 800ad76:	687b      	ldr	r3, [r7, #4]
 800ad78:	4618      	mov	r0, r3
 800ad7a:	3708      	adds	r7, #8
 800ad7c:	46bd      	mov	sp, r7
 800ad7e:	bd80      	pop	{r7, pc}
 800ad80:	0802f898 	.word	0x0802f898

0800ad84 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800ad84:	b580      	push	{r7, lr}
 800ad86:	b082      	sub	sp, #8
 800ad88:	af00      	add	r7, sp, #0
 800ad8a:	6078      	str	r0, [r7, #4]
 800ad8c:	6878      	ldr	r0, [r7, #4]
 800ad8e:	f7ff ffe7 	bl	800ad60 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800ad92:	213c      	movs	r1, #60	; 0x3c
 800ad94:	6878      	ldr	r0, [r7, #4]
 800ad96:	f01f fd22 	bl	802a7de <_ZdlPvj>
 800ad9a:	687b      	ldr	r3, [r7, #4]
 800ad9c:	4618      	mov	r0, r3
 800ad9e:	3708      	adds	r7, #8
 800ada0:	46bd      	mov	sp, r7
 800ada2:	bd80      	pop	{r7, pc}

0800ada4 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 800ada4:	b580      	push	{r7, lr}
 800ada6:	b082      	sub	sp, #8
 800ada8:	af00      	add	r7, sp, #0
 800adaa:	6078      	str	r0, [r7, #4]
 800adac:	6039      	str	r1, [r7, #0]
    {
        (pobject->*pmemfun)(t1);
 800adae:	687b      	ldr	r3, [r7, #4]
 800adb0:	685b      	ldr	r3, [r3, #4]
 800adb2:	687a      	ldr	r2, [r7, #4]
 800adb4:	68d2      	ldr	r2, [r2, #12]
 800adb6:	1052      	asrs	r2, r2, #1
 800adb8:	1898      	adds	r0, r3, r2
 800adba:	687b      	ldr	r3, [r7, #4]
 800adbc:	68db      	ldr	r3, [r3, #12]
 800adbe:	f003 0301 	and.w	r3, r3, #1
 800adc2:	2b00      	cmp	r3, #0
 800adc4:	d102      	bne.n	800adcc <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800adc6:	687b      	ldr	r3, [r7, #4]
 800adc8:	689b      	ldr	r3, [r3, #8]
 800adca:	e00a      	b.n	800ade2 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800adcc:	687b      	ldr	r3, [r7, #4]
 800adce:	685b      	ldr	r3, [r3, #4]
 800add0:	687a      	ldr	r2, [r7, #4]
 800add2:	68d2      	ldr	r2, [r2, #12]
 800add4:	1052      	asrs	r2, r2, #1
 800add6:	4413      	add	r3, r2
 800add8:	681b      	ldr	r3, [r3, #0]
 800adda:	687a      	ldr	r2, [r7, #4]
 800addc:	6892      	ldr	r2, [r2, #8]
 800adde:	4413      	add	r3, r2
 800ade0:	681b      	ldr	r3, [r3, #0]
 800ade2:	6839      	ldr	r1, [r7, #0]
 800ade4:	4798      	blx	r3
    }
 800ade6:	bf00      	nop
 800ade8:	3708      	adds	r7, #8
 800adea:	46bd      	mov	sp, r7
 800adec:	bd80      	pop	{r7, pc}

0800adee <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    /**
     * Query if this object is valid.
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
 800adee:	b480      	push	{r7}
 800adf0:	b083      	sub	sp, #12
 800adf2:	af00      	add	r7, sp, #0
 800adf4:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800adf6:	687b      	ldr	r3, [r7, #4]
 800adf8:	685b      	ldr	r3, [r3, #4]
 800adfa:	2b00      	cmp	r3, #0
 800adfc:	d010      	beq.n	800ae20 <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800adfe:	687b      	ldr	r3, [r7, #4]
 800ae00:	689b      	ldr	r3, [r3, #8]
 800ae02:	2b00      	cmp	r3, #0
 800ae04:	d107      	bne.n	800ae16 <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800ae06:	687b      	ldr	r3, [r7, #4]
 800ae08:	68db      	ldr	r3, [r3, #12]
 800ae0a:	f003 0301 	and.w	r3, r3, #1
 800ae0e:	2b00      	cmp	r3, #0
 800ae10:	d101      	bne.n	800ae16 <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800ae12:	2301      	movs	r3, #1
 800ae14:	e000      	b.n	800ae18 <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800ae16:	2300      	movs	r3, #0
 800ae18:	2b01      	cmp	r3, #1
 800ae1a:	d001      	beq.n	800ae20 <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800ae1c:	2301      	movs	r3, #1
 800ae1e:	e000      	b.n	800ae22 <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800ae20:	2300      	movs	r3, #0
    }
 800ae22:	4618      	mov	r0, r3
 800ae24:	370c      	adds	r7, #12
 800ae26:	46bd      	mov	sp, r7
 800ae28:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae2c:	4770      	bx	lr

0800ae2e <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800ae2e:	b480      	push	{r7}
 800ae30:	b083      	sub	sp, #12
 800ae32:	af00      	add	r7, sp, #0
 800ae34:	6078      	str	r0, [r7, #4]
 800ae36:	6039      	str	r1, [r7, #0]
 800ae38:	683b      	ldr	r3, [r7, #0]
 800ae3a:	4618      	mov	r0, r3
 800ae3c:	370c      	adds	r7, #12
 800ae3e:	46bd      	mov	sp, r7
 800ae40:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae44:	4770      	bx	lr

0800ae46 <_ZN8touchgfx8Drawable14getNextSiblingEv>:
    Drawable* getNextSibling()
 800ae46:	b480      	push	{r7}
 800ae48:	b083      	sub	sp, #12
 800ae4a:	af00      	add	r7, sp, #0
 800ae4c:	6078      	str	r0, [r7, #4]
        return nextSibling;
 800ae4e:	687b      	ldr	r3, [r7, #4]
 800ae50:	699b      	ldr	r3, [r3, #24]
    }
 800ae52:	4618      	mov	r0, r3
 800ae54:	370c      	adds	r7, #12
 800ae56:	46bd      	mov	sp, r7
 800ae58:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae5c:	4770      	bx	lr

0800ae5e <_ZNK8touchgfx8Drawable4getXEv>:
    int16_t getX() const
 800ae5e:	b480      	push	{r7}
 800ae60:	b083      	sub	sp, #12
 800ae62:	af00      	add	r7, sp, #0
 800ae64:	6078      	str	r0, [r7, #4]
        return rect.x;
 800ae66:	687b      	ldr	r3, [r7, #4]
 800ae68:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
    }
 800ae6c:	4618      	mov	r0, r3
 800ae6e:	370c      	adds	r7, #12
 800ae70:	46bd      	mov	sp, r7
 800ae72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae76:	4770      	bx	lr

0800ae78 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800ae78:	b480      	push	{r7}
 800ae7a:	b083      	sub	sp, #12
 800ae7c:	af00      	add	r7, sp, #0
 800ae7e:	6078      	str	r0, [r7, #4]
 800ae80:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800ae82:	bf00      	nop
 800ae84:	370c      	adds	r7, #12
 800ae86:	46bd      	mov	sp, r7
 800ae88:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae8c:	4770      	bx	lr

0800ae8e <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800ae8e:	b480      	push	{r7}
 800ae90:	b083      	sub	sp, #12
 800ae92:	af00      	add	r7, sp, #0
 800ae94:	6078      	str	r0, [r7, #4]
 800ae96:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800ae98:	bf00      	nop
 800ae9a:	370c      	adds	r7, #12
 800ae9c:	46bd      	mov	sp, r7
 800ae9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aea2:	4770      	bx	lr

0800aea4 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800aea4:	b480      	push	{r7}
 800aea6:	b083      	sub	sp, #12
 800aea8:	af00      	add	r7, sp, #0
 800aeaa:	6078      	str	r0, [r7, #4]
 800aeac:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800aeae:	bf00      	nop
 800aeb0:	370c      	adds	r7, #12
 800aeb2:	46bd      	mov	sp, r7
 800aeb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aeb8:	4770      	bx	lr

0800aeba <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800aeba:	b480      	push	{r7}
 800aebc:	b083      	sub	sp, #12
 800aebe:	af00      	add	r7, sp, #0
 800aec0:	6078      	str	r0, [r7, #4]
 800aec2:	460b      	mov	r3, r1
 800aec4:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 800aec6:	bf00      	nop
 800aec8:	370c      	adds	r7, #12
 800aeca:	46bd      	mov	sp, r7
 800aecc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aed0:	4770      	bx	lr

0800aed2 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 800aed2:	b480      	push	{r7}
 800aed4:	b083      	sub	sp, #12
 800aed6:	af00      	add	r7, sp, #0
 800aed8:	6078      	str	r0, [r7, #4]
    {
    }
 800aeda:	bf00      	nop
 800aedc:	370c      	adds	r7, #12
 800aede:	46bd      	mov	sp, r7
 800aee0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aee4:	4770      	bx	lr

0800aee6 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 800aee6:	b480      	push	{r7}
 800aee8:	b083      	sub	sp, #12
 800aeea:	af00      	add	r7, sp, #0
 800aeec:	6078      	str	r0, [r7, #4]
    {
    }
 800aeee:	bf00      	nop
 800aef0:	370c      	adds	r7, #12
 800aef2:	46bd      	mov	sp, r7
 800aef4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aef8:	4770      	bx	lr
	...

0800aefc <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 800aefc:	b480      	push	{r7}
 800aefe:	b083      	sub	sp, #12
 800af00:	af00      	add	r7, sp, #0
 800af02:	6078      	str	r0, [r7, #4]
    {
 800af04:	4a04      	ldr	r2, [pc, #16]	; (800af18 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800af06:	687b      	ldr	r3, [r7, #4]
 800af08:	601a      	str	r2, [r3, #0]
    }
 800af0a:	687b      	ldr	r3, [r7, #4]
 800af0c:	4618      	mov	r0, r3
 800af0e:	370c      	adds	r7, #12
 800af10:	46bd      	mov	sp, r7
 800af12:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af16:	4770      	bx	lr
 800af18:	0802e1f4 	.word	0x0802e1f4

0800af1c <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800af1c:	b580      	push	{r7, lr}
 800af1e:	b082      	sub	sp, #8
 800af20:	af00      	add	r7, sp, #0
 800af22:	6078      	str	r0, [r7, #4]
    }
 800af24:	6878      	ldr	r0, [r7, #4]
 800af26:	f7ff ffe9 	bl	800aefc <_ZN8touchgfx15UIEventListenerD1Ev>
 800af2a:	2104      	movs	r1, #4
 800af2c:	6878      	ldr	r0, [r7, #4]
 800af2e:	f01f fc56 	bl	802a7de <_ZdlPvj>
 800af32:	687b      	ldr	r3, [r7, #4]
 800af34:	4618      	mov	r0, r3
 800af36:	3708      	adds	r7, #8
 800af38:	46bd      	mov	sp, r7
 800af3a:	bd80      	pop	{r7, pc}

0800af3c <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 800af3c:	b480      	push	{r7}
 800af3e:	b083      	sub	sp, #12
 800af40:	af00      	add	r7, sp, #0
 800af42:	6078      	str	r0, [r7, #4]
    {
    }
 800af44:	bf00      	nop
 800af46:	370c      	adds	r7, #12
 800af48:	46bd      	mov	sp, r7
 800af4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af4e:	4770      	bx	lr

0800af50 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 800af50:	b480      	push	{r7}
 800af52:	b083      	sub	sp, #12
 800af54:	af00      	add	r7, sp, #0
 800af56:	6078      	str	r0, [r7, #4]
 800af58:	460b      	mov	r3, r1
 800af5a:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 800af5c:	bf00      	nop
 800af5e:	370c      	adds	r7, #12
 800af60:	46bd      	mov	sp, r7
 800af62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af66:	4770      	bx	lr

0800af68 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 800af68:	b480      	push	{r7}
 800af6a:	b083      	sub	sp, #12
 800af6c:	af00      	add	r7, sp, #0
 800af6e:	6078      	str	r0, [r7, #4]
 800af70:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800af72:	687b      	ldr	r3, [r7, #4]
 800af74:	683a      	ldr	r2, [r7, #0]
 800af76:	f503 7398 	add.w	r3, r3, #304	; 0x130
 800af7a:	6810      	ldr	r0, [r2, #0]
 800af7c:	6851      	ldr	r1, [r2, #4]
 800af7e:	c303      	stmia	r3!, {r0, r1}
    }
 800af80:	bf00      	nop
 800af82:	370c      	adds	r7, #12
 800af84:	46bd      	mov	sp, r7
 800af86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af8a:	4770      	bx	lr

0800af8c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800af8c:	b580      	push	{r7, lr}
 800af8e:	b082      	sub	sp, #8
 800af90:	af00      	add	r7, sp, #0
 800af92:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 800af94:	687b      	ldr	r3, [r7, #4]
 800af96:	3304      	adds	r3, #4
 800af98:	4618      	mov	r0, r3
 800af9a:	f00e fa01 	bl	80193a0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800af9e:	bf00      	nop
 800afa0:	3708      	adds	r7, #8
 800afa2:	46bd      	mov	sp, r7
 800afa4:	bd80      	pop	{r7, pc}
	...

0800afa8 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
    virtual ~GenericCallback()
 800afa8:	b480      	push	{r7}
 800afaa:	b083      	sub	sp, #12
 800afac:	af00      	add	r7, sp, #0
 800afae:	6078      	str	r0, [r7, #4]
    {
 800afb0:	4a04      	ldr	r2, [pc, #16]	; (800afc4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 800afb2:	687b      	ldr	r3, [r7, #4]
 800afb4:	601a      	str	r2, [r3, #0]
    }
 800afb6:	687b      	ldr	r3, [r7, #4]
 800afb8:	4618      	mov	r0, r3
 800afba:	370c      	adds	r7, #12
 800afbc:	46bd      	mov	sp, r7
 800afbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afc2:	4770      	bx	lr
 800afc4:	0802e1dc 	.word	0x0802e1dc

0800afc8 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 800afc8:	b580      	push	{r7, lr}
 800afca:	b082      	sub	sp, #8
 800afcc:	af00      	add	r7, sp, #0
 800afce:	6078      	str	r0, [r7, #4]
    }
 800afd0:	6878      	ldr	r0, [r7, #4]
 800afd2:	f7ff ffe9 	bl	800afa8 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800afd6:	2104      	movs	r1, #4
 800afd8:	6878      	ldr	r0, [r7, #4]
 800afda:	f01f fc00 	bl	802a7de <_ZdlPvj>
 800afde:	687b      	ldr	r3, [r7, #4]
 800afe0:	4618      	mov	r0, r3
 800afe2:	3708      	adds	r7, #8
 800afe4:	46bd      	mov	sp, r7
 800afe6:	bd80      	pop	{r7, pc}

0800afe8 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 800afe8:	b480      	push	{r7}
 800afea:	af00      	add	r7, sp, #0
    {
        return instance;
 800afec:	4b03      	ldr	r3, [pc, #12]	; (800affc <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800afee:	681b      	ldr	r3, [r3, #0]
    }
 800aff0:	4618      	mov	r0, r3
 800aff2:	46bd      	mov	sp, r7
 800aff4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aff8:	4770      	bx	lr
 800affa:	bf00      	nop
 800affc:	2000224c 	.word	0x2000224c

0800b000 <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 800b000:	b480      	push	{r7}
 800b002:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800b004:	4b0b      	ldr	r3, [pc, #44]	; (800b034 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800b006:	681b      	ldr	r3, [r3, #0]
 800b008:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 800b00c:	2b00      	cmp	r3, #0
 800b00e:	d008      	beq.n	800b022 <_ZN8touchgfx3HAL3lcdEv+0x22>
 800b010:	4b08      	ldr	r3, [pc, #32]	; (800b034 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800b012:	681b      	ldr	r3, [r3, #0]
 800b014:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800b016:	2b00      	cmp	r3, #0
 800b018:	d003      	beq.n	800b022 <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 800b01a:	4b06      	ldr	r3, [pc, #24]	; (800b034 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800b01c:	681b      	ldr	r3, [r3, #0]
 800b01e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800b020:	e002      	b.n	800b028 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800b022:	4b04      	ldr	r3, [pc, #16]	; (800b034 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800b024:	681b      	ldr	r3, [r3, #0]
 800b026:	689b      	ldr	r3, [r3, #8]
    }
 800b028:	4618      	mov	r0, r3
 800b02a:	46bd      	mov	sp, r7
 800b02c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b030:	4770      	bx	lr
 800b032:	bf00      	nop
 800b034:	2000224c 	.word	0x2000224c

0800b038 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 800b038:	b480      	push	{r7}
 800b03a:	b083      	sub	sp, #12
 800b03c:	af00      	add	r7, sp, #0
 800b03e:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 800b040:	4a07      	ldr	r2, [pc, #28]	; (800b060 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800b042:	687b      	ldr	r3, [r7, #4]
 800b044:	601a      	str	r2, [r3, #0]
 800b046:	687b      	ldr	r3, [r7, #4]
 800b048:	2200      	movs	r2, #0
 800b04a:	605a      	str	r2, [r3, #4]
 800b04c:	687b      	ldr	r3, [r7, #4]
 800b04e:	2200      	movs	r2, #0
 800b050:	721a      	strb	r2, [r3, #8]
    {
    }
 800b052:	687b      	ldr	r3, [r7, #4]
 800b054:	4618      	mov	r0, r3
 800b056:	370c      	adds	r7, #12
 800b058:	46bd      	mov	sp, r7
 800b05a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b05e:	4770      	bx	lr
 800b060:	0802e1b8 	.word	0x0802e1b8

0800b064 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 800b064:	b480      	push	{r7}
 800b066:	b083      	sub	sp, #12
 800b068:	af00      	add	r7, sp, #0
 800b06a:	6078      	str	r0, [r7, #4]
    {
 800b06c:	4a04      	ldr	r2, [pc, #16]	; (800b080 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800b06e:	687b      	ldr	r3, [r7, #4]
 800b070:	601a      	str	r2, [r3, #0]
    }
 800b072:	687b      	ldr	r3, [r7, #4]
 800b074:	4618      	mov	r0, r3
 800b076:	370c      	adds	r7, #12
 800b078:	46bd      	mov	sp, r7
 800b07a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b07e:	4770      	bx	lr
 800b080:	0802e1b8 	.word	0x0802e1b8

0800b084 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800b084:	b580      	push	{r7, lr}
 800b086:	b082      	sub	sp, #8
 800b088:	af00      	add	r7, sp, #0
 800b08a:	6078      	str	r0, [r7, #4]
    }
 800b08c:	6878      	ldr	r0, [r7, #4]
 800b08e:	f7ff ffe9 	bl	800b064 <_ZN8touchgfx10TransitionD1Ev>
 800b092:	210c      	movs	r1, #12
 800b094:	6878      	ldr	r0, [r7, #4]
 800b096:	f01f fba2 	bl	802a7de <_ZdlPvj>
 800b09a:	687b      	ldr	r3, [r7, #4]
 800b09c:	4618      	mov	r0, r3
 800b09e:	3708      	adds	r7, #8
 800b0a0:	46bd      	mov	sp, r7
 800b0a2:	bd80      	pop	{r7, pc}

0800b0a4 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 800b0a4:	b480      	push	{r7}
 800b0a6:	b083      	sub	sp, #12
 800b0a8:	af00      	add	r7, sp, #0
 800b0aa:	6078      	str	r0, [r7, #4]
    {
    }
 800b0ac:	bf00      	nop
 800b0ae:	370c      	adds	r7, #12
 800b0b0:	46bd      	mov	sp, r7
 800b0b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0b6:	4770      	bx	lr

0800b0b8 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 800b0b8:	b480      	push	{r7}
 800b0ba:	b083      	sub	sp, #12
 800b0bc:	af00      	add	r7, sp, #0
 800b0be:	6078      	str	r0, [r7, #4]
    {
    }
 800b0c0:	bf00      	nop
 800b0c2:	370c      	adds	r7, #12
 800b0c4:	46bd      	mov	sp, r7
 800b0c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0ca:	4770      	bx	lr

0800b0cc <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 800b0cc:	b480      	push	{r7}
 800b0ce:	b083      	sub	sp, #12
 800b0d0:	af00      	add	r7, sp, #0
 800b0d2:	6078      	str	r0, [r7, #4]
    {
    }
 800b0d4:	bf00      	nop
 800b0d6:	370c      	adds	r7, #12
 800b0d8:	46bd      	mov	sp, r7
 800b0da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0de:	4770      	bx	lr

0800b0e0 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 800b0e0:	b580      	push	{r7, lr}
 800b0e2:	b082      	sub	sp, #8
 800b0e4:	af00      	add	r7, sp, #0
 800b0e6:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 800b0e8:	f00e f91c 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 800b0ec:	4603      	mov	r3, r0
 800b0ee:	681a      	ldr	r2, [r3, #0]
 800b0f0:	323c      	adds	r2, #60	; 0x3c
 800b0f2:	6812      	ldr	r2, [r2, #0]
 800b0f4:	4618      	mov	r0, r3
 800b0f6:	4790      	blx	r2
    }
 800b0f8:	bf00      	nop
 800b0fa:	3708      	adds	r7, #8
 800b0fc:	46bd      	mov	sp, r7
 800b0fe:	bd80      	pop	{r7, pc}

0800b100 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 800b100:	b480      	push	{r7}
 800b102:	b083      	sub	sp, #12
 800b104:	af00      	add	r7, sp, #0
 800b106:	6078      	str	r0, [r7, #4]
 800b108:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800b10a:	687b      	ldr	r3, [r7, #4]
 800b10c:	683a      	ldr	r2, [r7, #0]
 800b10e:	605a      	str	r2, [r3, #4]
    }
 800b110:	bf00      	nop
 800b112:	370c      	adds	r7, #12
 800b114:	46bd      	mov	sp, r7
 800b116:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b11a:	4770      	bx	lr

0800b11c <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 800b11c:	b580      	push	{r7, lr}
 800b11e:	b082      	sub	sp, #8
 800b120:	af00      	add	r7, sp, #0
 800b122:	6078      	str	r0, [r7, #4]
 800b124:	4a05      	ldr	r2, [pc, #20]	; (800b13c <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800b126:	687b      	ldr	r3, [r7, #4]
 800b128:	601a      	str	r2, [r3, #0]
 800b12a:	687b      	ldr	r3, [r7, #4]
 800b12c:	4618      	mov	r0, r3
 800b12e:	f7ff fee5 	bl	800aefc <_ZN8touchgfx15UIEventListenerD1Ev>
 800b132:	687b      	ldr	r3, [r7, #4]
 800b134:	4618      	mov	r0, r3
 800b136:	3708      	adds	r7, #8
 800b138:	46bd      	mov	sp, r7
 800b13a:	bd80      	pop	{r7, pc}
 800b13c:	0802f9e4 	.word	0x0802f9e4

0800b140 <_ZN8touchgfx11ApplicationD0Ev>:
 800b140:	b580      	push	{r7, lr}
 800b142:	b082      	sub	sp, #8
 800b144:	af00      	add	r7, sp, #0
 800b146:	6078      	str	r0, [r7, #4]
 800b148:	6878      	ldr	r0, [r7, #4]
 800b14a:	f7ff ffe7 	bl	800b11c <_ZN8touchgfx11ApplicationD1Ev>
 800b14e:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800b152:	6878      	ldr	r0, [r7, #4]
 800b154:	f01f fb43 	bl	802a7de <_ZdlPvj>
 800b158:	687b      	ldr	r3, [r7, #4]
 800b15a:	4618      	mov	r0, r3
 800b15c:	3708      	adds	r7, #8
 800b15e:	46bd      	mov	sp, r7
 800b160:	bd80      	pop	{r7, pc}
	...

0800b164 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 800b164:	b580      	push	{r7, lr}
 800b166:	b082      	sub	sp, #8
 800b168:	af00      	add	r7, sp, #0
 800b16a:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 800b16c:	687b      	ldr	r3, [r7, #4]
 800b16e:	4618      	mov	r0, r3
 800b170:	f00e f9e4 	bl	801953c <_ZN8touchgfx11ApplicationC1Ev>
 800b174:	4a09      	ldr	r2, [pc, #36]	; (800b19c <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800b176:	687b      	ldr	r3, [r7, #4]
 800b178:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 800b17a:	687b      	ldr	r3, [r7, #4]
 800b17c:	2200      	movs	r2, #0
 800b17e:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
          pendingScreenTransitionCallback(0)
 800b182:	687b      	ldr	r3, [r7, #4]
 800b184:	2200      	movs	r2, #0
 800b186:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
    {
        instance = this;
 800b18a:	687b      	ldr	r3, [r7, #4]
 800b18c:	4a04      	ldr	r2, [pc, #16]	; (800b1a0 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800b18e:	6013      	str	r3, [r2, #0]
    }
 800b190:	687b      	ldr	r3, [r7, #4]
 800b192:	4618      	mov	r0, r3
 800b194:	3708      	adds	r7, #8
 800b196:	46bd      	mov	sp, r7
 800b198:	bd80      	pop	{r7, pc}
 800b19a:	bf00      	nop
 800b19c:	0802e164 	.word	0x0802e164
 800b1a0:	200022a0 	.word	0x200022a0

0800b1a4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800b1a4:	b580      	push	{r7, lr}
 800b1a6:	b082      	sub	sp, #8
 800b1a8:	af00      	add	r7, sp, #0
 800b1aa:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 800b1ac:	6878      	ldr	r0, [r7, #4]
 800b1ae:	f000 f804 	bl	800b1ba <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800b1b2:	bf00      	nop
 800b1b4:	3708      	adds	r7, #8
 800b1b6:	46bd      	mov	sp, r7
 800b1b8:	bd80      	pop	{r7, pc}

0800b1ba <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800b1ba:	b580      	push	{r7, lr}
 800b1bc:	b082      	sub	sp, #8
 800b1be:	af00      	add	r7, sp, #0
 800b1c0:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800b1c2:	687b      	ldr	r3, [r7, #4]
 800b1c4:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800b1c8:	2b00      	cmp	r3, #0
 800b1ca:	d00f      	beq.n	800b1ec <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800b1cc:	687b      	ldr	r3, [r7, #4]
 800b1ce:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800b1d2:	687b      	ldr	r3, [r7, #4]
 800b1d4:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800b1d8:	681b      	ldr	r3, [r3, #0]
 800b1da:	330c      	adds	r3, #12
 800b1dc:	681b      	ldr	r3, [r3, #0]
 800b1de:	4610      	mov	r0, r2
 800b1e0:	4798      	blx	r3
 800b1e2:	4603      	mov	r3, r0
 800b1e4:	2b00      	cmp	r3, #0
 800b1e6:	d001      	beq.n	800b1ec <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800b1e8:	2301      	movs	r3, #1
 800b1ea:	e000      	b.n	800b1ee <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 800b1ec:	2300      	movs	r3, #0
 800b1ee:	2b00      	cmp	r3, #0
 800b1f0:	d00e      	beq.n	800b210 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 800b1f2:	687b      	ldr	r3, [r7, #4]
 800b1f4:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800b1f8:	687b      	ldr	r3, [r7, #4]
 800b1fa:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800b1fe:	681b      	ldr	r3, [r3, #0]
 800b200:	3308      	adds	r3, #8
 800b202:	681b      	ldr	r3, [r3, #0]
 800b204:	4610      	mov	r0, r2
 800b206:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800b208:	687b      	ldr	r3, [r7, #4]
 800b20a:	2200      	movs	r2, #0
 800b20c:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
        }
    }
 800b210:	bf00      	nop
 800b212:	3708      	adds	r7, #8
 800b214:	46bd      	mov	sp, r7
 800b216:	bd80      	pop	{r7, pc}

0800b218 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 800b218:	b480      	push	{r7}
 800b21a:	b083      	sub	sp, #12
 800b21c:	af00      	add	r7, sp, #0
 800b21e:	6078      	str	r0, [r7, #4]
 800b220:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800b222:	687b      	ldr	r3, [r7, #4]
 800b224:	683a      	ldr	r2, [r7, #0]
 800b226:	601a      	str	r2, [r3, #0]
    }
 800b228:	bf00      	nop
 800b22a:	370c      	adds	r7, #12
 800b22c:	46bd      	mov	sp, r7
 800b22e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b232:	4770      	bx	lr

0800b234 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 800b234:	b580      	push	{r7, lr}
 800b236:	b082      	sub	sp, #8
 800b238:	af00      	add	r7, sp, #0
 800b23a:	6078      	str	r0, [r7, #4]
 800b23c:	4a05      	ldr	r2, [pc, #20]	; (800b254 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800b23e:	687b      	ldr	r3, [r7, #4]
 800b240:	601a      	str	r2, [r3, #0]
 800b242:	687b      	ldr	r3, [r7, #4]
 800b244:	4618      	mov	r0, r3
 800b246:	f7ff ff69 	bl	800b11c <_ZN8touchgfx11ApplicationD1Ev>
 800b24a:	687b      	ldr	r3, [r7, #4]
 800b24c:	4618      	mov	r0, r3
 800b24e:	3708      	adds	r7, #8
 800b250:	46bd      	mov	sp, r7
 800b252:	bd80      	pop	{r7, pc}
 800b254:	0802e164 	.word	0x0802e164

0800b258 <_ZN8touchgfx14MVPApplicationD0Ev>:
 800b258:	b580      	push	{r7, lr}
 800b25a:	b082      	sub	sp, #8
 800b25c:	af00      	add	r7, sp, #0
 800b25e:	6078      	str	r0, [r7, #4]
 800b260:	6878      	ldr	r0, [r7, #4]
 800b262:	f7ff ffe7 	bl	800b234 <_ZN8touchgfx14MVPApplicationD1Ev>
 800b266:	f44f 71a2 	mov.w	r1, #324	; 0x144
 800b26a:	6878      	ldr	r0, [r7, #4]
 800b26c:	f01f fab7 	bl	802a7de <_ZdlPvj>
 800b270:	687b      	ldr	r3, [r7, #4]
 800b272:	4618      	mov	r0, r3
 800b274:	3708      	adds	r7, #8
 800b276:	46bd      	mov	sp, r7
 800b278:	bd80      	pop	{r7, pc}
	...

0800b27c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800b27c:	b580      	push	{r7, lr}
 800b27e:	b082      	sub	sp, #8
 800b280:	af00      	add	r7, sp, #0
 800b282:	6078      	str	r0, [r7, #4]
 800b284:	4a08      	ldr	r2, [pc, #32]	; (800b2a8 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800b286:	687b      	ldr	r3, [r7, #4]
 800b288:	601a      	str	r2, [r3, #0]
 800b28a:	687b      	ldr	r3, [r7, #4]
 800b28c:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800b290:	4618      	mov	r0, r3
 800b292:	f001 fbbb 	bl	800ca0c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800b296:	687b      	ldr	r3, [r7, #4]
 800b298:	4618      	mov	r0, r3
 800b29a:	f7ff ffcb 	bl	800b234 <_ZN8touchgfx14MVPApplicationD1Ev>
 800b29e:	687b      	ldr	r3, [r7, #4]
 800b2a0:	4618      	mov	r0, r3
 800b2a2:	3708      	adds	r7, #8
 800b2a4:	46bd      	mov	sp, r7
 800b2a6:	bd80      	pop	{r7, pc}
 800b2a8:	0802e0f8 	.word	0x0802e0f8

0800b2ac <_ZN23FrontendApplicationBaseD0Ev>:
 800b2ac:	b580      	push	{r7, lr}
 800b2ae:	b082      	sub	sp, #8
 800b2b0:	af00      	add	r7, sp, #0
 800b2b2:	6078      	str	r0, [r7, #4]
 800b2b4:	6878      	ldr	r0, [r7, #4]
 800b2b6:	f7ff ffe1 	bl	800b27c <_ZN23FrontendApplicationBaseD1Ev>
 800b2ba:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800b2be:	6878      	ldr	r0, [r7, #4]
 800b2c0:	f01f fa8d 	bl	802a7de <_ZdlPvj>
 800b2c4:	687b      	ldr	r3, [r7, #4]
 800b2c6:	4618      	mov	r0, r3
 800b2c8:	3708      	adds	r7, #8
 800b2ca:	46bd      	mov	sp, r7
 800b2cc:	bd80      	pop	{r7, pc}

0800b2ce <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 800b2ce:	b580      	push	{r7, lr}
 800b2d0:	b082      	sub	sp, #8
 800b2d2:	af00      	add	r7, sp, #0
 800b2d4:	6078      	str	r0, [r7, #4]
    {
        gotoPressureScreenScreenNoTransition();
 800b2d6:	6878      	ldr	r0, [r7, #4]
 800b2d8:	f000 f954 	bl	800b584 <_ZN23FrontendApplicationBase36gotoPressureScreenScreenNoTransitionEv>
    }
 800b2dc:	bf00      	nop
 800b2de:	3708      	adds	r7, #8
 800b2e0:	46bd      	mov	sp, r7
 800b2e2:	bd80      	pop	{r7, pc}

0800b2e4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 800b2e4:	b480      	push	{r7}
 800b2e6:	b083      	sub	sp, #12
 800b2e8:	af00      	add	r7, sp, #0
 800b2ea:	6078      	str	r0, [r7, #4]
    {
        done = true;
 800b2ec:	687b      	ldr	r3, [r7, #4]
 800b2ee:	2201      	movs	r2, #1
 800b2f0:	721a      	strb	r2, [r3, #8]
    }
 800b2f2:	bf00      	nop
 800b2f4:	370c      	adds	r7, #12
 800b2f6:	46bd      	mov	sp, r7
 800b2f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2fc:	4770      	bx	lr

0800b2fe <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 800b2fe:	b480      	push	{r7}
 800b300:	b083      	sub	sp, #12
 800b302:	af00      	add	r7, sp, #0
 800b304:	6078      	str	r0, [r7, #4]
 800b306:	6039      	str	r1, [r7, #0]
    {
        model = m;
 800b308:	687b      	ldr	r3, [r7, #4]
 800b30a:	683a      	ldr	r2, [r7, #0]
 800b30c:	605a      	str	r2, [r3, #4]
    }
 800b30e:	bf00      	nop
 800b310:	370c      	adds	r7, #12
 800b312:	46bd      	mov	sp, r7
 800b314:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b318:	4770      	bx	lr
	...

0800b31c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/coscreen_screen/COScreenView.hpp>
#include <gui/coscreen_screen/COScreenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800b31c:	b580      	push	{r7, lr}
 800b31e:	b084      	sub	sp, #16
 800b320:	af00      	add	r7, sp, #0
 800b322:	60f8      	str	r0, [r7, #12]
 800b324:	60b9      	str	r1, [r7, #8]
 800b326:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800b328:	68fb      	ldr	r3, [r7, #12]
 800b32a:	4618      	mov	r0, r3
 800b32c:	f7ff ff1a 	bl	800b164 <_ZN8touchgfx14MVPApplicationC1Ev>
 800b330:	4a16      	ldr	r2, [pc, #88]	; (800b38c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>)
 800b332:	68fb      	ldr	r3, [r7, #12]
 800b334:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800b336:	68fb      	ldr	r3, [r7, #12]
 800b338:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800b33c:	4618      	mov	r0, r3
 800b33e:	f000 fa03 	bl	800b748 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 800b342:	68fb      	ldr	r3, [r7, #12]
 800b344:	687a      	ldr	r2, [r7, #4]
 800b346:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
      model(m)
 800b34a:	68fb      	ldr	r3, [r7, #12]
 800b34c:	68ba      	ldr	r2, [r7, #8]
 800b34e:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800b352:	f7ff fe49 	bl	800afe8 <_ZN8touchgfx3HAL11getInstanceEv>
 800b356:	4603      	mov	r3, r0
 800b358:	681a      	ldr	r2, [r3, #0]
 800b35a:	3208      	adds	r2, #8
 800b35c:	6812      	ldr	r2, [r2, #0]
 800b35e:	2100      	movs	r1, #0
 800b360:	4618      	mov	r0, r3
 800b362:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 800b364:	2000      	movs	r0, #0
 800b366:	f004 fe67 	bl	8010038 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800b36a:	f7ff fe49 	bl	800b000 <_ZN8touchgfx3HAL3lcdEv>
 800b36e:	4603      	mov	r3, r0
 800b370:	4618      	mov	r0, r3
 800b372:	f017 fbb8 	bl	8022ae6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800b376:	f7ff fe43 	bl	800b000 <_ZN8touchgfx3HAL3lcdEv>
 800b37a:	4603      	mov	r3, r0
 800b37c:	4618      	mov	r0, r3
 800b37e:	f017 fc2d 	bl	8022bdc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800b382:	68fb      	ldr	r3, [r7, #12]
 800b384:	4618      	mov	r0, r3
 800b386:	3710      	adds	r7, #16
 800b388:	46bd      	mov	sp, r7
 800b38a:	bd80      	pop	{r7, pc}
 800b38c:	0802e0f8 	.word	0x0802e0f8

0800b390 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 800b390:	b480      	push	{r7}
 800b392:	b083      	sub	sp, #12
 800b394:	af00      	add	r7, sp, #0
 800b396:	6078      	str	r0, [r7, #4]
 800b398:	6039      	str	r1, [r7, #0]
 800b39a:	687b      	ldr	r3, [r7, #4]
 800b39c:	4618      	mov	r0, r3
 800b39e:	370c      	adds	r7, #12
 800b3a0:	46bd      	mov	sp, r7
 800b3a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3a6:	4770      	bx	lr

0800b3a8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800b3a8:	b580      	push	{r7, lr}
 800b3aa:	b082      	sub	sp, #8
 800b3ac:	af00      	add	r7, sp, #0
 800b3ae:	6078      	str	r0, [r7, #4]
 800b3b0:	6039      	str	r1, [r7, #0]
 800b3b2:	687b      	ldr	r3, [r7, #4]
 800b3b4:	683a      	ldr	r2, [r7, #0]
 800b3b6:	4611      	mov	r1, r2
 800b3b8:	4618      	mov	r0, r3
 800b3ba:	f7ff ffe9 	bl	800b390 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 800b3be:	683b      	ldr	r3, [r7, #0]
 800b3c0:	685a      	ldr	r2, [r3, #4]
 800b3c2:	687b      	ldr	r3, [r7, #4]
 800b3c4:	605a      	str	r2, [r3, #4]
 800b3c6:	687b      	ldr	r3, [r7, #4]
 800b3c8:	683a      	ldr	r2, [r7, #0]
 800b3ca:	3308      	adds	r3, #8
 800b3cc:	3208      	adds	r2, #8
 800b3ce:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b3d2:	e883 0003 	stmia.w	r3, {r0, r1}
 800b3d6:	687b      	ldr	r3, [r7, #4]
 800b3d8:	4618      	mov	r0, r3
 800b3da:	3708      	adds	r7, #8
 800b3dc:	46bd      	mov	sp, r7
 800b3de:	bd80      	pop	{r7, pc}

0800b3e0 <_ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionWestEv>:
 */

// MainScreen

void FrontendApplicationBase::gotoMainScreenScreenSlideTransitionWest()
{
 800b3e0:	b590      	push	{r4, r7, lr}
 800b3e2:	b089      	sub	sp, #36	; 0x24
 800b3e4:	af00      	add	r7, sp, #0
 800b3e6:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenScreenSlideTransitionWestImpl);
 800b3e8:	687b      	ldr	r3, [r7, #4]
 800b3ea:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800b3ee:	4b10      	ldr	r3, [pc, #64]	; (800b430 <_ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionWestEv+0x50>)
 800b3f0:	61bb      	str	r3, [r7, #24]
 800b3f2:	2300      	movs	r3, #0
 800b3f4:	61fb      	str	r3, [r7, #28]
 800b3f6:	f107 0008 	add.w	r0, r7, #8
 800b3fa:	f107 0318 	add.w	r3, r7, #24
 800b3fe:	cb0c      	ldmia	r3, {r2, r3}
 800b400:	6879      	ldr	r1, [r7, #4]
 800b402:	f000 f9bd 	bl	800b780 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800b406:	f107 0308 	add.w	r3, r7, #8
 800b40a:	4619      	mov	r1, r3
 800b40c:	4620      	mov	r0, r4
 800b40e:	f7ff ffcb 	bl	800b3a8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800b412:	f107 0308 	add.w	r3, r7, #8
 800b416:	4618      	mov	r0, r3
 800b418:	f001 faf8 	bl	800ca0c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800b41c:	687b      	ldr	r3, [r7, #4]
 800b41e:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800b422:	687b      	ldr	r3, [r7, #4]
 800b424:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800b428:	bf00      	nop
 800b42a:	3724      	adds	r7, #36	; 0x24
 800b42c:	46bd      	mov	sp, r7
 800b42e:	bd90      	pop	{r4, r7, pc}
 800b430:	0800b435 	.word	0x0800b435

0800b434 <_ZN23FrontendApplicationBase43gotoMainScreenScreenSlideTransitionWestImplEv>:

void FrontendApplicationBase::gotoMainScreenScreenSlideTransitionWestImpl()
{
 800b434:	b580      	push	{r7, lr}
 800b436:	b084      	sub	sp, #16
 800b438:	af02      	add	r7, sp, #8
 800b43a:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<MainScreenView, MainScreenPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800b43c:	687b      	ldr	r3, [r7, #4]
 800b43e:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800b442:	687b      	ldr	r3, [r7, #4]
 800b444:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800b448:	461a      	mov	r2, r3
 800b44a:	687b      	ldr	r3, [r7, #4]
 800b44c:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800b450:	9300      	str	r3, [sp, #0]
 800b452:	4b04      	ldr	r3, [pc, #16]	; (800b464 <_ZN23FrontendApplicationBase43gotoMainScreenScreenSlideTransitionWestImplEv+0x30>)
 800b454:	4804      	ldr	r0, [pc, #16]	; (800b468 <_ZN23FrontendApplicationBase43gotoMainScreenScreenSlideTransitionWestImplEv+0x34>)
 800b456:	f000 f9b3 	bl	800b7c0 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800b45a:	bf00      	nop
 800b45c:	3708      	adds	r7, #8
 800b45e:	46bd      	mov	sp, r7
 800b460:	bd80      	pop	{r7, pc}
 800b462:	bf00      	nop
 800b464:	20002294 	.word	0x20002294
 800b468:	20002290 	.word	0x20002290

0800b46c <_ZN23FrontendApplicationBase40gotoClockScreenScreenSlideTransitionEastEv>:

// ClockScreen

void FrontendApplicationBase::gotoClockScreenScreenSlideTransitionEast()
{
 800b46c:	b590      	push	{r4, r7, lr}
 800b46e:	b089      	sub	sp, #36	; 0x24
 800b470:	af00      	add	r7, sp, #0
 800b472:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoClockScreenScreenSlideTransitionEastImpl);
 800b474:	687b      	ldr	r3, [r7, #4]
 800b476:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800b47a:	4b10      	ldr	r3, [pc, #64]	; (800b4bc <_ZN23FrontendApplicationBase40gotoClockScreenScreenSlideTransitionEastEv+0x50>)
 800b47c:	61bb      	str	r3, [r7, #24]
 800b47e:	2300      	movs	r3, #0
 800b480:	61fb      	str	r3, [r7, #28]
 800b482:	f107 0008 	add.w	r0, r7, #8
 800b486:	f107 0318 	add.w	r3, r7, #24
 800b48a:	cb0c      	ldmia	r3, {r2, r3}
 800b48c:	6879      	ldr	r1, [r7, #4]
 800b48e:	f000 f977 	bl	800b780 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800b492:	f107 0308 	add.w	r3, r7, #8
 800b496:	4619      	mov	r1, r3
 800b498:	4620      	mov	r0, r4
 800b49a:	f7ff ff85 	bl	800b3a8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800b49e:	f107 0308 	add.w	r3, r7, #8
 800b4a2:	4618      	mov	r0, r3
 800b4a4:	f001 fab2 	bl	800ca0c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800b4a8:	687b      	ldr	r3, [r7, #4]
 800b4aa:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800b4ae:	687b      	ldr	r3, [r7, #4]
 800b4b0:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800b4b4:	bf00      	nop
 800b4b6:	3724      	adds	r7, #36	; 0x24
 800b4b8:	46bd      	mov	sp, r7
 800b4ba:	bd90      	pop	{r4, r7, pc}
 800b4bc:	0800b4c1 	.word	0x0800b4c1

0800b4c0 <_ZN23FrontendApplicationBase44gotoClockScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoClockScreenScreenSlideTransitionEastImpl()
{
 800b4c0:	b580      	push	{r7, lr}
 800b4c2:	b084      	sub	sp, #16
 800b4c4:	af02      	add	r7, sp, #8
 800b4c6:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<ClockScreenView, ClockScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800b4c8:	687b      	ldr	r3, [r7, #4]
 800b4ca:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800b4ce:	687b      	ldr	r3, [r7, #4]
 800b4d0:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800b4d4:	461a      	mov	r2, r3
 800b4d6:	687b      	ldr	r3, [r7, #4]
 800b4d8:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800b4dc:	9300      	str	r3, [sp, #0]
 800b4de:	4b04      	ldr	r3, [pc, #16]	; (800b4f0 <_ZN23FrontendApplicationBase44gotoClockScreenScreenSlideTransitionEastImplEv+0x30>)
 800b4e0:	4804      	ldr	r0, [pc, #16]	; (800b4f4 <_ZN23FrontendApplicationBase44gotoClockScreenScreenSlideTransitionEastImplEv+0x34>)
 800b4e2:	f000 fa89 	bl	800b9f8 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800b4e6:	bf00      	nop
 800b4e8:	3708      	adds	r7, #8
 800b4ea:	46bd      	mov	sp, r7
 800b4ec:	bd80      	pop	{r7, pc}
 800b4ee:	bf00      	nop
 800b4f0:	20002294 	.word	0x20002294
 800b4f4:	20002290 	.word	0x20002290

0800b4f8 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenSlideTransitionEastEv>:

// TemperatureScreen

void FrontendApplicationBase::gotoTemperatureScreenScreenSlideTransitionEast()
{
 800b4f8:	b590      	push	{r4, r7, lr}
 800b4fa:	b089      	sub	sp, #36	; 0x24
 800b4fc:	af00      	add	r7, sp, #0
 800b4fe:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoTemperatureScreenScreenSlideTransitionEastImpl);
 800b500:	687b      	ldr	r3, [r7, #4]
 800b502:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800b506:	4b10      	ldr	r3, [pc, #64]	; (800b548 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenSlideTransitionEastEv+0x50>)
 800b508:	61bb      	str	r3, [r7, #24]
 800b50a:	2300      	movs	r3, #0
 800b50c:	61fb      	str	r3, [r7, #28]
 800b50e:	f107 0008 	add.w	r0, r7, #8
 800b512:	f107 0318 	add.w	r3, r7, #24
 800b516:	cb0c      	ldmia	r3, {r2, r3}
 800b518:	6879      	ldr	r1, [r7, #4]
 800b51a:	f000 f931 	bl	800b780 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800b51e:	f107 0308 	add.w	r3, r7, #8
 800b522:	4619      	mov	r1, r3
 800b524:	4620      	mov	r0, r4
 800b526:	f7ff ff3f 	bl	800b3a8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800b52a:	f107 0308 	add.w	r3, r7, #8
 800b52e:	4618      	mov	r0, r3
 800b530:	f001 fa6c 	bl	800ca0c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800b534:	687b      	ldr	r3, [r7, #4]
 800b536:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800b53a:	687b      	ldr	r3, [r7, #4]
 800b53c:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800b540:	bf00      	nop
 800b542:	3724      	adds	r7, #36	; 0x24
 800b544:	46bd      	mov	sp, r7
 800b546:	bd90      	pop	{r4, r7, pc}
 800b548:	0800b54d 	.word	0x0800b54d

0800b54c <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoTemperatureScreenScreenSlideTransitionEastImpl()
{
 800b54c:	b580      	push	{r7, lr}
 800b54e:	b084      	sub	sp, #16
 800b550:	af02      	add	r7, sp, #8
 800b552:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<TemperatureScreenView, TemperatureScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800b554:	687b      	ldr	r3, [r7, #4]
 800b556:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800b55a:	687b      	ldr	r3, [r7, #4]
 800b55c:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800b560:	461a      	mov	r2, r3
 800b562:	687b      	ldr	r3, [r7, #4]
 800b564:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800b568:	9300      	str	r3, [sp, #0]
 800b56a:	4b04      	ldr	r3, [pc, #16]	; (800b57c <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x30>)
 800b56c:	4804      	ldr	r0, [pc, #16]	; (800b580 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x34>)
 800b56e:	f000 fb5d 	bl	800bc2c <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800b572:	bf00      	nop
 800b574:	3708      	adds	r7, #8
 800b576:	46bd      	mov	sp, r7
 800b578:	bd80      	pop	{r7, pc}
 800b57a:	bf00      	nop
 800b57c:	20002294 	.word	0x20002294
 800b580:	20002290 	.word	0x20002290

0800b584 <_ZN23FrontendApplicationBase36gotoPressureScreenScreenNoTransitionEv>:

// PressureScreen

void FrontendApplicationBase::gotoPressureScreenScreenNoTransition()
{
 800b584:	b590      	push	{r4, r7, lr}
 800b586:	b089      	sub	sp, #36	; 0x24
 800b588:	af00      	add	r7, sp, #0
 800b58a:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoPressureScreenScreenNoTransitionImpl);
 800b58c:	687b      	ldr	r3, [r7, #4]
 800b58e:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800b592:	4b10      	ldr	r3, [pc, #64]	; (800b5d4 <_ZN23FrontendApplicationBase36gotoPressureScreenScreenNoTransitionEv+0x50>)
 800b594:	61bb      	str	r3, [r7, #24]
 800b596:	2300      	movs	r3, #0
 800b598:	61fb      	str	r3, [r7, #28]
 800b59a:	f107 0008 	add.w	r0, r7, #8
 800b59e:	f107 0318 	add.w	r3, r7, #24
 800b5a2:	cb0c      	ldmia	r3, {r2, r3}
 800b5a4:	6879      	ldr	r1, [r7, #4]
 800b5a6:	f000 f8eb 	bl	800b780 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800b5aa:	f107 0308 	add.w	r3, r7, #8
 800b5ae:	4619      	mov	r1, r3
 800b5b0:	4620      	mov	r0, r4
 800b5b2:	f7ff fef9 	bl	800b3a8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800b5b6:	f107 0308 	add.w	r3, r7, #8
 800b5ba:	4618      	mov	r0, r3
 800b5bc:	f001 fa26 	bl	800ca0c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800b5c0:	687b      	ldr	r3, [r7, #4]
 800b5c2:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800b5c6:	687b      	ldr	r3, [r7, #4]
 800b5c8:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800b5cc:	bf00      	nop
 800b5ce:	3724      	adds	r7, #36	; 0x24
 800b5d0:	46bd      	mov	sp, r7
 800b5d2:	bd90      	pop	{r4, r7, pc}
 800b5d4:	0800b5d9 	.word	0x0800b5d9

0800b5d8 <_ZN23FrontendApplicationBase40gotoPressureScreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoPressureScreenScreenNoTransitionImpl()
{
 800b5d8:	b580      	push	{r7, lr}
 800b5da:	b084      	sub	sp, #16
 800b5dc:	af02      	add	r7, sp, #8
 800b5de:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<PressureScreenView, PressureScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800b5e0:	687b      	ldr	r3, [r7, #4]
 800b5e2:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800b5e6:	687b      	ldr	r3, [r7, #4]
 800b5e8:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800b5ec:	461a      	mov	r2, r3
 800b5ee:	687b      	ldr	r3, [r7, #4]
 800b5f0:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800b5f4:	9300      	str	r3, [sp, #0]
 800b5f6:	4b04      	ldr	r3, [pc, #16]	; (800b608 <_ZN23FrontendApplicationBase40gotoPressureScreenScreenNoTransitionImplEv+0x30>)
 800b5f8:	4804      	ldr	r0, [pc, #16]	; (800b60c <_ZN23FrontendApplicationBase40gotoPressureScreenScreenNoTransitionImplEv+0x34>)
 800b5fa:	f000 fc43 	bl	800be84 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800b5fe:	bf00      	nop
 800b600:	3708      	adds	r7, #8
 800b602:	46bd      	mov	sp, r7
 800b604:	bd80      	pop	{r7, pc}
 800b606:	bf00      	nop
 800b608:	20002294 	.word	0x20002294
 800b60c:	20002290 	.word	0x20002290

0800b610 <_ZN23FrontendApplicationBase43gotoPressureScreenScreenSlideTransitionEastEv>:

void FrontendApplicationBase::gotoPressureScreenScreenSlideTransitionEast()
{
 800b610:	b590      	push	{r4, r7, lr}
 800b612:	b089      	sub	sp, #36	; 0x24
 800b614:	af00      	add	r7, sp, #0
 800b616:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoPressureScreenScreenSlideTransitionEastImpl);
 800b618:	687b      	ldr	r3, [r7, #4]
 800b61a:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800b61e:	4b10      	ldr	r3, [pc, #64]	; (800b660 <_ZN23FrontendApplicationBase43gotoPressureScreenScreenSlideTransitionEastEv+0x50>)
 800b620:	61bb      	str	r3, [r7, #24]
 800b622:	2300      	movs	r3, #0
 800b624:	61fb      	str	r3, [r7, #28]
 800b626:	f107 0008 	add.w	r0, r7, #8
 800b62a:	f107 0318 	add.w	r3, r7, #24
 800b62e:	cb0c      	ldmia	r3, {r2, r3}
 800b630:	6879      	ldr	r1, [r7, #4]
 800b632:	f000 f8a5 	bl	800b780 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800b636:	f107 0308 	add.w	r3, r7, #8
 800b63a:	4619      	mov	r1, r3
 800b63c:	4620      	mov	r0, r4
 800b63e:	f7ff feb3 	bl	800b3a8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800b642:	f107 0308 	add.w	r3, r7, #8
 800b646:	4618      	mov	r0, r3
 800b648:	f001 f9e0 	bl	800ca0c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800b64c:	687b      	ldr	r3, [r7, #4]
 800b64e:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800b652:	687b      	ldr	r3, [r7, #4]
 800b654:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800b658:	bf00      	nop
 800b65a:	3724      	adds	r7, #36	; 0x24
 800b65c:	46bd      	mov	sp, r7
 800b65e:	bd90      	pop	{r4, r7, pc}
 800b660:	0800b665 	.word	0x0800b665

0800b664 <_ZN23FrontendApplicationBase47gotoPressureScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoPressureScreenScreenSlideTransitionEastImpl()
{
 800b664:	b580      	push	{r7, lr}
 800b666:	b084      	sub	sp, #16
 800b668:	af02      	add	r7, sp, #8
 800b66a:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<PressureScreenView, PressureScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800b66c:	687b      	ldr	r3, [r7, #4]
 800b66e:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800b672:	687b      	ldr	r3, [r7, #4]
 800b674:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800b678:	461a      	mov	r2, r3
 800b67a:	687b      	ldr	r3, [r7, #4]
 800b67c:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800b680:	9300      	str	r3, [sp, #0]
 800b682:	4b04      	ldr	r3, [pc, #16]	; (800b694 <_ZN23FrontendApplicationBase47gotoPressureScreenScreenSlideTransitionEastImplEv+0x30>)
 800b684:	4804      	ldr	r0, [pc, #16]	; (800b698 <_ZN23FrontendApplicationBase47gotoPressureScreenScreenSlideTransitionEastImplEv+0x34>)
 800b686:	f000 fd17 	bl	800c0b8 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800b68a:	bf00      	nop
 800b68c:	3708      	adds	r7, #8
 800b68e:	46bd      	mov	sp, r7
 800b690:	bd80      	pop	{r7, pc}
 800b692:	bf00      	nop
 800b694:	20002294 	.word	0x20002294
 800b698:	20002290 	.word	0x20002290

0800b69c <_ZN23FrontendApplicationBase37gotoCOScreenScreenSlideTransitionEastEv>:

// COScreen

void FrontendApplicationBase::gotoCOScreenScreenSlideTransitionEast()
{
 800b69c:	b590      	push	{r4, r7, lr}
 800b69e:	b089      	sub	sp, #36	; 0x24
 800b6a0:	af00      	add	r7, sp, #0
 800b6a2:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoCOScreenScreenSlideTransitionEastImpl);
 800b6a4:	687b      	ldr	r3, [r7, #4]
 800b6a6:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800b6aa:	4b10      	ldr	r3, [pc, #64]	; (800b6ec <_ZN23FrontendApplicationBase37gotoCOScreenScreenSlideTransitionEastEv+0x50>)
 800b6ac:	61bb      	str	r3, [r7, #24]
 800b6ae:	2300      	movs	r3, #0
 800b6b0:	61fb      	str	r3, [r7, #28]
 800b6b2:	f107 0008 	add.w	r0, r7, #8
 800b6b6:	f107 0318 	add.w	r3, r7, #24
 800b6ba:	cb0c      	ldmia	r3, {r2, r3}
 800b6bc:	6879      	ldr	r1, [r7, #4]
 800b6be:	f000 f85f 	bl	800b780 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800b6c2:	f107 0308 	add.w	r3, r7, #8
 800b6c6:	4619      	mov	r1, r3
 800b6c8:	4620      	mov	r0, r4
 800b6ca:	f7ff fe6d 	bl	800b3a8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800b6ce:	f107 0308 	add.w	r3, r7, #8
 800b6d2:	4618      	mov	r0, r3
 800b6d4:	f001 f99a 	bl	800ca0c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800b6d8:	687b      	ldr	r3, [r7, #4]
 800b6da:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800b6de:	687b      	ldr	r3, [r7, #4]
 800b6e0:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800b6e4:	bf00      	nop
 800b6e6:	3724      	adds	r7, #36	; 0x24
 800b6e8:	46bd      	mov	sp, r7
 800b6ea:	bd90      	pop	{r4, r7, pc}
 800b6ec:	0800b6f1 	.word	0x0800b6f1

0800b6f0 <_ZN23FrontendApplicationBase41gotoCOScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoCOScreenScreenSlideTransitionEastImpl()
{
 800b6f0:	b580      	push	{r7, lr}
 800b6f2:	b084      	sub	sp, #16
 800b6f4:	af02      	add	r7, sp, #8
 800b6f6:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<COScreenView, COScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800b6f8:	687b      	ldr	r3, [r7, #4]
 800b6fa:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800b6fe:	687b      	ldr	r3, [r7, #4]
 800b700:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800b704:	461a      	mov	r2, r3
 800b706:	687b      	ldr	r3, [r7, #4]
 800b708:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800b70c:	9300      	str	r3, [sp, #0]
 800b70e:	4b04      	ldr	r3, [pc, #16]	; (800b720 <_ZN23FrontendApplicationBase41gotoCOScreenScreenSlideTransitionEastImplEv+0x30>)
 800b710:	4804      	ldr	r0, [pc, #16]	; (800b724 <_ZN23FrontendApplicationBase41gotoCOScreenScreenSlideTransitionEastImplEv+0x34>)
 800b712:	f000 fdeb 	bl	800c2ec <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800b716:	bf00      	nop
 800b718:	3708      	adds	r7, #8
 800b71a:	46bd      	mov	sp, r7
 800b71c:	bd80      	pop	{r7, pc}
 800b71e:	bf00      	nop
 800b720:	20002294 	.word	0x20002294
 800b724:	20002290 	.word	0x20002290

0800b728 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 800b728:	b480      	push	{r7}
 800b72a:	b083      	sub	sp, #12
 800b72c:	af00      	add	r7, sp, #0
 800b72e:	6078      	str	r0, [r7, #4]
 800b730:	4a04      	ldr	r2, [pc, #16]	; (800b744 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 800b732:	687b      	ldr	r3, [r7, #4]
 800b734:	601a      	str	r2, [r3, #0]
 800b736:	687b      	ldr	r3, [r7, #4]
 800b738:	4618      	mov	r0, r3
 800b73a:	370c      	adds	r7, #12
 800b73c:	46bd      	mov	sp, r7
 800b73e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b742:	4770      	bx	lr
 800b744:	0802e1dc 	.word	0x0802e1dc

0800b748 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 800b748:	b580      	push	{r7, lr}
 800b74a:	b082      	sub	sp, #8
 800b74c:	af00      	add	r7, sp, #0
 800b74e:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 800b750:	687b      	ldr	r3, [r7, #4]
 800b752:	4618      	mov	r0, r3
 800b754:	f7ff ffe8 	bl	800b728 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800b758:	4a08      	ldr	r2, [pc, #32]	; (800b77c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 800b75a:	687b      	ldr	r3, [r7, #4]
 800b75c:	601a      	str	r2, [r3, #0]
 800b75e:	687b      	ldr	r3, [r7, #4]
 800b760:	2200      	movs	r2, #0
 800b762:	605a      	str	r2, [r3, #4]
 800b764:	687b      	ldr	r3, [r7, #4]
 800b766:	2200      	movs	r2, #0
 800b768:	609a      	str	r2, [r3, #8]
 800b76a:	687b      	ldr	r3, [r7, #4]
 800b76c:	2200      	movs	r2, #0
 800b76e:	60da      	str	r2, [r3, #12]
    {
    }
 800b770:	687b      	ldr	r3, [r7, #4]
 800b772:	4618      	mov	r0, r3
 800b774:	3708      	adds	r7, #8
 800b776:	46bd      	mov	sp, r7
 800b778:	bd80      	pop	{r7, pc}
 800b77a:	bf00      	nop
 800b77c:	0802e14c 	.word	0x0802e14c

0800b780 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 800b780:	b580      	push	{r7, lr}
 800b782:	b084      	sub	sp, #16
 800b784:	af00      	add	r7, sp, #0
 800b786:	60f8      	str	r0, [r7, #12]
 800b788:	60b9      	str	r1, [r7, #8]
 800b78a:	4639      	mov	r1, r7
 800b78c:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 800b790:	68fb      	ldr	r3, [r7, #12]
 800b792:	4618      	mov	r0, r3
 800b794:	f7ff ffc8 	bl	800b728 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800b798:	4a08      	ldr	r2, [pc, #32]	; (800b7bc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 800b79a:	68fb      	ldr	r3, [r7, #12]
 800b79c:	601a      	str	r2, [r3, #0]
 800b79e:	68fb      	ldr	r3, [r7, #12]
 800b7a0:	68ba      	ldr	r2, [r7, #8]
 800b7a2:	605a      	str	r2, [r3, #4]
 800b7a4:	68fb      	ldr	r3, [r7, #12]
 800b7a6:	3308      	adds	r3, #8
 800b7a8:	463a      	mov	r2, r7
 800b7aa:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b7ae:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800b7b2:	68fb      	ldr	r3, [r7, #12]
 800b7b4:	4618      	mov	r0, r3
 800b7b6:	3710      	adds	r7, #16
 800b7b8:	46bd      	mov	sp, r7
 800b7ba:	bd80      	pop	{r7, pc}
 800b7bc:	0802e14c 	.word	0x0802e14c

0800b7c0 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800b7c0:	b590      	push	{r4, r7, lr}
 800b7c2:	b08f      	sub	sp, #60	; 0x3c
 800b7c4:	af00      	add	r7, sp, #0
 800b7c6:	60f8      	str	r0, [r7, #12]
 800b7c8:	60b9      	str	r1, [r7, #8]
 800b7ca:	607a      	str	r2, [r7, #4]
 800b7cc:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800b7ce:	687b      	ldr	r3, [r7, #4]
 800b7d0:	689a      	ldr	r2, [r3, #8]
 800b7d2:	687b      	ldr	r3, [r7, #4]
 800b7d4:	689b      	ldr	r3, [r3, #8]
 800b7d6:	681b      	ldr	r3, [r3, #0]
 800b7d8:	3320      	adds	r3, #32
 800b7da:	681b      	ldr	r3, [r3, #0]
 800b7dc:	4610      	mov	r0, r2
 800b7de:	4798      	blx	r3
 800b7e0:	4603      	mov	r3, r0
 800b7e2:	f240 420b 	movw	r2, #1035	; 0x40b
 800b7e6:	4293      	cmp	r3, r2
 800b7e8:	d805      	bhi.n	800b7f6 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x36>
 800b7ea:	4b7e      	ldr	r3, [pc, #504]	; (800b9e4 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b7ec:	4a7e      	ldr	r2, [pc, #504]	; (800b9e8 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b7ee:	21a3      	movs	r1, #163	; 0xa3
 800b7f0:	487e      	ldr	r0, [pc, #504]	; (800b9ec <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800b7f2:	f01f fde5 	bl	802b3c0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800b7f6:	687b      	ldr	r3, [r7, #4]
 800b7f8:	685a      	ldr	r2, [r3, #4]
 800b7fa:	687b      	ldr	r3, [r7, #4]
 800b7fc:	685b      	ldr	r3, [r3, #4]
 800b7fe:	681b      	ldr	r3, [r3, #0]
 800b800:	3320      	adds	r3, #32
 800b802:	681b      	ldr	r3, [r3, #0]
 800b804:	4610      	mov	r0, r2
 800b806:	4798      	blx	r3
 800b808:	4603      	mov	r3, r0
 800b80a:	2b0f      	cmp	r3, #15
 800b80c:	d805      	bhi.n	800b81a <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5a>
 800b80e:	4b78      	ldr	r3, [pc, #480]	; (800b9f0 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800b810:	4a75      	ldr	r2, [pc, #468]	; (800b9e8 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b812:	21a4      	movs	r1, #164	; 0xa4
 800b814:	4875      	ldr	r0, [pc, #468]	; (800b9ec <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800b816:	f01f fdd3 	bl	802b3c0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800b81a:	687b      	ldr	r3, [r7, #4]
 800b81c:	68da      	ldr	r2, [r3, #12]
 800b81e:	687b      	ldr	r3, [r7, #4]
 800b820:	68db      	ldr	r3, [r3, #12]
 800b822:	681b      	ldr	r3, [r3, #0]
 800b824:	3320      	adds	r3, #32
 800b826:	681b      	ldr	r3, [r3, #0]
 800b828:	4610      	mov	r0, r2
 800b82a:	4798      	blx	r3
 800b82c:	4603      	mov	r3, r0
 800b82e:	2b3f      	cmp	r3, #63	; 0x3f
 800b830:	d805      	bhi.n	800b83e <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
 800b832:	4b70      	ldr	r3, [pc, #448]	; (800b9f4 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x234>)
 800b834:	4a6c      	ldr	r2, [pc, #432]	; (800b9e8 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b836:	21a5      	movs	r1, #165	; 0xa5
 800b838:	486c      	ldr	r0, [pc, #432]	; (800b9ec <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800b83a:	f01f fdc1 	bl	802b3c0 <__assert_func>
 800b83e:	68fb      	ldr	r3, [r7, #12]
 800b840:	62bb      	str	r3, [r7, #40]	; 0x28
 800b842:	68bb      	ldr	r3, [r7, #8]
 800b844:	627b      	str	r3, [r7, #36]	; 0x24
 800b846:	683b      	ldr	r3, [r7, #0]
 800b848:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800b84a:	f00d fd6b 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 800b84e:	4603      	mov	r3, r0
 800b850:	4618      	mov	r0, r3
 800b852:	f7ff fb9b 	bl	800af8c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800b856:	6a3b      	ldr	r3, [r7, #32]
 800b858:	681b      	ldr	r3, [r3, #0]
 800b85a:	2b00      	cmp	r3, #0
 800b85c:	d008      	beq.n	800b870 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb0>
        (*currentTrans)->tearDown();
 800b85e:	6a3b      	ldr	r3, [r7, #32]
 800b860:	681a      	ldr	r2, [r3, #0]
 800b862:	6a3b      	ldr	r3, [r7, #32]
 800b864:	681b      	ldr	r3, [r3, #0]
 800b866:	681b      	ldr	r3, [r3, #0]
 800b868:	330c      	adds	r3, #12
 800b86a:	681b      	ldr	r3, [r3, #0]
 800b86c:	4610      	mov	r0, r2
 800b86e:	4798      	blx	r3
    if (*currentTrans)
 800b870:	6a3b      	ldr	r3, [r7, #32]
 800b872:	681b      	ldr	r3, [r3, #0]
 800b874:	2b00      	cmp	r3, #0
 800b876:	d007      	beq.n	800b888 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc8>
        (*currentTrans)->~Transition();
 800b878:	6a3b      	ldr	r3, [r7, #32]
 800b87a:	681a      	ldr	r2, [r3, #0]
 800b87c:	6a3b      	ldr	r3, [r7, #32]
 800b87e:	681b      	ldr	r3, [r3, #0]
 800b880:	681b      	ldr	r3, [r3, #0]
 800b882:	681b      	ldr	r3, [r3, #0]
 800b884:	4610      	mov	r0, r2
 800b886:	4798      	blx	r3
    if (*currentScreen)
 800b888:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b88a:	681b      	ldr	r3, [r3, #0]
 800b88c:	2b00      	cmp	r3, #0
 800b88e:	d008      	beq.n	800b8a2 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe2>
        (*currentScreen)->tearDownScreen();
 800b890:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b892:	681a      	ldr	r2, [r3, #0]
 800b894:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b896:	681b      	ldr	r3, [r3, #0]
 800b898:	681b      	ldr	r3, [r3, #0]
 800b89a:	3314      	adds	r3, #20
 800b89c:	681b      	ldr	r3, [r3, #0]
 800b89e:	4610      	mov	r0, r2
 800b8a0:	4798      	blx	r3
    if (*currentPresenter)
 800b8a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b8a4:	681b      	ldr	r3, [r3, #0]
 800b8a6:	2b00      	cmp	r3, #0
 800b8a8:	d008      	beq.n	800b8bc <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfc>
        (*currentPresenter)->deactivate();
 800b8aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b8ac:	681a      	ldr	r2, [r3, #0]
 800b8ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b8b0:	681b      	ldr	r3, [r3, #0]
 800b8b2:	681b      	ldr	r3, [r3, #0]
 800b8b4:	3304      	adds	r3, #4
 800b8b6:	681b      	ldr	r3, [r3, #0]
 800b8b8:	4610      	mov	r0, r2
 800b8ba:	4798      	blx	r3
    if (*currentScreen)
 800b8bc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b8be:	681b      	ldr	r3, [r3, #0]
 800b8c0:	2b00      	cmp	r3, #0
 800b8c2:	d007      	beq.n	800b8d4 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x114>
        (*currentScreen)->~Screen();
 800b8c4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b8c6:	681a      	ldr	r2, [r3, #0]
 800b8c8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b8ca:	681b      	ldr	r3, [r3, #0]
 800b8cc:	681b      	ldr	r3, [r3, #0]
 800b8ce:	681b      	ldr	r3, [r3, #0]
 800b8d0:	4610      	mov	r0, r2
 800b8d2:	4798      	blx	r3
    if (*currentPresenter)
 800b8d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b8d6:	681b      	ldr	r3, [r3, #0]
 800b8d8:	2b00      	cmp	r3, #0
 800b8da:	d008      	beq.n	800b8ee <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12e>
        (*currentPresenter)->~Presenter();
 800b8dc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b8de:	681a      	ldr	r2, [r3, #0]
 800b8e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b8e2:	681b      	ldr	r3, [r3, #0]
 800b8e4:	681b      	ldr	r3, [r3, #0]
 800b8e6:	3308      	adds	r3, #8
 800b8e8:	681b      	ldr	r3, [r3, #0]
 800b8ea:	4610      	mov	r0, r2
 800b8ec:	4798      	blx	r3
}
 800b8ee:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800b8f0:	687b      	ldr	r3, [r7, #4]
 800b8f2:	68db      	ldr	r3, [r3, #12]
 800b8f4:	2100      	movs	r1, #0
 800b8f6:	4618      	mov	r0, r3
 800b8f8:	f000 fe12 	bl	800c520 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>
 800b8fc:	4603      	mov	r3, r0
 800b8fe:	4619      	mov	r1, r3
 800b900:	2040      	movs	r0, #64	; 0x40
 800b902:	f7ff fa94 	bl	800ae2e <_ZnwjPv>
 800b906:	4604      	mov	r4, r0
 800b908:	2114      	movs	r1, #20
 800b90a:	4620      	mov	r0, r4
 800b90c:	f000 fe3e 	bl	800c58c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
 800b910:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800b912:	687b      	ldr	r3, [r7, #4]
 800b914:	689b      	ldr	r3, [r3, #8]
 800b916:	2100      	movs	r1, #0
 800b918:	4618      	mov	r0, r3
 800b91a:	f000 fe87 	bl	800c62c <_ZN8touchgfx17AbstractPartition2atI14MainScreenViewEERT_t>
 800b91e:	4603      	mov	r3, r0
 800b920:	4619      	mov	r1, r3
 800b922:	f240 400c 	movw	r0, #1036	; 0x40c
 800b926:	f7ff fa82 	bl	800ae2e <_ZnwjPv>
 800b92a:	4604      	mov	r4, r0
 800b92c:	4620      	mov	r0, r4
 800b92e:	f004 ff91 	bl	8010854 <_ZN14MainScreenViewC1Ev>
 800b932:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800b934:	687b      	ldr	r3, [r7, #4]
 800b936:	685b      	ldr	r3, [r3, #4]
 800b938:	2100      	movs	r1, #0
 800b93a:	4618      	mov	r0, r3
 800b93c:	f000 fe89 	bl	800c652 <_ZN8touchgfx17AbstractPartition2atI19MainScreenPresenterEERT_t>
 800b940:	4603      	mov	r3, r0
 800b942:	4619      	mov	r1, r3
 800b944:	2010      	movs	r0, #16
 800b946:	f7ff fa72 	bl	800ae2e <_ZnwjPv>
 800b94a:	4604      	mov	r4, r0
 800b94c:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800b94e:	4620      	mov	r0, r4
 800b950:	f004 ff28 	bl	80107a4 <_ZN19MainScreenPresenterC1ER14MainScreenView>
 800b954:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800b956:	683b      	ldr	r3, [r7, #0]
 800b958:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800b95a:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800b95c:	68bb      	ldr	r3, [r7, #8]
 800b95e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800b960:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800b962:	68fb      	ldr	r3, [r7, #12]
 800b964:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800b966:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800b968:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b96a:	2b00      	cmp	r3, #0
 800b96c:	d002      	beq.n	800b974 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800b96e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b970:	3304      	adds	r3, #4
 800b972:	e000      	b.n	800b976 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b6>
 800b974:	2300      	movs	r3, #0
 800b976:	4619      	mov	r1, r3
 800b978:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800b97a:	f7ff fc4d 	bl	800b218 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800b97e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b980:	3304      	adds	r3, #4
 800b982:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800b984:	4618      	mov	r0, r3
 800b986:	f7ff fcba 	bl	800b2fe <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800b98a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b98c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800b98e:	4618      	mov	r0, r3
 800b990:	f000 fe72 	bl	800c678 <_ZN8touchgfx4ViewI19MainScreenPresenterE4bindERS1_>
 800b994:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b996:	61fb      	str	r3, [r7, #28]
 800b998:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b99a:	61bb      	str	r3, [r7, #24]
 800b99c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b99e:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800b9a0:	69fb      	ldr	r3, [r7, #28]
 800b9a2:	681b      	ldr	r3, [r3, #0]
 800b9a4:	330c      	adds	r3, #12
 800b9a6:	681b      	ldr	r3, [r3, #0]
 800b9a8:	69f8      	ldr	r0, [r7, #28]
 800b9aa:	4798      	blx	r3
    newPresenter->activate();
 800b9ac:	69bb      	ldr	r3, [r7, #24]
 800b9ae:	681b      	ldr	r3, [r3, #0]
 800b9b0:	681b      	ldr	r3, [r3, #0]
 800b9b2:	69b8      	ldr	r0, [r7, #24]
 800b9b4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800b9b6:	6979      	ldr	r1, [r7, #20]
 800b9b8:	69f8      	ldr	r0, [r7, #28]
 800b9ba:	f00f fa6d 	bl	801ae98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800b9be:	697b      	ldr	r3, [r7, #20]
 800b9c0:	681b      	ldr	r3, [r3, #0]
 800b9c2:	3310      	adds	r3, #16
 800b9c4:	681b      	ldr	r3, [r3, #0]
 800b9c6:	6978      	ldr	r0, [r7, #20]
 800b9c8:	4798      	blx	r3
    newTransition->invalidate();
 800b9ca:	697b      	ldr	r3, [r7, #20]
 800b9cc:	681b      	ldr	r3, [r3, #0]
 800b9ce:	3314      	adds	r3, #20
 800b9d0:	681b      	ldr	r3, [r3, #0]
 800b9d2:	6978      	ldr	r0, [r7, #20]
 800b9d4:	4798      	blx	r3
}
 800b9d6:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 800b9d8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800b9da:	4618      	mov	r0, r3
 800b9dc:	373c      	adds	r7, #60	; 0x3c
 800b9de:	46bd      	mov	sp, r7
 800b9e0:	bd90      	pop	{r4, r7, pc}
 800b9e2:	bf00      	nop
 800b9e4:	0802c538 	.word	0x0802c538
 800b9e8:	0802c5c8 	.word	0x0802c5c8
 800b9ec:	0802c6e8 	.word	0x0802c6e8
 800b9f0:	0802c72c 	.word	0x0802c72c
 800b9f4:	0802c7d0 	.word	0x0802c7d0

0800b9f8 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800b9f8:	b590      	push	{r4, r7, lr}
 800b9fa:	b08f      	sub	sp, #60	; 0x3c
 800b9fc:	af00      	add	r7, sp, #0
 800b9fe:	60f8      	str	r0, [r7, #12]
 800ba00:	60b9      	str	r1, [r7, #8]
 800ba02:	607a      	str	r2, [r7, #4]
 800ba04:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800ba06:	687b      	ldr	r3, [r7, #4]
 800ba08:	689a      	ldr	r2, [r3, #8]
 800ba0a:	687b      	ldr	r3, [r7, #4]
 800ba0c:	689b      	ldr	r3, [r3, #8]
 800ba0e:	681b      	ldr	r3, [r3, #0]
 800ba10:	3320      	adds	r3, #32
 800ba12:	681b      	ldr	r3, [r3, #0]
 800ba14:	4610      	mov	r0, r2
 800ba16:	4798      	blx	r3
 800ba18:	4603      	mov	r3, r0
 800ba1a:	f5b3 7fcc 	cmp.w	r3, #408	; 0x198
 800ba1e:	d205      	bcs.n	800ba2c <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800ba20:	4b7d      	ldr	r3, [pc, #500]	; (800bc18 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800ba22:	4a7e      	ldr	r2, [pc, #504]	; (800bc1c <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800ba24:	21a3      	movs	r1, #163	; 0xa3
 800ba26:	487e      	ldr	r0, [pc, #504]	; (800bc20 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800ba28:	f01f fcca 	bl	802b3c0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800ba2c:	687b      	ldr	r3, [r7, #4]
 800ba2e:	685a      	ldr	r2, [r3, #4]
 800ba30:	687b      	ldr	r3, [r7, #4]
 800ba32:	685b      	ldr	r3, [r3, #4]
 800ba34:	681b      	ldr	r3, [r3, #0]
 800ba36:	3320      	adds	r3, #32
 800ba38:	681b      	ldr	r3, [r3, #0]
 800ba3a:	4610      	mov	r0, r2
 800ba3c:	4798      	blx	r3
 800ba3e:	4603      	mov	r3, r0
 800ba40:	2b0f      	cmp	r3, #15
 800ba42:	d805      	bhi.n	800ba50 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800ba44:	4b77      	ldr	r3, [pc, #476]	; (800bc24 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800ba46:	4a75      	ldr	r2, [pc, #468]	; (800bc1c <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800ba48:	21a4      	movs	r1, #164	; 0xa4
 800ba4a:	4875      	ldr	r0, [pc, #468]	; (800bc20 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800ba4c:	f01f fcb8 	bl	802b3c0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800ba50:	687b      	ldr	r3, [r7, #4]
 800ba52:	68da      	ldr	r2, [r3, #12]
 800ba54:	687b      	ldr	r3, [r7, #4]
 800ba56:	68db      	ldr	r3, [r3, #12]
 800ba58:	681b      	ldr	r3, [r3, #0]
 800ba5a:	3320      	adds	r3, #32
 800ba5c:	681b      	ldr	r3, [r3, #0]
 800ba5e:	4610      	mov	r0, r2
 800ba60:	4798      	blx	r3
 800ba62:	4603      	mov	r3, r0
 800ba64:	2b3f      	cmp	r3, #63	; 0x3f
 800ba66:	d805      	bhi.n	800ba74 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800ba68:	4b6f      	ldr	r3, [pc, #444]	; (800bc28 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800ba6a:	4a6c      	ldr	r2, [pc, #432]	; (800bc1c <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800ba6c:	21a5      	movs	r1, #165	; 0xa5
 800ba6e:	486c      	ldr	r0, [pc, #432]	; (800bc20 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800ba70:	f01f fca6 	bl	802b3c0 <__assert_func>
 800ba74:	68fb      	ldr	r3, [r7, #12]
 800ba76:	62bb      	str	r3, [r7, #40]	; 0x28
 800ba78:	68bb      	ldr	r3, [r7, #8]
 800ba7a:	627b      	str	r3, [r7, #36]	; 0x24
 800ba7c:	683b      	ldr	r3, [r7, #0]
 800ba7e:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800ba80:	f00d fc50 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 800ba84:	4603      	mov	r3, r0
 800ba86:	4618      	mov	r0, r3
 800ba88:	f7ff fa80 	bl	800af8c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800ba8c:	6a3b      	ldr	r3, [r7, #32]
 800ba8e:	681b      	ldr	r3, [r3, #0]
 800ba90:	2b00      	cmp	r3, #0
 800ba92:	d008      	beq.n	800baa6 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800ba94:	6a3b      	ldr	r3, [r7, #32]
 800ba96:	681a      	ldr	r2, [r3, #0]
 800ba98:	6a3b      	ldr	r3, [r7, #32]
 800ba9a:	681b      	ldr	r3, [r3, #0]
 800ba9c:	681b      	ldr	r3, [r3, #0]
 800ba9e:	330c      	adds	r3, #12
 800baa0:	681b      	ldr	r3, [r3, #0]
 800baa2:	4610      	mov	r0, r2
 800baa4:	4798      	blx	r3
    if (*currentTrans)
 800baa6:	6a3b      	ldr	r3, [r7, #32]
 800baa8:	681b      	ldr	r3, [r3, #0]
 800baaa:	2b00      	cmp	r3, #0
 800baac:	d007      	beq.n	800babe <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800baae:	6a3b      	ldr	r3, [r7, #32]
 800bab0:	681a      	ldr	r2, [r3, #0]
 800bab2:	6a3b      	ldr	r3, [r7, #32]
 800bab4:	681b      	ldr	r3, [r3, #0]
 800bab6:	681b      	ldr	r3, [r3, #0]
 800bab8:	681b      	ldr	r3, [r3, #0]
 800baba:	4610      	mov	r0, r2
 800babc:	4798      	blx	r3
    if (*currentScreen)
 800babe:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bac0:	681b      	ldr	r3, [r3, #0]
 800bac2:	2b00      	cmp	r3, #0
 800bac4:	d008      	beq.n	800bad8 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800bac6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bac8:	681a      	ldr	r2, [r3, #0]
 800baca:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bacc:	681b      	ldr	r3, [r3, #0]
 800bace:	681b      	ldr	r3, [r3, #0]
 800bad0:	3314      	adds	r3, #20
 800bad2:	681b      	ldr	r3, [r3, #0]
 800bad4:	4610      	mov	r0, r2
 800bad6:	4798      	blx	r3
    if (*currentPresenter)
 800bad8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bada:	681b      	ldr	r3, [r3, #0]
 800badc:	2b00      	cmp	r3, #0
 800bade:	d008      	beq.n	800baf2 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800bae0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bae2:	681a      	ldr	r2, [r3, #0]
 800bae4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bae6:	681b      	ldr	r3, [r3, #0]
 800bae8:	681b      	ldr	r3, [r3, #0]
 800baea:	3304      	adds	r3, #4
 800baec:	681b      	ldr	r3, [r3, #0]
 800baee:	4610      	mov	r0, r2
 800baf0:	4798      	blx	r3
    if (*currentScreen)
 800baf2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800baf4:	681b      	ldr	r3, [r3, #0]
 800baf6:	2b00      	cmp	r3, #0
 800baf8:	d007      	beq.n	800bb0a <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800bafa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bafc:	681a      	ldr	r2, [r3, #0]
 800bafe:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bb00:	681b      	ldr	r3, [r3, #0]
 800bb02:	681b      	ldr	r3, [r3, #0]
 800bb04:	681b      	ldr	r3, [r3, #0]
 800bb06:	4610      	mov	r0, r2
 800bb08:	4798      	blx	r3
    if (*currentPresenter)
 800bb0a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bb0c:	681b      	ldr	r3, [r3, #0]
 800bb0e:	2b00      	cmp	r3, #0
 800bb10:	d008      	beq.n	800bb24 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800bb12:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bb14:	681a      	ldr	r2, [r3, #0]
 800bb16:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bb18:	681b      	ldr	r3, [r3, #0]
 800bb1a:	681b      	ldr	r3, [r3, #0]
 800bb1c:	3308      	adds	r3, #8
 800bb1e:	681b      	ldr	r3, [r3, #0]
 800bb20:	4610      	mov	r0, r2
 800bb22:	4798      	blx	r3
}
 800bb24:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800bb26:	687b      	ldr	r3, [r7, #4]
 800bb28:	68db      	ldr	r3, [r3, #12]
 800bb2a:	2100      	movs	r1, #0
 800bb2c:	4618      	mov	r0, r3
 800bb2e:	f000 fdb1 	bl	800c694 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 800bb32:	4603      	mov	r3, r0
 800bb34:	4619      	mov	r1, r3
 800bb36:	2040      	movs	r0, #64	; 0x40
 800bb38:	f7ff f979 	bl	800ae2e <_ZnwjPv>
 800bb3c:	4604      	mov	r4, r0
 800bb3e:	2114      	movs	r1, #20
 800bb40:	4620      	mov	r0, r4
 800bb42:	f000 fdbb 	bl	800c6bc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
 800bb46:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800bb48:	687b      	ldr	r3, [r7, #4]
 800bb4a:	689b      	ldr	r3, [r3, #8]
 800bb4c:	2100      	movs	r1, #0
 800bb4e:	4618      	mov	r0, r3
 800bb50:	f000 fe06 	bl	800c760 <_ZN8touchgfx17AbstractPartition2atI15ClockScreenViewEERT_t>
 800bb54:	4603      	mov	r3, r0
 800bb56:	4619      	mov	r1, r3
 800bb58:	f44f 70cc 	mov.w	r0, #408	; 0x198
 800bb5c:	f7ff f967 	bl	800ae2e <_ZnwjPv>
 800bb60:	4604      	mov	r4, r0
 800bb62:	4620      	mov	r0, r4
 800bb64:	f004 fc6c 	bl	8010440 <_ZN15ClockScreenViewC1Ev>
 800bb68:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800bb6a:	687b      	ldr	r3, [r7, #4]
 800bb6c:	685b      	ldr	r3, [r3, #4]
 800bb6e:	2100      	movs	r1, #0
 800bb70:	4618      	mov	r0, r3
 800bb72:	f000 fe08 	bl	800c786 <_ZN8touchgfx17AbstractPartition2atI20ClockScreenPresenterEERT_t>
 800bb76:	4603      	mov	r3, r0
 800bb78:	4619      	mov	r1, r3
 800bb7a:	2010      	movs	r0, #16
 800bb7c:	f7ff f957 	bl	800ae2e <_ZnwjPv>
 800bb80:	4604      	mov	r4, r0
 800bb82:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800bb84:	4620      	mov	r0, r4
 800bb86:	f004 fbe3 	bl	8010350 <_ZN20ClockScreenPresenterC1ER15ClockScreenView>
 800bb8a:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800bb8c:	683b      	ldr	r3, [r7, #0]
 800bb8e:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800bb90:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800bb92:	68bb      	ldr	r3, [r7, #8]
 800bb94:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800bb96:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800bb98:	68fb      	ldr	r3, [r7, #12]
 800bb9a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800bb9c:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800bb9e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bba0:	2b00      	cmp	r3, #0
 800bba2:	d002      	beq.n	800bbaa <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800bba4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bba6:	3304      	adds	r3, #4
 800bba8:	e000      	b.n	800bbac <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800bbaa:	2300      	movs	r3, #0
 800bbac:	4619      	mov	r1, r3
 800bbae:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800bbb0:	f7ff fb32 	bl	800b218 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800bbb4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bbb6:	3304      	adds	r3, #4
 800bbb8:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800bbba:	4618      	mov	r0, r3
 800bbbc:	f7ff fb9f 	bl	800b2fe <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800bbc0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bbc2:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800bbc4:	4618      	mov	r0, r3
 800bbc6:	f000 fdf1 	bl	800c7ac <_ZN8touchgfx4ViewI20ClockScreenPresenterE4bindERS1_>
 800bbca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bbcc:	61fb      	str	r3, [r7, #28]
 800bbce:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bbd0:	61bb      	str	r3, [r7, #24]
 800bbd2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800bbd4:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800bbd6:	69fb      	ldr	r3, [r7, #28]
 800bbd8:	681b      	ldr	r3, [r3, #0]
 800bbda:	330c      	adds	r3, #12
 800bbdc:	681b      	ldr	r3, [r3, #0]
 800bbde:	69f8      	ldr	r0, [r7, #28]
 800bbe0:	4798      	blx	r3
    newPresenter->activate();
 800bbe2:	69bb      	ldr	r3, [r7, #24]
 800bbe4:	681b      	ldr	r3, [r3, #0]
 800bbe6:	681b      	ldr	r3, [r3, #0]
 800bbe8:	69b8      	ldr	r0, [r7, #24]
 800bbea:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800bbec:	6979      	ldr	r1, [r7, #20]
 800bbee:	69f8      	ldr	r0, [r7, #28]
 800bbf0:	f00f f952 	bl	801ae98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800bbf4:	697b      	ldr	r3, [r7, #20]
 800bbf6:	681b      	ldr	r3, [r3, #0]
 800bbf8:	3310      	adds	r3, #16
 800bbfa:	681b      	ldr	r3, [r3, #0]
 800bbfc:	6978      	ldr	r0, [r7, #20]
 800bbfe:	4798      	blx	r3
    newTransition->invalidate();
 800bc00:	697b      	ldr	r3, [r7, #20]
 800bc02:	681b      	ldr	r3, [r3, #0]
 800bc04:	3314      	adds	r3, #20
 800bc06:	681b      	ldr	r3, [r3, #0]
 800bc08:	6978      	ldr	r0, [r7, #20]
 800bc0a:	4798      	blx	r3
}
 800bc0c:	bf00      	nop
    return newPresenter;
 800bc0e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800bc10:	4618      	mov	r0, r3
 800bc12:	373c      	adds	r7, #60	; 0x3c
 800bc14:	46bd      	mov	sp, r7
 800bc16:	bd90      	pop	{r4, r7, pc}
 800bc18:	0802c538 	.word	0x0802c538
 800bc1c:	0802c874 	.word	0x0802c874
 800bc20:	0802c6e8 	.word	0x0802c6e8
 800bc24:	0802c72c 	.word	0x0802c72c
 800bc28:	0802c7d0 	.word	0x0802c7d0

0800bc2c <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800bc2c:	b590      	push	{r4, r7, lr}
 800bc2e:	b08f      	sub	sp, #60	; 0x3c
 800bc30:	af00      	add	r7, sp, #0
 800bc32:	60f8      	str	r0, [r7, #12]
 800bc34:	60b9      	str	r1, [r7, #8]
 800bc36:	607a      	str	r2, [r7, #4]
 800bc38:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800bc3a:	687b      	ldr	r3, [r7, #4]
 800bc3c:	689a      	ldr	r2, [r3, #8]
 800bc3e:	687b      	ldr	r3, [r7, #4]
 800bc40:	689b      	ldr	r3, [r3, #8]
 800bc42:	681b      	ldr	r3, [r3, #0]
 800bc44:	3320      	adds	r3, #32
 800bc46:	681b      	ldr	r3, [r3, #0]
 800bc48:	4610      	mov	r0, r2
 800bc4a:	4798      	blx	r3
 800bc4c:	4603      	mov	r3, r0
 800bc4e:	f5b3 7f3d 	cmp.w	r3, #756	; 0x2f4
 800bc52:	d205      	bcs.n	800bc60 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800bc54:	4b7d      	ldr	r3, [pc, #500]	; (800be4c <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800bc56:	4a7e      	ldr	r2, [pc, #504]	; (800be50 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800bc58:	21a3      	movs	r1, #163	; 0xa3
 800bc5a:	487e      	ldr	r0, [pc, #504]	; (800be54 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800bc5c:	f01f fbb0 	bl	802b3c0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800bc60:	687b      	ldr	r3, [r7, #4]
 800bc62:	685a      	ldr	r2, [r3, #4]
 800bc64:	687b      	ldr	r3, [r7, #4]
 800bc66:	685b      	ldr	r3, [r3, #4]
 800bc68:	681b      	ldr	r3, [r3, #0]
 800bc6a:	3320      	adds	r3, #32
 800bc6c:	681b      	ldr	r3, [r3, #0]
 800bc6e:	4610      	mov	r0, r2
 800bc70:	4798      	blx	r3
 800bc72:	4603      	mov	r3, r0
 800bc74:	2b0f      	cmp	r3, #15
 800bc76:	d805      	bhi.n	800bc84 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800bc78:	4b77      	ldr	r3, [pc, #476]	; (800be58 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800bc7a:	4a75      	ldr	r2, [pc, #468]	; (800be50 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800bc7c:	21a4      	movs	r1, #164	; 0xa4
 800bc7e:	4875      	ldr	r0, [pc, #468]	; (800be54 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800bc80:	f01f fb9e 	bl	802b3c0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800bc84:	687b      	ldr	r3, [r7, #4]
 800bc86:	68da      	ldr	r2, [r3, #12]
 800bc88:	687b      	ldr	r3, [r7, #4]
 800bc8a:	68db      	ldr	r3, [r3, #12]
 800bc8c:	681b      	ldr	r3, [r3, #0]
 800bc8e:	3320      	adds	r3, #32
 800bc90:	681b      	ldr	r3, [r3, #0]
 800bc92:	4610      	mov	r0, r2
 800bc94:	4798      	blx	r3
 800bc96:	4603      	mov	r3, r0
 800bc98:	2b3f      	cmp	r3, #63	; 0x3f
 800bc9a:	d805      	bhi.n	800bca8 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800bc9c:	4b6f      	ldr	r3, [pc, #444]	; (800be5c <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800bc9e:	4a6c      	ldr	r2, [pc, #432]	; (800be50 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800bca0:	21a5      	movs	r1, #165	; 0xa5
 800bca2:	486c      	ldr	r0, [pc, #432]	; (800be54 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800bca4:	f01f fb8c 	bl	802b3c0 <__assert_func>
 800bca8:	68fb      	ldr	r3, [r7, #12]
 800bcaa:	62bb      	str	r3, [r7, #40]	; 0x28
 800bcac:	68bb      	ldr	r3, [r7, #8]
 800bcae:	627b      	str	r3, [r7, #36]	; 0x24
 800bcb0:	683b      	ldr	r3, [r7, #0]
 800bcb2:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800bcb4:	f00d fb36 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 800bcb8:	4603      	mov	r3, r0
 800bcba:	4618      	mov	r0, r3
 800bcbc:	f7ff f966 	bl	800af8c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800bcc0:	6a3b      	ldr	r3, [r7, #32]
 800bcc2:	681b      	ldr	r3, [r3, #0]
 800bcc4:	2b00      	cmp	r3, #0
 800bcc6:	d008      	beq.n	800bcda <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800bcc8:	6a3b      	ldr	r3, [r7, #32]
 800bcca:	681a      	ldr	r2, [r3, #0]
 800bccc:	6a3b      	ldr	r3, [r7, #32]
 800bcce:	681b      	ldr	r3, [r3, #0]
 800bcd0:	681b      	ldr	r3, [r3, #0]
 800bcd2:	330c      	adds	r3, #12
 800bcd4:	681b      	ldr	r3, [r3, #0]
 800bcd6:	4610      	mov	r0, r2
 800bcd8:	4798      	blx	r3
    if (*currentTrans)
 800bcda:	6a3b      	ldr	r3, [r7, #32]
 800bcdc:	681b      	ldr	r3, [r3, #0]
 800bcde:	2b00      	cmp	r3, #0
 800bce0:	d007      	beq.n	800bcf2 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800bce2:	6a3b      	ldr	r3, [r7, #32]
 800bce4:	681a      	ldr	r2, [r3, #0]
 800bce6:	6a3b      	ldr	r3, [r7, #32]
 800bce8:	681b      	ldr	r3, [r3, #0]
 800bcea:	681b      	ldr	r3, [r3, #0]
 800bcec:	681b      	ldr	r3, [r3, #0]
 800bcee:	4610      	mov	r0, r2
 800bcf0:	4798      	blx	r3
    if (*currentScreen)
 800bcf2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bcf4:	681b      	ldr	r3, [r3, #0]
 800bcf6:	2b00      	cmp	r3, #0
 800bcf8:	d008      	beq.n	800bd0c <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800bcfa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bcfc:	681a      	ldr	r2, [r3, #0]
 800bcfe:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bd00:	681b      	ldr	r3, [r3, #0]
 800bd02:	681b      	ldr	r3, [r3, #0]
 800bd04:	3314      	adds	r3, #20
 800bd06:	681b      	ldr	r3, [r3, #0]
 800bd08:	4610      	mov	r0, r2
 800bd0a:	4798      	blx	r3
    if (*currentPresenter)
 800bd0c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bd0e:	681b      	ldr	r3, [r3, #0]
 800bd10:	2b00      	cmp	r3, #0
 800bd12:	d008      	beq.n	800bd26 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800bd14:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bd16:	681a      	ldr	r2, [r3, #0]
 800bd18:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bd1a:	681b      	ldr	r3, [r3, #0]
 800bd1c:	681b      	ldr	r3, [r3, #0]
 800bd1e:	3304      	adds	r3, #4
 800bd20:	681b      	ldr	r3, [r3, #0]
 800bd22:	4610      	mov	r0, r2
 800bd24:	4798      	blx	r3
    if (*currentScreen)
 800bd26:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bd28:	681b      	ldr	r3, [r3, #0]
 800bd2a:	2b00      	cmp	r3, #0
 800bd2c:	d007      	beq.n	800bd3e <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800bd2e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bd30:	681a      	ldr	r2, [r3, #0]
 800bd32:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bd34:	681b      	ldr	r3, [r3, #0]
 800bd36:	681b      	ldr	r3, [r3, #0]
 800bd38:	681b      	ldr	r3, [r3, #0]
 800bd3a:	4610      	mov	r0, r2
 800bd3c:	4798      	blx	r3
    if (*currentPresenter)
 800bd3e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bd40:	681b      	ldr	r3, [r3, #0]
 800bd42:	2b00      	cmp	r3, #0
 800bd44:	d008      	beq.n	800bd58 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800bd46:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bd48:	681a      	ldr	r2, [r3, #0]
 800bd4a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bd4c:	681b      	ldr	r3, [r3, #0]
 800bd4e:	681b      	ldr	r3, [r3, #0]
 800bd50:	3308      	adds	r3, #8
 800bd52:	681b      	ldr	r3, [r3, #0]
 800bd54:	4610      	mov	r0, r2
 800bd56:	4798      	blx	r3
}
 800bd58:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800bd5a:	687b      	ldr	r3, [r7, #4]
 800bd5c:	68db      	ldr	r3, [r3, #12]
 800bd5e:	2100      	movs	r1, #0
 800bd60:	4618      	mov	r0, r3
 800bd62:	f000 fc97 	bl	800c694 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 800bd66:	4603      	mov	r3, r0
 800bd68:	4619      	mov	r1, r3
 800bd6a:	2040      	movs	r0, #64	; 0x40
 800bd6c:	f7ff f85f 	bl	800ae2e <_ZnwjPv>
 800bd70:	4604      	mov	r4, r0
 800bd72:	2114      	movs	r1, #20
 800bd74:	4620      	mov	r0, r4
 800bd76:	f000 fca1 	bl	800c6bc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
 800bd7a:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800bd7c:	687b      	ldr	r3, [r7, #4]
 800bd7e:	689b      	ldr	r3, [r3, #8]
 800bd80:	2100      	movs	r1, #0
 800bd82:	4618      	mov	r0, r3
 800bd84:	f000 fd20 	bl	800c7c8 <_ZN8touchgfx17AbstractPartition2atI21TemperatureScreenViewEERT_t>
 800bd88:	4603      	mov	r3, r0
 800bd8a:	4619      	mov	r1, r3
 800bd8c:	f44f 703d 	mov.w	r0, #756	; 0x2f4
 800bd90:	f7ff f84d 	bl	800ae2e <_ZnwjPv>
 800bd94:	4604      	mov	r4, r0
 800bd96:	4620      	mov	r0, r4
 800bd98:	f004 ff7c 	bl	8010c94 <_ZN21TemperatureScreenViewC1Ev>
 800bd9c:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800bd9e:	687b      	ldr	r3, [r7, #4]
 800bda0:	685b      	ldr	r3, [r3, #4]
 800bda2:	2100      	movs	r1, #0
 800bda4:	4618      	mov	r0, r3
 800bda6:	f000 fd22 	bl	800c7ee <_ZN8touchgfx17AbstractPartition2atI26TemperatureScreenPresenterEERT_t>
 800bdaa:	4603      	mov	r3, r0
 800bdac:	4619      	mov	r1, r3
 800bdae:	2010      	movs	r0, #16
 800bdb0:	f7ff f83d 	bl	800ae2e <_ZnwjPv>
 800bdb4:	4604      	mov	r4, r0
 800bdb6:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800bdb8:	4620      	mov	r0, r4
 800bdba:	f004 fefb 	bl	8010bb4 <_ZN26TemperatureScreenPresenterC1ER21TemperatureScreenView>
 800bdbe:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800bdc0:	683b      	ldr	r3, [r7, #0]
 800bdc2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800bdc4:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800bdc6:	68bb      	ldr	r3, [r7, #8]
 800bdc8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800bdca:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800bdcc:	68fb      	ldr	r3, [r7, #12]
 800bdce:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800bdd0:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800bdd2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bdd4:	2b00      	cmp	r3, #0
 800bdd6:	d002      	beq.n	800bdde <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800bdd8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bdda:	3304      	adds	r3, #4
 800bddc:	e000      	b.n	800bde0 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800bdde:	2300      	movs	r3, #0
 800bde0:	4619      	mov	r1, r3
 800bde2:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800bde4:	f7ff fa18 	bl	800b218 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800bde8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bdea:	3304      	adds	r3, #4
 800bdec:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800bdee:	4618      	mov	r0, r3
 800bdf0:	f7ff fa85 	bl	800b2fe <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800bdf4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bdf6:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800bdf8:	4618      	mov	r0, r3
 800bdfa:	f000 fd0b 	bl	800c814 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterE4bindERS1_>
 800bdfe:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800be00:	61fb      	str	r3, [r7, #28]
 800be02:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800be04:	61bb      	str	r3, [r7, #24]
 800be06:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800be08:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800be0a:	69fb      	ldr	r3, [r7, #28]
 800be0c:	681b      	ldr	r3, [r3, #0]
 800be0e:	330c      	adds	r3, #12
 800be10:	681b      	ldr	r3, [r3, #0]
 800be12:	69f8      	ldr	r0, [r7, #28]
 800be14:	4798      	blx	r3
    newPresenter->activate();
 800be16:	69bb      	ldr	r3, [r7, #24]
 800be18:	681b      	ldr	r3, [r3, #0]
 800be1a:	681b      	ldr	r3, [r3, #0]
 800be1c:	69b8      	ldr	r0, [r7, #24]
 800be1e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800be20:	6979      	ldr	r1, [r7, #20]
 800be22:	69f8      	ldr	r0, [r7, #28]
 800be24:	f00f f838 	bl	801ae98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800be28:	697b      	ldr	r3, [r7, #20]
 800be2a:	681b      	ldr	r3, [r3, #0]
 800be2c:	3310      	adds	r3, #16
 800be2e:	681b      	ldr	r3, [r3, #0]
 800be30:	6978      	ldr	r0, [r7, #20]
 800be32:	4798      	blx	r3
    newTransition->invalidate();
 800be34:	697b      	ldr	r3, [r7, #20]
 800be36:	681b      	ldr	r3, [r3, #0]
 800be38:	3314      	adds	r3, #20
 800be3a:	681b      	ldr	r3, [r3, #0]
 800be3c:	6978      	ldr	r0, [r7, #20]
 800be3e:	4798      	blx	r3
}
 800be40:	bf00      	nop
    return newPresenter;
 800be42:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800be44:	4618      	mov	r0, r3
 800be46:	373c      	adds	r7, #60	; 0x3c
 800be48:	46bd      	mov	sp, r7
 800be4a:	bd90      	pop	{r4, r7, pc}
 800be4c:	0802c538 	.word	0x0802c538
 800be50:	0802c994 	.word	0x0802c994
 800be54:	0802c6e8 	.word	0x0802c6e8
 800be58:	0802c72c 	.word	0x0802c72c
 800be5c:	0802c7d0 	.word	0x0802c7d0

0800be60 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 800be60:	b580      	push	{r7, lr}
 800be62:	b082      	sub	sp, #8
 800be64:	af00      	add	r7, sp, #0
 800be66:	6078      	str	r0, [r7, #4]
 800be68:	687b      	ldr	r3, [r7, #4]
 800be6a:	4618      	mov	r0, r3
 800be6c:	f7ff f8e4 	bl	800b038 <_ZN8touchgfx10TransitionC1Ev>
 800be70:	4a03      	ldr	r2, [pc, #12]	; (800be80 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 800be72:	687b      	ldr	r3, [r7, #4]
 800be74:	601a      	str	r2, [r3, #0]
 800be76:	687b      	ldr	r3, [r7, #4]
 800be78:	4618      	mov	r0, r3
 800be7a:	3708      	adds	r7, #8
 800be7c:	46bd      	mov	sp, r7
 800be7e:	bd80      	pop	{r7, pc}
 800be80:	0802e0d4 	.word	0x0802e0d4

0800be84 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800be84:	b590      	push	{r4, r7, lr}
 800be86:	b08f      	sub	sp, #60	; 0x3c
 800be88:	af00      	add	r7, sp, #0
 800be8a:	60f8      	str	r0, [r7, #12]
 800be8c:	60b9      	str	r1, [r7, #8]
 800be8e:	607a      	str	r2, [r7, #4]
 800be90:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800be92:	687b      	ldr	r3, [r7, #4]
 800be94:	689a      	ldr	r2, [r3, #8]
 800be96:	687b      	ldr	r3, [r7, #4]
 800be98:	689b      	ldr	r3, [r3, #8]
 800be9a:	681b      	ldr	r3, [r3, #0]
 800be9c:	3320      	adds	r3, #32
 800be9e:	681b      	ldr	r3, [r3, #0]
 800bea0:	4610      	mov	r0, r2
 800bea2:	4798      	blx	r3
 800bea4:	4603      	mov	r3, r0
 800bea6:	f5b3 7f3f 	cmp.w	r3, #764	; 0x2fc
 800beaa:	d205      	bcs.n	800beb8 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800beac:	4b7d      	ldr	r3, [pc, #500]	; (800c0a4 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800beae:	4a7e      	ldr	r2, [pc, #504]	; (800c0a8 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800beb0:	21a3      	movs	r1, #163	; 0xa3
 800beb2:	487e      	ldr	r0, [pc, #504]	; (800c0ac <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800beb4:	f01f fa84 	bl	802b3c0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800beb8:	687b      	ldr	r3, [r7, #4]
 800beba:	685a      	ldr	r2, [r3, #4]
 800bebc:	687b      	ldr	r3, [r7, #4]
 800bebe:	685b      	ldr	r3, [r3, #4]
 800bec0:	681b      	ldr	r3, [r3, #0]
 800bec2:	3320      	adds	r3, #32
 800bec4:	681b      	ldr	r3, [r3, #0]
 800bec6:	4610      	mov	r0, r2
 800bec8:	4798      	blx	r3
 800beca:	4603      	mov	r3, r0
 800becc:	2b0f      	cmp	r3, #15
 800bece:	d805      	bhi.n	800bedc <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800bed0:	4b77      	ldr	r3, [pc, #476]	; (800c0b0 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800bed2:	4a75      	ldr	r2, [pc, #468]	; (800c0a8 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800bed4:	21a4      	movs	r1, #164	; 0xa4
 800bed6:	4875      	ldr	r0, [pc, #468]	; (800c0ac <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800bed8:	f01f fa72 	bl	802b3c0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800bedc:	687b      	ldr	r3, [r7, #4]
 800bede:	68da      	ldr	r2, [r3, #12]
 800bee0:	687b      	ldr	r3, [r7, #4]
 800bee2:	68db      	ldr	r3, [r3, #12]
 800bee4:	681b      	ldr	r3, [r3, #0]
 800bee6:	3320      	adds	r3, #32
 800bee8:	681b      	ldr	r3, [r3, #0]
 800beea:	4610      	mov	r0, r2
 800beec:	4798      	blx	r3
 800beee:	4603      	mov	r3, r0
 800bef0:	2b0b      	cmp	r3, #11
 800bef2:	d805      	bhi.n	800bf00 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800bef4:	4b6f      	ldr	r3, [pc, #444]	; (800c0b4 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800bef6:	4a6c      	ldr	r2, [pc, #432]	; (800c0a8 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800bef8:	21a5      	movs	r1, #165	; 0xa5
 800befa:	486c      	ldr	r0, [pc, #432]	; (800c0ac <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800befc:	f01f fa60 	bl	802b3c0 <__assert_func>
 800bf00:	68fb      	ldr	r3, [r7, #12]
 800bf02:	62bb      	str	r3, [r7, #40]	; 0x28
 800bf04:	68bb      	ldr	r3, [r7, #8]
 800bf06:	627b      	str	r3, [r7, #36]	; 0x24
 800bf08:	683b      	ldr	r3, [r7, #0]
 800bf0a:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800bf0c:	f00d fa0a 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 800bf10:	4603      	mov	r3, r0
 800bf12:	4618      	mov	r0, r3
 800bf14:	f7ff f83a 	bl	800af8c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800bf18:	6a3b      	ldr	r3, [r7, #32]
 800bf1a:	681b      	ldr	r3, [r3, #0]
 800bf1c:	2b00      	cmp	r3, #0
 800bf1e:	d008      	beq.n	800bf32 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800bf20:	6a3b      	ldr	r3, [r7, #32]
 800bf22:	681a      	ldr	r2, [r3, #0]
 800bf24:	6a3b      	ldr	r3, [r7, #32]
 800bf26:	681b      	ldr	r3, [r3, #0]
 800bf28:	681b      	ldr	r3, [r3, #0]
 800bf2a:	330c      	adds	r3, #12
 800bf2c:	681b      	ldr	r3, [r3, #0]
 800bf2e:	4610      	mov	r0, r2
 800bf30:	4798      	blx	r3
    if (*currentTrans)
 800bf32:	6a3b      	ldr	r3, [r7, #32]
 800bf34:	681b      	ldr	r3, [r3, #0]
 800bf36:	2b00      	cmp	r3, #0
 800bf38:	d007      	beq.n	800bf4a <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800bf3a:	6a3b      	ldr	r3, [r7, #32]
 800bf3c:	681a      	ldr	r2, [r3, #0]
 800bf3e:	6a3b      	ldr	r3, [r7, #32]
 800bf40:	681b      	ldr	r3, [r3, #0]
 800bf42:	681b      	ldr	r3, [r3, #0]
 800bf44:	681b      	ldr	r3, [r3, #0]
 800bf46:	4610      	mov	r0, r2
 800bf48:	4798      	blx	r3
    if (*currentScreen)
 800bf4a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bf4c:	681b      	ldr	r3, [r3, #0]
 800bf4e:	2b00      	cmp	r3, #0
 800bf50:	d008      	beq.n	800bf64 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800bf52:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bf54:	681a      	ldr	r2, [r3, #0]
 800bf56:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bf58:	681b      	ldr	r3, [r3, #0]
 800bf5a:	681b      	ldr	r3, [r3, #0]
 800bf5c:	3314      	adds	r3, #20
 800bf5e:	681b      	ldr	r3, [r3, #0]
 800bf60:	4610      	mov	r0, r2
 800bf62:	4798      	blx	r3
    if (*currentPresenter)
 800bf64:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bf66:	681b      	ldr	r3, [r3, #0]
 800bf68:	2b00      	cmp	r3, #0
 800bf6a:	d008      	beq.n	800bf7e <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800bf6c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bf6e:	681a      	ldr	r2, [r3, #0]
 800bf70:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bf72:	681b      	ldr	r3, [r3, #0]
 800bf74:	681b      	ldr	r3, [r3, #0]
 800bf76:	3304      	adds	r3, #4
 800bf78:	681b      	ldr	r3, [r3, #0]
 800bf7a:	4610      	mov	r0, r2
 800bf7c:	4798      	blx	r3
    if (*currentScreen)
 800bf7e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bf80:	681b      	ldr	r3, [r3, #0]
 800bf82:	2b00      	cmp	r3, #0
 800bf84:	d007      	beq.n	800bf96 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800bf86:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bf88:	681a      	ldr	r2, [r3, #0]
 800bf8a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bf8c:	681b      	ldr	r3, [r3, #0]
 800bf8e:	681b      	ldr	r3, [r3, #0]
 800bf90:	681b      	ldr	r3, [r3, #0]
 800bf92:	4610      	mov	r0, r2
 800bf94:	4798      	blx	r3
    if (*currentPresenter)
 800bf96:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bf98:	681b      	ldr	r3, [r3, #0]
 800bf9a:	2b00      	cmp	r3, #0
 800bf9c:	d008      	beq.n	800bfb0 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800bf9e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bfa0:	681a      	ldr	r2, [r3, #0]
 800bfa2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bfa4:	681b      	ldr	r3, [r3, #0]
 800bfa6:	681b      	ldr	r3, [r3, #0]
 800bfa8:	3308      	adds	r3, #8
 800bfaa:	681b      	ldr	r3, [r3, #0]
 800bfac:	4610      	mov	r0, r2
 800bfae:	4798      	blx	r3
}
 800bfb0:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800bfb2:	687b      	ldr	r3, [r7, #4]
 800bfb4:	68db      	ldr	r3, [r3, #12]
 800bfb6:	2100      	movs	r1, #0
 800bfb8:	4618      	mov	r0, r3
 800bfba:	f000 fc39 	bl	800c830 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800bfbe:	4603      	mov	r3, r0
 800bfc0:	4619      	mov	r1, r3
 800bfc2:	200c      	movs	r0, #12
 800bfc4:	f7fe ff33 	bl	800ae2e <_ZnwjPv>
 800bfc8:	4604      	mov	r4, r0
 800bfca:	4620      	mov	r0, r4
 800bfcc:	f7ff ff48 	bl	800be60 <_ZN8touchgfx12NoTransitionC1Ev>
 800bfd0:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800bfd2:	687b      	ldr	r3, [r7, #4]
 800bfd4:	689b      	ldr	r3, [r3, #8]
 800bfd6:	2100      	movs	r1, #0
 800bfd8:	4618      	mov	r0, r3
 800bfda:	f000 fc3c 	bl	800c856 <_ZN8touchgfx17AbstractPartition2atI18PressureScreenViewEERT_t>
 800bfde:	4603      	mov	r3, r0
 800bfe0:	4619      	mov	r1, r3
 800bfe2:	f44f 703f 	mov.w	r0, #764	; 0x2fc
 800bfe6:	f7fe ff22 	bl	800ae2e <_ZnwjPv>
 800bfea:	4604      	mov	r4, r0
 800bfec:	4620      	mov	r0, r4
 800bfee:	f004 fd63 	bl	8010ab8 <_ZN18PressureScreenViewC1Ev>
 800bff2:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800bff4:	687b      	ldr	r3, [r7, #4]
 800bff6:	685b      	ldr	r3, [r3, #4]
 800bff8:	2100      	movs	r1, #0
 800bffa:	4618      	mov	r0, r3
 800bffc:	f000 fc3e 	bl	800c87c <_ZN8touchgfx17AbstractPartition2atI23PressureScreenPresenterEERT_t>
 800c000:	4603      	mov	r3, r0
 800c002:	4619      	mov	r1, r3
 800c004:	2010      	movs	r0, #16
 800c006:	f7fe ff12 	bl	800ae2e <_ZnwjPv>
 800c00a:	4604      	mov	r4, r0
 800c00c:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800c00e:	4620      	mov	r0, r4
 800c010:	f004 fce2 	bl	80109d8 <_ZN23PressureScreenPresenterC1ER18PressureScreenView>
 800c014:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800c016:	683b      	ldr	r3, [r7, #0]
 800c018:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800c01a:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800c01c:	68bb      	ldr	r3, [r7, #8]
 800c01e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800c020:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800c022:	68fb      	ldr	r3, [r7, #12]
 800c024:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800c026:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800c028:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c02a:	2b00      	cmp	r3, #0
 800c02c:	d002      	beq.n	800c034 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 800c02e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c030:	3304      	adds	r3, #4
 800c032:	e000      	b.n	800c036 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800c034:	2300      	movs	r3, #0
 800c036:	4619      	mov	r1, r3
 800c038:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800c03a:	f7ff f8ed 	bl	800b218 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800c03e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c040:	3304      	adds	r3, #4
 800c042:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800c044:	4618      	mov	r0, r3
 800c046:	f7ff f95a 	bl	800b2fe <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800c04a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c04c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800c04e:	4618      	mov	r0, r3
 800c050:	f000 fc27 	bl	800c8a2 <_ZN8touchgfx4ViewI23PressureScreenPresenterE4bindERS1_>
 800c054:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c056:	61fb      	str	r3, [r7, #28]
 800c058:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c05a:	61bb      	str	r3, [r7, #24]
 800c05c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c05e:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800c060:	69fb      	ldr	r3, [r7, #28]
 800c062:	681b      	ldr	r3, [r3, #0]
 800c064:	330c      	adds	r3, #12
 800c066:	681b      	ldr	r3, [r3, #0]
 800c068:	69f8      	ldr	r0, [r7, #28]
 800c06a:	4798      	blx	r3
    newPresenter->activate();
 800c06c:	69bb      	ldr	r3, [r7, #24]
 800c06e:	681b      	ldr	r3, [r3, #0]
 800c070:	681b      	ldr	r3, [r3, #0]
 800c072:	69b8      	ldr	r0, [r7, #24]
 800c074:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800c076:	6979      	ldr	r1, [r7, #20]
 800c078:	69f8      	ldr	r0, [r7, #28]
 800c07a:	f00e ff0d 	bl	801ae98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800c07e:	697b      	ldr	r3, [r7, #20]
 800c080:	681b      	ldr	r3, [r3, #0]
 800c082:	3310      	adds	r3, #16
 800c084:	681b      	ldr	r3, [r3, #0]
 800c086:	6978      	ldr	r0, [r7, #20]
 800c088:	4798      	blx	r3
    newTransition->invalidate();
 800c08a:	697b      	ldr	r3, [r7, #20]
 800c08c:	681b      	ldr	r3, [r3, #0]
 800c08e:	3314      	adds	r3, #20
 800c090:	681b      	ldr	r3, [r3, #0]
 800c092:	6978      	ldr	r0, [r7, #20]
 800c094:	4798      	blx	r3
}
 800c096:	bf00      	nop
    return newPresenter;
 800c098:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800c09a:	4618      	mov	r0, r3
 800c09c:	373c      	adds	r7, #60	; 0x3c
 800c09e:	46bd      	mov	sp, r7
 800c0a0:	bd90      	pop	{r4, r7, pc}
 800c0a2:	bf00      	nop
 800c0a4:	0802c538 	.word	0x0802c538
 800c0a8:	0802cac0 	.word	0x0802cac0
 800c0ac:	0802c6e8 	.word	0x0802c6e8
 800c0b0:	0802c72c 	.word	0x0802c72c
 800c0b4:	0802c7d0 	.word	0x0802c7d0

0800c0b8 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800c0b8:	b590      	push	{r4, r7, lr}
 800c0ba:	b08f      	sub	sp, #60	; 0x3c
 800c0bc:	af00      	add	r7, sp, #0
 800c0be:	60f8      	str	r0, [r7, #12]
 800c0c0:	60b9      	str	r1, [r7, #8]
 800c0c2:	607a      	str	r2, [r7, #4]
 800c0c4:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800c0c6:	687b      	ldr	r3, [r7, #4]
 800c0c8:	689a      	ldr	r2, [r3, #8]
 800c0ca:	687b      	ldr	r3, [r7, #4]
 800c0cc:	689b      	ldr	r3, [r3, #8]
 800c0ce:	681b      	ldr	r3, [r3, #0]
 800c0d0:	3320      	adds	r3, #32
 800c0d2:	681b      	ldr	r3, [r3, #0]
 800c0d4:	4610      	mov	r0, r2
 800c0d6:	4798      	blx	r3
 800c0d8:	4603      	mov	r3, r0
 800c0da:	f5b3 7f3f 	cmp.w	r3, #764	; 0x2fc
 800c0de:	d205      	bcs.n	800c0ec <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800c0e0:	4b7d      	ldr	r3, [pc, #500]	; (800c2d8 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800c0e2:	4a7e      	ldr	r2, [pc, #504]	; (800c2dc <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c0e4:	21a3      	movs	r1, #163	; 0xa3
 800c0e6:	487e      	ldr	r0, [pc, #504]	; (800c2e0 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c0e8:	f01f f96a 	bl	802b3c0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800c0ec:	687b      	ldr	r3, [r7, #4]
 800c0ee:	685a      	ldr	r2, [r3, #4]
 800c0f0:	687b      	ldr	r3, [r7, #4]
 800c0f2:	685b      	ldr	r3, [r3, #4]
 800c0f4:	681b      	ldr	r3, [r3, #0]
 800c0f6:	3320      	adds	r3, #32
 800c0f8:	681b      	ldr	r3, [r3, #0]
 800c0fa:	4610      	mov	r0, r2
 800c0fc:	4798      	blx	r3
 800c0fe:	4603      	mov	r3, r0
 800c100:	2b0f      	cmp	r3, #15
 800c102:	d805      	bhi.n	800c110 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800c104:	4b77      	ldr	r3, [pc, #476]	; (800c2e4 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800c106:	4a75      	ldr	r2, [pc, #468]	; (800c2dc <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c108:	21a4      	movs	r1, #164	; 0xa4
 800c10a:	4875      	ldr	r0, [pc, #468]	; (800c2e0 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c10c:	f01f f958 	bl	802b3c0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800c110:	687b      	ldr	r3, [r7, #4]
 800c112:	68da      	ldr	r2, [r3, #12]
 800c114:	687b      	ldr	r3, [r7, #4]
 800c116:	68db      	ldr	r3, [r3, #12]
 800c118:	681b      	ldr	r3, [r3, #0]
 800c11a:	3320      	adds	r3, #32
 800c11c:	681b      	ldr	r3, [r3, #0]
 800c11e:	4610      	mov	r0, r2
 800c120:	4798      	blx	r3
 800c122:	4603      	mov	r3, r0
 800c124:	2b3f      	cmp	r3, #63	; 0x3f
 800c126:	d805      	bhi.n	800c134 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800c128:	4b6f      	ldr	r3, [pc, #444]	; (800c2e8 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800c12a:	4a6c      	ldr	r2, [pc, #432]	; (800c2dc <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c12c:	21a5      	movs	r1, #165	; 0xa5
 800c12e:	486c      	ldr	r0, [pc, #432]	; (800c2e0 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c130:	f01f f946 	bl	802b3c0 <__assert_func>
 800c134:	68fb      	ldr	r3, [r7, #12]
 800c136:	62bb      	str	r3, [r7, #40]	; 0x28
 800c138:	68bb      	ldr	r3, [r7, #8]
 800c13a:	627b      	str	r3, [r7, #36]	; 0x24
 800c13c:	683b      	ldr	r3, [r7, #0]
 800c13e:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800c140:	f00d f8f0 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 800c144:	4603      	mov	r3, r0
 800c146:	4618      	mov	r0, r3
 800c148:	f7fe ff20 	bl	800af8c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800c14c:	6a3b      	ldr	r3, [r7, #32]
 800c14e:	681b      	ldr	r3, [r3, #0]
 800c150:	2b00      	cmp	r3, #0
 800c152:	d008      	beq.n	800c166 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800c154:	6a3b      	ldr	r3, [r7, #32]
 800c156:	681a      	ldr	r2, [r3, #0]
 800c158:	6a3b      	ldr	r3, [r7, #32]
 800c15a:	681b      	ldr	r3, [r3, #0]
 800c15c:	681b      	ldr	r3, [r3, #0]
 800c15e:	330c      	adds	r3, #12
 800c160:	681b      	ldr	r3, [r3, #0]
 800c162:	4610      	mov	r0, r2
 800c164:	4798      	blx	r3
    if (*currentTrans)
 800c166:	6a3b      	ldr	r3, [r7, #32]
 800c168:	681b      	ldr	r3, [r3, #0]
 800c16a:	2b00      	cmp	r3, #0
 800c16c:	d007      	beq.n	800c17e <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800c16e:	6a3b      	ldr	r3, [r7, #32]
 800c170:	681a      	ldr	r2, [r3, #0]
 800c172:	6a3b      	ldr	r3, [r7, #32]
 800c174:	681b      	ldr	r3, [r3, #0]
 800c176:	681b      	ldr	r3, [r3, #0]
 800c178:	681b      	ldr	r3, [r3, #0]
 800c17a:	4610      	mov	r0, r2
 800c17c:	4798      	blx	r3
    if (*currentScreen)
 800c17e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c180:	681b      	ldr	r3, [r3, #0]
 800c182:	2b00      	cmp	r3, #0
 800c184:	d008      	beq.n	800c198 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800c186:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c188:	681a      	ldr	r2, [r3, #0]
 800c18a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c18c:	681b      	ldr	r3, [r3, #0]
 800c18e:	681b      	ldr	r3, [r3, #0]
 800c190:	3314      	adds	r3, #20
 800c192:	681b      	ldr	r3, [r3, #0]
 800c194:	4610      	mov	r0, r2
 800c196:	4798      	blx	r3
    if (*currentPresenter)
 800c198:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c19a:	681b      	ldr	r3, [r3, #0]
 800c19c:	2b00      	cmp	r3, #0
 800c19e:	d008      	beq.n	800c1b2 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800c1a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c1a2:	681a      	ldr	r2, [r3, #0]
 800c1a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c1a6:	681b      	ldr	r3, [r3, #0]
 800c1a8:	681b      	ldr	r3, [r3, #0]
 800c1aa:	3304      	adds	r3, #4
 800c1ac:	681b      	ldr	r3, [r3, #0]
 800c1ae:	4610      	mov	r0, r2
 800c1b0:	4798      	blx	r3
    if (*currentScreen)
 800c1b2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c1b4:	681b      	ldr	r3, [r3, #0]
 800c1b6:	2b00      	cmp	r3, #0
 800c1b8:	d007      	beq.n	800c1ca <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800c1ba:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c1bc:	681a      	ldr	r2, [r3, #0]
 800c1be:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c1c0:	681b      	ldr	r3, [r3, #0]
 800c1c2:	681b      	ldr	r3, [r3, #0]
 800c1c4:	681b      	ldr	r3, [r3, #0]
 800c1c6:	4610      	mov	r0, r2
 800c1c8:	4798      	blx	r3
    if (*currentPresenter)
 800c1ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c1cc:	681b      	ldr	r3, [r3, #0]
 800c1ce:	2b00      	cmp	r3, #0
 800c1d0:	d008      	beq.n	800c1e4 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800c1d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c1d4:	681a      	ldr	r2, [r3, #0]
 800c1d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c1d8:	681b      	ldr	r3, [r3, #0]
 800c1da:	681b      	ldr	r3, [r3, #0]
 800c1dc:	3308      	adds	r3, #8
 800c1de:	681b      	ldr	r3, [r3, #0]
 800c1e0:	4610      	mov	r0, r2
 800c1e2:	4798      	blx	r3
}
 800c1e4:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800c1e6:	687b      	ldr	r3, [r7, #4]
 800c1e8:	68db      	ldr	r3, [r3, #12]
 800c1ea:	2100      	movs	r1, #0
 800c1ec:	4618      	mov	r0, r3
 800c1ee:	f000 fa51 	bl	800c694 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 800c1f2:	4603      	mov	r3, r0
 800c1f4:	4619      	mov	r1, r3
 800c1f6:	2040      	movs	r0, #64	; 0x40
 800c1f8:	f7fe fe19 	bl	800ae2e <_ZnwjPv>
 800c1fc:	4604      	mov	r4, r0
 800c1fe:	2114      	movs	r1, #20
 800c200:	4620      	mov	r0, r4
 800c202:	f000 fa5b 	bl	800c6bc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
 800c206:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800c208:	687b      	ldr	r3, [r7, #4]
 800c20a:	689b      	ldr	r3, [r3, #8]
 800c20c:	2100      	movs	r1, #0
 800c20e:	4618      	mov	r0, r3
 800c210:	f000 fb21 	bl	800c856 <_ZN8touchgfx17AbstractPartition2atI18PressureScreenViewEERT_t>
 800c214:	4603      	mov	r3, r0
 800c216:	4619      	mov	r1, r3
 800c218:	f44f 703f 	mov.w	r0, #764	; 0x2fc
 800c21c:	f7fe fe07 	bl	800ae2e <_ZnwjPv>
 800c220:	4604      	mov	r4, r0
 800c222:	4620      	mov	r0, r4
 800c224:	f004 fc48 	bl	8010ab8 <_ZN18PressureScreenViewC1Ev>
 800c228:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800c22a:	687b      	ldr	r3, [r7, #4]
 800c22c:	685b      	ldr	r3, [r3, #4]
 800c22e:	2100      	movs	r1, #0
 800c230:	4618      	mov	r0, r3
 800c232:	f000 fb23 	bl	800c87c <_ZN8touchgfx17AbstractPartition2atI23PressureScreenPresenterEERT_t>
 800c236:	4603      	mov	r3, r0
 800c238:	4619      	mov	r1, r3
 800c23a:	2010      	movs	r0, #16
 800c23c:	f7fe fdf7 	bl	800ae2e <_ZnwjPv>
 800c240:	4604      	mov	r4, r0
 800c242:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800c244:	4620      	mov	r0, r4
 800c246:	f004 fbc7 	bl	80109d8 <_ZN23PressureScreenPresenterC1ER18PressureScreenView>
 800c24a:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800c24c:	683b      	ldr	r3, [r7, #0]
 800c24e:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800c250:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800c252:	68bb      	ldr	r3, [r7, #8]
 800c254:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800c256:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800c258:	68fb      	ldr	r3, [r7, #12]
 800c25a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800c25c:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800c25e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c260:	2b00      	cmp	r3, #0
 800c262:	d002      	beq.n	800c26a <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800c264:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c266:	3304      	adds	r3, #4
 800c268:	e000      	b.n	800c26c <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800c26a:	2300      	movs	r3, #0
 800c26c:	4619      	mov	r1, r3
 800c26e:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800c270:	f7fe ffd2 	bl	800b218 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800c274:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c276:	3304      	adds	r3, #4
 800c278:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800c27a:	4618      	mov	r0, r3
 800c27c:	f7ff f83f 	bl	800b2fe <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800c280:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c282:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800c284:	4618      	mov	r0, r3
 800c286:	f000 fb0c 	bl	800c8a2 <_ZN8touchgfx4ViewI23PressureScreenPresenterE4bindERS1_>
 800c28a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c28c:	61fb      	str	r3, [r7, #28]
 800c28e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c290:	61bb      	str	r3, [r7, #24]
 800c292:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c294:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800c296:	69fb      	ldr	r3, [r7, #28]
 800c298:	681b      	ldr	r3, [r3, #0]
 800c29a:	330c      	adds	r3, #12
 800c29c:	681b      	ldr	r3, [r3, #0]
 800c29e:	69f8      	ldr	r0, [r7, #28]
 800c2a0:	4798      	blx	r3
    newPresenter->activate();
 800c2a2:	69bb      	ldr	r3, [r7, #24]
 800c2a4:	681b      	ldr	r3, [r3, #0]
 800c2a6:	681b      	ldr	r3, [r3, #0]
 800c2a8:	69b8      	ldr	r0, [r7, #24]
 800c2aa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800c2ac:	6979      	ldr	r1, [r7, #20]
 800c2ae:	69f8      	ldr	r0, [r7, #28]
 800c2b0:	f00e fdf2 	bl	801ae98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800c2b4:	697b      	ldr	r3, [r7, #20]
 800c2b6:	681b      	ldr	r3, [r3, #0]
 800c2b8:	3310      	adds	r3, #16
 800c2ba:	681b      	ldr	r3, [r3, #0]
 800c2bc:	6978      	ldr	r0, [r7, #20]
 800c2be:	4798      	blx	r3
    newTransition->invalidate();
 800c2c0:	697b      	ldr	r3, [r7, #20]
 800c2c2:	681b      	ldr	r3, [r3, #0]
 800c2c4:	3314      	adds	r3, #20
 800c2c6:	681b      	ldr	r3, [r3, #0]
 800c2c8:	6978      	ldr	r0, [r7, #20]
 800c2ca:	4798      	blx	r3
}
 800c2cc:	bf00      	nop
    return newPresenter;
 800c2ce:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800c2d0:	4618      	mov	r0, r3
 800c2d2:	373c      	adds	r7, #60	; 0x3c
 800c2d4:	46bd      	mov	sp, r7
 800c2d6:	bd90      	pop	{r4, r7, pc}
 800c2d8:	0802c538 	.word	0x0802c538
 800c2dc:	0802cbd4 	.word	0x0802cbd4
 800c2e0:	0802c6e8 	.word	0x0802c6e8
 800c2e4:	0802c72c 	.word	0x0802c72c
 800c2e8:	0802c7d0 	.word	0x0802c7d0

0800c2ec <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800c2ec:	b590      	push	{r4, r7, lr}
 800c2ee:	b08f      	sub	sp, #60	; 0x3c
 800c2f0:	af00      	add	r7, sp, #0
 800c2f2:	60f8      	str	r0, [r7, #12]
 800c2f4:	60b9      	str	r1, [r7, #8]
 800c2f6:	607a      	str	r2, [r7, #4]
 800c2f8:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800c2fa:	687b      	ldr	r3, [r7, #4]
 800c2fc:	689a      	ldr	r2, [r3, #8]
 800c2fe:	687b      	ldr	r3, [r7, #4]
 800c300:	689b      	ldr	r3, [r3, #8]
 800c302:	681b      	ldr	r3, [r3, #0]
 800c304:	3320      	adds	r3, #32
 800c306:	681b      	ldr	r3, [r3, #0]
 800c308:	4610      	mov	r0, r2
 800c30a:	4798      	blx	r3
 800c30c:	4603      	mov	r3, r0
 800c30e:	f5b3 7f3d 	cmp.w	r3, #756	; 0x2f4
 800c312:	d205      	bcs.n	800c320 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800c314:	4b7d      	ldr	r3, [pc, #500]	; (800c50c <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800c316:	4a7e      	ldr	r2, [pc, #504]	; (800c510 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c318:	21a3      	movs	r1, #163	; 0xa3
 800c31a:	487e      	ldr	r0, [pc, #504]	; (800c514 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c31c:	f01f f850 	bl	802b3c0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800c320:	687b      	ldr	r3, [r7, #4]
 800c322:	685a      	ldr	r2, [r3, #4]
 800c324:	687b      	ldr	r3, [r7, #4]
 800c326:	685b      	ldr	r3, [r3, #4]
 800c328:	681b      	ldr	r3, [r3, #0]
 800c32a:	3320      	adds	r3, #32
 800c32c:	681b      	ldr	r3, [r3, #0]
 800c32e:	4610      	mov	r0, r2
 800c330:	4798      	blx	r3
 800c332:	4603      	mov	r3, r0
 800c334:	2b0f      	cmp	r3, #15
 800c336:	d805      	bhi.n	800c344 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800c338:	4b77      	ldr	r3, [pc, #476]	; (800c518 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800c33a:	4a75      	ldr	r2, [pc, #468]	; (800c510 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c33c:	21a4      	movs	r1, #164	; 0xa4
 800c33e:	4875      	ldr	r0, [pc, #468]	; (800c514 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c340:	f01f f83e 	bl	802b3c0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800c344:	687b      	ldr	r3, [r7, #4]
 800c346:	68da      	ldr	r2, [r3, #12]
 800c348:	687b      	ldr	r3, [r7, #4]
 800c34a:	68db      	ldr	r3, [r3, #12]
 800c34c:	681b      	ldr	r3, [r3, #0]
 800c34e:	3320      	adds	r3, #32
 800c350:	681b      	ldr	r3, [r3, #0]
 800c352:	4610      	mov	r0, r2
 800c354:	4798      	blx	r3
 800c356:	4603      	mov	r3, r0
 800c358:	2b3f      	cmp	r3, #63	; 0x3f
 800c35a:	d805      	bhi.n	800c368 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800c35c:	4b6f      	ldr	r3, [pc, #444]	; (800c51c <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800c35e:	4a6c      	ldr	r2, [pc, #432]	; (800c510 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c360:	21a5      	movs	r1, #165	; 0xa5
 800c362:	486c      	ldr	r0, [pc, #432]	; (800c514 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c364:	f01f f82c 	bl	802b3c0 <__assert_func>
 800c368:	68fb      	ldr	r3, [r7, #12]
 800c36a:	62bb      	str	r3, [r7, #40]	; 0x28
 800c36c:	68bb      	ldr	r3, [r7, #8]
 800c36e:	627b      	str	r3, [r7, #36]	; 0x24
 800c370:	683b      	ldr	r3, [r7, #0]
 800c372:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800c374:	f00c ffd6 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 800c378:	4603      	mov	r3, r0
 800c37a:	4618      	mov	r0, r3
 800c37c:	f7fe fe06 	bl	800af8c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800c380:	6a3b      	ldr	r3, [r7, #32]
 800c382:	681b      	ldr	r3, [r3, #0]
 800c384:	2b00      	cmp	r3, #0
 800c386:	d008      	beq.n	800c39a <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800c388:	6a3b      	ldr	r3, [r7, #32]
 800c38a:	681a      	ldr	r2, [r3, #0]
 800c38c:	6a3b      	ldr	r3, [r7, #32]
 800c38e:	681b      	ldr	r3, [r3, #0]
 800c390:	681b      	ldr	r3, [r3, #0]
 800c392:	330c      	adds	r3, #12
 800c394:	681b      	ldr	r3, [r3, #0]
 800c396:	4610      	mov	r0, r2
 800c398:	4798      	blx	r3
    if (*currentTrans)
 800c39a:	6a3b      	ldr	r3, [r7, #32]
 800c39c:	681b      	ldr	r3, [r3, #0]
 800c39e:	2b00      	cmp	r3, #0
 800c3a0:	d007      	beq.n	800c3b2 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800c3a2:	6a3b      	ldr	r3, [r7, #32]
 800c3a4:	681a      	ldr	r2, [r3, #0]
 800c3a6:	6a3b      	ldr	r3, [r7, #32]
 800c3a8:	681b      	ldr	r3, [r3, #0]
 800c3aa:	681b      	ldr	r3, [r3, #0]
 800c3ac:	681b      	ldr	r3, [r3, #0]
 800c3ae:	4610      	mov	r0, r2
 800c3b0:	4798      	blx	r3
    if (*currentScreen)
 800c3b2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c3b4:	681b      	ldr	r3, [r3, #0]
 800c3b6:	2b00      	cmp	r3, #0
 800c3b8:	d008      	beq.n	800c3cc <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800c3ba:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c3bc:	681a      	ldr	r2, [r3, #0]
 800c3be:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c3c0:	681b      	ldr	r3, [r3, #0]
 800c3c2:	681b      	ldr	r3, [r3, #0]
 800c3c4:	3314      	adds	r3, #20
 800c3c6:	681b      	ldr	r3, [r3, #0]
 800c3c8:	4610      	mov	r0, r2
 800c3ca:	4798      	blx	r3
    if (*currentPresenter)
 800c3cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c3ce:	681b      	ldr	r3, [r3, #0]
 800c3d0:	2b00      	cmp	r3, #0
 800c3d2:	d008      	beq.n	800c3e6 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800c3d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c3d6:	681a      	ldr	r2, [r3, #0]
 800c3d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c3da:	681b      	ldr	r3, [r3, #0]
 800c3dc:	681b      	ldr	r3, [r3, #0]
 800c3de:	3304      	adds	r3, #4
 800c3e0:	681b      	ldr	r3, [r3, #0]
 800c3e2:	4610      	mov	r0, r2
 800c3e4:	4798      	blx	r3
    if (*currentScreen)
 800c3e6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c3e8:	681b      	ldr	r3, [r3, #0]
 800c3ea:	2b00      	cmp	r3, #0
 800c3ec:	d007      	beq.n	800c3fe <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800c3ee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c3f0:	681a      	ldr	r2, [r3, #0]
 800c3f2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c3f4:	681b      	ldr	r3, [r3, #0]
 800c3f6:	681b      	ldr	r3, [r3, #0]
 800c3f8:	681b      	ldr	r3, [r3, #0]
 800c3fa:	4610      	mov	r0, r2
 800c3fc:	4798      	blx	r3
    if (*currentPresenter)
 800c3fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c400:	681b      	ldr	r3, [r3, #0]
 800c402:	2b00      	cmp	r3, #0
 800c404:	d008      	beq.n	800c418 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800c406:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c408:	681a      	ldr	r2, [r3, #0]
 800c40a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c40c:	681b      	ldr	r3, [r3, #0]
 800c40e:	681b      	ldr	r3, [r3, #0]
 800c410:	3308      	adds	r3, #8
 800c412:	681b      	ldr	r3, [r3, #0]
 800c414:	4610      	mov	r0, r2
 800c416:	4798      	blx	r3
}
 800c418:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800c41a:	687b      	ldr	r3, [r7, #4]
 800c41c:	68db      	ldr	r3, [r3, #12]
 800c41e:	2100      	movs	r1, #0
 800c420:	4618      	mov	r0, r3
 800c422:	f000 f937 	bl	800c694 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 800c426:	4603      	mov	r3, r0
 800c428:	4619      	mov	r1, r3
 800c42a:	2040      	movs	r0, #64	; 0x40
 800c42c:	f7fe fcff 	bl	800ae2e <_ZnwjPv>
 800c430:	4604      	mov	r4, r0
 800c432:	2114      	movs	r1, #20
 800c434:	4620      	mov	r0, r4
 800c436:	f000 f941 	bl	800c6bc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
 800c43a:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800c43c:	687b      	ldr	r3, [r7, #4]
 800c43e:	689b      	ldr	r3, [r3, #8]
 800c440:	2100      	movs	r1, #0
 800c442:	4618      	mov	r0, r3
 800c444:	f000 fa3b 	bl	800c8be <_ZN8touchgfx17AbstractPartition2atI12COScreenViewEERT_t>
 800c448:	4603      	mov	r3, r0
 800c44a:	4619      	mov	r1, r3
 800c44c:	f44f 703d 	mov.w	r0, #756	; 0x2f4
 800c450:	f7fe fced 	bl	800ae2e <_ZnwjPv>
 800c454:	4604      	mov	r4, r0
 800c456:	4620      	mov	r0, r4
 800c458:	f004 f926 	bl	80106a8 <_ZN12COScreenViewC1Ev>
 800c45c:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800c45e:	687b      	ldr	r3, [r7, #4]
 800c460:	685b      	ldr	r3, [r3, #4]
 800c462:	2100      	movs	r1, #0
 800c464:	4618      	mov	r0, r3
 800c466:	f000 fa3d 	bl	800c8e4 <_ZN8touchgfx17AbstractPartition2atI17COScreenPresenterEERT_t>
 800c46a:	4603      	mov	r3, r0
 800c46c:	4619      	mov	r1, r3
 800c46e:	2010      	movs	r0, #16
 800c470:	f7fe fcdd 	bl	800ae2e <_ZnwjPv>
 800c474:	4604      	mov	r4, r0
 800c476:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800c478:	4620      	mov	r0, r4
 800c47a:	f004 f8a5 	bl	80105c8 <_ZN17COScreenPresenterC1ER12COScreenView>
 800c47e:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800c480:	683b      	ldr	r3, [r7, #0]
 800c482:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800c484:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800c486:	68bb      	ldr	r3, [r7, #8]
 800c488:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800c48a:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800c48c:	68fb      	ldr	r3, [r7, #12]
 800c48e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800c490:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800c492:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c494:	2b00      	cmp	r3, #0
 800c496:	d002      	beq.n	800c49e <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800c498:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c49a:	3304      	adds	r3, #4
 800c49c:	e000      	b.n	800c4a0 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800c49e:	2300      	movs	r3, #0
 800c4a0:	4619      	mov	r1, r3
 800c4a2:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800c4a4:	f7fe feb8 	bl	800b218 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800c4a8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c4aa:	3304      	adds	r3, #4
 800c4ac:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800c4ae:	4618      	mov	r0, r3
 800c4b0:	f7fe ff25 	bl	800b2fe <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800c4b4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c4b6:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800c4b8:	4618      	mov	r0, r3
 800c4ba:	f000 fa26 	bl	800c90a <_ZN8touchgfx4ViewI17COScreenPresenterE4bindERS1_>
 800c4be:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c4c0:	61fb      	str	r3, [r7, #28]
 800c4c2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c4c4:	61bb      	str	r3, [r7, #24]
 800c4c6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c4c8:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800c4ca:	69fb      	ldr	r3, [r7, #28]
 800c4cc:	681b      	ldr	r3, [r3, #0]
 800c4ce:	330c      	adds	r3, #12
 800c4d0:	681b      	ldr	r3, [r3, #0]
 800c4d2:	69f8      	ldr	r0, [r7, #28]
 800c4d4:	4798      	blx	r3
    newPresenter->activate();
 800c4d6:	69bb      	ldr	r3, [r7, #24]
 800c4d8:	681b      	ldr	r3, [r3, #0]
 800c4da:	681b      	ldr	r3, [r3, #0]
 800c4dc:	69b8      	ldr	r0, [r7, #24]
 800c4de:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800c4e0:	6979      	ldr	r1, [r7, #20]
 800c4e2:	69f8      	ldr	r0, [r7, #28]
 800c4e4:	f00e fcd8 	bl	801ae98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800c4e8:	697b      	ldr	r3, [r7, #20]
 800c4ea:	681b      	ldr	r3, [r3, #0]
 800c4ec:	3310      	adds	r3, #16
 800c4ee:	681b      	ldr	r3, [r3, #0]
 800c4f0:	6978      	ldr	r0, [r7, #20]
 800c4f2:	4798      	blx	r3
    newTransition->invalidate();
 800c4f4:	697b      	ldr	r3, [r7, #20]
 800c4f6:	681b      	ldr	r3, [r3, #0]
 800c4f8:	3314      	adds	r3, #20
 800c4fa:	681b      	ldr	r3, [r3, #0]
 800c4fc:	6978      	ldr	r0, [r7, #20]
 800c4fe:	4798      	blx	r3
}
 800c500:	bf00      	nop
    return newPresenter;
 800c502:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800c504:	4618      	mov	r0, r3
 800c506:	373c      	adds	r7, #60	; 0x3c
 800c508:	46bd      	mov	sp, r7
 800c50a:	bd90      	pop	{r4, r7, pc}
 800c50c:	0802c538 	.word	0x0802c538
 800c510:	0802ccfc 	.word	0x0802ccfc
 800c514:	0802c6e8 	.word	0x0802c6e8
 800c518:	0802c72c 	.word	0x0802c72c
 800c51c:	0802c7d0 	.word	0x0802c7d0

0800c520 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 800c520:	b580      	push	{r7, lr}
 800c522:	b082      	sub	sp, #8
 800c524:	af00      	add	r7, sp, #0
 800c526:	6078      	str	r0, [r7, #4]
 800c528:	460b      	mov	r3, r1
 800c52a:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 800c52c:	687b      	ldr	r3, [r7, #4]
 800c52e:	681b      	ldr	r3, [r3, #0]
 800c530:	3324      	adds	r3, #36	; 0x24
 800c532:	681b      	ldr	r3, [r3, #0]
 800c534:	887a      	ldrh	r2, [r7, #2]
 800c536:	4611      	mov	r1, r2
 800c538:	6878      	ldr	r0, [r7, #4]
 800c53a:	4798      	blx	r3
 800c53c:	4603      	mov	r3, r0
    }
 800c53e:	4618      	mov	r0, r3
 800c540:	3708      	adds	r7, #8
 800c542:	46bd      	mov	sp, r7
 800c544:	bd80      	pop	{r7, pc}
	...

0800c548 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 * A widget that is able to make a snapshot of the area the SnapshotWidget covers into either a
 * Bitmap or into animation storage (if this available). Once the snapshot has been
 * taken using SnapshowWidget::makeSnapshot(), the SnapshotWidget will show the captured
 * snapshot when it is subsequently drawn.
 */
class SnapshotWidget : public Widget
 800c548:	b580      	push	{r7, lr}
 800c54a:	b082      	sub	sp, #8
 800c54c:	af00      	add	r7, sp, #0
 800c54e:	6078      	str	r0, [r7, #4]
 800c550:	4a05      	ldr	r2, [pc, #20]	; (800c568 <_ZN8touchgfx14SnapshotWidgetD1Ev+0x20>)
 800c552:	687b      	ldr	r3, [r7, #4]
 800c554:	601a      	str	r2, [r3, #0]
 800c556:	687b      	ldr	r3, [r7, #4]
 800c558:	4618      	mov	r0, r3
 800c55a:	f7fd fe17 	bl	800a18c <_ZN8touchgfx6WidgetD1Ev>
 800c55e:	687b      	ldr	r3, [r7, #4]
 800c560:	4618      	mov	r0, r3
 800c562:	3708      	adds	r7, #8
 800c564:	46bd      	mov	sp, r7
 800c566:	bd80      	pop	{r7, pc}
 800c568:	0802f4dc 	.word	0x0802f4dc

0800c56c <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 800c56c:	b580      	push	{r7, lr}
 800c56e:	b082      	sub	sp, #8
 800c570:	af00      	add	r7, sp, #0
 800c572:	6078      	str	r0, [r7, #4]
 800c574:	6878      	ldr	r0, [r7, #4]
 800c576:	f7ff ffe7 	bl	800c548 <_ZN8touchgfx14SnapshotWidgetD1Ev>
 800c57a:	212c      	movs	r1, #44	; 0x2c
 800c57c:	6878      	ldr	r0, [r7, #4]
 800c57e:	f01e f92e 	bl	802a7de <_ZdlPvj>
 800c582:	687b      	ldr	r3, [r7, #4]
 800c584:	4618      	mov	r0, r3
 800c586:	3708      	adds	r7, #8
 800c588:	46bd      	mov	sp, r7
 800c58a:	bd80      	pop	{r7, pc}

0800c58c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>:
    /**
     * Initializes a new instance of the SlideTransition class.
     *
     * @param  transitionSteps (Optional) Number of steps (ticks) in the transition animation, default is 20.
     */
    SlideTransition(const uint8_t transitionSteps = 20)
 800c58c:	b580      	push	{r7, lr}
 800c58e:	b084      	sub	sp, #16
 800c590:	af02      	add	r7, sp, #8
 800c592:	6078      	str	r0, [r7, #4]
 800c594:	460b      	mov	r3, r1
 800c596:	70fb      	strb	r3, [r7, #3]
        : Transition(),
          snapshot(),
          animationSteps(transitionSteps),
          animationCounter(0),
          relativeValue(0)
 800c598:	687b      	ldr	r3, [r7, #4]
 800c59a:	4618      	mov	r0, r3
 800c59c:	f7fe fd4c 	bl	800b038 <_ZN8touchgfx10TransitionC1Ev>
 800c5a0:	4a1e      	ldr	r2, [pc, #120]	; (800c61c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x90>)
 800c5a2:	687b      	ldr	r3, [r7, #4]
 800c5a4:	601a      	str	r2, [r3, #0]
          snapshot(),
 800c5a6:	687b      	ldr	r3, [r7, #4]
 800c5a8:	330c      	adds	r3, #12
 800c5aa:	4618      	mov	r0, r3
 800c5ac:	f009 fafa 	bl	8015ba4 <_ZN8touchgfx14SnapshotWidgetC1Ev>
          animationSteps(transitionSteps),
 800c5b0:	687b      	ldr	r3, [r7, #4]
 800c5b2:	78fa      	ldrb	r2, [r7, #3]
 800c5b4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
          animationCounter(0),
 800c5b8:	687b      	ldr	r3, [r7, #4]
 800c5ba:	2200      	movs	r2, #0
 800c5bc:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
          relativeValue(0)
 800c5c0:	687b      	ldr	r3, [r7, #4]
 800c5c2:	2200      	movs	r2, #0
 800c5c4:	879a      	strh	r2, [r3, #60]	; 0x3c
    {
        if (!HAL::USE_ANIMATION_STORAGE)
 800c5c6:	4b16      	ldr	r3, [pc, #88]	; (800c620 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x94>)
 800c5c8:	781b      	ldrb	r3, [r3, #0]
 800c5ca:	f083 0301 	eor.w	r3, r3, #1
 800c5ce:	b2db      	uxtb	r3, r3
 800c5d0:	2b00      	cmp	r3, #0
 800c5d2:	d003      	beq.n	800c5dc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x50>
        {
            // No animation storage, don't slide
            done = true;
 800c5d4:	687b      	ldr	r3, [r7, #4]
 800c5d6:	2201      	movs	r2, #1
 800c5d8:	721a      	strb	r2, [r3, #8]
            return;
 800c5da:	e019      	b.n	800c610 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x84>
        }

        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800c5dc:	687b      	ldr	r3, [r7, #4]
 800c5de:	f103 000c 	add.w	r0, r3, #12
 800c5e2:	4b10      	ldr	r3, [pc, #64]	; (800c624 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x98>)
 800c5e4:	881b      	ldrh	r3, [r3, #0]
 800c5e6:	b21a      	sxth	r2, r3
 800c5e8:	4b0f      	ldr	r3, [pc, #60]	; (800c628 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x9c>)
 800c5ea:	881b      	ldrh	r3, [r3, #0]
 800c5ec:	b21b      	sxth	r3, r3
 800c5ee:	9300      	str	r3, [sp, #0]
 800c5f0:	4613      	mov	r3, r2
 800c5f2:	2200      	movs	r2, #0
 800c5f4:	2100      	movs	r1, #0
 800c5f6:	f7fd fbf7 	bl	8009de8 <_ZN8touchgfx8Drawable11setPositionEssss>
        snapshot.makeSnapshot();
 800c5fa:	687b      	ldr	r3, [r7, #4]
 800c5fc:	330c      	adds	r3, #12
 800c5fe:	4618      	mov	r0, r3
 800c600:	f009 fa53 	bl	8015aaa <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
        {
        case EAST:
            targetValue = -HAL::DISPLAY_WIDTH;
            break;
        case WEST:
            targetValue = HAL::DISPLAY_WIDTH;
 800c604:	4b07      	ldr	r3, [pc, #28]	; (800c624 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x98>)
 800c606:	881b      	ldrh	r3, [r3, #0]
 800c608:	b21a      	sxth	r2, r3
 800c60a:	687b      	ldr	r3, [r7, #4]
 800c60c:	875a      	strh	r2, [r3, #58]	; 0x3a
            break;
 800c60e:	bf00      	nop
            break;
        case SOUTH:
            targetValue = -HAL::DISPLAY_HEIGHT;
            break;
        }
    }
 800c610:	687b      	ldr	r3, [r7, #4]
 800c612:	4618      	mov	r0, r3
 800c614:	3708      	adds	r7, #8
 800c616:	46bd      	mov	sp, r7
 800c618:	bd80      	pop	{r7, pc}
 800c61a:	bf00      	nop
 800c61c:	0802e08c 	.word	0x0802e08c
 800c620:	2000224b 	.word	0x2000224b
 800c624:	20002240 	.word	0x20002240
 800c628:	20002242 	.word	0x20002242

0800c62c <_ZN8touchgfx17AbstractPartition2atI14MainScreenViewEERT_t>:
    T& at(const uint16_t index)
 800c62c:	b580      	push	{r7, lr}
 800c62e:	b082      	sub	sp, #8
 800c630:	af00      	add	r7, sp, #0
 800c632:	6078      	str	r0, [r7, #4]
 800c634:	460b      	mov	r3, r1
 800c636:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c638:	687b      	ldr	r3, [r7, #4]
 800c63a:	681b      	ldr	r3, [r3, #0]
 800c63c:	3324      	adds	r3, #36	; 0x24
 800c63e:	681b      	ldr	r3, [r3, #0]
 800c640:	887a      	ldrh	r2, [r7, #2]
 800c642:	4611      	mov	r1, r2
 800c644:	6878      	ldr	r0, [r7, #4]
 800c646:	4798      	blx	r3
 800c648:	4603      	mov	r3, r0
    }
 800c64a:	4618      	mov	r0, r3
 800c64c:	3708      	adds	r7, #8
 800c64e:	46bd      	mov	sp, r7
 800c650:	bd80      	pop	{r7, pc}

0800c652 <_ZN8touchgfx17AbstractPartition2atI19MainScreenPresenterEERT_t>:
    T& at(const uint16_t index)
 800c652:	b580      	push	{r7, lr}
 800c654:	b082      	sub	sp, #8
 800c656:	af00      	add	r7, sp, #0
 800c658:	6078      	str	r0, [r7, #4]
 800c65a:	460b      	mov	r3, r1
 800c65c:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c65e:	687b      	ldr	r3, [r7, #4]
 800c660:	681b      	ldr	r3, [r3, #0]
 800c662:	3324      	adds	r3, #36	; 0x24
 800c664:	681b      	ldr	r3, [r3, #0]
 800c666:	887a      	ldrh	r2, [r7, #2]
 800c668:	4611      	mov	r1, r2
 800c66a:	6878      	ldr	r0, [r7, #4]
 800c66c:	4798      	blx	r3
 800c66e:	4603      	mov	r3, r0
    }
 800c670:	4618      	mov	r0, r3
 800c672:	3708      	adds	r7, #8
 800c674:	46bd      	mov	sp, r7
 800c676:	bd80      	pop	{r7, pc}

0800c678 <_ZN8touchgfx4ViewI19MainScreenPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 800c678:	b480      	push	{r7}
 800c67a:	b083      	sub	sp, #12
 800c67c:	af00      	add	r7, sp, #0
 800c67e:	6078      	str	r0, [r7, #4]
 800c680:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 800c682:	687b      	ldr	r3, [r7, #4]
 800c684:	683a      	ldr	r2, [r7, #0]
 800c686:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800c688:	bf00      	nop
 800c68a:	370c      	adds	r7, #12
 800c68c:	46bd      	mov	sp, r7
 800c68e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c692:	4770      	bx	lr

0800c694 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>:
    T& at(const uint16_t index)
 800c694:	b580      	push	{r7, lr}
 800c696:	b082      	sub	sp, #8
 800c698:	af00      	add	r7, sp, #0
 800c69a:	6078      	str	r0, [r7, #4]
 800c69c:	460b      	mov	r3, r1
 800c69e:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c6a0:	687b      	ldr	r3, [r7, #4]
 800c6a2:	681b      	ldr	r3, [r3, #0]
 800c6a4:	3324      	adds	r3, #36	; 0x24
 800c6a6:	681b      	ldr	r3, [r3, #0]
 800c6a8:	887a      	ldrh	r2, [r7, #2]
 800c6aa:	4611      	mov	r1, r2
 800c6ac:	6878      	ldr	r0, [r7, #4]
 800c6ae:	4798      	blx	r3
 800c6b0:	4603      	mov	r3, r0
    }
 800c6b2:	4618      	mov	r0, r3
 800c6b4:	3708      	adds	r7, #8
 800c6b6:	46bd      	mov	sp, r7
 800c6b8:	bd80      	pop	{r7, pc}
	...

0800c6bc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 800c6bc:	b580      	push	{r7, lr}
 800c6be:	b084      	sub	sp, #16
 800c6c0:	af02      	add	r7, sp, #8
 800c6c2:	6078      	str	r0, [r7, #4]
 800c6c4:	460b      	mov	r3, r1
 800c6c6:	70fb      	strb	r3, [r7, #3]
          relativeValue(0)
 800c6c8:	687b      	ldr	r3, [r7, #4]
 800c6ca:	4618      	mov	r0, r3
 800c6cc:	f7fe fcb4 	bl	800b038 <_ZN8touchgfx10TransitionC1Ev>
 800c6d0:	4a1f      	ldr	r2, [pc, #124]	; (800c750 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x94>)
 800c6d2:	687b      	ldr	r3, [r7, #4]
 800c6d4:	601a      	str	r2, [r3, #0]
          snapshot(),
 800c6d6:	687b      	ldr	r3, [r7, #4]
 800c6d8:	330c      	adds	r3, #12
 800c6da:	4618      	mov	r0, r3
 800c6dc:	f009 fa62 	bl	8015ba4 <_ZN8touchgfx14SnapshotWidgetC1Ev>
          animationSteps(transitionSteps),
 800c6e0:	687b      	ldr	r3, [r7, #4]
 800c6e2:	78fa      	ldrb	r2, [r7, #3]
 800c6e4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
          animationCounter(0),
 800c6e8:	687b      	ldr	r3, [r7, #4]
 800c6ea:	2200      	movs	r2, #0
 800c6ec:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
          relativeValue(0)
 800c6f0:	687b      	ldr	r3, [r7, #4]
 800c6f2:	2200      	movs	r2, #0
 800c6f4:	879a      	strh	r2, [r3, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
 800c6f6:	4b17      	ldr	r3, [pc, #92]	; (800c754 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x98>)
 800c6f8:	781b      	ldrb	r3, [r3, #0]
 800c6fa:	f083 0301 	eor.w	r3, r3, #1
 800c6fe:	b2db      	uxtb	r3, r3
 800c700:	2b00      	cmp	r3, #0
 800c702:	d003      	beq.n	800c70c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x50>
            done = true;
 800c704:	687b      	ldr	r3, [r7, #4]
 800c706:	2201      	movs	r2, #1
 800c708:	721a      	strb	r2, [r3, #8]
            return;
 800c70a:	e01b      	b.n	800c744 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x88>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800c70c:	687b      	ldr	r3, [r7, #4]
 800c70e:	f103 000c 	add.w	r0, r3, #12
 800c712:	4b11      	ldr	r3, [pc, #68]	; (800c758 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x9c>)
 800c714:	881b      	ldrh	r3, [r3, #0]
 800c716:	b21a      	sxth	r2, r3
 800c718:	4b10      	ldr	r3, [pc, #64]	; (800c75c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0xa0>)
 800c71a:	881b      	ldrh	r3, [r3, #0]
 800c71c:	b21b      	sxth	r3, r3
 800c71e:	9300      	str	r3, [sp, #0]
 800c720:	4613      	mov	r3, r2
 800c722:	2200      	movs	r2, #0
 800c724:	2100      	movs	r1, #0
 800c726:	f7fd fb5f 	bl	8009de8 <_ZN8touchgfx8Drawable11setPositionEssss>
        snapshot.makeSnapshot();
 800c72a:	687b      	ldr	r3, [r7, #4]
 800c72c:	330c      	adds	r3, #12
 800c72e:	4618      	mov	r0, r3
 800c730:	f009 f9bb 	bl	8015aaa <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
 800c734:	4b08      	ldr	r3, [pc, #32]	; (800c758 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x9c>)
 800c736:	881b      	ldrh	r3, [r3, #0]
 800c738:	425b      	negs	r3, r3
 800c73a:	b29b      	uxth	r3, r3
 800c73c:	b21a      	sxth	r2, r3
 800c73e:	687b      	ldr	r3, [r7, #4]
 800c740:	875a      	strh	r2, [r3, #58]	; 0x3a
            break;
 800c742:	bf00      	nop
    }
 800c744:	687b      	ldr	r3, [r7, #4]
 800c746:	4618      	mov	r0, r3
 800c748:	3708      	adds	r7, #8
 800c74a:	46bd      	mov	sp, r7
 800c74c:	bd80      	pop	{r7, pc}
 800c74e:	bf00      	nop
 800c750:	0802e0b0 	.word	0x0802e0b0
 800c754:	2000224b 	.word	0x2000224b
 800c758:	20002240 	.word	0x20002240
 800c75c:	20002242 	.word	0x20002242

0800c760 <_ZN8touchgfx17AbstractPartition2atI15ClockScreenViewEERT_t>:
    T& at(const uint16_t index)
 800c760:	b580      	push	{r7, lr}
 800c762:	b082      	sub	sp, #8
 800c764:	af00      	add	r7, sp, #0
 800c766:	6078      	str	r0, [r7, #4]
 800c768:	460b      	mov	r3, r1
 800c76a:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c76c:	687b      	ldr	r3, [r7, #4]
 800c76e:	681b      	ldr	r3, [r3, #0]
 800c770:	3324      	adds	r3, #36	; 0x24
 800c772:	681b      	ldr	r3, [r3, #0]
 800c774:	887a      	ldrh	r2, [r7, #2]
 800c776:	4611      	mov	r1, r2
 800c778:	6878      	ldr	r0, [r7, #4]
 800c77a:	4798      	blx	r3
 800c77c:	4603      	mov	r3, r0
    }
 800c77e:	4618      	mov	r0, r3
 800c780:	3708      	adds	r7, #8
 800c782:	46bd      	mov	sp, r7
 800c784:	bd80      	pop	{r7, pc}

0800c786 <_ZN8touchgfx17AbstractPartition2atI20ClockScreenPresenterEERT_t>:
    T& at(const uint16_t index)
 800c786:	b580      	push	{r7, lr}
 800c788:	b082      	sub	sp, #8
 800c78a:	af00      	add	r7, sp, #0
 800c78c:	6078      	str	r0, [r7, #4]
 800c78e:	460b      	mov	r3, r1
 800c790:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c792:	687b      	ldr	r3, [r7, #4]
 800c794:	681b      	ldr	r3, [r3, #0]
 800c796:	3324      	adds	r3, #36	; 0x24
 800c798:	681b      	ldr	r3, [r3, #0]
 800c79a:	887a      	ldrh	r2, [r7, #2]
 800c79c:	4611      	mov	r1, r2
 800c79e:	6878      	ldr	r0, [r7, #4]
 800c7a0:	4798      	blx	r3
 800c7a2:	4603      	mov	r3, r0
    }
 800c7a4:	4618      	mov	r0, r3
 800c7a6:	3708      	adds	r7, #8
 800c7a8:	46bd      	mov	sp, r7
 800c7aa:	bd80      	pop	{r7, pc}

0800c7ac <_ZN8touchgfx4ViewI20ClockScreenPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 800c7ac:	b480      	push	{r7}
 800c7ae:	b083      	sub	sp, #12
 800c7b0:	af00      	add	r7, sp, #0
 800c7b2:	6078      	str	r0, [r7, #4]
 800c7b4:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 800c7b6:	687b      	ldr	r3, [r7, #4]
 800c7b8:	683a      	ldr	r2, [r7, #0]
 800c7ba:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800c7bc:	bf00      	nop
 800c7be:	370c      	adds	r7, #12
 800c7c0:	46bd      	mov	sp, r7
 800c7c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7c6:	4770      	bx	lr

0800c7c8 <_ZN8touchgfx17AbstractPartition2atI21TemperatureScreenViewEERT_t>:
    T& at(const uint16_t index)
 800c7c8:	b580      	push	{r7, lr}
 800c7ca:	b082      	sub	sp, #8
 800c7cc:	af00      	add	r7, sp, #0
 800c7ce:	6078      	str	r0, [r7, #4]
 800c7d0:	460b      	mov	r3, r1
 800c7d2:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c7d4:	687b      	ldr	r3, [r7, #4]
 800c7d6:	681b      	ldr	r3, [r3, #0]
 800c7d8:	3324      	adds	r3, #36	; 0x24
 800c7da:	681b      	ldr	r3, [r3, #0]
 800c7dc:	887a      	ldrh	r2, [r7, #2]
 800c7de:	4611      	mov	r1, r2
 800c7e0:	6878      	ldr	r0, [r7, #4]
 800c7e2:	4798      	blx	r3
 800c7e4:	4603      	mov	r3, r0
    }
 800c7e6:	4618      	mov	r0, r3
 800c7e8:	3708      	adds	r7, #8
 800c7ea:	46bd      	mov	sp, r7
 800c7ec:	bd80      	pop	{r7, pc}

0800c7ee <_ZN8touchgfx17AbstractPartition2atI26TemperatureScreenPresenterEERT_t>:
    T& at(const uint16_t index)
 800c7ee:	b580      	push	{r7, lr}
 800c7f0:	b082      	sub	sp, #8
 800c7f2:	af00      	add	r7, sp, #0
 800c7f4:	6078      	str	r0, [r7, #4]
 800c7f6:	460b      	mov	r3, r1
 800c7f8:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c7fa:	687b      	ldr	r3, [r7, #4]
 800c7fc:	681b      	ldr	r3, [r3, #0]
 800c7fe:	3324      	adds	r3, #36	; 0x24
 800c800:	681b      	ldr	r3, [r3, #0]
 800c802:	887a      	ldrh	r2, [r7, #2]
 800c804:	4611      	mov	r1, r2
 800c806:	6878      	ldr	r0, [r7, #4]
 800c808:	4798      	blx	r3
 800c80a:	4603      	mov	r3, r0
    }
 800c80c:	4618      	mov	r0, r3
 800c80e:	3708      	adds	r7, #8
 800c810:	46bd      	mov	sp, r7
 800c812:	bd80      	pop	{r7, pc}

0800c814 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 800c814:	b480      	push	{r7}
 800c816:	b083      	sub	sp, #12
 800c818:	af00      	add	r7, sp, #0
 800c81a:	6078      	str	r0, [r7, #4]
 800c81c:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 800c81e:	687b      	ldr	r3, [r7, #4]
 800c820:	683a      	ldr	r2, [r7, #0]
 800c822:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800c824:	bf00      	nop
 800c826:	370c      	adds	r7, #12
 800c828:	46bd      	mov	sp, r7
 800c82a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c82e:	4770      	bx	lr

0800c830 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
    T& at(const uint16_t index)
 800c830:	b580      	push	{r7, lr}
 800c832:	b082      	sub	sp, #8
 800c834:	af00      	add	r7, sp, #0
 800c836:	6078      	str	r0, [r7, #4]
 800c838:	460b      	mov	r3, r1
 800c83a:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c83c:	687b      	ldr	r3, [r7, #4]
 800c83e:	681b      	ldr	r3, [r3, #0]
 800c840:	3324      	adds	r3, #36	; 0x24
 800c842:	681b      	ldr	r3, [r3, #0]
 800c844:	887a      	ldrh	r2, [r7, #2]
 800c846:	4611      	mov	r1, r2
 800c848:	6878      	ldr	r0, [r7, #4]
 800c84a:	4798      	blx	r3
 800c84c:	4603      	mov	r3, r0
    }
 800c84e:	4618      	mov	r0, r3
 800c850:	3708      	adds	r7, #8
 800c852:	46bd      	mov	sp, r7
 800c854:	bd80      	pop	{r7, pc}

0800c856 <_ZN8touchgfx17AbstractPartition2atI18PressureScreenViewEERT_t>:
    T& at(const uint16_t index)
 800c856:	b580      	push	{r7, lr}
 800c858:	b082      	sub	sp, #8
 800c85a:	af00      	add	r7, sp, #0
 800c85c:	6078      	str	r0, [r7, #4]
 800c85e:	460b      	mov	r3, r1
 800c860:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c862:	687b      	ldr	r3, [r7, #4]
 800c864:	681b      	ldr	r3, [r3, #0]
 800c866:	3324      	adds	r3, #36	; 0x24
 800c868:	681b      	ldr	r3, [r3, #0]
 800c86a:	887a      	ldrh	r2, [r7, #2]
 800c86c:	4611      	mov	r1, r2
 800c86e:	6878      	ldr	r0, [r7, #4]
 800c870:	4798      	blx	r3
 800c872:	4603      	mov	r3, r0
    }
 800c874:	4618      	mov	r0, r3
 800c876:	3708      	adds	r7, #8
 800c878:	46bd      	mov	sp, r7
 800c87a:	bd80      	pop	{r7, pc}

0800c87c <_ZN8touchgfx17AbstractPartition2atI23PressureScreenPresenterEERT_t>:
    T& at(const uint16_t index)
 800c87c:	b580      	push	{r7, lr}
 800c87e:	b082      	sub	sp, #8
 800c880:	af00      	add	r7, sp, #0
 800c882:	6078      	str	r0, [r7, #4]
 800c884:	460b      	mov	r3, r1
 800c886:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c888:	687b      	ldr	r3, [r7, #4]
 800c88a:	681b      	ldr	r3, [r3, #0]
 800c88c:	3324      	adds	r3, #36	; 0x24
 800c88e:	681b      	ldr	r3, [r3, #0]
 800c890:	887a      	ldrh	r2, [r7, #2]
 800c892:	4611      	mov	r1, r2
 800c894:	6878      	ldr	r0, [r7, #4]
 800c896:	4798      	blx	r3
 800c898:	4603      	mov	r3, r0
    }
 800c89a:	4618      	mov	r0, r3
 800c89c:	3708      	adds	r7, #8
 800c89e:	46bd      	mov	sp, r7
 800c8a0:	bd80      	pop	{r7, pc}

0800c8a2 <_ZN8touchgfx4ViewI23PressureScreenPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 800c8a2:	b480      	push	{r7}
 800c8a4:	b083      	sub	sp, #12
 800c8a6:	af00      	add	r7, sp, #0
 800c8a8:	6078      	str	r0, [r7, #4]
 800c8aa:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 800c8ac:	687b      	ldr	r3, [r7, #4]
 800c8ae:	683a      	ldr	r2, [r7, #0]
 800c8b0:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800c8b2:	bf00      	nop
 800c8b4:	370c      	adds	r7, #12
 800c8b6:	46bd      	mov	sp, r7
 800c8b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8bc:	4770      	bx	lr

0800c8be <_ZN8touchgfx17AbstractPartition2atI12COScreenViewEERT_t>:
    T& at(const uint16_t index)
 800c8be:	b580      	push	{r7, lr}
 800c8c0:	b082      	sub	sp, #8
 800c8c2:	af00      	add	r7, sp, #0
 800c8c4:	6078      	str	r0, [r7, #4]
 800c8c6:	460b      	mov	r3, r1
 800c8c8:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c8ca:	687b      	ldr	r3, [r7, #4]
 800c8cc:	681b      	ldr	r3, [r3, #0]
 800c8ce:	3324      	adds	r3, #36	; 0x24
 800c8d0:	681b      	ldr	r3, [r3, #0]
 800c8d2:	887a      	ldrh	r2, [r7, #2]
 800c8d4:	4611      	mov	r1, r2
 800c8d6:	6878      	ldr	r0, [r7, #4]
 800c8d8:	4798      	blx	r3
 800c8da:	4603      	mov	r3, r0
    }
 800c8dc:	4618      	mov	r0, r3
 800c8de:	3708      	adds	r7, #8
 800c8e0:	46bd      	mov	sp, r7
 800c8e2:	bd80      	pop	{r7, pc}

0800c8e4 <_ZN8touchgfx17AbstractPartition2atI17COScreenPresenterEERT_t>:
    T& at(const uint16_t index)
 800c8e4:	b580      	push	{r7, lr}
 800c8e6:	b082      	sub	sp, #8
 800c8e8:	af00      	add	r7, sp, #0
 800c8ea:	6078      	str	r0, [r7, #4]
 800c8ec:	460b      	mov	r3, r1
 800c8ee:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c8f0:	687b      	ldr	r3, [r7, #4]
 800c8f2:	681b      	ldr	r3, [r3, #0]
 800c8f4:	3324      	adds	r3, #36	; 0x24
 800c8f6:	681b      	ldr	r3, [r3, #0]
 800c8f8:	887a      	ldrh	r2, [r7, #2]
 800c8fa:	4611      	mov	r1, r2
 800c8fc:	6878      	ldr	r0, [r7, #4]
 800c8fe:	4798      	blx	r3
 800c900:	4603      	mov	r3, r0
    }
 800c902:	4618      	mov	r0, r3
 800c904:	3708      	adds	r7, #8
 800c906:	46bd      	mov	sp, r7
 800c908:	bd80      	pop	{r7, pc}

0800c90a <_ZN8touchgfx4ViewI17COScreenPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 800c90a:	b480      	push	{r7}
 800c90c:	b083      	sub	sp, #12
 800c90e:	af00      	add	r7, sp, #0
 800c910:	6078      	str	r0, [r7, #4]
 800c912:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 800c914:	687b      	ldr	r3, [r7, #4]
 800c916:	683a      	ldr	r2, [r7, #0]
 800c918:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800c91a:	bf00      	nop
 800c91c:	370c      	adds	r7, #12
 800c91e:	46bd      	mov	sp, r7
 800c920:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c924:	4770      	bx	lr
	...

0800c928 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>:
class SlideTransition : public Transition
 800c928:	b580      	push	{r7, lr}
 800c92a:	b082      	sub	sp, #8
 800c92c:	af00      	add	r7, sp, #0
 800c92e:	6078      	str	r0, [r7, #4]
 800c930:	4a08      	ldr	r2, [pc, #32]	; (800c954 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev+0x2c>)
 800c932:	687b      	ldr	r3, [r7, #4]
 800c934:	601a      	str	r2, [r3, #0]
 800c936:	687b      	ldr	r3, [r7, #4]
 800c938:	330c      	adds	r3, #12
 800c93a:	4618      	mov	r0, r3
 800c93c:	f7ff fe04 	bl	800c548 <_ZN8touchgfx14SnapshotWidgetD1Ev>
 800c940:	687b      	ldr	r3, [r7, #4]
 800c942:	4618      	mov	r0, r3
 800c944:	f7fe fb8e 	bl	800b064 <_ZN8touchgfx10TransitionD1Ev>
 800c948:	687b      	ldr	r3, [r7, #4]
 800c94a:	4618      	mov	r0, r3
 800c94c:	3708      	adds	r7, #8
 800c94e:	46bd      	mov	sp, r7
 800c950:	bd80      	pop	{r7, pc}
 800c952:	bf00      	nop
 800c954:	0802e08c 	.word	0x0802e08c

0800c958 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED0Ev>:
 800c958:	b580      	push	{r7, lr}
 800c95a:	b082      	sub	sp, #8
 800c95c:	af00      	add	r7, sp, #0
 800c95e:	6078      	str	r0, [r7, #4]
 800c960:	6878      	ldr	r0, [r7, #4]
 800c962:	f7ff ffe1 	bl	800c928 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>
 800c966:	2140      	movs	r1, #64	; 0x40
 800c968:	6878      	ldr	r0, [r7, #4]
 800c96a:	f01d ff38 	bl	802a7de <_ZdlPvj>
 800c96e:	687b      	ldr	r3, [r7, #4]
 800c970:	4618      	mov	r0, r3
 800c972:	3708      	adds	r7, #8
 800c974:	46bd      	mov	sp, r7
 800c976:	bd80      	pop	{r7, pc}

0800c978 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 800c978:	b580      	push	{r7, lr}
 800c97a:	b082      	sub	sp, #8
 800c97c:	af00      	add	r7, sp, #0
 800c97e:	6078      	str	r0, [r7, #4]
 800c980:	4a08      	ldr	r2, [pc, #32]	; (800c9a4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev+0x2c>)
 800c982:	687b      	ldr	r3, [r7, #4]
 800c984:	601a      	str	r2, [r3, #0]
 800c986:	687b      	ldr	r3, [r7, #4]
 800c988:	330c      	adds	r3, #12
 800c98a:	4618      	mov	r0, r3
 800c98c:	f7ff fddc 	bl	800c548 <_ZN8touchgfx14SnapshotWidgetD1Ev>
 800c990:	687b      	ldr	r3, [r7, #4]
 800c992:	4618      	mov	r0, r3
 800c994:	f7fe fb66 	bl	800b064 <_ZN8touchgfx10TransitionD1Ev>
 800c998:	687b      	ldr	r3, [r7, #4]
 800c99a:	4618      	mov	r0, r3
 800c99c:	3708      	adds	r7, #8
 800c99e:	46bd      	mov	sp, r7
 800c9a0:	bd80      	pop	{r7, pc}
 800c9a2:	bf00      	nop
 800c9a4:	0802e0b0 	.word	0x0802e0b0

0800c9a8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
 800c9a8:	b580      	push	{r7, lr}
 800c9aa:	b082      	sub	sp, #8
 800c9ac:	af00      	add	r7, sp, #0
 800c9ae:	6078      	str	r0, [r7, #4]
 800c9b0:	6878      	ldr	r0, [r7, #4]
 800c9b2:	f7ff ffe1 	bl	800c978 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>
 800c9b6:	2140      	movs	r1, #64	; 0x40
 800c9b8:	6878      	ldr	r0, [r7, #4]
 800c9ba:	f01d ff10 	bl	802a7de <_ZdlPvj>
 800c9be:	687b      	ldr	r3, [r7, #4]
 800c9c0:	4618      	mov	r0, r3
 800c9c2:	3708      	adds	r7, #8
 800c9c4:	46bd      	mov	sp, r7
 800c9c6:	bd80      	pop	{r7, pc}

0800c9c8 <_ZN8touchgfx12NoTransitionD1Ev>:
 800c9c8:	b580      	push	{r7, lr}
 800c9ca:	b082      	sub	sp, #8
 800c9cc:	af00      	add	r7, sp, #0
 800c9ce:	6078      	str	r0, [r7, #4]
 800c9d0:	4a05      	ldr	r2, [pc, #20]	; (800c9e8 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800c9d2:	687b      	ldr	r3, [r7, #4]
 800c9d4:	601a      	str	r2, [r3, #0]
 800c9d6:	687b      	ldr	r3, [r7, #4]
 800c9d8:	4618      	mov	r0, r3
 800c9da:	f7fe fb43 	bl	800b064 <_ZN8touchgfx10TransitionD1Ev>
 800c9de:	687b      	ldr	r3, [r7, #4]
 800c9e0:	4618      	mov	r0, r3
 800c9e2:	3708      	adds	r7, #8
 800c9e4:	46bd      	mov	sp, r7
 800c9e6:	bd80      	pop	{r7, pc}
 800c9e8:	0802e0d4 	.word	0x0802e0d4

0800c9ec <_ZN8touchgfx12NoTransitionD0Ev>:
 800c9ec:	b580      	push	{r7, lr}
 800c9ee:	b082      	sub	sp, #8
 800c9f0:	af00      	add	r7, sp, #0
 800c9f2:	6078      	str	r0, [r7, #4]
 800c9f4:	6878      	ldr	r0, [r7, #4]
 800c9f6:	f7ff ffe7 	bl	800c9c8 <_ZN8touchgfx12NoTransitionD1Ev>
 800c9fa:	210c      	movs	r1, #12
 800c9fc:	6878      	ldr	r0, [r7, #4]
 800c9fe:	f01d feee 	bl	802a7de <_ZdlPvj>
 800ca02:	687b      	ldr	r3, [r7, #4]
 800ca04:	4618      	mov	r0, r3
 800ca06:	3708      	adds	r7, #8
 800ca08:	46bd      	mov	sp, r7
 800ca0a:	bd80      	pop	{r7, pc}

0800ca0c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800ca0c:	b580      	push	{r7, lr}
 800ca0e:	b082      	sub	sp, #8
 800ca10:	af00      	add	r7, sp, #0
 800ca12:	6078      	str	r0, [r7, #4]
 800ca14:	4a05      	ldr	r2, [pc, #20]	; (800ca2c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800ca16:	687b      	ldr	r3, [r7, #4]
 800ca18:	601a      	str	r2, [r3, #0]
 800ca1a:	687b      	ldr	r3, [r7, #4]
 800ca1c:	4618      	mov	r0, r3
 800ca1e:	f7fe fac3 	bl	800afa8 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800ca22:	687b      	ldr	r3, [r7, #4]
 800ca24:	4618      	mov	r0, r3
 800ca26:	3708      	adds	r7, #8
 800ca28:	46bd      	mov	sp, r7
 800ca2a:	bd80      	pop	{r7, pc}
 800ca2c:	0802e14c 	.word	0x0802e14c

0800ca30 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 800ca30:	b580      	push	{r7, lr}
 800ca32:	b082      	sub	sp, #8
 800ca34:	af00      	add	r7, sp, #0
 800ca36:	6078      	str	r0, [r7, #4]
 800ca38:	6878      	ldr	r0, [r7, #4]
 800ca3a:	f7ff ffe7 	bl	800ca0c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800ca3e:	2110      	movs	r1, #16
 800ca40:	6878      	ldr	r0, [r7, #4]
 800ca42:	f01d fecc 	bl	802a7de <_ZdlPvj>
 800ca46:	687b      	ldr	r3, [r7, #4]
 800ca48:	4618      	mov	r0, r3
 800ca4a:	3708      	adds	r7, #8
 800ca4c:	46bd      	mov	sp, r7
 800ca4e:	bd80      	pop	{r7, pc}

0800ca50 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv>:
     * Handles the tick event when transitioning. It moves the contents of the Screen's
     * container and a SnapshotWidget with a snapshot of the previous Screen. The direction
     * of the transition determines the direction the contents of the container and the
     * SnapshotWidget moves.
     */
    virtual void handleTickEvent()
 800ca50:	b5b0      	push	{r4, r5, r7, lr}
 800ca52:	b084      	sub	sp, #16
 800ca54:	af00      	add	r7, sp, #0
 800ca56:	6078      	str	r0, [r7, #4]
    {
        Transition::handleTickEvent();
 800ca58:	687b      	ldr	r3, [r7, #4]
 800ca5a:	4618      	mov	r0, r3
 800ca5c:	f7fe fb22 	bl	800b0a4 <_ZN8touchgfx10Transition15handleTickEventEv>

        // Calculate new position or stop animation
        animationCounter++;
 800ca60:	687b      	ldr	r3, [r7, #4]
 800ca62:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800ca66:	3301      	adds	r3, #1
 800ca68:	b2da      	uxtb	r2, r3
 800ca6a:	687b      	ldr	r3, [r7, #4]
 800ca6c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
        if (animationCounter > animationSteps)
 800ca70:	687b      	ldr	r3, [r7, #4]
 800ca72:	f893 2039 	ldrb.w	r2, [r3, #57]	; 0x39
 800ca76:	687b      	ldr	r3, [r7, #4]
 800ca78:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800ca7c:	429a      	cmp	r2, r3
 800ca7e:	d907      	bls.n	800ca90 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x40>
        {
            // Final step: stop the animation
            done = true;
 800ca80:	687b      	ldr	r3, [r7, #4]
 800ca82:	2201      	movs	r2, #1
 800ca84:	721a      	strb	r2, [r3, #8]
            animationCounter = 0;
 800ca86:	687b      	ldr	r3, [r7, #4]
 800ca88:	2200      	movs	r2, #0
 800ca8a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
            return;
 800ca8e:	e060      	b.n	800cb52 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x102>
        }

        // Calculate value in [0;targetValue]
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800ca90:	687b      	ldr	r3, [r7, #4]
 800ca92:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800ca96:	b298      	uxth	r0, r3
 800ca98:	687b      	ldr	r3, [r7, #4]
 800ca9a:	f9b3 203a 	ldrsh.w	r2, [r3, #58]	; 0x3a
 800ca9e:	687b      	ldr	r3, [r7, #4]
 800caa0:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800caa4:	b29b      	uxth	r3, r3
 800caa6:	2100      	movs	r1, #0
 800caa8:	f00e f9fc 	bl	801aea4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 800caac:	4603      	mov	r3, r0
 800caae:	81fb      	strh	r3, [r7, #14]

        // Note: Result of "calculatedValue & 1" is compiler dependent for negative values of calculatedValue
        if ((calculatedValue % 2) != 0)
 800cab0:	89fb      	ldrh	r3, [r7, #14]
 800cab2:	f003 0301 	and.w	r3, r3, #1
 800cab6:	b29b      	uxth	r3, r3
 800cab8:	2b00      	cmp	r3, #0
 800caba:	d00b      	beq.n	800cad4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x84>
        {
            // Optimization: calculatedValue is odd, add 1/-1 to move drawables modulo 32 bits in framebuffer
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800cabc:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800cac0:	2b00      	cmp	r3, #0
 800cac2:	dd01      	ble.n	800cac8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x78>
 800cac4:	2201      	movs	r2, #1
 800cac6:	e001      	b.n	800cacc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x7c>
 800cac8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800cacc:	89fb      	ldrh	r3, [r7, #14]
 800cace:	4413      	add	r3, r2
 800cad0:	b29b      	uxth	r3, r3
 800cad2:	81fb      	strh	r3, [r7, #14]
        // Move snapshot
        switch (templateDirection)
        {
        case EAST:
        case WEST:
            relativeValue = calculatedValue - snapshot.getX();
 800cad4:	89fc      	ldrh	r4, [r7, #14]
 800cad6:	687b      	ldr	r3, [r7, #4]
 800cad8:	330c      	adds	r3, #12
 800cada:	4618      	mov	r0, r3
 800cadc:	f7fe f9bf 	bl	800ae5e <_ZNK8touchgfx8Drawable4getXEv>
 800cae0:	4603      	mov	r3, r0
 800cae2:	b29b      	uxth	r3, r3
 800cae4:	1ae3      	subs	r3, r4, r3
 800cae6:	b29b      	uxth	r3, r3
 800cae8:	b21a      	sxth	r2, r3
 800caea:	687b      	ldr	r3, [r7, #4]
 800caec:	879a      	strh	r2, [r3, #60]	; 0x3c
            break;
 800caee:	bf00      	nop
            relativeValue = calculatedValue - snapshot.getY();
            break;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 800caf0:	687b      	ldr	r3, [r7, #4]
 800caf2:	685a      	ldr	r2, [r3, #4]
 800caf4:	687b      	ldr	r3, [r7, #4]
 800caf6:	685b      	ldr	r3, [r3, #4]
 800caf8:	681b      	ldr	r3, [r3, #0]
 800cafa:	331c      	adds	r3, #28
 800cafc:	681b      	ldr	r3, [r3, #0]
 800cafe:	4610      	mov	r0, r2
 800cb00:	4798      	blx	r3
 800cb02:	60b8      	str	r0, [r7, #8]
        while (d)
 800cb04:	e018      	b.n	800cb38 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0xe8>
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() + relativeValue);
 800cb06:	68bd      	ldr	r5, [r7, #8]
 800cb08:	68bb      	ldr	r3, [r7, #8]
 800cb0a:	681b      	ldr	r3, [r3, #0]
 800cb0c:	3330      	adds	r3, #48	; 0x30
 800cb0e:	681c      	ldr	r4, [r3, #0]
 800cb10:	68b8      	ldr	r0, [r7, #8]
 800cb12:	f7fe f9a4 	bl	800ae5e <_ZNK8touchgfx8Drawable4getXEv>
 800cb16:	4603      	mov	r3, r0
 800cb18:	b29a      	uxth	r2, r3
 800cb1a:	687b      	ldr	r3, [r7, #4]
 800cb1c:	f9b3 303c 	ldrsh.w	r3, [r3, #60]	; 0x3c
 800cb20:	b29b      	uxth	r3, r3
 800cb22:	4413      	add	r3, r2
 800cb24:	b29b      	uxth	r3, r3
 800cb26:	b21b      	sxth	r3, r3
 800cb28:	4619      	mov	r1, r3
 800cb2a:	4628      	mov	r0, r5
 800cb2c:	47a0      	blx	r4
                break;
 800cb2e:	bf00      	nop
            case NORTH:
            case SOUTH:
                d->setY(d->getY() + relativeValue);
                break;
            }
            d = d->getNextSibling();
 800cb30:	68b8      	ldr	r0, [r7, #8]
 800cb32:	f7fe f988 	bl	800ae46 <_ZN8touchgfx8Drawable14getNextSiblingEv>
 800cb36:	60b8      	str	r0, [r7, #8]
        while (d)
 800cb38:	68bb      	ldr	r3, [r7, #8]
 800cb3a:	2b00      	cmp	r3, #0
 800cb3c:	d1e3      	bne.n	800cb06 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0xb6>
        }

        // Entire screen has changed, redraw
        screenContainer->invalidate();
 800cb3e:	687b      	ldr	r3, [r7, #4]
 800cb40:	685b      	ldr	r3, [r3, #4]
 800cb42:	461a      	mov	r2, r3
 800cb44:	687b      	ldr	r3, [r7, #4]
 800cb46:	685b      	ldr	r3, [r3, #4]
 800cb48:	681b      	ldr	r3, [r3, #0]
 800cb4a:	3314      	adds	r3, #20
 800cb4c:	681b      	ldr	r3, [r3, #0]
 800cb4e:	4610      	mov	r0, r2
 800cb50:	4798      	blx	r3
    }
 800cb52:	3710      	adds	r7, #16
 800cb54:	46bd      	mov	sp, r7
 800cb56:	bdb0      	pop	{r4, r5, r7, pc}

0800cb58 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv>:

    virtual void tearDown()
 800cb58:	b580      	push	{r7, lr}
 800cb5a:	b082      	sub	sp, #8
 800cb5c:	af00      	add	r7, sp, #0
 800cb5e:	6078      	str	r0, [r7, #4]
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 800cb60:	4b0b      	ldr	r3, [pc, #44]	; (800cb90 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x38>)
 800cb62:	781b      	ldrb	r3, [r3, #0]
 800cb64:	2b00      	cmp	r3, #0
 800cb66:	d00e      	beq.n	800cb86 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x2e>
 800cb68:	687b      	ldr	r3, [r7, #4]
 800cb6a:	685b      	ldr	r3, [r3, #4]
 800cb6c:	2b00      	cmp	r3, #0
 800cb6e:	d00a      	beq.n	800cb86 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x2e>
        {
            screenContainer->remove(snapshot);
 800cb70:	687b      	ldr	r3, [r7, #4]
 800cb72:	6858      	ldr	r0, [r3, #4]
 800cb74:	687b      	ldr	r3, [r7, #4]
 800cb76:	685b      	ldr	r3, [r3, #4]
 800cb78:	681b      	ldr	r3, [r3, #0]
 800cb7a:	3364      	adds	r3, #100	; 0x64
 800cb7c:	681b      	ldr	r3, [r3, #0]
 800cb7e:	687a      	ldr	r2, [r7, #4]
 800cb80:	320c      	adds	r2, #12
 800cb82:	4611      	mov	r1, r2
 800cb84:	4798      	blx	r3
        }
    }
 800cb86:	bf00      	nop
 800cb88:	3708      	adds	r7, #8
 800cb8a:	46bd      	mov	sp, r7
 800cb8c:	bd80      	pop	{r7, pc}
 800cb8e:	bf00      	nop
 800cb90:	2000224b 	.word	0x2000224b

0800cb94 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv>:

    virtual void init()
 800cb94:	b5b0      	push	{r4, r5, r7, lr}
 800cb96:	b084      	sub	sp, #16
 800cb98:	af00      	add	r7, sp, #0
 800cb9a:	6078      	str	r0, [r7, #4]
    {
        Transition::init();
 800cb9c:	687b      	ldr	r3, [r7, #4]
 800cb9e:	4618      	mov	r0, r3
 800cba0:	f7fe fa94 	bl	800b0cc <_ZN8touchgfx10Transition4initEv>

        if (done)
 800cba4:	687b      	ldr	r3, [r7, #4]
 800cba6:	7a1b      	ldrb	r3, [r3, #8]
 800cba8:	2b00      	cmp	r3, #0
 800cbaa:	d132      	bne.n	800cc12 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x7e>
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 800cbac:	687b      	ldr	r3, [r7, #4]
 800cbae:	685a      	ldr	r2, [r3, #4]
 800cbb0:	687b      	ldr	r3, [r7, #4]
 800cbb2:	685b      	ldr	r3, [r3, #4]
 800cbb4:	681b      	ldr	r3, [r3, #0]
 800cbb6:	331c      	adds	r3, #28
 800cbb8:	681b      	ldr	r3, [r3, #0]
 800cbba:	4610      	mov	r0, r2
 800cbbc:	4798      	blx	r3
 800cbbe:	60f8      	str	r0, [r7, #12]
        while (d)
 800cbc0:	e018      	b.n	800cbf4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x60>
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
 800cbc2:	68fd      	ldr	r5, [r7, #12]
 800cbc4:	68fb      	ldr	r3, [r7, #12]
 800cbc6:	681b      	ldr	r3, [r3, #0]
 800cbc8:	3330      	adds	r3, #48	; 0x30
 800cbca:	681c      	ldr	r4, [r3, #0]
 800cbcc:	68f8      	ldr	r0, [r7, #12]
 800cbce:	f7fe f946 	bl	800ae5e <_ZNK8touchgfx8Drawable4getXEv>
 800cbd2:	4603      	mov	r3, r0
 800cbd4:	b29a      	uxth	r2, r3
 800cbd6:	687b      	ldr	r3, [r7, #4]
 800cbd8:	f9b3 303a 	ldrsh.w	r3, [r3, #58]	; 0x3a
 800cbdc:	b29b      	uxth	r3, r3
 800cbde:	1ad3      	subs	r3, r2, r3
 800cbe0:	b29b      	uxth	r3, r3
 800cbe2:	b21b      	sxth	r3, r3
 800cbe4:	4619      	mov	r1, r3
 800cbe6:	4628      	mov	r0, r5
 800cbe8:	47a0      	blx	r4
                break;
 800cbea:	bf00      	nop
            case SOUTH:
                d->setY(d->getY() - targetValue);
                break;
            }

            d = d->getNextSibling();
 800cbec:	68f8      	ldr	r0, [r7, #12]
 800cbee:	f7fe f92a 	bl	800ae46 <_ZN8touchgfx8Drawable14getNextSiblingEv>
 800cbf2:	60f8      	str	r0, [r7, #12]
        while (d)
 800cbf4:	68fb      	ldr	r3, [r7, #12]
 800cbf6:	2b00      	cmp	r3, #0
 800cbf8:	d1e3      	bne.n	800cbc2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x2e>
        }

        screenContainer->add(snapshot);
 800cbfa:	687b      	ldr	r3, [r7, #4]
 800cbfc:	6858      	ldr	r0, [r3, #4]
 800cbfe:	687b      	ldr	r3, [r7, #4]
 800cc00:	685b      	ldr	r3, [r3, #4]
 800cc02:	681b      	ldr	r3, [r3, #0]
 800cc04:	3360      	adds	r3, #96	; 0x60
 800cc06:	681b      	ldr	r3, [r3, #0]
 800cc08:	687a      	ldr	r2, [r7, #4]
 800cc0a:	320c      	adds	r2, #12
 800cc0c:	4611      	mov	r1, r2
 800cc0e:	4798      	blx	r3
 800cc10:	e000      	b.n	800cc14 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x80>
            return;
 800cc12:	bf00      	nop
    }
 800cc14:	3710      	adds	r7, #16
 800cc16:	46bd      	mov	sp, r7
 800cc18:	bdb0      	pop	{r4, r5, r7, pc}

0800cc1a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 800cc1a:	b5b0      	push	{r4, r5, r7, lr}
 800cc1c:	b084      	sub	sp, #16
 800cc1e:	af00      	add	r7, sp, #0
 800cc20:	6078      	str	r0, [r7, #4]
        Transition::handleTickEvent();
 800cc22:	687b      	ldr	r3, [r7, #4]
 800cc24:	4618      	mov	r0, r3
 800cc26:	f7fe fa3d 	bl	800b0a4 <_ZN8touchgfx10Transition15handleTickEventEv>
        animationCounter++;
 800cc2a:	687b      	ldr	r3, [r7, #4]
 800cc2c:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800cc30:	3301      	adds	r3, #1
 800cc32:	b2da      	uxtb	r2, r3
 800cc34:	687b      	ldr	r3, [r7, #4]
 800cc36:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
        if (animationCounter > animationSteps)
 800cc3a:	687b      	ldr	r3, [r7, #4]
 800cc3c:	f893 2039 	ldrb.w	r2, [r3, #57]	; 0x39
 800cc40:	687b      	ldr	r3, [r7, #4]
 800cc42:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800cc46:	429a      	cmp	r2, r3
 800cc48:	d907      	bls.n	800cc5a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x40>
            done = true;
 800cc4a:	687b      	ldr	r3, [r7, #4]
 800cc4c:	2201      	movs	r2, #1
 800cc4e:	721a      	strb	r2, [r3, #8]
            animationCounter = 0;
 800cc50:	687b      	ldr	r3, [r7, #4]
 800cc52:	2200      	movs	r2, #0
 800cc54:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
            return;
 800cc58:	e060      	b.n	800cd1c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x102>
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800cc5a:	687b      	ldr	r3, [r7, #4]
 800cc5c:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800cc60:	b298      	uxth	r0, r3
 800cc62:	687b      	ldr	r3, [r7, #4]
 800cc64:	f9b3 203a 	ldrsh.w	r2, [r3, #58]	; 0x3a
 800cc68:	687b      	ldr	r3, [r7, #4]
 800cc6a:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800cc6e:	b29b      	uxth	r3, r3
 800cc70:	2100      	movs	r1, #0
 800cc72:	f00e f917 	bl	801aea4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 800cc76:	4603      	mov	r3, r0
 800cc78:	81fb      	strh	r3, [r7, #14]
        if ((calculatedValue % 2) != 0)
 800cc7a:	89fb      	ldrh	r3, [r7, #14]
 800cc7c:	f003 0301 	and.w	r3, r3, #1
 800cc80:	b29b      	uxth	r3, r3
 800cc82:	2b00      	cmp	r3, #0
 800cc84:	d00b      	beq.n	800cc9e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x84>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800cc86:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800cc8a:	2b00      	cmp	r3, #0
 800cc8c:	dd01      	ble.n	800cc92 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x78>
 800cc8e:	2201      	movs	r2, #1
 800cc90:	e001      	b.n	800cc96 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x7c>
 800cc92:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800cc96:	89fb      	ldrh	r3, [r7, #14]
 800cc98:	4413      	add	r3, r2
 800cc9a:	b29b      	uxth	r3, r3
 800cc9c:	81fb      	strh	r3, [r7, #14]
            relativeValue = calculatedValue - snapshot.getX();
 800cc9e:	89fc      	ldrh	r4, [r7, #14]
 800cca0:	687b      	ldr	r3, [r7, #4]
 800cca2:	330c      	adds	r3, #12
 800cca4:	4618      	mov	r0, r3
 800cca6:	f7fe f8da 	bl	800ae5e <_ZNK8touchgfx8Drawable4getXEv>
 800ccaa:	4603      	mov	r3, r0
 800ccac:	b29b      	uxth	r3, r3
 800ccae:	1ae3      	subs	r3, r4, r3
 800ccb0:	b29b      	uxth	r3, r3
 800ccb2:	b21a      	sxth	r2, r3
 800ccb4:	687b      	ldr	r3, [r7, #4]
 800ccb6:	879a      	strh	r2, [r3, #60]	; 0x3c
            break;
 800ccb8:	bf00      	nop
        Drawable* d = screenContainer->getFirstChild();
 800ccba:	687b      	ldr	r3, [r7, #4]
 800ccbc:	685a      	ldr	r2, [r3, #4]
 800ccbe:	687b      	ldr	r3, [r7, #4]
 800ccc0:	685b      	ldr	r3, [r3, #4]
 800ccc2:	681b      	ldr	r3, [r3, #0]
 800ccc4:	331c      	adds	r3, #28
 800ccc6:	681b      	ldr	r3, [r3, #0]
 800ccc8:	4610      	mov	r0, r2
 800ccca:	4798      	blx	r3
 800cccc:	60b8      	str	r0, [r7, #8]
        while (d)
 800ccce:	e018      	b.n	800cd02 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0xe8>
                d->setX(d->getX() + relativeValue);
 800ccd0:	68bd      	ldr	r5, [r7, #8]
 800ccd2:	68bb      	ldr	r3, [r7, #8]
 800ccd4:	681b      	ldr	r3, [r3, #0]
 800ccd6:	3330      	adds	r3, #48	; 0x30
 800ccd8:	681c      	ldr	r4, [r3, #0]
 800ccda:	68b8      	ldr	r0, [r7, #8]
 800ccdc:	f7fe f8bf 	bl	800ae5e <_ZNK8touchgfx8Drawable4getXEv>
 800cce0:	4603      	mov	r3, r0
 800cce2:	b29a      	uxth	r2, r3
 800cce4:	687b      	ldr	r3, [r7, #4]
 800cce6:	f9b3 303c 	ldrsh.w	r3, [r3, #60]	; 0x3c
 800ccea:	b29b      	uxth	r3, r3
 800ccec:	4413      	add	r3, r2
 800ccee:	b29b      	uxth	r3, r3
 800ccf0:	b21b      	sxth	r3, r3
 800ccf2:	4619      	mov	r1, r3
 800ccf4:	4628      	mov	r0, r5
 800ccf6:	47a0      	blx	r4
                break;
 800ccf8:	bf00      	nop
            d = d->getNextSibling();
 800ccfa:	68b8      	ldr	r0, [r7, #8]
 800ccfc:	f7fe f8a3 	bl	800ae46 <_ZN8touchgfx8Drawable14getNextSiblingEv>
 800cd00:	60b8      	str	r0, [r7, #8]
        while (d)
 800cd02:	68bb      	ldr	r3, [r7, #8]
 800cd04:	2b00      	cmp	r3, #0
 800cd06:	d1e3      	bne.n	800ccd0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
        screenContainer->invalidate();
 800cd08:	687b      	ldr	r3, [r7, #4]
 800cd0a:	685b      	ldr	r3, [r3, #4]
 800cd0c:	461a      	mov	r2, r3
 800cd0e:	687b      	ldr	r3, [r7, #4]
 800cd10:	685b      	ldr	r3, [r3, #4]
 800cd12:	681b      	ldr	r3, [r3, #0]
 800cd14:	3314      	adds	r3, #20
 800cd16:	681b      	ldr	r3, [r3, #0]
 800cd18:	4610      	mov	r0, r2
 800cd1a:	4798      	blx	r3
    }
 800cd1c:	3710      	adds	r7, #16
 800cd1e:	46bd      	mov	sp, r7
 800cd20:	bdb0      	pop	{r4, r5, r7, pc}
	...

0800cd24 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800cd24:	b580      	push	{r7, lr}
 800cd26:	b082      	sub	sp, #8
 800cd28:	af00      	add	r7, sp, #0
 800cd2a:	6078      	str	r0, [r7, #4]
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 800cd2c:	4b0b      	ldr	r3, [pc, #44]	; (800cd5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x38>)
 800cd2e:	781b      	ldrb	r3, [r3, #0]
 800cd30:	2b00      	cmp	r3, #0
 800cd32:	d00e      	beq.n	800cd52 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x2e>
 800cd34:	687b      	ldr	r3, [r7, #4]
 800cd36:	685b      	ldr	r3, [r3, #4]
 800cd38:	2b00      	cmp	r3, #0
 800cd3a:	d00a      	beq.n	800cd52 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x2e>
            screenContainer->remove(snapshot);
 800cd3c:	687b      	ldr	r3, [r7, #4]
 800cd3e:	6858      	ldr	r0, [r3, #4]
 800cd40:	687b      	ldr	r3, [r7, #4]
 800cd42:	685b      	ldr	r3, [r3, #4]
 800cd44:	681b      	ldr	r3, [r3, #0]
 800cd46:	3364      	adds	r3, #100	; 0x64
 800cd48:	681b      	ldr	r3, [r3, #0]
 800cd4a:	687a      	ldr	r2, [r7, #4]
 800cd4c:	320c      	adds	r2, #12
 800cd4e:	4611      	mov	r1, r2
 800cd50:	4798      	blx	r3
    }
 800cd52:	bf00      	nop
 800cd54:	3708      	adds	r7, #8
 800cd56:	46bd      	mov	sp, r7
 800cd58:	bd80      	pop	{r7, pc}
 800cd5a:	bf00      	nop
 800cd5c:	2000224b 	.word	0x2000224b

0800cd60 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 800cd60:	b5b0      	push	{r4, r5, r7, lr}
 800cd62:	b084      	sub	sp, #16
 800cd64:	af00      	add	r7, sp, #0
 800cd66:	6078      	str	r0, [r7, #4]
        Transition::init();
 800cd68:	687b      	ldr	r3, [r7, #4]
 800cd6a:	4618      	mov	r0, r3
 800cd6c:	f7fe f9ae 	bl	800b0cc <_ZN8touchgfx10Transition4initEv>
        if (done)
 800cd70:	687b      	ldr	r3, [r7, #4]
 800cd72:	7a1b      	ldrb	r3, [r3, #8]
 800cd74:	2b00      	cmp	r3, #0
 800cd76:	d132      	bne.n	800cdde <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x7e>
        Drawable* d = screenContainer->getFirstChild();
 800cd78:	687b      	ldr	r3, [r7, #4]
 800cd7a:	685a      	ldr	r2, [r3, #4]
 800cd7c:	687b      	ldr	r3, [r7, #4]
 800cd7e:	685b      	ldr	r3, [r3, #4]
 800cd80:	681b      	ldr	r3, [r3, #0]
 800cd82:	331c      	adds	r3, #28
 800cd84:	681b      	ldr	r3, [r3, #0]
 800cd86:	4610      	mov	r0, r2
 800cd88:	4798      	blx	r3
 800cd8a:	60f8      	str	r0, [r7, #12]
        while (d)
 800cd8c:	e018      	b.n	800cdc0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x60>
                d->setX(d->getX() - targetValue);
 800cd8e:	68fd      	ldr	r5, [r7, #12]
 800cd90:	68fb      	ldr	r3, [r7, #12]
 800cd92:	681b      	ldr	r3, [r3, #0]
 800cd94:	3330      	adds	r3, #48	; 0x30
 800cd96:	681c      	ldr	r4, [r3, #0]
 800cd98:	68f8      	ldr	r0, [r7, #12]
 800cd9a:	f7fe f860 	bl	800ae5e <_ZNK8touchgfx8Drawable4getXEv>
 800cd9e:	4603      	mov	r3, r0
 800cda0:	b29a      	uxth	r2, r3
 800cda2:	687b      	ldr	r3, [r7, #4]
 800cda4:	f9b3 303a 	ldrsh.w	r3, [r3, #58]	; 0x3a
 800cda8:	b29b      	uxth	r3, r3
 800cdaa:	1ad3      	subs	r3, r2, r3
 800cdac:	b29b      	uxth	r3, r3
 800cdae:	b21b      	sxth	r3, r3
 800cdb0:	4619      	mov	r1, r3
 800cdb2:	4628      	mov	r0, r5
 800cdb4:	47a0      	blx	r4
                break;
 800cdb6:	bf00      	nop
            d = d->getNextSibling();
 800cdb8:	68f8      	ldr	r0, [r7, #12]
 800cdba:	f7fe f844 	bl	800ae46 <_ZN8touchgfx8Drawable14getNextSiblingEv>
 800cdbe:	60f8      	str	r0, [r7, #12]
        while (d)
 800cdc0:	68fb      	ldr	r3, [r7, #12]
 800cdc2:	2b00      	cmp	r3, #0
 800cdc4:	d1e3      	bne.n	800cd8e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x2e>
        screenContainer->add(snapshot);
 800cdc6:	687b      	ldr	r3, [r7, #4]
 800cdc8:	6858      	ldr	r0, [r3, #4]
 800cdca:	687b      	ldr	r3, [r7, #4]
 800cdcc:	685b      	ldr	r3, [r3, #4]
 800cdce:	681b      	ldr	r3, [r3, #0]
 800cdd0:	3360      	adds	r3, #96	; 0x60
 800cdd2:	681b      	ldr	r3, [r3, #0]
 800cdd4:	687a      	ldr	r2, [r7, #4]
 800cdd6:	320c      	adds	r2, #12
 800cdd8:	4611      	mov	r1, r2
 800cdda:	4798      	blx	r3
 800cddc:	e000      	b.n	800cde0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x80>
            return;
 800cdde:	bf00      	nop
    }
 800cde0:	3710      	adds	r7, #16
 800cde2:	46bd      	mov	sp, r7
 800cde4:	bdb0      	pop	{r4, r5, r7, pc}

0800cde6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800cde6:	b580      	push	{r7, lr}
 800cde8:	b082      	sub	sp, #8
 800cdea:	af00      	add	r7, sp, #0
 800cdec:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 800cdee:	687b      	ldr	r3, [r7, #4]
 800cdf0:	685b      	ldr	r3, [r3, #4]
 800cdf2:	687a      	ldr	r2, [r7, #4]
 800cdf4:	68d2      	ldr	r2, [r2, #12]
 800cdf6:	1052      	asrs	r2, r2, #1
 800cdf8:	1899      	adds	r1, r3, r2
 800cdfa:	687b      	ldr	r3, [r7, #4]
 800cdfc:	68db      	ldr	r3, [r3, #12]
 800cdfe:	f003 0301 	and.w	r3, r3, #1
 800ce02:	2b00      	cmp	r3, #0
 800ce04:	d102      	bne.n	800ce0c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 800ce06:	687b      	ldr	r3, [r7, #4]
 800ce08:	689b      	ldr	r3, [r3, #8]
 800ce0a:	e00a      	b.n	800ce22 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 800ce0c:	687b      	ldr	r3, [r7, #4]
 800ce0e:	685b      	ldr	r3, [r3, #4]
 800ce10:	687a      	ldr	r2, [r7, #4]
 800ce12:	68d2      	ldr	r2, [r2, #12]
 800ce14:	1052      	asrs	r2, r2, #1
 800ce16:	4413      	add	r3, r2
 800ce18:	681b      	ldr	r3, [r3, #0]
 800ce1a:	687a      	ldr	r2, [r7, #4]
 800ce1c:	6892      	ldr	r2, [r2, #8]
 800ce1e:	4413      	add	r3, r2
 800ce20:	681b      	ldr	r3, [r3, #0]
 800ce22:	4608      	mov	r0, r1
 800ce24:	4798      	blx	r3
    }
 800ce26:	bf00      	nop
 800ce28:	3708      	adds	r7, #8
 800ce2a:	46bd      	mov	sp, r7
 800ce2c:	bd80      	pop	{r7, pc}

0800ce2e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800ce2e:	b480      	push	{r7}
 800ce30:	b083      	sub	sp, #12
 800ce32:	af00      	add	r7, sp, #0
 800ce34:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800ce36:	687b      	ldr	r3, [r7, #4]
 800ce38:	685b      	ldr	r3, [r3, #4]
 800ce3a:	2b00      	cmp	r3, #0
 800ce3c:	d010      	beq.n	800ce60 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800ce3e:	687b      	ldr	r3, [r7, #4]
 800ce40:	689b      	ldr	r3, [r3, #8]
 800ce42:	2b00      	cmp	r3, #0
 800ce44:	d107      	bne.n	800ce56 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800ce46:	687b      	ldr	r3, [r7, #4]
 800ce48:	68db      	ldr	r3, [r3, #12]
 800ce4a:	f003 0301 	and.w	r3, r3, #1
 800ce4e:	2b00      	cmp	r3, #0
 800ce50:	d101      	bne.n	800ce56 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800ce52:	2301      	movs	r3, #1
 800ce54:	e000      	b.n	800ce58 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 800ce56:	2300      	movs	r3, #0
 800ce58:	2b01      	cmp	r3, #1
 800ce5a:	d001      	beq.n	800ce60 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800ce5c:	2301      	movs	r3, #1
 800ce5e:	e000      	b.n	800ce62 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 800ce60:	2300      	movs	r3, #0
    }
 800ce62:	4618      	mov	r0, r3
 800ce64:	370c      	adds	r7, #12
 800ce66:	46bd      	mov	sp, r7
 800ce68:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce6c:	4770      	bx	lr
	...

0800ce70 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>:
    TextAreaWithWildcardBase()
 800ce70:	b580      	push	{r7, lr}
 800ce72:	b082      	sub	sp, #8
 800ce74:	af00      	add	r7, sp, #0
 800ce76:	6078      	str	r0, [r7, #4]
        : TextArea()
 800ce78:	687b      	ldr	r3, [r7, #4]
 800ce7a:	4618      	mov	r0, r3
 800ce7c:	f7fd f9f0 	bl	800a260 <_ZN8touchgfx8TextAreaC1Ev>
 800ce80:	4a03      	ldr	r2, [pc, #12]	; (800ce90 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev+0x20>)
 800ce82:	687b      	ldr	r3, [r7, #4]
 800ce84:	601a      	str	r2, [r3, #0]
    }
 800ce86:	687b      	ldr	r3, [r7, #4]
 800ce88:	4618      	mov	r0, r3
 800ce8a:	3708      	adds	r7, #8
 800ce8c:	46bd      	mov	sp, r7
 800ce8e:	bd80      	pop	{r7, pc}
 800ce90:	0802f7a0 	.word	0x0802f7a0

0800ce94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 800ce94:	b580      	push	{r7, lr}
 800ce96:	b082      	sub	sp, #8
 800ce98:	af00      	add	r7, sp, #0
 800ce9a:	6078      	str	r0, [r7, #4]
        : TextAreaWithWildcardBase(), wc1(0)
 800ce9c:	687b      	ldr	r3, [r7, #4]
 800ce9e:	4618      	mov	r0, r3
 800cea0:	f7ff ffe6 	bl	800ce70 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>
 800cea4:	4a05      	ldr	r2, [pc, #20]	; (800cebc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 800cea6:	687b      	ldr	r3, [r7, #4]
 800cea8:	601a      	str	r2, [r3, #0]
 800ceaa:	687b      	ldr	r3, [r7, #4]
 800ceac:	2200      	movs	r2, #0
 800ceae:	649a      	str	r2, [r3, #72]	; 0x48
    }
 800ceb0:	687b      	ldr	r3, [r7, #4]
 800ceb2:	4618      	mov	r0, r3
 800ceb4:	3708      	adds	r7, #8
 800ceb6:	46bd      	mov	sp, r7
 800ceb8:	bd80      	pop	{r7, pc}
 800ceba:	bf00      	nop
 800cebc:	0802df94 	.word	0x0802df94

0800cec0 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>:
    void setWildcard1(const Unicode::UnicodeChar* value)
 800cec0:	b480      	push	{r7}
 800cec2:	b083      	sub	sp, #12
 800cec4:	af00      	add	r7, sp, #0
 800cec6:	6078      	str	r0, [r7, #4]
 800cec8:	6039      	str	r1, [r7, #0]
        wc1 = value;
 800ceca:	687b      	ldr	r3, [r7, #4]
 800cecc:	683a      	ldr	r2, [r7, #0]
 800cece:	649a      	str	r2, [r3, #72]	; 0x48
    }
 800ced0:	bf00      	nop
 800ced2:	370c      	adds	r7, #12
 800ced4:	46bd      	mov	sp, r7
 800ced6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ceda:	4770      	bx	lr

0800cedc <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 800cedc:	b580      	push	{r7, lr}
 800cede:	b082      	sub	sp, #8
 800cee0:	af00      	add	r7, sp, #0
 800cee2:	6078      	str	r0, [r7, #4]
 800cee4:	6039      	str	r1, [r7, #0]
    {
        setWildcard1(value);
 800cee6:	6839      	ldr	r1, [r7, #0]
 800cee8:	6878      	ldr	r0, [r7, #4]
 800ceea:	f7ff ffe9 	bl	800cec0 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>
    }
 800ceee:	bf00      	nop
 800cef0:	3708      	adds	r7, #8
 800cef2:	46bd      	mov	sp, r7
 800cef4:	bd80      	pop	{r7, pc}

0800cef6 <_ZN16COScreenViewBase11applicationEv>:
    COScreenViewBase();
    virtual ~COScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800cef6:	b580      	push	{r7, lr}
 800cef8:	b082      	sub	sp, #8
 800cefa:	af00      	add	r7, sp, #0
 800cefc:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800cefe:	f00c fa11 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 800cf02:	4603      	mov	r3, r0
    }
 800cf04:	4618      	mov	r0, r3
 800cf06:	3708      	adds	r7, #8
 800cf08:	46bd      	mov	sp, r7
 800cf0a:	bd80      	pop	{r7, pc}

0800cf0c <_ZN8touchgfx4ViewI17COScreenPresenterED1Ev>:
class View : public Screen
 800cf0c:	b580      	push	{r7, lr}
 800cf0e:	b082      	sub	sp, #8
 800cf10:	af00      	add	r7, sp, #0
 800cf12:	6078      	str	r0, [r7, #4]
 800cf14:	4a05      	ldr	r2, [pc, #20]	; (800cf2c <_ZN8touchgfx4ViewI17COScreenPresenterED1Ev+0x20>)
 800cf16:	687b      	ldr	r3, [r7, #4]
 800cf18:	601a      	str	r2, [r3, #0]
 800cf1a:	687b      	ldr	r3, [r7, #4]
 800cf1c:	4618      	mov	r0, r3
 800cf1e:	f7fd f899 	bl	800a054 <_ZN8touchgfx6ScreenD1Ev>
 800cf22:	687b      	ldr	r3, [r7, #4]
 800cf24:	4618      	mov	r0, r3
 800cf26:	3708      	adds	r7, #8
 800cf28:	46bd      	mov	sp, r7
 800cf2a:	bd80      	pop	{r7, pc}
 800cf2c:	0802e268 	.word	0x0802e268

0800cf30 <_ZN8touchgfx4ViewI17COScreenPresenterED0Ev>:
 800cf30:	b580      	push	{r7, lr}
 800cf32:	b082      	sub	sp, #8
 800cf34:	af00      	add	r7, sp, #0
 800cf36:	6078      	str	r0, [r7, #4]
 800cf38:	6878      	ldr	r0, [r7, #4]
 800cf3a:	f7ff ffe7 	bl	800cf0c <_ZN8touchgfx4ViewI17COScreenPresenterED1Ev>
 800cf3e:	2140      	movs	r1, #64	; 0x40
 800cf40:	6878      	ldr	r0, [r7, #4]
 800cf42:	f01d fc4c 	bl	802a7de <_ZdlPvj>
 800cf46:	687b      	ldr	r3, [r7, #4]
 800cf48:	4618      	mov	r0, r3
 800cf4a:	3708      	adds	r7, #8
 800cf4c:	46bd      	mov	sp, r7
 800cf4e:	bd80      	pop	{r7, pc}

0800cf50 <_ZN16COScreenViewBaseC1Ev>:
#include <gui_generated/coscreen_screen/COScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

COScreenViewBase::COScreenViewBase() :
 800cf50:	b590      	push	{r4, r7, lr}
 800cf52:	b0a5      	sub	sp, #148	; 0x94
 800cf54:	af02      	add	r7, sp, #8
 800cf56:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &COScreenViewBase::buttonCallbackHandler)
 800cf58:	697b      	ldr	r3, [r7, #20]
 800cf5a:	4618      	mov	r0, r3
 800cf5c:	f000 fa8c 	bl	800d478 <_ZN8touchgfx4ViewI17COScreenPresenterEC1Ev>
 800cf60:	4a66      	ldr	r2, [pc, #408]	; (800d0fc <_ZN16COScreenViewBaseC1Ev+0x1ac>)
 800cf62:	697b      	ldr	r3, [r7, #20]
 800cf64:	601a      	str	r2, [r3, #0]
 800cf66:	697b      	ldr	r3, [r7, #20]
 800cf68:	3340      	adds	r3, #64	; 0x40
 800cf6a:	4618      	mov	r0, r3
 800cf6c:	f7fd f930 	bl	800a1d0 <_ZN8touchgfx3BoxC1Ev>
 800cf70:	697b      	ldr	r3, [r7, #20]
 800cf72:	336c      	adds	r3, #108	; 0x6c
 800cf74:	4618      	mov	r0, r3
 800cf76:	f7ff ff8d 	bl	800ce94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800cf7a:	697b      	ldr	r3, [r7, #20]
 800cf7c:	33b8      	adds	r3, #184	; 0xb8
 800cf7e:	4618      	mov	r0, r3
 800cf80:	f009 fdb6 	bl	8016af0 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800cf84:	697b      	ldr	r3, [r7, #20]
 800cf86:	33f4      	adds	r3, #244	; 0xf4
 800cf88:	4618      	mov	r0, r3
 800cf8a:	f009 fa29 	bl	80163e0 <_ZN8touchgfx5GaugeC1Ev>
 800cf8e:	697b      	ldr	r3, [r7, #20]
 800cf90:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800cf94:	4618      	mov	r0, r3
 800cf96:	f7fd f963 	bl	800a260 <_ZN8touchgfx8TextAreaC1Ev>
 800cf9a:	697b      	ldr	r3, [r7, #20]
 800cf9c:	f503 7039 	add.w	r0, r3, #740	; 0x2e4
 800cfa0:	4b57      	ldr	r3, [pc, #348]	; (800d100 <_ZN16COScreenViewBaseC1Ev+0x1b0>)
 800cfa2:	623b      	str	r3, [r7, #32]
 800cfa4:	2300      	movs	r3, #0
 800cfa6:	627b      	str	r3, [r7, #36]	; 0x24
 800cfa8:	f107 0320 	add.w	r3, r7, #32
 800cfac:	cb0c      	ldmia	r3, {r2, r3}
 800cfae:	6979      	ldr	r1, [r7, #20]
 800cfb0:	f000 fa78 	bl	800d4a4 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800cfb4:	697b      	ldr	r3, [r7, #20]
 800cfb6:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800cfba:	23f0      	movs	r3, #240	; 0xf0
 800cfbc:	9300      	str	r3, [sp, #0]
 800cfbe:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800cfc2:	2200      	movs	r2, #0
 800cfc4:	2100      	movs	r1, #0
 800cfc6:	f7fc ff0f 	bl	8009de8 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800cfca:	697b      	ldr	r3, [r7, #20]
 800cfcc:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800cfd0:	2300      	movs	r3, #0
 800cfd2:	f887 3064 	strb.w	r3, [r7, #100]	; 0x64
 800cfd6:	2300      	movs	r3, #0
 800cfd8:	f887 3063 	strb.w	r3, [r7, #99]	; 0x63
 800cfdc:	2300      	movs	r3, #0
 800cfde:	f887 3062 	strb.w	r3, [r7, #98]	; 0x62
 800cfe2:	f897 3064 	ldrb.w	r3, [r7, #100]	; 0x64
 800cfe6:	041b      	lsls	r3, r3, #16
 800cfe8:	461a      	mov	r2, r3
 800cfea:	f897 3063 	ldrb.w	r3, [r7, #99]	; 0x63
 800cfee:	021b      	lsls	r3, r3, #8
 800cff0:	431a      	orrs	r2, r3
 800cff2:	f897 3062 	ldrb.w	r3, [r7, #98]	; 0x62
 800cff6:	4313      	orrs	r3, r2
 800cff8:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800cffc:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800d000:	4611      	mov	r1, r2
 800d002:	4618      	mov	r0, r3
 800d004:	f7fc fe2c 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800d008:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800d00a:	4619      	mov	r1, r3
 800d00c:	4620      	mov	r0, r4
 800d00e:	f7fd f903 	bl	800a218 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800d012:	697a      	ldr	r2, [r7, #20]
 800d014:	697b      	ldr	r3, [r7, #20]
 800d016:	3340      	adds	r3, #64	; 0x40
 800d018:	4619      	mov	r1, r3
 800d01a:	4610      	mov	r0, r2
 800d01c:	f7fd f872 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    COData.setXY(200, 202);
 800d020:	697b      	ldr	r3, [r7, #20]
 800d022:	336c      	adds	r3, #108	; 0x6c
 800d024:	22ca      	movs	r2, #202	; 0xca
 800d026:	21c8      	movs	r1, #200	; 0xc8
 800d028:	4618      	mov	r0, r3
 800d02a:	f7fc ff1c 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
    COData.setColor(touchgfx::Color::getColorFromRGB(214, 195, 195));
 800d02e:	697b      	ldr	r3, [r7, #20]
 800d030:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800d034:	23d6      	movs	r3, #214	; 0xd6
 800d036:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 800d03a:	23c3      	movs	r3, #195	; 0xc3
 800d03c:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
 800d040:	23c3      	movs	r3, #195	; 0xc3
 800d042:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 800d046:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800d04a:	041b      	lsls	r3, r3, #16
 800d04c:	461a      	mov	r2, r3
 800d04e:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 800d052:	021b      	lsls	r3, r3, #8
 800d054:	431a      	orrs	r2, r3
 800d056:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 800d05a:	4313      	orrs	r3, r2
 800d05c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800d060:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800d064:	4611      	mov	r1, r2
 800d066:	4618      	mov	r0, r3
 800d068:	f7fc fdfa 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800d06c:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800d06e:	66bc      	str	r4, [r7, #104]	; 0x68
 800d070:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800d072:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800d074:	69fa      	ldr	r2, [r7, #28]
 800d076:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800d078:	bf00      	nop
    COData.setLinespacing(0);
 800d07a:	697b      	ldr	r3, [r7, #20]
 800d07c:	336c      	adds	r3, #108	; 0x6c
 800d07e:	673b      	str	r3, [r7, #112]	; 0x70
 800d080:	2300      	movs	r3, #0
 800d082:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
        linespace = space;
 800d086:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800d088:	f8b7 206e 	ldrh.w	r2, [r7, #110]	; 0x6e
 800d08c:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800d08e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800d090:	681b      	ldr	r3, [r3, #0]
 800d092:	3384      	adds	r3, #132	; 0x84
 800d094:	681b      	ldr	r3, [r3, #0]
 800d096:	6f3c      	ldr	r4, [r7, #112]	; 0x70
 800d098:	463a      	mov	r2, r7
 800d09a:	6f39      	ldr	r1, [r7, #112]	; 0x70
 800d09c:	4610      	mov	r0, r2
 800d09e:	4798      	blx	r3
 800d0a0:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800d0a4:	463a      	mov	r2, r7
 800d0a6:	ca07      	ldmia	r2, {r0, r1, r2}
 800d0a8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800d0ac:	bf00      	nop
    Unicode::snprintf(CODataBuffer, CODATA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ZXCV).getText());
 800d0ae:	697b      	ldr	r3, [r7, #20]
 800d0b0:	f503 7437 	add.w	r4, r3, #732	; 0x2dc
 800d0b4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800d0b8:	2102      	movs	r1, #2
 800d0ba:	4618      	mov	r0, r3
 800d0bc:	f7fd f8ba 	bl	800a234 <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800d0c0:	4b10      	ldr	r3, [pc, #64]	; (800d104 <_ZN16COScreenViewBaseC1Ev+0x1b4>)
 800d0c2:	681b      	ldr	r3, [r3, #0]
 800d0c4:	2b00      	cmp	r3, #0
 800d0c6:	d105      	bne.n	800d0d4 <_ZN16COScreenViewBaseC1Ev+0x184>
 800d0c8:	4b0f      	ldr	r3, [pc, #60]	; (800d108 <_ZN16COScreenViewBaseC1Ev+0x1b8>)
 800d0ca:	4a10      	ldr	r2, [pc, #64]	; (800d10c <_ZN16COScreenViewBaseC1Ev+0x1bc>)
 800d0cc:	2160      	movs	r1, #96	; 0x60
 800d0ce:	4810      	ldr	r0, [pc, #64]	; (800d110 <_ZN16COScreenViewBaseC1Ev+0x1c0>)
 800d0d0:	f01e f976 	bl	802b3c0 <__assert_func>
 800d0d4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800d0d8:	677b      	str	r3, [r7, #116]	; 0x74
        return typedTextId < numberOfTypedTexts;
 800d0da:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800d0dc:	889a      	ldrh	r2, [r3, #4]
 800d0de:	4b0d      	ldr	r3, [pc, #52]	; (800d114 <_ZN16COScreenViewBaseC1Ev+0x1c4>)
 800d0e0:	881b      	ldrh	r3, [r3, #0]
 800d0e2:	429a      	cmp	r2, r3
 800d0e4:	bf34      	ite	cc
 800d0e6:	2301      	movcc	r3, #1
 800d0e8:	2300      	movcs	r3, #0
 800d0ea:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800d0ec:	2b00      	cmp	r3, #0
 800d0ee:	d115      	bne.n	800d11c <_ZN16COScreenViewBaseC1Ev+0x1cc>
 800d0f0:	4b09      	ldr	r3, [pc, #36]	; (800d118 <_ZN16COScreenViewBaseC1Ev+0x1c8>)
 800d0f2:	4a06      	ldr	r2, [pc, #24]	; (800d10c <_ZN16COScreenViewBaseC1Ev+0x1bc>)
 800d0f4:	2161      	movs	r1, #97	; 0x61
 800d0f6:	4806      	ldr	r0, [pc, #24]	; (800d110 <_ZN16COScreenViewBaseC1Ev+0x1c0>)
 800d0f8:	f01e f962 	bl	802b3c0 <__assert_func>
 800d0fc:	0802e21c 	.word	0x0802e21c
 800d100:	0800d44f 	.word	0x0800d44f
 800d104:	200022a4 	.word	0x200022a4
 800d108:	0802ce18 	.word	0x0802ce18
 800d10c:	0802cf1c 	.word	0x0802cf1c
 800d110:	0802ce98 	.word	0x0802ce98
 800d114:	200022a8 	.word	0x200022a8
 800d118:	0802cedc 	.word	0x0802cedc
        return texts->getText(typedTextId);
 800d11c:	4ba3      	ldr	r3, [pc, #652]	; (800d3ac <_ZN16COScreenViewBaseC1Ev+0x45c>)
 800d11e:	681b      	ldr	r3, [r3, #0]
 800d120:	8dba      	ldrh	r2, [r7, #44]	; 0x2c
 800d122:	4611      	mov	r1, r2
 800d124:	4618      	mov	r0, r3
 800d126:	f002 ffdd 	bl	80100e4 <_ZNK8touchgfx5Texts7getTextEt>
 800d12a:	4603      	mov	r3, r0
 800d12c:	bf00      	nop
 800d12e:	4aa0      	ldr	r2, [pc, #640]	; (800d3b0 <_ZN16COScreenViewBaseC1Ev+0x460>)
 800d130:	2104      	movs	r1, #4
 800d132:	4620      	mov	r0, r4
 800d134:	f00f fb3e 	bl	801c7b4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d138:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800d13c:	4618      	mov	r0, r3
 800d13e:	f7fc fba7 	bl	8009890 <_ZN8touchgfx9TypedTextD1Ev>
    COData.setWildcard(CODataBuffer);
 800d142:	697b      	ldr	r3, [r7, #20]
 800d144:	f103 026c 	add.w	r2, r3, #108	; 0x6c
 800d148:	697b      	ldr	r3, [r7, #20]
 800d14a:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800d14e:	4619      	mov	r1, r3
 800d150:	4610      	mov	r0, r2
 800d152:	f7ff fec3 	bl	800cedc <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    COData.resizeToCurrentText();
 800d156:	697b      	ldr	r3, [r7, #20]
 800d158:	336c      	adds	r3, #108	; 0x6c
 800d15a:	4618      	mov	r0, r3
 800d15c:	f009 f892 	bl	8016284 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    COData.setTypedText(touchgfx::TypedText(T___SINGLEUSE_N3KU));
 800d160:	697b      	ldr	r3, [r7, #20]
 800d162:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800d166:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800d16a:	2103      	movs	r1, #3
 800d16c:	4618      	mov	r0, r3
 800d16e:	f7fd f861 	bl	800a234 <_ZN8touchgfx9TypedTextC1Et>
 800d172:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800d176:	4619      	mov	r1, r3
 800d178:	4620      	mov	r0, r4
 800d17a:	f009 f8a3 	bl	80162c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800d17e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800d182:	4618      	mov	r0, r3
 800d184:	f7fc fb84 	bl	8009890 <_ZN8touchgfx9TypedTextD1Ev>
    add(COData);
 800d188:	697a      	ldr	r2, [r7, #20]
 800d18a:	697b      	ldr	r3, [r7, #20]
 800d18c:	336c      	adds	r3, #108	; 0x6c
 800d18e:	4619      	mov	r1, r3
 800d190:	4610      	mov	r0, r2
 800d192:	f7fc ffb7 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    back.setXY(20, 103);
 800d196:	697b      	ldr	r3, [r7, #20]
 800d198:	33b8      	adds	r3, #184	; 0xb8
 800d19a:	2267      	movs	r2, #103	; 0x67
 800d19c:	2114      	movs	r1, #20
 800d19e:	4618      	mov	r0, r3
 800d1a0:	f7fc fe61 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
    back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
 800d1a4:	697b      	ldr	r3, [r7, #20]
 800d1a6:	f103 04b8 	add.w	r4, r3, #184	; 0xb8
 800d1aa:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800d1ae:	2100      	movs	r1, #0
 800d1b0:	4618      	mov	r0, r3
 800d1b2:	f7fc fd9b 	bl	8009cec <_ZN8touchgfx6BitmapC1Et>
 800d1b6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800d1ba:	2101      	movs	r1, #1
 800d1bc:	4618      	mov	r0, r3
 800d1be:	f7fc fd95 	bl	8009cec <_ZN8touchgfx6BitmapC1Et>
 800d1c2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800d1c6:	2104      	movs	r1, #4
 800d1c8:	4618      	mov	r0, r3
 800d1ca:	f7fc fd8f 	bl	8009cec <_ZN8touchgfx6BitmapC1Et>
 800d1ce:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800d1d2:	2104      	movs	r1, #4
 800d1d4:	4618      	mov	r0, r3
 800d1d6:	f7fc fd89 	bl	8009cec <_ZN8touchgfx6BitmapC1Et>
 800d1da:	f107 0040 	add.w	r0, r7, #64	; 0x40
 800d1de:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 800d1e2:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800d1e6:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800d1ea:	9300      	str	r3, [sp, #0]
 800d1ec:	4603      	mov	r3, r0
 800d1ee:	4620      	mov	r0, r4
 800d1f0:	f009 fbe8 	bl	80169c4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    back.setIconXY(5, 5);
 800d1f4:	697b      	ldr	r3, [r7, #20]
 800d1f6:	33b8      	adds	r3, #184	; 0xb8
 800d1f8:	2205      	movs	r2, #5
 800d1fa:	2105      	movs	r1, #5
 800d1fc:	4618      	mov	r0, r3
 800d1fe:	f7fd fa39 	bl	800a674 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    back.setAction(buttonCallback);
 800d202:	697b      	ldr	r3, [r7, #20]
 800d204:	f103 02b8 	add.w	r2, r3, #184	; 0xb8
 800d208:	697b      	ldr	r3, [r7, #20]
 800d20a:	f503 7339 	add.w	r3, r3, #740	; 0x2e4
 800d20e:	4619      	mov	r1, r3
 800d210:	4610      	mov	r0, r2
 800d212:	f7fd f9e1 	bl	800a5d8 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(back);
 800d216:	697a      	ldr	r2, [r7, #20]
 800d218:	697b      	ldr	r3, [r7, #20]
 800d21a:	33b8      	adds	r3, #184	; 0xb8
 800d21c:	4619      	mov	r1, r3
 800d21e:	4610      	mov	r0, r2
 800d220:	f7fc ff70 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    COGauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_BACKGROUNDS_LIGHT_ID));
 800d224:	697b      	ldr	r3, [r7, #20]
 800d226:	f103 04f4 	add.w	r4, r3, #244	; 0xf4
 800d22a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800d22e:	2102      	movs	r1, #2
 800d230:	4618      	mov	r0, r3
 800d232:	f7fc fd5b 	bl	8009cec <_ZN8touchgfx6BitmapC1Et>
 800d236:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800d23a:	4619      	mov	r1, r3
 800d23c:	4620      	mov	r0, r4
 800d23e:	f005 fcce 	bl	8012bde <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    COGauge.setPosition(166, 73, 120, 120);
 800d242:	697b      	ldr	r3, [r7, #20]
 800d244:	f103 00f4 	add.w	r0, r3, #244	; 0xf4
 800d248:	2378      	movs	r3, #120	; 0x78
 800d24a:	9300      	str	r3, [sp, #0]
 800d24c:	2378      	movs	r3, #120	; 0x78
 800d24e:	2249      	movs	r2, #73	; 0x49
 800d250:	21a6      	movs	r1, #166	; 0xa6
 800d252:	f7fc fdc9 	bl	8009de8 <_ZN8touchgfx8Drawable11setPositionEssss>
    COGauge.setCenter(60, 60);
 800d256:	697b      	ldr	r3, [r7, #20]
 800d258:	33f4      	adds	r3, #244	; 0xf4
 800d25a:	223c      	movs	r2, #60	; 0x3c
 800d25c:	213c      	movs	r1, #60	; 0x3c
 800d25e:	4618      	mov	r0, r3
 800d260:	f009 f969 	bl	8016536 <_ZN8touchgfx5Gauge9setCenterEii>
    COGauge.setStartEndAngle(-90, 90);
 800d264:	697b      	ldr	r3, [r7, #20]
 800d266:	33f4      	adds	r3, #244	; 0xf4
 800d268:	225a      	movs	r2, #90	; 0x5a
 800d26a:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800d26e:	4618      	mov	r0, r3
 800d270:	f009 f9e6 	bl	8016640 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    COGauge.setRange(10, 1000);
 800d274:	697b      	ldr	r3, [r7, #20]
 800d276:	f103 00f4 	add.w	r0, r3, #244	; 0xf4
 800d27a:	2300      	movs	r3, #0
 800d27c:	9300      	str	r3, [sp, #0]
 800d27e:	2300      	movs	r3, #0
 800d280:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800d284:	210a      	movs	r1, #10
 800d286:	f005 fb84 	bl	8012992 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    COGauge.setValue(300);
 800d28a:	697b      	ldr	r3, [r7, #20]
 800d28c:	33f4      	adds	r3, #244	; 0xf4
 800d28e:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800d292:	4618      	mov	r0, r3
 800d294:	f009 f97e 	bl	8016594 <_ZN8touchgfx5Gauge8setValueEi>
    COGauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_NEEDLES_ROUGH_ID, 5, 33);
 800d298:	697b      	ldr	r3, [r7, #20]
 800d29a:	f103 00f4 	add.w	r0, r3, #244	; 0xf4
 800d29e:	2321      	movs	r3, #33	; 0x21
 800d2a0:	2205      	movs	r2, #5
 800d2a2:	2103      	movs	r1, #3
 800d2a4:	f009 f932 	bl	801650c <_ZN8touchgfx5Gauge9setNeedleEtss>
    COGauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800d2a8:	697b      	ldr	r3, [r7, #20]
 800d2aa:	33f4      	adds	r3, #244	; 0xf4
 800d2ac:	2101      	movs	r1, #1
 800d2ae:	4618      	mov	r0, r3
 800d2b0:	f009 f8ce 	bl	8016450 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    COGauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800d2b4:	697b      	ldr	r3, [r7, #20]
 800d2b6:	33f4      	adds	r3, #244	; 0xf4
 800d2b8:	2101      	movs	r1, #1
 800d2ba:	4618      	mov	r0, r3
 800d2bc:	f009 f8cb 	bl	8016456 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(COGauge);
 800d2c0:	697a      	ldr	r2, [r7, #20]
 800d2c2:	697b      	ldr	r3, [r7, #20]
 800d2c4:	33f4      	adds	r3, #244	; 0xf4
 800d2c6:	4619      	mov	r1, r3
 800d2c8:	4610      	mov	r0, r2
 800d2ca:	f7fc ff1b 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    CO_text.setXY(76, 8);
 800d2ce:	697b      	ldr	r3, [r7, #20]
 800d2d0:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800d2d4:	2208      	movs	r2, #8
 800d2d6:	214c      	movs	r1, #76	; 0x4c
 800d2d8:	4618      	mov	r0, r3
 800d2da:	f7fc fdc4 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
    CO_text.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
 800d2de:	697b      	ldr	r3, [r7, #20]
 800d2e0:	f503 7425 	add.w	r4, r3, #660	; 0x294
 800d2e4:	23f2      	movs	r3, #242	; 0xf2
 800d2e6:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 800d2ea:	23ae      	movs	r3, #174	; 0xae
 800d2ec:	f887 307a 	strb.w	r3, [r7, #122]	; 0x7a
 800d2f0:	23ae      	movs	r3, #174	; 0xae
 800d2f2:	f887 3079 	strb.w	r3, [r7, #121]	; 0x79
 800d2f6:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 800d2fa:	041b      	lsls	r3, r3, #16
 800d2fc:	461a      	mov	r2, r3
 800d2fe:	f897 307a 	ldrb.w	r3, [r7, #122]	; 0x7a
 800d302:	021b      	lsls	r3, r3, #8
 800d304:	431a      	orrs	r2, r3
 800d306:	f897 3079 	ldrb.w	r3, [r7, #121]	; 0x79
 800d30a:	4313      	orrs	r3, r2
 800d30c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800d310:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800d314:	4611      	mov	r1, r2
 800d316:	4618      	mov	r0, r3
 800d318:	f7fc fca2 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800d31c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800d31e:	67fc      	str	r4, [r7, #124]	; 0x7c
 800d320:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800d322:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800d324:	69ba      	ldr	r2, [r7, #24]
 800d326:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800d328:	bf00      	nop
    CO_text.setLinespacing(0);
 800d32a:	697b      	ldr	r3, [r7, #20]
 800d32c:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800d330:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800d334:	2300      	movs	r3, #0
 800d336:	f8a7 3082 	strh.w	r3, [r7, #130]	; 0x82
        linespace = space;
 800d33a:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800d33e:	f8b7 2082 	ldrh.w	r2, [r7, #130]	; 0x82
 800d342:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800d344:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800d348:	681b      	ldr	r3, [r3, #0]
 800d34a:	3384      	adds	r3, #132	; 0x84
 800d34c:	681b      	ldr	r3, [r3, #0]
 800d34e:	f8d7 4084 	ldr.w	r4, [r7, #132]	; 0x84
 800d352:	463a      	mov	r2, r7
 800d354:	f8d7 1084 	ldr.w	r1, [r7, #132]	; 0x84
 800d358:	4610      	mov	r0, r2
 800d35a:	4798      	blx	r3
 800d35c:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800d360:	463a      	mov	r2, r7
 800d362:	ca07      	ldmia	r2, {r0, r1, r2}
 800d364:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800d368:	bf00      	nop
    CO_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LS7X));
 800d36a:	697b      	ldr	r3, [r7, #20]
 800d36c:	f503 7425 	add.w	r4, r3, #660	; 0x294
 800d370:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800d374:	2106      	movs	r1, #6
 800d376:	4618      	mov	r0, r3
 800d378:	f7fc ff5c 	bl	800a234 <_ZN8touchgfx9TypedTextC1Et>
 800d37c:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800d380:	4619      	mov	r1, r3
 800d382:	4620      	mov	r0, r4
 800d384:	f008 ff9e 	bl	80162c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800d388:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800d38c:	4618      	mov	r0, r3
 800d38e:	f7fc fa7f 	bl	8009890 <_ZN8touchgfx9TypedTextD1Ev>
    add(CO_text);
 800d392:	697a      	ldr	r2, [r7, #20]
 800d394:	697b      	ldr	r3, [r7, #20]
 800d396:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800d39a:	4619      	mov	r1, r3
 800d39c:	4610      	mov	r0, r2
 800d39e:	f7fc feb1 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800d3a2:	697b      	ldr	r3, [r7, #20]
 800d3a4:	4618      	mov	r0, r3
 800d3a6:	378c      	adds	r7, #140	; 0x8c
 800d3a8:	46bd      	mov	sp, r7
 800d3aa:	bd90      	pop	{r4, r7, pc}
 800d3ac:	200022b0 	.word	0x200022b0
 800d3b0:	0802cf54 	.word	0x0802cf54

0800d3b4 <_ZN16COScreenViewBaseD1Ev>:

COScreenViewBase::~COScreenViewBase()
 800d3b4:	b580      	push	{r7, lr}
 800d3b6:	b082      	sub	sp, #8
 800d3b8:	af00      	add	r7, sp, #0
 800d3ba:	6078      	str	r0, [r7, #4]
 800d3bc:	4a15      	ldr	r2, [pc, #84]	; (800d414 <_ZN16COScreenViewBaseD1Ev+0x60>)
 800d3be:	687b      	ldr	r3, [r7, #4]
 800d3c0:	601a      	str	r2, [r3, #0]
 800d3c2:	687b      	ldr	r3, [r7, #4]
 800d3c4:	f503 7339 	add.w	r3, r3, #740	; 0x2e4
 800d3c8:	4618      	mov	r0, r3
 800d3ca:	f000 f88b 	bl	800d4e4 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800d3ce:	687b      	ldr	r3, [r7, #4]
 800d3d0:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800d3d4:	4618      	mov	r0, r3
 800d3d6:	f7fd f881 	bl	800a4dc <_ZN8touchgfx8TextAreaD1Ev>
 800d3da:	687b      	ldr	r3, [r7, #4]
 800d3dc:	33f4      	adds	r3, #244	; 0xf4
 800d3de:	4618      	mov	r0, r3
 800d3e0:	f000 f956 	bl	800d690 <_ZN8touchgfx5GaugeD1Ev>
 800d3e4:	687b      	ldr	r3, [r7, #4]
 800d3e6:	33b8      	adds	r3, #184	; 0xb8
 800d3e8:	4618      	mov	r0, r3
 800d3ea:	f7fd fcb9 	bl	800ad60 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800d3ee:	687b      	ldr	r3, [r7, #4]
 800d3f0:	336c      	adds	r3, #108	; 0x6c
 800d3f2:	4618      	mov	r0, r3
 800d3f4:	f7fd fbe2 	bl	800abbc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800d3f8:	687b      	ldr	r3, [r7, #4]
 800d3fa:	3340      	adds	r3, #64	; 0x40
 800d3fc:	4618      	mov	r0, r3
 800d3fe:	f7fd fc21 	bl	800ac44 <_ZN8touchgfx3BoxD1Ev>
 800d402:	687b      	ldr	r3, [r7, #4]
 800d404:	4618      	mov	r0, r3
 800d406:	f7ff fd81 	bl	800cf0c <_ZN8touchgfx4ViewI17COScreenPresenterED1Ev>
{

}
 800d40a:	687b      	ldr	r3, [r7, #4]
 800d40c:	4618      	mov	r0, r3
 800d40e:	3708      	adds	r7, #8
 800d410:	46bd      	mov	sp, r7
 800d412:	bd80      	pop	{r7, pc}
 800d414:	0802e21c 	.word	0x0802e21c

0800d418 <_ZN16COScreenViewBaseD0Ev>:
COScreenViewBase::~COScreenViewBase()
 800d418:	b580      	push	{r7, lr}
 800d41a:	b082      	sub	sp, #8
 800d41c:	af00      	add	r7, sp, #0
 800d41e:	6078      	str	r0, [r7, #4]
}
 800d420:	6878      	ldr	r0, [r7, #4]
 800d422:	f7ff ffc7 	bl	800d3b4 <_ZN16COScreenViewBaseD1Ev>
 800d426:	f44f 713d 	mov.w	r1, #756	; 0x2f4
 800d42a:	6878      	ldr	r0, [r7, #4]
 800d42c:	f01d f9d7 	bl	802a7de <_ZdlPvj>
 800d430:	687b      	ldr	r3, [r7, #4]
 800d432:	4618      	mov	r0, r3
 800d434:	3708      	adds	r7, #8
 800d436:	46bd      	mov	sp, r7
 800d438:	bd80      	pop	{r7, pc}

0800d43a <_ZN16COScreenViewBase11setupScreenEv>:

void COScreenViewBase::setupScreen()
{
 800d43a:	b480      	push	{r7}
 800d43c:	b083      	sub	sp, #12
 800d43e:	af00      	add	r7, sp, #0
 800d440:	6078      	str	r0, [r7, #4]

}
 800d442:	bf00      	nop
 800d444:	370c      	adds	r7, #12
 800d446:	46bd      	mov	sp, r7
 800d448:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d44c:	4770      	bx	lr

0800d44e <_ZN16COScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void COScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800d44e:	b580      	push	{r7, lr}
 800d450:	b082      	sub	sp, #8
 800d452:	af00      	add	r7, sp, #0
 800d454:	6078      	str	r0, [r7, #4]
 800d456:	6039      	str	r1, [r7, #0]
    if (&src == &back)
 800d458:	687b      	ldr	r3, [r7, #4]
 800d45a:	33b8      	adds	r3, #184	; 0xb8
 800d45c:	683a      	ldr	r2, [r7, #0]
 800d45e:	429a      	cmp	r2, r3
 800d460:	d106      	bne.n	800d470 <_ZN16COScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //COToMain
        //When back clicked change screen to MainScreen
        //Go to MainScreen with screen transition towards West
        application().gotoMainScreenScreenSlideTransitionWest();
 800d462:	6878      	ldr	r0, [r7, #4]
 800d464:	f7ff fd47 	bl	800cef6 <_ZN16COScreenViewBase11applicationEv>
 800d468:	4603      	mov	r3, r0
 800d46a:	4618      	mov	r0, r3
 800d46c:	f7fd ffb8 	bl	800b3e0 <_ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionWestEv>
    }
}
 800d470:	bf00      	nop
 800d472:	3708      	adds	r7, #8
 800d474:	46bd      	mov	sp, r7
 800d476:	bd80      	pop	{r7, pc}

0800d478 <_ZN8touchgfx4ViewI17COScreenPresenterEC1Ev>:
    View()
 800d478:	b580      	push	{r7, lr}
 800d47a:	b082      	sub	sp, #8
 800d47c:	af00      	add	r7, sp, #0
 800d47e:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800d480:	687b      	ldr	r3, [r7, #4]
 800d482:	4618      	mov	r0, r3
 800d484:	f00d fb5c 	bl	801ab40 <_ZN8touchgfx6ScreenC1Ev>
 800d488:	4a05      	ldr	r2, [pc, #20]	; (800d4a0 <_ZN8touchgfx4ViewI17COScreenPresenterEC1Ev+0x28>)
 800d48a:	687b      	ldr	r3, [r7, #4]
 800d48c:	601a      	str	r2, [r3, #0]
 800d48e:	687b      	ldr	r3, [r7, #4]
 800d490:	2200      	movs	r2, #0
 800d492:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800d494:	687b      	ldr	r3, [r7, #4]
 800d496:	4618      	mov	r0, r3
 800d498:	3708      	adds	r7, #8
 800d49a:	46bd      	mov	sp, r7
 800d49c:	bd80      	pop	{r7, pc}
 800d49e:	bf00      	nop
 800d4a0:	0802e268 	.word	0x0802e268

0800d4a4 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800d4a4:	b580      	push	{r7, lr}
 800d4a6:	b084      	sub	sp, #16
 800d4a8:	af00      	add	r7, sp, #0
 800d4aa:	60f8      	str	r0, [r7, #12]
 800d4ac:	60b9      	str	r1, [r7, #8]
 800d4ae:	4639      	mov	r1, r7
 800d4b0:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800d4b4:	68fb      	ldr	r3, [r7, #12]
 800d4b6:	4618      	mov	r0, r3
 800d4b8:	f7fd fb0e 	bl	800aad8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800d4bc:	4a08      	ldr	r2, [pc, #32]	; (800d4e0 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800d4be:	68fb      	ldr	r3, [r7, #12]
 800d4c0:	601a      	str	r2, [r3, #0]
 800d4c2:	68fb      	ldr	r3, [r7, #12]
 800d4c4:	68ba      	ldr	r2, [r7, #8]
 800d4c6:	605a      	str	r2, [r3, #4]
 800d4c8:	68fb      	ldr	r3, [r7, #12]
 800d4ca:	3308      	adds	r3, #8
 800d4cc:	463a      	mov	r2, r7
 800d4ce:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d4d2:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800d4d6:	68fb      	ldr	r3, [r7, #12]
 800d4d8:	4618      	mov	r0, r3
 800d4da:	3710      	adds	r7, #16
 800d4dc:	46bd      	mov	sp, r7
 800d4de:	bd80      	pop	{r7, pc}
 800d4e0:	0802e250 	.word	0x0802e250

0800d4e4 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800d4e4:	b580      	push	{r7, lr}
 800d4e6:	b082      	sub	sp, #8
 800d4e8:	af00      	add	r7, sp, #0
 800d4ea:	6078      	str	r0, [r7, #4]
 800d4ec:	4a05      	ldr	r2, [pc, #20]	; (800d504 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800d4ee:	687b      	ldr	r3, [r7, #4]
 800d4f0:	601a      	str	r2, [r3, #0]
 800d4f2:	687b      	ldr	r3, [r7, #4]
 800d4f4:	4618      	mov	r0, r3
 800d4f6:	f7fd fb1f 	bl	800ab38 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800d4fa:	687b      	ldr	r3, [r7, #4]
 800d4fc:	4618      	mov	r0, r3
 800d4fe:	3708      	adds	r7, #8
 800d500:	46bd      	mov	sp, r7
 800d502:	bd80      	pop	{r7, pc}
 800d504:	0802e250 	.word	0x0802e250

0800d508 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800d508:	b580      	push	{r7, lr}
 800d50a:	b082      	sub	sp, #8
 800d50c:	af00      	add	r7, sp, #0
 800d50e:	6078      	str	r0, [r7, #4]
 800d510:	6878      	ldr	r0, [r7, #4]
 800d512:	f7ff ffe7 	bl	800d4e4 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800d516:	2110      	movs	r1, #16
 800d518:	6878      	ldr	r0, [r7, #4]
 800d51a:	f01d f960 	bl	802a7de <_ZdlPvj>
 800d51e:	687b      	ldr	r3, [r7, #4]
 800d520:	4618      	mov	r0, r3
 800d522:	3708      	adds	r7, #8
 800d524:	46bd      	mov	sp, r7
 800d526:	bd80      	pop	{r7, pc}

0800d528 <_ZN8touchgfx5ImageD1Ev>:
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 800d528:	b580      	push	{r7, lr}
 800d52a:	b082      	sub	sp, #8
 800d52c:	af00      	add	r7, sp, #0
 800d52e:	6078      	str	r0, [r7, #4]
 800d530:	4a05      	ldr	r2, [pc, #20]	; (800d548 <_ZN8touchgfx5ImageD1Ev+0x20>)
 800d532:	687b      	ldr	r3, [r7, #4]
 800d534:	601a      	str	r2, [r3, #0]
 800d536:	687b      	ldr	r3, [r7, #4]
 800d538:	4618      	mov	r0, r3
 800d53a:	f7fc fe27 	bl	800a18c <_ZN8touchgfx6WidgetD1Ev>
 800d53e:	687b      	ldr	r3, [r7, #4]
 800d540:	4618      	mov	r0, r3
 800d542:	3708      	adds	r7, #8
 800d544:	46bd      	mov	sp, r7
 800d546:	bd80      	pop	{r7, pc}
 800d548:	0802f910 	.word	0x0802f910

0800d54c <_ZN8touchgfx5ImageD0Ev>:
 800d54c:	b580      	push	{r7, lr}
 800d54e:	b082      	sub	sp, #8
 800d550:	af00      	add	r7, sp, #0
 800d552:	6078      	str	r0, [r7, #4]
 800d554:	6878      	ldr	r0, [r7, #4]
 800d556:	f7ff ffe7 	bl	800d528 <_ZN8touchgfx5ImageD1Ev>
 800d55a:	212c      	movs	r1, #44	; 0x2c
 800d55c:	6878      	ldr	r0, [r7, #4]
 800d55e:	f01d f93e 	bl	802a7de <_ZdlPvj>
 800d562:	687b      	ldr	r3, [r7, #4]
 800d564:	4618      	mov	r0, r3
 800d566:	3708      	adds	r7, #8
 800d568:	46bd      	mov	sp, r7
 800d56a:	bd80      	pop	{r7, pc}

0800d56c <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 * to implement a progress indicator. For more specific implementations see classes that
 * inherit from AbstractProgressIndicator.
 *
 * @see BoxProgress, CircleProgress, ImageProgress, LineProgress, TextProgress
 */
class AbstractProgressIndicator : public Container
 800d56c:	b580      	push	{r7, lr}
 800d56e:	b082      	sub	sp, #8
 800d570:	af00      	add	r7, sp, #0
 800d572:	6078      	str	r0, [r7, #4]
 800d574:	4a0a      	ldr	r2, [pc, #40]	; (800d5a0 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev+0x34>)
 800d576:	687b      	ldr	r3, [r7, #4]
 800d578:	601a      	str	r2, [r3, #0]
 800d57a:	687b      	ldr	r3, [r7, #4]
 800d57c:	3358      	adds	r3, #88	; 0x58
 800d57e:	4618      	mov	r0, r3
 800d580:	f7fd fb3e 	bl	800ac00 <_ZN8touchgfx9ContainerD1Ev>
 800d584:	687b      	ldr	r3, [r7, #4]
 800d586:	332c      	adds	r3, #44	; 0x2c
 800d588:	4618      	mov	r0, r3
 800d58a:	f7ff ffcd 	bl	800d528 <_ZN8touchgfx5ImageD1Ev>
 800d58e:	687b      	ldr	r3, [r7, #4]
 800d590:	4618      	mov	r0, r3
 800d592:	f7fd fb35 	bl	800ac00 <_ZN8touchgfx9ContainerD1Ev>
 800d596:	687b      	ldr	r3, [r7, #4]
 800d598:	4618      	mov	r0, r3
 800d59a:	3708      	adds	r7, #8
 800d59c:	46bd      	mov	sp, r7
 800d59e:	bd80      	pop	{r7, pc}
 800d5a0:	0802ed44 	.word	0x0802ed44

0800d5a4 <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800d5a4:	b580      	push	{r7, lr}
 800d5a6:	b082      	sub	sp, #8
 800d5a8:	af00      	add	r7, sp, #0
 800d5aa:	6078      	str	r0, [r7, #4]
 800d5ac:	6878      	ldr	r0, [r7, #4]
 800d5ae:	f7ff ffdd 	bl	800d56c <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>
 800d5b2:	21b4      	movs	r1, #180	; 0xb4
 800d5b4:	6878      	ldr	r0, [r7, #4]
 800d5b6:	f01d f912 	bl	802a7de <_ZdlPvj>
 800d5ba:	687b      	ldr	r3, [r7, #4]
 800d5bc:	4618      	mov	r0, r3
 800d5be:	3708      	adds	r7, #8
 800d5c0:	46bd      	mov	sp, r7
 800d5c2:	bd80      	pop	{r7, pc}

0800d5c4 <_ZN8touchgfx13TextureMapperD1Ev>:
 * @note The drawing of this widget is not trivial and typically has a significant performance
 *       penalty. The number of pixels drawn, the presence of global alpha or per pixel alpha
 *       inflicts the computation and should be considered.
 * @note This widget does not support 1 bit per pixel color depth.
 */
class TextureMapper : public Image
 800d5c4:	b580      	push	{r7, lr}
 800d5c6:	b082      	sub	sp, #8
 800d5c8:	af00      	add	r7, sp, #0
 800d5ca:	6078      	str	r0, [r7, #4]
 800d5cc:	4a05      	ldr	r2, [pc, #20]	; (800d5e4 <_ZN8touchgfx13TextureMapperD1Ev+0x20>)
 800d5ce:	687b      	ldr	r3, [r7, #4]
 800d5d0:	601a      	str	r2, [r3, #0]
 800d5d2:	687b      	ldr	r3, [r7, #4]
 800d5d4:	4618      	mov	r0, r3
 800d5d6:	f7ff ffa7 	bl	800d528 <_ZN8touchgfx5ImageD1Ev>
 800d5da:	687b      	ldr	r3, [r7, #4]
 800d5dc:	4618      	mov	r0, r3
 800d5de:	3708      	adds	r7, #8
 800d5e0:	46bd      	mov	sp, r7
 800d5e2:	bd80      	pop	{r7, pc}
 800d5e4:	0802f3c8 	.word	0x0802f3c8

0800d5e8 <_ZN8touchgfx13TextureMapperD0Ev>:
 800d5e8:	b580      	push	{r7, lr}
 800d5ea:	b082      	sub	sp, #8
 800d5ec:	af00      	add	r7, sp, #0
 800d5ee:	6078      	str	r0, [r7, #4]
 800d5f0:	6878      	ldr	r0, [r7, #4]
 800d5f2:	f7ff ffe7 	bl	800d5c4 <_ZN8touchgfx13TextureMapperD1Ev>
 800d5f6:	2190      	movs	r1, #144	; 0x90
 800d5f8:	6878      	ldr	r0, [r7, #4]
 800d5fa:	f01d f8f0 	bl	802a7de <_ZdlPvj>
 800d5fe:	687b      	ldr	r3, [r7, #4]
 800d600:	4618      	mov	r0, r3
 800d602:	3708      	adds	r7, #8
 800d604:	46bd      	mov	sp, r7
 800d606:	bd80      	pop	{r7, pc}

0800d608 <_ZN8touchgfx12CanvasWidgetD1Ev>:
 * Class for drawing complex polygons on the display using CanvasWidgetRenderer. The
 * CanvasWidget is used by passing it to a Canvas object, drawing the outline of the
 * object and then having CanvasWidget render the outline on the display using the
 * assigned painter.
 */
class CanvasWidget : public Widget
 800d608:	b580      	push	{r7, lr}
 800d60a:	b082      	sub	sp, #8
 800d60c:	af00      	add	r7, sp, #0
 800d60e:	6078      	str	r0, [r7, #4]
 800d610:	4a05      	ldr	r2, [pc, #20]	; (800d628 <_ZN8touchgfx12CanvasWidgetD1Ev+0x20>)
 800d612:	687b      	ldr	r3, [r7, #4]
 800d614:	601a      	str	r2, [r3, #0]
 800d616:	687b      	ldr	r3, [r7, #4]
 800d618:	4618      	mov	r0, r3
 800d61a:	f7fc fdb7 	bl	800a18c <_ZN8touchgfx6WidgetD1Ev>
 800d61e:	687b      	ldr	r3, [r7, #4]
 800d620:	4618      	mov	r0, r3
 800d622:	3708      	adds	r7, #8
 800d624:	46bd      	mov	sp, r7
 800d626:	bd80      	pop	{r7, pc}
 800d628:	0802f2e0 	.word	0x0802f2e0

0800d62c <_ZN8touchgfx12CanvasWidgetD0Ev>:
 800d62c:	b580      	push	{r7, lr}
 800d62e:	b082      	sub	sp, #8
 800d630:	af00      	add	r7, sp, #0
 800d632:	6078      	str	r0, [r7, #4]
 800d634:	6878      	ldr	r0, [r7, #4]
 800d636:	f7ff ffe7 	bl	800d608 <_ZN8touchgfx12CanvasWidgetD1Ev>
 800d63a:	212c      	movs	r1, #44	; 0x2c
 800d63c:	6878      	ldr	r0, [r7, #4]
 800d63e:	f01d f8ce 	bl	802a7de <_ZdlPvj>
 800d642:	687b      	ldr	r3, [r7, #4]
 800d644:	4618      	mov	r0, r3
 800d646:	3708      	adds	r7, #8
 800d648:	46bd      	mov	sp, r7
 800d64a:	bd80      	pop	{r7, pc}

0800d64c <_ZN8touchgfx6CircleD1Ev>:
 *            int x, y, r;
 *            circle.getCenter(&x, &y); // Will return (1, 1)
 *            circle.getRadius(&r); // Will return 0
 *       @endcode.
 */
class Circle : public CanvasWidget
 800d64c:	b580      	push	{r7, lr}
 800d64e:	b082      	sub	sp, #8
 800d650:	af00      	add	r7, sp, #0
 800d652:	6078      	str	r0, [r7, #4]
 800d654:	4a05      	ldr	r2, [pc, #20]	; (800d66c <_ZN8touchgfx6CircleD1Ev+0x20>)
 800d656:	687b      	ldr	r3, [r7, #4]
 800d658:	601a      	str	r2, [r3, #0]
 800d65a:	687b      	ldr	r3, [r7, #4]
 800d65c:	4618      	mov	r0, r3
 800d65e:	f7ff ffd3 	bl	800d608 <_ZN8touchgfx12CanvasWidgetD1Ev>
 800d662:	687b      	ldr	r3, [r7, #4]
 800d664:	4618      	mov	r0, r3
 800d666:	3708      	adds	r7, #8
 800d668:	46bd      	mov	sp, r7
 800d66a:	bd80      	pop	{r7, pc}
 800d66c:	0802f268 	.word	0x0802f268

0800d670 <_ZN8touchgfx6CircleD0Ev>:
 800d670:	b580      	push	{r7, lr}
 800d672:	b082      	sub	sp, #8
 800d674:	af00      	add	r7, sp, #0
 800d676:	6078      	str	r0, [r7, #4]
 800d678:	6878      	ldr	r0, [r7, #4]
 800d67a:	f7ff ffe7 	bl	800d64c <_ZN8touchgfx6CircleD1Ev>
 800d67e:	2148      	movs	r1, #72	; 0x48
 800d680:	6878      	ldr	r0, [r7, #4]
 800d682:	f01d f8ac 	bl	802a7de <_ZdlPvj>
 800d686:	687b      	ldr	r3, [r7, #4]
 800d688:	4618      	mov	r0, r3
 800d68a:	3708      	adds	r7, #8
 800d68c:	46bd      	mov	sp, r7
 800d68e:	bd80      	pop	{r7, pc}

0800d690 <_ZN8touchgfx5GaugeD1Ev>:
 * Much like a progress indicator, the minimum and maximum value of the Gauge, as well as steps
 * can be set. For more information on this, consult the documentation on ProgressIndicators.
 *
 * A Gauge has a needle and optionally an arc that follows the needle.
 */
class Gauge : public AbstractProgressIndicator
 800d690:	b580      	push	{r7, lr}
 800d692:	b082      	sub	sp, #8
 800d694:	af00      	add	r7, sp, #0
 800d696:	6078      	str	r0, [r7, #4]
 800d698:	4a0b      	ldr	r2, [pc, #44]	; (800d6c8 <_ZN8touchgfx5GaugeD1Ev+0x38>)
 800d69a:	687b      	ldr	r3, [r7, #4]
 800d69c:	601a      	str	r2, [r3, #0]
 800d69e:	687b      	ldr	r3, [r7, #4]
 800d6a0:	f503 73ac 	add.w	r3, r3, #344	; 0x158
 800d6a4:	4618      	mov	r0, r3
 800d6a6:	f7ff ffd1 	bl	800d64c <_ZN8touchgfx6CircleD1Ev>
 800d6aa:	687b      	ldr	r3, [r7, #4]
 800d6ac:	33b4      	adds	r3, #180	; 0xb4
 800d6ae:	4618      	mov	r0, r3
 800d6b0:	f7ff ff88 	bl	800d5c4 <_ZN8touchgfx13TextureMapperD1Ev>
 800d6b4:	687b      	ldr	r3, [r7, #4]
 800d6b6:	4618      	mov	r0, r3
 800d6b8:	f7ff ff58 	bl	800d56c <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>
 800d6bc:	687b      	ldr	r3, [r7, #4]
 800d6be:	4618      	mov	r0, r3
 800d6c0:	3708      	adds	r7, #8
 800d6c2:	46bd      	mov	sp, r7
 800d6c4:	bd80      	pop	{r7, pc}
 800d6c6:	bf00      	nop
 800d6c8:	0802f644 	.word	0x0802f644

0800d6cc <_ZN8touchgfx5GaugeD0Ev>:
 800d6cc:	b580      	push	{r7, lr}
 800d6ce:	b082      	sub	sp, #8
 800d6d0:	af00      	add	r7, sp, #0
 800d6d2:	6078      	str	r0, [r7, #4]
 800d6d4:	6878      	ldr	r0, [r7, #4]
 800d6d6:	f7ff ffdb 	bl	800d690 <_ZN8touchgfx5GaugeD1Ev>
 800d6da:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 800d6de:	6878      	ldr	r0, [r7, #4]
 800d6e0:	f01d f87d 	bl	802a7de <_ZdlPvj>
 800d6e4:	687b      	ldr	r3, [r7, #4]
 800d6e6:	4618      	mov	r0, r3
 800d6e8:	3708      	adds	r7, #8
 800d6ea:	46bd      	mov	sp, r7
 800d6ec:	bd80      	pop	{r7, pc}

0800d6ee <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800d6ee:	b580      	push	{r7, lr}
 800d6f0:	b082      	sub	sp, #8
 800d6f2:	af00      	add	r7, sp, #0
 800d6f4:	6078      	str	r0, [r7, #4]
 800d6f6:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800d6f8:	687b      	ldr	r3, [r7, #4]
 800d6fa:	685b      	ldr	r3, [r3, #4]
 800d6fc:	687a      	ldr	r2, [r7, #4]
 800d6fe:	68d2      	ldr	r2, [r2, #12]
 800d700:	1052      	asrs	r2, r2, #1
 800d702:	1898      	adds	r0, r3, r2
 800d704:	687b      	ldr	r3, [r7, #4]
 800d706:	68db      	ldr	r3, [r3, #12]
 800d708:	f003 0301 	and.w	r3, r3, #1
 800d70c:	2b00      	cmp	r3, #0
 800d70e:	d102      	bne.n	800d716 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800d710:	687b      	ldr	r3, [r7, #4]
 800d712:	689b      	ldr	r3, [r3, #8]
 800d714:	e00a      	b.n	800d72c <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800d716:	687b      	ldr	r3, [r7, #4]
 800d718:	685b      	ldr	r3, [r3, #4]
 800d71a:	687a      	ldr	r2, [r7, #4]
 800d71c:	68d2      	ldr	r2, [r2, #12]
 800d71e:	1052      	asrs	r2, r2, #1
 800d720:	4413      	add	r3, r2
 800d722:	681b      	ldr	r3, [r3, #0]
 800d724:	687a      	ldr	r2, [r7, #4]
 800d726:	6892      	ldr	r2, [r2, #8]
 800d728:	4413      	add	r3, r2
 800d72a:	681b      	ldr	r3, [r3, #0]
 800d72c:	6839      	ldr	r1, [r7, #0]
 800d72e:	4798      	blx	r3
    }
 800d730:	bf00      	nop
 800d732:	3708      	adds	r7, #8
 800d734:	46bd      	mov	sp, r7
 800d736:	bd80      	pop	{r7, pc}

0800d738 <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800d738:	b480      	push	{r7}
 800d73a:	b083      	sub	sp, #12
 800d73c:	af00      	add	r7, sp, #0
 800d73e:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800d740:	687b      	ldr	r3, [r7, #4]
 800d742:	685b      	ldr	r3, [r3, #4]
 800d744:	2b00      	cmp	r3, #0
 800d746:	d010      	beq.n	800d76a <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800d748:	687b      	ldr	r3, [r7, #4]
 800d74a:	689b      	ldr	r3, [r3, #8]
 800d74c:	2b00      	cmp	r3, #0
 800d74e:	d107      	bne.n	800d760 <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800d750:	687b      	ldr	r3, [r7, #4]
 800d752:	68db      	ldr	r3, [r3, #12]
 800d754:	f003 0301 	and.w	r3, r3, #1
 800d758:	2b00      	cmp	r3, #0
 800d75a:	d101      	bne.n	800d760 <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800d75c:	2301      	movs	r3, #1
 800d75e:	e000      	b.n	800d762 <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800d760:	2300      	movs	r3, #0
 800d762:	2b01      	cmp	r3, #1
 800d764:	d001      	beq.n	800d76a <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800d766:	2301      	movs	r3, #1
 800d768:	e000      	b.n	800d76c <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800d76a:	2300      	movs	r3, #0
    }
 800d76c:	4618      	mov	r0, r3
 800d76e:	370c      	adds	r7, #12
 800d770:	46bd      	mov	sp, r7
 800d772:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d776:	4770      	bx	lr

0800d778 <_ZN8touchgfx9colortypeC1Ev>:
    colortype()
 800d778:	b480      	push	{r7}
 800d77a:	b083      	sub	sp, #12
 800d77c:	af00      	add	r7, sp, #0
 800d77e:	6078      	str	r0, [r7, #4]
        : color(0)
 800d780:	687b      	ldr	r3, [r7, #4]
 800d782:	2200      	movs	r2, #0
 800d784:	601a      	str	r2, [r3, #0]
    }
 800d786:	687b      	ldr	r3, [r7, #4]
 800d788:	4618      	mov	r0, r3
 800d78a:	370c      	adds	r7, #12
 800d78c:	46bd      	mov	sp, r7
 800d78e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d792:	4770      	bx	lr

0800d794 <_ZNK8touchgfx10ClickEvent7getTypeEv>:
    /**
     * Gets the click type of this event.
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
 800d794:	b480      	push	{r7}
 800d796:	b083      	sub	sp, #12
 800d798:	af00      	add	r7, sp, #0
 800d79a:	6078      	str	r0, [r7, #4]
    {
        return clickEventType;
 800d79c:	687b      	ldr	r3, [r7, #4]
 800d79e:	791b      	ldrb	r3, [r3, #4]
    }
 800d7a0:	4618      	mov	r0, r3
 800d7a2:	370c      	adds	r7, #12
 800d7a4:	46bd      	mov	sp, r7
 800d7a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7aa:	4770      	bx	lr

0800d7ac <_ZN8touchgfx8Drawable12setTouchableEb>:
    void setTouchable(bool touch)
 800d7ac:	b480      	push	{r7}
 800d7ae:	b083      	sub	sp, #12
 800d7b0:	af00      	add	r7, sp, #0
 800d7b2:	6078      	str	r0, [r7, #4]
 800d7b4:	460b      	mov	r3, r1
 800d7b6:	70fb      	strb	r3, [r7, #3]
        touchable = touch;
 800d7b8:	687b      	ldr	r3, [r7, #4]
 800d7ba:	78fa      	ldrb	r2, [r7, #3]
 800d7bc:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
    }
 800d7c0:	bf00      	nop
 800d7c2:	370c      	adds	r7, #12
 800d7c4:	46bd      	mov	sp, r7
 800d7c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7ca:	4770      	bx	lr

0800d7cc <_ZN8touchgfx9ContainerC1Ev>:
{
public:
    Container()
 800d7cc:	b580      	push	{r7, lr}
 800d7ce:	b082      	sub	sp, #8
 800d7d0:	af00      	add	r7, sp, #0
 800d7d2:	6078      	str	r0, [r7, #4]
        : Drawable(),
          firstChild(0)
 800d7d4:	687b      	ldr	r3, [r7, #4]
 800d7d6:	4618      	mov	r0, r3
 800d7d8:	f7fc fa98 	bl	8009d0c <_ZN8touchgfx8DrawableC1Ev>
 800d7dc:	4a05      	ldr	r2, [pc, #20]	; (800d7f4 <_ZN8touchgfx9ContainerC1Ev+0x28>)
 800d7de:	687b      	ldr	r3, [r7, #4]
 800d7e0:	601a      	str	r2, [r3, #0]
 800d7e2:	687b      	ldr	r3, [r7, #4]
 800d7e4:	2200      	movs	r2, #0
 800d7e6:	629a      	str	r2, [r3, #40]	; 0x28
    {
    }
 800d7e8:	687b      	ldr	r3, [r7, #4]
 800d7ea:	4618      	mov	r0, r3
 800d7ec:	3708      	adds	r7, #8
 800d7ee:	46bd      	mov	sp, r7
 800d7f0:	bd80      	pop	{r7, pc}
 800d7f2:	bf00      	nop
 800d7f4:	0802efc8 	.word	0x0802efc8

0800d7f8 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @return Pointer to the first drawable added to this container. If nothing has been
     *         added return zero.
     *
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
 800d7f8:	b480      	push	{r7}
 800d7fa:	b083      	sub	sp, #12
 800d7fc:	af00      	add	r7, sp, #0
 800d7fe:	6078      	str	r0, [r7, #4]
    {
        return firstChild;
 800d800:	687b      	ldr	r3, [r7, #4]
 800d802:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 800d804:	4618      	mov	r0, r3
 800d806:	370c      	adds	r7, #12
 800d808:	46bd      	mov	sp, r7
 800d80a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d80e:	4770      	bx	lr

0800d810 <_ZN8touchgfx3Box8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
 800d810:	b480      	push	{r7}
 800d812:	b083      	sub	sp, #12
 800d814:	af00      	add	r7, sp, #0
 800d816:	6078      	str	r0, [r7, #4]
 800d818:	460b      	mov	r3, r1
 800d81a:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800d81c:	687b      	ldr	r3, [r7, #4]
 800d81e:	78fa      	ldrb	r2, [r7, #3]
 800d820:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
    }
 800d824:	bf00      	nop
 800d826:	370c      	adds	r7, #12
 800d828:	46bd      	mov	sp, r7
 800d82a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d82e:	4770      	bx	lr

0800d830 <_ZN8touchgfx23AbstractButtonContainerC1Ev>:
 * @see ClickButtonTrigger, RepeatButtonTrigger, ToggleButtonTrigger, TouchButtonTrigger
 */
class AbstractButtonContainer : public Container
{
public:
    AbstractButtonContainer()
 800d830:	b580      	push	{r7, lr}
 800d832:	b082      	sub	sp, #8
 800d834:	af00      	add	r7, sp, #0
 800d836:	6078      	str	r0, [r7, #4]
        : pressed(false), alpha(255), action(0)
 800d838:	687b      	ldr	r3, [r7, #4]
 800d83a:	4618      	mov	r0, r3
 800d83c:	f7ff ffc6 	bl	800d7cc <_ZN8touchgfx9ContainerC1Ev>
 800d840:	4a0b      	ldr	r2, [pc, #44]	; (800d870 <_ZN8touchgfx23AbstractButtonContainerC1Ev+0x40>)
 800d842:	687b      	ldr	r3, [r7, #4]
 800d844:	601a      	str	r2, [r3, #0]
 800d846:	687b      	ldr	r3, [r7, #4]
 800d848:	2200      	movs	r2, #0
 800d84a:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800d84e:	687b      	ldr	r3, [r7, #4]
 800d850:	22ff      	movs	r2, #255	; 0xff
 800d852:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800d856:	687b      	ldr	r3, [r7, #4]
 800d858:	2200      	movs	r2, #0
 800d85a:	631a      	str	r2, [r3, #48]	; 0x30
    {
        setTouchable(true);
 800d85c:	687b      	ldr	r3, [r7, #4]
 800d85e:	2101      	movs	r1, #1
 800d860:	4618      	mov	r0, r3
 800d862:	f7ff ffa3 	bl	800d7ac <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800d866:	687b      	ldr	r3, [r7, #4]
 800d868:	4618      	mov	r0, r3
 800d86a:	3708      	adds	r7, #8
 800d86c:	46bd      	mov	sp, r7
 800d86e:	bd80      	pop	{r7, pc}
 800d870:	0802e46c 	.word	0x0802e46c

0800d874 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>:
     *
     * @param  isPressed True if is pressed, false if not.
     *
     * @see getPressed, handlePressedUpdated
     */
    void setPressed(bool isPressed)
 800d874:	b580      	push	{r7, lr}
 800d876:	b082      	sub	sp, #8
 800d878:	af00      	add	r7, sp, #0
 800d87a:	6078      	str	r0, [r7, #4]
 800d87c:	460b      	mov	r3, r1
 800d87e:	70fb      	strb	r3, [r7, #3]
    {
        pressed = isPressed;
 800d880:	687b      	ldr	r3, [r7, #4]
 800d882:	78fa      	ldrb	r2, [r7, #3]
 800d884:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
        handlePressedUpdated();
 800d888:	687b      	ldr	r3, [r7, #4]
 800d88a:	681b      	ldr	r3, [r3, #0]
 800d88c:	338c      	adds	r3, #140	; 0x8c
 800d88e:	681b      	ldr	r3, [r3, #0]
 800d890:	6878      	ldr	r0, [r7, #4]
 800d892:	4798      	blx	r3
    }
 800d894:	bf00      	nop
 800d896:	3708      	adds	r7, #8
 800d898:	46bd      	mov	sp, r7
 800d89a:	bd80      	pop	{r7, pc}

0800d89c <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>:
     *
     * @return True if it succeeds, false if it fails.
     *
     * @see setPressed
     */
    bool getPressed()
 800d89c:	b480      	push	{r7}
 800d89e:	b083      	sub	sp, #12
 800d8a0:	af00      	add	r7, sp, #0
 800d8a2:	6078      	str	r0, [r7, #4]
    {
        return pressed;
 800d8a4:	687b      	ldr	r3, [r7, #4]
 800d8a6:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
    }
 800d8aa:	4618      	mov	r0, r3
 800d8ac:	370c      	adds	r7, #12
 800d8ae:	46bd      	mov	sp, r7
 800d8b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8b4:	4770      	bx	lr

0800d8b6 <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>:
        alpha = newAlpha;
        handleAlphaUpdated();
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
 800d8b6:	b480      	push	{r7}
 800d8b8:	b083      	sub	sp, #12
 800d8ba:	af00      	add	r7, sp, #0
 800d8bc:	6078      	str	r0, [r7, #4]
    {
        return alpha;
 800d8be:	687b      	ldr	r3, [r7, #4]
 800d8c0:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
    }
 800d8c4:	4618      	mov	r0, r3
 800d8c6:	370c      	adds	r7, #12
 800d8c8:	46bd      	mov	sp, r7
 800d8ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8ce:	4770      	bx	lr

0800d8d0 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     *
     * @param  callback The callback.
     *
     * @see executeAction
     */
    void setAction(GenericCallback<const AbstractButtonContainer&>& callback)
 800d8d0:	b480      	push	{r7}
 800d8d2:	b083      	sub	sp, #12
 800d8d4:	af00      	add	r7, sp, #0
 800d8d6:	6078      	str	r0, [r7, #4]
 800d8d8:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800d8da:	687b      	ldr	r3, [r7, #4]
 800d8dc:	683a      	ldr	r2, [r7, #0]
 800d8de:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800d8e0:	bf00      	nop
 800d8e2:	370c      	adds	r7, #12
 800d8e4:	46bd      	mov	sp, r7
 800d8e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8ea:	4770      	bx	lr

0800d8ec <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 800d8ec:	b580      	push	{r7, lr}
 800d8ee:	b082      	sub	sp, #8
 800d8f0:	af00      	add	r7, sp, #0
 800d8f2:	6078      	str	r0, [r7, #4]
    {
        if (action && action->isValid())
 800d8f4:	687b      	ldr	r3, [r7, #4]
 800d8f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d8f8:	2b00      	cmp	r3, #0
 800d8fa:	d00d      	beq.n	800d918 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800d8fc:	687b      	ldr	r3, [r7, #4]
 800d8fe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800d900:	687b      	ldr	r3, [r7, #4]
 800d902:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d904:	681b      	ldr	r3, [r3, #0]
 800d906:	330c      	adds	r3, #12
 800d908:	681b      	ldr	r3, [r3, #0]
 800d90a:	4610      	mov	r0, r2
 800d90c:	4798      	blx	r3
 800d90e:	4603      	mov	r3, r0
 800d910:	2b00      	cmp	r3, #0
 800d912:	d001      	beq.n	800d918 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800d914:	2301      	movs	r3, #1
 800d916:	e000      	b.n	800d91a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2e>
 800d918:	2300      	movs	r3, #0
 800d91a:	2b00      	cmp	r3, #0
 800d91c:	d009      	beq.n	800d932 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x46>
        {
            action->execute(*this);
 800d91e:	687b      	ldr	r3, [r7, #4]
 800d920:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800d922:	687b      	ldr	r3, [r7, #4]
 800d924:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d926:	681b      	ldr	r3, [r3, #0]
 800d928:	3308      	adds	r3, #8
 800d92a:	681b      	ldr	r3, [r3, #0]
 800d92c:	6879      	ldr	r1, [r7, #4]
 800d92e:	4610      	mov	r0, r2
 800d930:	4798      	blx	r3
        }
    }
 800d932:	bf00      	nop
 800d934:	3708      	adds	r7, #8
 800d936:	46bd      	mov	sp, r7
 800d938:	bd80      	pop	{r7, pc}

0800d93a <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>:
    uint8_t alpha; ///< The current alpha value. 255 denotes solid, 0 denotes completely invisible.

    GenericCallback<const AbstractButtonContainer&>* action; ///< The action to be executed

    /** Handles what should happen when the pressed state is updated. */
    virtual void handlePressedUpdated()
 800d93a:	b480      	push	{r7}
 800d93c:	b083      	sub	sp, #12
 800d93e:	af00      	add	r7, sp, #0
 800d940:	6078      	str	r0, [r7, #4]
    {
    }
 800d942:	bf00      	nop
 800d944:	370c      	adds	r7, #12
 800d946:	46bd      	mov	sp, r7
 800d948:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d94c:	4770      	bx	lr

0800d94e <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>:

    /** Handles what should happen when the alpha is updated. */
    virtual void handleAlphaUpdated()
 800d94e:	b480      	push	{r7}
 800d950:	b083      	sub	sp, #12
 800d952:	af00      	add	r7, sp, #0
 800d954:	6078      	str	r0, [r7, #4]
    {
    }
 800d956:	bf00      	nop
 800d958:	370c      	adds	r7, #12
 800d95a:	46bd      	mov	sp, r7
 800d95c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d960:	4770      	bx	lr
	...

0800d964 <_ZN8touchgfx13BoxWithBorderC1Ev>:
 * BoxWithBorder will function just like a Box.
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
 800d964:	b580      	push	{r7, lr}
 800d966:	b082      	sub	sp, #8
 800d968:	af00      	add	r7, sp, #0
 800d96a:	6078      	str	r0, [r7, #4]
        : Box(), borderColor(0), borderSize(0)
 800d96c:	687b      	ldr	r3, [r7, #4]
 800d96e:	4618      	mov	r0, r3
 800d970:	f7fc fc2e 	bl	800a1d0 <_ZN8touchgfx3BoxC1Ev>
 800d974:	4a08      	ldr	r2, [pc, #32]	; (800d998 <_ZN8touchgfx13BoxWithBorderC1Ev+0x34>)
 800d976:	687b      	ldr	r3, [r7, #4]
 800d978:	601a      	str	r2, [r3, #0]
 800d97a:	687b      	ldr	r3, [r7, #4]
 800d97c:	332c      	adds	r3, #44	; 0x2c
 800d97e:	2100      	movs	r1, #0
 800d980:	4618      	mov	r0, r3
 800d982:	f7fc f96d 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800d986:	687b      	ldr	r3, [r7, #4]
 800d988:	2200      	movs	r2, #0
 800d98a:	861a      	strh	r2, [r3, #48]	; 0x30
    {
    }
 800d98c:	687b      	ldr	r3, [r7, #4]
 800d98e:	4618      	mov	r0, r3
 800d990:	3708      	adds	r7, #8
 800d992:	46bd      	mov	sp, r7
 800d994:	bd80      	pop	{r7, pc}
 800d996:	bf00      	nop
 800d998:	0802f830 	.word	0x0802f830

0800d99c <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>:
     *
     * @param  colorBorder The color of the border.
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
 800d99c:	b480      	push	{r7}
 800d99e:	b083      	sub	sp, #12
 800d9a0:	af00      	add	r7, sp, #0
 800d9a2:	6078      	str	r0, [r7, #4]
 800d9a4:	6039      	str	r1, [r7, #0]
    {
        borderColor = colorBorder;
 800d9a6:	687b      	ldr	r3, [r7, #4]
 800d9a8:	683a      	ldr	r2, [r7, #0]
 800d9aa:	62da      	str	r2, [r3, #44]	; 0x2c
    }
 800d9ac:	bf00      	nop
 800d9ae:	370c      	adds	r7, #12
 800d9b0:	46bd      	mov	sp, r7
 800d9b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9b6:	4770      	bx	lr

0800d9b8 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>:
     *
     * @param  size The width of the border.
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
 800d9b8:	b480      	push	{r7}
 800d9ba:	b083      	sub	sp, #12
 800d9bc:	af00      	add	r7, sp, #0
 800d9be:	6078      	str	r0, [r7, #4]
 800d9c0:	460b      	mov	r3, r1
 800d9c2:	807b      	strh	r3, [r7, #2]
    {
        borderSize = size;
 800d9c4:	687b      	ldr	r3, [r7, #4]
 800d9c6:	887a      	ldrh	r2, [r7, #2]
 800d9c8:	861a      	strh	r2, [r3, #48]	; 0x30
    }
 800d9ca:	bf00      	nop
 800d9cc:	370c      	adds	r7, #12
 800d9ce:	46bd      	mov	sp, r7
 800d9d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9d4:	4770      	bx	lr

0800d9d6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800d9d6:	b580      	push	{r7, lr}
 800d9d8:	b084      	sub	sp, #16
 800d9da:	af00      	add	r7, sp, #0
 800d9dc:	6078      	str	r0, [r7, #4]
 800d9de:	6039      	str	r1, [r7, #0]
    {
        bool wasPressed = getPressed();
 800d9e0:	687b      	ldr	r3, [r7, #4]
 800d9e2:	4618      	mov	r0, r3
 800d9e4:	f7ff ff5a 	bl	800d89c <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800d9e8:	4603      	mov	r3, r0
 800d9ea:	73fb      	strb	r3, [r7, #15]
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 800d9ec:	6838      	ldr	r0, [r7, #0]
 800d9ee:	f7ff fed1 	bl	800d794 <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800d9f2:	4603      	mov	r3, r0
 800d9f4:	2b00      	cmp	r3, #0
 800d9f6:	bf0c      	ite	eq
 800d9f8:	2301      	moveq	r3, #1
 800d9fa:	2300      	movne	r3, #0
 800d9fc:	73bb      	strb	r3, [r7, #14]
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800d9fe:	7bbb      	ldrb	r3, [r7, #14]
 800da00:	2b00      	cmp	r3, #0
 800da02:	d005      	beq.n	800da10 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3a>
 800da04:	7bfb      	ldrb	r3, [r7, #15]
 800da06:	f083 0301 	eor.w	r3, r3, #1
 800da0a:	b2db      	uxtb	r3, r3
 800da0c:	2b00      	cmp	r3, #0
 800da0e:	d108      	bne.n	800da22 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x4c>
 800da10:	7bbb      	ldrb	r3, [r7, #14]
 800da12:	f083 0301 	eor.w	r3, r3, #1
 800da16:	b2db      	uxtb	r3, r3
 800da18:	2b00      	cmp	r3, #0
 800da1a:	d00f      	beq.n	800da3c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
 800da1c:	7bfb      	ldrb	r3, [r7, #15]
 800da1e:	2b00      	cmp	r3, #0
 800da20:	d00c      	beq.n	800da3c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
        {
            setPressed(newPressedValue);
 800da22:	687b      	ldr	r3, [r7, #4]
 800da24:	7bba      	ldrb	r2, [r7, #14]
 800da26:	4611      	mov	r1, r2
 800da28:	4618      	mov	r0, r3
 800da2a:	f7ff ff23 	bl	800d874 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>
            invalidate();
 800da2e:	687a      	ldr	r2, [r7, #4]
 800da30:	687b      	ldr	r3, [r7, #4]
 800da32:	681b      	ldr	r3, [r3, #0]
 800da34:	3314      	adds	r3, #20
 800da36:	681b      	ldr	r3, [r3, #0]
 800da38:	4610      	mov	r0, r2
 800da3a:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 800da3c:	7bfb      	ldrb	r3, [r7, #15]
 800da3e:	2b00      	cmp	r3, #0
 800da40:	d007      	beq.n	800da52 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800da42:	6838      	ldr	r0, [r7, #0]
 800da44:	f7ff fea6 	bl	800d794 <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800da48:	4603      	mov	r3, r0
 800da4a:	2b01      	cmp	r3, #1
 800da4c:	d101      	bne.n	800da52 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800da4e:	2301      	movs	r3, #1
 800da50:	e000      	b.n	800da54 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7e>
 800da52:	2300      	movs	r3, #0
 800da54:	2b00      	cmp	r3, #0
 800da56:	d006      	beq.n	800da66 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x90>
        {
            executeAction();
 800da58:	687a      	ldr	r2, [r7, #4]
 800da5a:	687b      	ldr	r3, [r7, #4]
 800da5c:	681b      	ldr	r3, [r3, #0]
 800da5e:	3388      	adds	r3, #136	; 0x88
 800da60:	681b      	ldr	r3, [r3, #0]
 800da62:	4610      	mov	r0, r2
 800da64:	4798      	blx	r3
        }
    }
 800da66:	bf00      	nop
 800da68:	3710      	adds	r7, #16
 800da6a:	46bd      	mov	sp, r7
 800da6c:	bd80      	pop	{r7, pc}
	...

0800da70 <_ZN8touchgfx23AbstractButtonContainerD1Ev>:
class AbstractButtonContainer : public Container
 800da70:	b580      	push	{r7, lr}
 800da72:	b082      	sub	sp, #8
 800da74:	af00      	add	r7, sp, #0
 800da76:	6078      	str	r0, [r7, #4]
 800da78:	4a05      	ldr	r2, [pc, #20]	; (800da90 <_ZN8touchgfx23AbstractButtonContainerD1Ev+0x20>)
 800da7a:	687b      	ldr	r3, [r7, #4]
 800da7c:	601a      	str	r2, [r3, #0]
 800da7e:	687b      	ldr	r3, [r7, #4]
 800da80:	4618      	mov	r0, r3
 800da82:	f7fd f8bd 	bl	800ac00 <_ZN8touchgfx9ContainerD1Ev>
 800da86:	687b      	ldr	r3, [r7, #4]
 800da88:	4618      	mov	r0, r3
 800da8a:	3708      	adds	r7, #8
 800da8c:	46bd      	mov	sp, r7
 800da8e:	bd80      	pop	{r7, pc}
 800da90:	0802e46c 	.word	0x0802e46c

0800da94 <_ZN8touchgfx23AbstractButtonContainerD0Ev>:
 800da94:	b580      	push	{r7, lr}
 800da96:	b082      	sub	sp, #8
 800da98:	af00      	add	r7, sp, #0
 800da9a:	6078      	str	r0, [r7, #4]
 800da9c:	6878      	ldr	r0, [r7, #4]
 800da9e:	f7ff ffe7 	bl	800da70 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800daa2:	2134      	movs	r1, #52	; 0x34
 800daa4:	6878      	ldr	r0, [r7, #4]
 800daa6:	f01c fe9a 	bl	802a7de <_ZdlPvj>
 800daaa:	687b      	ldr	r3, [r7, #4]
 800daac:	4618      	mov	r0, r3
 800daae:	3708      	adds	r7, #8
 800dab0:	46bd      	mov	sp, r7
 800dab2:	bd80      	pop	{r7, pc}

0800dab4 <_ZN18MainScreenViewBase11applicationEv>:
    MainScreenViewBase();
    virtual ~MainScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800dab4:	b580      	push	{r7, lr}
 800dab6:	b082      	sub	sp, #8
 800dab8:	af00      	add	r7, sp, #0
 800daba:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800dabc:	f00b fc32 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 800dac0:	4603      	mov	r3, r0
    }
 800dac2:	4618      	mov	r0, r3
 800dac4:	3708      	adds	r7, #8
 800dac6:	46bd      	mov	sp, r7
 800dac8:	bd80      	pop	{r7, pc}
	...

0800dacc <_ZN8touchgfx4ViewI19MainScreenPresenterED1Ev>:
class View : public Screen
 800dacc:	b580      	push	{r7, lr}
 800dace:	b082      	sub	sp, #8
 800dad0:	af00      	add	r7, sp, #0
 800dad2:	6078      	str	r0, [r7, #4]
 800dad4:	4a05      	ldr	r2, [pc, #20]	; (800daec <_ZN8touchgfx4ViewI19MainScreenPresenterED1Ev+0x20>)
 800dad6:	687b      	ldr	r3, [r7, #4]
 800dad8:	601a      	str	r2, [r3, #0]
 800dada:	687b      	ldr	r3, [r7, #4]
 800dadc:	4618      	mov	r0, r3
 800dade:	f7fc fab9 	bl	800a054 <_ZN8touchgfx6ScreenD1Ev>
 800dae2:	687b      	ldr	r3, [r7, #4]
 800dae4:	4618      	mov	r0, r3
 800dae6:	3708      	adds	r7, #8
 800dae8:	46bd      	mov	sp, r7
 800daea:	bd80      	pop	{r7, pc}
 800daec:	0802e384 	.word	0x0802e384

0800daf0 <_ZN8touchgfx4ViewI19MainScreenPresenterED0Ev>:
 800daf0:	b580      	push	{r7, lr}
 800daf2:	b082      	sub	sp, #8
 800daf4:	af00      	add	r7, sp, #0
 800daf6:	6078      	str	r0, [r7, #4]
 800daf8:	6878      	ldr	r0, [r7, #4]
 800dafa:	f7ff ffe7 	bl	800dacc <_ZN8touchgfx4ViewI19MainScreenPresenterED1Ev>
 800dafe:	2140      	movs	r1, #64	; 0x40
 800db00:	6878      	ldr	r0, [r7, #4]
 800db02:	f01c fe6c 	bl	802a7de <_ZdlPvj>
 800db06:	687b      	ldr	r3, [r7, #4]
 800db08:	4618      	mov	r0, r3
 800db0a:	3708      	adds	r7, #8
 800db0c:	46bd      	mov	sp, r7
 800db0e:	bd80      	pop	{r7, pc}

0800db10 <_ZN18MainScreenViewBaseC1Ev>:
/*********************************************************************************/
#include <gui_generated/mainscreen_screen/MainScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainScreenViewBase::MainScreenViewBase() :
 800db10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800db14:	b0d8      	sub	sp, #352	; 0x160
 800db16:	af02      	add	r7, sp, #8
 800db18:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db1c:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db20:	6018      	str	r0, [r3, #0]
    flexButtonCallback(this, &MainScreenViewBase::flexButtonCallbackHandler)
 800db22:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db26:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db2a:	681b      	ldr	r3, [r3, #0]
 800db2c:	4618      	mov	r0, r3
 800db2e:	f001 f83b 	bl	800eba8 <_ZN8touchgfx4ViewI19MainScreenPresenterEC1Ev>
 800db32:	4ae8      	ldr	r2, [pc, #928]	; (800ded4 <_ZN18MainScreenViewBaseC1Ev+0x3c4>)
 800db34:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db38:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db3c:	681b      	ldr	r3, [r3, #0]
 800db3e:	601a      	str	r2, [r3, #0]
 800db40:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db44:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db48:	681b      	ldr	r3, [r3, #0]
 800db4a:	3340      	adds	r3, #64	; 0x40
 800db4c:	4618      	mov	r0, r3
 800db4e:	f7fc fb3f 	bl	800a1d0 <_ZN8touchgfx3BoxC1Ev>
 800db52:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db56:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db5a:	681b      	ldr	r3, [r3, #0]
 800db5c:	336c      	adds	r3, #108	; 0x6c
 800db5e:	4618      	mov	r0, r3
 800db60:	f7fc fb7e 	bl	800a260 <_ZN8touchgfx8TextAreaC1Ev>
 800db64:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db68:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db6c:	681b      	ldr	r3, [r3, #0]
 800db6e:	33b4      	adds	r3, #180	; 0xb4
 800db70:	4618      	mov	r0, r3
 800db72:	f001 f885 	bl	800ec80 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800db76:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db7a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db7e:	681b      	ldr	r3, [r3, #0]
 800db80:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800db84:	4618      	mov	r0, r3
 800db86:	f001 f87b 	bl	800ec80 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800db8a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db8e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db92:	681b      	ldr	r3, [r3, #0]
 800db94:	f503 73d2 	add.w	r3, r3, #420	; 0x1a4
 800db98:	4618      	mov	r0, r3
 800db9a:	f001 f871 	bl	800ec80 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800db9e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dba2:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dba6:	681b      	ldr	r3, [r3, #0]
 800dba8:	f503 7307 	add.w	r3, r3, #540	; 0x21c
 800dbac:	4618      	mov	r0, r3
 800dbae:	f001 f867 	bl	800ec80 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800dbb2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dbb6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dbba:	681b      	ldr	r3, [r3, #0]
 800dbbc:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800dbc0:	4618      	mov	r0, r3
 800dbc2:	f7fc fb4d 	bl	800a260 <_ZN8touchgfx8TextAreaC1Ev>
 800dbc6:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dbca:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dbce:	681b      	ldr	r3, [r3, #0]
 800dbd0:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800dbd4:	4618      	mov	r0, r3
 800dbd6:	f7fc fb43 	bl	800a260 <_ZN8touchgfx8TextAreaC1Ev>
 800dbda:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dbde:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dbe2:	681b      	ldr	r3, [r3, #0]
 800dbe4:	f503 7349 	add.w	r3, r3, #804	; 0x324
 800dbe8:	4618      	mov	r0, r3
 800dbea:	f7fc fb39 	bl	800a260 <_ZN8touchgfx8TextAreaC1Ev>
 800dbee:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dbf2:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dbf6:	681b      	ldr	r3, [r3, #0]
 800dbf8:	f503 735b 	add.w	r3, r3, #876	; 0x36c
 800dbfc:	4618      	mov	r0, r3
 800dbfe:	f7fc fb2f 	bl	800a260 <_ZN8touchgfx8TextAreaC1Ev>
 800dc02:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dc06:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dc0a:	681b      	ldr	r3, [r3, #0]
 800dc0c:	f503 736d 	add.w	r3, r3, #948	; 0x3b4
 800dc10:	4618      	mov	r0, r3
 800dc12:	f7fc fb25 	bl	800a260 <_ZN8touchgfx8TextAreaC1Ev>
 800dc16:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dc1a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dc1e:	681b      	ldr	r3, [r3, #0]
 800dc20:	f503 707f 	add.w	r0, r3, #1020	; 0x3fc
 800dc24:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dc28:	f5a3 7394 	sub.w	r3, r3, #296	; 0x128
 800dc2c:	4aaa      	ldr	r2, [pc, #680]	; (800ded8 <_ZN18MainScreenViewBaseC1Ev+0x3c8>)
 800dc2e:	601a      	str	r2, [r3, #0]
 800dc30:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dc34:	f5a3 7394 	sub.w	r3, r3, #296	; 0x128
 800dc38:	2200      	movs	r2, #0
 800dc3a:	605a      	str	r2, [r3, #4]
 800dc3c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dc40:	f5a3 7394 	sub.w	r3, r3, #296	; 0x128
 800dc44:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800dc48:	f5a2 71a2 	sub.w	r1, r2, #324	; 0x144
 800dc4c:	cb0c      	ldmia	r3, {r2, r3}
 800dc4e:	6809      	ldr	r1, [r1, #0]
 800dc50:	f001 f866 	bl	800ed20 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800dc54:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dc58:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dc5c:	681b      	ldr	r3, [r3, #0]
 800dc5e:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800dc62:	23f0      	movs	r3, #240	; 0xf0
 800dc64:	9300      	str	r3, [sp, #0]
 800dc66:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800dc6a:	2200      	movs	r2, #0
 800dc6c:	2100      	movs	r1, #0
 800dc6e:	f7fc f8bb 	bl	8009de8 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800dc72:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dc76:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dc7a:	681b      	ldr	r3, [r3, #0]
 800dc7c:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800dc80:	2300      	movs	r3, #0
 800dc82:	f887 30c8 	strb.w	r3, [r7, #200]	; 0xc8
 800dc86:	2300      	movs	r3, #0
 800dc88:	f887 30c7 	strb.w	r3, [r7, #199]	; 0xc7
 800dc8c:	2300      	movs	r3, #0
 800dc8e:	f887 30c6 	strb.w	r3, [r7, #198]	; 0xc6
 800dc92:	f897 30c8 	ldrb.w	r3, [r7, #200]	; 0xc8
 800dc96:	041b      	lsls	r3, r3, #16
 800dc98:	461a      	mov	r2, r3
 800dc9a:	f897 30c7 	ldrb.w	r3, [r7, #199]	; 0xc7
 800dc9e:	021b      	lsls	r3, r3, #8
 800dca0:	431a      	orrs	r2, r3
 800dca2:	f897 30c6 	ldrb.w	r3, [r7, #198]	; 0xc6
 800dca6:	4313      	orrs	r3, r2
 800dca8:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dcac:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
 800dcb0:	4611      	mov	r1, r2
 800dcb2:	4618      	mov	r0, r3
 800dcb4:	f7fb ffd4 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800dcb8:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 800dcbc:	4619      	mov	r1, r3
 800dcbe:	4620      	mov	r0, r4
 800dcc0:	f7fc faaa 	bl	800a218 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800dcc4:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dcc8:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dccc:	681a      	ldr	r2, [r3, #0]
 800dcce:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dcd2:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dcd6:	681b      	ldr	r3, [r3, #0]
 800dcd8:	3340      	adds	r3, #64	; 0x40
 800dcda:	4619      	mov	r1, r3
 800dcdc:	4610      	mov	r0, r2
 800dcde:	f7fc fa11 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    CarSystem_text_1.setXY(44, 0);
 800dce2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dce6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dcea:	681b      	ldr	r3, [r3, #0]
 800dcec:	336c      	adds	r3, #108	; 0x6c
 800dcee:	2200      	movs	r2, #0
 800dcf0:	212c      	movs	r1, #44	; 0x2c
 800dcf2:	4618      	mov	r0, r3
 800dcf4:	f7fc f8b7 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
    CarSystem_text_1.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
 800dcf8:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dcfc:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dd00:	681b      	ldr	r3, [r3, #0]
 800dd02:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800dd06:	23f2      	movs	r3, #242	; 0xf2
 800dd08:	f887 30cb 	strb.w	r3, [r7, #203]	; 0xcb
 800dd0c:	23ae      	movs	r3, #174	; 0xae
 800dd0e:	f887 30ca 	strb.w	r3, [r7, #202]	; 0xca
 800dd12:	23ae      	movs	r3, #174	; 0xae
 800dd14:	f887 30c9 	strb.w	r3, [r7, #201]	; 0xc9
 800dd18:	f897 30cb 	ldrb.w	r3, [r7, #203]	; 0xcb
 800dd1c:	041b      	lsls	r3, r3, #16
 800dd1e:	461a      	mov	r2, r3
 800dd20:	f897 30ca 	ldrb.w	r3, [r7, #202]	; 0xca
 800dd24:	021b      	lsls	r3, r3, #8
 800dd26:	431a      	orrs	r2, r3
 800dd28:	f897 30c9 	ldrb.w	r3, [r7, #201]	; 0xc9
 800dd2c:	4313      	orrs	r3, r2
 800dd2e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dd32:	f107 03bc 	add.w	r3, r7, #188	; 0xbc
 800dd36:	4611      	mov	r1, r2
 800dd38:	4618      	mov	r0, r3
 800dd3a:	f7fb ff91 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800dd3e:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
 800dd42:	461a      	mov	r2, r3
 800dd44:	f8c7 40cc 	str.w	r4, [r7, #204]	; 0xcc
 800dd48:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dd4c:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800dd50:	601a      	str	r2, [r3, #0]
        color = newColor;
 800dd52:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 800dd56:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800dd5a:	f5a2 7296 	sub.w	r2, r2, #300	; 0x12c
 800dd5e:	6812      	ldr	r2, [r2, #0]
 800dd60:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800dd62:	bf00      	nop
    CarSystem_text_1.setLinespacing(0);
 800dd64:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dd68:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dd6c:	681b      	ldr	r3, [r3, #0]
 800dd6e:	336c      	adds	r3, #108	; 0x6c
 800dd70:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800dd74:	2300      	movs	r3, #0
 800dd76:	f8a7 30d2 	strh.w	r3, [r7, #210]	; 0xd2
        linespace = space;
 800dd7a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800dd7e:	f8b7 20d2 	ldrh.w	r2, [r7, #210]	; 0xd2
 800dd82:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800dd84:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800dd88:	681b      	ldr	r3, [r3, #0]
 800dd8a:	3384      	adds	r3, #132	; 0x84
 800dd8c:	681b      	ldr	r3, [r3, #0]
 800dd8e:	f8d7 40d4 	ldr.w	r4, [r7, #212]	; 0xd4
 800dd92:	463a      	mov	r2, r7
 800dd94:	f8d7 10d4 	ldr.w	r1, [r7, #212]	; 0xd4
 800dd98:	4610      	mov	r0, r2
 800dd9a:	4798      	blx	r3
 800dd9c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dda0:	f5a3 72ac 	sub.w	r2, r3, #344	; 0x158
 800dda4:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800dda8:	ca07      	ldmia	r2, {r0, r1, r2}
 800ddaa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800ddae:	bf00      	nop
    CarSystem_text_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HO17));
 800ddb0:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800ddb4:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800ddb8:	681b      	ldr	r3, [r3, #0]
 800ddba:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800ddbe:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800ddc2:	2109      	movs	r1, #9
 800ddc4:	4618      	mov	r0, r3
 800ddc6:	f7fc fa35 	bl	800a234 <_ZN8touchgfx9TypedTextC1Et>
 800ddca:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800ddce:	4619      	mov	r1, r3
 800ddd0:	4620      	mov	r0, r4
 800ddd2:	f008 fa77 	bl	80162c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800ddd6:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800ddda:	4618      	mov	r0, r3
 800dddc:	f7fb fd58 	bl	8009890 <_ZN8touchgfx9TypedTextD1Ev>
    add(CarSystem_text_1);
 800dde0:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dde4:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dde8:	681a      	ldr	r2, [r3, #0]
 800ddea:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800ddee:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800ddf2:	681b      	ldr	r3, [r3, #0]
 800ddf4:	336c      	adds	r3, #108	; 0x6c
 800ddf6:	4619      	mov	r1, r3
 800ddf8:	4610      	mov	r0, r2
 800ddfa:	f7fc f983 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Clock_button.setBoxWithBorderPosition(0, 0, 160, 50);
 800ddfe:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800de02:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800de06:	681b      	ldr	r3, [r3, #0]
 800de08:	f103 00b4 	add.w	r0, r3, #180	; 0xb4
 800de0c:	2332      	movs	r3, #50	; 0x32
 800de0e:	9300      	str	r3, [sp, #0]
 800de10:	23a0      	movs	r3, #160	; 0xa0
 800de12:	2200      	movs	r2, #0
 800de14:	2100      	movs	r1, #0
 800de16:	f000 ffa3 	bl	800ed60 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    Clock_button.setBorderSize(5);
 800de1a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800de1e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800de22:	681b      	ldr	r3, [r3, #0]
 800de24:	33b4      	adds	r3, #180	; 0xb4
 800de26:	2105      	movs	r1, #5
 800de28:	4618      	mov	r0, r3
 800de2a:	f000 ffb9 	bl	800eda0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    Clock_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800de2e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800de32:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800de36:	681b      	ldr	r3, [r3, #0]
 800de38:	f103 04b4 	add.w	r4, r3, #180	; 0xb4
 800de3c:	2300      	movs	r3, #0
 800de3e:	f887 30db 	strb.w	r3, [r7, #219]	; 0xdb
 800de42:	2366      	movs	r3, #102	; 0x66
 800de44:	f887 30da 	strb.w	r3, [r7, #218]	; 0xda
 800de48:	2399      	movs	r3, #153	; 0x99
 800de4a:	f887 30d9 	strb.w	r3, [r7, #217]	; 0xd9
 800de4e:	f897 30db 	ldrb.w	r3, [r7, #219]	; 0xdb
 800de52:	041b      	lsls	r3, r3, #16
 800de54:	461a      	mov	r2, r3
 800de56:	f897 30da 	ldrb.w	r3, [r7, #218]	; 0xda
 800de5a:	021b      	lsls	r3, r3, #8
 800de5c:	431a      	orrs	r2, r3
 800de5e:	f897 30d9 	ldrb.w	r3, [r7, #217]	; 0xd9
 800de62:	4313      	orrs	r3, r2
 800de64:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800de68:	f107 03b8 	add.w	r3, r7, #184	; 0xb8
 800de6c:	4611      	mov	r1, r2
 800de6e:	4618      	mov	r0, r3
 800de70:	f7fb fef6 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800de74:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 800de78:	461d      	mov	r5, r3
 800de7a:	2300      	movs	r3, #0
 800de7c:	f887 30de 	strb.w	r3, [r7, #222]	; 0xde
 800de80:	2399      	movs	r3, #153	; 0x99
 800de82:	f887 30dd 	strb.w	r3, [r7, #221]	; 0xdd
 800de86:	23cc      	movs	r3, #204	; 0xcc
 800de88:	f887 30dc 	strb.w	r3, [r7, #220]	; 0xdc
 800de8c:	f897 30de 	ldrb.w	r3, [r7, #222]	; 0xde
 800de90:	041b      	lsls	r3, r3, #16
 800de92:	461a      	mov	r2, r3
 800de94:	f897 30dd 	ldrb.w	r3, [r7, #221]	; 0xdd
 800de98:	021b      	lsls	r3, r3, #8
 800de9a:	431a      	orrs	r2, r3
 800de9c:	f897 30dc 	ldrb.w	r3, [r7, #220]	; 0xdc
 800dea0:	4313      	orrs	r3, r2
 800dea2:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dea6:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800deaa:	4611      	mov	r1, r2
 800deac:	4618      	mov	r0, r3
 800deae:	f7fb fed7 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800deb2:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 800deb6:	461e      	mov	r6, r3
 800deb8:	2300      	movs	r3, #0
 800deba:	f887 30e1 	strb.w	r3, [r7, #225]	; 0xe1
 800debe:	2333      	movs	r3, #51	; 0x33
 800dec0:	f887 30e0 	strb.w	r3, [r7, #224]	; 0xe0
 800dec4:	2366      	movs	r3, #102	; 0x66
 800dec6:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 800deca:	f897 30e1 	ldrb.w	r3, [r7, #225]	; 0xe1
 800dece:	041b      	lsls	r3, r3, #16
 800ded0:	461a      	mov	r2, r3
 800ded2:	e003      	b.n	800dedc <_ZN18MainScreenViewBaseC1Ev+0x3cc>
 800ded4:	0802e29c 	.word	0x0802e29c
 800ded8:	0800eb2f 	.word	0x0800eb2f
 800dedc:	f897 30e0 	ldrb.w	r3, [r7, #224]	; 0xe0
 800dee0:	021b      	lsls	r3, r3, #8
 800dee2:	431a      	orrs	r2, r3
 800dee4:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 800dee8:	4313      	orrs	r3, r2
 800deea:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800deee:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
 800def2:	4611      	mov	r1, r2
 800def4:	4618      	mov	r0, r3
 800def6:	f7fb feb3 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800defa:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 800defe:	4698      	mov	r8, r3
 800df00:	2333      	movs	r3, #51	; 0x33
 800df02:	f887 30e4 	strb.w	r3, [r7, #228]	; 0xe4
 800df06:	2366      	movs	r3, #102	; 0x66
 800df08:	f887 30e3 	strb.w	r3, [r7, #227]	; 0xe3
 800df0c:	2399      	movs	r3, #153	; 0x99
 800df0e:	f887 30e2 	strb.w	r3, [r7, #226]	; 0xe2
 800df12:	f897 30e4 	ldrb.w	r3, [r7, #228]	; 0xe4
 800df16:	041b      	lsls	r3, r3, #16
 800df18:	461a      	mov	r2, r3
 800df1a:	f897 30e3 	ldrb.w	r3, [r7, #227]	; 0xe3
 800df1e:	021b      	lsls	r3, r3, #8
 800df20:	431a      	orrs	r2, r3
 800df22:	f897 30e2 	ldrb.w	r3, [r7, #226]	; 0xe2
 800df26:	4313      	orrs	r3, r2
 800df28:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800df2c:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 800df30:	4611      	mov	r1, r2
 800df32:	4618      	mov	r0, r3
 800df34:	f7fb fe94 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800df38:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800df3c:	9300      	str	r3, [sp, #0]
 800df3e:	4643      	mov	r3, r8
 800df40:	4632      	mov	r2, r6
 800df42:	4629      	mov	r1, r5
 800df44:	4620      	mov	r0, r4
 800df46:	f000 ff3d 	bl	800edc4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Clock_button.setAction(flexButtonCallback);
 800df4a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800df4e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800df52:	681b      	ldr	r3, [r3, #0]
 800df54:	f103 02b4 	add.w	r2, r3, #180	; 0xb4
 800df58:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800df5c:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800df60:	681b      	ldr	r3, [r3, #0]
 800df62:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 800df66:	4619      	mov	r1, r3
 800df68:	4610      	mov	r0, r2
 800df6a:	f7ff fcb1 	bl	800d8d0 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    Clock_button.setPosition(0, 70, 160, 50);
 800df6e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800df72:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800df76:	681b      	ldr	r3, [r3, #0]
 800df78:	f103 00b4 	add.w	r0, r3, #180	; 0xb4
 800df7c:	2332      	movs	r3, #50	; 0x32
 800df7e:	9300      	str	r3, [sp, #0]
 800df80:	23a0      	movs	r3, #160	; 0xa0
 800df82:	2246      	movs	r2, #70	; 0x46
 800df84:	2100      	movs	r1, #0
 800df86:	f7fb ff2f 	bl	8009de8 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(Clock_button);
 800df8a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800df8e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800df92:	681a      	ldr	r2, [r3, #0]
 800df94:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800df98:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800df9c:	681b      	ldr	r3, [r3, #0]
 800df9e:	33b4      	adds	r3, #180	; 0xb4
 800dfa0:	4619      	mov	r1, r3
 800dfa2:	4610      	mov	r0, r2
 800dfa4:	f7fc f8ae 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Pressure_button.setBoxWithBorderPosition(0, 0, 160, 50);
 800dfa8:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dfac:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dfb0:	681b      	ldr	r3, [r3, #0]
 800dfb2:	f503 7096 	add.w	r0, r3, #300	; 0x12c
 800dfb6:	2332      	movs	r3, #50	; 0x32
 800dfb8:	9300      	str	r3, [sp, #0]
 800dfba:	23a0      	movs	r3, #160	; 0xa0
 800dfbc:	2200      	movs	r2, #0
 800dfbe:	2100      	movs	r1, #0
 800dfc0:	f000 fece 	bl	800ed60 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    Pressure_button.setBorderSize(5);
 800dfc4:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dfc8:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dfcc:	681b      	ldr	r3, [r3, #0]
 800dfce:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800dfd2:	2105      	movs	r1, #5
 800dfd4:	4618      	mov	r0, r3
 800dfd6:	f000 fee3 	bl	800eda0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    Pressure_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800dfda:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dfde:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dfe2:	681b      	ldr	r3, [r3, #0]
 800dfe4:	f503 7496 	add.w	r4, r3, #300	; 0x12c
 800dfe8:	2300      	movs	r3, #0
 800dfea:	f887 30e7 	strb.w	r3, [r7, #231]	; 0xe7
 800dfee:	2366      	movs	r3, #102	; 0x66
 800dff0:	f887 30e6 	strb.w	r3, [r7, #230]	; 0xe6
 800dff4:	2399      	movs	r3, #153	; 0x99
 800dff6:	f887 30e5 	strb.w	r3, [r7, #229]	; 0xe5
 800dffa:	f897 30e7 	ldrb.w	r3, [r7, #231]	; 0xe7
 800dffe:	041b      	lsls	r3, r3, #16
 800e000:	461a      	mov	r2, r3
 800e002:	f897 30e6 	ldrb.w	r3, [r7, #230]	; 0xe6
 800e006:	021b      	lsls	r3, r3, #8
 800e008:	431a      	orrs	r2, r3
 800e00a:	f897 30e5 	ldrb.w	r3, [r7, #229]	; 0xe5
 800e00e:	4313      	orrs	r3, r2
 800e010:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e014:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 800e018:	4611      	mov	r1, r2
 800e01a:	4618      	mov	r0, r3
 800e01c:	f7fb fe20 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800e020:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 800e024:	461d      	mov	r5, r3
 800e026:	2300      	movs	r3, #0
 800e028:	f887 30ea 	strb.w	r3, [r7, #234]	; 0xea
 800e02c:	2399      	movs	r3, #153	; 0x99
 800e02e:	f887 30e9 	strb.w	r3, [r7, #233]	; 0xe9
 800e032:	23cc      	movs	r3, #204	; 0xcc
 800e034:	f887 30e8 	strb.w	r3, [r7, #232]	; 0xe8
 800e038:	f897 30ea 	ldrb.w	r3, [r7, #234]	; 0xea
 800e03c:	041b      	lsls	r3, r3, #16
 800e03e:	461a      	mov	r2, r3
 800e040:	f897 30e9 	ldrb.w	r3, [r7, #233]	; 0xe9
 800e044:	021b      	lsls	r3, r3, #8
 800e046:	431a      	orrs	r2, r3
 800e048:	f897 30e8 	ldrb.w	r3, [r7, #232]	; 0xe8
 800e04c:	4313      	orrs	r3, r2
 800e04e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e052:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 800e056:	4611      	mov	r1, r2
 800e058:	4618      	mov	r0, r3
 800e05a:	f7fb fe01 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800e05e:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800e062:	461e      	mov	r6, r3
 800e064:	2300      	movs	r3, #0
 800e066:	f887 30ed 	strb.w	r3, [r7, #237]	; 0xed
 800e06a:	2333      	movs	r3, #51	; 0x33
 800e06c:	f887 30ec 	strb.w	r3, [r7, #236]	; 0xec
 800e070:	2366      	movs	r3, #102	; 0x66
 800e072:	f887 30eb 	strb.w	r3, [r7, #235]	; 0xeb
 800e076:	f897 30ed 	ldrb.w	r3, [r7, #237]	; 0xed
 800e07a:	041b      	lsls	r3, r3, #16
 800e07c:	461a      	mov	r2, r3
 800e07e:	f897 30ec 	ldrb.w	r3, [r7, #236]	; 0xec
 800e082:	021b      	lsls	r3, r3, #8
 800e084:	431a      	orrs	r2, r3
 800e086:	f897 30eb 	ldrb.w	r3, [r7, #235]	; 0xeb
 800e08a:	4313      	orrs	r3, r2
 800e08c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e090:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800e094:	4611      	mov	r1, r2
 800e096:	4618      	mov	r0, r3
 800e098:	f7fb fde2 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800e09c:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800e0a0:	4698      	mov	r8, r3
 800e0a2:	2333      	movs	r3, #51	; 0x33
 800e0a4:	f887 30f0 	strb.w	r3, [r7, #240]	; 0xf0
 800e0a8:	2366      	movs	r3, #102	; 0x66
 800e0aa:	f887 30ef 	strb.w	r3, [r7, #239]	; 0xef
 800e0ae:	2399      	movs	r3, #153	; 0x99
 800e0b0:	f887 30ee 	strb.w	r3, [r7, #238]	; 0xee
 800e0b4:	f897 30f0 	ldrb.w	r3, [r7, #240]	; 0xf0
 800e0b8:	041b      	lsls	r3, r3, #16
 800e0ba:	461a      	mov	r2, r3
 800e0bc:	f897 30ef 	ldrb.w	r3, [r7, #239]	; 0xef
 800e0c0:	021b      	lsls	r3, r3, #8
 800e0c2:	431a      	orrs	r2, r3
 800e0c4:	f897 30ee 	ldrb.w	r3, [r7, #238]	; 0xee
 800e0c8:	4313      	orrs	r3, r2
 800e0ca:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e0ce:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 800e0d2:	4611      	mov	r1, r2
 800e0d4:	4618      	mov	r0, r3
 800e0d6:	f7fb fdc3 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800e0da:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800e0de:	9300      	str	r3, [sp, #0]
 800e0e0:	4643      	mov	r3, r8
 800e0e2:	4632      	mov	r2, r6
 800e0e4:	4629      	mov	r1, r5
 800e0e6:	4620      	mov	r0, r4
 800e0e8:	f000 fe6c 	bl	800edc4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Pressure_button.setAction(flexButtonCallback);
 800e0ec:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e0f0:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e0f4:	681b      	ldr	r3, [r3, #0]
 800e0f6:	f503 7296 	add.w	r2, r3, #300	; 0x12c
 800e0fa:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e0fe:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e102:	681b      	ldr	r3, [r3, #0]
 800e104:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 800e108:	4619      	mov	r1, r3
 800e10a:	4610      	mov	r0, r2
 800e10c:	f7ff fbe0 	bl	800d8d0 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    Pressure_button.setPosition(0, 128, 160, 50);
 800e110:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e114:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e118:	681b      	ldr	r3, [r3, #0]
 800e11a:	f503 7096 	add.w	r0, r3, #300	; 0x12c
 800e11e:	2332      	movs	r3, #50	; 0x32
 800e120:	9300      	str	r3, [sp, #0]
 800e122:	23a0      	movs	r3, #160	; 0xa0
 800e124:	2280      	movs	r2, #128	; 0x80
 800e126:	2100      	movs	r1, #0
 800e128:	f7fb fe5e 	bl	8009de8 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(Pressure_button);
 800e12c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e130:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e134:	681a      	ldr	r2, [r3, #0]
 800e136:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e13a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e13e:	681b      	ldr	r3, [r3, #0]
 800e140:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800e144:	4619      	mov	r1, r3
 800e146:	4610      	mov	r0, r2
 800e148:	f7fb ffdc 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    CO_button.setBoxWithBorderPosition(0, 0, 160, 50);
 800e14c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e150:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e154:	681b      	ldr	r3, [r3, #0]
 800e156:	f503 70d2 	add.w	r0, r3, #420	; 0x1a4
 800e15a:	2332      	movs	r3, #50	; 0x32
 800e15c:	9300      	str	r3, [sp, #0]
 800e15e:	23a0      	movs	r3, #160	; 0xa0
 800e160:	2200      	movs	r2, #0
 800e162:	2100      	movs	r1, #0
 800e164:	f000 fdfc 	bl	800ed60 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    CO_button.setBorderSize(5);
 800e168:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e16c:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e170:	681b      	ldr	r3, [r3, #0]
 800e172:	f503 73d2 	add.w	r3, r3, #420	; 0x1a4
 800e176:	2105      	movs	r1, #5
 800e178:	4618      	mov	r0, r3
 800e17a:	f000 fe11 	bl	800eda0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    CO_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800e17e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e182:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e186:	681b      	ldr	r3, [r3, #0]
 800e188:	f503 74d2 	add.w	r4, r3, #420	; 0x1a4
 800e18c:	2300      	movs	r3, #0
 800e18e:	f887 30f3 	strb.w	r3, [r7, #243]	; 0xf3
 800e192:	2366      	movs	r3, #102	; 0x66
 800e194:	f887 30f2 	strb.w	r3, [r7, #242]	; 0xf2
 800e198:	2399      	movs	r3, #153	; 0x99
 800e19a:	f887 30f1 	strb.w	r3, [r7, #241]	; 0xf1
 800e19e:	f897 30f3 	ldrb.w	r3, [r7, #243]	; 0xf3
 800e1a2:	041b      	lsls	r3, r3, #16
 800e1a4:	461a      	mov	r2, r3
 800e1a6:	f897 30f2 	ldrb.w	r3, [r7, #242]	; 0xf2
 800e1aa:	021b      	lsls	r3, r3, #8
 800e1ac:	431a      	orrs	r2, r3
 800e1ae:	f897 30f1 	ldrb.w	r3, [r7, #241]	; 0xf1
 800e1b2:	4313      	orrs	r3, r2
 800e1b4:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e1b8:	f107 0398 	add.w	r3, r7, #152	; 0x98
 800e1bc:	4611      	mov	r1, r2
 800e1be:	4618      	mov	r0, r3
 800e1c0:	f7fb fd4e 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800e1c4:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800e1c8:	461d      	mov	r5, r3
 800e1ca:	2300      	movs	r3, #0
 800e1cc:	f887 30f6 	strb.w	r3, [r7, #246]	; 0xf6
 800e1d0:	2399      	movs	r3, #153	; 0x99
 800e1d2:	f887 30f5 	strb.w	r3, [r7, #245]	; 0xf5
 800e1d6:	23cc      	movs	r3, #204	; 0xcc
 800e1d8:	f887 30f4 	strb.w	r3, [r7, #244]	; 0xf4
 800e1dc:	f897 30f6 	ldrb.w	r3, [r7, #246]	; 0xf6
 800e1e0:	041b      	lsls	r3, r3, #16
 800e1e2:	461a      	mov	r2, r3
 800e1e4:	f897 30f5 	ldrb.w	r3, [r7, #245]	; 0xf5
 800e1e8:	021b      	lsls	r3, r3, #8
 800e1ea:	431a      	orrs	r2, r3
 800e1ec:	f897 30f4 	ldrb.w	r3, [r7, #244]	; 0xf4
 800e1f0:	4313      	orrs	r3, r2
 800e1f2:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e1f6:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800e1fa:	4611      	mov	r1, r2
 800e1fc:	4618      	mov	r0, r3
 800e1fe:	f7fb fd2f 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800e202:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800e206:	461e      	mov	r6, r3
 800e208:	2300      	movs	r3, #0
 800e20a:	f887 30f9 	strb.w	r3, [r7, #249]	; 0xf9
 800e20e:	2333      	movs	r3, #51	; 0x33
 800e210:	f887 30f8 	strb.w	r3, [r7, #248]	; 0xf8
 800e214:	2366      	movs	r3, #102	; 0x66
 800e216:	f887 30f7 	strb.w	r3, [r7, #247]	; 0xf7
 800e21a:	f897 30f9 	ldrb.w	r3, [r7, #249]	; 0xf9
 800e21e:	041b      	lsls	r3, r3, #16
 800e220:	461a      	mov	r2, r3
 800e222:	f897 30f8 	ldrb.w	r3, [r7, #248]	; 0xf8
 800e226:	021b      	lsls	r3, r3, #8
 800e228:	431a      	orrs	r2, r3
 800e22a:	f897 30f7 	ldrb.w	r3, [r7, #247]	; 0xf7
 800e22e:	4313      	orrs	r3, r2
 800e230:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e234:	f107 0390 	add.w	r3, r7, #144	; 0x90
 800e238:	4611      	mov	r1, r2
 800e23a:	4618      	mov	r0, r3
 800e23c:	f7fb fd10 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800e240:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800e244:	4698      	mov	r8, r3
 800e246:	2333      	movs	r3, #51	; 0x33
 800e248:	f887 30fc 	strb.w	r3, [r7, #252]	; 0xfc
 800e24c:	2366      	movs	r3, #102	; 0x66
 800e24e:	f887 30fb 	strb.w	r3, [r7, #251]	; 0xfb
 800e252:	2399      	movs	r3, #153	; 0x99
 800e254:	f887 30fa 	strb.w	r3, [r7, #250]	; 0xfa
 800e258:	f897 30fc 	ldrb.w	r3, [r7, #252]	; 0xfc
 800e25c:	041b      	lsls	r3, r3, #16
 800e25e:	461a      	mov	r2, r3
 800e260:	f897 30fb 	ldrb.w	r3, [r7, #251]	; 0xfb
 800e264:	021b      	lsls	r3, r3, #8
 800e266:	431a      	orrs	r2, r3
 800e268:	f897 30fa 	ldrb.w	r3, [r7, #250]	; 0xfa
 800e26c:	4313      	orrs	r3, r2
 800e26e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e272:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 800e276:	4611      	mov	r1, r2
 800e278:	4618      	mov	r0, r3
 800e27a:	f7fb fcf1 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800e27e:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800e282:	9300      	str	r3, [sp, #0]
 800e284:	4643      	mov	r3, r8
 800e286:	4632      	mov	r2, r6
 800e288:	4629      	mov	r1, r5
 800e28a:	4620      	mov	r0, r4
 800e28c:	f000 fd9a 	bl	800edc4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    CO_button.setAction(flexButtonCallback);
 800e290:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e294:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e298:	681b      	ldr	r3, [r3, #0]
 800e29a:	f503 72d2 	add.w	r2, r3, #420	; 0x1a4
 800e29e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e2a2:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e2a6:	681b      	ldr	r3, [r3, #0]
 800e2a8:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 800e2ac:	4619      	mov	r1, r3
 800e2ae:	4610      	mov	r0, r2
 800e2b0:	f7ff fb0e 	bl	800d8d0 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    CO_button.setPosition(160, 128, 160, 50);
 800e2b4:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e2b8:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e2bc:	681b      	ldr	r3, [r3, #0]
 800e2be:	f503 70d2 	add.w	r0, r3, #420	; 0x1a4
 800e2c2:	2332      	movs	r3, #50	; 0x32
 800e2c4:	9300      	str	r3, [sp, #0]
 800e2c6:	23a0      	movs	r3, #160	; 0xa0
 800e2c8:	2280      	movs	r2, #128	; 0x80
 800e2ca:	21a0      	movs	r1, #160	; 0xa0
 800e2cc:	f7fb fd8c 	bl	8009de8 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(CO_button);
 800e2d0:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e2d4:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e2d8:	681a      	ldr	r2, [r3, #0]
 800e2da:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e2de:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e2e2:	681b      	ldr	r3, [r3, #0]
 800e2e4:	f503 73d2 	add.w	r3, r3, #420	; 0x1a4
 800e2e8:	4619      	mov	r1, r3
 800e2ea:	4610      	mov	r0, r2
 800e2ec:	f7fb ff0a 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Temperature_button.setBoxWithBorderPosition(0, 0, 160, 50);
 800e2f0:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e2f4:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e2f8:	681b      	ldr	r3, [r3, #0]
 800e2fa:	f503 7007 	add.w	r0, r3, #540	; 0x21c
 800e2fe:	2332      	movs	r3, #50	; 0x32
 800e300:	9300      	str	r3, [sp, #0]
 800e302:	23a0      	movs	r3, #160	; 0xa0
 800e304:	2200      	movs	r2, #0
 800e306:	2100      	movs	r1, #0
 800e308:	f000 fd2a 	bl	800ed60 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    Temperature_button.setBorderSize(5);
 800e30c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e310:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e314:	681b      	ldr	r3, [r3, #0]
 800e316:	f503 7307 	add.w	r3, r3, #540	; 0x21c
 800e31a:	2105      	movs	r1, #5
 800e31c:	4618      	mov	r0, r3
 800e31e:	f000 fd3f 	bl	800eda0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    Temperature_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800e322:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e326:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e32a:	681b      	ldr	r3, [r3, #0]
 800e32c:	f503 7407 	add.w	r4, r3, #540	; 0x21c
 800e330:	2300      	movs	r3, #0
 800e332:	f887 30ff 	strb.w	r3, [r7, #255]	; 0xff
 800e336:	2366      	movs	r3, #102	; 0x66
 800e338:	f887 30fe 	strb.w	r3, [r7, #254]	; 0xfe
 800e33c:	2399      	movs	r3, #153	; 0x99
 800e33e:	f887 30fd 	strb.w	r3, [r7, #253]	; 0xfd
 800e342:	f897 30ff 	ldrb.w	r3, [r7, #255]	; 0xff
 800e346:	041b      	lsls	r3, r3, #16
 800e348:	461a      	mov	r2, r3
 800e34a:	f897 30fe 	ldrb.w	r3, [r7, #254]	; 0xfe
 800e34e:	021b      	lsls	r3, r3, #8
 800e350:	431a      	orrs	r2, r3
 800e352:	f897 30fd 	ldrb.w	r3, [r7, #253]	; 0xfd
 800e356:	4313      	orrs	r3, r2
 800e358:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e35c:	f107 0388 	add.w	r3, r7, #136	; 0x88
 800e360:	4611      	mov	r1, r2
 800e362:	4618      	mov	r0, r3
 800e364:	f7fb fc7c 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800e368:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800e36c:	461d      	mov	r5, r3
 800e36e:	2300      	movs	r3, #0
 800e370:	f887 3102 	strb.w	r3, [r7, #258]	; 0x102
 800e374:	2399      	movs	r3, #153	; 0x99
 800e376:	f887 3101 	strb.w	r3, [r7, #257]	; 0x101
 800e37a:	23cc      	movs	r3, #204	; 0xcc
 800e37c:	f887 3100 	strb.w	r3, [r7, #256]	; 0x100
 800e380:	f897 3102 	ldrb.w	r3, [r7, #258]	; 0x102
 800e384:	041b      	lsls	r3, r3, #16
 800e386:	461a      	mov	r2, r3
 800e388:	f897 3101 	ldrb.w	r3, [r7, #257]	; 0x101
 800e38c:	021b      	lsls	r3, r3, #8
 800e38e:	431a      	orrs	r2, r3
 800e390:	f897 3100 	ldrb.w	r3, [r7, #256]	; 0x100
 800e394:	4313      	orrs	r3, r2
 800e396:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e39a:	f107 0384 	add.w	r3, r7, #132	; 0x84
 800e39e:	4611      	mov	r1, r2
 800e3a0:	4618      	mov	r0, r3
 800e3a2:	f7fb fc5d 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800e3a6:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800e3aa:	461e      	mov	r6, r3
 800e3ac:	2300      	movs	r3, #0
 800e3ae:	f887 3105 	strb.w	r3, [r7, #261]	; 0x105
 800e3b2:	2333      	movs	r3, #51	; 0x33
 800e3b4:	f887 3104 	strb.w	r3, [r7, #260]	; 0x104
 800e3b8:	2366      	movs	r3, #102	; 0x66
 800e3ba:	f887 3103 	strb.w	r3, [r7, #259]	; 0x103
 800e3be:	f897 3105 	ldrb.w	r3, [r7, #261]	; 0x105
 800e3c2:	041b      	lsls	r3, r3, #16
 800e3c4:	461a      	mov	r2, r3
 800e3c6:	f897 3104 	ldrb.w	r3, [r7, #260]	; 0x104
 800e3ca:	021b      	lsls	r3, r3, #8
 800e3cc:	431a      	orrs	r2, r3
 800e3ce:	f897 3103 	ldrb.w	r3, [r7, #259]	; 0x103
 800e3d2:	4313      	orrs	r3, r2
 800e3d4:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e3d8:	f107 0380 	add.w	r3, r7, #128	; 0x80
 800e3dc:	4611      	mov	r1, r2
 800e3de:	4618      	mov	r0, r3
 800e3e0:	f7fb fc3e 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800e3e4:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800e3e8:	4698      	mov	r8, r3
 800e3ea:	2333      	movs	r3, #51	; 0x33
 800e3ec:	f887 3108 	strb.w	r3, [r7, #264]	; 0x108
 800e3f0:	2366      	movs	r3, #102	; 0x66
 800e3f2:	f887 3107 	strb.w	r3, [r7, #263]	; 0x107
 800e3f6:	2399      	movs	r3, #153	; 0x99
 800e3f8:	f887 3106 	strb.w	r3, [r7, #262]	; 0x106
 800e3fc:	f897 3108 	ldrb.w	r3, [r7, #264]	; 0x108
 800e400:	041b      	lsls	r3, r3, #16
 800e402:	461a      	mov	r2, r3
 800e404:	f897 3107 	ldrb.w	r3, [r7, #263]	; 0x107
 800e408:	021b      	lsls	r3, r3, #8
 800e40a:	431a      	orrs	r2, r3
 800e40c:	f897 3106 	ldrb.w	r3, [r7, #262]	; 0x106
 800e410:	4313      	orrs	r3, r2
 800e412:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e416:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 800e41a:	4611      	mov	r1, r2
 800e41c:	4618      	mov	r0, r3
 800e41e:	f7fb fc1f 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800e422:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800e424:	9300      	str	r3, [sp, #0]
 800e426:	4643      	mov	r3, r8
 800e428:	4632      	mov	r2, r6
 800e42a:	4629      	mov	r1, r5
 800e42c:	4620      	mov	r0, r4
 800e42e:	f000 fcc9 	bl	800edc4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Temperature_button.setAction(flexButtonCallback);
 800e432:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e436:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e43a:	681b      	ldr	r3, [r3, #0]
 800e43c:	f503 7207 	add.w	r2, r3, #540	; 0x21c
 800e440:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e444:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e448:	681b      	ldr	r3, [r3, #0]
 800e44a:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 800e44e:	4619      	mov	r1, r3
 800e450:	4610      	mov	r0, r2
 800e452:	f7ff fa3d 	bl	800d8d0 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    Temperature_button.setPosition(160, 70, 160, 50);
 800e456:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e45a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e45e:	681b      	ldr	r3, [r3, #0]
 800e460:	f503 7007 	add.w	r0, r3, #540	; 0x21c
 800e464:	2332      	movs	r3, #50	; 0x32
 800e466:	9300      	str	r3, [sp, #0]
 800e468:	23a0      	movs	r3, #160	; 0xa0
 800e46a:	2246      	movs	r2, #70	; 0x46
 800e46c:	21a0      	movs	r1, #160	; 0xa0
 800e46e:	f7fb fcbb 	bl	8009de8 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(Temperature_button);
 800e472:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e476:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e47a:	681a      	ldr	r2, [r3, #0]
 800e47c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e480:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e484:	681b      	ldr	r3, [r3, #0]
 800e486:	f503 7307 	add.w	r3, r3, #540	; 0x21c
 800e48a:	4619      	mov	r1, r3
 800e48c:	4610      	mov	r0, r2
 800e48e:	f7fb fe39 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    CarSystem_text.setXY(240, 185);
 800e492:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e496:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e49a:	681b      	ldr	r3, [r3, #0]
 800e49c:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800e4a0:	22b9      	movs	r2, #185	; 0xb9
 800e4a2:	21f0      	movs	r1, #240	; 0xf0
 800e4a4:	4618      	mov	r0, r3
 800e4a6:	f7fb fcde 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
    CarSystem_text.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
 800e4aa:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e4ae:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e4b2:	681b      	ldr	r3, [r3, #0]
 800e4b4:	f503 7425 	add.w	r4, r3, #660	; 0x294
 800e4b8:	23f2      	movs	r3, #242	; 0xf2
 800e4ba:	f887 310b 	strb.w	r3, [r7, #267]	; 0x10b
 800e4be:	23ae      	movs	r3, #174	; 0xae
 800e4c0:	f887 310a 	strb.w	r3, [r7, #266]	; 0x10a
 800e4c4:	23ae      	movs	r3, #174	; 0xae
 800e4c6:	f887 3109 	strb.w	r3, [r7, #265]	; 0x109
 800e4ca:	f897 310b 	ldrb.w	r3, [r7, #267]	; 0x10b
 800e4ce:	041b      	lsls	r3, r3, #16
 800e4d0:	461a      	mov	r2, r3
 800e4d2:	f897 310a 	ldrb.w	r3, [r7, #266]	; 0x10a
 800e4d6:	021b      	lsls	r3, r3, #8
 800e4d8:	431a      	orrs	r2, r3
 800e4da:	f897 3109 	ldrb.w	r3, [r7, #265]	; 0x109
 800e4de:	4313      	orrs	r3, r2
 800e4e0:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e4e4:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800e4e8:	4611      	mov	r1, r2
 800e4ea:	4618      	mov	r0, r3
 800e4ec:	f7fb fbb8 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800e4f0:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800e4f2:	461a      	mov	r2, r3
 800e4f4:	f8c7 410c 	str.w	r4, [r7, #268]	; 0x10c
 800e4f8:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e4fc:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800e500:	601a      	str	r2, [r3, #0]
        color = newColor;
 800e502:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 800e506:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800e50a:	f5a2 7298 	sub.w	r2, r2, #304	; 0x130
 800e50e:	6812      	ldr	r2, [r2, #0]
 800e510:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e512:	bf00      	nop
    CarSystem_text.setLinespacing(0);
 800e514:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e518:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e51c:	681b      	ldr	r3, [r3, #0]
 800e51e:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800e522:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
 800e526:	2300      	movs	r3, #0
 800e528:	f8a7 3112 	strh.w	r3, [r7, #274]	; 0x112
        linespace = space;
 800e52c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800e530:	f8b7 2112 	ldrh.w	r2, [r7, #274]	; 0x112
 800e534:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800e536:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800e53a:	681b      	ldr	r3, [r3, #0]
 800e53c:	3384      	adds	r3, #132	; 0x84
 800e53e:	681b      	ldr	r3, [r3, #0]
 800e540:	f8d7 4114 	ldr.w	r4, [r7, #276]	; 0x114
 800e544:	463a      	mov	r2, r7
 800e546:	f8d7 1114 	ldr.w	r1, [r7, #276]	; 0x114
 800e54a:	4610      	mov	r0, r2
 800e54c:	4798      	blx	r3
 800e54e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e552:	f5a3 72ac 	sub.w	r2, r3, #344	; 0x158
 800e556:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e55a:	ca07      	ldmia	r2, {r0, r1, r2}
 800e55c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e560:	bf00      	nop
    CarSystem_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_229S));
 800e562:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e566:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e56a:	681b      	ldr	r3, [r3, #0]
 800e56c:	f503 7425 	add.w	r4, r3, #660	; 0x294
 800e570:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800e574:	2110      	movs	r1, #16
 800e576:	4618      	mov	r0, r3
 800e578:	f7fb fe5c 	bl	800a234 <_ZN8touchgfx9TypedTextC1Et>
 800e57c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800e580:	4619      	mov	r1, r3
 800e582:	4620      	mov	r0, r4
 800e584:	f007 fe9e 	bl	80162c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800e588:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800e58c:	4618      	mov	r0, r3
 800e58e:	f7fb f97f 	bl	8009890 <_ZN8touchgfx9TypedTextD1Ev>
    add(CarSystem_text);
 800e592:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e596:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e59a:	681a      	ldr	r2, [r3, #0]
 800e59c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e5a0:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e5a4:	681b      	ldr	r3, [r3, #0]
 800e5a6:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800e5aa:	4619      	mov	r1, r3
 800e5ac:	4610      	mov	r0, r2
 800e5ae:	f7fb fda9 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Clock_text.setXY(54, 83);
 800e5b2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e5b6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e5ba:	681b      	ldr	r3, [r3, #0]
 800e5bc:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800e5c0:	2253      	movs	r2, #83	; 0x53
 800e5c2:	2136      	movs	r1, #54	; 0x36
 800e5c4:	4618      	mov	r0, r3
 800e5c6:	f7fb fc4e 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
    Clock_text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800e5ca:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e5ce:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e5d2:	681b      	ldr	r3, [r3, #0]
 800e5d4:	f503 7437 	add.w	r4, r3, #732	; 0x2dc
 800e5d8:	2300      	movs	r3, #0
 800e5da:	f887 311b 	strb.w	r3, [r7, #283]	; 0x11b
 800e5de:	2300      	movs	r3, #0
 800e5e0:	f887 311a 	strb.w	r3, [r7, #282]	; 0x11a
 800e5e4:	2300      	movs	r3, #0
 800e5e6:	f887 3119 	strb.w	r3, [r7, #281]	; 0x119
 800e5ea:	f897 311b 	ldrb.w	r3, [r7, #283]	; 0x11b
 800e5ee:	041b      	lsls	r3, r3, #16
 800e5f0:	461a      	mov	r2, r3
 800e5f2:	f897 311a 	ldrb.w	r3, [r7, #282]	; 0x11a
 800e5f6:	021b      	lsls	r3, r3, #8
 800e5f8:	431a      	orrs	r2, r3
 800e5fa:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 800e5fe:	4313      	orrs	r3, r2
 800e600:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e604:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800e608:	4611      	mov	r1, r2
 800e60a:	4618      	mov	r0, r3
 800e60c:	f7fb fb28 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800e610:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800e612:	461a      	mov	r2, r3
 800e614:	f8c7 411c 	str.w	r4, [r7, #284]	; 0x11c
 800e618:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e61c:	f5a3 739a 	sub.w	r3, r3, #308	; 0x134
 800e620:	601a      	str	r2, [r3, #0]
        color = newColor;
 800e622:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 800e626:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800e62a:	f5a2 729a 	sub.w	r2, r2, #308	; 0x134
 800e62e:	6812      	ldr	r2, [r2, #0]
 800e630:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e632:	bf00      	nop
    Clock_text.setLinespacing(0);
 800e634:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e638:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e63c:	681b      	ldr	r3, [r3, #0]
 800e63e:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800e642:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
 800e646:	2300      	movs	r3, #0
 800e648:	f8a7 3122 	strh.w	r3, [r7, #290]	; 0x122
        linespace = space;
 800e64c:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 800e650:	f8b7 2122 	ldrh.w	r2, [r7, #290]	; 0x122
 800e654:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800e656:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 800e65a:	681b      	ldr	r3, [r3, #0]
 800e65c:	3384      	adds	r3, #132	; 0x84
 800e65e:	681b      	ldr	r3, [r3, #0]
 800e660:	f8d7 4124 	ldr.w	r4, [r7, #292]	; 0x124
 800e664:	463a      	mov	r2, r7
 800e666:	f8d7 1124 	ldr.w	r1, [r7, #292]	; 0x124
 800e66a:	4610      	mov	r0, r2
 800e66c:	4798      	blx	r3
 800e66e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e672:	f5a3 72ac 	sub.w	r2, r3, #344	; 0x158
 800e676:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e67a:	ca07      	ldmia	r2, {r0, r1, r2}
 800e67c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e680:	bf00      	nop
    Clock_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L128));
 800e682:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e686:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e68a:	681b      	ldr	r3, [r3, #0]
 800e68c:	f503 7437 	add.w	r4, r3, #732	; 0x2dc
 800e690:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800e694:	210f      	movs	r1, #15
 800e696:	4618      	mov	r0, r3
 800e698:	f7fb fdcc 	bl	800a234 <_ZN8touchgfx9TypedTextC1Et>
 800e69c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800e6a0:	4619      	mov	r1, r3
 800e6a2:	4620      	mov	r0, r4
 800e6a4:	f007 fe0e 	bl	80162c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800e6a8:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800e6ac:	4618      	mov	r0, r3
 800e6ae:	f7fb f8ef 	bl	8009890 <_ZN8touchgfx9TypedTextD1Ev>
    add(Clock_text);
 800e6b2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e6b6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e6ba:	681a      	ldr	r2, [r3, #0]
 800e6bc:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e6c0:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e6c4:	681b      	ldr	r3, [r3, #0]
 800e6c6:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800e6ca:	4619      	mov	r1, r3
 800e6cc:	4610      	mov	r0, r2
 800e6ce:	f7fb fd19 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Pressure_text.setXY(37, 143);
 800e6d2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e6d6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e6da:	681b      	ldr	r3, [r3, #0]
 800e6dc:	f503 7349 	add.w	r3, r3, #804	; 0x324
 800e6e0:	228f      	movs	r2, #143	; 0x8f
 800e6e2:	2125      	movs	r1, #37	; 0x25
 800e6e4:	4618      	mov	r0, r3
 800e6e6:	f7fb fbbe 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
    Pressure_text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800e6ea:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e6ee:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e6f2:	681b      	ldr	r3, [r3, #0]
 800e6f4:	f503 7449 	add.w	r4, r3, #804	; 0x324
 800e6f8:	2300      	movs	r3, #0
 800e6fa:	f887 312b 	strb.w	r3, [r7, #299]	; 0x12b
 800e6fe:	2300      	movs	r3, #0
 800e700:	f887 312a 	strb.w	r3, [r7, #298]	; 0x12a
 800e704:	2300      	movs	r3, #0
 800e706:	f887 3129 	strb.w	r3, [r7, #297]	; 0x129
 800e70a:	f897 312b 	ldrb.w	r3, [r7, #299]	; 0x12b
 800e70e:	041b      	lsls	r3, r3, #16
 800e710:	461a      	mov	r2, r3
 800e712:	f897 312a 	ldrb.w	r3, [r7, #298]	; 0x12a
 800e716:	021b      	lsls	r3, r3, #8
 800e718:	431a      	orrs	r2, r3
 800e71a:	f897 3129 	ldrb.w	r3, [r7, #297]	; 0x129
 800e71e:	4313      	orrs	r3, r2
 800e720:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e724:	f107 0370 	add.w	r3, r7, #112	; 0x70
 800e728:	4611      	mov	r1, r2
 800e72a:	4618      	mov	r0, r3
 800e72c:	f7fb fa98 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800e730:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800e732:	461a      	mov	r2, r3
 800e734:	f8c7 412c 	str.w	r4, [r7, #300]	; 0x12c
 800e738:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e73c:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 800e740:	601a      	str	r2, [r3, #0]
        color = newColor;
 800e742:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800e746:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800e74a:	f5a2 729c 	sub.w	r2, r2, #312	; 0x138
 800e74e:	6812      	ldr	r2, [r2, #0]
 800e750:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e752:	bf00      	nop
    Pressure_text.setLinespacing(0);
 800e754:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e758:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e75c:	681b      	ldr	r3, [r3, #0]
 800e75e:	f503 7349 	add.w	r3, r3, #804	; 0x324
 800e762:	f8c7 3134 	str.w	r3, [r7, #308]	; 0x134
 800e766:	2300      	movs	r3, #0
 800e768:	f8a7 3132 	strh.w	r3, [r7, #306]	; 0x132
        linespace = space;
 800e76c:	f8d7 3134 	ldr.w	r3, [r7, #308]	; 0x134
 800e770:	f8b7 2132 	ldrh.w	r2, [r7, #306]	; 0x132
 800e774:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800e776:	f8d7 3134 	ldr.w	r3, [r7, #308]	; 0x134
 800e77a:	681b      	ldr	r3, [r3, #0]
 800e77c:	3384      	adds	r3, #132	; 0x84
 800e77e:	681b      	ldr	r3, [r3, #0]
 800e780:	f8d7 4134 	ldr.w	r4, [r7, #308]	; 0x134
 800e784:	463a      	mov	r2, r7
 800e786:	f8d7 1134 	ldr.w	r1, [r7, #308]	; 0x134
 800e78a:	4610      	mov	r0, r2
 800e78c:	4798      	blx	r3
 800e78e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e792:	f5a3 72ac 	sub.w	r2, r3, #344	; 0x158
 800e796:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e79a:	ca07      	ldmia	r2, {r0, r1, r2}
 800e79c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e7a0:	bf00      	nop
    Pressure_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NCPT));
 800e7a2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e7a6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e7aa:	681b      	ldr	r3, [r3, #0]
 800e7ac:	f503 7449 	add.w	r4, r3, #804	; 0x324
 800e7b0:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800e7b4:	210e      	movs	r1, #14
 800e7b6:	4618      	mov	r0, r3
 800e7b8:	f7fb fd3c 	bl	800a234 <_ZN8touchgfx9TypedTextC1Et>
 800e7bc:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800e7c0:	4619      	mov	r1, r3
 800e7c2:	4620      	mov	r0, r4
 800e7c4:	f007 fd7e 	bl	80162c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800e7c8:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800e7cc:	4618      	mov	r0, r3
 800e7ce:	f7fb f85f 	bl	8009890 <_ZN8touchgfx9TypedTextD1Ev>
    add(Pressure_text);
 800e7d2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e7d6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e7da:	681a      	ldr	r2, [r3, #0]
 800e7dc:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e7e0:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e7e4:	681b      	ldr	r3, [r3, #0]
 800e7e6:	f503 7349 	add.w	r3, r3, #804	; 0x324
 800e7ea:	4619      	mov	r1, r3
 800e7ec:	4610      	mov	r0, r2
 800e7ee:	f7fb fc89 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Temperature_text.setXY(176, 83);
 800e7f2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e7f6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e7fa:	681b      	ldr	r3, [r3, #0]
 800e7fc:	f503 735b 	add.w	r3, r3, #876	; 0x36c
 800e800:	2253      	movs	r2, #83	; 0x53
 800e802:	21b0      	movs	r1, #176	; 0xb0
 800e804:	4618      	mov	r0, r3
 800e806:	f7fb fb2e 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
    Temperature_text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800e80a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e80e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e812:	681b      	ldr	r3, [r3, #0]
 800e814:	f503 745b 	add.w	r4, r3, #876	; 0x36c
 800e818:	2300      	movs	r3, #0
 800e81a:	f887 313b 	strb.w	r3, [r7, #315]	; 0x13b
 800e81e:	2300      	movs	r3, #0
 800e820:	f887 313a 	strb.w	r3, [r7, #314]	; 0x13a
 800e824:	2300      	movs	r3, #0
 800e826:	f887 3139 	strb.w	r3, [r7, #313]	; 0x139
 800e82a:	f897 313b 	ldrb.w	r3, [r7, #315]	; 0x13b
 800e82e:	041b      	lsls	r3, r3, #16
 800e830:	461a      	mov	r2, r3
 800e832:	f897 313a 	ldrb.w	r3, [r7, #314]	; 0x13a
 800e836:	021b      	lsls	r3, r3, #8
 800e838:	431a      	orrs	r2, r3
 800e83a:	f897 3139 	ldrb.w	r3, [r7, #313]	; 0x139
 800e83e:	4313      	orrs	r3, r2
 800e840:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e844:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 800e848:	4611      	mov	r1, r2
 800e84a:	4618      	mov	r0, r3
 800e84c:	f7fb fa08 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800e850:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800e852:	461a      	mov	r2, r3
 800e854:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
 800e858:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e85c:	f5a3 739e 	sub.w	r3, r3, #316	; 0x13c
 800e860:	601a      	str	r2, [r3, #0]
        color = newColor;
 800e862:	f8d7 313c 	ldr.w	r3, [r7, #316]	; 0x13c
 800e866:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800e86a:	f5a2 729e 	sub.w	r2, r2, #316	; 0x13c
 800e86e:	6812      	ldr	r2, [r2, #0]
 800e870:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e872:	bf00      	nop
    Temperature_text.setLinespacing(0);
 800e874:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e878:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e87c:	681b      	ldr	r3, [r3, #0]
 800e87e:	f503 735b 	add.w	r3, r3, #876	; 0x36c
 800e882:	f8c7 3144 	str.w	r3, [r7, #324]	; 0x144
 800e886:	2300      	movs	r3, #0
 800e888:	f8a7 3142 	strh.w	r3, [r7, #322]	; 0x142
        linespace = space;
 800e88c:	f8d7 3144 	ldr.w	r3, [r7, #324]	; 0x144
 800e890:	f8b7 2142 	ldrh.w	r2, [r7, #322]	; 0x142
 800e894:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800e896:	f8d7 3144 	ldr.w	r3, [r7, #324]	; 0x144
 800e89a:	681b      	ldr	r3, [r3, #0]
 800e89c:	3384      	adds	r3, #132	; 0x84
 800e89e:	681b      	ldr	r3, [r3, #0]
 800e8a0:	f8d7 4144 	ldr.w	r4, [r7, #324]	; 0x144
 800e8a4:	463a      	mov	r2, r7
 800e8a6:	f8d7 1144 	ldr.w	r1, [r7, #324]	; 0x144
 800e8aa:	4610      	mov	r0, r2
 800e8ac:	4798      	blx	r3
 800e8ae:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e8b2:	f5a3 72ac 	sub.w	r2, r3, #344	; 0x158
 800e8b6:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e8ba:	ca07      	ldmia	r2, {r0, r1, r2}
 800e8bc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e8c0:	bf00      	nop
    Temperature_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LIND));
 800e8c2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e8c6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e8ca:	681b      	ldr	r3, [r3, #0]
 800e8cc:	f503 745b 	add.w	r4, r3, #876	; 0x36c
 800e8d0:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800e8d4:	210d      	movs	r1, #13
 800e8d6:	4618      	mov	r0, r3
 800e8d8:	f7fb fcac 	bl	800a234 <_ZN8touchgfx9TypedTextC1Et>
 800e8dc:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800e8e0:	4619      	mov	r1, r3
 800e8e2:	4620      	mov	r0, r4
 800e8e4:	f007 fcee 	bl	80162c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800e8e8:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800e8ec:	4618      	mov	r0, r3
 800e8ee:	f7fa ffcf 	bl	8009890 <_ZN8touchgfx9TypedTextD1Ev>
    add(Temperature_text);
 800e8f2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e8f6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e8fa:	681a      	ldr	r2, [r3, #0]
 800e8fc:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e900:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e904:	681b      	ldr	r3, [r3, #0]
 800e906:	f503 735b 	add.w	r3, r3, #876	; 0x36c
 800e90a:	4619      	mov	r1, r3
 800e90c:	4610      	mov	r0, r2
 800e90e:	f7fb fbf9 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    CO_text.setXY(200, 141);
 800e912:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e916:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e91a:	681b      	ldr	r3, [r3, #0]
 800e91c:	f503 736d 	add.w	r3, r3, #948	; 0x3b4
 800e920:	228d      	movs	r2, #141	; 0x8d
 800e922:	21c8      	movs	r1, #200	; 0xc8
 800e924:	4618      	mov	r0, r3
 800e926:	f7fb fa9e 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
    CO_text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800e92a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e92e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e932:	681b      	ldr	r3, [r3, #0]
 800e934:	f503 746d 	add.w	r4, r3, #948	; 0x3b4
 800e938:	2300      	movs	r3, #0
 800e93a:	f887 314b 	strb.w	r3, [r7, #331]	; 0x14b
 800e93e:	2300      	movs	r3, #0
 800e940:	f887 314a 	strb.w	r3, [r7, #330]	; 0x14a
 800e944:	2300      	movs	r3, #0
 800e946:	f887 3149 	strb.w	r3, [r7, #329]	; 0x149
 800e94a:	f897 314b 	ldrb.w	r3, [r7, #331]	; 0x14b
 800e94e:	041b      	lsls	r3, r3, #16
 800e950:	461a      	mov	r2, r3
 800e952:	f897 314a 	ldrb.w	r3, [r7, #330]	; 0x14a
 800e956:	021b      	lsls	r3, r3, #8
 800e958:	431a      	orrs	r2, r3
 800e95a:	f897 3149 	ldrb.w	r3, [r7, #329]	; 0x149
 800e95e:	4313      	orrs	r3, r2
 800e960:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e964:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800e968:	4611      	mov	r1, r2
 800e96a:	4618      	mov	r0, r3
 800e96c:	f7fb f978 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800e970:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800e972:	461a      	mov	r2, r3
 800e974:	f8c7 414c 	str.w	r4, [r7, #332]	; 0x14c
 800e978:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e97c:	f5a3 73a0 	sub.w	r3, r3, #320	; 0x140
 800e980:	601a      	str	r2, [r3, #0]
        color = newColor;
 800e982:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 800e986:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800e98a:	f5a2 72a0 	sub.w	r2, r2, #320	; 0x140
 800e98e:	6812      	ldr	r2, [r2, #0]
 800e990:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e992:	bf00      	nop
    CO_text.setLinespacing(0);
 800e994:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e998:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e99c:	681b      	ldr	r3, [r3, #0]
 800e99e:	f503 736d 	add.w	r3, r3, #948	; 0x3b4
 800e9a2:	f8c7 3154 	str.w	r3, [r7, #340]	; 0x154
 800e9a6:	2300      	movs	r3, #0
 800e9a8:	f8a7 3152 	strh.w	r3, [r7, #338]	; 0x152
        linespace = space;
 800e9ac:	f8d7 3154 	ldr.w	r3, [r7, #340]	; 0x154
 800e9b0:	f8b7 2152 	ldrh.w	r2, [r7, #338]	; 0x152
 800e9b4:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800e9b6:	f8d7 3154 	ldr.w	r3, [r7, #340]	; 0x154
 800e9ba:	681b      	ldr	r3, [r3, #0]
 800e9bc:	3384      	adds	r3, #132	; 0x84
 800e9be:	681b      	ldr	r3, [r3, #0]
 800e9c0:	f8d7 4154 	ldr.w	r4, [r7, #340]	; 0x154
 800e9c4:	463a      	mov	r2, r7
 800e9c6:	f8d7 1154 	ldr.w	r1, [r7, #340]	; 0x154
 800e9ca:	4610      	mov	r0, r2
 800e9cc:	4798      	blx	r3
 800e9ce:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e9d2:	f5a3 72ac 	sub.w	r2, r3, #344	; 0x158
 800e9d6:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e9da:	ca07      	ldmia	r2, {r0, r1, r2}
 800e9dc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e9e0:	bf00      	nop
    CO_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A6VB));
 800e9e2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e9e6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e9ea:	681b      	ldr	r3, [r3, #0]
 800e9ec:	f503 746d 	add.w	r4, r3, #948	; 0x3b4
 800e9f0:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800e9f4:	210c      	movs	r1, #12
 800e9f6:	4618      	mov	r0, r3
 800e9f8:	f7fb fc1c 	bl	800a234 <_ZN8touchgfx9TypedTextC1Et>
 800e9fc:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800ea00:	4619      	mov	r1, r3
 800ea02:	4620      	mov	r0, r4
 800ea04:	f007 fc5e 	bl	80162c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800ea08:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800ea0c:	4618      	mov	r0, r3
 800ea0e:	f7fa ff3f 	bl	8009890 <_ZN8touchgfx9TypedTextD1Ev>
    add(CO_text);
 800ea12:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800ea16:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800ea1a:	681a      	ldr	r2, [r3, #0]
 800ea1c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800ea20:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800ea24:	681b      	ldr	r3, [r3, #0]
 800ea26:	f503 736d 	add.w	r3, r3, #948	; 0x3b4
 800ea2a:	4619      	mov	r1, r3
 800ea2c:	4610      	mov	r0, r2
 800ea2e:	f7fb fb69 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800ea32:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800ea36:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800ea3a:	681b      	ldr	r3, [r3, #0]
 800ea3c:	4618      	mov	r0, r3
 800ea3e:	f507 77ac 	add.w	r7, r7, #344	; 0x158
 800ea42:	46bd      	mov	sp, r7
 800ea44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ea48 <_ZN18MainScreenViewBaseD1Ev>:

MainScreenViewBase::~MainScreenViewBase()
 800ea48:	b580      	push	{r7, lr}
 800ea4a:	b082      	sub	sp, #8
 800ea4c:	af00      	add	r7, sp, #0
 800ea4e:	6078      	str	r0, [r7, #4]
 800ea50:	4a28      	ldr	r2, [pc, #160]	; (800eaf4 <_ZN18MainScreenViewBaseD1Ev+0xac>)
 800ea52:	687b      	ldr	r3, [r7, #4]
 800ea54:	601a      	str	r2, [r3, #0]
 800ea56:	687b      	ldr	r3, [r7, #4]
 800ea58:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 800ea5c:	4618      	mov	r0, r3
 800ea5e:	f000 fa21 	bl	800eea4 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800ea62:	687b      	ldr	r3, [r7, #4]
 800ea64:	f503 736d 	add.w	r3, r3, #948	; 0x3b4
 800ea68:	4618      	mov	r0, r3
 800ea6a:	f7fb fd37 	bl	800a4dc <_ZN8touchgfx8TextAreaD1Ev>
 800ea6e:	687b      	ldr	r3, [r7, #4]
 800ea70:	f503 735b 	add.w	r3, r3, #876	; 0x36c
 800ea74:	4618      	mov	r0, r3
 800ea76:	f7fb fd31 	bl	800a4dc <_ZN8touchgfx8TextAreaD1Ev>
 800ea7a:	687b      	ldr	r3, [r7, #4]
 800ea7c:	f503 7349 	add.w	r3, r3, #804	; 0x324
 800ea80:	4618      	mov	r0, r3
 800ea82:	f7fb fd2b 	bl	800a4dc <_ZN8touchgfx8TextAreaD1Ev>
 800ea86:	687b      	ldr	r3, [r7, #4]
 800ea88:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800ea8c:	4618      	mov	r0, r3
 800ea8e:	f7fb fd25 	bl	800a4dc <_ZN8touchgfx8TextAreaD1Ev>
 800ea92:	687b      	ldr	r3, [r7, #4]
 800ea94:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800ea98:	4618      	mov	r0, r3
 800ea9a:	f7fb fd1f 	bl	800a4dc <_ZN8touchgfx8TextAreaD1Ev>
 800ea9e:	687b      	ldr	r3, [r7, #4]
 800eaa0:	f503 7307 	add.w	r3, r3, #540	; 0x21c
 800eaa4:	4618      	mov	r0, r3
 800eaa6:	f000 fa1f 	bl	800eee8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800eaaa:	687b      	ldr	r3, [r7, #4]
 800eaac:	f503 73d2 	add.w	r3, r3, #420	; 0x1a4
 800eab0:	4618      	mov	r0, r3
 800eab2:	f000 fa19 	bl	800eee8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800eab6:	687b      	ldr	r3, [r7, #4]
 800eab8:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800eabc:	4618      	mov	r0, r3
 800eabe:	f000 fa13 	bl	800eee8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800eac2:	687b      	ldr	r3, [r7, #4]
 800eac4:	33b4      	adds	r3, #180	; 0xb4
 800eac6:	4618      	mov	r0, r3
 800eac8:	f000 fa0e 	bl	800eee8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800eacc:	687b      	ldr	r3, [r7, #4]
 800eace:	336c      	adds	r3, #108	; 0x6c
 800ead0:	4618      	mov	r0, r3
 800ead2:	f7fb fd03 	bl	800a4dc <_ZN8touchgfx8TextAreaD1Ev>
 800ead6:	687b      	ldr	r3, [r7, #4]
 800ead8:	3340      	adds	r3, #64	; 0x40
 800eada:	4618      	mov	r0, r3
 800eadc:	f7fc f8b2 	bl	800ac44 <_ZN8touchgfx3BoxD1Ev>
 800eae0:	687b      	ldr	r3, [r7, #4]
 800eae2:	4618      	mov	r0, r3
 800eae4:	f7fe fff2 	bl	800dacc <_ZN8touchgfx4ViewI19MainScreenPresenterED1Ev>
{

}
 800eae8:	687b      	ldr	r3, [r7, #4]
 800eaea:	4618      	mov	r0, r3
 800eaec:	3708      	adds	r7, #8
 800eaee:	46bd      	mov	sp, r7
 800eaf0:	bd80      	pop	{r7, pc}
 800eaf2:	bf00      	nop
 800eaf4:	0802e29c 	.word	0x0802e29c

0800eaf8 <_ZN18MainScreenViewBaseD0Ev>:
MainScreenViewBase::~MainScreenViewBase()
 800eaf8:	b580      	push	{r7, lr}
 800eafa:	b082      	sub	sp, #8
 800eafc:	af00      	add	r7, sp, #0
 800eafe:	6078      	str	r0, [r7, #4]
}
 800eb00:	6878      	ldr	r0, [r7, #4]
 800eb02:	f7ff ffa1 	bl	800ea48 <_ZN18MainScreenViewBaseD1Ev>
 800eb06:	f240 410c 	movw	r1, #1036	; 0x40c
 800eb0a:	6878      	ldr	r0, [r7, #4]
 800eb0c:	f01b fe67 	bl	802a7de <_ZdlPvj>
 800eb10:	687b      	ldr	r3, [r7, #4]
 800eb12:	4618      	mov	r0, r3
 800eb14:	3708      	adds	r7, #8
 800eb16:	46bd      	mov	sp, r7
 800eb18:	bd80      	pop	{r7, pc}

0800eb1a <_ZN18MainScreenViewBase11setupScreenEv>:

void MainScreenViewBase::setupScreen()
{
 800eb1a:	b480      	push	{r7}
 800eb1c:	b083      	sub	sp, #12
 800eb1e:	af00      	add	r7, sp, #0
 800eb20:	6078      	str	r0, [r7, #4]

}
 800eb22:	bf00      	nop
 800eb24:	370c      	adds	r7, #12
 800eb26:	46bd      	mov	sp, r7
 800eb28:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb2c:	4770      	bx	lr

0800eb2e <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void MainScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800eb2e:	b580      	push	{r7, lr}
 800eb30:	b082      	sub	sp, #8
 800eb32:	af00      	add	r7, sp, #0
 800eb34:	6078      	str	r0, [r7, #4]
 800eb36:	6039      	str	r1, [r7, #0]
    if (&src == &Clock_button)
 800eb38:	687b      	ldr	r3, [r7, #4]
 800eb3a:	33b4      	adds	r3, #180	; 0xb4
 800eb3c:	683a      	ldr	r2, [r7, #0]
 800eb3e:	429a      	cmp	r2, r3
 800eb40:	d106      	bne.n	800eb50 <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //MainToClock
        //When Clock_button clicked change screen to ClockScreen
        //Go to ClockScreen with screen transition towards East
        application().gotoClockScreenScreenSlideTransitionEast();
 800eb42:	6878      	ldr	r0, [r7, #4]
 800eb44:	f7fe ffb6 	bl	800dab4 <_ZN18MainScreenViewBase11applicationEv>
 800eb48:	4603      	mov	r3, r0
 800eb4a:	4618      	mov	r0, r3
 800eb4c:	f7fc fc8e 	bl	800b46c <_ZN23FrontendApplicationBase40gotoClockScreenScreenSlideTransitionEastEv>
    }
    if (&src == &Pressure_button)
 800eb50:	687b      	ldr	r3, [r7, #4]
 800eb52:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800eb56:	683a      	ldr	r2, [r7, #0]
 800eb58:	429a      	cmp	r2, r3
 800eb5a:	d106      	bne.n	800eb6a <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3c>
    {
        //MainToPressure
        //When Pressure_button clicked change screen to PressureScreen
        //Go to PressureScreen with screen transition towards East
        application().gotoPressureScreenScreenSlideTransitionEast();
 800eb5c:	6878      	ldr	r0, [r7, #4]
 800eb5e:	f7fe ffa9 	bl	800dab4 <_ZN18MainScreenViewBase11applicationEv>
 800eb62:	4603      	mov	r3, r0
 800eb64:	4618      	mov	r0, r3
 800eb66:	f7fc fd53 	bl	800b610 <_ZN23FrontendApplicationBase43gotoPressureScreenScreenSlideTransitionEastEv>
    }
    if (&src == &Temperature_button)
 800eb6a:	687b      	ldr	r3, [r7, #4]
 800eb6c:	f503 7307 	add.w	r3, r3, #540	; 0x21c
 800eb70:	683a      	ldr	r2, [r7, #0]
 800eb72:	429a      	cmp	r2, r3
 800eb74:	d106      	bne.n	800eb84 <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x56>
    {
        //MainToTempertature
        //When Temperature_button clicked change screen to TemperatureScreen
        //Go to TemperatureScreen with screen transition towards East
        application().gotoTemperatureScreenScreenSlideTransitionEast();
 800eb76:	6878      	ldr	r0, [r7, #4]
 800eb78:	f7fe ff9c 	bl	800dab4 <_ZN18MainScreenViewBase11applicationEv>
 800eb7c:	4603      	mov	r3, r0
 800eb7e:	4618      	mov	r0, r3
 800eb80:	f7fc fcba 	bl	800b4f8 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenSlideTransitionEastEv>
    }
    if (&src == &CO_button)
 800eb84:	687b      	ldr	r3, [r7, #4]
 800eb86:	f503 73d2 	add.w	r3, r3, #420	; 0x1a4
 800eb8a:	683a      	ldr	r2, [r7, #0]
 800eb8c:	429a      	cmp	r2, r3
 800eb8e:	d106      	bne.n	800eb9e <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x70>
    {
        //MainToCO
        //When CO_button clicked change screen to COScreen
        //Go to COScreen with screen transition towards East
        application().gotoCOScreenScreenSlideTransitionEast();
 800eb90:	6878      	ldr	r0, [r7, #4]
 800eb92:	f7fe ff8f 	bl	800dab4 <_ZN18MainScreenViewBase11applicationEv>
 800eb96:	4603      	mov	r3, r0
 800eb98:	4618      	mov	r0, r3
 800eb9a:	f7fc fd7f 	bl	800b69c <_ZN23FrontendApplicationBase37gotoCOScreenScreenSlideTransitionEastEv>
    }
}
 800eb9e:	bf00      	nop
 800eba0:	3708      	adds	r7, #8
 800eba2:	46bd      	mov	sp, r7
 800eba4:	bd80      	pop	{r7, pc}
	...

0800eba8 <_ZN8touchgfx4ViewI19MainScreenPresenterEC1Ev>:
    View()
 800eba8:	b580      	push	{r7, lr}
 800ebaa:	b082      	sub	sp, #8
 800ebac:	af00      	add	r7, sp, #0
 800ebae:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800ebb0:	687b      	ldr	r3, [r7, #4]
 800ebb2:	4618      	mov	r0, r3
 800ebb4:	f00b ffc4 	bl	801ab40 <_ZN8touchgfx6ScreenC1Ev>
 800ebb8:	4a05      	ldr	r2, [pc, #20]	; (800ebd0 <_ZN8touchgfx4ViewI19MainScreenPresenterEC1Ev+0x28>)
 800ebba:	687b      	ldr	r3, [r7, #4]
 800ebbc:	601a      	str	r2, [r3, #0]
 800ebbe:	687b      	ldr	r3, [r7, #4]
 800ebc0:	2200      	movs	r2, #0
 800ebc2:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800ebc4:	687b      	ldr	r3, [r7, #4]
 800ebc6:	4618      	mov	r0, r3
 800ebc8:	3708      	adds	r7, #8
 800ebca:	46bd      	mov	sp, r7
 800ebcc:	bd80      	pop	{r7, pc}
 800ebce:	bf00      	nop
 800ebd0:	0802e384 	.word	0x0802e384

0800ebd4 <_ZN8touchgfx18ClickButtonTriggerC1Ev>:
class ClickButtonTrigger : public AbstractButtonContainer
 800ebd4:	b580      	push	{r7, lr}
 800ebd6:	b082      	sub	sp, #8
 800ebd8:	af00      	add	r7, sp, #0
 800ebda:	6078      	str	r0, [r7, #4]
 800ebdc:	687b      	ldr	r3, [r7, #4]
 800ebde:	4618      	mov	r0, r3
 800ebe0:	f7fe fe26 	bl	800d830 <_ZN8touchgfx23AbstractButtonContainerC1Ev>
 800ebe4:	4a03      	ldr	r2, [pc, #12]	; (800ebf4 <_ZN8touchgfx18ClickButtonTriggerC1Ev+0x20>)
 800ebe6:	687b      	ldr	r3, [r7, #4]
 800ebe8:	601a      	str	r2, [r3, #0]
 800ebea:	687b      	ldr	r3, [r7, #4]
 800ebec:	4618      	mov	r0, r3
 800ebee:	3708      	adds	r7, #8
 800ebf0:	46bd      	mov	sp, r7
 800ebf2:	bd80      	pop	{r7, pc}
 800ebf4:	0802e3b8 	.word	0x0802e3b8

0800ebf8 <_ZN8touchgfx18ClickButtonTriggerD1Ev>:
 800ebf8:	b580      	push	{r7, lr}
 800ebfa:	b082      	sub	sp, #8
 800ebfc:	af00      	add	r7, sp, #0
 800ebfe:	6078      	str	r0, [r7, #4]
 800ec00:	4a05      	ldr	r2, [pc, #20]	; (800ec18 <_ZN8touchgfx18ClickButtonTriggerD1Ev+0x20>)
 800ec02:	687b      	ldr	r3, [r7, #4]
 800ec04:	601a      	str	r2, [r3, #0]
 800ec06:	687b      	ldr	r3, [r7, #4]
 800ec08:	4618      	mov	r0, r3
 800ec0a:	f7fe ff31 	bl	800da70 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800ec0e:	687b      	ldr	r3, [r7, #4]
 800ec10:	4618      	mov	r0, r3
 800ec12:	3708      	adds	r7, #8
 800ec14:	46bd      	mov	sp, r7
 800ec16:	bd80      	pop	{r7, pc}
 800ec18:	0802e3b8 	.word	0x0802e3b8

0800ec1c <_ZN8touchgfx18ClickButtonTriggerD0Ev>:
 800ec1c:	b580      	push	{r7, lr}
 800ec1e:	b082      	sub	sp, #8
 800ec20:	af00      	add	r7, sp, #0
 800ec22:	6078      	str	r0, [r7, #4]
 800ec24:	6878      	ldr	r0, [r7, #4]
 800ec26:	f7ff ffe7 	bl	800ebf8 <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800ec2a:	2134      	movs	r1, #52	; 0x34
 800ec2c:	6878      	ldr	r0, [r7, #4]
 800ec2e:	f01b fdd6 	bl	802a7de <_ZdlPvj>
 800ec32:	687b      	ldr	r3, [r7, #4]
 800ec34:	4618      	mov	r0, r3
 800ec36:	3708      	adds	r7, #8
 800ec38:	46bd      	mov	sp, r7
 800ec3a:	bd80      	pop	{r7, pc}

0800ec3c <_ZN8touchgfx13BoxWithBorderD1Ev>:
class BoxWithBorder : public Box
 800ec3c:	b580      	push	{r7, lr}
 800ec3e:	b082      	sub	sp, #8
 800ec40:	af00      	add	r7, sp, #0
 800ec42:	6078      	str	r0, [r7, #4]
 800ec44:	4a05      	ldr	r2, [pc, #20]	; (800ec5c <_ZN8touchgfx13BoxWithBorderD1Ev+0x20>)
 800ec46:	687b      	ldr	r3, [r7, #4]
 800ec48:	601a      	str	r2, [r3, #0]
 800ec4a:	687b      	ldr	r3, [r7, #4]
 800ec4c:	4618      	mov	r0, r3
 800ec4e:	f7fb fff9 	bl	800ac44 <_ZN8touchgfx3BoxD1Ev>
 800ec52:	687b      	ldr	r3, [r7, #4]
 800ec54:	4618      	mov	r0, r3
 800ec56:	3708      	adds	r7, #8
 800ec58:	46bd      	mov	sp, r7
 800ec5a:	bd80      	pop	{r7, pc}
 800ec5c:	0802f830 	.word	0x0802f830

0800ec60 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800ec60:	b580      	push	{r7, lr}
 800ec62:	b082      	sub	sp, #8
 800ec64:	af00      	add	r7, sp, #0
 800ec66:	6078      	str	r0, [r7, #4]
 800ec68:	6878      	ldr	r0, [r7, #4]
 800ec6a:	f7ff ffe7 	bl	800ec3c <_ZN8touchgfx13BoxWithBorderD1Ev>
 800ec6e:	2134      	movs	r1, #52	; 0x34
 800ec70:	6878      	ldr	r0, [r7, #4]
 800ec72:	f01b fdb4 	bl	802a7de <_ZdlPvj>
 800ec76:	687b      	ldr	r3, [r7, #4]
 800ec78:	4618      	mov	r0, r3
 800ec7a:	3708      	adds	r7, #8
 800ec7c:	46bd      	mov	sp, r7
 800ec7e:	bd80      	pop	{r7, pc}

0800ec80 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
 */
template <class T>
class BoxWithBorderButtonStyle : public T
{
public:
    BoxWithBorderButtonStyle()
 800ec80:	b580      	push	{r7, lr}
 800ec82:	b082      	sub	sp, #8
 800ec84:	af00      	add	r7, sp, #0
 800ec86:	6078      	str	r0, [r7, #4]
        : T(), up(), down()
 800ec88:	687b      	ldr	r3, [r7, #4]
 800ec8a:	4618      	mov	r0, r3
 800ec8c:	2334      	movs	r3, #52	; 0x34
 800ec8e:	461a      	mov	r2, r3
 800ec90:	2100      	movs	r1, #0
 800ec92:	f01c fd9a 	bl	802b7ca <memset>
 800ec96:	687b      	ldr	r3, [r7, #4]
 800ec98:	4618      	mov	r0, r3
 800ec9a:	f7ff ff9b 	bl	800ebd4 <_ZN8touchgfx18ClickButtonTriggerC1Ev>
 800ec9e:	4a17      	ldr	r2, [pc, #92]	; (800ecfc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x7c>)
 800eca0:	687b      	ldr	r3, [r7, #4]
 800eca2:	601a      	str	r2, [r3, #0]
 800eca4:	687b      	ldr	r3, [r7, #4]
 800eca6:	3334      	adds	r3, #52	; 0x34
 800eca8:	4618      	mov	r0, r3
 800ecaa:	f7fe fe5b 	bl	800d964 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800ecae:	687b      	ldr	r3, [r7, #4]
 800ecb0:	3368      	adds	r3, #104	; 0x68
 800ecb2:	4618      	mov	r0, r3
 800ecb4:	f7fe fd60 	bl	800d778 <_ZN8touchgfx9colortypeC1Ev>
 800ecb8:	687b      	ldr	r3, [r7, #4]
 800ecba:	336c      	adds	r3, #108	; 0x6c
 800ecbc:	4618      	mov	r0, r3
 800ecbe:	f7fe fd5b 	bl	800d778 <_ZN8touchgfx9colortypeC1Ev>
 800ecc2:	687b      	ldr	r3, [r7, #4]
 800ecc4:	3370      	adds	r3, #112	; 0x70
 800ecc6:	4618      	mov	r0, r3
 800ecc8:	f7fe fd56 	bl	800d778 <_ZN8touchgfx9colortypeC1Ev>
 800eccc:	687b      	ldr	r3, [r7, #4]
 800ecce:	3374      	adds	r3, #116	; 0x74
 800ecd0:	4618      	mov	r0, r3
 800ecd2:	f7fe fd51 	bl	800d778 <_ZN8touchgfx9colortypeC1Ev>
    {
        borderBox.setXY(0, 0);
 800ecd6:	687b      	ldr	r3, [r7, #4]
 800ecd8:	3334      	adds	r3, #52	; 0x34
 800ecda:	2200      	movs	r2, #0
 800ecdc:	2100      	movs	r1, #0
 800ecde:	4618      	mov	r0, r3
 800ece0:	f7fb f8c1 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 800ece4:	687a      	ldr	r2, [r7, #4]
 800ece6:	687b      	ldr	r3, [r7, #4]
 800ece8:	3334      	adds	r3, #52	; 0x34
 800ecea:	4619      	mov	r1, r3
 800ecec:	4610      	mov	r0, r2
 800ecee:	f004 f9a1 	bl	8013034 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800ecf2:	687b      	ldr	r3, [r7, #4]
 800ecf4:	4618      	mov	r0, r3
 800ecf6:	3708      	adds	r7, #8
 800ecf8:	46bd      	mov	sp, r7
 800ecfa:	bd80      	pop	{r7, pc}
 800ecfc:	0802e2e8 	.word	0x0802e2e8

0800ed00 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800ed00:	b480      	push	{r7}
 800ed02:	b083      	sub	sp, #12
 800ed04:	af00      	add	r7, sp, #0
 800ed06:	6078      	str	r0, [r7, #4]
 800ed08:	4a04      	ldr	r2, [pc, #16]	; (800ed1c <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev+0x1c>)
 800ed0a:	687b      	ldr	r3, [r7, #4]
 800ed0c:	601a      	str	r2, [r3, #0]
 800ed0e:	687b      	ldr	r3, [r7, #4]
 800ed10:	4618      	mov	r0, r3
 800ed12:	370c      	adds	r7, #12
 800ed14:	46bd      	mov	sp, r7
 800ed16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed1a:	4770      	bx	lr
 800ed1c:	0802e454 	.word	0x0802e454

0800ed20 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800ed20:	b580      	push	{r7, lr}
 800ed22:	b084      	sub	sp, #16
 800ed24:	af00      	add	r7, sp, #0
 800ed26:	60f8      	str	r0, [r7, #12]
 800ed28:	60b9      	str	r1, [r7, #8]
 800ed2a:	4639      	mov	r1, r7
 800ed2c:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800ed30:	68fb      	ldr	r3, [r7, #12]
 800ed32:	4618      	mov	r0, r3
 800ed34:	f7ff ffe4 	bl	800ed00 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800ed38:	4a08      	ldr	r2, [pc, #32]	; (800ed5c <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800ed3a:	68fb      	ldr	r3, [r7, #12]
 800ed3c:	601a      	str	r2, [r3, #0]
 800ed3e:	68fb      	ldr	r3, [r7, #12]
 800ed40:	68ba      	ldr	r2, [r7, #8]
 800ed42:	605a      	str	r2, [r3, #4]
 800ed44:	68fb      	ldr	r3, [r7, #12]
 800ed46:	3308      	adds	r3, #8
 800ed48:	463a      	mov	r2, r7
 800ed4a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ed4e:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800ed52:	68fb      	ldr	r3, [r7, #12]
 800ed54:	4618      	mov	r0, r3
 800ed56:	3710      	adds	r7, #16
 800ed58:	46bd      	mov	sp, r7
 800ed5a:	bd80      	pop	{r7, pc}
 800ed5c:	0802e2d0 	.word	0x0802e2d0

0800ed60 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>:
     * @param  width  The width of this BoxWithBorderButtonStyle.
     * @param  height The height of this BoxWithBorderButtonStyle.
     *
     * @note Changing this does not automatically yield a redraw.
     */
    void setBoxWithBorderPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800ed60:	b590      	push	{r4, r7, lr}
 800ed62:	b087      	sub	sp, #28
 800ed64:	af02      	add	r7, sp, #8
 800ed66:	60f8      	str	r0, [r7, #12]
 800ed68:	4608      	mov	r0, r1
 800ed6a:	4611      	mov	r1, r2
 800ed6c:	461a      	mov	r2, r3
 800ed6e:	4603      	mov	r3, r0
 800ed70:	817b      	strh	r3, [r7, #10]
 800ed72:	460b      	mov	r3, r1
 800ed74:	813b      	strh	r3, [r7, #8]
 800ed76:	4613      	mov	r3, r2
 800ed78:	80fb      	strh	r3, [r7, #6]
    {
        borderBox.setPosition(x, y, width, height);
 800ed7a:	68fb      	ldr	r3, [r7, #12]
 800ed7c:	f103 0034 	add.w	r0, r3, #52	; 0x34
 800ed80:	f9b7 4006 	ldrsh.w	r4, [r7, #6]
 800ed84:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800ed88:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800ed8c:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 800ed90:	9300      	str	r3, [sp, #0]
 800ed92:	4623      	mov	r3, r4
 800ed94:	f7fb f828 	bl	8009de8 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800ed98:	bf00      	nop
 800ed9a:	3714      	adds	r7, #20
 800ed9c:	46bd      	mov	sp, r7
 800ed9e:	bd90      	pop	{r4, r7, pc}

0800eda0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>:
    /**
     * Sets border size.
     *
     * @param  size The size.
     */
    void setBorderSize(uint8_t size)
 800eda0:	b580      	push	{r7, lr}
 800eda2:	b082      	sub	sp, #8
 800eda4:	af00      	add	r7, sp, #0
 800eda6:	6078      	str	r0, [r7, #4]
 800eda8:	460b      	mov	r3, r1
 800edaa:	70fb      	strb	r3, [r7, #3]
    {
        borderBox.setBorderSize(size);
 800edac:	687b      	ldr	r3, [r7, #4]
 800edae:	3334      	adds	r3, #52	; 0x34
 800edb0:	78fa      	ldrb	r2, [r7, #3]
 800edb2:	b292      	uxth	r2, r2
 800edb4:	4611      	mov	r1, r2
 800edb6:	4618      	mov	r0, r3
 800edb8:	f7fe fdfe 	bl	800d9b8 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    }
 800edbc:	bf00      	nop
 800edbe:	3708      	adds	r7, #8
 800edc0:	46bd      	mov	sp, r7
 800edc2:	bd80      	pop	{r7, pc}

0800edc4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 800edc4:	b580      	push	{r7, lr}
 800edc6:	b084      	sub	sp, #16
 800edc8:	af00      	add	r7, sp, #0
 800edca:	60f8      	str	r0, [r7, #12]
 800edcc:	60b9      	str	r1, [r7, #8]
 800edce:	607a      	str	r2, [r7, #4]
 800edd0:	603b      	str	r3, [r7, #0]
        up = colorReleased;
 800edd2:	68fb      	ldr	r3, [r7, #12]
 800edd4:	68ba      	ldr	r2, [r7, #8]
 800edd6:	669a      	str	r2, [r3, #104]	; 0x68
        down = colorPressed;
 800edd8:	68fb      	ldr	r3, [r7, #12]
 800edda:	687a      	ldr	r2, [r7, #4]
 800eddc:	66da      	str	r2, [r3, #108]	; 0x6c
        borderUp = borderColorReleased;
 800edde:	68fb      	ldr	r3, [r7, #12]
 800ede0:	683a      	ldr	r2, [r7, #0]
 800ede2:	671a      	str	r2, [r3, #112]	; 0x70
        borderDown = borderColorPressed;
 800ede4:	68fb      	ldr	r3, [r7, #12]
 800ede6:	69ba      	ldr	r2, [r7, #24]
 800ede8:	675a      	str	r2, [r3, #116]	; 0x74
        handlePressedUpdated();
 800edea:	68fb      	ldr	r3, [r7, #12]
 800edec:	681b      	ldr	r3, [r3, #0]
 800edee:	338c      	adds	r3, #140	; 0x8c
 800edf0:	681b      	ldr	r3, [r3, #0]
 800edf2:	68f8      	ldr	r0, [r7, #12]
 800edf4:	4798      	blx	r3
    }
 800edf6:	bf00      	nop
 800edf8:	3710      	adds	r7, #16
 800edfa:	46bd      	mov	sp, r7
 800edfc:	bd80      	pop	{r7, pc}
	...

0800ee00 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>:
    virtual ~GenericCallback()
 800ee00:	b480      	push	{r7}
 800ee02:	b083      	sub	sp, #12
 800ee04:	af00      	add	r7, sp, #0
 800ee06:	6078      	str	r0, [r7, #4]
    }
 800ee08:	4a04      	ldr	r2, [pc, #16]	; (800ee1c <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev+0x1c>)
 800ee0a:	687b      	ldr	r3, [r7, #4]
 800ee0c:	601a      	str	r2, [r3, #0]
 800ee0e:	687b      	ldr	r3, [r7, #4]
 800ee10:	4618      	mov	r0, r3
 800ee12:	370c      	adds	r7, #12
 800ee14:	46bd      	mov	sp, r7
 800ee16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee1a:	4770      	bx	lr
 800ee1c:	0802e454 	.word	0x0802e454

0800ee20 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED0Ev>:
    virtual ~GenericCallback()
 800ee20:	b580      	push	{r7, lr}
 800ee22:	b082      	sub	sp, #8
 800ee24:	af00      	add	r7, sp, #0
 800ee26:	6078      	str	r0, [r7, #4]
    }
 800ee28:	6878      	ldr	r0, [r7, #4]
 800ee2a:	f7ff ffe9 	bl	800ee00 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800ee2e:	2104      	movs	r1, #4
 800ee30:	6878      	ldr	r0, [r7, #4]
 800ee32:	f01b fcd4 	bl	802a7de <_ZdlPvj>
 800ee36:	687b      	ldr	r3, [r7, #4]
 800ee38:	4618      	mov	r0, r3
 800ee3a:	3708      	adds	r7, #8
 800ee3c:	46bd      	mov	sp, r7
 800ee3e:	bd80      	pop	{r7, pc}

0800ee40 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype down;          ///< The down
    colortype borderUp;      ///< The border up
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800ee40:	b590      	push	{r4, r7, lr}
 800ee42:	b083      	sub	sp, #12
 800ee44:	af00      	add	r7, sp, #0
 800ee46:	6078      	str	r0, [r7, #4]
    {
        borderBox.setColor(T::getPressed() ? down : up);
 800ee48:	687b      	ldr	r3, [r7, #4]
 800ee4a:	f103 0434 	add.w	r4, r3, #52	; 0x34
 800ee4e:	687b      	ldr	r3, [r7, #4]
 800ee50:	4618      	mov	r0, r3
 800ee52:	f7fe fd23 	bl	800d89c <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800ee56:	4603      	mov	r3, r0
 800ee58:	2b00      	cmp	r3, #0
 800ee5a:	d002      	beq.n	800ee62 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x22>
 800ee5c:	687b      	ldr	r3, [r7, #4]
 800ee5e:	336c      	adds	r3, #108	; 0x6c
 800ee60:	e001      	b.n	800ee66 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x26>
 800ee62:	687b      	ldr	r3, [r7, #4]
 800ee64:	3368      	adds	r3, #104	; 0x68
 800ee66:	6819      	ldr	r1, [r3, #0]
 800ee68:	4620      	mov	r0, r4
 800ee6a:	f7fb f9d5 	bl	800a218 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800ee6e:	687b      	ldr	r3, [r7, #4]
 800ee70:	f103 0434 	add.w	r4, r3, #52	; 0x34
 800ee74:	687b      	ldr	r3, [r7, #4]
 800ee76:	4618      	mov	r0, r3
 800ee78:	f7fe fd10 	bl	800d89c <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800ee7c:	4603      	mov	r3, r0
 800ee7e:	2b00      	cmp	r3, #0
 800ee80:	d002      	beq.n	800ee88 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x48>
 800ee82:	687b      	ldr	r3, [r7, #4]
 800ee84:	3374      	adds	r3, #116	; 0x74
 800ee86:	e001      	b.n	800ee8c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x4c>
 800ee88:	687b      	ldr	r3, [r7, #4]
 800ee8a:	3370      	adds	r3, #112	; 0x70
 800ee8c:	6819      	ldr	r1, [r3, #0]
 800ee8e:	4620      	mov	r0, r4
 800ee90:	f7fe fd84 	bl	800d99c <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
        T::handlePressedUpdated();
 800ee94:	687b      	ldr	r3, [r7, #4]
 800ee96:	4618      	mov	r0, r3
 800ee98:	f7fe fd4f 	bl	800d93a <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>
    }
 800ee9c:	bf00      	nop
 800ee9e:	370c      	adds	r7, #12
 800eea0:	46bd      	mov	sp, r7
 800eea2:	bd90      	pop	{r4, r7, pc}

0800eea4 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800eea4:	b580      	push	{r7, lr}
 800eea6:	b082      	sub	sp, #8
 800eea8:	af00      	add	r7, sp, #0
 800eeaa:	6078      	str	r0, [r7, #4]
 800eeac:	4a05      	ldr	r2, [pc, #20]	; (800eec4 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800eeae:	687b      	ldr	r3, [r7, #4]
 800eeb0:	601a      	str	r2, [r3, #0]
 800eeb2:	687b      	ldr	r3, [r7, #4]
 800eeb4:	4618      	mov	r0, r3
 800eeb6:	f7ff ffa3 	bl	800ee00 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800eeba:	687b      	ldr	r3, [r7, #4]
 800eebc:	4618      	mov	r0, r3
 800eebe:	3708      	adds	r7, #8
 800eec0:	46bd      	mov	sp, r7
 800eec2:	bd80      	pop	{r7, pc}
 800eec4:	0802e2d0 	.word	0x0802e2d0

0800eec8 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800eec8:	b580      	push	{r7, lr}
 800eeca:	b082      	sub	sp, #8
 800eecc:	af00      	add	r7, sp, #0
 800eece:	6078      	str	r0, [r7, #4]
 800eed0:	6878      	ldr	r0, [r7, #4]
 800eed2:	f7ff ffe7 	bl	800eea4 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800eed6:	2110      	movs	r1, #16
 800eed8:	6878      	ldr	r0, [r7, #4]
 800eeda:	f01b fc80 	bl	802a7de <_ZdlPvj>
 800eede:	687b      	ldr	r3, [r7, #4]
 800eee0:	4618      	mov	r0, r3
 800eee2:	3708      	adds	r7, #8
 800eee4:	46bd      	mov	sp, r7
 800eee6:	bd80      	pop	{r7, pc}

0800eee8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
 800eee8:	b580      	push	{r7, lr}
 800eeea:	b082      	sub	sp, #8
 800eeec:	af00      	add	r7, sp, #0
 800eeee:	6078      	str	r0, [r7, #4]
 800eef0:	4a08      	ldr	r2, [pc, #32]	; (800ef14 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev+0x2c>)
 800eef2:	687b      	ldr	r3, [r7, #4]
 800eef4:	601a      	str	r2, [r3, #0]
 800eef6:	687b      	ldr	r3, [r7, #4]
 800eef8:	3334      	adds	r3, #52	; 0x34
 800eefa:	4618      	mov	r0, r3
 800eefc:	f7ff fe9e 	bl	800ec3c <_ZN8touchgfx13BoxWithBorderD1Ev>
 800ef00:	687b      	ldr	r3, [r7, #4]
 800ef02:	4618      	mov	r0, r3
 800ef04:	f7ff fe78 	bl	800ebf8 <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800ef08:	687b      	ldr	r3, [r7, #4]
 800ef0a:	4618      	mov	r0, r3
 800ef0c:	3708      	adds	r7, #8
 800ef0e:	46bd      	mov	sp, r7
 800ef10:	bd80      	pop	{r7, pc}
 800ef12:	bf00      	nop
 800ef14:	0802e2e8 	.word	0x0802e2e8

0800ef18 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
 800ef18:	b580      	push	{r7, lr}
 800ef1a:	b082      	sub	sp, #8
 800ef1c:	af00      	add	r7, sp, #0
 800ef1e:	6078      	str	r0, [r7, #4]
 800ef20:	6878      	ldr	r0, [r7, #4]
 800ef22:	f7ff ffe1 	bl	800eee8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800ef26:	2178      	movs	r1, #120	; 0x78
 800ef28:	6878      	ldr	r0, [r7, #4]
 800ef2a:	f01b fc58 	bl	802a7de <_ZdlPvj>
 800ef2e:	687b      	ldr	r3, [r7, #4]
 800ef30:	4618      	mov	r0, r3
 800ef32:	3708      	adds	r7, #8
 800ef34:	46bd      	mov	sp, r7
 800ef36:	bd80      	pop	{r7, pc}

0800ef38 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800ef38:	b580      	push	{r7, lr}
 800ef3a:	b082      	sub	sp, #8
 800ef3c:	af00      	add	r7, sp, #0
 800ef3e:	6078      	str	r0, [r7, #4]
 800ef40:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800ef42:	687b      	ldr	r3, [r7, #4]
 800ef44:	685b      	ldr	r3, [r3, #4]
 800ef46:	687a      	ldr	r2, [r7, #4]
 800ef48:	68d2      	ldr	r2, [r2, #12]
 800ef4a:	1052      	asrs	r2, r2, #1
 800ef4c:	1898      	adds	r0, r3, r2
 800ef4e:	687b      	ldr	r3, [r7, #4]
 800ef50:	68db      	ldr	r3, [r3, #12]
 800ef52:	f003 0301 	and.w	r3, r3, #1
 800ef56:	2b00      	cmp	r3, #0
 800ef58:	d102      	bne.n	800ef60 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800ef5a:	687b      	ldr	r3, [r7, #4]
 800ef5c:	689b      	ldr	r3, [r3, #8]
 800ef5e:	e00a      	b.n	800ef76 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800ef60:	687b      	ldr	r3, [r7, #4]
 800ef62:	685b      	ldr	r3, [r3, #4]
 800ef64:	687a      	ldr	r2, [r7, #4]
 800ef66:	68d2      	ldr	r2, [r2, #12]
 800ef68:	1052      	asrs	r2, r2, #1
 800ef6a:	4413      	add	r3, r2
 800ef6c:	681b      	ldr	r3, [r3, #0]
 800ef6e:	687a      	ldr	r2, [r7, #4]
 800ef70:	6892      	ldr	r2, [r2, #8]
 800ef72:	4413      	add	r3, r2
 800ef74:	681b      	ldr	r3, [r3, #0]
 800ef76:	6839      	ldr	r1, [r7, #0]
 800ef78:	4798      	blx	r3
    }
 800ef7a:	bf00      	nop
 800ef7c:	3708      	adds	r7, #8
 800ef7e:	46bd      	mov	sp, r7
 800ef80:	bd80      	pop	{r7, pc}

0800ef82 <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800ef82:	b480      	push	{r7}
 800ef84:	b083      	sub	sp, #12
 800ef86:	af00      	add	r7, sp, #0
 800ef88:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800ef8a:	687b      	ldr	r3, [r7, #4]
 800ef8c:	685b      	ldr	r3, [r3, #4]
 800ef8e:	2b00      	cmp	r3, #0
 800ef90:	d010      	beq.n	800efb4 <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800ef92:	687b      	ldr	r3, [r7, #4]
 800ef94:	689b      	ldr	r3, [r3, #8]
 800ef96:	2b00      	cmp	r3, #0
 800ef98:	d107      	bne.n	800efaa <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800ef9a:	687b      	ldr	r3, [r7, #4]
 800ef9c:	68db      	ldr	r3, [r3, #12]
 800ef9e:	f003 0301 	and.w	r3, r3, #1
 800efa2:	2b00      	cmp	r3, #0
 800efa4:	d101      	bne.n	800efaa <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800efa6:	2301      	movs	r3, #1
 800efa8:	e000      	b.n	800efac <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800efaa:	2300      	movs	r3, #0
 800efac:	2b01      	cmp	r3, #1
 800efae:	d001      	beq.n	800efb4 <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800efb0:	2301      	movs	r3, #1
 800efb2:	e000      	b.n	800efb6 <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800efb4:	2300      	movs	r3, #0
    }
 800efb6:	4618      	mov	r0, r3
 800efb8:	370c      	adds	r7, #12
 800efba:	46bd      	mov	sp, r7
 800efbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800efc0:	4770      	bx	lr

0800efc2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
 800efc2:	b590      	push	{r4, r7, lr}
 800efc4:	b083      	sub	sp, #12
 800efc6:	af00      	add	r7, sp, #0
 800efc8:	6078      	str	r0, [r7, #4]
    {
        borderBox.setAlpha(T::getAlpha());
 800efca:	687b      	ldr	r3, [r7, #4]
 800efcc:	f103 0434 	add.w	r4, r3, #52	; 0x34
 800efd0:	687b      	ldr	r3, [r7, #4]
 800efd2:	4618      	mov	r0, r3
 800efd4:	f7fe fc6f 	bl	800d8b6 <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800efd8:	4603      	mov	r3, r0
 800efda:	4619      	mov	r1, r3
 800efdc:	4620      	mov	r0, r4
 800efde:	f7fe fc17 	bl	800d810 <_ZN8touchgfx3Box8setAlphaEh>
        T::handleAlphaUpdated();
 800efe2:	687b      	ldr	r3, [r7, #4]
 800efe4:	4618      	mov	r0, r3
 800efe6:	f7fe fcb2 	bl	800d94e <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>
    }
 800efea:	bf00      	nop
 800efec:	370c      	adds	r7, #12
 800efee:	46bd      	mov	sp, r7
 800eff0:	bd90      	pop	{r4, r7, pc}

0800eff2 <_ZN22PressureScreenViewBase11applicationEv>:
    PressureScreenViewBase();
    virtual ~PressureScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800eff2:	b580      	push	{r7, lr}
 800eff4:	b082      	sub	sp, #8
 800eff6:	af00      	add	r7, sp, #0
 800eff8:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800effa:	f00a f993 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 800effe:	4603      	mov	r3, r0
    }
 800f000:	4618      	mov	r0, r3
 800f002:	3708      	adds	r7, #8
 800f004:	46bd      	mov	sp, r7
 800f006:	bd80      	pop	{r7, pc}

0800f008 <_ZN8touchgfx4ViewI23PressureScreenPresenterED1Ev>:
class View : public Screen
 800f008:	b580      	push	{r7, lr}
 800f00a:	b082      	sub	sp, #8
 800f00c:	af00      	add	r7, sp, #0
 800f00e:	6078      	str	r0, [r7, #4]
 800f010:	4a05      	ldr	r2, [pc, #20]	; (800f028 <_ZN8touchgfx4ViewI23PressureScreenPresenterED1Ev+0x20>)
 800f012:	687b      	ldr	r3, [r7, #4]
 800f014:	601a      	str	r2, [r3, #0]
 800f016:	687b      	ldr	r3, [r7, #4]
 800f018:	4618      	mov	r0, r3
 800f01a:	f7fb f81b 	bl	800a054 <_ZN8touchgfx6ScreenD1Ev>
 800f01e:	687b      	ldr	r3, [r7, #4]
 800f020:	4618      	mov	r0, r3
 800f022:	3708      	adds	r7, #8
 800f024:	46bd      	mov	sp, r7
 800f026:	bd80      	pop	{r7, pc}
 800f028:	0802e554 	.word	0x0802e554

0800f02c <_ZN8touchgfx4ViewI23PressureScreenPresenterED0Ev>:
 800f02c:	b580      	push	{r7, lr}
 800f02e:	b082      	sub	sp, #8
 800f030:	af00      	add	r7, sp, #0
 800f032:	6078      	str	r0, [r7, #4]
 800f034:	6878      	ldr	r0, [r7, #4]
 800f036:	f7ff ffe7 	bl	800f008 <_ZN8touchgfx4ViewI23PressureScreenPresenterED1Ev>
 800f03a:	2140      	movs	r1, #64	; 0x40
 800f03c:	6878      	ldr	r0, [r7, #4]
 800f03e:	f01b fbce 	bl	802a7de <_ZdlPvj>
 800f042:	687b      	ldr	r3, [r7, #4]
 800f044:	4618      	mov	r0, r3
 800f046:	3708      	adds	r7, #8
 800f048:	46bd      	mov	sp, r7
 800f04a:	bd80      	pop	{r7, pc}

0800f04c <_ZN22PressureScreenViewBaseC1Ev>:
#include <gui_generated/pressurescreen_screen/PressureScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

PressureScreenViewBase::PressureScreenViewBase() :
 800f04c:	b590      	push	{r4, r7, lr}
 800f04e:	b0a5      	sub	sp, #148	; 0x94
 800f050:	af02      	add	r7, sp, #8
 800f052:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &PressureScreenViewBase::buttonCallbackHandler)
 800f054:	697b      	ldr	r3, [r7, #20]
 800f056:	4618      	mov	r0, r3
 800f058:	f000 fa9a 	bl	800f590 <_ZN8touchgfx4ViewI23PressureScreenPresenterEC1Ev>
 800f05c:	4ad6      	ldr	r2, [pc, #856]	; (800f3b8 <_ZN22PressureScreenViewBaseC1Ev+0x36c>)
 800f05e:	697b      	ldr	r3, [r7, #20]
 800f060:	601a      	str	r2, [r3, #0]
 800f062:	697b      	ldr	r3, [r7, #20]
 800f064:	3340      	adds	r3, #64	; 0x40
 800f066:	4618      	mov	r0, r3
 800f068:	f7fb f8b2 	bl	800a1d0 <_ZN8touchgfx3BoxC1Ev>
 800f06c:	697b      	ldr	r3, [r7, #20]
 800f06e:	336c      	adds	r3, #108	; 0x6c
 800f070:	4618      	mov	r0, r3
 800f072:	f007 fd3d 	bl	8016af0 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800f076:	697b      	ldr	r3, [r7, #20]
 800f078:	33a8      	adds	r3, #168	; 0xa8
 800f07a:	4618      	mov	r0, r3
 800f07c:	f007 f9b0 	bl	80163e0 <_ZN8touchgfx5GaugeC1Ev>
 800f080:	697b      	ldr	r3, [r7, #20]
 800f082:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800f086:	4618      	mov	r0, r3
 800f088:	f7fb f8ea 	bl	800a260 <_ZN8touchgfx8TextAreaC1Ev>
 800f08c:	697b      	ldr	r3, [r7, #20]
 800f08e:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800f092:	4618      	mov	r0, r3
 800f094:	f7fd fefe 	bl	800ce94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800f098:	697b      	ldr	r3, [r7, #20]
 800f09a:	f503 703a 	add.w	r0, r3, #744	; 0x2e8
 800f09e:	4bc7      	ldr	r3, [pc, #796]	; (800f3bc <_ZN22PressureScreenViewBaseC1Ev+0x370>)
 800f0a0:	623b      	str	r3, [r7, #32]
 800f0a2:	2300      	movs	r3, #0
 800f0a4:	627b      	str	r3, [r7, #36]	; 0x24
 800f0a6:	f107 0320 	add.w	r3, r7, #32
 800f0aa:	cb0c      	ldmia	r3, {r2, r3}
 800f0ac:	6979      	ldr	r1, [r7, #20]
 800f0ae:	f000 fa85 	bl	800f5bc <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800f0b2:	697b      	ldr	r3, [r7, #20]
 800f0b4:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800f0b8:	23f0      	movs	r3, #240	; 0xf0
 800f0ba:	9300      	str	r3, [sp, #0]
 800f0bc:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800f0c0:	2200      	movs	r2, #0
 800f0c2:	2100      	movs	r1, #0
 800f0c4:	f7fa fe90 	bl	8009de8 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800f0c8:	697b      	ldr	r3, [r7, #20]
 800f0ca:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800f0ce:	2300      	movs	r3, #0
 800f0d0:	f887 3064 	strb.w	r3, [r7, #100]	; 0x64
 800f0d4:	2300      	movs	r3, #0
 800f0d6:	f887 3063 	strb.w	r3, [r7, #99]	; 0x63
 800f0da:	2300      	movs	r3, #0
 800f0dc:	f887 3062 	strb.w	r3, [r7, #98]	; 0x62
 800f0e0:	f897 3064 	ldrb.w	r3, [r7, #100]	; 0x64
 800f0e4:	041b      	lsls	r3, r3, #16
 800f0e6:	461a      	mov	r2, r3
 800f0e8:	f897 3063 	ldrb.w	r3, [r7, #99]	; 0x63
 800f0ec:	021b      	lsls	r3, r3, #8
 800f0ee:	431a      	orrs	r2, r3
 800f0f0:	f897 3062 	ldrb.w	r3, [r7, #98]	; 0x62
 800f0f4:	4313      	orrs	r3, r2
 800f0f6:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f0fa:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800f0fe:	4611      	mov	r1, r2
 800f100:	4618      	mov	r0, r3
 800f102:	f7fa fdad 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800f106:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800f108:	4619      	mov	r1, r3
 800f10a:	4620      	mov	r0, r4
 800f10c:	f7fb f884 	bl	800a218 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800f110:	697a      	ldr	r2, [r7, #20]
 800f112:	697b      	ldr	r3, [r7, #20]
 800f114:	3340      	adds	r3, #64	; 0x40
 800f116:	4619      	mov	r1, r3
 800f118:	4610      	mov	r0, r2
 800f11a:	f7fa fff3 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    back.setXY(20, 103);
 800f11e:	697b      	ldr	r3, [r7, #20]
 800f120:	336c      	adds	r3, #108	; 0x6c
 800f122:	2267      	movs	r2, #103	; 0x67
 800f124:	2114      	movs	r1, #20
 800f126:	4618      	mov	r0, r3
 800f128:	f7fa fe9d 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
    back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
 800f12c:	697b      	ldr	r3, [r7, #20]
 800f12e:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800f132:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800f136:	2100      	movs	r1, #0
 800f138:	4618      	mov	r0, r3
 800f13a:	f7fa fdd7 	bl	8009cec <_ZN8touchgfx6BitmapC1Et>
 800f13e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800f142:	2101      	movs	r1, #1
 800f144:	4618      	mov	r0, r3
 800f146:	f7fa fdd1 	bl	8009cec <_ZN8touchgfx6BitmapC1Et>
 800f14a:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800f14e:	2104      	movs	r1, #4
 800f150:	4618      	mov	r0, r3
 800f152:	f7fa fdcb 	bl	8009cec <_ZN8touchgfx6BitmapC1Et>
 800f156:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800f15a:	2104      	movs	r1, #4
 800f15c:	4618      	mov	r0, r3
 800f15e:	f7fa fdc5 	bl	8009cec <_ZN8touchgfx6BitmapC1Et>
 800f162:	f107 0030 	add.w	r0, r7, #48	; 0x30
 800f166:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800f16a:	f107 0128 	add.w	r1, r7, #40	; 0x28
 800f16e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800f172:	9300      	str	r3, [sp, #0]
 800f174:	4603      	mov	r3, r0
 800f176:	4620      	mov	r0, r4
 800f178:	f007 fc24 	bl	80169c4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    back.setIconXY(5, 5);
 800f17c:	697b      	ldr	r3, [r7, #20]
 800f17e:	336c      	adds	r3, #108	; 0x6c
 800f180:	2205      	movs	r2, #5
 800f182:	2105      	movs	r1, #5
 800f184:	4618      	mov	r0, r3
 800f186:	f7fb fa75 	bl	800a674 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    back.setAction(buttonCallback);
 800f18a:	697b      	ldr	r3, [r7, #20]
 800f18c:	f103 026c 	add.w	r2, r3, #108	; 0x6c
 800f190:	697b      	ldr	r3, [r7, #20]
 800f192:	f503 733a 	add.w	r3, r3, #744	; 0x2e8
 800f196:	4619      	mov	r1, r3
 800f198:	4610      	mov	r0, r2
 800f19a:	f7fb fa1d 	bl	800a5d8 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(back);
 800f19e:	697a      	ldr	r2, [r7, #20]
 800f1a0:	697b      	ldr	r3, [r7, #20]
 800f1a2:	336c      	adds	r3, #108	; 0x6c
 800f1a4:	4619      	mov	r1, r3
 800f1a6:	4610      	mov	r0, r2
 800f1a8:	f7fa ffac 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    PressureGauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_BACKGROUNDS_LIGHT_ID));
 800f1ac:	697b      	ldr	r3, [r7, #20]
 800f1ae:	f103 04a8 	add.w	r4, r3, #168	; 0xa8
 800f1b2:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800f1b6:	2102      	movs	r1, #2
 800f1b8:	4618      	mov	r0, r3
 800f1ba:	f7fa fd97 	bl	8009cec <_ZN8touchgfx6BitmapC1Et>
 800f1be:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800f1c2:	4619      	mov	r1, r3
 800f1c4:	4620      	mov	r0, r4
 800f1c6:	f003 fd0a 	bl	8012bde <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    PressureGauge.setPosition(166, 73, 120, 120);
 800f1ca:	697b      	ldr	r3, [r7, #20]
 800f1cc:	f103 00a8 	add.w	r0, r3, #168	; 0xa8
 800f1d0:	2378      	movs	r3, #120	; 0x78
 800f1d2:	9300      	str	r3, [sp, #0]
 800f1d4:	2378      	movs	r3, #120	; 0x78
 800f1d6:	2249      	movs	r2, #73	; 0x49
 800f1d8:	21a6      	movs	r1, #166	; 0xa6
 800f1da:	f7fa fe05 	bl	8009de8 <_ZN8touchgfx8Drawable11setPositionEssss>
    PressureGauge.setCenter(60, 60);
 800f1de:	697b      	ldr	r3, [r7, #20]
 800f1e0:	33a8      	adds	r3, #168	; 0xa8
 800f1e2:	223c      	movs	r2, #60	; 0x3c
 800f1e4:	213c      	movs	r1, #60	; 0x3c
 800f1e6:	4618      	mov	r0, r3
 800f1e8:	f007 f9a5 	bl	8016536 <_ZN8touchgfx5Gauge9setCenterEii>
    PressureGauge.setStartEndAngle(-90, 90);
 800f1ec:	697b      	ldr	r3, [r7, #20]
 800f1ee:	33a8      	adds	r3, #168	; 0xa8
 800f1f0:	225a      	movs	r2, #90	; 0x5a
 800f1f2:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800f1f6:	4618      	mov	r0, r3
 800f1f8:	f007 fa22 	bl	8016640 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    PressureGauge.setRange(30000, 110000);
 800f1fc:	697b      	ldr	r3, [r7, #20]
 800f1fe:	f103 00a8 	add.w	r0, r3, #168	; 0xa8
 800f202:	2300      	movs	r3, #0
 800f204:	9300      	str	r3, [sp, #0]
 800f206:	2300      	movs	r3, #0
 800f208:	4a6d      	ldr	r2, [pc, #436]	; (800f3c0 <_ZN22PressureScreenViewBaseC1Ev+0x374>)
 800f20a:	f247 5130 	movw	r1, #30000	; 0x7530
 800f20e:	f003 fbc0 	bl	8012992 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    PressureGauge.setValue(30000);
 800f212:	697b      	ldr	r3, [r7, #20]
 800f214:	33a8      	adds	r3, #168	; 0xa8
 800f216:	f247 5130 	movw	r1, #30000	; 0x7530
 800f21a:	4618      	mov	r0, r3
 800f21c:	f007 f9ba 	bl	8016594 <_ZN8touchgfx5Gauge8setValueEi>
    PressureGauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_NEEDLES_ROUGH_ID, 5, 33);
 800f220:	697b      	ldr	r3, [r7, #20]
 800f222:	f103 00a8 	add.w	r0, r3, #168	; 0xa8
 800f226:	2321      	movs	r3, #33	; 0x21
 800f228:	2205      	movs	r2, #5
 800f22a:	2103      	movs	r1, #3
 800f22c:	f007 f96e 	bl	801650c <_ZN8touchgfx5Gauge9setNeedleEtss>
    PressureGauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800f230:	697b      	ldr	r3, [r7, #20]
 800f232:	33a8      	adds	r3, #168	; 0xa8
 800f234:	2101      	movs	r1, #1
 800f236:	4618      	mov	r0, r3
 800f238:	f007 f90a 	bl	8016450 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    PressureGauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800f23c:	697b      	ldr	r3, [r7, #20]
 800f23e:	33a8      	adds	r3, #168	; 0xa8
 800f240:	2101      	movs	r1, #1
 800f242:	4618      	mov	r0, r3
 800f244:	f007 f907 	bl	8016456 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(PressureGauge);
 800f248:	697a      	ldr	r2, [r7, #20]
 800f24a:	697b      	ldr	r3, [r7, #20]
 800f24c:	33a8      	adds	r3, #168	; 0xa8
 800f24e:	4619      	mov	r1, r3
 800f250:	4610      	mov	r0, r2
 800f252:	f7fa ff57 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Pressure_text.setXY(74, 10);
 800f256:	697b      	ldr	r3, [r7, #20]
 800f258:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800f25c:	220a      	movs	r2, #10
 800f25e:	214a      	movs	r1, #74	; 0x4a
 800f260:	4618      	mov	r0, r3
 800f262:	f7fa fe00 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
    Pressure_text.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
 800f266:	697b      	ldr	r3, [r7, #20]
 800f268:	f503 7412 	add.w	r4, r3, #584	; 0x248
 800f26c:	23f2      	movs	r3, #242	; 0xf2
 800f26e:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 800f272:	23ae      	movs	r3, #174	; 0xae
 800f274:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
 800f278:	23ae      	movs	r3, #174	; 0xae
 800f27a:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 800f27e:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800f282:	041b      	lsls	r3, r3, #16
 800f284:	461a      	mov	r2, r3
 800f286:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 800f28a:	021b      	lsls	r3, r3, #8
 800f28c:	431a      	orrs	r2, r3
 800f28e:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 800f292:	4313      	orrs	r3, r2
 800f294:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f298:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800f29c:	4611      	mov	r1, r2
 800f29e:	4618      	mov	r0, r3
 800f2a0:	f7fa fcde 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800f2a4:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800f2a6:	66bc      	str	r4, [r7, #104]	; 0x68
 800f2a8:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800f2aa:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800f2ac:	69fa      	ldr	r2, [r7, #28]
 800f2ae:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800f2b0:	bf00      	nop
    Pressure_text.setLinespacing(0);
 800f2b2:	697b      	ldr	r3, [r7, #20]
 800f2b4:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800f2b8:	673b      	str	r3, [r7, #112]	; 0x70
 800f2ba:	2300      	movs	r3, #0
 800f2bc:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
        linespace = space;
 800f2c0:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800f2c2:	f8b7 206e 	ldrh.w	r2, [r7, #110]	; 0x6e
 800f2c6:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800f2c8:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800f2ca:	681b      	ldr	r3, [r3, #0]
 800f2cc:	3384      	adds	r3, #132	; 0x84
 800f2ce:	681b      	ldr	r3, [r3, #0]
 800f2d0:	6f3c      	ldr	r4, [r7, #112]	; 0x70
 800f2d2:	463a      	mov	r2, r7
 800f2d4:	6f39      	ldr	r1, [r7, #112]	; 0x70
 800f2d6:	4610      	mov	r0, r2
 800f2d8:	4798      	blx	r3
 800f2da:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800f2de:	463a      	mov	r2, r7
 800f2e0:	ca07      	ldmia	r2, {r0, r1, r2}
 800f2e2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800f2e6:	bf00      	nop
    Pressure_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NHFJ));
 800f2e8:	697b      	ldr	r3, [r7, #20]
 800f2ea:	f503 7412 	add.w	r4, r3, #584	; 0x248
 800f2ee:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800f2f2:	2107      	movs	r1, #7
 800f2f4:	4618      	mov	r0, r3
 800f2f6:	f7fa ff9d 	bl	800a234 <_ZN8touchgfx9TypedTextC1Et>
 800f2fa:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800f2fe:	4619      	mov	r1, r3
 800f300:	4620      	mov	r0, r4
 800f302:	f006 ffdf 	bl	80162c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800f306:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800f30a:	4618      	mov	r0, r3
 800f30c:	f7fa fac0 	bl	8009890 <_ZN8touchgfx9TypedTextD1Ev>
    add(Pressure_text);
 800f310:	697a      	ldr	r2, [r7, #20]
 800f312:	697b      	ldr	r3, [r7, #20]
 800f314:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800f318:	4619      	mov	r1, r3
 800f31a:	4610      	mov	r0, r2
 800f31c:	f7fa fef2 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    PressureData.setXY(187, 202);
 800f320:	697b      	ldr	r3, [r7, #20]
 800f322:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800f326:	22ca      	movs	r2, #202	; 0xca
 800f328:	21bb      	movs	r1, #187	; 0xbb
 800f32a:	4618      	mov	r0, r3
 800f32c:	f7fa fd9b 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
    PressureData.setColor(touchgfx::Color::getColorFromRGB(214, 195, 195));
 800f330:	697b      	ldr	r3, [r7, #20]
 800f332:	f503 7424 	add.w	r4, r3, #656	; 0x290
 800f336:	23d6      	movs	r3, #214	; 0xd6
 800f338:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
 800f33c:	23c3      	movs	r3, #195	; 0xc3
 800f33e:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 800f342:	23c3      	movs	r3, #195	; 0xc3
 800f344:	f887 3075 	strb.w	r3, [r7, #117]	; 0x75
 800f348:	f897 3077 	ldrb.w	r3, [r7, #119]	; 0x77
 800f34c:	041b      	lsls	r3, r3, #16
 800f34e:	461a      	mov	r2, r3
 800f350:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 800f354:	021b      	lsls	r3, r3, #8
 800f356:	431a      	orrs	r2, r3
 800f358:	f897 3075 	ldrb.w	r3, [r7, #117]	; 0x75
 800f35c:	4313      	orrs	r3, r2
 800f35e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f362:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800f366:	4611      	mov	r1, r2
 800f368:	4618      	mov	r0, r3
 800f36a:	f7fa fc79 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800f36e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800f370:	67bc      	str	r4, [r7, #120]	; 0x78
 800f372:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800f374:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800f376:	69ba      	ldr	r2, [r7, #24]
 800f378:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800f37a:	bf00      	nop
    PressureData.setLinespacing(0);
 800f37c:	697b      	ldr	r3, [r7, #20]
 800f37e:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800f382:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800f386:	2300      	movs	r3, #0
 800f388:	f8a7 307e 	strh.w	r3, [r7, #126]	; 0x7e
        linespace = space;
 800f38c:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800f390:	f8b7 207e 	ldrh.w	r2, [r7, #126]	; 0x7e
 800f394:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800f396:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800f39a:	681b      	ldr	r3, [r3, #0]
 800f39c:	3384      	adds	r3, #132	; 0x84
 800f39e:	681b      	ldr	r3, [r3, #0]
 800f3a0:	f8d7 4080 	ldr.w	r4, [r7, #128]	; 0x80
 800f3a4:	463a      	mov	r2, r7
 800f3a6:	f8d7 1080 	ldr.w	r1, [r7, #128]	; 0x80
 800f3aa:	4610      	mov	r0, r2
 800f3ac:	4798      	blx	r3
 800f3ae:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800f3b2:	463a      	mov	r2, r7
 800f3b4:	ca07      	ldmia	r2, {r0, r1, r2}
 800f3b6:	e005      	b.n	800f3c4 <_ZN22PressureScreenViewBaseC1Ev+0x378>
 800f3b8:	0802e508 	.word	0x0802e508
 800f3bc:	0800f567 	.word	0x0800f567
 800f3c0:	0001adb0 	.word	0x0001adb0
 800f3c4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800f3c8:	bf00      	nop
    Unicode::snprintf(PressureDataBuffer, PRESSUREDATA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_6W6Z).getText());
 800f3ca:	697b      	ldr	r3, [r7, #20]
 800f3cc:	f503 7437 	add.w	r4, r3, #732	; 0x2dc
 800f3d0:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800f3d4:	2104      	movs	r1, #4
 800f3d6:	4618      	mov	r0, r3
 800f3d8:	f7fa ff2c 	bl	800a234 <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800f3dc:	4b32      	ldr	r3, [pc, #200]	; (800f4a8 <_ZN22PressureScreenViewBaseC1Ev+0x45c>)
 800f3de:	681b      	ldr	r3, [r3, #0]
 800f3e0:	2b00      	cmp	r3, #0
 800f3e2:	d105      	bne.n	800f3f0 <_ZN22PressureScreenViewBaseC1Ev+0x3a4>
 800f3e4:	4b31      	ldr	r3, [pc, #196]	; (800f4ac <_ZN22PressureScreenViewBaseC1Ev+0x460>)
 800f3e6:	4a32      	ldr	r2, [pc, #200]	; (800f4b0 <_ZN22PressureScreenViewBaseC1Ev+0x464>)
 800f3e8:	2160      	movs	r1, #96	; 0x60
 800f3ea:	4832      	ldr	r0, [pc, #200]	; (800f4b4 <_ZN22PressureScreenViewBaseC1Ev+0x468>)
 800f3ec:	f01b ffe8 	bl	802b3c0 <__assert_func>
 800f3f0:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800f3f4:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
        return typedTextId < numberOfTypedTexts;
 800f3f8:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800f3fc:	889a      	ldrh	r2, [r3, #4]
 800f3fe:	4b2e      	ldr	r3, [pc, #184]	; (800f4b8 <_ZN22PressureScreenViewBaseC1Ev+0x46c>)
 800f400:	881b      	ldrh	r3, [r3, #0]
 800f402:	429a      	cmp	r2, r3
 800f404:	bf34      	ite	cc
 800f406:	2301      	movcc	r3, #1
 800f408:	2300      	movcs	r3, #0
 800f40a:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800f40c:	2b00      	cmp	r3, #0
 800f40e:	d105      	bne.n	800f41c <_ZN22PressureScreenViewBaseC1Ev+0x3d0>
 800f410:	4b2a      	ldr	r3, [pc, #168]	; (800f4bc <_ZN22PressureScreenViewBaseC1Ev+0x470>)
 800f412:	4a27      	ldr	r2, [pc, #156]	; (800f4b0 <_ZN22PressureScreenViewBaseC1Ev+0x464>)
 800f414:	2161      	movs	r1, #97	; 0x61
 800f416:	4827      	ldr	r0, [pc, #156]	; (800f4b4 <_ZN22PressureScreenViewBaseC1Ev+0x468>)
 800f418:	f01b ffd2 	bl	802b3c0 <__assert_func>
        return texts->getText(typedTextId);
 800f41c:	4b28      	ldr	r3, [pc, #160]	; (800f4c0 <_ZN22PressureScreenViewBaseC1Ev+0x474>)
 800f41e:	681b      	ldr	r3, [r3, #0]
 800f420:	f8b7 2048 	ldrh.w	r2, [r7, #72]	; 0x48
 800f424:	4611      	mov	r1, r2
 800f426:	4618      	mov	r0, r3
 800f428:	f000 fe5c 	bl	80100e4 <_ZNK8touchgfx5Texts7getTextEt>
 800f42c:	4603      	mov	r3, r0
 800f42e:	bf00      	nop
 800f430:	4a24      	ldr	r2, [pc, #144]	; (800f4c4 <_ZN22PressureScreenViewBaseC1Ev+0x478>)
 800f432:	2106      	movs	r1, #6
 800f434:	4620      	mov	r0, r4
 800f436:	f00d f9bd 	bl	801c7b4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800f43a:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800f43e:	4618      	mov	r0, r3
 800f440:	f7fa fa26 	bl	8009890 <_ZN8touchgfx9TypedTextD1Ev>
    PressureData.setWildcard(PressureDataBuffer);
 800f444:	697b      	ldr	r3, [r7, #20]
 800f446:	f503 7224 	add.w	r2, r3, #656	; 0x290
 800f44a:	697b      	ldr	r3, [r7, #20]
 800f44c:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800f450:	4619      	mov	r1, r3
 800f452:	4610      	mov	r0, r2
 800f454:	f7fd fd42 	bl	800cedc <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    PressureData.resizeToCurrentText();
 800f458:	697b      	ldr	r3, [r7, #20]
 800f45a:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800f45e:	4618      	mov	r0, r3
 800f460:	f006 ff10 	bl	8016284 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    PressureData.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9SKU));
 800f464:	697b      	ldr	r3, [r7, #20]
 800f466:	f503 7424 	add.w	r4, r3, #656	; 0x290
 800f46a:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800f46e:	2105      	movs	r1, #5
 800f470:	4618      	mov	r0, r3
 800f472:	f7fa fedf 	bl	800a234 <_ZN8touchgfx9TypedTextC1Et>
 800f476:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800f47a:	4619      	mov	r1, r3
 800f47c:	4620      	mov	r0, r4
 800f47e:	f006 ff21 	bl	80162c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800f482:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800f486:	4618      	mov	r0, r3
 800f488:	f7fa fa02 	bl	8009890 <_ZN8touchgfx9TypedTextD1Ev>
    add(PressureData);
 800f48c:	697a      	ldr	r2, [r7, #20]
 800f48e:	697b      	ldr	r3, [r7, #20]
 800f490:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800f494:	4619      	mov	r1, r3
 800f496:	4610      	mov	r0, r2
 800f498:	f7fa fe34 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800f49c:	697b      	ldr	r3, [r7, #20]
 800f49e:	4618      	mov	r0, r3
 800f4a0:	378c      	adds	r7, #140	; 0x8c
 800f4a2:	46bd      	mov	sp, r7
 800f4a4:	bd90      	pop	{r4, r7, pc}
 800f4a6:	bf00      	nop
 800f4a8:	200022a4 	.word	0x200022a4
 800f4ac:	0802cf58 	.word	0x0802cf58
 800f4b0:	0802d05c 	.word	0x0802d05c
 800f4b4:	0802cfd8 	.word	0x0802cfd8
 800f4b8:	200022a8 	.word	0x200022a8
 800f4bc:	0802d01c 	.word	0x0802d01c
 800f4c0:	200022b0 	.word	0x200022b0
 800f4c4:	0802d094 	.word	0x0802d094

0800f4c8 <_ZN22PressureScreenViewBaseD1Ev>:

PressureScreenViewBase::~PressureScreenViewBase()
 800f4c8:	b580      	push	{r7, lr}
 800f4ca:	b082      	sub	sp, #8
 800f4cc:	af00      	add	r7, sp, #0
 800f4ce:	6078      	str	r0, [r7, #4]
 800f4d0:	4a16      	ldr	r2, [pc, #88]	; (800f52c <_ZN22PressureScreenViewBaseD1Ev+0x64>)
 800f4d2:	687b      	ldr	r3, [r7, #4]
 800f4d4:	601a      	str	r2, [r3, #0]
 800f4d6:	687b      	ldr	r3, [r7, #4]
 800f4d8:	f503 733a 	add.w	r3, r3, #744	; 0x2e8
 800f4dc:	4618      	mov	r0, r3
 800f4de:	f000 f88d 	bl	800f5fc <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800f4e2:	687b      	ldr	r3, [r7, #4]
 800f4e4:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800f4e8:	4618      	mov	r0, r3
 800f4ea:	f7fb fb67 	bl	800abbc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800f4ee:	687b      	ldr	r3, [r7, #4]
 800f4f0:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800f4f4:	4618      	mov	r0, r3
 800f4f6:	f7fa fff1 	bl	800a4dc <_ZN8touchgfx8TextAreaD1Ev>
 800f4fa:	687b      	ldr	r3, [r7, #4]
 800f4fc:	33a8      	adds	r3, #168	; 0xa8
 800f4fe:	4618      	mov	r0, r3
 800f500:	f7fe f8c6 	bl	800d690 <_ZN8touchgfx5GaugeD1Ev>
 800f504:	687b      	ldr	r3, [r7, #4]
 800f506:	336c      	adds	r3, #108	; 0x6c
 800f508:	4618      	mov	r0, r3
 800f50a:	f7fb fc29 	bl	800ad60 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800f50e:	687b      	ldr	r3, [r7, #4]
 800f510:	3340      	adds	r3, #64	; 0x40
 800f512:	4618      	mov	r0, r3
 800f514:	f7fb fb96 	bl	800ac44 <_ZN8touchgfx3BoxD1Ev>
 800f518:	687b      	ldr	r3, [r7, #4]
 800f51a:	4618      	mov	r0, r3
 800f51c:	f7ff fd74 	bl	800f008 <_ZN8touchgfx4ViewI23PressureScreenPresenterED1Ev>
{

}
 800f520:	687b      	ldr	r3, [r7, #4]
 800f522:	4618      	mov	r0, r3
 800f524:	3708      	adds	r7, #8
 800f526:	46bd      	mov	sp, r7
 800f528:	bd80      	pop	{r7, pc}
 800f52a:	bf00      	nop
 800f52c:	0802e508 	.word	0x0802e508

0800f530 <_ZN22PressureScreenViewBaseD0Ev>:
PressureScreenViewBase::~PressureScreenViewBase()
 800f530:	b580      	push	{r7, lr}
 800f532:	b082      	sub	sp, #8
 800f534:	af00      	add	r7, sp, #0
 800f536:	6078      	str	r0, [r7, #4]
}
 800f538:	6878      	ldr	r0, [r7, #4]
 800f53a:	f7ff ffc5 	bl	800f4c8 <_ZN22PressureScreenViewBaseD1Ev>
 800f53e:	f44f 713e 	mov.w	r1, #760	; 0x2f8
 800f542:	6878      	ldr	r0, [r7, #4]
 800f544:	f01b f94b 	bl	802a7de <_ZdlPvj>
 800f548:	687b      	ldr	r3, [r7, #4]
 800f54a:	4618      	mov	r0, r3
 800f54c:	3708      	adds	r7, #8
 800f54e:	46bd      	mov	sp, r7
 800f550:	bd80      	pop	{r7, pc}

0800f552 <_ZN22PressureScreenViewBase11setupScreenEv>:

void PressureScreenViewBase::setupScreen()
{
 800f552:	b480      	push	{r7}
 800f554:	b083      	sub	sp, #12
 800f556:	af00      	add	r7, sp, #0
 800f558:	6078      	str	r0, [r7, #4]

}
 800f55a:	bf00      	nop
 800f55c:	370c      	adds	r7, #12
 800f55e:	46bd      	mov	sp, r7
 800f560:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f564:	4770      	bx	lr

0800f566 <_ZN22PressureScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void PressureScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800f566:	b580      	push	{r7, lr}
 800f568:	b082      	sub	sp, #8
 800f56a:	af00      	add	r7, sp, #0
 800f56c:	6078      	str	r0, [r7, #4]
 800f56e:	6039      	str	r1, [r7, #0]
    if (&src == &back)
 800f570:	687b      	ldr	r3, [r7, #4]
 800f572:	336c      	adds	r3, #108	; 0x6c
 800f574:	683a      	ldr	r2, [r7, #0]
 800f576:	429a      	cmp	r2, r3
 800f578:	d106      	bne.n	800f588 <_ZN22PressureScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //PressureToMain
        //When back clicked change screen to MainScreen
        //Go to MainScreen with screen transition towards West
        application().gotoMainScreenScreenSlideTransitionWest();
 800f57a:	6878      	ldr	r0, [r7, #4]
 800f57c:	f7ff fd39 	bl	800eff2 <_ZN22PressureScreenViewBase11applicationEv>
 800f580:	4603      	mov	r3, r0
 800f582:	4618      	mov	r0, r3
 800f584:	f7fb ff2c 	bl	800b3e0 <_ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionWestEv>
    }
}
 800f588:	bf00      	nop
 800f58a:	3708      	adds	r7, #8
 800f58c:	46bd      	mov	sp, r7
 800f58e:	bd80      	pop	{r7, pc}

0800f590 <_ZN8touchgfx4ViewI23PressureScreenPresenterEC1Ev>:
    View()
 800f590:	b580      	push	{r7, lr}
 800f592:	b082      	sub	sp, #8
 800f594:	af00      	add	r7, sp, #0
 800f596:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800f598:	687b      	ldr	r3, [r7, #4]
 800f59a:	4618      	mov	r0, r3
 800f59c:	f00b fad0 	bl	801ab40 <_ZN8touchgfx6ScreenC1Ev>
 800f5a0:	4a05      	ldr	r2, [pc, #20]	; (800f5b8 <_ZN8touchgfx4ViewI23PressureScreenPresenterEC1Ev+0x28>)
 800f5a2:	687b      	ldr	r3, [r7, #4]
 800f5a4:	601a      	str	r2, [r3, #0]
 800f5a6:	687b      	ldr	r3, [r7, #4]
 800f5a8:	2200      	movs	r2, #0
 800f5aa:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800f5ac:	687b      	ldr	r3, [r7, #4]
 800f5ae:	4618      	mov	r0, r3
 800f5b0:	3708      	adds	r7, #8
 800f5b2:	46bd      	mov	sp, r7
 800f5b4:	bd80      	pop	{r7, pc}
 800f5b6:	bf00      	nop
 800f5b8:	0802e554 	.word	0x0802e554

0800f5bc <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800f5bc:	b580      	push	{r7, lr}
 800f5be:	b084      	sub	sp, #16
 800f5c0:	af00      	add	r7, sp, #0
 800f5c2:	60f8      	str	r0, [r7, #12]
 800f5c4:	60b9      	str	r1, [r7, #8]
 800f5c6:	4639      	mov	r1, r7
 800f5c8:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800f5cc:	68fb      	ldr	r3, [r7, #12]
 800f5ce:	4618      	mov	r0, r3
 800f5d0:	f7fb fa82 	bl	800aad8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800f5d4:	4a08      	ldr	r2, [pc, #32]	; (800f5f8 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800f5d6:	68fb      	ldr	r3, [r7, #12]
 800f5d8:	601a      	str	r2, [r3, #0]
 800f5da:	68fb      	ldr	r3, [r7, #12]
 800f5dc:	68ba      	ldr	r2, [r7, #8]
 800f5de:	605a      	str	r2, [r3, #4]
 800f5e0:	68fb      	ldr	r3, [r7, #12]
 800f5e2:	3308      	adds	r3, #8
 800f5e4:	463a      	mov	r2, r7
 800f5e6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800f5ea:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800f5ee:	68fb      	ldr	r3, [r7, #12]
 800f5f0:	4618      	mov	r0, r3
 800f5f2:	3710      	adds	r7, #16
 800f5f4:	46bd      	mov	sp, r7
 800f5f6:	bd80      	pop	{r7, pc}
 800f5f8:	0802e53c 	.word	0x0802e53c

0800f5fc <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800f5fc:	b580      	push	{r7, lr}
 800f5fe:	b082      	sub	sp, #8
 800f600:	af00      	add	r7, sp, #0
 800f602:	6078      	str	r0, [r7, #4]
 800f604:	4a05      	ldr	r2, [pc, #20]	; (800f61c <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800f606:	687b      	ldr	r3, [r7, #4]
 800f608:	601a      	str	r2, [r3, #0]
 800f60a:	687b      	ldr	r3, [r7, #4]
 800f60c:	4618      	mov	r0, r3
 800f60e:	f7fb fa93 	bl	800ab38 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800f612:	687b      	ldr	r3, [r7, #4]
 800f614:	4618      	mov	r0, r3
 800f616:	3708      	adds	r7, #8
 800f618:	46bd      	mov	sp, r7
 800f61a:	bd80      	pop	{r7, pc}
 800f61c:	0802e53c 	.word	0x0802e53c

0800f620 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800f620:	b580      	push	{r7, lr}
 800f622:	b082      	sub	sp, #8
 800f624:	af00      	add	r7, sp, #0
 800f626:	6078      	str	r0, [r7, #4]
 800f628:	6878      	ldr	r0, [r7, #4]
 800f62a:	f7ff ffe7 	bl	800f5fc <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800f62e:	2110      	movs	r1, #16
 800f630:	6878      	ldr	r0, [r7, #4]
 800f632:	f01b f8d4 	bl	802a7de <_ZdlPvj>
 800f636:	687b      	ldr	r3, [r7, #4]
 800f638:	4618      	mov	r0, r3
 800f63a:	3708      	adds	r7, #8
 800f63c:	46bd      	mov	sp, r7
 800f63e:	bd80      	pop	{r7, pc}

0800f640 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800f640:	b580      	push	{r7, lr}
 800f642:	b082      	sub	sp, #8
 800f644:	af00      	add	r7, sp, #0
 800f646:	6078      	str	r0, [r7, #4]
 800f648:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800f64a:	687b      	ldr	r3, [r7, #4]
 800f64c:	685b      	ldr	r3, [r3, #4]
 800f64e:	687a      	ldr	r2, [r7, #4]
 800f650:	68d2      	ldr	r2, [r2, #12]
 800f652:	1052      	asrs	r2, r2, #1
 800f654:	1898      	adds	r0, r3, r2
 800f656:	687b      	ldr	r3, [r7, #4]
 800f658:	68db      	ldr	r3, [r3, #12]
 800f65a:	f003 0301 	and.w	r3, r3, #1
 800f65e:	2b00      	cmp	r3, #0
 800f660:	d102      	bne.n	800f668 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800f662:	687b      	ldr	r3, [r7, #4]
 800f664:	689b      	ldr	r3, [r3, #8]
 800f666:	e00a      	b.n	800f67e <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800f668:	687b      	ldr	r3, [r7, #4]
 800f66a:	685b      	ldr	r3, [r3, #4]
 800f66c:	687a      	ldr	r2, [r7, #4]
 800f66e:	68d2      	ldr	r2, [r2, #12]
 800f670:	1052      	asrs	r2, r2, #1
 800f672:	4413      	add	r3, r2
 800f674:	681b      	ldr	r3, [r3, #0]
 800f676:	687a      	ldr	r2, [r7, #4]
 800f678:	6892      	ldr	r2, [r2, #8]
 800f67a:	4413      	add	r3, r2
 800f67c:	681b      	ldr	r3, [r3, #0]
 800f67e:	6839      	ldr	r1, [r7, #0]
 800f680:	4798      	blx	r3
    }
 800f682:	bf00      	nop
 800f684:	3708      	adds	r7, #8
 800f686:	46bd      	mov	sp, r7
 800f688:	bd80      	pop	{r7, pc}

0800f68a <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800f68a:	b480      	push	{r7}
 800f68c:	b083      	sub	sp, #12
 800f68e:	af00      	add	r7, sp, #0
 800f690:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800f692:	687b      	ldr	r3, [r7, #4]
 800f694:	685b      	ldr	r3, [r3, #4]
 800f696:	2b00      	cmp	r3, #0
 800f698:	d010      	beq.n	800f6bc <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800f69a:	687b      	ldr	r3, [r7, #4]
 800f69c:	689b      	ldr	r3, [r3, #8]
 800f69e:	2b00      	cmp	r3, #0
 800f6a0:	d107      	bne.n	800f6b2 <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800f6a2:	687b      	ldr	r3, [r7, #4]
 800f6a4:	68db      	ldr	r3, [r3, #12]
 800f6a6:	f003 0301 	and.w	r3, r3, #1
 800f6aa:	2b00      	cmp	r3, #0
 800f6ac:	d101      	bne.n	800f6b2 <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800f6ae:	2301      	movs	r3, #1
 800f6b0:	e000      	b.n	800f6b4 <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800f6b2:	2300      	movs	r3, #0
 800f6b4:	2b01      	cmp	r3, #1
 800f6b6:	d001      	beq.n	800f6bc <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800f6b8:	2301      	movs	r3, #1
 800f6ba:	e000      	b.n	800f6be <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800f6bc:	2300      	movs	r3, #0
    }
 800f6be:	4618      	mov	r0, r3
 800f6c0:	370c      	adds	r7, #12
 800f6c2:	46bd      	mov	sp, r7
 800f6c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f6c8:	4770      	bx	lr

0800f6ca <_ZN25TemperatureScreenViewBase11applicationEv>:
    TemperatureScreenViewBase();
    virtual ~TemperatureScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800f6ca:	b580      	push	{r7, lr}
 800f6cc:	b082      	sub	sp, #8
 800f6ce:	af00      	add	r7, sp, #0
 800f6d0:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800f6d2:	f009 fe27 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 800f6d6:	4603      	mov	r3, r0
    }
 800f6d8:	4618      	mov	r0, r3
 800f6da:	3708      	adds	r7, #8
 800f6dc:	46bd      	mov	sp, r7
 800f6de:	bd80      	pop	{r7, pc}

0800f6e0 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterED1Ev>:
class View : public Screen
 800f6e0:	b580      	push	{r7, lr}
 800f6e2:	b082      	sub	sp, #8
 800f6e4:	af00      	add	r7, sp, #0
 800f6e6:	6078      	str	r0, [r7, #4]
 800f6e8:	4a05      	ldr	r2, [pc, #20]	; (800f700 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterED1Ev+0x20>)
 800f6ea:	687b      	ldr	r3, [r7, #4]
 800f6ec:	601a      	str	r2, [r3, #0]
 800f6ee:	687b      	ldr	r3, [r7, #4]
 800f6f0:	4618      	mov	r0, r3
 800f6f2:	f7fa fcaf 	bl	800a054 <_ZN8touchgfx6ScreenD1Ev>
 800f6f6:	687b      	ldr	r3, [r7, #4]
 800f6f8:	4618      	mov	r0, r3
 800f6fa:	3708      	adds	r7, #8
 800f6fc:	46bd      	mov	sp, r7
 800f6fe:	bd80      	pop	{r7, pc}
 800f700:	0802e5d4 	.word	0x0802e5d4

0800f704 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterED0Ev>:
 800f704:	b580      	push	{r7, lr}
 800f706:	b082      	sub	sp, #8
 800f708:	af00      	add	r7, sp, #0
 800f70a:	6078      	str	r0, [r7, #4]
 800f70c:	6878      	ldr	r0, [r7, #4]
 800f70e:	f7ff ffe7 	bl	800f6e0 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterED1Ev>
 800f712:	2140      	movs	r1, #64	; 0x40
 800f714:	6878      	ldr	r0, [r7, #4]
 800f716:	f01b f862 	bl	802a7de <_ZdlPvj>
 800f71a:	687b      	ldr	r3, [r7, #4]
 800f71c:	4618      	mov	r0, r3
 800f71e:	3708      	adds	r7, #8
 800f720:	46bd      	mov	sp, r7
 800f722:	bd80      	pop	{r7, pc}

0800f724 <_ZN25TemperatureScreenViewBaseC1Ev>:
#include <gui_generated/temperaturescreen_screen/TemperatureScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

TemperatureScreenViewBase::TemperatureScreenViewBase() :
 800f724:	b590      	push	{r4, r7, lr}
 800f726:	b0a5      	sub	sp, #148	; 0x94
 800f728:	af02      	add	r7, sp, #8
 800f72a:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &TemperatureScreenViewBase::buttonCallbackHandler)
 800f72c:	697b      	ldr	r3, [r7, #20]
 800f72e:	4618      	mov	r0, r3
 800f730:	f000 fa96 	bl	800fc60 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterEC1Ev>
 800f734:	4a67      	ldr	r2, [pc, #412]	; (800f8d4 <_ZN25TemperatureScreenViewBaseC1Ev+0x1b0>)
 800f736:	697b      	ldr	r3, [r7, #20]
 800f738:	601a      	str	r2, [r3, #0]
 800f73a:	697b      	ldr	r3, [r7, #20]
 800f73c:	3340      	adds	r3, #64	; 0x40
 800f73e:	4618      	mov	r0, r3
 800f740:	f7fa fd46 	bl	800a1d0 <_ZN8touchgfx3BoxC1Ev>
 800f744:	697b      	ldr	r3, [r7, #20]
 800f746:	336c      	adds	r3, #108	; 0x6c
 800f748:	4618      	mov	r0, r3
 800f74a:	f7fd fba3 	bl	800ce94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800f74e:	697b      	ldr	r3, [r7, #20]
 800f750:	33b8      	adds	r3, #184	; 0xb8
 800f752:	4618      	mov	r0, r3
 800f754:	f7fa fd84 	bl	800a260 <_ZN8touchgfx8TextAreaC1Ev>
 800f758:	697b      	ldr	r3, [r7, #20]
 800f75a:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800f75e:	4618      	mov	r0, r3
 800f760:	f006 fe3e 	bl	80163e0 <_ZN8touchgfx5GaugeC1Ev>
 800f764:	697b      	ldr	r3, [r7, #20]
 800f766:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 800f76a:	4618      	mov	r0, r3
 800f76c:	f007 f9c0 	bl	8016af0 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800f770:	697b      	ldr	r3, [r7, #20]
 800f772:	f503 7039 	add.w	r0, r3, #740	; 0x2e4
 800f776:	4b58      	ldr	r3, [pc, #352]	; (800f8d8 <_ZN25TemperatureScreenViewBaseC1Ev+0x1b4>)
 800f778:	623b      	str	r3, [r7, #32]
 800f77a:	2300      	movs	r3, #0
 800f77c:	627b      	str	r3, [r7, #36]	; 0x24
 800f77e:	f107 0320 	add.w	r3, r7, #32
 800f782:	cb0c      	ldmia	r3, {r2, r3}
 800f784:	6979      	ldr	r1, [r7, #20]
 800f786:	f000 fa81 	bl	800fc8c <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800f78a:	697b      	ldr	r3, [r7, #20]
 800f78c:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800f790:	23f0      	movs	r3, #240	; 0xf0
 800f792:	9300      	str	r3, [sp, #0]
 800f794:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800f798:	2200      	movs	r2, #0
 800f79a:	2100      	movs	r1, #0
 800f79c:	f7fa fb24 	bl	8009de8 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800f7a0:	697b      	ldr	r3, [r7, #20]
 800f7a2:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800f7a6:	2300      	movs	r3, #0
 800f7a8:	f887 3064 	strb.w	r3, [r7, #100]	; 0x64
 800f7ac:	2300      	movs	r3, #0
 800f7ae:	f887 3063 	strb.w	r3, [r7, #99]	; 0x63
 800f7b2:	2300      	movs	r3, #0
 800f7b4:	f887 3062 	strb.w	r3, [r7, #98]	; 0x62
 800f7b8:	f897 3064 	ldrb.w	r3, [r7, #100]	; 0x64
 800f7bc:	041b      	lsls	r3, r3, #16
 800f7be:	461a      	mov	r2, r3
 800f7c0:	f897 3063 	ldrb.w	r3, [r7, #99]	; 0x63
 800f7c4:	021b      	lsls	r3, r3, #8
 800f7c6:	431a      	orrs	r2, r3
 800f7c8:	f897 3062 	ldrb.w	r3, [r7, #98]	; 0x62
 800f7cc:	4313      	orrs	r3, r2
 800f7ce:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f7d2:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800f7d6:	4611      	mov	r1, r2
 800f7d8:	4618      	mov	r0, r3
 800f7da:	f7fa fa41 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800f7de:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800f7e0:	4619      	mov	r1, r3
 800f7e2:	4620      	mov	r0, r4
 800f7e4:	f7fa fd18 	bl	800a218 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800f7e8:	697a      	ldr	r2, [r7, #20]
 800f7ea:	697b      	ldr	r3, [r7, #20]
 800f7ec:	3340      	adds	r3, #64	; 0x40
 800f7ee:	4619      	mov	r1, r3
 800f7f0:	4610      	mov	r0, r2
 800f7f2:	f7fa fc87 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    TemperatureData.setXY(207, 202);
 800f7f6:	697b      	ldr	r3, [r7, #20]
 800f7f8:	336c      	adds	r3, #108	; 0x6c
 800f7fa:	22ca      	movs	r2, #202	; 0xca
 800f7fc:	21cf      	movs	r1, #207	; 0xcf
 800f7fe:	4618      	mov	r0, r3
 800f800:	f7fa fb31 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
    TemperatureData.setColor(touchgfx::Color::getColorFromRGB(214, 195, 195));
 800f804:	697b      	ldr	r3, [r7, #20]
 800f806:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800f80a:	23d6      	movs	r3, #214	; 0xd6
 800f80c:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 800f810:	23c3      	movs	r3, #195	; 0xc3
 800f812:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
 800f816:	23c3      	movs	r3, #195	; 0xc3
 800f818:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 800f81c:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800f820:	041b      	lsls	r3, r3, #16
 800f822:	461a      	mov	r2, r3
 800f824:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 800f828:	021b      	lsls	r3, r3, #8
 800f82a:	431a      	orrs	r2, r3
 800f82c:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 800f830:	4313      	orrs	r3, r2
 800f832:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f836:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800f83a:	4611      	mov	r1, r2
 800f83c:	4618      	mov	r0, r3
 800f83e:	f7fa fa0f 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800f842:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800f844:	66bc      	str	r4, [r7, #104]	; 0x68
 800f846:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800f848:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800f84a:	69fa      	ldr	r2, [r7, #28]
 800f84c:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800f84e:	bf00      	nop
    TemperatureData.setLinespacing(0);
 800f850:	697b      	ldr	r3, [r7, #20]
 800f852:	336c      	adds	r3, #108	; 0x6c
 800f854:	673b      	str	r3, [r7, #112]	; 0x70
 800f856:	2300      	movs	r3, #0
 800f858:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
        linespace = space;
 800f85c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800f85e:	f8b7 206e 	ldrh.w	r2, [r7, #110]	; 0x6e
 800f862:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800f864:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800f866:	681b      	ldr	r3, [r3, #0]
 800f868:	3384      	adds	r3, #132	; 0x84
 800f86a:	681b      	ldr	r3, [r3, #0]
 800f86c:	6f3c      	ldr	r4, [r7, #112]	; 0x70
 800f86e:	463a      	mov	r2, r7
 800f870:	6f39      	ldr	r1, [r7, #112]	; 0x70
 800f872:	4610      	mov	r0, r2
 800f874:	4798      	blx	r3
 800f876:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800f87a:	463a      	mov	r2, r7
 800f87c:	ca07      	ldmia	r2, {r0, r1, r2}
 800f87e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800f882:	bf00      	nop
    Unicode::snprintf(TemperatureDataBuffer, TEMPERATUREDATA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9SEE).getText());
 800f884:	697b      	ldr	r3, [r7, #20]
 800f886:	f503 7437 	add.w	r4, r3, #732	; 0x2dc
 800f88a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800f88e:	2100      	movs	r1, #0
 800f890:	4618      	mov	r0, r3
 800f892:	f7fa fccf 	bl	800a234 <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800f896:	4b11      	ldr	r3, [pc, #68]	; (800f8dc <_ZN25TemperatureScreenViewBaseC1Ev+0x1b8>)
 800f898:	681b      	ldr	r3, [r3, #0]
 800f89a:	2b00      	cmp	r3, #0
 800f89c:	d105      	bne.n	800f8aa <_ZN25TemperatureScreenViewBaseC1Ev+0x186>
 800f89e:	4b10      	ldr	r3, [pc, #64]	; (800f8e0 <_ZN25TemperatureScreenViewBaseC1Ev+0x1bc>)
 800f8a0:	4a10      	ldr	r2, [pc, #64]	; (800f8e4 <_ZN25TemperatureScreenViewBaseC1Ev+0x1c0>)
 800f8a2:	2160      	movs	r1, #96	; 0x60
 800f8a4:	4810      	ldr	r0, [pc, #64]	; (800f8e8 <_ZN25TemperatureScreenViewBaseC1Ev+0x1c4>)
 800f8a6:	f01b fd8b 	bl	802b3c0 <__assert_func>
 800f8aa:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800f8ae:	677b      	str	r3, [r7, #116]	; 0x74
        return typedTextId < numberOfTypedTexts;
 800f8b0:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800f8b2:	889a      	ldrh	r2, [r3, #4]
 800f8b4:	4b0d      	ldr	r3, [pc, #52]	; (800f8ec <_ZN25TemperatureScreenViewBaseC1Ev+0x1c8>)
 800f8b6:	881b      	ldrh	r3, [r3, #0]
 800f8b8:	429a      	cmp	r2, r3
 800f8ba:	bf34      	ite	cc
 800f8bc:	2301      	movcc	r3, #1
 800f8be:	2300      	movcs	r3, #0
 800f8c0:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800f8c2:	2b00      	cmp	r3, #0
 800f8c4:	d116      	bne.n	800f8f4 <_ZN25TemperatureScreenViewBaseC1Ev+0x1d0>
 800f8c6:	4b0a      	ldr	r3, [pc, #40]	; (800f8f0 <_ZN25TemperatureScreenViewBaseC1Ev+0x1cc>)
 800f8c8:	4a06      	ldr	r2, [pc, #24]	; (800f8e4 <_ZN25TemperatureScreenViewBaseC1Ev+0x1c0>)
 800f8ca:	2161      	movs	r1, #97	; 0x61
 800f8cc:	4806      	ldr	r0, [pc, #24]	; (800f8e8 <_ZN25TemperatureScreenViewBaseC1Ev+0x1c4>)
 800f8ce:	f01b fd77 	bl	802b3c0 <__assert_func>
 800f8d2:	bf00      	nop
 800f8d4:	0802e588 	.word	0x0802e588
 800f8d8:	0800fc33 	.word	0x0800fc33
 800f8dc:	200022a4 	.word	0x200022a4
 800f8e0:	0802d098 	.word	0x0802d098
 800f8e4:	0802d19c 	.word	0x0802d19c
 800f8e8:	0802d118 	.word	0x0802d118
 800f8ec:	200022a8 	.word	0x200022a8
 800f8f0:	0802d15c 	.word	0x0802d15c
        return texts->getText(typedTextId);
 800f8f4:	4ba5      	ldr	r3, [pc, #660]	; (800fb8c <_ZN25TemperatureScreenViewBaseC1Ev+0x468>)
 800f8f6:	681b      	ldr	r3, [r3, #0]
 800f8f8:	8dba      	ldrh	r2, [r7, #44]	; 0x2c
 800f8fa:	4611      	mov	r1, r2
 800f8fc:	4618      	mov	r0, r3
 800f8fe:	f000 fbf1 	bl	80100e4 <_ZNK8touchgfx5Texts7getTextEt>
 800f902:	4603      	mov	r3, r0
 800f904:	bf00      	nop
 800f906:	4aa2      	ldr	r2, [pc, #648]	; (800fb90 <_ZN25TemperatureScreenViewBaseC1Ev+0x46c>)
 800f908:	2104      	movs	r1, #4
 800f90a:	4620      	mov	r0, r4
 800f90c:	f00c ff52 	bl	801c7b4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800f910:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800f914:	4618      	mov	r0, r3
 800f916:	f7f9 ffbb 	bl	8009890 <_ZN8touchgfx9TypedTextD1Ev>
    TemperatureData.setWildcard(TemperatureDataBuffer);
 800f91a:	697b      	ldr	r3, [r7, #20]
 800f91c:	f103 026c 	add.w	r2, r3, #108	; 0x6c
 800f920:	697b      	ldr	r3, [r7, #20]
 800f922:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800f926:	4619      	mov	r1, r3
 800f928:	4610      	mov	r0, r2
 800f92a:	f7fd fad7 	bl	800cedc <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    TemperatureData.resizeToCurrentText();
 800f92e:	697b      	ldr	r3, [r7, #20]
 800f930:	336c      	adds	r3, #108	; 0x6c
 800f932:	4618      	mov	r0, r3
 800f934:	f006 fca6 	bl	8016284 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    TemperatureData.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GYIK));
 800f938:	697b      	ldr	r3, [r7, #20]
 800f93a:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800f93e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800f942:	2101      	movs	r1, #1
 800f944:	4618      	mov	r0, r3
 800f946:	f7fa fc75 	bl	800a234 <_ZN8touchgfx9TypedTextC1Et>
 800f94a:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800f94e:	4619      	mov	r1, r3
 800f950:	4620      	mov	r0, r4
 800f952:	f006 fcb7 	bl	80162c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800f956:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800f95a:	4618      	mov	r0, r3
 800f95c:	f7f9 ff98 	bl	8009890 <_ZN8touchgfx9TypedTextD1Ev>
    add(TemperatureData);
 800f960:	697a      	ldr	r2, [r7, #20]
 800f962:	697b      	ldr	r3, [r7, #20]
 800f964:	336c      	adds	r3, #108	; 0x6c
 800f966:	4619      	mov	r1, r3
 800f968:	4610      	mov	r0, r2
 800f96a:	f7fa fbcb 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Temperature_text.setXY(39, 10);
 800f96e:	697b      	ldr	r3, [r7, #20]
 800f970:	33b8      	adds	r3, #184	; 0xb8
 800f972:	220a      	movs	r2, #10
 800f974:	2127      	movs	r1, #39	; 0x27
 800f976:	4618      	mov	r0, r3
 800f978:	f7fa fa75 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
    Temperature_text.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
 800f97c:	697b      	ldr	r3, [r7, #20]
 800f97e:	f103 04b8 	add.w	r4, r3, #184	; 0xb8
 800f982:	23f2      	movs	r3, #242	; 0xf2
 800f984:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 800f988:	23ae      	movs	r3, #174	; 0xae
 800f98a:	f887 307a 	strb.w	r3, [r7, #122]	; 0x7a
 800f98e:	23ae      	movs	r3, #174	; 0xae
 800f990:	f887 3079 	strb.w	r3, [r7, #121]	; 0x79
 800f994:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 800f998:	041b      	lsls	r3, r3, #16
 800f99a:	461a      	mov	r2, r3
 800f99c:	f897 307a 	ldrb.w	r3, [r7, #122]	; 0x7a
 800f9a0:	021b      	lsls	r3, r3, #8
 800f9a2:	431a      	orrs	r2, r3
 800f9a4:	f897 3079 	ldrb.w	r3, [r7, #121]	; 0x79
 800f9a8:	4313      	orrs	r3, r2
 800f9aa:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f9ae:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800f9b2:	4611      	mov	r1, r2
 800f9b4:	4618      	mov	r0, r3
 800f9b6:	f7fa f953 	bl	8009c60 <_ZN8touchgfx9colortypeC1Em>
 800f9ba:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800f9bc:	67fc      	str	r4, [r7, #124]	; 0x7c
 800f9be:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800f9c0:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800f9c2:	69ba      	ldr	r2, [r7, #24]
 800f9c4:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800f9c6:	bf00      	nop
    Temperature_text.setLinespacing(0);
 800f9c8:	697b      	ldr	r3, [r7, #20]
 800f9ca:	33b8      	adds	r3, #184	; 0xb8
 800f9cc:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800f9d0:	2300      	movs	r3, #0
 800f9d2:	f8a7 3082 	strh.w	r3, [r7, #130]	; 0x82
        linespace = space;
 800f9d6:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800f9da:	f8b7 2082 	ldrh.w	r2, [r7, #130]	; 0x82
 800f9de:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800f9e0:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800f9e4:	681b      	ldr	r3, [r3, #0]
 800f9e6:	3384      	adds	r3, #132	; 0x84
 800f9e8:	681b      	ldr	r3, [r3, #0]
 800f9ea:	f8d7 4084 	ldr.w	r4, [r7, #132]	; 0x84
 800f9ee:	463a      	mov	r2, r7
 800f9f0:	f8d7 1084 	ldr.w	r1, [r7, #132]	; 0x84
 800f9f4:	4610      	mov	r0, r2
 800f9f6:	4798      	blx	r3
 800f9f8:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800f9fc:	463a      	mov	r2, r7
 800f9fe:	ca07      	ldmia	r2, {r0, r1, r2}
 800fa00:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800fa04:	bf00      	nop
    Temperature_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OJUT));
 800fa06:	697b      	ldr	r3, [r7, #20]
 800fa08:	f103 04b8 	add.w	r4, r3, #184	; 0xb8
 800fa0c:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800fa10:	2108      	movs	r1, #8
 800fa12:	4618      	mov	r0, r3
 800fa14:	f7fa fc0e 	bl	800a234 <_ZN8touchgfx9TypedTextC1Et>
 800fa18:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800fa1c:	4619      	mov	r1, r3
 800fa1e:	4620      	mov	r0, r4
 800fa20:	f006 fc50 	bl	80162c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800fa24:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800fa28:	4618      	mov	r0, r3
 800fa2a:	f7f9 ff31 	bl	8009890 <_ZN8touchgfx9TypedTextD1Ev>
    add(Temperature_text);
 800fa2e:	697a      	ldr	r2, [r7, #20]
 800fa30:	697b      	ldr	r3, [r7, #20]
 800fa32:	33b8      	adds	r3, #184	; 0xb8
 800fa34:	4619      	mov	r1, r3
 800fa36:	4610      	mov	r0, r2
 800fa38:	f7fa fb64 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    TemperatureGauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_BACKGROUNDS_LIGHT_ID));
 800fa3c:	697b      	ldr	r3, [r7, #20]
 800fa3e:	f503 7480 	add.w	r4, r3, #256	; 0x100
 800fa42:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800fa46:	2102      	movs	r1, #2
 800fa48:	4618      	mov	r0, r3
 800fa4a:	f7fa f94f 	bl	8009cec <_ZN8touchgfx6BitmapC1Et>
 800fa4e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800fa52:	4619      	mov	r1, r3
 800fa54:	4620      	mov	r0, r4
 800fa56:	f003 f8c2 	bl	8012bde <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    TemperatureGauge.setPosition(166, 73, 120, 120);
 800fa5a:	697b      	ldr	r3, [r7, #20]
 800fa5c:	f503 7080 	add.w	r0, r3, #256	; 0x100
 800fa60:	2378      	movs	r3, #120	; 0x78
 800fa62:	9300      	str	r3, [sp, #0]
 800fa64:	2378      	movs	r3, #120	; 0x78
 800fa66:	2249      	movs	r2, #73	; 0x49
 800fa68:	21a6      	movs	r1, #166	; 0xa6
 800fa6a:	f7fa f9bd 	bl	8009de8 <_ZN8touchgfx8Drawable11setPositionEssss>
    TemperatureGauge.setCenter(60, 60);
 800fa6e:	697b      	ldr	r3, [r7, #20]
 800fa70:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800fa74:	223c      	movs	r2, #60	; 0x3c
 800fa76:	213c      	movs	r1, #60	; 0x3c
 800fa78:	4618      	mov	r0, r3
 800fa7a:	f006 fd5c 	bl	8016536 <_ZN8touchgfx5Gauge9setCenterEii>
    TemperatureGauge.setStartEndAngle(-90, 90);
 800fa7e:	697b      	ldr	r3, [r7, #20]
 800fa80:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800fa84:	225a      	movs	r2, #90	; 0x5a
 800fa86:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800fa8a:	4618      	mov	r0, r3
 800fa8c:	f006 fdd8 	bl	8016640 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    TemperatureGauge.setRange(0, 120);
 800fa90:	697b      	ldr	r3, [r7, #20]
 800fa92:	f503 7080 	add.w	r0, r3, #256	; 0x100
 800fa96:	2300      	movs	r3, #0
 800fa98:	9300      	str	r3, [sp, #0]
 800fa9a:	2300      	movs	r3, #0
 800fa9c:	2278      	movs	r2, #120	; 0x78
 800fa9e:	2100      	movs	r1, #0
 800faa0:	f002 ff77 	bl	8012992 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    TemperatureGauge.setValue(20);
 800faa4:	697b      	ldr	r3, [r7, #20]
 800faa6:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800faaa:	2114      	movs	r1, #20
 800faac:	4618      	mov	r0, r3
 800faae:	f006 fd71 	bl	8016594 <_ZN8touchgfx5Gauge8setValueEi>
    TemperatureGauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_NEEDLES_ROUGH_ID, 5, 33);
 800fab2:	697b      	ldr	r3, [r7, #20]
 800fab4:	f503 7080 	add.w	r0, r3, #256	; 0x100
 800fab8:	2321      	movs	r3, #33	; 0x21
 800faba:	2205      	movs	r2, #5
 800fabc:	2103      	movs	r1, #3
 800fabe:	f006 fd25 	bl	801650c <_ZN8touchgfx5Gauge9setNeedleEtss>
    TemperatureGauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800fac2:	697b      	ldr	r3, [r7, #20]
 800fac4:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800fac8:	2101      	movs	r1, #1
 800faca:	4618      	mov	r0, r3
 800facc:	f006 fcc0 	bl	8016450 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    TemperatureGauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800fad0:	697b      	ldr	r3, [r7, #20]
 800fad2:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800fad6:	2101      	movs	r1, #1
 800fad8:	4618      	mov	r0, r3
 800fada:	f006 fcbc 	bl	8016456 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(TemperatureGauge);
 800fade:	697a      	ldr	r2, [r7, #20]
 800fae0:	697b      	ldr	r3, [r7, #20]
 800fae2:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800fae6:	4619      	mov	r1, r3
 800fae8:	4610      	mov	r0, r2
 800faea:	f7fa fb0b 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    back.setXY(20, 103);
 800faee:	697b      	ldr	r3, [r7, #20]
 800faf0:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 800faf4:	2267      	movs	r2, #103	; 0x67
 800faf6:	2114      	movs	r1, #20
 800faf8:	4618      	mov	r0, r3
 800fafa:	f7fa f9b4 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
    back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
 800fafe:	697b      	ldr	r3, [r7, #20]
 800fb00:	f503 7428 	add.w	r4, r3, #672	; 0x2a0
 800fb04:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800fb08:	2100      	movs	r1, #0
 800fb0a:	4618      	mov	r0, r3
 800fb0c:	f7fa f8ee 	bl	8009cec <_ZN8touchgfx6BitmapC1Et>
 800fb10:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800fb14:	2101      	movs	r1, #1
 800fb16:	4618      	mov	r0, r3
 800fb18:	f7fa f8e8 	bl	8009cec <_ZN8touchgfx6BitmapC1Et>
 800fb1c:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800fb20:	2104      	movs	r1, #4
 800fb22:	4618      	mov	r0, r3
 800fb24:	f7fa f8e2 	bl	8009cec <_ZN8touchgfx6BitmapC1Et>
 800fb28:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800fb2c:	2104      	movs	r1, #4
 800fb2e:	4618      	mov	r0, r3
 800fb30:	f7fa f8dc 	bl	8009cec <_ZN8touchgfx6BitmapC1Et>
 800fb34:	f107 004c 	add.w	r0, r7, #76	; 0x4c
 800fb38:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800fb3c:	f107 0144 	add.w	r1, r7, #68	; 0x44
 800fb40:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800fb44:	9300      	str	r3, [sp, #0]
 800fb46:	4603      	mov	r3, r0
 800fb48:	4620      	mov	r0, r4
 800fb4a:	f006 ff3b 	bl	80169c4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    back.setIconXY(5, 5);
 800fb4e:	697b      	ldr	r3, [r7, #20]
 800fb50:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 800fb54:	2205      	movs	r2, #5
 800fb56:	2105      	movs	r1, #5
 800fb58:	4618      	mov	r0, r3
 800fb5a:	f7fa fd8b 	bl	800a674 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    back.setAction(buttonCallback);
 800fb5e:	697b      	ldr	r3, [r7, #20]
 800fb60:	f503 7228 	add.w	r2, r3, #672	; 0x2a0
 800fb64:	697b      	ldr	r3, [r7, #20]
 800fb66:	f503 7339 	add.w	r3, r3, #740	; 0x2e4
 800fb6a:	4619      	mov	r1, r3
 800fb6c:	4610      	mov	r0, r2
 800fb6e:	f7fa fd33 	bl	800a5d8 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(back);
 800fb72:	697a      	ldr	r2, [r7, #20]
 800fb74:	697b      	ldr	r3, [r7, #20]
 800fb76:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 800fb7a:	4619      	mov	r1, r3
 800fb7c:	4610      	mov	r0, r2
 800fb7e:	f7fa fac1 	bl	800a104 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800fb82:	697b      	ldr	r3, [r7, #20]
 800fb84:	4618      	mov	r0, r3
 800fb86:	378c      	adds	r7, #140	; 0x8c
 800fb88:	46bd      	mov	sp, r7
 800fb8a:	bd90      	pop	{r4, r7, pc}
 800fb8c:	200022b0 	.word	0x200022b0
 800fb90:	0802d1d4 	.word	0x0802d1d4

0800fb94 <_ZN25TemperatureScreenViewBaseD1Ev>:

TemperatureScreenViewBase::~TemperatureScreenViewBase()
 800fb94:	b580      	push	{r7, lr}
 800fb96:	b082      	sub	sp, #8
 800fb98:	af00      	add	r7, sp, #0
 800fb9a:	6078      	str	r0, [r7, #4]
 800fb9c:	4a16      	ldr	r2, [pc, #88]	; (800fbf8 <_ZN25TemperatureScreenViewBaseD1Ev+0x64>)
 800fb9e:	687b      	ldr	r3, [r7, #4]
 800fba0:	601a      	str	r2, [r3, #0]
 800fba2:	687b      	ldr	r3, [r7, #4]
 800fba4:	f503 7339 	add.w	r3, r3, #740	; 0x2e4
 800fba8:	4618      	mov	r0, r3
 800fbaa:	f000 f88f 	bl	800fccc <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800fbae:	687b      	ldr	r3, [r7, #4]
 800fbb0:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 800fbb4:	4618      	mov	r0, r3
 800fbb6:	f7fb f8d3 	bl	800ad60 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800fbba:	687b      	ldr	r3, [r7, #4]
 800fbbc:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800fbc0:	4618      	mov	r0, r3
 800fbc2:	f7fd fd65 	bl	800d690 <_ZN8touchgfx5GaugeD1Ev>
 800fbc6:	687b      	ldr	r3, [r7, #4]
 800fbc8:	33b8      	adds	r3, #184	; 0xb8
 800fbca:	4618      	mov	r0, r3
 800fbcc:	f7fa fc86 	bl	800a4dc <_ZN8touchgfx8TextAreaD1Ev>
 800fbd0:	687b      	ldr	r3, [r7, #4]
 800fbd2:	336c      	adds	r3, #108	; 0x6c
 800fbd4:	4618      	mov	r0, r3
 800fbd6:	f7fa fff1 	bl	800abbc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800fbda:	687b      	ldr	r3, [r7, #4]
 800fbdc:	3340      	adds	r3, #64	; 0x40
 800fbde:	4618      	mov	r0, r3
 800fbe0:	f7fb f830 	bl	800ac44 <_ZN8touchgfx3BoxD1Ev>
 800fbe4:	687b      	ldr	r3, [r7, #4]
 800fbe6:	4618      	mov	r0, r3
 800fbe8:	f7ff fd7a 	bl	800f6e0 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterED1Ev>
{

}
 800fbec:	687b      	ldr	r3, [r7, #4]
 800fbee:	4618      	mov	r0, r3
 800fbf0:	3708      	adds	r7, #8
 800fbf2:	46bd      	mov	sp, r7
 800fbf4:	bd80      	pop	{r7, pc}
 800fbf6:	bf00      	nop
 800fbf8:	0802e588 	.word	0x0802e588

0800fbfc <_ZN25TemperatureScreenViewBaseD0Ev>:
TemperatureScreenViewBase::~TemperatureScreenViewBase()
 800fbfc:	b580      	push	{r7, lr}
 800fbfe:	b082      	sub	sp, #8
 800fc00:	af00      	add	r7, sp, #0
 800fc02:	6078      	str	r0, [r7, #4]
}
 800fc04:	6878      	ldr	r0, [r7, #4]
 800fc06:	f7ff ffc5 	bl	800fb94 <_ZN25TemperatureScreenViewBaseD1Ev>
 800fc0a:	f44f 713d 	mov.w	r1, #756	; 0x2f4
 800fc0e:	6878      	ldr	r0, [r7, #4]
 800fc10:	f01a fde5 	bl	802a7de <_ZdlPvj>
 800fc14:	687b      	ldr	r3, [r7, #4]
 800fc16:	4618      	mov	r0, r3
 800fc18:	3708      	adds	r7, #8
 800fc1a:	46bd      	mov	sp, r7
 800fc1c:	bd80      	pop	{r7, pc}

0800fc1e <_ZN25TemperatureScreenViewBase11setupScreenEv>:

void TemperatureScreenViewBase::setupScreen()
{
 800fc1e:	b480      	push	{r7}
 800fc20:	b083      	sub	sp, #12
 800fc22:	af00      	add	r7, sp, #0
 800fc24:	6078      	str	r0, [r7, #4]

}
 800fc26:	bf00      	nop
 800fc28:	370c      	adds	r7, #12
 800fc2a:	46bd      	mov	sp, r7
 800fc2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc30:	4770      	bx	lr

0800fc32 <_ZN25TemperatureScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void TemperatureScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800fc32:	b580      	push	{r7, lr}
 800fc34:	b082      	sub	sp, #8
 800fc36:	af00      	add	r7, sp, #0
 800fc38:	6078      	str	r0, [r7, #4]
 800fc3a:	6039      	str	r1, [r7, #0]
    if (&src == &back)
 800fc3c:	687b      	ldr	r3, [r7, #4]
 800fc3e:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 800fc42:	683a      	ldr	r2, [r7, #0]
 800fc44:	429a      	cmp	r2, r3
 800fc46:	d106      	bne.n	800fc56 <_ZN25TemperatureScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x24>
    {
        //TemperatureToMain
        //When back clicked change screen to MainScreen
        //Go to MainScreen with screen transition towards West
        application().gotoMainScreenScreenSlideTransitionWest();
 800fc48:	6878      	ldr	r0, [r7, #4]
 800fc4a:	f7ff fd3e 	bl	800f6ca <_ZN25TemperatureScreenViewBase11applicationEv>
 800fc4e:	4603      	mov	r3, r0
 800fc50:	4618      	mov	r0, r3
 800fc52:	f7fb fbc5 	bl	800b3e0 <_ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionWestEv>
    }
}
 800fc56:	bf00      	nop
 800fc58:	3708      	adds	r7, #8
 800fc5a:	46bd      	mov	sp, r7
 800fc5c:	bd80      	pop	{r7, pc}
	...

0800fc60 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterEC1Ev>:
    View()
 800fc60:	b580      	push	{r7, lr}
 800fc62:	b082      	sub	sp, #8
 800fc64:	af00      	add	r7, sp, #0
 800fc66:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800fc68:	687b      	ldr	r3, [r7, #4]
 800fc6a:	4618      	mov	r0, r3
 800fc6c:	f00a ff68 	bl	801ab40 <_ZN8touchgfx6ScreenC1Ev>
 800fc70:	4a05      	ldr	r2, [pc, #20]	; (800fc88 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterEC1Ev+0x28>)
 800fc72:	687b      	ldr	r3, [r7, #4]
 800fc74:	601a      	str	r2, [r3, #0]
 800fc76:	687b      	ldr	r3, [r7, #4]
 800fc78:	2200      	movs	r2, #0
 800fc7a:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800fc7c:	687b      	ldr	r3, [r7, #4]
 800fc7e:	4618      	mov	r0, r3
 800fc80:	3708      	adds	r7, #8
 800fc82:	46bd      	mov	sp, r7
 800fc84:	bd80      	pop	{r7, pc}
 800fc86:	bf00      	nop
 800fc88:	0802e5d4 	.word	0x0802e5d4

0800fc8c <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800fc8c:	b580      	push	{r7, lr}
 800fc8e:	b084      	sub	sp, #16
 800fc90:	af00      	add	r7, sp, #0
 800fc92:	60f8      	str	r0, [r7, #12]
 800fc94:	60b9      	str	r1, [r7, #8]
 800fc96:	4639      	mov	r1, r7
 800fc98:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800fc9c:	68fb      	ldr	r3, [r7, #12]
 800fc9e:	4618      	mov	r0, r3
 800fca0:	f7fa ff1a 	bl	800aad8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800fca4:	4a08      	ldr	r2, [pc, #32]	; (800fcc8 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800fca6:	68fb      	ldr	r3, [r7, #12]
 800fca8:	601a      	str	r2, [r3, #0]
 800fcaa:	68fb      	ldr	r3, [r7, #12]
 800fcac:	68ba      	ldr	r2, [r7, #8]
 800fcae:	605a      	str	r2, [r3, #4]
 800fcb0:	68fb      	ldr	r3, [r7, #12]
 800fcb2:	3308      	adds	r3, #8
 800fcb4:	463a      	mov	r2, r7
 800fcb6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800fcba:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800fcbe:	68fb      	ldr	r3, [r7, #12]
 800fcc0:	4618      	mov	r0, r3
 800fcc2:	3710      	adds	r7, #16
 800fcc4:	46bd      	mov	sp, r7
 800fcc6:	bd80      	pop	{r7, pc}
 800fcc8:	0802e5bc 	.word	0x0802e5bc

0800fccc <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800fccc:	b580      	push	{r7, lr}
 800fcce:	b082      	sub	sp, #8
 800fcd0:	af00      	add	r7, sp, #0
 800fcd2:	6078      	str	r0, [r7, #4]
 800fcd4:	4a05      	ldr	r2, [pc, #20]	; (800fcec <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800fcd6:	687b      	ldr	r3, [r7, #4]
 800fcd8:	601a      	str	r2, [r3, #0]
 800fcda:	687b      	ldr	r3, [r7, #4]
 800fcdc:	4618      	mov	r0, r3
 800fcde:	f7fa ff2b 	bl	800ab38 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800fce2:	687b      	ldr	r3, [r7, #4]
 800fce4:	4618      	mov	r0, r3
 800fce6:	3708      	adds	r7, #8
 800fce8:	46bd      	mov	sp, r7
 800fcea:	bd80      	pop	{r7, pc}
 800fcec:	0802e5bc 	.word	0x0802e5bc

0800fcf0 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800fcf0:	b580      	push	{r7, lr}
 800fcf2:	b082      	sub	sp, #8
 800fcf4:	af00      	add	r7, sp, #0
 800fcf6:	6078      	str	r0, [r7, #4]
 800fcf8:	6878      	ldr	r0, [r7, #4]
 800fcfa:	f7ff ffe7 	bl	800fccc <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800fcfe:	2110      	movs	r1, #16
 800fd00:	6878      	ldr	r0, [r7, #4]
 800fd02:	f01a fd6c 	bl	802a7de <_ZdlPvj>
 800fd06:	687b      	ldr	r3, [r7, #4]
 800fd08:	4618      	mov	r0, r3
 800fd0a:	3708      	adds	r7, #8
 800fd0c:	46bd      	mov	sp, r7
 800fd0e:	bd80      	pop	{r7, pc}

0800fd10 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800fd10:	b580      	push	{r7, lr}
 800fd12:	b082      	sub	sp, #8
 800fd14:	af00      	add	r7, sp, #0
 800fd16:	6078      	str	r0, [r7, #4]
 800fd18:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800fd1a:	687b      	ldr	r3, [r7, #4]
 800fd1c:	685b      	ldr	r3, [r3, #4]
 800fd1e:	687a      	ldr	r2, [r7, #4]
 800fd20:	68d2      	ldr	r2, [r2, #12]
 800fd22:	1052      	asrs	r2, r2, #1
 800fd24:	1898      	adds	r0, r3, r2
 800fd26:	687b      	ldr	r3, [r7, #4]
 800fd28:	68db      	ldr	r3, [r3, #12]
 800fd2a:	f003 0301 	and.w	r3, r3, #1
 800fd2e:	2b00      	cmp	r3, #0
 800fd30:	d102      	bne.n	800fd38 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800fd32:	687b      	ldr	r3, [r7, #4]
 800fd34:	689b      	ldr	r3, [r3, #8]
 800fd36:	e00a      	b.n	800fd4e <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800fd38:	687b      	ldr	r3, [r7, #4]
 800fd3a:	685b      	ldr	r3, [r3, #4]
 800fd3c:	687a      	ldr	r2, [r7, #4]
 800fd3e:	68d2      	ldr	r2, [r2, #12]
 800fd40:	1052      	asrs	r2, r2, #1
 800fd42:	4413      	add	r3, r2
 800fd44:	681b      	ldr	r3, [r3, #0]
 800fd46:	687a      	ldr	r2, [r7, #4]
 800fd48:	6892      	ldr	r2, [r2, #8]
 800fd4a:	4413      	add	r3, r2
 800fd4c:	681b      	ldr	r3, [r3, #0]
 800fd4e:	6839      	ldr	r1, [r7, #0]
 800fd50:	4798      	blx	r3
    }
 800fd52:	bf00      	nop
 800fd54:	3708      	adds	r7, #8
 800fd56:	46bd      	mov	sp, r7
 800fd58:	bd80      	pop	{r7, pc}

0800fd5a <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800fd5a:	b480      	push	{r7}
 800fd5c:	b083      	sub	sp, #12
 800fd5e:	af00      	add	r7, sp, #0
 800fd60:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800fd62:	687b      	ldr	r3, [r7, #4]
 800fd64:	685b      	ldr	r3, [r3, #4]
 800fd66:	2b00      	cmp	r3, #0
 800fd68:	d010      	beq.n	800fd8c <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800fd6a:	687b      	ldr	r3, [r7, #4]
 800fd6c:	689b      	ldr	r3, [r3, #8]
 800fd6e:	2b00      	cmp	r3, #0
 800fd70:	d107      	bne.n	800fd82 <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800fd72:	687b      	ldr	r3, [r7, #4]
 800fd74:	68db      	ldr	r3, [r3, #12]
 800fd76:	f003 0301 	and.w	r3, r3, #1
 800fd7a:	2b00      	cmp	r3, #0
 800fd7c:	d101      	bne.n	800fd82 <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800fd7e:	2301      	movs	r3, #1
 800fd80:	e000      	b.n	800fd84 <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800fd82:	2300      	movs	r3, #0
 800fd84:	2b01      	cmp	r3, #1
 800fd86:	d001      	beq.n	800fd8c <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800fd88:	2301      	movs	r3, #1
 800fd8a:	e000      	b.n	800fd8e <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800fd8c:	2300      	movs	r3, #0
    }
 800fd8e:	4618      	mov	r0, r3
 800fd90:	370c      	adds	r7, #12
 800fd92:	46bd      	mov	sp, r7
 800fd94:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd98:	4770      	bx	lr
	...

0800fd9c <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800fd9c:	b480      	push	{r7}
 800fd9e:	af00      	add	r7, sp, #0
    return bitmap_database;
 800fda0:	4b02      	ldr	r3, [pc, #8]	; (800fdac <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800fda2:	4618      	mov	r0, r3
 800fda4:	46bd      	mov	sp, r7
 800fda6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fdaa:	4770      	bx	lr
 800fdac:	0802e600 	.word	0x0802e600

0800fdb0 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800fdb0:	b480      	push	{r7}
 800fdb2:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800fdb4:	2305      	movs	r3, #5
}
 800fdb6:	4618      	mov	r0, r3
 800fdb8:	46bd      	mov	sp, r7
 800fdba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fdbe:	4770      	bx	lr

0800fdc0 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
     * @param  prevChar The Unicode value of the previous character.
     * @param  glyph    the glyph object for the current character.
     *
     * @return The kerning distance between prevChar and glyph char.
     */
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800fdc0:	b480      	push	{r7}
 800fdc2:	b085      	sub	sp, #20
 800fdc4:	af00      	add	r7, sp, #0
 800fdc6:	60f8      	str	r0, [r7, #12]
 800fdc8:	460b      	mov	r3, r1
 800fdca:	607a      	str	r2, [r7, #4]
 800fdcc:	817b      	strh	r3, [r7, #10]
    {
        (void)prevChar; // Unused variable
        (void)glyph;    // Unused variable
        return 0;
 800fdce:	2300      	movs	r3, #0
    }
 800fdd0:	4618      	mov	r0, r3
 800fdd2:	3714      	adds	r7, #20
 800fdd4:	46bd      	mov	sp, r7
 800fdd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fdda:	4770      	bx	lr

0800fddc <_ZNK8touchgfx4Font12getGSUBTableEv>:
    /**
     * Gets GSUB table. Currently only used for Devanagari fonts.
     *
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
 800fddc:	b480      	push	{r7}
 800fdde:	b083      	sub	sp, #12
 800fde0:	af00      	add	r7, sp, #0
 800fde2:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800fde4:	2300      	movs	r3, #0
    }
 800fde6:	4618      	mov	r0, r3
 800fde8:	370c      	adds	r7, #12
 800fdea:	46bd      	mov	sp, r7
 800fdec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fdf0:	4770      	bx	lr

0800fdf2 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    /**
     * Gets the contextual forms table used in arabic fonts.
     *
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800fdf2:	b480      	push	{r7}
 800fdf4:	b083      	sub	sp, #12
 800fdf6:	af00      	add	r7, sp, #0
 800fdf8:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800fdfa:	2300      	movs	r3, #0
    }
 800fdfc:	4618      	mov	r0, r3
 800fdfe:	370c      	adds	r7, #12
 800fe00:	46bd      	mov	sp, r7
 800fe02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe06:	4770      	bx	lr

0800fe08 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800fe08:	b480      	push	{r7}
 800fe0a:	b085      	sub	sp, #20
 800fe0c:	af00      	add	r7, sp, #0
 800fe0e:	60f8      	str	r0, [r7, #12]
 800fe10:	60b9      	str	r1, [r7, #8]
 800fe12:	4613      	mov	r3, r2
 800fe14:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800fe16:	4a07      	ldr	r2, [pc, #28]	; (800fe34 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800fe18:	68fb      	ldr	r3, [r7, #12]
 800fe1a:	6013      	str	r3, [r2, #0]
        fonts = f;
 800fe1c:	4a06      	ldr	r2, [pc, #24]	; (800fe38 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800fe1e:	68bb      	ldr	r3, [r7, #8]
 800fe20:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800fe22:	4a06      	ldr	r2, [pc, #24]	; (800fe3c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800fe24:	88fb      	ldrh	r3, [r7, #6]
 800fe26:	8013      	strh	r3, [r2, #0]
    }
 800fe28:	bf00      	nop
 800fe2a:	3714      	adds	r7, #20
 800fe2c:	46bd      	mov	sp, r7
 800fe2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe32:	4770      	bx	lr
 800fe34:	200022a4 	.word	0x200022a4
 800fe38:	200022ac 	.word	0x200022ac
 800fe3c:	200022a8 	.word	0x200022a8

0800fe40 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800fe40:	b40e      	push	{r1, r2, r3}
 800fe42:	b580      	push	{r7, lr}
 800fe44:	b085      	sub	sp, #20
 800fe46:	af00      	add	r7, sp, #0
 800fe48:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800fe4a:	f107 0320 	add.w	r3, r7, #32
 800fe4e:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800fe50:	68bb      	ldr	r3, [r7, #8]
 800fe52:	69fa      	ldr	r2, [r7, #28]
 800fe54:	2100      	movs	r1, #0
 800fe56:	6878      	ldr	r0, [r7, #4]
 800fe58:	f00a f9fa 	bl	801a250 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800fe5c:	4603      	mov	r3, r0
 800fe5e:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800fe60:	89fb      	ldrh	r3, [r7, #14]
}
 800fe62:	4618      	mov	r0, r3
 800fe64:	3714      	adds	r7, #20
 800fe66:	46bd      	mov	sp, r7
 800fe68:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800fe6c:	b003      	add	sp, #12
 800fe6e:	4770      	bx	lr

0800fe70 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800fe70:	b40c      	push	{r2, r3}
 800fe72:	b580      	push	{r7, lr}
 800fe74:	b084      	sub	sp, #16
 800fe76:	af00      	add	r7, sp, #0
 800fe78:	6078      	str	r0, [r7, #4]
 800fe7a:	460b      	mov	r3, r1
 800fe7c:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800fe7e:	f107 031c 	add.w	r3, r7, #28
 800fe82:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800fe84:	78f9      	ldrb	r1, [r7, #3]
 800fe86:	68bb      	ldr	r3, [r7, #8]
 800fe88:	69ba      	ldr	r2, [r7, #24]
 800fe8a:	6878      	ldr	r0, [r7, #4]
 800fe8c:	f00a f9e0 	bl	801a250 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800fe90:	4603      	mov	r3, r0
 800fe92:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800fe94:	89fb      	ldrh	r3, [r7, #14]
}
 800fe96:	4618      	mov	r0, r3
 800fe98:	3710      	adds	r7, #16
 800fe9a:	46bd      	mov	sp, r7
 800fe9c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800fea0:	b002      	add	sp, #8
 800fea2:	4770      	bx	lr

0800fea4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800fea4:	b580      	push	{r7, lr}
 800fea6:	b08a      	sub	sp, #40	; 0x28
 800fea8:	af00      	add	r7, sp, #0
 800feaa:	6078      	str	r0, [r7, #4]
 800feac:	460b      	mov	r3, r1
 800feae:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800feb0:	687b      	ldr	r3, [r7, #4]
 800feb2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800feb4:	2b00      	cmp	r3, #0
 800feb6:	d016      	beq.n	800fee6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800feb8:	687b      	ldr	r3, [r7, #4]
 800feba:	3322      	adds	r3, #34	; 0x22
 800febc:	627b      	str	r3, [r7, #36]	; 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800febe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800fec0:	8adb      	ldrh	r3, [r3, #22]
 800fec2:	2b00      	cmp	r3, #0
 800fec4:	d105      	bne.n	800fed2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800fec6:	4b43      	ldr	r3, [pc, #268]	; (800ffd4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800fec8:	4a43      	ldr	r2, [pc, #268]	; (800ffd8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800feca:	21c5      	movs	r1, #197	; 0xc5
 800fecc:	4843      	ldr	r0, [pc, #268]	; (800ffdc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800fece:	f01b fa77 	bl	802b3c0 <__assert_func>
            return buffer[pos];
 800fed2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800fed4:	8a9b      	ldrh	r3, [r3, #20]
 800fed6:	461a      	mov	r2, r3
 800fed8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800feda:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800fede:	2b00      	cmp	r3, #0
 800fee0:	d001      	beq.n	800fee6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800fee2:	2301      	movs	r3, #1
 800fee4:	e000      	b.n	800fee8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800fee6:	2300      	movs	r3, #0
 800fee8:	2b00      	cmp	r3, #0
 800feea:	d06a      	beq.n	800ffc2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800feec:	6878      	ldr	r0, [r7, #4]
 800feee:	f00b fd62 	bl	801b9b6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800fef2:	687b      	ldr	r3, [r7, #4]
 800fef4:	3322      	adds	r3, #34	; 0x22
 800fef6:	623b      	str	r3, [r7, #32]
 800fef8:	2301      	movs	r3, #1
 800fefa:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800fefc:	6a3b      	ldr	r3, [r7, #32]
 800fefe:	8adb      	ldrh	r3, [r3, #22]
 800ff00:	8bfa      	ldrh	r2, [r7, #30]
 800ff02:	429a      	cmp	r2, r3
 800ff04:	d305      	bcc.n	800ff12 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800ff06:	4b36      	ldr	r3, [pc, #216]	; (800ffe0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800ff08:	4a36      	ldr	r2, [pc, #216]	; (800ffe4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800ff0a:	21cb      	movs	r1, #203	; 0xcb
 800ff0c:	4833      	ldr	r0, [pc, #204]	; (800ffdc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800ff0e:	f01b fa57 	bl	802b3c0 <__assert_func>
            const uint16_t index = pos + offset;
 800ff12:	6a3b      	ldr	r3, [r7, #32]
 800ff14:	8a9a      	ldrh	r2, [r3, #20]
 800ff16:	8bfb      	ldrh	r3, [r7, #30]
 800ff18:	4413      	add	r3, r2
 800ff1a:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800ff1c:	8bbb      	ldrh	r3, [r7, #28]
 800ff1e:	2b09      	cmp	r3, #9
 800ff20:	d801      	bhi.n	800ff26 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800ff22:	8bbb      	ldrh	r3, [r7, #28]
 800ff24:	e001      	b.n	800ff2a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800ff26:	8bbb      	ldrh	r3, [r7, #28]
 800ff28:	3b0a      	subs	r3, #10
 800ff2a:	6a3a      	ldr	r2, [r7, #32]
 800ff2c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800ff30:	f640 123f 	movw	r2, #2367	; 0x93f
 800ff34:	4293      	cmp	r3, r2
 800ff36:	bf0c      	ite	eq
 800ff38:	2301      	moveq	r3, #1
 800ff3a:	2300      	movne	r3, #0
 800ff3c:	b2db      	uxtb	r3, r3
 800ff3e:	2b00      	cmp	r3, #0
 800ff40:	d03f      	beq.n	800ffc2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800ff42:	687b      	ldr	r3, [r7, #4]
 800ff44:	3322      	adds	r3, #34	; 0x22
 800ff46:	687a      	ldr	r2, [r7, #4]
 800ff48:	3222      	adds	r2, #34	; 0x22
 800ff4a:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800ff4c:	68ba      	ldr	r2, [r7, #8]
 800ff4e:	8ad2      	ldrh	r2, [r2, #22]
 800ff50:	2a00      	cmp	r2, #0
 800ff52:	d105      	bne.n	800ff60 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800ff54:	4b1f      	ldr	r3, [pc, #124]	; (800ffd4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800ff56:	4a20      	ldr	r2, [pc, #128]	; (800ffd8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800ff58:	21c5      	movs	r1, #197	; 0xc5
 800ff5a:	4820      	ldr	r0, [pc, #128]	; (800ffdc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800ff5c:	f01b fa30 	bl	802b3c0 <__assert_func>
            return buffer[pos];
 800ff60:	68ba      	ldr	r2, [r7, #8]
 800ff62:	8a92      	ldrh	r2, [r2, #20]
 800ff64:	4611      	mov	r1, r2
 800ff66:	68ba      	ldr	r2, [r7, #8]
 800ff68:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800ff6c:	613b      	str	r3, [r7, #16]
 800ff6e:	4613      	mov	r3, r2
 800ff70:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800ff72:	693b      	ldr	r3, [r7, #16]
 800ff74:	8adb      	ldrh	r3, [r3, #22]
 800ff76:	2b01      	cmp	r3, #1
 800ff78:	d806      	bhi.n	800ff88 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800ff7a:	4b1b      	ldr	r3, [pc, #108]	; (800ffe8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800ff7c:	4a1b      	ldr	r2, [pc, #108]	; (800ffec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800ff7e:	f44f 718e 	mov.w	r1, #284	; 0x11c
 800ff82:	4816      	ldr	r0, [pc, #88]	; (800ffdc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800ff84:	f01b fa1c 	bl	802b3c0 <__assert_func>
            const uint16_t index = pos + 1;
 800ff88:	693b      	ldr	r3, [r7, #16]
 800ff8a:	8a9b      	ldrh	r3, [r3, #20]
 800ff8c:	3301      	adds	r3, #1
 800ff8e:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800ff90:	89bb      	ldrh	r3, [r7, #12]
 800ff92:	2b09      	cmp	r3, #9
 800ff94:	d801      	bhi.n	800ff9a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800ff96:	89bb      	ldrh	r3, [r7, #12]
 800ff98:	e000      	b.n	800ff9c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800ff9a:	2300      	movs	r3, #0
 800ff9c:	693a      	ldr	r2, [r7, #16]
 800ff9e:	89f9      	ldrh	r1, [r7, #14]
 800ffa0:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800ffa4:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800ffa6:	687b      	ldr	r3, [r7, #4]
 800ffa8:	3322      	adds	r3, #34	; 0x22
 800ffaa:	61bb      	str	r3, [r7, #24]
 800ffac:	f640 133f 	movw	r3, #2367	; 0x93f
 800ffb0:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800ffb2:	69bb      	ldr	r3, [r7, #24]
 800ffb4:	8a9b      	ldrh	r3, [r3, #20]
 800ffb6:	4619      	mov	r1, r3
 800ffb8:	69bb      	ldr	r3, [r7, #24]
 800ffba:	8afa      	ldrh	r2, [r7, #22]
 800ffbc:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800ffc0:	bf00      	nop
        }
    }
    return getNextChar();
 800ffc2:	6878      	ldr	r0, [r7, #4]
 800ffc4:	f00b fbfa 	bl	801b7bc <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ffc8:	4603      	mov	r3, r0
}
 800ffca:	4618      	mov	r0, r3
 800ffcc:	3728      	adds	r7, #40	; 0x28
 800ffce:	46bd      	mov	sp, r7
 800ffd0:	bd80      	pop	{r7, pc}
 800ffd2:	bf00      	nop
 800ffd4:	0802d1d8 	.word	0x0802d1d8
 800ffd8:	0802d1e4 	.word	0x0802d1e4
 800ffdc:	0802d290 	.word	0x0802d290
 800ffe0:	0802d2d8 	.word	0x0802d2d8
 800ffe4:	0802d2e8 	.word	0x0802d2e8
 800ffe8:	0802d3bc 	.word	0x0802d3bc
 800ffec:	0802d3c8 	.word	0x0802d3c8

0800fff0 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800fff0:	b580      	push	{r7, lr}
 800fff2:	b082      	sub	sp, #8
 800fff4:	af00      	add	r7, sp, #0
 800fff6:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800fff8:	6878      	ldr	r0, [r7, #4]
 800fffa:	f00b fba6 	bl	801b74a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800fffe:	bf00      	nop
 8010000:	3708      	adds	r7, #8
 8010002:	46bd      	mov	sp, r7
 8010004:	bd80      	pop	{r7, pc}

08010006 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8010006:	b580      	push	{r7, lr}
 8010008:	b088      	sub	sp, #32
 801000a:	af02      	add	r7, sp, #8
 801000c:	60f8      	str	r0, [r7, #12]
 801000e:	1d38      	adds	r0, r7, #4
 8010010:	e880 0006 	stmia.w	r0, {r1, r2}
 8010014:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 8010016:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801001a:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 801001c:	1d39      	adds	r1, r7, #4
 801001e:	697b      	ldr	r3, [r7, #20]
 8010020:	9301      	str	r3, [sp, #4]
 8010022:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010024:	9300      	str	r3, [sp, #0]
 8010026:	6a3b      	ldr	r3, [r7, #32]
 8010028:	683a      	ldr	r2, [r7, #0]
 801002a:	68f8      	ldr	r0, [r7, #12]
 801002c:	f008 fd06 	bl	8018a3c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8010030:	bf00      	nop
 8010032:	3718      	adds	r7, #24
 8010034:	46bd      	mov	sp, r7
 8010036:	bd80      	pop	{r7, pc}

08010038 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8010038:	b590      	push	{r4, r7, lr}
 801003a:	b085      	sub	sp, #20
 801003c:	af00      	add	r7, sp, #0
 801003e:	4603      	mov	r3, r0
 8010040:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 8010042:	2300      	movs	r3, #0
 8010044:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 8010046:	88fb      	ldrh	r3, [r7, #6]
 8010048:	2b00      	cmp	r3, #0
 801004a:	d127      	bne.n	801009c <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 801004c:	88fb      	ldrh	r3, [r7, #6]
 801004e:	4a1e      	ldr	r2, [pc, #120]	; (80100c8 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 8010050:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8010054:	2b00      	cmp	r3, #0
 8010056:	d016      	beq.n	8010086 <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 8010058:	88fb      	ldrh	r3, [r7, #6]
 801005a:	4a1b      	ldr	r2, [pc, #108]	; (80100c8 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 801005c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8010060:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8010062:	68bb      	ldr	r3, [r7, #8]
 8010064:	681b      	ldr	r3, [r3, #0]
 8010066:	68ba      	ldr	r2, [r7, #8]
 8010068:	4413      	add	r3, r2
 801006a:	4a18      	ldr	r2, [pc, #96]	; (80100cc <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 801006c:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 801006e:	68bb      	ldr	r3, [r7, #8]
 8010070:	685b      	ldr	r3, [r3, #4]
 8010072:	68ba      	ldr	r2, [r7, #8]
 8010074:	4413      	add	r3, r2
 8010076:	4a16      	ldr	r2, [pc, #88]	; (80100d0 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 8010078:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 801007a:	68bb      	ldr	r3, [r7, #8]
 801007c:	689b      	ldr	r3, [r3, #8]
 801007e:	68ba      	ldr	r2, [r7, #8]
 8010080:	4413      	add	r3, r2
 8010082:	60fb      	str	r3, [r7, #12]
 8010084:	e00a      	b.n	801009c <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 8010086:	4b11      	ldr	r3, [pc, #68]	; (80100cc <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 8010088:	4a12      	ldr	r2, [pc, #72]	; (80100d4 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 801008a:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 801008c:	4a12      	ldr	r2, [pc, #72]	; (80100d8 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 801008e:	4b10      	ldr	r3, [pc, #64]	; (80100d0 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 8010090:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8010092:	88fb      	ldrh	r3, [r7, #6]
 8010094:	4a11      	ldr	r2, [pc, #68]	; (80100dc <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 8010096:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801009a:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 801009c:	68fb      	ldr	r3, [r7, #12]
 801009e:	2b00      	cmp	r3, #0
 80100a0:	d00d      	beq.n	80100be <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 80100a2:	4a0f      	ldr	r2, [pc, #60]	; (80100e0 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 80100a4:	88fb      	ldrh	r3, [r7, #6]
 80100a6:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80100a8:	f000 f83e 	bl	8010128 <_ZN17TypedTextDatabase8getFontsEv>
 80100ac:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80100ae:	f000 f833 	bl	8010118 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 80100b2:	4603      	mov	r3, r0
 80100b4:	461a      	mov	r2, r3
 80100b6:	4621      	mov	r1, r4
 80100b8:	68f8      	ldr	r0, [r7, #12]
 80100ba:	f7ff fea5 	bl	800fe08 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 80100be:	bf00      	nop
 80100c0:	3714      	adds	r7, #20
 80100c2:	46bd      	mov	sp, r7
 80100c4:	bd90      	pop	{r4, r7, pc}
 80100c6:	bf00      	nop
 80100c8:	20000424 	.word	0x20000424
 80100cc:	2000042c 	.word	0x2000042c
 80100d0:	20000430 	.word	0x20000430
 80100d4:	0804ce44 	.word	0x0804ce44
 80100d8:	0804ce00 	.word	0x0804ce00
 80100dc:	0804cef0 	.word	0x0804cef0
 80100e0:	20000428 	.word	0x20000428

080100e4 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 80100e4:	b480      	push	{r7}
 80100e6:	b083      	sub	sp, #12
 80100e8:	af00      	add	r7, sp, #0
 80100ea:	6078      	str	r0, [r7, #4]
 80100ec:	460b      	mov	r3, r1
 80100ee:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80100f0:	4b07      	ldr	r3, [pc, #28]	; (8010110 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 80100f2:	681a      	ldr	r2, [r3, #0]
 80100f4:	4b07      	ldr	r3, [pc, #28]	; (8010114 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 80100f6:	6819      	ldr	r1, [r3, #0]
 80100f8:	887b      	ldrh	r3, [r7, #2]
 80100fa:	009b      	lsls	r3, r3, #2
 80100fc:	440b      	add	r3, r1
 80100fe:	681b      	ldr	r3, [r3, #0]
 8010100:	005b      	lsls	r3, r3, #1
 8010102:	4413      	add	r3, r2
}
 8010104:	4618      	mov	r0, r3
 8010106:	370c      	adds	r7, #12
 8010108:	46bd      	mov	sp, r7
 801010a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801010e:	4770      	bx	lr
 8010110:	2000042c 	.word	0x2000042c
 8010114:	20000430 	.word	0x20000430

08010118 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 8010118:	b480      	push	{r7}
 801011a:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 801011c:	2311      	movs	r3, #17
}
 801011e:	4618      	mov	r0, r3
 8010120:	46bd      	mov	sp, r7
 8010122:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010126:	4770      	bx	lr

08010128 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 8010128:	b480      	push	{r7}
 801012a:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 801012c:	4b02      	ldr	r3, [pc, #8]	; (8010138 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 801012e:	4618      	mov	r0, r3
 8010130:	46bd      	mov	sp, r7
 8010132:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010136:	4770      	bx	lr
 8010138:	20000434 	.word	0x20000434

0801013c <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 801013c:	b580      	push	{r7, lr}
 801013e:	b082      	sub	sp, #8
 8010140:	af00      	add	r7, sp, #0
 8010142:	6078      	str	r0, [r7, #4]
 8010144:	6039      	str	r1, [r7, #0]
 8010146:	687b      	ldr	r3, [r7, #4]
 8010148:	2b01      	cmp	r3, #1
 801014a:	d113      	bne.n	8010174 <_Z41__static_initialization_and_destruction_0ii+0x38>
 801014c:	683b      	ldr	r3, [r7, #0]
 801014e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010152:	4293      	cmp	r3, r2
 8010154:	d10e      	bne.n	8010174 <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 8010156:	f7f9 fcd7 	bl	8009b08 <_Z23getFont_verdana_20_4bppv>
 801015a:	4603      	mov	r3, r0
};
 801015c:	4a07      	ldr	r2, [pc, #28]	; (801017c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 801015e:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 8010160:	f7f9 fd2c 	bl	8009bbc <_Z23getFont_verdana_40_4bppv>
 8010164:	4603      	mov	r3, r0
};
 8010166:	4a05      	ldr	r2, [pc, #20]	; (801017c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8010168:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp())
 801016a:	f7f9 fc73 	bl	8009a54 <_Z23getFont_verdana_10_4bppv>
 801016e:	4603      	mov	r3, r0
};
 8010170:	4a02      	ldr	r2, [pc, #8]	; (801017c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8010172:	6093      	str	r3, [r2, #8]
} // namespace TypedTextDatabase
 8010174:	bf00      	nop
 8010176:	3708      	adds	r7, #8
 8010178:	46bd      	mov	sp, r7
 801017a:	bd80      	pop	{r7, pc}
 801017c:	20000434 	.word	0x20000434

08010180 <_GLOBAL__sub_I_touchgfx_fonts>:
 8010180:	b580      	push	{r7, lr}
 8010182:	af00      	add	r7, sp, #0
 8010184:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8010188:	2001      	movs	r0, #1
 801018a:	f7ff ffd7 	bl	801013c <_Z41__static_initialization_and_destruction_0ii>
 801018e:	bd80      	pop	{r7, pc}

08010190 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 8010190:	b480      	push	{r7}
 8010192:	b083      	sub	sp, #12
 8010194:	af00      	add	r7, sp, #0
 8010196:	6078      	str	r0, [r7, #4]
    {
    }
 8010198:	bf00      	nop
 801019a:	370c      	adds	r7, #12
 801019c:	46bd      	mov	sp, r7
 801019e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101a2:	4770      	bx	lr

080101a4 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 80101a4:	b480      	push	{r7}
 80101a6:	b083      	sub	sp, #12
 80101a8:	af00      	add	r7, sp, #0
 80101aa:	6078      	str	r0, [r7, #4]
    {
    }
 80101ac:	bf00      	nop
 80101ae:	370c      	adds	r7, #12
 80101b0:	46bd      	mov	sp, r7
 80101b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101b6:	4770      	bx	lr

080101b8 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 80101b8:	b480      	push	{r7}
 80101ba:	b083      	sub	sp, #12
 80101bc:	af00      	add	r7, sp, #0
 80101be:	6078      	str	r0, [r7, #4]
    {
 80101c0:	4a04      	ldr	r2, [pc, #16]	; (80101d4 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 80101c2:	687b      	ldr	r3, [r7, #4]
 80101c4:	601a      	str	r2, [r3, #0]
    }
 80101c6:	687b      	ldr	r3, [r7, #4]
 80101c8:	4618      	mov	r0, r3
 80101ca:	370c      	adds	r7, #12
 80101cc:	46bd      	mov	sp, r7
 80101ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101d2:	4770      	bx	lr
 80101d4:	0802e724 	.word	0x0802e724

080101d8 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 80101d8:	b580      	push	{r7, lr}
 80101da:	b082      	sub	sp, #8
 80101dc:	af00      	add	r7, sp, #0
 80101de:	6078      	str	r0, [r7, #4]
    }
 80101e0:	6878      	ldr	r0, [r7, #4]
 80101e2:	f7ff ffe9 	bl	80101b8 <_ZN8touchgfx9PresenterD1Ev>
 80101e6:	2104      	movs	r1, #4
 80101e8:	6878      	ldr	r0, [r7, #4]
 80101ea:	f01a faf8 	bl	802a7de <_ZdlPvj>
 80101ee:	687b      	ldr	r3, [r7, #4]
 80101f0:	4618      	mov	r0, r3
 80101f2:	3708      	adds	r7, #8
 80101f4:	46bd      	mov	sp, r7
 80101f6:	bd80      	pop	{r7, pc}

080101f8 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 80101f8:	b480      	push	{r7}
 80101fa:	b083      	sub	sp, #12
 80101fc:	af00      	add	r7, sp, #0
 80101fe:	6078      	str	r0, [r7, #4]
    {
 8010200:	4a04      	ldr	r2, [pc, #16]	; (8010214 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 8010202:	687b      	ldr	r3, [r7, #4]
 8010204:	601a      	str	r2, [r3, #0]
    }
 8010206:	687b      	ldr	r3, [r7, #4]
 8010208:	4618      	mov	r0, r3
 801020a:	370c      	adds	r7, #12
 801020c:	46bd      	mov	sp, r7
 801020e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010212:	4770      	bx	lr
 8010214:	0802e724 	.word	0x0802e724

08010218 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 8010218:	b480      	push	{r7}
 801021a:	b083      	sub	sp, #12
 801021c:	af00      	add	r7, sp, #0
 801021e:	6078      	str	r0, [r7, #4]
 8010220:	4a06      	ldr	r2, [pc, #24]	; (801023c <_ZN13ModelListenerC1Ev+0x24>)
 8010222:	687b      	ldr	r3, [r7, #4]
 8010224:	601a      	str	r2, [r3, #0]
 8010226:	687b      	ldr	r3, [r7, #4]
 8010228:	2200      	movs	r2, #0
 801022a:	605a      	str	r2, [r3, #4]
 801022c:	687b      	ldr	r3, [r7, #4]
 801022e:	4618      	mov	r0, r3
 8010230:	370c      	adds	r7, #12
 8010232:	46bd      	mov	sp, r7
 8010234:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010238:	4770      	bx	lr
 801023a:	bf00      	nop
 801023c:	0802e704 	.word	0x0802e704

08010240 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 8010240:	b480      	push	{r7}
 8010242:	b083      	sub	sp, #12
 8010244:	af00      	add	r7, sp, #0
 8010246:	6078      	str	r0, [r7, #4]
 8010248:	4a04      	ldr	r2, [pc, #16]	; (801025c <_ZN13ModelListenerD1Ev+0x1c>)
 801024a:	687b      	ldr	r3, [r7, #4]
 801024c:	601a      	str	r2, [r3, #0]
 801024e:	687b      	ldr	r3, [r7, #4]
 8010250:	4618      	mov	r0, r3
 8010252:	370c      	adds	r7, #12
 8010254:	46bd      	mov	sp, r7
 8010256:	f85d 7b04 	ldr.w	r7, [sp], #4
 801025a:	4770      	bx	lr
 801025c:	0802e704 	.word	0x0802e704

08010260 <_ZN13ModelListenerD0Ev>:
 8010260:	b580      	push	{r7, lr}
 8010262:	b082      	sub	sp, #8
 8010264:	af00      	add	r7, sp, #0
 8010266:	6078      	str	r0, [r7, #4]
 8010268:	6878      	ldr	r0, [r7, #4]
 801026a:	f7ff ffe9 	bl	8010240 <_ZN13ModelListenerD1Ev>
 801026e:	2108      	movs	r1, #8
 8010270:	6878      	ldr	r0, [r7, #4]
 8010272:	f01a fab4 	bl	802a7de <_ZdlPvj>
 8010276:	687b      	ldr	r3, [r7, #4]
 8010278:	4618      	mov	r0, r3
 801027a:	3708      	adds	r7, #8
 801027c:	46bd      	mov	sp, r7
 801027e:	bd80      	pop	{r7, pc}

08010280 <_ZN13ModelListener11setPressureEi>:
    virtual void setPressure(int Val){};
 8010280:	b480      	push	{r7}
 8010282:	b083      	sub	sp, #12
 8010284:	af00      	add	r7, sp, #0
 8010286:	6078      	str	r0, [r7, #4]
 8010288:	6039      	str	r1, [r7, #0]
 801028a:	bf00      	nop
 801028c:	370c      	adds	r7, #12
 801028e:	46bd      	mov	sp, r7
 8010290:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010294:	4770      	bx	lr

08010296 <_ZN13ModelListener14setTemperatureEi>:
    virtual void setTemperature(int Temperature_Val){};
 8010296:	b480      	push	{r7}
 8010298:	b083      	sub	sp, #12
 801029a:	af00      	add	r7, sp, #0
 801029c:	6078      	str	r0, [r7, #4]
 801029e:	6039      	str	r1, [r7, #0]
 80102a0:	bf00      	nop
 80102a2:	370c      	adds	r7, #12
 80102a4:	46bd      	mov	sp, r7
 80102a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80102aa:	4770      	bx	lr

080102ac <_ZN13ModelListener5setCOEi>:
    virtual void setCO(int Val){};
 80102ac:	b480      	push	{r7}
 80102ae:	b083      	sub	sp, #12
 80102b0:	af00      	add	r7, sp, #0
 80102b2:	6078      	str	r0, [r7, #4]
 80102b4:	6039      	str	r1, [r7, #0]
 80102b6:	bf00      	nop
 80102b8:	370c      	adds	r7, #12
 80102ba:	46bd      	mov	sp, r7
 80102bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80102c0:	4770      	bx	lr

080102c2 <_ZN13ModelListener10updateTimeEccc>:
    virtual void updateTime(char Hour,char Minute,char Second){};
 80102c2:	b480      	push	{r7}
 80102c4:	b083      	sub	sp, #12
 80102c6:	af00      	add	r7, sp, #0
 80102c8:	6078      	str	r0, [r7, #4]
 80102ca:	4608      	mov	r0, r1
 80102cc:	4611      	mov	r1, r2
 80102ce:	461a      	mov	r2, r3
 80102d0:	4603      	mov	r3, r0
 80102d2:	70fb      	strb	r3, [r7, #3]
 80102d4:	460b      	mov	r3, r1
 80102d6:	70bb      	strb	r3, [r7, #2]
 80102d8:	4613      	mov	r3, r2
 80102da:	707b      	strb	r3, [r7, #1]
 80102dc:	bf00      	nop
 80102de:	370c      	adds	r7, #12
 80102e0:	46bd      	mov	sp, r7
 80102e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80102e6:	4770      	bx	lr

080102e8 <_ZN20ClockScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ClockScreenPresenter() {}
 80102e8:	b580      	push	{r7, lr}
 80102ea:	b082      	sub	sp, #8
 80102ec:	af00      	add	r7, sp, #0
 80102ee:	6078      	str	r0, [r7, #4]
 80102f0:	4a09      	ldr	r2, [pc, #36]	; (8010318 <_ZN20ClockScreenPresenterD1Ev+0x30>)
 80102f2:	687b      	ldr	r3, [r7, #4]
 80102f4:	601a      	str	r2, [r3, #0]
 80102f6:	4a09      	ldr	r2, [pc, #36]	; (801031c <_ZN20ClockScreenPresenterD1Ev+0x34>)
 80102f8:	687b      	ldr	r3, [r7, #4]
 80102fa:	605a      	str	r2, [r3, #4]
 80102fc:	687b      	ldr	r3, [r7, #4]
 80102fe:	3304      	adds	r3, #4
 8010300:	4618      	mov	r0, r3
 8010302:	f7ff ff9d 	bl	8010240 <_ZN13ModelListenerD1Ev>
 8010306:	687b      	ldr	r3, [r7, #4]
 8010308:	4618      	mov	r0, r3
 801030a:	f7ff ff55 	bl	80101b8 <_ZN8touchgfx9PresenterD1Ev>
 801030e:	687b      	ldr	r3, [r7, #4]
 8010310:	4618      	mov	r0, r3
 8010312:	3708      	adds	r7, #8
 8010314:	46bd      	mov	sp, r7
 8010316:	bd80      	pop	{r7, pc}
 8010318:	0802e6c8 	.word	0x0802e6c8
 801031c:	0802e6e4 	.word	0x0802e6e4

08010320 <_ZThn4_N20ClockScreenPresenterD1Ev>:
 8010320:	f1a0 0004 	sub.w	r0, r0, #4
 8010324:	e7e0      	b.n	80102e8 <_ZN20ClockScreenPresenterD1Ev>
 8010326:	bf00      	nop

08010328 <_ZN20ClockScreenPresenterD0Ev>:
 8010328:	b580      	push	{r7, lr}
 801032a:	b082      	sub	sp, #8
 801032c:	af00      	add	r7, sp, #0
 801032e:	6078      	str	r0, [r7, #4]
 8010330:	6878      	ldr	r0, [r7, #4]
 8010332:	f7ff ffd9 	bl	80102e8 <_ZN20ClockScreenPresenterD1Ev>
 8010336:	2110      	movs	r1, #16
 8010338:	6878      	ldr	r0, [r7, #4]
 801033a:	f01a fa50 	bl	802a7de <_ZdlPvj>
 801033e:	687b      	ldr	r3, [r7, #4]
 8010340:	4618      	mov	r0, r3
 8010342:	3708      	adds	r7, #8
 8010344:	46bd      	mov	sp, r7
 8010346:	bd80      	pop	{r7, pc}

08010348 <_ZThn4_N20ClockScreenPresenterD0Ev>:
 8010348:	f1a0 0004 	sub.w	r0, r0, #4
 801034c:	e7ec      	b.n	8010328 <_ZN20ClockScreenPresenterD0Ev>
	...

08010350 <_ZN20ClockScreenPresenterC1ER15ClockScreenView>:
#include <gui/clockscreen_screen/ClockScreenView.hpp>
#include <gui/clockscreen_screen/ClockScreenPresenter.hpp>

ClockScreenPresenter::ClockScreenPresenter(ClockScreenView& v)
 8010350:	b580      	push	{r7, lr}
 8010352:	b082      	sub	sp, #8
 8010354:	af00      	add	r7, sp, #0
 8010356:	6078      	str	r0, [r7, #4]
 8010358:	6039      	str	r1, [r7, #0]
    : view(v)
 801035a:	687b      	ldr	r3, [r7, #4]
 801035c:	4618      	mov	r0, r3
 801035e:	f7ff ff4b 	bl	80101f8 <_ZN8touchgfx9PresenterC1Ev>
 8010362:	687b      	ldr	r3, [r7, #4]
 8010364:	3304      	adds	r3, #4
 8010366:	4618      	mov	r0, r3
 8010368:	f7ff ff56 	bl	8010218 <_ZN13ModelListenerC1Ev>
 801036c:	4a06      	ldr	r2, [pc, #24]	; (8010388 <_ZN20ClockScreenPresenterC1ER15ClockScreenView+0x38>)
 801036e:	687b      	ldr	r3, [r7, #4]
 8010370:	601a      	str	r2, [r3, #0]
 8010372:	4a06      	ldr	r2, [pc, #24]	; (801038c <_ZN20ClockScreenPresenterC1ER15ClockScreenView+0x3c>)
 8010374:	687b      	ldr	r3, [r7, #4]
 8010376:	605a      	str	r2, [r3, #4]
 8010378:	687b      	ldr	r3, [r7, #4]
 801037a:	683a      	ldr	r2, [r7, #0]
 801037c:	60da      	str	r2, [r3, #12]
{

}
 801037e:	687b      	ldr	r3, [r7, #4]
 8010380:	4618      	mov	r0, r3
 8010382:	3708      	adds	r7, #8
 8010384:	46bd      	mov	sp, r7
 8010386:	bd80      	pop	{r7, pc}
 8010388:	0802e6c8 	.word	0x0802e6c8
 801038c:	0802e6e4 	.word	0x0802e6e4

08010390 <_ZN20ClockScreenPresenter8activateEv>:

void ClockScreenPresenter::activate()
{
 8010390:	b480      	push	{r7}
 8010392:	b083      	sub	sp, #12
 8010394:	af00      	add	r7, sp, #0
 8010396:	6078      	str	r0, [r7, #4]

}
 8010398:	bf00      	nop
 801039a:	370c      	adds	r7, #12
 801039c:	46bd      	mov	sp, r7
 801039e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80103a2:	4770      	bx	lr

080103a4 <_ZN20ClockScreenPresenter10deactivateEv>:

void ClockScreenPresenter::deactivate()
{
 80103a4:	b480      	push	{r7}
 80103a6:	b083      	sub	sp, #12
 80103a8:	af00      	add	r7, sp, #0
 80103aa:	6078      	str	r0, [r7, #4]

}
 80103ac:	bf00      	nop
 80103ae:	370c      	adds	r7, #12
 80103b0:	46bd      	mov	sp, r7
 80103b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80103b6:	4770      	bx	lr

080103b8 <_ZN20ClockScreenPresenter10updateTimeEccc>:
void ClockScreenPresenter::updateTime(char Hour,char Minute,char Second)
{
 80103b8:	b590      	push	{r4, r7, lr}
 80103ba:	b083      	sub	sp, #12
 80103bc:	af00      	add	r7, sp, #0
 80103be:	6078      	str	r0, [r7, #4]
 80103c0:	4608      	mov	r0, r1
 80103c2:	4611      	mov	r1, r2
 80103c4:	461a      	mov	r2, r3
 80103c6:	4603      	mov	r3, r0
 80103c8:	70fb      	strb	r3, [r7, #3]
 80103ca:	460b      	mov	r3, r1
 80103cc:	70bb      	strb	r3, [r7, #2]
 80103ce:	4613      	mov	r3, r2
 80103d0:	707b      	strb	r3, [r7, #1]
	view.updateTime(Hour,Minute,Second);
 80103d2:	687b      	ldr	r3, [r7, #4]
 80103d4:	68d8      	ldr	r0, [r3, #12]
 80103d6:	687b      	ldr	r3, [r7, #4]
 80103d8:	68db      	ldr	r3, [r3, #12]
 80103da:	681b      	ldr	r3, [r3, #0]
 80103dc:	332c      	adds	r3, #44	; 0x2c
 80103de:	681c      	ldr	r4, [r3, #0]
 80103e0:	787b      	ldrb	r3, [r7, #1]
 80103e2:	78ba      	ldrb	r2, [r7, #2]
 80103e4:	78f9      	ldrb	r1, [r7, #3]
 80103e6:	47a0      	blx	r4
}
 80103e8:	bf00      	nop
 80103ea:	370c      	adds	r7, #12
 80103ec:	46bd      	mov	sp, r7
 80103ee:	bd90      	pop	{r4, r7, pc}

080103f0 <_ZThn4_N20ClockScreenPresenter10updateTimeEccc>:
    virtual void updateTime(char Hour,char Minute,char Second);
 80103f0:	f1a0 0004 	sub.w	r0, r0, #4
 80103f4:	f7ff bfe0 	b.w	80103b8 <_ZN20ClockScreenPresenter10updateTimeEccc>

080103f8 <_ZN15ClockScreenViewD1Ev>:

class ClockScreenView : public ClockScreenViewBase
{
public:
    ClockScreenView();
    virtual ~ClockScreenView() {}
 80103f8:	b580      	push	{r7, lr}
 80103fa:	b082      	sub	sp, #8
 80103fc:	af00      	add	r7, sp, #0
 80103fe:	6078      	str	r0, [r7, #4]
 8010400:	4a05      	ldr	r2, [pc, #20]	; (8010418 <_ZN15ClockScreenViewD1Ev+0x20>)
 8010402:	687b      	ldr	r3, [r7, #4]
 8010404:	601a      	str	r2, [r3, #0]
 8010406:	687b      	ldr	r3, [r7, #4]
 8010408:	4618      	mov	r0, r3
 801040a:	f7fa faef 	bl	800a9ec <_ZN19ClockScreenViewBaseD1Ev>
 801040e:	687b      	ldr	r3, [r7, #4]
 8010410:	4618      	mov	r0, r3
 8010412:	3708      	adds	r7, #8
 8010414:	46bd      	mov	sp, r7
 8010416:	bd80      	pop	{r7, pc}
 8010418:	0802e73c 	.word	0x0802e73c

0801041c <_ZN15ClockScreenViewD0Ev>:
 801041c:	b580      	push	{r7, lr}
 801041e:	b082      	sub	sp, #8
 8010420:	af00      	add	r7, sp, #0
 8010422:	6078      	str	r0, [r7, #4]
 8010424:	6878      	ldr	r0, [r7, #4]
 8010426:	f7ff ffe7 	bl	80103f8 <_ZN15ClockScreenViewD1Ev>
 801042a:	f44f 71cc 	mov.w	r1, #408	; 0x198
 801042e:	6878      	ldr	r0, [r7, #4]
 8010430:	f01a f9d5 	bl	802a7de <_ZdlPvj>
 8010434:	687b      	ldr	r3, [r7, #4]
 8010436:	4618      	mov	r0, r3
 8010438:	3708      	adds	r7, #8
 801043a:	46bd      	mov	sp, r7
 801043c:	bd80      	pop	{r7, pc}
	...

08010440 <_ZN15ClockScreenViewC1Ev>:
#include <gui/clockscreen_screen/ClockScreenView.hpp>

ClockScreenView::ClockScreenView()
 8010440:	b580      	push	{r7, lr}
 8010442:	b082      	sub	sp, #8
 8010444:	af00      	add	r7, sp, #0
 8010446:	6078      	str	r0, [r7, #4]
 8010448:	687b      	ldr	r3, [r7, #4]
 801044a:	4618      	mov	r0, r3
 801044c:	f7fa f958 	bl	800a700 <_ZN19ClockScreenViewBaseC1Ev>
 8010450:	4a03      	ldr	r2, [pc, #12]	; (8010460 <_ZN15ClockScreenViewC1Ev+0x20>)
 8010452:	687b      	ldr	r3, [r7, #4]
 8010454:	601a      	str	r2, [r3, #0]
{

}
 8010456:	687b      	ldr	r3, [r7, #4]
 8010458:	4618      	mov	r0, r3
 801045a:	3708      	adds	r7, #8
 801045c:	46bd      	mov	sp, r7
 801045e:	bd80      	pop	{r7, pc}
 8010460:	0802e73c 	.word	0x0802e73c

08010464 <_ZN15ClockScreenView11setupScreenEv>:

void ClockScreenView::setupScreen()
{
 8010464:	b580      	push	{r7, lr}
 8010466:	b082      	sub	sp, #8
 8010468:	af00      	add	r7, sp, #0
 801046a:	6078      	str	r0, [r7, #4]
    ClockScreenViewBase::setupScreen();
 801046c:	687b      	ldr	r3, [r7, #4]
 801046e:	4618      	mov	r0, r3
 8010470:	f7fa fafb 	bl	800aa6a <_ZN19ClockScreenViewBase11setupScreenEv>
}
 8010474:	bf00      	nop
 8010476:	3708      	adds	r7, #8
 8010478:	46bd      	mov	sp, r7
 801047a:	bd80      	pop	{r7, pc}

0801047c <_ZN15ClockScreenView14tearDownScreenEv>:

void ClockScreenView::tearDownScreen()
{
 801047c:	b580      	push	{r7, lr}
 801047e:	b082      	sub	sp, #8
 8010480:	af00      	add	r7, sp, #0
 8010482:	6078      	str	r0, [r7, #4]
    ClockScreenViewBase::tearDownScreen();
 8010484:	687b      	ldr	r3, [r7, #4]
 8010486:	4618      	mov	r0, r3
 8010488:	f7f9 fe1c 	bl	800a0c4 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 801048c:	bf00      	nop
 801048e:	3708      	adds	r7, #8
 8010490:	46bd      	mov	sp, r7
 8010492:	bd80      	pop	{r7, pc}

08010494 <_ZN15ClockScreenView10updateTimeEccc>:

void ClockScreenView::updateTime(char Hour, char Minute, char Second)
{
 8010494:	b580      	push	{r7, lr}
 8010496:	b082      	sub	sp, #8
 8010498:	af00      	add	r7, sp, #0
 801049a:	6078      	str	r0, [r7, #4]
 801049c:	4608      	mov	r0, r1
 801049e:	4611      	mov	r1, r2
 80104a0:	461a      	mov	r2, r3
 80104a2:	4603      	mov	r3, r0
 80104a4:	70fb      	strb	r3, [r7, #3]
 80104a6:	460b      	mov	r3, r1
 80104a8:	70bb      	strb	r3, [r7, #2]
 80104aa:	4613      	mov	r3, r2
 80104ac:	707b      	strb	r3, [r7, #1]
	Clock.setTime24Hour(Hour, Minute, Second);
 80104ae:	687b      	ldr	r3, [r7, #4]
 80104b0:	f103 00b4 	add.w	r0, r3, #180	; 0xb4
 80104b4:	787b      	ldrb	r3, [r7, #1]
 80104b6:	78ba      	ldrb	r2, [r7, #2]
 80104b8:	78f9      	ldrb	r1, [r7, #3]
 80104ba:	f002 fd4a 	bl	8012f52 <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>
}
 80104be:	bf00      	nop
 80104c0:	3708      	adds	r7, #8
 80104c2:	46bd      	mov	sp, r7
 80104c4:	bd80      	pop	{r7, pc}
	...

080104c8 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80104c8:	b580      	push	{r7, lr}
 80104ca:	b082      	sub	sp, #8
 80104cc:	af00      	add	r7, sp, #0
 80104ce:	6078      	str	r0, [r7, #4]
 80104d0:	4a05      	ldr	r2, [pc, #20]	; (80104e8 <_ZN19FrontendApplicationD1Ev+0x20>)
 80104d2:	687b      	ldr	r3, [r7, #4]
 80104d4:	601a      	str	r2, [r3, #0]
 80104d6:	687b      	ldr	r3, [r7, #4]
 80104d8:	4618      	mov	r0, r3
 80104da:	f7fa fecf 	bl	800b27c <_ZN23FrontendApplicationBaseD1Ev>
 80104de:	687b      	ldr	r3, [r7, #4]
 80104e0:	4618      	mov	r0, r3
 80104e2:	3708      	adds	r7, #8
 80104e4:	46bd      	mov	sp, r7
 80104e6:	bd80      	pop	{r7, pc}
 80104e8:	0802e774 	.word	0x0802e774

080104ec <_ZN19FrontendApplicationD0Ev>:
 80104ec:	b580      	push	{r7, lr}
 80104ee:	b082      	sub	sp, #8
 80104f0:	af00      	add	r7, sp, #0
 80104f2:	6078      	str	r0, [r7, #4]
 80104f4:	6878      	ldr	r0, [r7, #4]
 80104f6:	f7ff ffe7 	bl	80104c8 <_ZN19FrontendApplicationD1Ev>
 80104fa:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80104fe:	6878      	ldr	r0, [r7, #4]
 8010500:	f01a f96d 	bl	802a7de <_ZdlPvj>
 8010504:	687b      	ldr	r3, [r7, #4]
 8010506:	4618      	mov	r0, r3
 8010508:	3708      	adds	r7, #8
 801050a:	46bd      	mov	sp, r7
 801050c:	bd80      	pop	{r7, pc}

0801050e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 801050e:	b580      	push	{r7, lr}
 8010510:	b082      	sub	sp, #8
 8010512:	af00      	add	r7, sp, #0
 8010514:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 8010516:	687b      	ldr	r3, [r7, #4]
 8010518:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 801051c:	4618      	mov	r0, r3
 801051e:	f000 f9e9 	bl	80108f4 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8010522:	687b      	ldr	r3, [r7, #4]
 8010524:	4618      	mov	r0, r3
 8010526:	f008 ff99 	bl	801945c <_ZN8touchgfx11Application15handleTickEventEv>
    }
 801052a:	bf00      	nop
 801052c:	3708      	adds	r7, #8
 801052e:	46bd      	mov	sp, r7
 8010530:	bd80      	pop	{r7, pc}
	...

08010534 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8010534:	b580      	push	{r7, lr}
 8010536:	b084      	sub	sp, #16
 8010538:	af00      	add	r7, sp, #0
 801053a:	60f8      	str	r0, [r7, #12]
 801053c:	60b9      	str	r1, [r7, #8]
 801053e:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 8010540:	68fb      	ldr	r3, [r7, #12]
 8010542:	687a      	ldr	r2, [r7, #4]
 8010544:	68b9      	ldr	r1, [r7, #8]
 8010546:	4618      	mov	r0, r3
 8010548:	f7fa fee8 	bl	800b31c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 801054c:	4a03      	ldr	r2, [pc, #12]	; (801055c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 801054e:	68fb      	ldr	r3, [r7, #12]
 8010550:	601a      	str	r2, [r3, #0]
{

}
 8010552:	68fb      	ldr	r3, [r7, #12]
 8010554:	4618      	mov	r0, r3
 8010556:	3710      	adds	r7, #16
 8010558:	46bd      	mov	sp, r7
 801055a:	bd80      	pop	{r7, pc}
 801055c:	0802e774 	.word	0x0802e774

08010560 <_ZN17COScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~COScreenPresenter() {}
 8010560:	b580      	push	{r7, lr}
 8010562:	b082      	sub	sp, #8
 8010564:	af00      	add	r7, sp, #0
 8010566:	6078      	str	r0, [r7, #4]
 8010568:	4a09      	ldr	r2, [pc, #36]	; (8010590 <_ZN17COScreenPresenterD1Ev+0x30>)
 801056a:	687b      	ldr	r3, [r7, #4]
 801056c:	601a      	str	r2, [r3, #0]
 801056e:	4a09      	ldr	r2, [pc, #36]	; (8010594 <_ZN17COScreenPresenterD1Ev+0x34>)
 8010570:	687b      	ldr	r3, [r7, #4]
 8010572:	605a      	str	r2, [r3, #4]
 8010574:	687b      	ldr	r3, [r7, #4]
 8010576:	3304      	adds	r3, #4
 8010578:	4618      	mov	r0, r3
 801057a:	f7ff fe61 	bl	8010240 <_ZN13ModelListenerD1Ev>
 801057e:	687b      	ldr	r3, [r7, #4]
 8010580:	4618      	mov	r0, r3
 8010582:	f7ff fe19 	bl	80101b8 <_ZN8touchgfx9PresenterD1Ev>
 8010586:	687b      	ldr	r3, [r7, #4]
 8010588:	4618      	mov	r0, r3
 801058a:	3708      	adds	r7, #8
 801058c:	46bd      	mov	sp, r7
 801058e:	bd80      	pop	{r7, pc}
 8010590:	0802e7c8 	.word	0x0802e7c8
 8010594:	0802e7e4 	.word	0x0802e7e4

08010598 <_ZThn4_N17COScreenPresenterD1Ev>:
 8010598:	f1a0 0004 	sub.w	r0, r0, #4
 801059c:	e7e0      	b.n	8010560 <_ZN17COScreenPresenterD1Ev>
 801059e:	bf00      	nop

080105a0 <_ZN17COScreenPresenterD0Ev>:
 80105a0:	b580      	push	{r7, lr}
 80105a2:	b082      	sub	sp, #8
 80105a4:	af00      	add	r7, sp, #0
 80105a6:	6078      	str	r0, [r7, #4]
 80105a8:	6878      	ldr	r0, [r7, #4]
 80105aa:	f7ff ffd9 	bl	8010560 <_ZN17COScreenPresenterD1Ev>
 80105ae:	2110      	movs	r1, #16
 80105b0:	6878      	ldr	r0, [r7, #4]
 80105b2:	f01a f914 	bl	802a7de <_ZdlPvj>
 80105b6:	687b      	ldr	r3, [r7, #4]
 80105b8:	4618      	mov	r0, r3
 80105ba:	3708      	adds	r7, #8
 80105bc:	46bd      	mov	sp, r7
 80105be:	bd80      	pop	{r7, pc}

080105c0 <_ZThn4_N17COScreenPresenterD0Ev>:
 80105c0:	f1a0 0004 	sub.w	r0, r0, #4
 80105c4:	e7ec      	b.n	80105a0 <_ZN17COScreenPresenterD0Ev>
	...

080105c8 <_ZN17COScreenPresenterC1ER12COScreenView>:
#include <gui/coscreen_screen/COScreenView.hpp>
#include <gui/coscreen_screen/COScreenPresenter.hpp>

COScreenPresenter::COScreenPresenter(COScreenView& v)
 80105c8:	b580      	push	{r7, lr}
 80105ca:	b082      	sub	sp, #8
 80105cc:	af00      	add	r7, sp, #0
 80105ce:	6078      	str	r0, [r7, #4]
 80105d0:	6039      	str	r1, [r7, #0]
    : view(v)
 80105d2:	687b      	ldr	r3, [r7, #4]
 80105d4:	4618      	mov	r0, r3
 80105d6:	f7ff fe0f 	bl	80101f8 <_ZN8touchgfx9PresenterC1Ev>
 80105da:	687b      	ldr	r3, [r7, #4]
 80105dc:	3304      	adds	r3, #4
 80105de:	4618      	mov	r0, r3
 80105e0:	f7ff fe1a 	bl	8010218 <_ZN13ModelListenerC1Ev>
 80105e4:	4a06      	ldr	r2, [pc, #24]	; (8010600 <_ZN17COScreenPresenterC1ER12COScreenView+0x38>)
 80105e6:	687b      	ldr	r3, [r7, #4]
 80105e8:	601a      	str	r2, [r3, #0]
 80105ea:	4a06      	ldr	r2, [pc, #24]	; (8010604 <_ZN17COScreenPresenterC1ER12COScreenView+0x3c>)
 80105ec:	687b      	ldr	r3, [r7, #4]
 80105ee:	605a      	str	r2, [r3, #4]
 80105f0:	687b      	ldr	r3, [r7, #4]
 80105f2:	683a      	ldr	r2, [r7, #0]
 80105f4:	60da      	str	r2, [r3, #12]
{

}
 80105f6:	687b      	ldr	r3, [r7, #4]
 80105f8:	4618      	mov	r0, r3
 80105fa:	3708      	adds	r7, #8
 80105fc:	46bd      	mov	sp, r7
 80105fe:	bd80      	pop	{r7, pc}
 8010600:	0802e7c8 	.word	0x0802e7c8
 8010604:	0802e7e4 	.word	0x0802e7e4

08010608 <_ZN17COScreenPresenter8activateEv>:

void COScreenPresenter::activate()
{
 8010608:	b480      	push	{r7}
 801060a:	b083      	sub	sp, #12
 801060c:	af00      	add	r7, sp, #0
 801060e:	6078      	str	r0, [r7, #4]

}
 8010610:	bf00      	nop
 8010612:	370c      	adds	r7, #12
 8010614:	46bd      	mov	sp, r7
 8010616:	f85d 7b04 	ldr.w	r7, [sp], #4
 801061a:	4770      	bx	lr

0801061c <_ZN17COScreenPresenter10deactivateEv>:

void COScreenPresenter::deactivate()
{
 801061c:	b480      	push	{r7}
 801061e:	b083      	sub	sp, #12
 8010620:	af00      	add	r7, sp, #0
 8010622:	6078      	str	r0, [r7, #4]

}
 8010624:	bf00      	nop
 8010626:	370c      	adds	r7, #12
 8010628:	46bd      	mov	sp, r7
 801062a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801062e:	4770      	bx	lr

08010630 <_ZN17COScreenPresenter5setCOEi>:

void COScreenPresenter::setCO(int Val)
{
 8010630:	b580      	push	{r7, lr}
 8010632:	b082      	sub	sp, #8
 8010634:	af00      	add	r7, sp, #0
 8010636:	6078      	str	r0, [r7, #4]
 8010638:	6039      	str	r1, [r7, #0]
	view.setCO(Val);
 801063a:	687b      	ldr	r3, [r7, #4]
 801063c:	68da      	ldr	r2, [r3, #12]
 801063e:	687b      	ldr	r3, [r7, #4]
 8010640:	68db      	ldr	r3, [r3, #12]
 8010642:	681b      	ldr	r3, [r3, #0]
 8010644:	332c      	adds	r3, #44	; 0x2c
 8010646:	681b      	ldr	r3, [r3, #0]
 8010648:	6839      	ldr	r1, [r7, #0]
 801064a:	4610      	mov	r0, r2
 801064c:	4798      	blx	r3
}
 801064e:	bf00      	nop
 8010650:	3708      	adds	r7, #8
 8010652:	46bd      	mov	sp, r7
 8010654:	bd80      	pop	{r7, pc}

08010656 <_ZThn4_N17COScreenPresenter5setCOEi>:
    virtual void setCO(int Val);
 8010656:	f1a0 0004 	sub.w	r0, r0, #4
 801065a:	f7ff bfe9 	b.w	8010630 <_ZN17COScreenPresenter5setCOEi>
	...

08010660 <_ZN12COScreenViewD1Ev>:

class COScreenView : public COScreenViewBase
{
public:
    COScreenView();
    virtual ~COScreenView() {}
 8010660:	b580      	push	{r7, lr}
 8010662:	b082      	sub	sp, #8
 8010664:	af00      	add	r7, sp, #0
 8010666:	6078      	str	r0, [r7, #4]
 8010668:	4a05      	ldr	r2, [pc, #20]	; (8010680 <_ZN12COScreenViewD1Ev+0x20>)
 801066a:	687b      	ldr	r3, [r7, #4]
 801066c:	601a      	str	r2, [r3, #0]
 801066e:	687b      	ldr	r3, [r7, #4]
 8010670:	4618      	mov	r0, r3
 8010672:	f7fc fe9f 	bl	800d3b4 <_ZN16COScreenViewBaseD1Ev>
 8010676:	687b      	ldr	r3, [r7, #4]
 8010678:	4618      	mov	r0, r3
 801067a:	3708      	adds	r7, #8
 801067c:	46bd      	mov	sp, r7
 801067e:	bd80      	pop	{r7, pc}
 8010680:	0802e804 	.word	0x0802e804

08010684 <_ZN12COScreenViewD0Ev>:
 8010684:	b580      	push	{r7, lr}
 8010686:	b082      	sub	sp, #8
 8010688:	af00      	add	r7, sp, #0
 801068a:	6078      	str	r0, [r7, #4]
 801068c:	6878      	ldr	r0, [r7, #4]
 801068e:	f7ff ffe7 	bl	8010660 <_ZN12COScreenViewD1Ev>
 8010692:	f44f 713d 	mov.w	r1, #756	; 0x2f4
 8010696:	6878      	ldr	r0, [r7, #4]
 8010698:	f01a f8a1 	bl	802a7de <_ZdlPvj>
 801069c:	687b      	ldr	r3, [r7, #4]
 801069e:	4618      	mov	r0, r3
 80106a0:	3708      	adds	r7, #8
 80106a2:	46bd      	mov	sp, r7
 80106a4:	bd80      	pop	{r7, pc}
	...

080106a8 <_ZN12COScreenViewC1Ev>:
#include <gui/coscreen_screen/COScreenView.hpp>

COScreenView::COScreenView()
 80106a8:	b580      	push	{r7, lr}
 80106aa:	b082      	sub	sp, #8
 80106ac:	af00      	add	r7, sp, #0
 80106ae:	6078      	str	r0, [r7, #4]
 80106b0:	687b      	ldr	r3, [r7, #4]
 80106b2:	4618      	mov	r0, r3
 80106b4:	f7fc fc4c 	bl	800cf50 <_ZN16COScreenViewBaseC1Ev>
 80106b8:	4a03      	ldr	r2, [pc, #12]	; (80106c8 <_ZN12COScreenViewC1Ev+0x20>)
 80106ba:	687b      	ldr	r3, [r7, #4]
 80106bc:	601a      	str	r2, [r3, #0]
{

}
 80106be:	687b      	ldr	r3, [r7, #4]
 80106c0:	4618      	mov	r0, r3
 80106c2:	3708      	adds	r7, #8
 80106c4:	46bd      	mov	sp, r7
 80106c6:	bd80      	pop	{r7, pc}
 80106c8:	0802e804 	.word	0x0802e804

080106cc <_ZN12COScreenView11setupScreenEv>:

void COScreenView::setupScreen()
{
 80106cc:	b580      	push	{r7, lr}
 80106ce:	b082      	sub	sp, #8
 80106d0:	af00      	add	r7, sp, #0
 80106d2:	6078      	str	r0, [r7, #4]
    COScreenViewBase::setupScreen();
 80106d4:	687b      	ldr	r3, [r7, #4]
 80106d6:	4618      	mov	r0, r3
 80106d8:	f7fc feaf 	bl	800d43a <_ZN16COScreenViewBase11setupScreenEv>
}
 80106dc:	bf00      	nop
 80106de:	3708      	adds	r7, #8
 80106e0:	46bd      	mov	sp, r7
 80106e2:	bd80      	pop	{r7, pc}

080106e4 <_ZN12COScreenView14tearDownScreenEv>:

void COScreenView::tearDownScreen()
{
 80106e4:	b580      	push	{r7, lr}
 80106e6:	b082      	sub	sp, #8
 80106e8:	af00      	add	r7, sp, #0
 80106ea:	6078      	str	r0, [r7, #4]
    COScreenViewBase::tearDownScreen();
 80106ec:	687b      	ldr	r3, [r7, #4]
 80106ee:	4618      	mov	r0, r3
 80106f0:	f7f9 fce8 	bl	800a0c4 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 80106f4:	bf00      	nop
 80106f6:	3708      	adds	r7, #8
 80106f8:	46bd      	mov	sp, r7
 80106fa:	bd80      	pop	{r7, pc}

080106fc <_ZN12COScreenView5setCOEi>:

void COScreenView::setCO(int Val)
{
 80106fc:	b580      	push	{r7, lr}
 80106fe:	b082      	sub	sp, #8
 8010700:	af00      	add	r7, sp, #0
 8010702:	6078      	str	r0, [r7, #4]
 8010704:	6039      	str	r1, [r7, #0]
	Unicode::snprintf(CODataBuffer, CODATA_SIZE, "%d",Val);
 8010706:	687b      	ldr	r3, [r7, #4]
 8010708:	f503 7037 	add.w	r0, r3, #732	; 0x2dc
 801070c:	683b      	ldr	r3, [r7, #0]
 801070e:	4a0a      	ldr	r2, [pc, #40]	; (8010738 <_ZN12COScreenView5setCOEi+0x3c>)
 8010710:	2104      	movs	r1, #4
 8010712:	f00c f84f 	bl	801c7b4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	COGauge.updateValue(Val, 30); // animates needle and arc to new value with a duration of 30 ticks
 8010716:	687b      	ldr	r3, [r7, #4]
 8010718:	33f4      	adds	r3, #244	; 0xf4
 801071a:	221e      	movs	r2, #30
 801071c:	6839      	ldr	r1, [r7, #0]
 801071e:	4618      	mov	r0, r3
 8010720:	f002 f97d 	bl	8012a1e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>
	COGauge.invalidate();
 8010724:	687b      	ldr	r3, [r7, #4]
 8010726:	33f4      	adds	r3, #244	; 0xf4
 8010728:	4618      	mov	r0, r3
 801072a:	f009 febb 	bl	801a4a4 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 801072e:	bf00      	nop
 8010730:	3708      	adds	r7, #8
 8010732:	46bd      	mov	sp, r7
 8010734:	bd80      	pop	{r7, pc}
 8010736:	bf00      	nop
 8010738:	0802d47c 	.word	0x0802d47c

0801073c <_ZN19MainScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainScreenPresenter() {}
 801073c:	b580      	push	{r7, lr}
 801073e:	b082      	sub	sp, #8
 8010740:	af00      	add	r7, sp, #0
 8010742:	6078      	str	r0, [r7, #4]
 8010744:	4a09      	ldr	r2, [pc, #36]	; (801076c <_ZN19MainScreenPresenterD1Ev+0x30>)
 8010746:	687b      	ldr	r3, [r7, #4]
 8010748:	601a      	str	r2, [r3, #0]
 801074a:	4a09      	ldr	r2, [pc, #36]	; (8010770 <_ZN19MainScreenPresenterD1Ev+0x34>)
 801074c:	687b      	ldr	r3, [r7, #4]
 801074e:	605a      	str	r2, [r3, #4]
 8010750:	687b      	ldr	r3, [r7, #4]
 8010752:	3304      	adds	r3, #4
 8010754:	4618      	mov	r0, r3
 8010756:	f7ff fd73 	bl	8010240 <_ZN13ModelListenerD1Ev>
 801075a:	687b      	ldr	r3, [r7, #4]
 801075c:	4618      	mov	r0, r3
 801075e:	f7ff fd2b 	bl	80101b8 <_ZN8touchgfx9PresenterD1Ev>
 8010762:	687b      	ldr	r3, [r7, #4]
 8010764:	4618      	mov	r0, r3
 8010766:	3708      	adds	r7, #8
 8010768:	46bd      	mov	sp, r7
 801076a:	bd80      	pop	{r7, pc}
 801076c:	0802e83c 	.word	0x0802e83c
 8010770:	0802e854 	.word	0x0802e854

08010774 <_ZThn4_N19MainScreenPresenterD1Ev>:
 8010774:	f1a0 0004 	sub.w	r0, r0, #4
 8010778:	e7e0      	b.n	801073c <_ZN19MainScreenPresenterD1Ev>
 801077a:	bf00      	nop

0801077c <_ZN19MainScreenPresenterD0Ev>:
 801077c:	b580      	push	{r7, lr}
 801077e:	b082      	sub	sp, #8
 8010780:	af00      	add	r7, sp, #0
 8010782:	6078      	str	r0, [r7, #4]
 8010784:	6878      	ldr	r0, [r7, #4]
 8010786:	f7ff ffd9 	bl	801073c <_ZN19MainScreenPresenterD1Ev>
 801078a:	2110      	movs	r1, #16
 801078c:	6878      	ldr	r0, [r7, #4]
 801078e:	f01a f826 	bl	802a7de <_ZdlPvj>
 8010792:	687b      	ldr	r3, [r7, #4]
 8010794:	4618      	mov	r0, r3
 8010796:	3708      	adds	r7, #8
 8010798:	46bd      	mov	sp, r7
 801079a:	bd80      	pop	{r7, pc}

0801079c <_ZThn4_N19MainScreenPresenterD0Ev>:
 801079c:	f1a0 0004 	sub.w	r0, r0, #4
 80107a0:	e7ec      	b.n	801077c <_ZN19MainScreenPresenterD0Ev>
	...

080107a4 <_ZN19MainScreenPresenterC1ER14MainScreenView>:
#include <gui/mainscreen_screen/MainScreenView.hpp>
#include <gui/mainscreen_screen/MainScreenPresenter.hpp>

MainScreenPresenter::MainScreenPresenter(MainScreenView& v)
 80107a4:	b580      	push	{r7, lr}
 80107a6:	b082      	sub	sp, #8
 80107a8:	af00      	add	r7, sp, #0
 80107aa:	6078      	str	r0, [r7, #4]
 80107ac:	6039      	str	r1, [r7, #0]
    : view(v)
 80107ae:	687b      	ldr	r3, [r7, #4]
 80107b0:	4618      	mov	r0, r3
 80107b2:	f7ff fd21 	bl	80101f8 <_ZN8touchgfx9PresenterC1Ev>
 80107b6:	687b      	ldr	r3, [r7, #4]
 80107b8:	3304      	adds	r3, #4
 80107ba:	4618      	mov	r0, r3
 80107bc:	f7ff fd2c 	bl	8010218 <_ZN13ModelListenerC1Ev>
 80107c0:	4a06      	ldr	r2, [pc, #24]	; (80107dc <_ZN19MainScreenPresenterC1ER14MainScreenView+0x38>)
 80107c2:	687b      	ldr	r3, [r7, #4]
 80107c4:	601a      	str	r2, [r3, #0]
 80107c6:	4a06      	ldr	r2, [pc, #24]	; (80107e0 <_ZN19MainScreenPresenterC1ER14MainScreenView+0x3c>)
 80107c8:	687b      	ldr	r3, [r7, #4]
 80107ca:	605a      	str	r2, [r3, #4]
 80107cc:	687b      	ldr	r3, [r7, #4]
 80107ce:	683a      	ldr	r2, [r7, #0]
 80107d0:	60da      	str	r2, [r3, #12]
{

}
 80107d2:	687b      	ldr	r3, [r7, #4]
 80107d4:	4618      	mov	r0, r3
 80107d6:	3708      	adds	r7, #8
 80107d8:	46bd      	mov	sp, r7
 80107da:	bd80      	pop	{r7, pc}
 80107dc:	0802e83c 	.word	0x0802e83c
 80107e0:	0802e854 	.word	0x0802e854

080107e4 <_ZN19MainScreenPresenter8activateEv>:

void MainScreenPresenter::activate()
{
 80107e4:	b480      	push	{r7}
 80107e6:	b083      	sub	sp, #12
 80107e8:	af00      	add	r7, sp, #0
 80107ea:	6078      	str	r0, [r7, #4]

}
 80107ec:	bf00      	nop
 80107ee:	370c      	adds	r7, #12
 80107f0:	46bd      	mov	sp, r7
 80107f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80107f6:	4770      	bx	lr

080107f8 <_ZN19MainScreenPresenter10deactivateEv>:

void MainScreenPresenter::deactivate()
{
 80107f8:	b480      	push	{r7}
 80107fa:	b083      	sub	sp, #12
 80107fc:	af00      	add	r7, sp, #0
 80107fe:	6078      	str	r0, [r7, #4]

}
 8010800:	bf00      	nop
 8010802:	370c      	adds	r7, #12
 8010804:	46bd      	mov	sp, r7
 8010806:	f85d 7b04 	ldr.w	r7, [sp], #4
 801080a:	4770      	bx	lr

0801080c <_ZN14MainScreenViewD1Ev>:

class MainScreenView : public MainScreenViewBase
{
public:
    MainScreenView();
    virtual ~MainScreenView() {}
 801080c:	b580      	push	{r7, lr}
 801080e:	b082      	sub	sp, #8
 8010810:	af00      	add	r7, sp, #0
 8010812:	6078      	str	r0, [r7, #4]
 8010814:	4a05      	ldr	r2, [pc, #20]	; (801082c <_ZN14MainScreenViewD1Ev+0x20>)
 8010816:	687b      	ldr	r3, [r7, #4]
 8010818:	601a      	str	r2, [r3, #0]
 801081a:	687b      	ldr	r3, [r7, #4]
 801081c:	4618      	mov	r0, r3
 801081e:	f7fe f913 	bl	800ea48 <_ZN18MainScreenViewBaseD1Ev>
 8010822:	687b      	ldr	r3, [r7, #4]
 8010824:	4618      	mov	r0, r3
 8010826:	3708      	adds	r7, #8
 8010828:	46bd      	mov	sp, r7
 801082a:	bd80      	pop	{r7, pc}
 801082c:	0802e874 	.word	0x0802e874

08010830 <_ZN14MainScreenViewD0Ev>:
 8010830:	b580      	push	{r7, lr}
 8010832:	b082      	sub	sp, #8
 8010834:	af00      	add	r7, sp, #0
 8010836:	6078      	str	r0, [r7, #4]
 8010838:	6878      	ldr	r0, [r7, #4]
 801083a:	f7ff ffe7 	bl	801080c <_ZN14MainScreenViewD1Ev>
 801083e:	f240 410c 	movw	r1, #1036	; 0x40c
 8010842:	6878      	ldr	r0, [r7, #4]
 8010844:	f019 ffcb 	bl	802a7de <_ZdlPvj>
 8010848:	687b      	ldr	r3, [r7, #4]
 801084a:	4618      	mov	r0, r3
 801084c:	3708      	adds	r7, #8
 801084e:	46bd      	mov	sp, r7
 8010850:	bd80      	pop	{r7, pc}
	...

08010854 <_ZN14MainScreenViewC1Ev>:
#include <gui/mainscreen_screen/MainScreenView.hpp>

MainScreenView::MainScreenView()
 8010854:	b580      	push	{r7, lr}
 8010856:	b082      	sub	sp, #8
 8010858:	af00      	add	r7, sp, #0
 801085a:	6078      	str	r0, [r7, #4]
 801085c:	687b      	ldr	r3, [r7, #4]
 801085e:	4618      	mov	r0, r3
 8010860:	f7fd f956 	bl	800db10 <_ZN18MainScreenViewBaseC1Ev>
 8010864:	4a03      	ldr	r2, [pc, #12]	; (8010874 <_ZN14MainScreenViewC1Ev+0x20>)
 8010866:	687b      	ldr	r3, [r7, #4]
 8010868:	601a      	str	r2, [r3, #0]
{

}
 801086a:	687b      	ldr	r3, [r7, #4]
 801086c:	4618      	mov	r0, r3
 801086e:	3708      	adds	r7, #8
 8010870:	46bd      	mov	sp, r7
 8010872:	bd80      	pop	{r7, pc}
 8010874:	0802e874 	.word	0x0802e874

08010878 <_ZN14MainScreenView11setupScreenEv>:

void MainScreenView::setupScreen()
{
 8010878:	b580      	push	{r7, lr}
 801087a:	b082      	sub	sp, #8
 801087c:	af00      	add	r7, sp, #0
 801087e:	6078      	str	r0, [r7, #4]
    MainScreenViewBase::setupScreen();
 8010880:	687b      	ldr	r3, [r7, #4]
 8010882:	4618      	mov	r0, r3
 8010884:	f7fe f949 	bl	800eb1a <_ZN18MainScreenViewBase11setupScreenEv>
}
 8010888:	bf00      	nop
 801088a:	3708      	adds	r7, #8
 801088c:	46bd      	mov	sp, r7
 801088e:	bd80      	pop	{r7, pc}

08010890 <_ZN14MainScreenView14tearDownScreenEv>:

void MainScreenView::tearDownScreen()
{
 8010890:	b580      	push	{r7, lr}
 8010892:	b082      	sub	sp, #8
 8010894:	af00      	add	r7, sp, #0
 8010896:	6078      	str	r0, [r7, #4]
    MainScreenViewBase::tearDownScreen();
 8010898:	687b      	ldr	r3, [r7, #4]
 801089a:	4618      	mov	r0, r3
 801089c:	f7f9 fc12 	bl	800a0c4 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 80108a0:	bf00      	nop
 80108a2:	3708      	adds	r7, #8
 80108a4:	46bd      	mov	sp, r7
 80108a6:	bd80      	pop	{r7, pc}

080108a8 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>
#include "main.h"
//float T;
float Pa;
Model::Model() : modelListener(0),Pressure_Val(),Temperature_Val(),CO_Val(),Hour(),Minute(),Second(),tickCounter(0)
 80108a8:	b480      	push	{r7}
 80108aa:	b083      	sub	sp, #12
 80108ac:	af00      	add	r7, sp, #0
 80108ae:	6078      	str	r0, [r7, #4]
 80108b0:	687b      	ldr	r3, [r7, #4]
 80108b2:	2200      	movs	r2, #0
 80108b4:	601a      	str	r2, [r3, #0]
 80108b6:	687b      	ldr	r3, [r7, #4]
 80108b8:	f04f 0200 	mov.w	r2, #0
 80108bc:	605a      	str	r2, [r3, #4]
 80108be:	687b      	ldr	r3, [r7, #4]
 80108c0:	2200      	movs	r2, #0
 80108c2:	609a      	str	r2, [r3, #8]
 80108c4:	687b      	ldr	r3, [r7, #4]
 80108c6:	f04f 0200 	mov.w	r2, #0
 80108ca:	60da      	str	r2, [r3, #12]
 80108cc:	687b      	ldr	r3, [r7, #4]
 80108ce:	2200      	movs	r2, #0
 80108d0:	741a      	strb	r2, [r3, #16]
 80108d2:	687b      	ldr	r3, [r7, #4]
 80108d4:	2200      	movs	r2, #0
 80108d6:	745a      	strb	r2, [r3, #17]
 80108d8:	687b      	ldr	r3, [r7, #4]
 80108da:	2200      	movs	r2, #0
 80108dc:	749a      	strb	r2, [r3, #18]
 80108de:	687b      	ldr	r3, [r7, #4]
 80108e0:	2200      	movs	r2, #0
 80108e2:	615a      	str	r2, [r3, #20]
{

}
 80108e4:	687b      	ldr	r3, [r7, #4]
 80108e6:	4618      	mov	r0, r3
 80108e8:	370c      	adds	r7, #12
 80108ea:	46bd      	mov	sp, r7
 80108ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80108f0:	4770      	bx	lr
	...

080108f4 <_ZN5Model4tickEv>:

void Model::tick()
{
 80108f4:	b590      	push	{r4, r7, lr}
 80108f6:	b083      	sub	sp, #12
 80108f8:	af00      	add	r7, sp, #0
 80108fa:	6078      	str	r0, [r7, #4]
	tickCounter++;
 80108fc:	687b      	ldr	r3, [r7, #4]
 80108fe:	695b      	ldr	r3, [r3, #20]
 8010900:	1c5a      	adds	r2, r3, #1
 8010902:	687b      	ldr	r3, [r7, #4]
 8010904:	615a      	str	r2, [r3, #20]

		if (tickCounter % 60 == 0)
 8010906:	687b      	ldr	r3, [r7, #4]
 8010908:	695a      	ldr	r2, [r3, #20]
//			Hour   = DS1307_GetHour();
//			Pressure_Val = BMP280_Measure();

	    }

	modelListener->setPressure(Pa);
 801090a:	687b      	ldr	r3, [r7, #4]
 801090c:	681a      	ldr	r2, [r3, #0]
 801090e:	687b      	ldr	r3, [r7, #4]
 8010910:	681b      	ldr	r3, [r3, #0]
 8010912:	681b      	ldr	r3, [r3, #0]
 8010914:	3308      	adds	r3, #8
 8010916:	681b      	ldr	r3, [r3, #0]
 8010918:	4914      	ldr	r1, [pc, #80]	; (801096c <_ZN5Model4tickEv+0x78>)
 801091a:	edd1 7a00 	vldr	s15, [r1]
 801091e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010922:	ee17 1a90 	vmov	r1, s15
 8010926:	4610      	mov	r0, r2
 8010928:	4798      	blx	r3
//	modelListener->setTemperature(T);
	modelListener->setCO(CO_Val);
 801092a:	687b      	ldr	r3, [r7, #4]
 801092c:	6818      	ldr	r0, [r3, #0]
 801092e:	687b      	ldr	r3, [r7, #4]
 8010930:	681b      	ldr	r3, [r3, #0]
 8010932:	681b      	ldr	r3, [r3, #0]
 8010934:	3310      	adds	r3, #16
 8010936:	681b      	ldr	r3, [r3, #0]
 8010938:	687a      	ldr	r2, [r7, #4]
 801093a:	edd2 7a03 	vldr	s15, [r2, #12]
 801093e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010942:	ee17 1a90 	vmov	r1, s15
 8010946:	4798      	blx	r3
	modelListener->updateTime(Hour,Minute,Second);
 8010948:	687b      	ldr	r3, [r7, #4]
 801094a:	6818      	ldr	r0, [r3, #0]
 801094c:	687b      	ldr	r3, [r7, #4]
 801094e:	681b      	ldr	r3, [r3, #0]
 8010950:	681b      	ldr	r3, [r3, #0]
 8010952:	3314      	adds	r3, #20
 8010954:	681c      	ldr	r4, [r3, #0]
 8010956:	687b      	ldr	r3, [r7, #4]
 8010958:	7c19      	ldrb	r1, [r3, #16]
 801095a:	687b      	ldr	r3, [r7, #4]
 801095c:	7c5a      	ldrb	r2, [r3, #17]
 801095e:	687b      	ldr	r3, [r7, #4]
 8010960:	7c9b      	ldrb	r3, [r3, #18]
 8010962:	47a0      	blx	r4
}
 8010964:	bf00      	nop
 8010966:	370c      	adds	r7, #12
 8010968:	46bd      	mov	sp, r7
 801096a:	bd90      	pop	{r4, r7, pc}
 801096c:	20000440 	.word	0x20000440

08010970 <_ZN23PressureScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~PressureScreenPresenter() {}
 8010970:	b580      	push	{r7, lr}
 8010972:	b082      	sub	sp, #8
 8010974:	af00      	add	r7, sp, #0
 8010976:	6078      	str	r0, [r7, #4]
 8010978:	4a09      	ldr	r2, [pc, #36]	; (80109a0 <_ZN23PressureScreenPresenterD1Ev+0x30>)
 801097a:	687b      	ldr	r3, [r7, #4]
 801097c:	601a      	str	r2, [r3, #0]
 801097e:	4a09      	ldr	r2, [pc, #36]	; (80109a4 <_ZN23PressureScreenPresenterD1Ev+0x34>)
 8010980:	687b      	ldr	r3, [r7, #4]
 8010982:	605a      	str	r2, [r3, #4]
 8010984:	687b      	ldr	r3, [r7, #4]
 8010986:	3304      	adds	r3, #4
 8010988:	4618      	mov	r0, r3
 801098a:	f7ff fc59 	bl	8010240 <_ZN13ModelListenerD1Ev>
 801098e:	687b      	ldr	r3, [r7, #4]
 8010990:	4618      	mov	r0, r3
 8010992:	f7ff fc11 	bl	80101b8 <_ZN8touchgfx9PresenterD1Ev>
 8010996:	687b      	ldr	r3, [r7, #4]
 8010998:	4618      	mov	r0, r3
 801099a:	3708      	adds	r7, #8
 801099c:	46bd      	mov	sp, r7
 801099e:	bd80      	pop	{r7, pc}
 80109a0:	0802e8a8 	.word	0x0802e8a8
 80109a4:	0802e8c4 	.word	0x0802e8c4

080109a8 <_ZThn4_N23PressureScreenPresenterD1Ev>:
 80109a8:	f1a0 0004 	sub.w	r0, r0, #4
 80109ac:	e7e0      	b.n	8010970 <_ZN23PressureScreenPresenterD1Ev>
 80109ae:	bf00      	nop

080109b0 <_ZN23PressureScreenPresenterD0Ev>:
 80109b0:	b580      	push	{r7, lr}
 80109b2:	b082      	sub	sp, #8
 80109b4:	af00      	add	r7, sp, #0
 80109b6:	6078      	str	r0, [r7, #4]
 80109b8:	6878      	ldr	r0, [r7, #4]
 80109ba:	f7ff ffd9 	bl	8010970 <_ZN23PressureScreenPresenterD1Ev>
 80109be:	2110      	movs	r1, #16
 80109c0:	6878      	ldr	r0, [r7, #4]
 80109c2:	f019 ff0c 	bl	802a7de <_ZdlPvj>
 80109c6:	687b      	ldr	r3, [r7, #4]
 80109c8:	4618      	mov	r0, r3
 80109ca:	3708      	adds	r7, #8
 80109cc:	46bd      	mov	sp, r7
 80109ce:	bd80      	pop	{r7, pc}

080109d0 <_ZThn4_N23PressureScreenPresenterD0Ev>:
 80109d0:	f1a0 0004 	sub.w	r0, r0, #4
 80109d4:	e7ec      	b.n	80109b0 <_ZN23PressureScreenPresenterD0Ev>
	...

080109d8 <_ZN23PressureScreenPresenterC1ER18PressureScreenView>:
#include <gui/pressurescreen_screen/PressureScreenView.hpp>
#include <gui/pressurescreen_screen/PressureScreenPresenter.hpp>

PressureScreenPresenter::PressureScreenPresenter(PressureScreenView& v)
 80109d8:	b580      	push	{r7, lr}
 80109da:	b082      	sub	sp, #8
 80109dc:	af00      	add	r7, sp, #0
 80109de:	6078      	str	r0, [r7, #4]
 80109e0:	6039      	str	r1, [r7, #0]
    : view(v)
 80109e2:	687b      	ldr	r3, [r7, #4]
 80109e4:	4618      	mov	r0, r3
 80109e6:	f7ff fc07 	bl	80101f8 <_ZN8touchgfx9PresenterC1Ev>
 80109ea:	687b      	ldr	r3, [r7, #4]
 80109ec:	3304      	adds	r3, #4
 80109ee:	4618      	mov	r0, r3
 80109f0:	f7ff fc12 	bl	8010218 <_ZN13ModelListenerC1Ev>
 80109f4:	4a06      	ldr	r2, [pc, #24]	; (8010a10 <_ZN23PressureScreenPresenterC1ER18PressureScreenView+0x38>)
 80109f6:	687b      	ldr	r3, [r7, #4]
 80109f8:	601a      	str	r2, [r3, #0]
 80109fa:	4a06      	ldr	r2, [pc, #24]	; (8010a14 <_ZN23PressureScreenPresenterC1ER18PressureScreenView+0x3c>)
 80109fc:	687b      	ldr	r3, [r7, #4]
 80109fe:	605a      	str	r2, [r3, #4]
 8010a00:	687b      	ldr	r3, [r7, #4]
 8010a02:	683a      	ldr	r2, [r7, #0]
 8010a04:	60da      	str	r2, [r3, #12]
{

}
 8010a06:	687b      	ldr	r3, [r7, #4]
 8010a08:	4618      	mov	r0, r3
 8010a0a:	3708      	adds	r7, #8
 8010a0c:	46bd      	mov	sp, r7
 8010a0e:	bd80      	pop	{r7, pc}
 8010a10:	0802e8a8 	.word	0x0802e8a8
 8010a14:	0802e8c4 	.word	0x0802e8c4

08010a18 <_ZN23PressureScreenPresenter8activateEv>:

void PressureScreenPresenter::activate()
{
 8010a18:	b480      	push	{r7}
 8010a1a:	b083      	sub	sp, #12
 8010a1c:	af00      	add	r7, sp, #0
 8010a1e:	6078      	str	r0, [r7, #4]

}
 8010a20:	bf00      	nop
 8010a22:	370c      	adds	r7, #12
 8010a24:	46bd      	mov	sp, r7
 8010a26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010a2a:	4770      	bx	lr

08010a2c <_ZN23PressureScreenPresenter10deactivateEv>:

void PressureScreenPresenter::deactivate()
{
 8010a2c:	b480      	push	{r7}
 8010a2e:	b083      	sub	sp, #12
 8010a30:	af00      	add	r7, sp, #0
 8010a32:	6078      	str	r0, [r7, #4]

}
 8010a34:	bf00      	nop
 8010a36:	370c      	adds	r7, #12
 8010a38:	46bd      	mov	sp, r7
 8010a3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010a3e:	4770      	bx	lr

08010a40 <_ZN23PressureScreenPresenter11setPressureEi>:
void PressureScreenPresenter::setPressure(int Val)
{
 8010a40:	b580      	push	{r7, lr}
 8010a42:	b082      	sub	sp, #8
 8010a44:	af00      	add	r7, sp, #0
 8010a46:	6078      	str	r0, [r7, #4]
 8010a48:	6039      	str	r1, [r7, #0]
	view.setPressure(Val);
 8010a4a:	687b      	ldr	r3, [r7, #4]
 8010a4c:	68da      	ldr	r2, [r3, #12]
 8010a4e:	687b      	ldr	r3, [r7, #4]
 8010a50:	68db      	ldr	r3, [r3, #12]
 8010a52:	681b      	ldr	r3, [r3, #0]
 8010a54:	332c      	adds	r3, #44	; 0x2c
 8010a56:	681b      	ldr	r3, [r3, #0]
 8010a58:	6839      	ldr	r1, [r7, #0]
 8010a5a:	4610      	mov	r0, r2
 8010a5c:	4798      	blx	r3
}
 8010a5e:	bf00      	nop
 8010a60:	3708      	adds	r7, #8
 8010a62:	46bd      	mov	sp, r7
 8010a64:	bd80      	pop	{r7, pc}

08010a66 <_ZThn4_N23PressureScreenPresenter11setPressureEi>:
    virtual void setPressure(int Val);
 8010a66:	f1a0 0004 	sub.w	r0, r0, #4
 8010a6a:	f7ff bfe9 	b.w	8010a40 <_ZN23PressureScreenPresenter11setPressureEi>
	...

08010a70 <_ZN18PressureScreenViewD1Ev>:

class PressureScreenView : public PressureScreenViewBase
{
public:
    PressureScreenView();
    virtual ~PressureScreenView() {}
 8010a70:	b580      	push	{r7, lr}
 8010a72:	b082      	sub	sp, #8
 8010a74:	af00      	add	r7, sp, #0
 8010a76:	6078      	str	r0, [r7, #4]
 8010a78:	4a05      	ldr	r2, [pc, #20]	; (8010a90 <_ZN18PressureScreenViewD1Ev+0x20>)
 8010a7a:	687b      	ldr	r3, [r7, #4]
 8010a7c:	601a      	str	r2, [r3, #0]
 8010a7e:	687b      	ldr	r3, [r7, #4]
 8010a80:	4618      	mov	r0, r3
 8010a82:	f7fe fd21 	bl	800f4c8 <_ZN22PressureScreenViewBaseD1Ev>
 8010a86:	687b      	ldr	r3, [r7, #4]
 8010a88:	4618      	mov	r0, r3
 8010a8a:	3708      	adds	r7, #8
 8010a8c:	46bd      	mov	sp, r7
 8010a8e:	bd80      	pop	{r7, pc}
 8010a90:	0802e8e4 	.word	0x0802e8e4

08010a94 <_ZN18PressureScreenViewD0Ev>:
 8010a94:	b580      	push	{r7, lr}
 8010a96:	b082      	sub	sp, #8
 8010a98:	af00      	add	r7, sp, #0
 8010a9a:	6078      	str	r0, [r7, #4]
 8010a9c:	6878      	ldr	r0, [r7, #4]
 8010a9e:	f7ff ffe7 	bl	8010a70 <_ZN18PressureScreenViewD1Ev>
 8010aa2:	f44f 713f 	mov.w	r1, #764	; 0x2fc
 8010aa6:	6878      	ldr	r0, [r7, #4]
 8010aa8:	f019 fe99 	bl	802a7de <_ZdlPvj>
 8010aac:	687b      	ldr	r3, [r7, #4]
 8010aae:	4618      	mov	r0, r3
 8010ab0:	3708      	adds	r7, #8
 8010ab2:	46bd      	mov	sp, r7
 8010ab4:	bd80      	pop	{r7, pc}
	...

08010ab8 <_ZN18PressureScreenViewC1Ev>:
#include <gui/pressurescreen_screen/PressureScreenView.hpp>

PressureScreenView::PressureScreenView()
 8010ab8:	b580      	push	{r7, lr}
 8010aba:	b082      	sub	sp, #8
 8010abc:	af00      	add	r7, sp, #0
 8010abe:	6078      	str	r0, [r7, #4]
 8010ac0:	687b      	ldr	r3, [r7, #4]
 8010ac2:	4618      	mov	r0, r3
 8010ac4:	f7fe fac2 	bl	800f04c <_ZN22PressureScreenViewBaseC1Ev>
 8010ac8:	4a03      	ldr	r2, [pc, #12]	; (8010ad8 <_ZN18PressureScreenViewC1Ev+0x20>)
 8010aca:	687b      	ldr	r3, [r7, #4]
 8010acc:	601a      	str	r2, [r3, #0]
{

}
 8010ace:	687b      	ldr	r3, [r7, #4]
 8010ad0:	4618      	mov	r0, r3
 8010ad2:	3708      	adds	r7, #8
 8010ad4:	46bd      	mov	sp, r7
 8010ad6:	bd80      	pop	{r7, pc}
 8010ad8:	0802e8e4 	.word	0x0802e8e4

08010adc <_ZN18PressureScreenView11setupScreenEv>:

void PressureScreenView::setupScreen()
{
 8010adc:	b580      	push	{r7, lr}
 8010ade:	b082      	sub	sp, #8
 8010ae0:	af00      	add	r7, sp, #0
 8010ae2:	6078      	str	r0, [r7, #4]
    PressureScreenViewBase::setupScreen();
 8010ae4:	687b      	ldr	r3, [r7, #4]
 8010ae6:	4618      	mov	r0, r3
 8010ae8:	f7fe fd33 	bl	800f552 <_ZN22PressureScreenViewBase11setupScreenEv>
}
 8010aec:	bf00      	nop
 8010aee:	3708      	adds	r7, #8
 8010af0:	46bd      	mov	sp, r7
 8010af2:	bd80      	pop	{r7, pc}

08010af4 <_ZN18PressureScreenView14tearDownScreenEv>:

void PressureScreenView::tearDownScreen()
{
 8010af4:	b580      	push	{r7, lr}
 8010af6:	b082      	sub	sp, #8
 8010af8:	af00      	add	r7, sp, #0
 8010afa:	6078      	str	r0, [r7, #4]
    PressureScreenViewBase::tearDownScreen();
 8010afc:	687b      	ldr	r3, [r7, #4]
 8010afe:	4618      	mov	r0, r3
 8010b00:	f7f9 fae0 	bl	800a0c4 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 8010b04:	bf00      	nop
 8010b06:	3708      	adds	r7, #8
 8010b08:	46bd      	mov	sp, r7
 8010b0a:	bd80      	pop	{r7, pc}

08010b0c <_ZN18PressureScreenView11setPressureEi>:

void PressureScreenView::setPressure(int Val)
{
 8010b0c:	b580      	push	{r7, lr}
 8010b0e:	b082      	sub	sp, #8
 8010b10:	af00      	add	r7, sp, #0
 8010b12:	6078      	str	r0, [r7, #4]
 8010b14:	6039      	str	r1, [r7, #0]
	Unicode::snprintf(PressureDataBuffer, PRESSUREDATA_SIZE, "%d",Val);
 8010b16:	687b      	ldr	r3, [r7, #4]
 8010b18:	f503 7037 	add.w	r0, r3, #732	; 0x2dc
 8010b1c:	683b      	ldr	r3, [r7, #0]
 8010b1e:	4a0a      	ldr	r2, [pc, #40]	; (8010b48 <_ZN18PressureScreenView11setPressureEi+0x3c>)
 8010b20:	2106      	movs	r1, #6
 8010b22:	f00b fe47 	bl	801c7b4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	PressureGauge.updateValue(Val, 30); // animates needle and arc to new value with a duration of 30 ticks
 8010b26:	687b      	ldr	r3, [r7, #4]
 8010b28:	33a8      	adds	r3, #168	; 0xa8
 8010b2a:	221e      	movs	r2, #30
 8010b2c:	6839      	ldr	r1, [r7, #0]
 8010b2e:	4618      	mov	r0, r3
 8010b30:	f001 ff75 	bl	8012a1e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>
	PressureData.invalidate();
 8010b34:	687b      	ldr	r3, [r7, #4]
 8010b36:	f503 7324 	add.w	r3, r3, #656	; 0x290
 8010b3a:	4618      	mov	r0, r3
 8010b3c:	f009 fcb2 	bl	801a4a4 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8010b40:	bf00      	nop
 8010b42:	3708      	adds	r7, #8
 8010b44:	46bd      	mov	sp, r7
 8010b46:	bd80      	pop	{r7, pc}
 8010b48:	0802d480 	.word	0x0802d480

08010b4c <_ZN26TemperatureScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~TemperatureScreenPresenter() {}
 8010b4c:	b580      	push	{r7, lr}
 8010b4e:	b082      	sub	sp, #8
 8010b50:	af00      	add	r7, sp, #0
 8010b52:	6078      	str	r0, [r7, #4]
 8010b54:	4a09      	ldr	r2, [pc, #36]	; (8010b7c <_ZN26TemperatureScreenPresenterD1Ev+0x30>)
 8010b56:	687b      	ldr	r3, [r7, #4]
 8010b58:	601a      	str	r2, [r3, #0]
 8010b5a:	4a09      	ldr	r2, [pc, #36]	; (8010b80 <_ZN26TemperatureScreenPresenterD1Ev+0x34>)
 8010b5c:	687b      	ldr	r3, [r7, #4]
 8010b5e:	605a      	str	r2, [r3, #4]
 8010b60:	687b      	ldr	r3, [r7, #4]
 8010b62:	3304      	adds	r3, #4
 8010b64:	4618      	mov	r0, r3
 8010b66:	f7ff fb6b 	bl	8010240 <_ZN13ModelListenerD1Ev>
 8010b6a:	687b      	ldr	r3, [r7, #4]
 8010b6c:	4618      	mov	r0, r3
 8010b6e:	f7ff fb23 	bl	80101b8 <_ZN8touchgfx9PresenterD1Ev>
 8010b72:	687b      	ldr	r3, [r7, #4]
 8010b74:	4618      	mov	r0, r3
 8010b76:	3708      	adds	r7, #8
 8010b78:	46bd      	mov	sp, r7
 8010b7a:	bd80      	pop	{r7, pc}
 8010b7c:	0802e91c 	.word	0x0802e91c
 8010b80:	0802e938 	.word	0x0802e938

08010b84 <_ZThn4_N26TemperatureScreenPresenterD1Ev>:
 8010b84:	f1a0 0004 	sub.w	r0, r0, #4
 8010b88:	e7e0      	b.n	8010b4c <_ZN26TemperatureScreenPresenterD1Ev>
 8010b8a:	bf00      	nop

08010b8c <_ZN26TemperatureScreenPresenterD0Ev>:
 8010b8c:	b580      	push	{r7, lr}
 8010b8e:	b082      	sub	sp, #8
 8010b90:	af00      	add	r7, sp, #0
 8010b92:	6078      	str	r0, [r7, #4]
 8010b94:	6878      	ldr	r0, [r7, #4]
 8010b96:	f7ff ffd9 	bl	8010b4c <_ZN26TemperatureScreenPresenterD1Ev>
 8010b9a:	2110      	movs	r1, #16
 8010b9c:	6878      	ldr	r0, [r7, #4]
 8010b9e:	f019 fe1e 	bl	802a7de <_ZdlPvj>
 8010ba2:	687b      	ldr	r3, [r7, #4]
 8010ba4:	4618      	mov	r0, r3
 8010ba6:	3708      	adds	r7, #8
 8010ba8:	46bd      	mov	sp, r7
 8010baa:	bd80      	pop	{r7, pc}

08010bac <_ZThn4_N26TemperatureScreenPresenterD0Ev>:
 8010bac:	f1a0 0004 	sub.w	r0, r0, #4
 8010bb0:	e7ec      	b.n	8010b8c <_ZN26TemperatureScreenPresenterD0Ev>
	...

08010bb4 <_ZN26TemperatureScreenPresenterC1ER21TemperatureScreenView>:
#include <gui/temperaturescreen_screen/TemperatureScreenView.hpp>
#include <gui/temperaturescreen_screen/TemperatureScreenPresenter.hpp>

TemperatureScreenPresenter::TemperatureScreenPresenter(TemperatureScreenView& v)
 8010bb4:	b580      	push	{r7, lr}
 8010bb6:	b082      	sub	sp, #8
 8010bb8:	af00      	add	r7, sp, #0
 8010bba:	6078      	str	r0, [r7, #4]
 8010bbc:	6039      	str	r1, [r7, #0]
    : view(v)
 8010bbe:	687b      	ldr	r3, [r7, #4]
 8010bc0:	4618      	mov	r0, r3
 8010bc2:	f7ff fb19 	bl	80101f8 <_ZN8touchgfx9PresenterC1Ev>
 8010bc6:	687b      	ldr	r3, [r7, #4]
 8010bc8:	3304      	adds	r3, #4
 8010bca:	4618      	mov	r0, r3
 8010bcc:	f7ff fb24 	bl	8010218 <_ZN13ModelListenerC1Ev>
 8010bd0:	4a06      	ldr	r2, [pc, #24]	; (8010bec <_ZN26TemperatureScreenPresenterC1ER21TemperatureScreenView+0x38>)
 8010bd2:	687b      	ldr	r3, [r7, #4]
 8010bd4:	601a      	str	r2, [r3, #0]
 8010bd6:	4a06      	ldr	r2, [pc, #24]	; (8010bf0 <_ZN26TemperatureScreenPresenterC1ER21TemperatureScreenView+0x3c>)
 8010bd8:	687b      	ldr	r3, [r7, #4]
 8010bda:	605a      	str	r2, [r3, #4]
 8010bdc:	687b      	ldr	r3, [r7, #4]
 8010bde:	683a      	ldr	r2, [r7, #0]
 8010be0:	60da      	str	r2, [r3, #12]
{

}
 8010be2:	687b      	ldr	r3, [r7, #4]
 8010be4:	4618      	mov	r0, r3
 8010be6:	3708      	adds	r7, #8
 8010be8:	46bd      	mov	sp, r7
 8010bea:	bd80      	pop	{r7, pc}
 8010bec:	0802e91c 	.word	0x0802e91c
 8010bf0:	0802e938 	.word	0x0802e938

08010bf4 <_ZN26TemperatureScreenPresenter8activateEv>:

void TemperatureScreenPresenter::activate()
{
 8010bf4:	b480      	push	{r7}
 8010bf6:	b083      	sub	sp, #12
 8010bf8:	af00      	add	r7, sp, #0
 8010bfa:	6078      	str	r0, [r7, #4]

}
 8010bfc:	bf00      	nop
 8010bfe:	370c      	adds	r7, #12
 8010c00:	46bd      	mov	sp, r7
 8010c02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c06:	4770      	bx	lr

08010c08 <_ZN26TemperatureScreenPresenter10deactivateEv>:

void TemperatureScreenPresenter::deactivate()
{
 8010c08:	b480      	push	{r7}
 8010c0a:	b083      	sub	sp, #12
 8010c0c:	af00      	add	r7, sp, #0
 8010c0e:	6078      	str	r0, [r7, #4]

}
 8010c10:	bf00      	nop
 8010c12:	370c      	adds	r7, #12
 8010c14:	46bd      	mov	sp, r7
 8010c16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c1a:	4770      	bx	lr

08010c1c <_ZN26TemperatureScreenPresenter14setTemperatureEi>:
void TemperatureScreenPresenter::setTemperature(int Temperature_Val)
{
 8010c1c:	b580      	push	{r7, lr}
 8010c1e:	b082      	sub	sp, #8
 8010c20:	af00      	add	r7, sp, #0
 8010c22:	6078      	str	r0, [r7, #4]
 8010c24:	6039      	str	r1, [r7, #0]
	view.setTemperature(Temperature_Val);
 8010c26:	687b      	ldr	r3, [r7, #4]
 8010c28:	68da      	ldr	r2, [r3, #12]
 8010c2a:	687b      	ldr	r3, [r7, #4]
 8010c2c:	68db      	ldr	r3, [r3, #12]
 8010c2e:	681b      	ldr	r3, [r3, #0]
 8010c30:	332c      	adds	r3, #44	; 0x2c
 8010c32:	681b      	ldr	r3, [r3, #0]
 8010c34:	6839      	ldr	r1, [r7, #0]
 8010c36:	4610      	mov	r0, r2
 8010c38:	4798      	blx	r3
}
 8010c3a:	bf00      	nop
 8010c3c:	3708      	adds	r7, #8
 8010c3e:	46bd      	mov	sp, r7
 8010c40:	bd80      	pop	{r7, pc}

08010c42 <_ZThn4_N26TemperatureScreenPresenter14setTemperatureEi>:
    virtual void setTemperature(int Temperature_Val);
 8010c42:	f1a0 0004 	sub.w	r0, r0, #4
 8010c46:	f7ff bfe9 	b.w	8010c1c <_ZN26TemperatureScreenPresenter14setTemperatureEi>
	...

08010c4c <_ZN21TemperatureScreenViewD1Ev>:

class TemperatureScreenView : public TemperatureScreenViewBase
{
public:
    TemperatureScreenView();
    virtual ~TemperatureScreenView() {}
 8010c4c:	b580      	push	{r7, lr}
 8010c4e:	b082      	sub	sp, #8
 8010c50:	af00      	add	r7, sp, #0
 8010c52:	6078      	str	r0, [r7, #4]
 8010c54:	4a05      	ldr	r2, [pc, #20]	; (8010c6c <_ZN21TemperatureScreenViewD1Ev+0x20>)
 8010c56:	687b      	ldr	r3, [r7, #4]
 8010c58:	601a      	str	r2, [r3, #0]
 8010c5a:	687b      	ldr	r3, [r7, #4]
 8010c5c:	4618      	mov	r0, r3
 8010c5e:	f7fe ff99 	bl	800fb94 <_ZN25TemperatureScreenViewBaseD1Ev>
 8010c62:	687b      	ldr	r3, [r7, #4]
 8010c64:	4618      	mov	r0, r3
 8010c66:	3708      	adds	r7, #8
 8010c68:	46bd      	mov	sp, r7
 8010c6a:	bd80      	pop	{r7, pc}
 8010c6c:	0802e958 	.word	0x0802e958

08010c70 <_ZN21TemperatureScreenViewD0Ev>:
 8010c70:	b580      	push	{r7, lr}
 8010c72:	b082      	sub	sp, #8
 8010c74:	af00      	add	r7, sp, #0
 8010c76:	6078      	str	r0, [r7, #4]
 8010c78:	6878      	ldr	r0, [r7, #4]
 8010c7a:	f7ff ffe7 	bl	8010c4c <_ZN21TemperatureScreenViewD1Ev>
 8010c7e:	f44f 713d 	mov.w	r1, #756	; 0x2f4
 8010c82:	6878      	ldr	r0, [r7, #4]
 8010c84:	f019 fdab 	bl	802a7de <_ZdlPvj>
 8010c88:	687b      	ldr	r3, [r7, #4]
 8010c8a:	4618      	mov	r0, r3
 8010c8c:	3708      	adds	r7, #8
 8010c8e:	46bd      	mov	sp, r7
 8010c90:	bd80      	pop	{r7, pc}
	...

08010c94 <_ZN21TemperatureScreenViewC1Ev>:
#include <gui/temperaturescreen_screen/TemperatureScreenView.hpp>

TemperatureScreenView::TemperatureScreenView()
 8010c94:	b580      	push	{r7, lr}
 8010c96:	b082      	sub	sp, #8
 8010c98:	af00      	add	r7, sp, #0
 8010c9a:	6078      	str	r0, [r7, #4]
 8010c9c:	687b      	ldr	r3, [r7, #4]
 8010c9e:	4618      	mov	r0, r3
 8010ca0:	f7fe fd40 	bl	800f724 <_ZN25TemperatureScreenViewBaseC1Ev>
 8010ca4:	4a03      	ldr	r2, [pc, #12]	; (8010cb4 <_ZN21TemperatureScreenViewC1Ev+0x20>)
 8010ca6:	687b      	ldr	r3, [r7, #4]
 8010ca8:	601a      	str	r2, [r3, #0]
{

}
 8010caa:	687b      	ldr	r3, [r7, #4]
 8010cac:	4618      	mov	r0, r3
 8010cae:	3708      	adds	r7, #8
 8010cb0:	46bd      	mov	sp, r7
 8010cb2:	bd80      	pop	{r7, pc}
 8010cb4:	0802e958 	.word	0x0802e958

08010cb8 <_ZN21TemperatureScreenView11setupScreenEv>:

void TemperatureScreenView::setupScreen()
{
 8010cb8:	b580      	push	{r7, lr}
 8010cba:	b082      	sub	sp, #8
 8010cbc:	af00      	add	r7, sp, #0
 8010cbe:	6078      	str	r0, [r7, #4]
    TemperatureScreenViewBase::setupScreen();
 8010cc0:	687b      	ldr	r3, [r7, #4]
 8010cc2:	4618      	mov	r0, r3
 8010cc4:	f7fe ffab 	bl	800fc1e <_ZN25TemperatureScreenViewBase11setupScreenEv>
}
 8010cc8:	bf00      	nop
 8010cca:	3708      	adds	r7, #8
 8010ccc:	46bd      	mov	sp, r7
 8010cce:	bd80      	pop	{r7, pc}

08010cd0 <_ZN21TemperatureScreenView14tearDownScreenEv>:

void TemperatureScreenView::tearDownScreen()
{
 8010cd0:	b580      	push	{r7, lr}
 8010cd2:	b082      	sub	sp, #8
 8010cd4:	af00      	add	r7, sp, #0
 8010cd6:	6078      	str	r0, [r7, #4]
    TemperatureScreenViewBase::tearDownScreen();
 8010cd8:	687b      	ldr	r3, [r7, #4]
 8010cda:	4618      	mov	r0, r3
 8010cdc:	f7f9 f9f2 	bl	800a0c4 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 8010ce0:	bf00      	nop
 8010ce2:	3708      	adds	r7, #8
 8010ce4:	46bd      	mov	sp, r7
 8010ce6:	bd80      	pop	{r7, pc}

08010ce8 <_ZN21TemperatureScreenView14setTemperatureEi>:

void TemperatureScreenView::setTemperature(int Temperature_Val)
{
 8010ce8:	b580      	push	{r7, lr}
 8010cea:	b082      	sub	sp, #8
 8010cec:	af00      	add	r7, sp, #0
 8010cee:	6078      	str	r0, [r7, #4]
 8010cf0:	6039      	str	r1, [r7, #0]
	Unicode::snprintf(TemperatureDataBuffer, TEMPERATUREDATA_SIZE, "%d",Temperature_Val);
 8010cf2:	687b      	ldr	r3, [r7, #4]
 8010cf4:	f503 7037 	add.w	r0, r3, #732	; 0x2dc
 8010cf8:	683b      	ldr	r3, [r7, #0]
 8010cfa:	4a0b      	ldr	r2, [pc, #44]	; (8010d28 <_ZN21TemperatureScreenView14setTemperatureEi+0x40>)
 8010cfc:	2104      	movs	r1, #4
 8010cfe:	f00b fd59 	bl	801c7b4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	TemperatureGauge.updateValue(Temperature_Val, 30); // animates needle and arc to new value with a duration of 30 ticks
 8010d02:	687b      	ldr	r3, [r7, #4]
 8010d04:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8010d08:	221e      	movs	r2, #30
 8010d0a:	6839      	ldr	r1, [r7, #0]
 8010d0c:	4618      	mov	r0, r3
 8010d0e:	f001 fe86 	bl	8012a1e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>
	TemperatureGauge.invalidate();
 8010d12:	687b      	ldr	r3, [r7, #4]
 8010d14:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8010d18:	4618      	mov	r0, r3
 8010d1a:	f009 fbc3 	bl	801a4a4 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8010d1e:	bf00      	nop
 8010d20:	3708      	adds	r7, #8
 8010d22:	46bd      	mov	sp, r7
 8010d24:	bd80      	pop	{r7, pc}
 8010d26:	bf00      	nop
 8010d28:	0802d484 	.word	0x0802d484

08010d2c <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 8010d2c:	b480      	push	{r7}
 8010d2e:	b083      	sub	sp, #12
 8010d30:	af00      	add	r7, sp, #0
 8010d32:	6078      	str	r0, [r7, #4]
    {
 8010d34:	4a04      	ldr	r2, [pc, #16]	; (8010d48 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 8010d36:	687b      	ldr	r3, [r7, #4]
 8010d38:	601a      	str	r2, [r3, #0]
    }
 8010d3a:	687b      	ldr	r3, [r7, #4]
 8010d3c:	4618      	mov	r0, r3
 8010d3e:	370c      	adds	r7, #12
 8010d40:	46bd      	mov	sp, r7
 8010d42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d46:	4770      	bx	lr
 8010d48:	0802e9a8 	.word	0x0802e9a8

08010d4c <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 8010d4c:	b580      	push	{r7, lr}
 8010d4e:	b082      	sub	sp, #8
 8010d50:	af00      	add	r7, sp, #0
 8010d52:	6078      	str	r0, [r7, #4]
    }
 8010d54:	6878      	ldr	r0, [r7, #4]
 8010d56:	f7ff ffe9 	bl	8010d2c <_ZN8touchgfx15TouchControllerD1Ev>
 8010d5a:	2104      	movs	r1, #4
 8010d5c:	6878      	ldr	r0, [r7, #4]
 8010d5e:	f019 fd3e 	bl	802a7de <_ZdlPvj>
 8010d62:	687b      	ldr	r3, [r7, #4]
 8010d64:	4618      	mov	r0, r3
 8010d66:	3708      	adds	r7, #8
 8010d68:	46bd      	mov	sp, r7
 8010d6a:	bd80      	pop	{r7, pc}

08010d6c <_ZN20STM32TouchController4initEv>:
/* USER CODE BEGIN STM32TouchController */

#include <STM32TouchController.hpp>
#include "main.h"
void STM32TouchController::init()
{
 8010d6c:	b480      	push	{r7}
 8010d6e:	b083      	sub	sp, #12
 8010d70:	af00      	add	r7, sp, #0
 8010d72:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 8010d74:	bf00      	nop
 8010d76:	370c      	adds	r7, #12
 8010d78:	46bd      	mov	sp, r7
 8010d7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d7e:	4770      	bx	lr

08010d80 <_ZN20STM32TouchController11sampleTouchERlS0_>:


bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8010d80:	b580      	push	{r7, lr}
 8010d82:	b084      	sub	sp, #16
 8010d84:	af00      	add	r7, sp, #0
 8010d86:	60f8      	str	r0, [r7, #12]
 8010d88:	60b9      	str	r1, [r7, #8]
 8010d8a:	607a      	str	r2, [r7, #4]
	return ((bool) Touch_TouchGFXSampleTouch(&x, &y));
 8010d8c:	6879      	ldr	r1, [r7, #4]
 8010d8e:	68b8      	ldr	r0, [r7, #8]
 8010d90:	f7f2 fffc 	bl	8003d8c <Touch_TouchGFXSampleTouch>
 8010d94:	4603      	mov	r3, r0
 8010d96:	2b00      	cmp	r3, #0
 8010d98:	bf14      	ite	ne
 8010d9a:	2301      	movne	r3, #1
 8010d9c:	2300      	moveq	r3, #0
 8010d9e:	b2db      	uxtb	r3, r3
}
 8010da0:	4618      	mov	r0, r3
 8010da2:	3710      	adds	r7, #16
 8010da4:	46bd      	mov	sp, r7
 8010da6:	bd80      	pop	{r7, pc}

08010da8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8010da8:	b580      	push	{r7, lr}
 8010daa:	b082      	sub	sp, #8
 8010dac:	af00      	add	r7, sp, #0
 8010dae:	6078      	str	r0, [r7, #4]
 8010db0:	4a05      	ldr	r2, [pc, #20]	; (8010dc8 <_ZN20STM32TouchControllerD1Ev+0x20>)
 8010db2:	687b      	ldr	r3, [r7, #4]
 8010db4:	601a      	str	r2, [r3, #0]
 8010db6:	687b      	ldr	r3, [r7, #4]
 8010db8:	4618      	mov	r0, r3
 8010dba:	f7ff ffb7 	bl	8010d2c <_ZN8touchgfx15TouchControllerD1Ev>
 8010dbe:	687b      	ldr	r3, [r7, #4]
 8010dc0:	4618      	mov	r0, r3
 8010dc2:	3708      	adds	r7, #8
 8010dc4:	46bd      	mov	sp, r7
 8010dc6:	bd80      	pop	{r7, pc}
 8010dc8:	0802e990 	.word	0x0802e990

08010dcc <_ZN20STM32TouchControllerD0Ev>:
 8010dcc:	b580      	push	{r7, lr}
 8010dce:	b082      	sub	sp, #8
 8010dd0:	af00      	add	r7, sp, #0
 8010dd2:	6078      	str	r0, [r7, #4]
 8010dd4:	6878      	ldr	r0, [r7, #4]
 8010dd6:	f7ff ffe7 	bl	8010da8 <_ZN20STM32TouchControllerD1Ev>
 8010dda:	2104      	movs	r1, #4
 8010ddc:	6878      	ldr	r0, [r7, #4]
 8010dde:	f019 fcfe 	bl	802a7de <_ZdlPvj>
 8010de2:	687b      	ldr	r3, [r7, #4]
 8010de4:	4618      	mov	r0, r3
 8010de6:	3708      	adds	r7, #8
 8010de8:	46bd      	mov	sp, r7
 8010dea:	bd80      	pop	{r7, pc}

08010dec <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 8010dec:	b480      	push	{r7}
 8010dee:	af00      	add	r7, sp, #0

}
 8010df0:	bf00      	nop
 8010df2:	46bd      	mov	sp, r7
 8010df4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010df8:	4770      	bx	lr
	...

08010dfc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 8010dfc:	b480      	push	{r7}
 8010dfe:	b083      	sub	sp, #12
 8010e00:	af00      	add	r7, sp, #0
 8010e02:	4603      	mov	r3, r0
 8010e04:	71fb      	strb	r3, [r7, #7]
    switch (id)
 8010e06:	79fb      	ldrb	r3, [r7, #7]
 8010e08:	2b03      	cmp	r3, #3
 8010e0a:	d80c      	bhi.n	8010e26 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 8010e0c:	a201      	add	r2, pc, #4	; (adr r2, 8010e14 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 8010e0e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010e12:	bf00      	nop
 8010e14:	08010e25 	.word	0x08010e25
 8010e18:	08010e25 	.word	0x08010e25
 8010e1c:	08010e25 	.word	0x08010e25
 8010e20:	08010e25 	.word	0x08010e25
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 8010e24:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 8010e26:	bf00      	nop
 8010e28:	370c      	adds	r7, #12
 8010e2a:	46bd      	mov	sp, r7
 8010e2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e30:	4770      	bx	lr
 8010e32:	bf00      	nop

08010e34 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 8010e34:	b480      	push	{r7}
 8010e36:	b083      	sub	sp, #12
 8010e38:	af00      	add	r7, sp, #0
 8010e3a:	4603      	mov	r3, r0
 8010e3c:	71fb      	strb	r3, [r7, #7]
    switch (id)
 8010e3e:	79fb      	ldrb	r3, [r7, #7]
 8010e40:	2b03      	cmp	r3, #3
 8010e42:	d80c      	bhi.n	8010e5e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 8010e44:	a201      	add	r2, pc, #4	; (adr r2, 8010e4c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 8010e46:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010e4a:	bf00      	nop
 8010e4c:	08010e5d 	.word	0x08010e5d
 8010e50:	08010e5d 	.word	0x08010e5d
 8010e54:	08010e5d 	.word	0x08010e5d
 8010e58:	08010e5d 	.word	0x08010e5d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 8010e5c:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 8010e5e:	bf00      	nop
 8010e60:	370c      	adds	r7, #12
 8010e62:	46bd      	mov	sp, r7
 8010e64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e68:	4770      	bx	lr
 8010e6a:	bf00      	nop

08010e6c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 8010e6c:	b480      	push	{r7}
 8010e6e:	b083      	sub	sp, #12
 8010e70:	af00      	add	r7, sp, #0
 8010e72:	4603      	mov	r3, r0
 8010e74:	71fb      	strb	r3, [r7, #7]
    switch (id)
 8010e76:	79fb      	ldrb	r3, [r7, #7]
 8010e78:	2b03      	cmp	r3, #3
 8010e7a:	d80c      	bhi.n	8010e96 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 8010e7c:	a201      	add	r2, pc, #4	; (adr r2, 8010e84 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 8010e7e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010e82:	bf00      	nop
 8010e84:	08010e95 	.word	0x08010e95
 8010e88:	08010e95 	.word	0x08010e95
 8010e8c:	08010e95 	.word	0x08010e95
 8010e90:	08010e95 	.word	0x08010e95
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 8010e94:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 8010e96:	bf00      	nop
 8010e98:	370c      	adds	r7, #12
 8010e9a:	46bd      	mov	sp, r7
 8010e9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ea0:	4770      	bx	lr
 8010ea2:	bf00      	nop

08010ea4 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 8010ea4:	b480      	push	{r7}
 8010ea6:	b083      	sub	sp, #12
 8010ea8:	af00      	add	r7, sp, #0
 8010eaa:	6078      	str	r0, [r7, #4]
    {
 8010eac:	4a04      	ldr	r2, [pc, #16]	; (8010ec0 <_ZN8touchgfx3HALD1Ev+0x1c>)
 8010eae:	687b      	ldr	r3, [r7, #4]
 8010eb0:	601a      	str	r2, [r3, #0]
    }
 8010eb2:	687b      	ldr	r3, [r7, #4]
 8010eb4:	4618      	mov	r0, r3
 8010eb6:	370c      	adds	r7, #12
 8010eb8:	46bd      	mov	sp, r7
 8010eba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ebe:	4770      	bx	lr
 8010ec0:	0802f064 	.word	0x0802f064

08010ec4 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 8010ec4:	b580      	push	{r7, lr}
 8010ec6:	b082      	sub	sp, #8
 8010ec8:	af00      	add	r7, sp, #0
 8010eca:	6078      	str	r0, [r7, #4]
    }
 8010ecc:	6878      	ldr	r0, [r7, #4]
 8010ece:	f7ff ffe9 	bl	8010ea4 <_ZN8touchgfx3HALD1Ev>
 8010ed2:	217c      	movs	r1, #124	; 0x7c
 8010ed4:	6878      	ldr	r0, [r7, #4]
 8010ed6:	f019 fc82 	bl	802a7de <_ZdlPvj>
 8010eda:	687b      	ldr	r3, [r7, #4]
 8010edc:	4618      	mov	r0, r3
 8010ede:	3708      	adds	r7, #8
 8010ee0:	46bd      	mov	sp, r7
 8010ee2:	bd80      	pop	{r7, pc}

08010ee4 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 8010ee4:	b480      	push	{r7}
 8010ee6:	b083      	sub	sp, #12
 8010ee8:	af00      	add	r7, sp, #0
 8010eea:	6078      	str	r0, [r7, #4]
 8010eec:	460b      	mov	r3, r1
 8010eee:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 8010ef0:	687b      	ldr	r3, [r7, #4]
 8010ef2:	78fa      	ldrb	r2, [r7, #3]
 8010ef4:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8010ef8:	687b      	ldr	r3, [r7, #4]
 8010efa:	2201      	movs	r2, #1
 8010efc:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
    }
 8010f00:	bf00      	nop
 8010f02:	370c      	adds	r7, #12
 8010f04:	46bd      	mov	sp, r7
 8010f06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f0a:	4770      	bx	lr

08010f0c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8010f0c:	b580      	push	{r7, lr}
 8010f0e:	b082      	sub	sp, #8
 8010f10:	af00      	add	r7, sp, #0
 8010f12:	6078      	str	r0, [r7, #4]
 8010f14:	460b      	mov	r3, r1
 8010f16:	807b      	strh	r3, [r7, #2]
 8010f18:	4613      	mov	r3, r2
 8010f1a:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8010f1c:	4b0c      	ldr	r3, [pc, #48]	; (8010f50 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 8010f1e:	881b      	ldrh	r3, [r3, #0]
 8010f20:	887a      	ldrh	r2, [r7, #2]
 8010f22:	429a      	cmp	r2, r3
 8010f24:	d304      	bcc.n	8010f30 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 8010f26:	4b0b      	ldr	r3, [pc, #44]	; (8010f54 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 8010f28:	881b      	ldrh	r3, [r3, #0]
 8010f2a:	883a      	ldrh	r2, [r7, #0]
 8010f2c:	429a      	cmp	r2, r3
 8010f2e:	d205      	bcs.n	8010f3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 8010f30:	4b09      	ldr	r3, [pc, #36]	; (8010f58 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 8010f32:	4a0a      	ldr	r2, [pc, #40]	; (8010f5c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 8010f34:	219e      	movs	r1, #158	; 0x9e
 8010f36:	480a      	ldr	r0, [pc, #40]	; (8010f60 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 8010f38:	f01a fa42 	bl	802b3c0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8010f3c:	4a09      	ldr	r2, [pc, #36]	; (8010f64 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 8010f3e:	887b      	ldrh	r3, [r7, #2]
 8010f40:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 8010f42:	4a09      	ldr	r2, [pc, #36]	; (8010f68 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 8010f44:	883b      	ldrh	r3, [r7, #0]
 8010f46:	8013      	strh	r3, [r2, #0]
    }
 8010f48:	bf00      	nop
 8010f4a:	3708      	adds	r7, #8
 8010f4c:	46bd      	mov	sp, r7
 8010f4e:	bd80      	pop	{r7, pc}
 8010f50:	20002240 	.word	0x20002240
 8010f54:	20002242 	.word	0x20002242
 8010f58:	0802d488 	.word	0x0802d488
 8010f5c:	0802d4ec 	.word	0x0802d4ec
 8010f60:	0802d530 	.word	0x0802d530
 8010f64:	20002246 	.word	0x20002246
 8010f68:	20002248 	.word	0x20002248

08010f6c <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
 8010f6c:	b580      	push	{r7, lr}
 8010f6e:	b082      	sub	sp, #8
 8010f70:	af00      	add	r7, sp, #0
 8010f72:	6078      	str	r0, [r7, #4]
    {
        if (useDMAAcceleration)
 8010f74:	687b      	ldr	r3, [r7, #4]
 8010f76:	f893 307a 	ldrb.w	r3, [r3, #122]	; 0x7a
 8010f7a:	2b00      	cmp	r3, #0
 8010f7c:	d009      	beq.n	8010f92 <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
        {
            return dma.getBlitCaps();
 8010f7e:	687b      	ldr	r3, [r7, #4]
 8010f80:	685a      	ldr	r2, [r3, #4]
 8010f82:	687b      	ldr	r3, [r7, #4]
 8010f84:	685b      	ldr	r3, [r3, #4]
 8010f86:	681b      	ldr	r3, [r3, #0]
 8010f88:	681b      	ldr	r3, [r3, #0]
 8010f8a:	4610      	mov	r0, r2
 8010f8c:	4798      	blx	r3
 8010f8e:	4603      	mov	r3, r0
 8010f90:	e000      	b.n	8010f94 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        }
        return static_cast<BlitOperations>(0);
 8010f92:	2300      	movs	r3, #0
    }
 8010f94:	4618      	mov	r0, r3
 8010f96:	3708      	adds	r7, #8
 8010f98:	46bd      	mov	sp, r7
 8010f9a:	bd80      	pop	{r7, pc}

08010f9c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    /**
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     */
    virtual void backPorchExited()
 8010f9c:	b580      	push	{r7, lr}
 8010f9e:	b082      	sub	sp, #8
 8010fa0:	af00      	add	r7, sp, #0
 8010fa2:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 8010fa4:	6878      	ldr	r0, [r7, #4]
 8010fa6:	f003 f875 	bl	8014094 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8010faa:	687b      	ldr	r3, [r7, #4]
 8010fac:	681b      	ldr	r3, [r3, #0]
 8010fae:	33ac      	adds	r3, #172	; 0xac
 8010fb0:	681b      	ldr	r3, [r3, #0]
 8010fb2:	6878      	ldr	r0, [r7, #4]
 8010fb4:	4798      	blx	r3
    }
 8010fb6:	bf00      	nop
 8010fb8:	3708      	adds	r7, #8
 8010fba:	46bd      	mov	sp, r7
 8010fbc:	bd80      	pop	{r7, pc}

08010fbe <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 8010fbe:	b480      	push	{r7}
 8010fc0:	b083      	sub	sp, #12
 8010fc2:	af00      	add	r7, sp, #0
 8010fc4:	6078      	str	r0, [r7, #4]
 8010fc6:	6039      	str	r1, [r7, #0]
    {
        (void)key; // Unused variable
        return false;
 8010fc8:	2300      	movs	r3, #0
    }
 8010fca:	4618      	mov	r0, r3
 8010fcc:	370c      	adds	r7, #12
 8010fce:	46bd      	mov	sp, r7
 8010fd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010fd4:	4770      	bx	lr
	...

08010fd8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setAnimationStorage
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8010fd8:	b580      	push	{r7, lr}
 8010fda:	b084      	sub	sp, #16
 8010fdc:	af00      	add	r7, sp, #0
 8010fde:	60f8      	str	r0, [r7, #12]
 8010fe0:	60b9      	str	r1, [r7, #8]
 8010fe2:	607a      	str	r2, [r7, #4]
 8010fe4:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8010fe6:	68bb      	ldr	r3, [r7, #8]
 8010fe8:	2b00      	cmp	r3, #0
 8010fea:	d106      	bne.n	8010ffa <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 8010fec:	4b0f      	ldr	r3, [pc, #60]	; (801102c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 8010fee:	4a10      	ldr	r2, [pc, #64]	; (8011030 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 8010ff0:	f240 21d2 	movw	r1, #722	; 0x2d2
 8010ff4:	480f      	ldr	r0, [pc, #60]	; (8011034 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 8010ff6:	f01a f9e3 	bl	802b3c0 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 8010ffa:	68fb      	ldr	r3, [r7, #12]
 8010ffc:	68ba      	ldr	r2, [r7, #8]
 8010ffe:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8011000:	68fb      	ldr	r3, [r7, #12]
 8011002:	687a      	ldr	r2, [r7, #4]
 8011004:	641a      	str	r2, [r3, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8011006:	687b      	ldr	r3, [r7, #4]
 8011008:	2b00      	cmp	r3, #0
 801100a:	bf14      	ite	ne
 801100c:	2301      	movne	r3, #1
 801100e:	2300      	moveq	r3, #0
 8011010:	b2da      	uxtb	r2, r3
 8011012:	4b09      	ldr	r3, [pc, #36]	; (8011038 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 8011014:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8011016:	68fb      	ldr	r3, [r7, #12]
 8011018:	681b      	ldr	r3, [r3, #0]
 801101a:	338c      	adds	r3, #140	; 0x8c
 801101c:	681b      	ldr	r3, [r3, #0]
 801101e:	6839      	ldr	r1, [r7, #0]
 8011020:	68f8      	ldr	r0, [r7, #12]
 8011022:	4798      	blx	r3
    }
 8011024:	bf00      	nop
 8011026:	3710      	adds	r7, #16
 8011028:	46bd      	mov	sp, r7
 801102a:	bd80      	pop	{r7, pc}
 801102c:	0802d574 	.word	0x0802d574
 8011030:	0802d5ac 	.word	0x0802d5ac
 8011034:	0802d530 	.word	0x0802d530
 8011038:	2000224a 	.word	0x2000224a

0801103c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
 801103c:	b480      	push	{r7}
 801103e:	b083      	sub	sp, #12
 8011040:	af00      	add	r7, sp, #0
 8011042:	6078      	str	r0, [r7, #4]
 8011044:	6039      	str	r1, [r7, #0]
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8011046:	687b      	ldr	r3, [r7, #4]
 8011048:	683a      	ldr	r2, [r7, #0]
 801104a:	645a      	str	r2, [r3, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 801104c:	683b      	ldr	r3, [r7, #0]
 801104e:	2b00      	cmp	r3, #0
 8011050:	bf14      	ite	ne
 8011052:	2301      	movne	r3, #1
 8011054:	2300      	moveq	r3, #0
 8011056:	b2da      	uxtb	r2, r3
 8011058:	4b03      	ldr	r3, [pc, #12]	; (8011068 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 801105a:	701a      	strb	r2, [r3, #0]
    }
 801105c:	bf00      	nop
 801105e:	370c      	adds	r7, #12
 8011060:	46bd      	mov	sp, r7
 8011062:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011066:	4770      	bx	lr
 8011068:	2000224b 	.word	0x2000224b

0801106c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * Gets the flash data reader. This method must be implemented in
     * subclasses that uses a FlashDataReader object.
     *
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
 801106c:	b480      	push	{r7}
 801106e:	b083      	sub	sp, #12
 8011070:	af00      	add	r7, sp, #0
 8011072:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8011074:	2300      	movs	r3, #0
    }
 8011076:	4618      	mov	r0, r3
 8011078:	370c      	adds	r7, #12
 801107a:	46bd      	mov	sp, r7
 801107c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011080:	4770      	bx	lr

08011082 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
 8011082:	b580      	push	{r7, lr}
 8011084:	b082      	sub	sp, #8
 8011086:	af00      	add	r7, sp, #0
 8011088:	6078      	str	r0, [r7, #4]
 801108a:	460b      	mov	r3, r1
 801108c:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 801108e:	687b      	ldr	r3, [r7, #4]
 8011090:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011092:	2b00      	cmp	r3, #0
 8011094:	d004      	beq.n	80110a0 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 8011096:	687b      	ldr	r3, [r7, #4]
 8011098:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801109a:	887a      	ldrh	r2, [r7, #2]
 801109c:	4610      	mov	r0, r2
 801109e:	4798      	blx	r3
        }
    }
 80110a0:	bf00      	nop
 80110a2:	3708      	adds	r7, #8
 80110a4:	46bd      	mov	sp, r7
 80110a6:	bd80      	pop	{r7, pc}

080110a8 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     * getTFTCurrentLine function is never called and can be disregarded.
     *
     * @return In this default implementation, 0xFFFF is returned to signify "not
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
 80110a8:	b480      	push	{r7}
 80110aa:	b083      	sub	sp, #12
 80110ac:	af00      	add	r7, sp, #0
 80110ae:	6078      	str	r0, [r7, #4]
    {
        return 0xFFFFu;
 80110b0:	f64f 73ff 	movw	r3, #65535	; 0xffff
    }
 80110b4:	4618      	mov	r0, r3
 80110b6:	370c      	adds	r7, #12
 80110b8:	46bd      	mov	sp, r7
 80110ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80110be:	4770      	bx	lr

080110c0 <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 80110c0:	b580      	push	{r7, lr}
 80110c2:	b082      	sub	sp, #8
 80110c4:	af00      	add	r7, sp, #0
 80110c6:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 80110c8:	687b      	ldr	r3, [r7, #4]
 80110ca:	685a      	ldr	r2, [r3, #4]
 80110cc:	687b      	ldr	r3, [r7, #4]
 80110ce:	685b      	ldr	r3, [r3, #4]
 80110d0:	681b      	ldr	r3, [r3, #0]
 80110d2:	3318      	adds	r3, #24
 80110d4:	681b      	ldr	r3, [r3, #0]
 80110d6:	4610      	mov	r0, r2
 80110d8:	4798      	blx	r3
 80110da:	4603      	mov	r3, r0
    }
 80110dc:	4618      	mov	r0, r3
 80110de:	3708      	adds	r7, #8
 80110e0:	46bd      	mov	sp, r7
 80110e2:	bd80      	pop	{r7, pc}

080110e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 80110e4:	b480      	push	{r7}
 80110e6:	b085      	sub	sp, #20
 80110e8:	af00      	add	r7, sp, #0
 80110ea:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 80110ec:	687b      	ldr	r3, [r7, #4]
 80110ee:	f893 2078 	ldrb.w	r2, [r3, #120]	; 0x78
 80110f2:	687b      	ldr	r3, [r7, #4]
 80110f4:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80110f8:	429a      	cmp	r2, r3
 80110fa:	d011      	beq.n	8011120 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 80110fc:	4b14      	ldr	r3, [pc, #80]	; (8011150 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 80110fe:	781b      	ldrb	r3, [r3, #0]
 8011100:	2b00      	cmp	r3, #0
 8011102:	d11e      	bne.n	8011142 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 8011104:	4b13      	ldr	r3, [pc, #76]	; (8011154 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 8011106:	881b      	ldrh	r3, [r3, #0]
 8011108:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 801110a:	4b13      	ldr	r3, [pc, #76]	; (8011158 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 801110c:	881a      	ldrh	r2, [r3, #0]
 801110e:	4b11      	ldr	r3, [pc, #68]	; (8011154 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 8011110:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 8011112:	4a11      	ldr	r2, [pc, #68]	; (8011158 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8011114:	89bb      	ldrh	r3, [r7, #12]
 8011116:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 8011118:	4b0d      	ldr	r3, [pc, #52]	; (8011150 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 801111a:	2201      	movs	r2, #1
 801111c:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 801111e:	e010      	b.n	8011142 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 8011120:	4b0b      	ldr	r3, [pc, #44]	; (8011150 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 8011122:	781b      	ldrb	r3, [r3, #0]
 8011124:	2b00      	cmp	r3, #0
 8011126:	d00c      	beq.n	8011142 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 8011128:	4b0a      	ldr	r3, [pc, #40]	; (8011154 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 801112a:	881b      	ldrh	r3, [r3, #0]
 801112c:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 801112e:	4b0a      	ldr	r3, [pc, #40]	; (8011158 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8011130:	881a      	ldrh	r2, [r3, #0]
 8011132:	4b08      	ldr	r3, [pc, #32]	; (8011154 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 8011134:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 8011136:	4a08      	ldr	r2, [pc, #32]	; (8011158 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8011138:	89fb      	ldrh	r3, [r7, #14]
 801113a:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 801113c:	4b04      	ldr	r3, [pc, #16]	; (8011150 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 801113e:	2200      	movs	r2, #0
 8011140:	701a      	strb	r2, [r3, #0]
    }
 8011142:	bf00      	nop
 8011144:	3714      	adds	r7, #20
 8011146:	46bd      	mov	sp, r7
 8011148:	f85d 7b04 	ldr.w	r7, [sp], #4
 801114c:	4770      	bx	lr
 801114e:	bf00      	nop
 8011150:	20002244 	.word	0x20002244
 8011154:	20002242 	.word	0x20002242
 8011158:	20002240 	.word	0x20002240

0801115c <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Invalidate D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
 801115c:	b480      	push	{r7}
 801115e:	b083      	sub	sp, #12
 8011160:	af00      	add	r7, sp, #0
 8011162:	6078      	str	r0, [r7, #4]
    {
    }
 8011164:	bf00      	nop
 8011166:	370c      	adds	r7, #12
 8011168:	46bd      	mov	sp, r7
 801116a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801116e:	4770      	bx	lr

08011170 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Flush D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
 8011170:	b480      	push	{r7}
 8011172:	b083      	sub	sp, #12
 8011174:	af00      	add	r7, sp, #0
 8011176:	6078      	str	r0, [r7, #4]
    {
    }
 8011178:	bf00      	nop
 801117a:	370c      	adds	r7, #12
 801117c:	46bd      	mov	sp, r7
 801117e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011182:	4770      	bx	lr

08011184 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 8011184:	b580      	push	{r7, lr}
 8011186:	b082      	sub	sp, #8
 8011188:	af00      	add	r7, sp, #0
 801118a:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 801118c:	687b      	ldr	r3, [r7, #4]
 801118e:	4618      	mov	r0, r3
 8011190:	f002 f9de 	bl	8013550 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 8011194:	bf00      	nop
 8011196:	3708      	adds	r7, #8
 8011198:	46bd      	mov	sp, r7
 801119a:	bd80      	pop	{r7, pc}

0801119c <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 801119c:	b580      	push	{r7, lr}
 801119e:	b082      	sub	sp, #8
 80111a0:	af00      	add	r7, sp, #0
 80111a2:	6078      	str	r0, [r7, #4]
 80111a4:	4a05      	ldr	r2, [pc, #20]	; (80111bc <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 80111a6:	687b      	ldr	r3, [r7, #4]
 80111a8:	601a      	str	r2, [r3, #0]
 80111aa:	687b      	ldr	r3, [r7, #4]
 80111ac:	4618      	mov	r0, r3
 80111ae:	f7ff fe79 	bl	8010ea4 <_ZN8touchgfx3HALD1Ev>
 80111b2:	687b      	ldr	r3, [r7, #4]
 80111b4:	4618      	mov	r0, r3
 80111b6:	3708      	adds	r7, #8
 80111b8:	46bd      	mov	sp, r7
 80111ba:	bd80      	pop	{r7, pc}
 80111bc:	0802ec0c 	.word	0x0802ec0c

080111c0 <_ZN20TouchGFXGeneratedHALD0Ev>:
 80111c0:	b580      	push	{r7, lr}
 80111c2:	b082      	sub	sp, #8
 80111c4:	af00      	add	r7, sp, #0
 80111c6:	6078      	str	r0, [r7, #4]
 80111c8:	6878      	ldr	r0, [r7, #4]
 80111ca:	f7ff ffe7 	bl	801119c <_ZN20TouchGFXGeneratedHALD1Ev>
 80111ce:	217c      	movs	r1, #124	; 0x7c
 80111d0:	6878      	ldr	r0, [r7, #4]
 80111d2:	f019 fb04 	bl	802a7de <_ZdlPvj>
 80111d6:	687b      	ldr	r3, [r7, #4]
 80111d8:	4618      	mov	r0, r3
 80111da:	3708      	adds	r7, #8
 80111dc:	46bd      	mov	sp, r7
 80111de:	bd80      	pop	{r7, pc}

080111e0 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 80111e0:	b580      	push	{r7, lr}
 80111e2:	b082      	sub	sp, #8
 80111e4:	af00      	add	r7, sp, #0
 80111e6:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 80111e8:	687b      	ldr	r3, [r7, #4]
 80111ea:	4618      	mov	r0, r3
 80111ec:	f7ff ffca 	bl	8011184 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 80111f0:	bf00      	nop
 80111f2:	3708      	adds	r7, #8
 80111f4:	46bd      	mov	sp, r7
 80111f6:	bd80      	pop	{r7, pc}

080111f8 <_ZN11TouchGFXHAL10initializeEv>:
 */
//#warning "A user must call touchgfx::startNewTransfer(); once touchgfxDisplayDriverTransmitBlock() has succesfully sent a block."
//#warning "A user must implement C-methods touchgfxDisplayDriverTransmitActive() and touchgfxDisplayDriverTransmitBlock() used by the Partial Framebuffer Strategy."

void TouchGFXHAL::initialize()
{
 80111f8:	b580      	push	{r7, lr}
 80111fa:	b082      	sub	sp, #8
 80111fc:	af00      	add	r7, sp, #0
 80111fe:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8011200:	687b      	ldr	r3, [r7, #4]
 8011202:	4618      	mov	r0, r3
 8011204:	f000 ffba 	bl	801217c <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 8011208:	bf00      	nop
 801120a:	3708      	adds	r7, #8
 801120c:	46bd      	mov	sp, r7
 801120e:	bd80      	pop	{r7, pc}

08011210 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 8011210:	b580      	push	{r7, lr}
 8011212:	b082      	sub	sp, #8
 8011214:	af00      	add	r7, sp, #0
 8011216:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8011218:	687b      	ldr	r3, [r7, #4]
 801121a:	4618      	mov	r0, r3
 801121c:	f001 f82c 	bl	8012278 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 8011220:	4603      	mov	r3, r0
}
 8011222:	4618      	mov	r0, r3
 8011224:	3708      	adds	r7, #8
 8011226:	46bd      	mov	sp, r7
 8011228:	bd80      	pop	{r7, pc}

0801122a <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 801122a:	b580      	push	{r7, lr}
 801122c:	b082      	sub	sp, #8
 801122e:	af00      	add	r7, sp, #0
 8011230:	6078      	str	r0, [r7, #4]
 8011232:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8011234:	687b      	ldr	r3, [r7, #4]
 8011236:	6839      	ldr	r1, [r7, #0]
 8011238:	4618      	mov	r0, r3
 801123a:	f001 f828 	bl	801228e <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 801123e:	bf00      	nop
 8011240:	3708      	adds	r7, #8
 8011242:	46bd      	mov	sp, r7
 8011244:	bd80      	pop	{r7, pc}

08011246 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8011246:	b580      	push	{r7, lr}
 8011248:	b082      	sub	sp, #8
 801124a:	af00      	add	r7, sp, #0
 801124c:	6078      	str	r0, [r7, #4]
 801124e:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8011250:	687b      	ldr	r3, [r7, #4]
 8011252:	6839      	ldr	r1, [r7, #0]
 8011254:	4618      	mov	r0, r3
 8011256:	f001 f825 	bl	80122a4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 801125a:	bf00      	nop
 801125c:	3708      	adds	r7, #8
 801125e:	46bd      	mov	sp, r7
 8011260:	bd80      	pop	{r7, pc}

08011262 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 8011262:	b580      	push	{r7, lr}
 8011264:	b084      	sub	sp, #16
 8011266:	af00      	add	r7, sp, #0
 8011268:	60f8      	str	r0, [r7, #12]
 801126a:	60b9      	str	r1, [r7, #8]
 801126c:	607a      	str	r2, [r7, #4]
 801126e:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 8011270:	68f8      	ldr	r0, [r7, #12]
 8011272:	683b      	ldr	r3, [r7, #0]
 8011274:	687a      	ldr	r2, [r7, #4]
 8011276:	68b9      	ldr	r1, [r7, #8]
 8011278:	f001 f857 	bl	801232a <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 801127c:	4603      	mov	r3, r0
}
 801127e:	4618      	mov	r0, r3
 8011280:	3710      	adds	r7, #16
 8011282:	46bd      	mov	sp, r7
 8011284:	bd80      	pop	{r7, pc}

08011286 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 8011286:	b580      	push	{r7, lr}
 8011288:	b082      	sub	sp, #8
 801128a:	af00      	add	r7, sp, #0
 801128c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 801128e:	687b      	ldr	r3, [r7, #4]
 8011290:	4618      	mov	r0, r3
 8011292:	f000 ffa3 	bl	80121dc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 8011296:	bf00      	nop
 8011298:	3708      	adds	r7, #8
 801129a:	46bd      	mov	sp, r7
 801129c:	bd80      	pop	{r7, pc}

0801129e <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 801129e:	b580      	push	{r7, lr}
 80112a0:	b082      	sub	sp, #8
 80112a2:	af00      	add	r7, sp, #0
 80112a4:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80112a6:	687b      	ldr	r3, [r7, #4]
 80112a8:	4618      	mov	r0, r3
 80112aa:	f000 ffa1 	bl	80121f0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 80112ae:	bf00      	nop
 80112b0:	3708      	adds	r7, #8
 80112b2:	46bd      	mov	sp, r7
 80112b4:	bd80      	pop	{r7, pc}

080112b6 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 80112b6:	b580      	push	{r7, lr}
 80112b8:	b082      	sub	sp, #8
 80112ba:	af00      	add	r7, sp, #0
 80112bc:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80112be:	687b      	ldr	r3, [r7, #4]
 80112c0:	4618      	mov	r0, r3
 80112c2:	f000 ff9f 	bl	8012204 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 80112c6:	bf00      	nop
 80112c8:	3708      	adds	r7, #8
 80112ca:	46bd      	mov	sp, r7
 80112cc:	bd80      	pop	{r7, pc}

080112ce <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 80112ce:	b580      	push	{r7, lr}
 80112d0:	b082      	sub	sp, #8
 80112d2:	af00      	add	r7, sp, #0
 80112d4:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80112d6:	687b      	ldr	r3, [r7, #4]
 80112d8:	4618      	mov	r0, r3
 80112da:	f000 ff9d 	bl	8012218 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 80112de:	bf00      	nop
 80112e0:	3708      	adds	r7, #8
 80112e2:	46bd      	mov	sp, r7
 80112e4:	bd80      	pop	{r7, pc}

080112e6 <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 80112e6:	b580      	push	{r7, lr}
 80112e8:	b082      	sub	sp, #8
 80112ea:	af00      	add	r7, sp, #0
 80112ec:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 80112ee:	687b      	ldr	r3, [r7, #4]
 80112f0:	4618      	mov	r0, r3
 80112f2:	f000 ff9b 	bl	801222c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 80112f6:	4603      	mov	r3, r0
}
 80112f8:	4618      	mov	r0, r3
 80112fa:	3708      	adds	r7, #8
 80112fc:	46bd      	mov	sp, r7
 80112fe:	bd80      	pop	{r7, pc}

08011300 <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 8011300:	b580      	push	{r7, lr}
 8011302:	b082      	sub	sp, #8
 8011304:	af00      	add	r7, sp, #0
 8011306:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 8011308:	687b      	ldr	r3, [r7, #4]
 801130a:	4618      	mov	r0, r3
 801130c:	f000 ff9b 	bl	8012246 <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 8011310:	bf00      	nop
 8011312:	3708      	adds	r7, #8
 8011314:	46bd      	mov	sp, r7
 8011316:	bd80      	pop	{r7, pc}

08011318 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8011318:	b580      	push	{r7, lr}
 801131a:	b082      	sub	sp, #8
 801131c:	af00      	add	r7, sp, #0
 801131e:	6078      	str	r0, [r7, #4]
 8011320:	4a05      	ldr	r2, [pc, #20]	; (8011338 <_ZN11TouchGFXHALD1Ev+0x20>)
 8011322:	687b      	ldr	r3, [r7, #4]
 8011324:	601a      	str	r2, [r3, #0]
 8011326:	687b      	ldr	r3, [r7, #4]
 8011328:	4618      	mov	r0, r3
 801132a:	f7ff ff37 	bl	801119c <_ZN20TouchGFXGeneratedHALD1Ev>
 801132e:	687b      	ldr	r3, [r7, #4]
 8011330:	4618      	mov	r0, r3
 8011332:	3708      	adds	r7, #8
 8011334:	46bd      	mov	sp, r7
 8011336:	bd80      	pop	{r7, pc}
 8011338:	0802e9c0 	.word	0x0802e9c0

0801133c <_ZN11TouchGFXHALD0Ev>:
 801133c:	b580      	push	{r7, lr}
 801133e:	b082      	sub	sp, #8
 8011340:	af00      	add	r7, sp, #0
 8011342:	6078      	str	r0, [r7, #4]
 8011344:	6878      	ldr	r0, [r7, #4]
 8011346:	f7ff ffe7 	bl	8011318 <_ZN11TouchGFXHALD1Ev>
 801134a:	217c      	movs	r1, #124	; 0x7c
 801134c:	6878      	ldr	r0, [r7, #4]
 801134e:	f019 fa46 	bl	802a7de <_ZdlPvj>
 8011352:	687b      	ldr	r3, [r7, #4]
 8011354:	4618      	mov	r0, r3
 8011356:	3708      	adds	r7, #8
 8011358:	46bd      	mov	sp, r7
 801135a:	bd80      	pop	{r7, pc}

0801135c <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 801135c:	b480      	push	{r7}
 801135e:	af00      	add	r7, sp, #0
    fb_sem = 0;
 8011360:	4b05      	ldr	r3, [pc, #20]	; (8011378 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 8011362:	2200      	movs	r2, #0
 8011364:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 8011366:	4b05      	ldr	r3, [pc, #20]	; (801137c <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 8011368:	2200      	movs	r2, #0
 801136a:	601a      	str	r2, [r3, #0]
}
 801136c:	bf00      	nop
 801136e:	46bd      	mov	sp, r7
 8011370:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011374:	4770      	bx	lr
 8011376:	bf00      	nop
 8011378:	20000444 	.word	0x20000444
 801137c:	20000448 	.word	0x20000448

08011380 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 8011380:	b480      	push	{r7}
 8011382:	af00      	add	r7, sp, #0
    while (fb_sem);
 8011384:	bf00      	nop
 8011386:	4b08      	ldr	r3, [pc, #32]	; (80113a8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 8011388:	681b      	ldr	r3, [r3, #0]
 801138a:	2b00      	cmp	r3, #0
 801138c:	bf14      	ite	ne
 801138e:	2301      	movne	r3, #1
 8011390:	2300      	moveq	r3, #0
 8011392:	b2db      	uxtb	r3, r3
 8011394:	2b00      	cmp	r3, #0
 8011396:	d1f6      	bne.n	8011386 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 8011398:	4b03      	ldr	r3, [pc, #12]	; (80113a8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 801139a:	2201      	movs	r2, #1
 801139c:	601a      	str	r2, [r3, #0]
}
 801139e:	bf00      	nop
 80113a0:	46bd      	mov	sp, r7
 80113a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80113a6:	4770      	bx	lr
 80113a8:	20000444 	.word	0x20000444

080113ac <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 80113ac:	b480      	push	{r7}
 80113ae:	af00      	add	r7, sp, #0
    fb_sem = 0;
 80113b0:	4b03      	ldr	r3, [pc, #12]	; (80113c0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 80113b2:	2200      	movs	r2, #0
 80113b4:	601a      	str	r2, [r3, #0]
}
 80113b6:	bf00      	nop
 80113b8:	46bd      	mov	sp, r7
 80113ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80113be:	4770      	bx	lr
 80113c0:	20000444 	.word	0x20000444

080113c4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 80113c4:	b480      	push	{r7}
 80113c6:	af00      	add	r7, sp, #0
    fb_sem = 1;
 80113c8:	4b03      	ldr	r3, [pc, #12]	; (80113d8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 80113ca:	2201      	movs	r2, #1
 80113cc:	601a      	str	r2, [r3, #0]
}
 80113ce:	bf00      	nop
 80113d0:	46bd      	mov	sp, r7
 80113d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80113d6:	4770      	bx	lr
 80113d8:	20000444 	.word	0x20000444

080113dc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 80113dc:	b480      	push	{r7}
 80113de:	af00      	add	r7, sp, #0
    fb_sem = 0;
 80113e0:	4b03      	ldr	r3, [pc, #12]	; (80113f0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 80113e2:	2200      	movs	r2, #0
 80113e4:	601a      	str	r2, [r3, #0]
}
 80113e6:	bf00      	nop
 80113e8:	46bd      	mov	sp, r7
 80113ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80113ee:	4770      	bx	lr
 80113f0:	20000444 	.word	0x20000444

080113f4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 80113f4:	b480      	push	{r7}
 80113f6:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 80113f8:	4b03      	ldr	r3, [pc, #12]	; (8011408 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80113fa:	2201      	movs	r2, #1
 80113fc:	601a      	str	r2, [r3, #0]
}
 80113fe:	bf00      	nop
 8011400:	46bd      	mov	sp, r7
 8011402:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011406:	4770      	bx	lr
 8011408:	20000448 	.word	0x20000448

0801140c <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 801140c:	b480      	push	{r7}
 801140e:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 8011410:	4b03      	ldr	r3, [pc, #12]	; (8011420 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 8011412:	2200      	movs	r2, #0
 8011414:	601a      	str	r2, [r3, #0]
}
 8011416:	bf00      	nop
 8011418:	46bd      	mov	sp, r7
 801141a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801141e:	4770      	bx	lr
 8011420:	20000448 	.word	0x20000448

08011424 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 8011424:	b480      	push	{r7}
 8011426:	af00      	add	r7, sp, #0
    return vsync_sem;
 8011428:	4b05      	ldr	r3, [pc, #20]	; (8011440 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 801142a:	681b      	ldr	r3, [r3, #0]
 801142c:	2b00      	cmp	r3, #0
 801142e:	bf14      	ite	ne
 8011430:	2301      	movne	r3, #1
 8011432:	2300      	moveq	r3, #0
 8011434:	b2db      	uxtb	r3, r3
}
 8011436:	4618      	mov	r0, r3
 8011438:	46bd      	mov	sp, r7
 801143a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801143e:	4770      	bx	lr
 8011440:	20000448 	.word	0x20000448

08011444 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 8011444:	b580      	push	{r7, lr}
 8011446:	af00      	add	r7, sp, #0
    if (vsync_sem)
 8011448:	4b0a      	ldr	r3, [pc, #40]	; (8011474 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 801144a:	681b      	ldr	r3, [r3, #0]
 801144c:	2b00      	cmp	r3, #0
 801144e:	bf14      	ite	ne
 8011450:	2301      	movne	r3, #1
 8011452:	2300      	moveq	r3, #0
 8011454:	b2db      	uxtb	r3, r3
 8011456:	2b00      	cmp	r3, #0
 8011458:	d00a      	beq.n	8011470 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 801145a:	4b06      	ldr	r3, [pc, #24]	; (8011474 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 801145c:	2200      	movs	r2, #0
 801145e:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 8011460:	f7f9 fdc2 	bl	800afe8 <_ZN8touchgfx3HAL11getInstanceEv>
 8011464:	4603      	mov	r3, r0
 8011466:	681a      	ldr	r2, [r3, #0]
 8011468:	3270      	adds	r2, #112	; 0x70
 801146a:	6812      	ldr	r2, [r2, #0]
 801146c:	4618      	mov	r0, r3
 801146e:	4790      	blx	r2
    }
}
 8011470:	bf00      	nop
 8011472:	bd80      	pop	{r7, pc}
 8011474:	20000448 	.word	0x20000448

08011478 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 8011478:	b480      	push	{r7}
 801147a:	b083      	sub	sp, #12
 801147c:	af00      	add	r7, sp, #0
 801147e:	6078      	str	r0, [r7, #4]
    {
 8011480:	4a04      	ldr	r2, [pc, #16]	; (8011494 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 8011482:	687b      	ldr	r3, [r7, #4]
 8011484:	601a      	str	r2, [r3, #0]
    }
 8011486:	687b      	ldr	r3, [r7, #4]
 8011488:	4618      	mov	r0, r3
 801148a:	370c      	adds	r7, #12
 801148c:	46bd      	mov	sp, r7
 801148e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011492:	4770      	bx	lr
 8011494:	0802eae8 	.word	0x0802eae8

08011498 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 8011498:	b580      	push	{r7, lr}
 801149a:	b082      	sub	sp, #8
 801149c:	af00      	add	r7, sp, #0
 801149e:	6078      	str	r0, [r7, #4]
    }
 80114a0:	6878      	ldr	r0, [r7, #4]
 80114a2:	f7ff ffe9 	bl	8011478 <_ZN8touchgfx9DMA_QueueD1Ev>
 80114a6:	2104      	movs	r1, #4
 80114a8:	6878      	ldr	r0, [r7, #4]
 80114aa:	f019 f998 	bl	802a7de <_ZdlPvj>
 80114ae:	687b      	ldr	r3, [r7, #4]
 80114b0:	4618      	mov	r0, r3
 80114b2:	3708      	adds	r7, #8
 80114b4:	46bd      	mov	sp, r7
 80114b6:	bd80      	pop	{r7, pc}

080114b8 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    {
        waitForFrameBufferSemaphore();
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
 80114b8:	b480      	push	{r7}
 80114ba:	b083      	sub	sp, #12
 80114bc:	af00      	add	r7, sp, #0
 80114be:	6078      	str	r0, [r7, #4]
    {
    }
 80114c0:	bf00      	nop
 80114c2:	370c      	adds	r7, #12
 80114c4:	46bd      	mov	sp, r7
 80114c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114ca:	4770      	bx	lr

080114cc <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA_Interface implementation. As
     * default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
 80114cc:	b480      	push	{r7}
 80114ce:	b083      	sub	sp, #12
 80114d0:	af00      	add	r7, sp, #0
 80114d2:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 80114d4:	2300      	movs	r3, #0
    }
 80114d6:	4618      	mov	r0, r3
 80114d8:	370c      	adds	r7, #12
 80114da:	46bd      	mov	sp, r7
 80114dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114e0:	4770      	bx	lr
	...

080114e4 <_ZN8touchgfx13DMA_InterfaceD1Ev>:

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 80114e4:	b480      	push	{r7}
 80114e6:	b083      	sub	sp, #12
 80114e8:	af00      	add	r7, sp, #0
 80114ea:	6078      	str	r0, [r7, #4]
    {
 80114ec:	4a04      	ldr	r2, [pc, #16]	; (8011500 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 80114ee:	687b      	ldr	r3, [r7, #4]
 80114f0:	601a      	str	r2, [r3, #0]
    }
 80114f2:	687b      	ldr	r3, [r7, #4]
 80114f4:	4618      	mov	r0, r3
 80114f6:	370c      	adds	r7, #12
 80114f8:	46bd      	mov	sp, r7
 80114fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114fe:	4770      	bx	lr
 8011500:	0802f13c 	.word	0x0802f13c

08011504 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 8011504:	b580      	push	{r7, lr}
 8011506:	b082      	sub	sp, #8
 8011508:	af00      	add	r7, sp, #0
 801150a:	6078      	str	r0, [r7, #4]
    }
 801150c:	6878      	ldr	r0, [r7, #4]
 801150e:	f7ff ffe9 	bl	80114e4 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 8011512:	210c      	movs	r1, #12
 8011514:	6878      	ldr	r0, [r7, #4]
 8011516:	f019 f962 	bl	802a7de <_ZdlPvj>
 801151a:	687b      	ldr	r3, [r7, #4]
 801151c:	4618      	mov	r0, r3
 801151e:	3708      	adds	r7, #8
 8011520:	46bd      	mov	sp, r7
 8011522:	bd80      	pop	{r7, pc}

08011524 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 8011524:	b480      	push	{r7}
 8011526:	b083      	sub	sp, #12
 8011528:	af00      	add	r7, sp, #0
 801152a:	6078      	str	r0, [r7, #4]
 801152c:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 801152e:	4a09      	ldr	r2, [pc, #36]	; (8011554 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 8011530:	687b      	ldr	r3, [r7, #4]
 8011532:	601a      	str	r2, [r3, #0]
 8011534:	687b      	ldr	r3, [r7, #4]
 8011536:	683a      	ldr	r2, [r7, #0]
 8011538:	605a      	str	r2, [r3, #4]
 801153a:	687b      	ldr	r3, [r7, #4]
 801153c:	2200      	movs	r2, #0
 801153e:	721a      	strb	r2, [r3, #8]
 8011540:	687b      	ldr	r3, [r7, #4]
 8011542:	2200      	movs	r2, #0
 8011544:	725a      	strb	r2, [r3, #9]
    {
    }
 8011546:	687b      	ldr	r3, [r7, #4]
 8011548:	4618      	mov	r0, r3
 801154a:	370c      	adds	r7, #12
 801154c:	46bd      	mov	sp, r7
 801154e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011552:	4770      	bx	lr
 8011554:	0802f13c 	.word	0x0802f13c

08011558 <_ZN8STM32DMA18signalDMAInterruptEv>:
    /**
     * @fn virtual void STM32DMA::signalDMAInterrupt();
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
 8011558:	b480      	push	{r7}
 801155a:	b083      	sub	sp, #12
 801155c:	af00      	add	r7, sp, #0
 801155e:	6078      	str	r0, [r7, #4]
    {
    }
 8011560:	bf00      	nop
 8011562:	370c      	adds	r7, #12
 8011564:	46bd      	mov	sp, r7
 8011566:	f85d 7b04 	ldr.w	r7, [sp], #4
 801156a:	4770      	bx	lr

0801156c <_ZN8STM32DMA5flushEv>:
     * @fn virtual void STM32DMA::flush();
     *
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
 801156c:	b480      	push	{r7}
 801156e:	b083      	sub	sp, #12
 8011570:	af00      	add	r7, sp, #0
 8011572:	6078      	str	r0, [r7, #4]
    {
    }
 8011574:	bf00      	nop
 8011576:	370c      	adds	r7, #12
 8011578:	46bd      	mov	sp, r7
 801157a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801157e:	4770      	bx	lr

08011580 <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 8011580:	b580      	push	{r7, lr}
 8011582:	b082      	sub	sp, #8
 8011584:	af00      	add	r7, sp, #0
 8011586:	6078      	str	r0, [r7, #4]
 8011588:	687b      	ldr	r3, [r7, #4]
 801158a:	330c      	adds	r3, #12
 801158c:	4618      	mov	r0, r3
 801158e:	f7fc f8f3 	bl	800d778 <_ZN8touchgfx9colortypeC1Ev>
 8011592:	687b      	ldr	r3, [r7, #4]
 8011594:	4618      	mov	r0, r3
 8011596:	3708      	adds	r7, #8
 8011598:	46bd      	mov	sp, r7
 801159a:	bd80      	pop	{r7, pc}

0801159c <_ZN8STM32DMAC1Ev>:
  */

#include <STM32DMA.hpp>
#include <assert.h>

STM32DMA::STM32DMA()
 801159c:	b580      	push	{r7, lr}
 801159e:	b082      	sub	sp, #8
 80115a0:	af00      	add	r7, sp, #0
 80115a2:	6078      	str	r0, [r7, #4]
    : DMA_Interface(q), q(&b, 1)
 80115a4:	687a      	ldr	r2, [r7, #4]
 80115a6:	687b      	ldr	r3, [r7, #4]
 80115a8:	330c      	adds	r3, #12
 80115aa:	4619      	mov	r1, r3
 80115ac:	4610      	mov	r0, r2
 80115ae:	f7ff ffb9 	bl	8011524 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 80115b2:	4a0b      	ldr	r2, [pc, #44]	; (80115e0 <_ZN8STM32DMAC1Ev+0x44>)
 80115b4:	687b      	ldr	r3, [r7, #4]
 80115b6:	601a      	str	r2, [r3, #0]
 80115b8:	687b      	ldr	r3, [r7, #4]
 80115ba:	f103 000c 	add.w	r0, r3, #12
 80115be:	687b      	ldr	r3, [r7, #4]
 80115c0:	3320      	adds	r3, #32
 80115c2:	2201      	movs	r2, #1
 80115c4:	4619      	mov	r1, r3
 80115c6:	f002 feb9 	bl	801433c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 80115ca:	687b      	ldr	r3, [r7, #4]
 80115cc:	3320      	adds	r3, #32
 80115ce:	4618      	mov	r0, r3
 80115d0:	f7ff ffd6 	bl	8011580 <_ZN8touchgfx6BlitOpC1Ev>
{
}
 80115d4:	687b      	ldr	r3, [r7, #4]
 80115d6:	4618      	mov	r0, r3
 80115d8:	3708      	adds	r7, #8
 80115da:	46bd      	mov	sp, r7
 80115dc:	bd80      	pop	{r7, pc}
 80115de:	bf00      	nop
 80115e0:	0802ea98 	.word	0x0802ea98

080115e4 <_ZN8STM32DMA11getBlitCapsEv>:

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
 80115e4:	b480      	push	{r7}
 80115e6:	b083      	sub	sp, #12
 80115e8:	af00      	add	r7, sp, #0
 80115ea:	6078      	str	r0, [r7, #4]
    return static_cast<touchgfx::BlitOperations>(0);
 80115ec:	2300      	movs	r3, #0
}
 80115ee:	4618      	mov	r0, r3
 80115f0:	370c      	adds	r7, #12
 80115f2:	46bd      	mov	sp, r7
 80115f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80115f8:	4770      	bx	lr
	...

080115fc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 80115fc:	b580      	push	{r7, lr}
 80115fe:	b082      	sub	sp, #8
 8011600:	af00      	add	r7, sp, #0
 8011602:	6078      	str	r0, [r7, #4]
 8011604:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 8011606:	4b03      	ldr	r3, [pc, #12]	; (8011614 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8011608:	4a03      	ldr	r2, [pc, #12]	; (8011618 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 801160a:	2122      	movs	r1, #34	; 0x22
 801160c:	4803      	ldr	r0, [pc, #12]	; (801161c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 801160e:	f019 fed7 	bl	802b3c0 <__assert_func>
 8011612:	bf00      	nop
 8011614:	0802d5fc 	.word	0x0802d5fc
 8011618:	0802d620 	.word	0x0802d620
 801161c:	0802d660 	.word	0x0802d660

08011620 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8011620:	b580      	push	{r7, lr}
 8011622:	b082      	sub	sp, #8
 8011624:	af00      	add	r7, sp, #0
 8011626:	6078      	str	r0, [r7, #4]
 8011628:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 801162a:	4b03      	ldr	r3, [pc, #12]	; (8011638 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 801162c:	4a03      	ldr	r2, [pc, #12]	; (801163c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 801162e:	2127      	movs	r1, #39	; 0x27
 8011630:	4803      	ldr	r0, [pc, #12]	; (8011640 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 8011632:	f019 fec5 	bl	802b3c0 <__assert_func>
 8011636:	bf00      	nop
 8011638:	0802d5fc 	.word	0x0802d5fc
 801163c:	0802d68c 	.word	0x0802d68c
 8011640:	0802d660 	.word	0x0802d660

08011644 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8011644:	b580      	push	{r7, lr}
 8011646:	b082      	sub	sp, #8
 8011648:	af00      	add	r7, sp, #0
 801164a:	6078      	str	r0, [r7, #4]
 801164c:	4a08      	ldr	r2, [pc, #32]	; (8011670 <_ZN8STM32DMAD1Ev+0x2c>)
 801164e:	687b      	ldr	r3, [r7, #4]
 8011650:	601a      	str	r2, [r3, #0]
 8011652:	687b      	ldr	r3, [r7, #4]
 8011654:	330c      	adds	r3, #12
 8011656:	4618      	mov	r0, r3
 8011658:	f000 f81c 	bl	8011694 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 801165c:	687b      	ldr	r3, [r7, #4]
 801165e:	4618      	mov	r0, r3
 8011660:	f7ff ff40 	bl	80114e4 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 8011664:	687b      	ldr	r3, [r7, #4]
 8011666:	4618      	mov	r0, r3
 8011668:	3708      	adds	r7, #8
 801166a:	46bd      	mov	sp, r7
 801166c:	bd80      	pop	{r7, pc}
 801166e:	bf00      	nop
 8011670:	0802ea98 	.word	0x0802ea98

08011674 <_ZN8STM32DMAD0Ev>:
 8011674:	b580      	push	{r7, lr}
 8011676:	b082      	sub	sp, #8
 8011678:	af00      	add	r7, sp, #0
 801167a:	6078      	str	r0, [r7, #4]
 801167c:	6878      	ldr	r0, [r7, #4]
 801167e:	f7ff ffe1 	bl	8011644 <_ZN8STM32DMAD1Ev>
 8011682:	2144      	movs	r1, #68	; 0x44
 8011684:	6878      	ldr	r0, [r7, #4]
 8011686:	f019 f8aa 	bl	802a7de <_ZdlPvj>
 801168a:	687b      	ldr	r3, [r7, #4]
 801168c:	4618      	mov	r0, r3
 801168e:	3708      	adds	r7, #8
 8011690:	46bd      	mov	sp, r7
 8011692:	bd80      	pop	{r7, pc}

08011694 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 8011694:	b580      	push	{r7, lr}
 8011696:	b082      	sub	sp, #8
 8011698:	af00      	add	r7, sp, #0
 801169a:	6078      	str	r0, [r7, #4]
 801169c:	4a05      	ldr	r2, [pc, #20]	; (80116b4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 801169e:	687b      	ldr	r3, [r7, #4]
 80116a0:	601a      	str	r2, [r3, #0]
 80116a2:	687b      	ldr	r3, [r7, #4]
 80116a4:	4618      	mov	r0, r3
 80116a6:	f7ff fee7 	bl	8011478 <_ZN8touchgfx9DMA_QueueD1Ev>
 80116aa:	687b      	ldr	r3, [r7, #4]
 80116ac:	4618      	mov	r0, r3
 80116ae:	3708      	adds	r7, #8
 80116b0:	46bd      	mov	sp, r7
 80116b2:	bd80      	pop	{r7, pc}
 80116b4:	0802f18c 	.word	0x0802f18c

080116b8 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 80116b8:	b580      	push	{r7, lr}
 80116ba:	b082      	sub	sp, #8
 80116bc:	af00      	add	r7, sp, #0
 80116be:	6078      	str	r0, [r7, #4]
 80116c0:	6878      	ldr	r0, [r7, #4]
 80116c2:	f7ff ffe7 	bl	8011694 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 80116c6:	2114      	movs	r1, #20
 80116c8:	6878      	ldr	r0, [r7, #4]
 80116ca:	f019 f888 	bl	802a7de <_ZdlPvj>
 80116ce:	687b      	ldr	r3, [r7, #4]
 80116d0:	4618      	mov	r0, r3
 80116d2:	3708      	adds	r7, #8
 80116d4:	46bd      	mov	sp, r7
 80116d6:	bd80      	pop	{r7, pc}

080116d8 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 80116d8:	b480      	push	{r7}
 80116da:	b083      	sub	sp, #12
 80116dc:	af00      	add	r7, sp, #0
 80116de:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 80116e0:	4a04      	ldr	r2, [pc, #16]	; (80116f4 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 80116e2:	687b      	ldr	r3, [r7, #4]
 80116e4:	6013      	str	r3, [r2, #0]
    }
 80116e6:	bf00      	nop
 80116e8:	370c      	adds	r7, #12
 80116ea:	46bd      	mov	sp, r7
 80116ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80116f0:	4770      	bx	lr
 80116f2:	bf00      	nop
 80116f4:	200022b0 	.word	0x200022b0

080116f8 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 80116f8:	b480      	push	{r7}
 80116fa:	b085      	sub	sp, #20
 80116fc:	af00      	add	r7, sp, #0
 80116fe:	60f8      	str	r0, [r7, #12]
 8011700:	60b9      	str	r1, [r7, #8]
 8011702:	607a      	str	r2, [r7, #4]
 8011704:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8011706:	4a0b      	ldr	r2, [pc, #44]	; (8011734 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 8011708:	68fb      	ldr	r3, [r7, #12]
 801170a:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 801170c:	68fb      	ldr	r3, [r7, #12]
 801170e:	68ba      	ldr	r2, [r7, #8]
 8011710:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 8011712:	68fb      	ldr	r3, [r7, #12]
 8011714:	687a      	ldr	r2, [r7, #4]
 8011716:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 8011718:	68fb      	ldr	r3, [r7, #12]
 801171a:	683a      	ldr	r2, [r7, #0]
 801171c:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 801171e:	68fb      	ldr	r3, [r7, #12]
 8011720:	69ba      	ldr	r2, [r7, #24]
 8011722:	611a      	str	r2, [r3, #16]
    {
    }
 8011724:	68fb      	ldr	r3, [r7, #12]
 8011726:	4618      	mov	r0, r3
 8011728:	3714      	adds	r7, #20
 801172a:	46bd      	mov	sp, r7
 801172c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011730:	4770      	bx	lr
 8011732:	bf00      	nop
 8011734:	0802ebd0 	.word	0x0802ebd0

08011738 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 8011738:	b480      	push	{r7}
 801173a:	b083      	sub	sp, #12
 801173c:	af00      	add	r7, sp, #0
 801173e:	6078      	str	r0, [r7, #4]
    {
 8011740:	4a04      	ldr	r2, [pc, #16]	; (8011754 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 8011742:	687b      	ldr	r3, [r7, #4]
 8011744:	601a      	str	r2, [r3, #0]
    }
 8011746:	687b      	ldr	r3, [r7, #4]
 8011748:	4618      	mov	r0, r3
 801174a:	370c      	adds	r7, #12
 801174c:	46bd      	mov	sp, r7
 801174e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011752:	4770      	bx	lr
 8011754:	0802ebd0 	.word	0x0802ebd0

08011758 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 8011758:	b580      	push	{r7, lr}
 801175a:	b082      	sub	sp, #8
 801175c:	af00      	add	r7, sp, #0
 801175e:	6078      	str	r0, [r7, #4]
    }
 8011760:	6878      	ldr	r0, [r7, #4]
 8011762:	f7ff ffe9 	bl	8011738 <_ZN8touchgfx7MVPHeapD1Ev>
 8011766:	2114      	movs	r1, #20
 8011768:	6878      	ldr	r0, [r7, #4]
 801176a:	f019 f838 	bl	802a7de <_ZdlPvj>
 801176e:	687b      	ldr	r3, [r7, #4]
 8011770:	4618      	mov	r0, r3
 8011772:	3708      	adds	r7, #8
 8011774:	46bd      	mov	sp, r7
 8011776:	bd80      	pop	{r7, pc}

08011778 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 8011778:	b480      	push	{r7}
 801177a:	b083      	sub	sp, #12
 801177c:	af00      	add	r7, sp, #0
 801177e:	6078      	str	r0, [r7, #4]
    {
 8011780:	4a04      	ldr	r2, [pc, #16]	; (8011794 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 8011782:	687b      	ldr	r3, [r7, #4]
 8011784:	601a      	str	r2, [r3, #0]
    }
 8011786:	687b      	ldr	r3, [r7, #4]
 8011788:	4618      	mov	r0, r3
 801178a:	370c      	adds	r7, #12
 801178c:	46bd      	mov	sp, r7
 801178e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011792:	4770      	bx	lr
 8011794:	0802f98c 	.word	0x0802f98c

08011798 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 8011798:	b580      	push	{r7, lr}
 801179a:	b082      	sub	sp, #8
 801179c:	af00      	add	r7, sp, #0
 801179e:	6078      	str	r0, [r7, #4]
    }
 80117a0:	6878      	ldr	r0, [r7, #4]
 80117a2:	f7ff ffe9 	bl	8011778 <_ZN8touchgfx3LCDD1Ev>
 80117a6:	2108      	movs	r1, #8
 80117a8:	6878      	ldr	r0, [r7, #4]
 80117aa:	f019 f818 	bl	802a7de <_ZdlPvj>
 80117ae:	687b      	ldr	r3, [r7, #4]
 80117b0:	4618      	mov	r0, r3
 80117b2:	3708      	adds	r7, #8
 80117b4:	46bd      	mov	sp, r7
 80117b6:	bd80      	pop	{r7, pc}

080117b8 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 80117b8:	b480      	push	{r7}
 80117ba:	b083      	sub	sp, #12
 80117bc:	af00      	add	r7, sp, #0
 80117be:	6078      	str	r0, [r7, #4]
            : startX(0),
 80117c0:	687b      	ldr	r3, [r7, #4]
 80117c2:	2200      	movs	r2, #0
 80117c4:	801a      	strh	r2, [r3, #0]
              startY(0),
 80117c6:	687b      	ldr	r3, [r7, #4]
 80117c8:	2200      	movs	r2, #0
 80117ca:	805a      	strh	r2, [r3, #2]
              downX(0),
 80117cc:	687b      	ldr	r3, [r7, #4]
 80117ce:	2200      	movs	r2, #0
 80117d0:	809a      	strh	r2, [r3, #4]
              downY(0),
 80117d2:	687b      	ldr	r3, [r7, #4]
 80117d4:	2200      	movs	r2, #0
 80117d6:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 80117d8:	687b      	ldr	r3, [r7, #4]
 80117da:	2200      	movs	r2, #0
 80117dc:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 80117de:	687b      	ldr	r3, [r7, #4]
 80117e0:	2200      	movs	r2, #0
 80117e2:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 80117e4:	687b      	ldr	r3, [r7, #4]
 80117e6:	2200      	movs	r2, #0
 80117e8:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 80117ea:	687b      	ldr	r3, [r7, #4]
 80117ec:	2200      	movs	r2, #0
 80117ee:	739a      	strb	r2, [r3, #14]
        {
        }
 80117f0:	687b      	ldr	r3, [r7, #4]
 80117f2:	4618      	mov	r0, r3
 80117f4:	370c      	adds	r7, #12
 80117f6:	46bd      	mov	sp, r7
 80117f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80117fc:	4770      	bx	lr

080117fe <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 80117fe:	b580      	push	{r7, lr}
 8011800:	b082      	sub	sp, #8
 8011802:	af00      	add	r7, sp, #0
 8011804:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 8011806:	687b      	ldr	r3, [r7, #4]
 8011808:	4618      	mov	r0, r3
 801180a:	f7ff ffd5 	bl	80117b8 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 801180e:	687b      	ldr	r3, [r7, #4]
 8011810:	2200      	movs	r2, #0
 8011812:	611a      	str	r2, [r3, #16]
 8011814:	687b      	ldr	r3, [r7, #4]
 8011816:	2200      	movs	r2, #0
 8011818:	829a      	strh	r2, [r3, #20]
    {
    }
 801181a:	687b      	ldr	r3, [r7, #4]
 801181c:	4618      	mov	r0, r3
 801181e:	3708      	adds	r7, #8
 8011820:	46bd      	mov	sp, r7
 8011822:	bd80      	pop	{r7, pc}

08011824 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 8011824:	b580      	push	{r7, lr}
 8011826:	b084      	sub	sp, #16
 8011828:	af00      	add	r7, sp, #0
 801182a:	60f8      	str	r0, [r7, #12]
 801182c:	60b9      	str	r1, [r7, #8]
 801182e:	607a      	str	r2, [r7, #4]
 8011830:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 8011832:	4a55      	ldr	r2, [pc, #340]	; (8011988 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 8011834:	68fb      	ldr	r3, [r7, #12]
 8011836:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 8011838:	68fb      	ldr	r3, [r7, #12]
 801183a:	68ba      	ldr	r2, [r7, #8]
 801183c:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 801183e:	68fb      	ldr	r3, [r7, #12]
 8011840:	687a      	ldr	r2, [r7, #4]
 8011842:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 8011844:	68fb      	ldr	r3, [r7, #12]
 8011846:	683a      	ldr	r2, [r7, #0]
 8011848:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 801184a:	68fb      	ldr	r3, [r7, #12]
 801184c:	2200      	movs	r2, #0
 801184e:	611a      	str	r2, [r3, #16]
          buttonController(0),
 8011850:	68fb      	ldr	r3, [r7, #12]
 8011852:	2200      	movs	r2, #0
 8011854:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 8011856:	68fb      	ldr	r3, [r7, #12]
 8011858:	2200      	movs	r2, #0
 801185a:	619a      	str	r2, [r3, #24]
          gestures(),
 801185c:	68fb      	ldr	r3, [r7, #12]
 801185e:	331c      	adds	r3, #28
 8011860:	4618      	mov	r0, r3
 8011862:	f7ff ffcc 	bl	80117fe <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 8011866:	68fb      	ldr	r3, [r7, #12]
 8011868:	2200      	movs	r2, #0
 801186a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          taskDelayFunc(0),
 801186e:	68fb      	ldr	r3, [r7, #12]
 8011870:	2200      	movs	r2, #0
 8011872:	639a      	str	r2, [r3, #56]	; 0x38
          frameBuffer0(0),
 8011874:	68fb      	ldr	r3, [r7, #12]
 8011876:	2200      	movs	r2, #0
 8011878:	63da      	str	r2, [r3, #60]	; 0x3c
          frameBuffer1(0),
 801187a:	68fb      	ldr	r3, [r7, #12]
 801187c:	2200      	movs	r2, #0
 801187e:	641a      	str	r2, [r3, #64]	; 0x40
          frameBuffer2(0),
 8011880:	68fb      	ldr	r3, [r7, #12]
 8011882:	2200      	movs	r2, #0
 8011884:	645a      	str	r2, [r3, #68]	; 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8011886:	68fb      	ldr	r3, [r7, #12]
 8011888:	2200      	movs	r2, #0
 801188a:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
          fingerSize(1),
 801188e:	68fb      	ldr	r3, [r7, #12]
 8011890:	2201      	movs	r2, #1
 8011892:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
          lockDMAToPorch(false),
 8011896:	68fb      	ldr	r3, [r7, #12]
 8011898:	2200      	movs	r2, #0
 801189a:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
          frameBufferUpdatedThisFrame(false),
 801189e:	68fb      	ldr	r3, [r7, #12]
 80118a0:	2200      	movs	r2, #0
 80118a2:	f883 204b 	strb.w	r2, [r3, #75]	; 0x4b
          auxiliaryLCD(0),
 80118a6:	68fb      	ldr	r3, [r7, #12]
 80118a8:	2200      	movs	r2, #0
 80118aa:	64da      	str	r2, [r3, #76]	; 0x4c
          partialFrameBufferRect(),
 80118ac:	68fb      	ldr	r3, [r7, #12]
 80118ae:	3350      	adds	r3, #80	; 0x50
 80118b0:	4618      	mov	r0, r3
 80118b2:	f7f8 f9e4 	bl	8009c7e <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 80118b6:	68fb      	ldr	r3, [r7, #12]
 80118b8:	2200      	movs	r2, #0
 80118ba:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          listener(0),
 80118be:	68fb      	ldr	r3, [r7, #12]
 80118c0:	2200      	movs	r2, #0
 80118c2:	65da      	str	r2, [r3, #92]	; 0x5c
          lastX(0),
 80118c4:	68fb      	ldr	r3, [r7, #12]
 80118c6:	2200      	movs	r2, #0
 80118c8:	661a      	str	r2, [r3, #96]	; 0x60
          lastY(0),
 80118ca:	68fb      	ldr	r3, [r7, #12]
 80118cc:	2200      	movs	r2, #0
 80118ce:	665a      	str	r2, [r3, #100]	; 0x64
          touchSampleRate(1),
 80118d0:	68fb      	ldr	r3, [r7, #12]
 80118d2:	2201      	movs	r2, #1
 80118d4:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
          mcuLoadPct(0),
 80118d8:	68fb      	ldr	r3, [r7, #12]
 80118da:	2200      	movs	r2, #0
 80118dc:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
          vSyncCnt(0),
 80118e0:	68fb      	ldr	r3, [r7, #12]
 80118e2:	2200      	movs	r2, #0
 80118e4:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
          vSyncForFrame(1),
 80118e8:	68fb      	ldr	r3, [r7, #12]
 80118ea:	2201      	movs	r2, #1
 80118ec:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
          vSyncCompensationEnabled(false),
 80118f0:	68fb      	ldr	r3, [r7, #12]
 80118f2:	2200      	movs	r2, #0
 80118f4:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
          clientDirty(false),
 80118f8:	68fb      	ldr	r3, [r7, #12]
 80118fa:	2200      	movs	r2, #0
 80118fc:	f883 206d 	strb.w	r2, [r3, #109]	; 0x6d
          swapRequested(false),
 8011900:	68fb      	ldr	r3, [r7, #12]
 8011902:	2200      	movs	r2, #0
 8011904:	f883 206e 	strb.w	r2, [r3, #110]	; 0x6e
          lastTouched(false),
 8011908:	68fb      	ldr	r3, [r7, #12]
 801190a:	2200      	movs	r2, #0
 801190c:	f883 206f 	strb.w	r2, [r3, #111]	; 0x6f
          updateMCULoad(0),
 8011910:	68fb      	ldr	r3, [r7, #12]
 8011912:	2200      	movs	r2, #0
 8011914:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          cc_begin(0),
 8011918:	68fb      	ldr	r3, [r7, #12]
 801191a:	2200      	movs	r2, #0
 801191c:	675a      	str	r2, [r3, #116]	; 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 801191e:	68fb      	ldr	r3, [r7, #12]
 8011920:	2200      	movs	r2, #0
 8011922:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
          displayOrientationChangeRequested(false),
 8011926:	68fb      	ldr	r3, [r7, #12]
 8011928:	2200      	movs	r2, #0
 801192a:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
          useDMAAcceleration(true),
 801192e:	68fb      	ldr	r3, [r7, #12]
 8011930:	2201      	movs	r2, #1
 8011932:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
          lastRenderMethod(HARDWARE)
 8011936:	68fb      	ldr	r3, [r7, #12]
 8011938:	2201      	movs	r2, #1
 801193a:	f883 207b 	strb.w	r2, [r3, #123]	; 0x7b
        instance = this;
 801193e:	4a13      	ldr	r2, [pc, #76]	; (801198c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 8011940:	68fb      	ldr	r3, [r7, #12]
 8011942:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8011944:	4a12      	ldr	r2, [pc, #72]	; (8011990 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 8011946:	8b3b      	ldrh	r3, [r7, #24]
 8011948:	8013      	strh	r3, [r2, #0]
 801194a:	4b11      	ldr	r3, [pc, #68]	; (8011990 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 801194c:	881a      	ldrh	r2, [r3, #0]
 801194e:	4b11      	ldr	r3, [pc, #68]	; (8011994 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 8011950:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8011952:	4a11      	ldr	r2, [pc, #68]	; (8011998 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 8011954:	8bbb      	ldrh	r3, [r7, #28]
 8011956:	8013      	strh	r3, [r2, #0]
 8011958:	4b0f      	ldr	r3, [pc, #60]	; (8011998 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 801195a:	881a      	ldrh	r2, [r3, #0]
 801195c:	4b0f      	ldr	r3, [pc, #60]	; (801199c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 801195e:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 8011960:	4b0f      	ldr	r3, [pc, #60]	; (80119a0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 8011962:	2200      	movs	r2, #0
 8011964:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8011966:	8b3a      	ldrh	r2, [r7, #24]
 8011968:	8bbb      	ldrh	r3, [r7, #28]
 801196a:	429a      	cmp	r2, r3
 801196c:	bf34      	ite	cc
 801196e:	2301      	movcc	r3, #1
 8011970:	2300      	movcs	r3, #0
 8011972:	b2db      	uxtb	r3, r3
 8011974:	461a      	mov	r2, r3
 8011976:	68fb      	ldr	r3, [r7, #12]
 8011978:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 801197c:	68fb      	ldr	r3, [r7, #12]
 801197e:	4618      	mov	r0, r3
 8011980:	3710      	adds	r7, #16
 8011982:	46bd      	mov	sp, r7
 8011984:	bd80      	pop	{r7, pc}
 8011986:	bf00      	nop
 8011988:	0802f064 	.word	0x0802f064
 801198c:	2000224c 	.word	0x2000224c
 8011990:	20002240 	.word	0x20002240
 8011994:	20002246 	.word	0x20002246
 8011998:	20002242 	.word	0x20002242
 801199c:	20002248 	.word	0x20002248
 80119a0:	20002244 	.word	0x20002244

080119a4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 80119a4:	b580      	push	{r7, lr}
 80119a6:	b082      	sub	sp, #8
 80119a8:	af00      	add	r7, sp, #0
 80119aa:	6078      	str	r0, [r7, #4]
 80119ac:	6039      	str	r1, [r7, #0]
    {
        app.gotoPressureScreenScreenNoTransition();
 80119ae:	683b      	ldr	r3, [r7, #0]
 80119b0:	4618      	mov	r0, r3
 80119b2:	f7f9 fde7 	bl	800b584 <_ZN23FrontendApplicationBase36gotoPressureScreenScreenNoTransitionEv>
    }
 80119b6:	bf00      	nop
 80119b8:	3708      	adds	r7, #8
 80119ba:	46bd      	mov	sp, r7
 80119bc:	bd80      	pop	{r7, pc}
	...

080119c0 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 80119c0:	b580      	push	{r7, lr}
 80119c2:	b086      	sub	sp, #24
 80119c4:	af02      	add	r7, sp, #8
 80119c6:	60f8      	str	r0, [r7, #12]
 80119c8:	60b9      	str	r1, [r7, #8]
 80119ca:	607a      	str	r2, [r7, #4]
 80119cc:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 80119ce:	68f8      	ldr	r0, [r7, #12]
 80119d0:	69bb      	ldr	r3, [r7, #24]
 80119d2:	9300      	str	r3, [sp, #0]
 80119d4:	683b      	ldr	r3, [r7, #0]
 80119d6:	687a      	ldr	r2, [r7, #4]
 80119d8:	68b9      	ldr	r1, [r7, #8]
 80119da:	f7ff fe8d 	bl	80116f8 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 80119de:	4a04      	ldr	r2, [pc, #16]	; (80119f0 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 80119e0:	68fb      	ldr	r3, [r7, #12]
 80119e2:	601a      	str	r2, [r3, #0]
    {

    }
 80119e4:	68fb      	ldr	r3, [r7, #12]
 80119e6:	4618      	mov	r0, r3
 80119e8:	3710      	adds	r7, #16
 80119ea:	46bd      	mov	sp, r7
 80119ec:	bd80      	pop	{r7, pc}
 80119ee:	bf00      	nop
 80119f0:	0802ebbc 	.word	0x0802ebbc

080119f4 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80119f4:	b580      	push	{r7, lr}
 80119f6:	af00      	add	r7, sp, #0
 80119f8:	4801      	ldr	r0, [pc, #4]	; (8011a00 <__tcf_0+0xc>)
 80119fa:	f000 f969 	bl	8011cd0 <_ZN12FrontendHeapD1Ev>
 80119fe:	bd80      	pop	{r7, pc}
 8011a00:	2000044c 	.word	0x2000044c

08011a04 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 8011a04:	b580      	push	{r7, lr}
 8011a06:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 8011a08:	4b11      	ldr	r3, [pc, #68]	; (8011a50 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8011a0a:	681b      	ldr	r3, [r3, #0]
 8011a0c:	f3bf 8f5b 	dmb	ish
 8011a10:	f003 0301 	and.w	r3, r3, #1
 8011a14:	2b00      	cmp	r3, #0
 8011a16:	bf0c      	ite	eq
 8011a18:	2301      	moveq	r3, #1
 8011a1a:	2300      	movne	r3, #0
 8011a1c:	b2db      	uxtb	r3, r3
 8011a1e:	2b00      	cmp	r3, #0
 8011a20:	d013      	beq.n	8011a4a <_ZN12FrontendHeap11getInstanceEv+0x46>
 8011a22:	480b      	ldr	r0, [pc, #44]	; (8011a50 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8011a24:	f018 fedd 	bl	802a7e2 <__cxa_guard_acquire>
 8011a28:	4603      	mov	r3, r0
 8011a2a:	2b00      	cmp	r3, #0
 8011a2c:	bf14      	ite	ne
 8011a2e:	2301      	movne	r3, #1
 8011a30:	2300      	moveq	r3, #0
 8011a32:	b2db      	uxtb	r3, r3
 8011a34:	2b00      	cmp	r3, #0
 8011a36:	d008      	beq.n	8011a4a <_ZN12FrontendHeap11getInstanceEv+0x46>
 8011a38:	4806      	ldr	r0, [pc, #24]	; (8011a54 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 8011a3a:	f000 f867 	bl	8011b0c <_ZN12FrontendHeapC1Ev>
 8011a3e:	4806      	ldr	r0, [pc, #24]	; (8011a58 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 8011a40:	f019 fcdc 	bl	802b3fc <atexit>
 8011a44:	4802      	ldr	r0, [pc, #8]	; (8011a50 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8011a46:	f018 fed8 	bl	802a7fa <__cxa_guard_release>
        return instance;
 8011a4a:	4b02      	ldr	r3, [pc, #8]	; (8011a54 <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 8011a4c:	4618      	mov	r0, r3
 8011a4e:	bd80      	pop	{r7, pc}
 8011a50:	20000a48 	.word	0x20000a48
 8011a54:	2000044c 	.word	0x2000044c
 8011a58:	080119f5 	.word	0x080119f5

08011a5c <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 8011a5c:	b580      	push	{r7, lr}
 8011a5e:	b082      	sub	sp, #8
 8011a60:	af00      	add	r7, sp, #0
 8011a62:	6078      	str	r0, [r7, #4]
 8011a64:	4a05      	ldr	r2, [pc, #20]	; (8011a7c <_ZN16FrontendHeapBaseD1Ev+0x20>)
 8011a66:	687b      	ldr	r3, [r7, #4]
 8011a68:	601a      	str	r2, [r3, #0]
 8011a6a:	687b      	ldr	r3, [r7, #4]
 8011a6c:	4618      	mov	r0, r3
 8011a6e:	f7ff fe63 	bl	8011738 <_ZN8touchgfx7MVPHeapD1Ev>
 8011a72:	687b      	ldr	r3, [r7, #4]
 8011a74:	4618      	mov	r0, r3
 8011a76:	3708      	adds	r7, #8
 8011a78:	46bd      	mov	sp, r7
 8011a7a:	bd80      	pop	{r7, pc}
 8011a7c:	0802ebbc 	.word	0x0802ebbc

08011a80 <_ZN16FrontendHeapBaseD0Ev>:
 8011a80:	b580      	push	{r7, lr}
 8011a82:	b082      	sub	sp, #8
 8011a84:	af00      	add	r7, sp, #0
 8011a86:	6078      	str	r0, [r7, #4]
 8011a88:	6878      	ldr	r0, [r7, #4]
 8011a8a:	f7ff ffe7 	bl	8011a5c <_ZN16FrontendHeapBaseD1Ev>
 8011a8e:	2114      	movs	r1, #20
 8011a90:	6878      	ldr	r0, [r7, #4]
 8011a92:	f018 fea4 	bl	802a7de <_ZdlPvj>
 8011a96:	687b      	ldr	r3, [r7, #4]
 8011a98:	4618      	mov	r0, r3
 8011a9a:	3708      	adds	r7, #8
 8011a9c:	46bd      	mov	sp, r7
 8011a9e:	bd80      	pop	{r7, pc}

08011aa0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 8011aa0:	b580      	push	{r7, lr}
 8011aa2:	b082      	sub	sp, #8
 8011aa4:	af00      	add	r7, sp, #0
 8011aa6:	6078      	str	r0, [r7, #4]
 8011aa8:	687b      	ldr	r3, [r7, #4]
 8011aaa:	4618      	mov	r0, r3
 8011aac:	f000 ff52 	bl	8012954 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8011ab0:	4a03      	ldr	r2, [pc, #12]	; (8011ac0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8011ab2:	687b      	ldr	r3, [r7, #4]
 8011ab4:	601a      	str	r2, [r3, #0]
 8011ab6:	687b      	ldr	r3, [r7, #4]
 8011ab8:	4618      	mov	r0, r3
 8011aba:	3708      	adds	r7, #8
 8011abc:	46bd      	mov	sp, r7
 8011abe:	bd80      	pop	{r7, pc}
 8011ac0:	0802eb88 	.word	0x0802eb88

08011ac4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 8011ac4:	b580      	push	{r7, lr}
 8011ac6:	b082      	sub	sp, #8
 8011ac8:	af00      	add	r7, sp, #0
 8011aca:	6078      	str	r0, [r7, #4]
 8011acc:	687b      	ldr	r3, [r7, #4]
 8011ace:	4618      	mov	r0, r3
 8011ad0:	f000 ff40 	bl	8012954 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8011ad4:	4a03      	ldr	r2, [pc, #12]	; (8011ae4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8011ad6:	687b      	ldr	r3, [r7, #4]
 8011ad8:	601a      	str	r2, [r3, #0]
 8011ada:	687b      	ldr	r3, [r7, #4]
 8011adc:	4618      	mov	r0, r3
 8011ade:	3708      	adds	r7, #8
 8011ae0:	46bd      	mov	sp, r7
 8011ae2:	bd80      	pop	{r7, pc}
 8011ae4:	0802eb54 	.word	0x0802eb54

08011ae8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EEC1Ev>:
 8011ae8:	b580      	push	{r7, lr}
 8011aea:	b082      	sub	sp, #8
 8011aec:	af00      	add	r7, sp, #0
 8011aee:	6078      	str	r0, [r7, #4]
 8011af0:	687b      	ldr	r3, [r7, #4]
 8011af2:	4618      	mov	r0, r3
 8011af4:	f000 ff2e 	bl	8012954 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8011af8:	4a03      	ldr	r2, [pc, #12]	; (8011b08 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EEC1Ev+0x20>)
 8011afa:	687b      	ldr	r3, [r7, #4]
 8011afc:	601a      	str	r2, [r3, #0]
 8011afe:	687b      	ldr	r3, [r7, #4]
 8011b00:	4618      	mov	r0, r3
 8011b02:	3708      	adds	r7, #8
 8011b04:	46bd      	mov	sp, r7
 8011b06:	bd80      	pop	{r7, pc}
 8011b08:	0802eb20 	.word	0x0802eb20

08011b0c <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8011b0c:	b590      	push	{r4, r7, lr}
 8011b0e:	b085      	sub	sp, #20
 8011b10:	af02      	add	r7, sp, #8
 8011b12:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 8011b14:	6878      	ldr	r0, [r7, #4]
 8011b16:	687b      	ldr	r3, [r7, #4]
 8011b18:	f103 0114 	add.w	r1, r3, #20
 8011b1c:	687b      	ldr	r3, [r7, #4]
 8011b1e:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 8011b22:	687b      	ldr	r3, [r7, #4]
 8011b24:	f503 6488 	add.w	r4, r3, #1088	; 0x440
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8011b28:	687b      	ldr	r3, [r7, #4]
 8011b2a:	f503 6394 	add.w	r3, r3, #1184	; 0x4a0
                     app(model, *this)
 8011b2e:	9300      	str	r3, [sp, #0]
 8011b30:	4623      	mov	r3, r4
 8011b32:	f7ff ff45 	bl	80119c0 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 8011b36:	4a18      	ldr	r2, [pc, #96]	; (8011b98 <_ZN12FrontendHeapC1Ev+0x8c>)
 8011b38:	687b      	ldr	r3, [r7, #4]
 8011b3a:	601a      	str	r2, [r3, #0]
 8011b3c:	687b      	ldr	r3, [r7, #4]
 8011b3e:	3314      	adds	r3, #20
 8011b40:	4618      	mov	r0, r3
 8011b42:	f7ff ffad 	bl	8011aa0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8011b46:	687b      	ldr	r3, [r7, #4]
 8011b48:	332c      	adds	r3, #44	; 0x2c
 8011b4a:	4618      	mov	r0, r3
 8011b4c:	f7ff ffba 	bl	8011ac4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8011b50:	687b      	ldr	r3, [r7, #4]
 8011b52:	f503 6388 	add.w	r3, r3, #1088	; 0x440
 8011b56:	4618      	mov	r0, r3
 8011b58:	f7ff ffc6 	bl	8011ae8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EEC1Ev>
 8011b5c:	687b      	ldr	r3, [r7, #4]
 8011b5e:	f503 6391 	add.w	r3, r3, #1160	; 0x488
 8011b62:	4618      	mov	r0, r3
 8011b64:	f7fe fea0 	bl	80108a8 <_ZN5ModelC1Ev>
 8011b68:	687b      	ldr	r3, [r7, #4]
 8011b6a:	f503 6094 	add.w	r0, r3, #1184	; 0x4a0
 8011b6e:	687b      	ldr	r3, [r7, #4]
 8011b70:	f503 6391 	add.w	r3, r3, #1160	; 0x488
 8011b74:	687a      	ldr	r2, [r7, #4]
 8011b76:	4619      	mov	r1, r3
 8011b78:	f7fe fcdc 	bl	8010534 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 8011b7c:	687a      	ldr	r2, [r7, #4]
 8011b7e:	687b      	ldr	r3, [r7, #4]
 8011b80:	f503 6394 	add.w	r3, r3, #1184	; 0x4a0
 8011b84:	4619      	mov	r1, r3
 8011b86:	4610      	mov	r0, r2
 8011b88:	f7ff ff0c 	bl	80119a4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 8011b8c:	687b      	ldr	r3, [r7, #4]
 8011b8e:	4618      	mov	r0, r3
 8011b90:	370c      	adds	r7, #12
 8011b92:	46bd      	mov	sp, r7
 8011b94:	bd90      	pop	{r4, r7, pc}
 8011b96:	bf00      	nop
 8011b98:	0802eb0c 	.word	0x0802eb0c

08011b9c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 8011b9c:	b580      	push	{r7, lr}
 8011b9e:	b086      	sub	sp, #24
 8011ba0:	af02      	add	r7, sp, #8
 8011ba2:	60f8      	str	r0, [r7, #12]
 8011ba4:	60b9      	str	r1, [r7, #8]
 8011ba6:	607a      	str	r2, [r7, #4]
 8011ba8:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 8011baa:	68f8      	ldr	r0, [r7, #12]
 8011bac:	8bbb      	ldrh	r3, [r7, #28]
 8011bae:	9301      	str	r3, [sp, #4]
 8011bb0:	8b3b      	ldrh	r3, [r7, #24]
 8011bb2:	9300      	str	r3, [sp, #0]
 8011bb4:	683b      	ldr	r3, [r7, #0]
 8011bb6:	687a      	ldr	r2, [r7, #4]
 8011bb8:	68b9      	ldr	r1, [r7, #8]
 8011bba:	f7ff fe33 	bl	8011824 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 8011bbe:	4a04      	ldr	r2, [pc, #16]	; (8011bd0 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8011bc0:	68fb      	ldr	r3, [r7, #12]
 8011bc2:	601a      	str	r2, [r3, #0]
    }
 8011bc4:	68fb      	ldr	r3, [r7, #12]
 8011bc6:	4618      	mov	r0, r3
 8011bc8:	3710      	adds	r7, #16
 8011bca:	46bd      	mov	sp, r7
 8011bcc:	bd80      	pop	{r7, pc}
 8011bce:	bf00      	nop
 8011bd0:	0802ec0c 	.word	0x0802ec0c

08011bd4 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8011bd4:	b580      	push	{r7, lr}
 8011bd6:	b086      	sub	sp, #24
 8011bd8:	af02      	add	r7, sp, #8
 8011bda:	60f8      	str	r0, [r7, #12]
 8011bdc:	60b9      	str	r1, [r7, #8]
 8011bde:	607a      	str	r2, [r7, #4]
 8011be0:	603b      	str	r3, [r7, #0]
 8011be2:	68f8      	ldr	r0, [r7, #12]
 8011be4:	8bbb      	ldrh	r3, [r7, #28]
 8011be6:	9301      	str	r3, [sp, #4]
 8011be8:	8b3b      	ldrh	r3, [r7, #24]
 8011bea:	9300      	str	r3, [sp, #0]
 8011bec:	683b      	ldr	r3, [r7, #0]
 8011bee:	687a      	ldr	r2, [r7, #4]
 8011bf0:	68b9      	ldr	r1, [r7, #8]
 8011bf2:	f7ff ffd3 	bl	8011b9c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 8011bf6:	4a04      	ldr	r2, [pc, #16]	; (8011c08 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8011bf8:	68fb      	ldr	r3, [r7, #12]
 8011bfa:	601a      	str	r2, [r3, #0]
    }
 8011bfc:	68fb      	ldr	r3, [r7, #12]
 8011bfe:	4618      	mov	r0, r3
 8011c00:	3710      	adds	r7, #16
 8011c02:	46bd      	mov	sp, r7
 8011c04:	bd80      	pop	{r7, pc}
 8011c06:	bf00      	nop
 8011c08:	0802e9c0 	.word	0x0802e9c0

08011c0c <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 8011c0c:	b480      	push	{r7}
 8011c0e:	b083      	sub	sp, #12
 8011c10:	af00      	add	r7, sp, #0
 8011c12:	6078      	str	r0, [r7, #4]
 8011c14:	4a04      	ldr	r2, [pc, #16]	; (8011c28 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 8011c16:	687b      	ldr	r3, [r7, #4]
 8011c18:	601a      	str	r2, [r3, #0]
 8011c1a:	687b      	ldr	r3, [r7, #4]
 8011c1c:	4618      	mov	r0, r3
 8011c1e:	370c      	adds	r7, #12
 8011c20:	46bd      	mov	sp, r7
 8011c22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011c26:	4770      	bx	lr
 8011c28:	0802e9a8 	.word	0x0802e9a8

08011c2c <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 8011c2c:	b580      	push	{r7, lr}
 8011c2e:	b082      	sub	sp, #8
 8011c30:	af00      	add	r7, sp, #0
 8011c32:	6078      	str	r0, [r7, #4]
 8011c34:	687b      	ldr	r3, [r7, #4]
 8011c36:	4618      	mov	r0, r3
 8011c38:	f7ff ffe8 	bl	8011c0c <_ZN8touchgfx15TouchControllerC1Ev>
 8011c3c:	4a03      	ldr	r2, [pc, #12]	; (8011c4c <_ZN20STM32TouchControllerC1Ev+0x20>)
 8011c3e:	687b      	ldr	r3, [r7, #4]
 8011c40:	601a      	str	r2, [r3, #0]
 8011c42:	687b      	ldr	r3, [r7, #4]
 8011c44:	4618      	mov	r0, r3
 8011c46:	3708      	adds	r7, #8
 8011c48:	46bd      	mov	sp, r7
 8011c4a:	bd80      	pop	{r7, pc}
 8011c4c:	0802e990 	.word	0x0802e990

08011c50 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8011c50:	b590      	push	{r4, r7, lr}
 8011c52:	b085      	sub	sp, #20
 8011c54:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8011c56:	f7fe f8a1 	bl	800fd9c <_ZN14BitmapDatabase11getInstanceEv>
 8011c5a:	4604      	mov	r4, r0
 8011c5c:	f7fe f8a8 	bl	800fdb0 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8011c60:	4603      	mov	r3, r0
 8011c62:	4619      	mov	r1, r3
 8011c64:	2300      	movs	r3, #0
 8011c66:	9300      	str	r3, [sp, #0]
 8011c68:	2300      	movs	r3, #0
 8011c6a:	2200      	movs	r2, #0
 8011c6c:	4620      	mov	r0, r4
 8011c6e:	f00a fe47 	bl	801c900 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 8011c72:	4809      	ldr	r0, [pc, #36]	; (8011c98 <touchgfx_init+0x48>)
 8011c74:	f7ff fd30 	bl	80116d8 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 8011c78:	2000      	movs	r0, #0
 8011c7a:	f7fe f9dd 	bl	8010038 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8011c7e:	4807      	ldr	r0, [pc, #28]	; (8011c9c <touchgfx_init+0x4c>)
 8011c80:	f00a fda6 	bl	801c7d0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 8011c84:	f7ff febe 	bl	8011a04 <_ZN12FrontendHeap11getInstanceEv>
 8011c88:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8011c8a:	4805      	ldr	r0, [pc, #20]	; (8011ca0 <touchgfx_init+0x50>)
 8011c8c:	f7ff fab4 	bl	80111f8 <_ZN11TouchGFXHAL10initializeEv>
}
 8011c90:	bf00      	nop
 8011c92:	370c      	adds	r7, #12
 8011c94:	46bd      	mov	sp, r7
 8011c96:	bd90      	pop	{r4, r7, pc}
 8011c98:	20000b18 	.word	0x20000b18
 8011c9c:	20000018 	.word	0x20000018
 8011ca0:	20000b1c 	.word	0x20000b1c

08011ca4 <touchgfx_components_init>:

void touchgfx_components_init()
{
 8011ca4:	b480      	push	{r7}
 8011ca6:	af00      	add	r7, sp, #0
}
 8011ca8:	bf00      	nop
 8011caa:	46bd      	mov	sp, r7
 8011cac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011cb0:	4770      	bx	lr
	...

08011cb4 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 8011cb4:	b580      	push	{r7, lr}
 8011cb6:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
     if (OSWrappers::isVSyncAvailable())
 8011cb8:	f7ff fbb4 	bl	8011424 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 8011cbc:	4603      	mov	r3, r0
 8011cbe:	2b00      	cmp	r3, #0
 8011cc0:	d002      	beq.n	8011cc8 <touchgfx_taskEntry+0x14>
     {
         hal.backPorchExited();
 8011cc2:	4802      	ldr	r0, [pc, #8]	; (8011ccc <touchgfx_taskEntry+0x18>)
 8011cc4:	f7ff f96a 	bl	8010f9c <_ZN8touchgfx3HAL15backPorchExitedEv>
     }
}
 8011cc8:	bf00      	nop
 8011cca:	bd80      	pop	{r7, pc}
 8011ccc:	20000b1c 	.word	0x20000b1c

08011cd0 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 8011cd0:	b580      	push	{r7, lr}
 8011cd2:	b082      	sub	sp, #8
 8011cd4:	af00      	add	r7, sp, #0
 8011cd6:	6078      	str	r0, [r7, #4]
 8011cd8:	4a10      	ldr	r2, [pc, #64]	; (8011d1c <_ZN12FrontendHeapD1Ev+0x4c>)
 8011cda:	687b      	ldr	r3, [r7, #4]
 8011cdc:	601a      	str	r2, [r3, #0]
 8011cde:	687b      	ldr	r3, [r7, #4]
 8011ce0:	f503 6394 	add.w	r3, r3, #1184	; 0x4a0
 8011ce4:	4618      	mov	r0, r3
 8011ce6:	f7fe fbef 	bl	80104c8 <_ZN19FrontendApplicationD1Ev>
 8011cea:	687b      	ldr	r3, [r7, #4]
 8011cec:	f503 6388 	add.w	r3, r3, #1088	; 0x440
 8011cf0:	4618      	mov	r0, r3
 8011cf2:	f000 f827 	bl	8011d44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8011cf6:	687b      	ldr	r3, [r7, #4]
 8011cf8:	332c      	adds	r3, #44	; 0x2c
 8011cfa:	4618      	mov	r0, r3
 8011cfc:	f000 f844 	bl	8011d88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8011d00:	687b      	ldr	r3, [r7, #4]
 8011d02:	3314      	adds	r3, #20
 8011d04:	4618      	mov	r0, r3
 8011d06:	f000 f863 	bl	8011dd0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8011d0a:	687b      	ldr	r3, [r7, #4]
 8011d0c:	4618      	mov	r0, r3
 8011d0e:	f7ff fea5 	bl	8011a5c <_ZN16FrontendHeapBaseD1Ev>
 8011d12:	687b      	ldr	r3, [r7, #4]
 8011d14:	4618      	mov	r0, r3
 8011d16:	3708      	adds	r7, #8
 8011d18:	46bd      	mov	sp, r7
 8011d1a:	bd80      	pop	{r7, pc}
 8011d1c:	0802eb0c 	.word	0x0802eb0c

08011d20 <_ZN12FrontendHeapD0Ev>:
 8011d20:	b580      	push	{r7, lr}
 8011d22:	b082      	sub	sp, #8
 8011d24:	af00      	add	r7, sp, #0
 8011d26:	6078      	str	r0, [r7, #4]
 8011d28:	6878      	ldr	r0, [r7, #4]
 8011d2a:	f7ff ffd1 	bl	8011cd0 <_ZN12FrontendHeapD1Ev>
 8011d2e:	f240 51fc 	movw	r1, #1532	; 0x5fc
 8011d32:	6878      	ldr	r0, [r7, #4]
 8011d34:	f018 fd53 	bl	802a7de <_ZdlPvj>
 8011d38:	687b      	ldr	r3, [r7, #4]
 8011d3a:	4618      	mov	r0, r3
 8011d3c:	3708      	adds	r7, #8
 8011d3e:	46bd      	mov	sp, r7
 8011d40:	bd80      	pop	{r7, pc}
	...

08011d44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
 8011d44:	b580      	push	{r7, lr}
 8011d46:	b082      	sub	sp, #8
 8011d48:	af00      	add	r7, sp, #0
 8011d4a:	6078      	str	r0, [r7, #4]
 8011d4c:	4a05      	ldr	r2, [pc, #20]	; (8011d64 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x20>)
 8011d4e:	687b      	ldr	r3, [r7, #4]
 8011d50:	601a      	str	r2, [r3, #0]
 8011d52:	687b      	ldr	r3, [r7, #4]
 8011d54:	4618      	mov	r0, r3
 8011d56:	f000 fdfc 	bl	8012952 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8011d5a:	687b      	ldr	r3, [r7, #4]
 8011d5c:	4618      	mov	r0, r3
 8011d5e:	3708      	adds	r7, #8
 8011d60:	46bd      	mov	sp, r7
 8011d62:	bd80      	pop	{r7, pc}
 8011d64:	0802eb20 	.word	0x0802eb20

08011d68 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8011d68:	b580      	push	{r7, lr}
 8011d6a:	b082      	sub	sp, #8
 8011d6c:	af00      	add	r7, sp, #0
 8011d6e:	6078      	str	r0, [r7, #4]
 8011d70:	6878      	ldr	r0, [r7, #4]
 8011d72:	f7ff ffe7 	bl	8011d44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8011d76:	2148      	movs	r1, #72	; 0x48
 8011d78:	6878      	ldr	r0, [r7, #4]
 8011d7a:	f018 fd30 	bl	802a7de <_ZdlPvj>
 8011d7e:	687b      	ldr	r3, [r7, #4]
 8011d80:	4618      	mov	r0, r3
 8011d82:	3708      	adds	r7, #8
 8011d84:	46bd      	mov	sp, r7
 8011d86:	bd80      	pop	{r7, pc}

08011d88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8011d88:	b580      	push	{r7, lr}
 8011d8a:	b082      	sub	sp, #8
 8011d8c:	af00      	add	r7, sp, #0
 8011d8e:	6078      	str	r0, [r7, #4]
 8011d90:	4a05      	ldr	r2, [pc, #20]	; (8011da8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 8011d92:	687b      	ldr	r3, [r7, #4]
 8011d94:	601a      	str	r2, [r3, #0]
 8011d96:	687b      	ldr	r3, [r7, #4]
 8011d98:	4618      	mov	r0, r3
 8011d9a:	f000 fdda 	bl	8012952 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8011d9e:	687b      	ldr	r3, [r7, #4]
 8011da0:	4618      	mov	r0, r3
 8011da2:	3708      	adds	r7, #8
 8011da4:	46bd      	mov	sp, r7
 8011da6:	bd80      	pop	{r7, pc}
 8011da8:	0802eb54 	.word	0x0802eb54

08011dac <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8011dac:	b580      	push	{r7, lr}
 8011dae:	b082      	sub	sp, #8
 8011db0:	af00      	add	r7, sp, #0
 8011db2:	6078      	str	r0, [r7, #4]
 8011db4:	6878      	ldr	r0, [r7, #4]
 8011db6:	f7ff ffe7 	bl	8011d88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8011dba:	f240 4114 	movw	r1, #1044	; 0x414
 8011dbe:	6878      	ldr	r0, [r7, #4]
 8011dc0:	f018 fd0d 	bl	802a7de <_ZdlPvj>
 8011dc4:	687b      	ldr	r3, [r7, #4]
 8011dc6:	4618      	mov	r0, r3
 8011dc8:	3708      	adds	r7, #8
 8011dca:	46bd      	mov	sp, r7
 8011dcc:	bd80      	pop	{r7, pc}
	...

08011dd0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8011dd0:	b580      	push	{r7, lr}
 8011dd2:	b082      	sub	sp, #8
 8011dd4:	af00      	add	r7, sp, #0
 8011dd6:	6078      	str	r0, [r7, #4]
 8011dd8:	4a05      	ldr	r2, [pc, #20]	; (8011df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 8011dda:	687b      	ldr	r3, [r7, #4]
 8011ddc:	601a      	str	r2, [r3, #0]
 8011dde:	687b      	ldr	r3, [r7, #4]
 8011de0:	4618      	mov	r0, r3
 8011de2:	f000 fdb6 	bl	8012952 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8011de6:	687b      	ldr	r3, [r7, #4]
 8011de8:	4618      	mov	r0, r3
 8011dea:	3708      	adds	r7, #8
 8011dec:	46bd      	mov	sp, r7
 8011dee:	bd80      	pop	{r7, pc}
 8011df0:	0802eb88 	.word	0x0802eb88

08011df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8011df4:	b580      	push	{r7, lr}
 8011df6:	b082      	sub	sp, #8
 8011df8:	af00      	add	r7, sp, #0
 8011dfa:	6078      	str	r0, [r7, #4]
 8011dfc:	6878      	ldr	r0, [r7, #4]
 8011dfe:	f7ff ffe7 	bl	8011dd0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8011e02:	2118      	movs	r1, #24
 8011e04:	6878      	ldr	r0, [r7, #4]
 8011e06:	f018 fcea 	bl	802a7de <_ZdlPvj>
 8011e0a:	687b      	ldr	r3, [r7, #4]
 8011e0c:	4618      	mov	r0, r3
 8011e0e:	3708      	adds	r7, #8
 8011e10:	46bd      	mov	sp, r7
 8011e12:	bd80      	pop	{r7, pc}

08011e14 <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 8011e14:	b580      	push	{r7, lr}
 8011e16:	b082      	sub	sp, #8
 8011e18:	af00      	add	r7, sp, #0
 8011e1a:	6078      	str	r0, [r7, #4]
 8011e1c:	4a05      	ldr	r2, [pc, #20]	; (8011e34 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 8011e1e:	687b      	ldr	r3, [r7, #4]
 8011e20:	601a      	str	r2, [r3, #0]
 8011e22:	687b      	ldr	r3, [r7, #4]
 8011e24:	4618      	mov	r0, r3
 8011e26:	f7ff fca7 	bl	8011778 <_ZN8touchgfx3LCDD1Ev>
 8011e2a:	687b      	ldr	r3, [r7, #4]
 8011e2c:	4618      	mov	r0, r3
 8011e2e:	3708      	adds	r7, #8
 8011e30:	46bd      	mov	sp, r7
 8011e32:	bd80      	pop	{r7, pc}
 8011e34:	0802fdf4 	.word	0x0802fdf4

08011e38 <_ZN8touchgfx8LCD16bppD0Ev>:
 8011e38:	b580      	push	{r7, lr}
 8011e3a:	b082      	sub	sp, #8
 8011e3c:	af00      	add	r7, sp, #0
 8011e3e:	6078      	str	r0, [r7, #4]
 8011e40:	6878      	ldr	r0, [r7, #4]
 8011e42:	f7ff ffe7 	bl	8011e14 <_ZN8touchgfx8LCD16bppD1Ev>
 8011e46:	2184      	movs	r1, #132	; 0x84
 8011e48:	6878      	ldr	r0, [r7, #4]
 8011e4a:	f018 fcc8 	bl	802a7de <_ZdlPvj>
 8011e4e:	687b      	ldr	r3, [r7, #4]
 8011e50:	4618      	mov	r0, r3
 8011e52:	3708      	adds	r7, #8
 8011e54:	46bd      	mov	sp, r7
 8011e56:	bd80      	pop	{r7, pc}

08011e58 <_Z41__static_initialization_and_destruction_0ii>:
 8011e58:	b580      	push	{r7, lr}
 8011e5a:	b084      	sub	sp, #16
 8011e5c:	af02      	add	r7, sp, #8
 8011e5e:	6078      	str	r0, [r7, #4]
 8011e60:	6039      	str	r1, [r7, #0]
 8011e62:	687b      	ldr	r3, [r7, #4]
 8011e64:	2b01      	cmp	r3, #1
 8011e66:	d118      	bne.n	8011e9a <_Z41__static_initialization_and_destruction_0ii+0x42>
 8011e68:	683b      	ldr	r3, [r7, #0]
 8011e6a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011e6e:	4293      	cmp	r3, r2
 8011e70:	d113      	bne.n	8011e9a <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 8011e72:	4817      	ldr	r0, [pc, #92]	; (8011ed0 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 8011e74:	f7ff feda 	bl	8011c2c <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 8011e78:	4816      	ldr	r0, [pc, #88]	; (8011ed4 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8011e7a:	f7ff fb8f 	bl	801159c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8011e7e:	4816      	ldr	r0, [pc, #88]	; (8011ed8 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8011e80:	f00f f802 	bl	8020e88 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 240, 320);
 8011e84:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8011e88:	9301      	str	r3, [sp, #4]
 8011e8a:	23f0      	movs	r3, #240	; 0xf0
 8011e8c:	9300      	str	r3, [sp, #0]
 8011e8e:	4b10      	ldr	r3, [pc, #64]	; (8011ed0 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 8011e90:	4a11      	ldr	r2, [pc, #68]	; (8011ed8 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8011e92:	4910      	ldr	r1, [pc, #64]	; (8011ed4 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8011e94:	4811      	ldr	r0, [pc, #68]	; (8011edc <_Z41__static_initialization_and_destruction_0ii+0x84>)
 8011e96:	f7ff fe9d 	bl	8011bd4 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 8011e9a:	687b      	ldr	r3, [r7, #4]
 8011e9c:	2b00      	cmp	r3, #0
 8011e9e:	d113      	bne.n	8011ec8 <_Z41__static_initialization_and_destruction_0ii+0x70>
 8011ea0:	683b      	ldr	r3, [r7, #0]
 8011ea2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011ea6:	4293      	cmp	r3, r2
 8011ea8:	d10e      	bne.n	8011ec8 <_Z41__static_initialization_and_destruction_0ii+0x70>
 8011eaa:	480c      	ldr	r0, [pc, #48]	; (8011edc <_Z41__static_initialization_and_destruction_0ii+0x84>)
 8011eac:	f7ff fa34 	bl	8011318 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 8011eb0:	480b      	ldr	r0, [pc, #44]	; (8011ee0 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 8011eb2:	f7f7 fbf9 	bl	80096a8 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 8011eb6:	4808      	ldr	r0, [pc, #32]	; (8011ed8 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8011eb8:	f7ff ffac 	bl	8011e14 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 8011ebc:	4805      	ldr	r0, [pc, #20]	; (8011ed4 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8011ebe:	f7ff fbc1 	bl	8011644 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 8011ec2:	4803      	ldr	r0, [pc, #12]	; (8011ed0 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 8011ec4:	f7fe ff70 	bl	8010da8 <_ZN20STM32TouchControllerD1Ev>
}
 8011ec8:	bf00      	nop
 8011eca:	3708      	adds	r7, #8
 8011ecc:	46bd      	mov	sp, r7
 8011ece:	bd80      	pop	{r7, pc}
 8011ed0:	20000a4c 	.word	0x20000a4c
 8011ed4:	20000a50 	.word	0x20000a50
 8011ed8:	20000a94 	.word	0x20000a94
 8011edc:	20000b1c 	.word	0x20000b1c
 8011ee0:	20000018 	.word	0x20000018

08011ee4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 8011ee4:	b480      	push	{r7}
 8011ee6:	b083      	sub	sp, #12
 8011ee8:	af00      	add	r7, sp, #0
 8011eea:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 8011eec:	2301      	movs	r3, #1
    }
 8011eee:	4618      	mov	r0, r3
 8011ef0:	370c      	adds	r7, #12
 8011ef2:	46bd      	mov	sp, r7
 8011ef4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011ef8:	4770      	bx	lr

08011efa <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 8011efa:	b480      	push	{r7}
 8011efc:	b083      	sub	sp, #12
 8011efe:	af00      	add	r7, sp, #0
 8011f00:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 8011f02:	2340      	movs	r3, #64	; 0x40
    }
 8011f04:	4618      	mov	r0, r3
 8011f06:	370c      	adds	r7, #12
 8011f08:	46bd      	mov	sp, r7
 8011f0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011f0e:	4770      	bx	lr

08011f10 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 8011f10:	b480      	push	{r7}
 8011f12:	b083      	sub	sp, #12
 8011f14:	af00      	add	r7, sp, #0
 8011f16:	6078      	str	r0, [r7, #4]
 8011f18:	460b      	mov	r3, r1
 8011f1a:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 8011f1c:	887b      	ldrh	r3, [r7, #2]
 8011f1e:	019b      	lsls	r3, r3, #6
 8011f20:	3308      	adds	r3, #8
 8011f22:	687a      	ldr	r2, [r7, #4]
 8011f24:	4413      	add	r3, r2
    }
 8011f26:	4618      	mov	r0, r3
 8011f28:	370c      	adds	r7, #12
 8011f2a:	46bd      	mov	sp, r7
 8011f2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011f30:	4770      	bx	lr

08011f32 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 8011f32:	b480      	push	{r7}
 8011f34:	b083      	sub	sp, #12
 8011f36:	af00      	add	r7, sp, #0
 8011f38:	6078      	str	r0, [r7, #4]
 8011f3a:	460b      	mov	r3, r1
 8011f3c:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 8011f3e:	887b      	ldrh	r3, [r7, #2]
 8011f40:	019b      	lsls	r3, r3, #6
 8011f42:	3308      	adds	r3, #8
 8011f44:	687a      	ldr	r2, [r7, #4]
 8011f46:	4413      	add	r3, r2
    }
 8011f48:	4618      	mov	r0, r3
 8011f4a:	370c      	adds	r7, #12
 8011f4c:	46bd      	mov	sp, r7
 8011f4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011f52:	4770      	bx	lr

08011f54 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 8011f54:	b480      	push	{r7}
 8011f56:	b083      	sub	sp, #12
 8011f58:	af00      	add	r7, sp, #0
 8011f5a:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 8011f5c:	2301      	movs	r3, #1
    }
 8011f5e:	4618      	mov	r0, r3
 8011f60:	370c      	adds	r7, #12
 8011f62:	46bd      	mov	sp, r7
 8011f64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011f68:	4770      	bx	lr

08011f6a <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 8011f6a:	b480      	push	{r7}
 8011f6c:	b083      	sub	sp, #12
 8011f6e:	af00      	add	r7, sp, #0
 8011f70:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 8011f72:	f240 430c 	movw	r3, #1036	; 0x40c
    }
 8011f76:	4618      	mov	r0, r3
 8011f78:	370c      	adds	r7, #12
 8011f7a:	46bd      	mov	sp, r7
 8011f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011f80:	4770      	bx	lr

08011f82 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 8011f82:	b480      	push	{r7}
 8011f84:	b083      	sub	sp, #12
 8011f86:	af00      	add	r7, sp, #0
 8011f88:	6078      	str	r0, [r7, #4]
 8011f8a:	460b      	mov	r3, r1
 8011f8c:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8011f8e:	887b      	ldrh	r3, [r7, #2]
 8011f90:	f240 420c 	movw	r2, #1036	; 0x40c
 8011f94:	fb02 f303 	mul.w	r3, r2, r3
 8011f98:	3308      	adds	r3, #8
 8011f9a:	687a      	ldr	r2, [r7, #4]
 8011f9c:	4413      	add	r3, r2
    }
 8011f9e:	4618      	mov	r0, r3
 8011fa0:	370c      	adds	r7, #12
 8011fa2:	46bd      	mov	sp, r7
 8011fa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011fa8:	4770      	bx	lr

08011faa <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 8011faa:	b480      	push	{r7}
 8011fac:	b083      	sub	sp, #12
 8011fae:	af00      	add	r7, sp, #0
 8011fb0:	6078      	str	r0, [r7, #4]
 8011fb2:	460b      	mov	r3, r1
 8011fb4:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8011fb6:	887b      	ldrh	r3, [r7, #2]
 8011fb8:	f240 420c 	movw	r2, #1036	; 0x40c
 8011fbc:	fb02 f303 	mul.w	r3, r2, r3
 8011fc0:	3308      	adds	r3, #8
 8011fc2:	687a      	ldr	r2, [r7, #4]
 8011fc4:	4413      	add	r3, r2
    }
 8011fc6:	4618      	mov	r0, r3
 8011fc8:	370c      	adds	r7, #12
 8011fca:	46bd      	mov	sp, r7
 8011fcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011fd0:	4770      	bx	lr

08011fd2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 8011fd2:	b480      	push	{r7}
 8011fd4:	b083      	sub	sp, #12
 8011fd6:	af00      	add	r7, sp, #0
 8011fd8:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 8011fda:	2301      	movs	r3, #1
    }
 8011fdc:	4618      	mov	r0, r3
 8011fde:	370c      	adds	r7, #12
 8011fe0:	46bd      	mov	sp, r7
 8011fe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011fe6:	4770      	bx	lr

08011fe8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 8011fe8:	b480      	push	{r7}
 8011fea:	b083      	sub	sp, #12
 8011fec:	af00      	add	r7, sp, #0
 8011fee:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 8011ff0:	2310      	movs	r3, #16
    }
 8011ff2:	4618      	mov	r0, r3
 8011ff4:	370c      	adds	r7, #12
 8011ff6:	46bd      	mov	sp, r7
 8011ff8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011ffc:	4770      	bx	lr

08011ffe <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 8011ffe:	b480      	push	{r7}
 8012000:	b083      	sub	sp, #12
 8012002:	af00      	add	r7, sp, #0
 8012004:	6078      	str	r0, [r7, #4]
 8012006:	460b      	mov	r3, r1
 8012008:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 801200a:	887b      	ldrh	r3, [r7, #2]
 801200c:	011b      	lsls	r3, r3, #4
 801200e:	3308      	adds	r3, #8
 8012010:	687a      	ldr	r2, [r7, #4]
 8012012:	4413      	add	r3, r2
    }
 8012014:	4618      	mov	r0, r3
 8012016:	370c      	adds	r7, #12
 8012018:	46bd      	mov	sp, r7
 801201a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801201e:	4770      	bx	lr

08012020 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 8012020:	b480      	push	{r7}
 8012022:	b083      	sub	sp, #12
 8012024:	af00      	add	r7, sp, #0
 8012026:	6078      	str	r0, [r7, #4]
 8012028:	460b      	mov	r3, r1
 801202a:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 801202c:	887b      	ldrh	r3, [r7, #2]
 801202e:	011b      	lsls	r3, r3, #4
 8012030:	3308      	adds	r3, #8
 8012032:	687a      	ldr	r2, [r7, #4]
 8012034:	4413      	add	r3, r2
    }
 8012036:	4618      	mov	r0, r3
 8012038:	370c      	adds	r7, #12
 801203a:	46bd      	mov	sp, r7
 801203c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012040:	4770      	bx	lr

08012042 <_GLOBAL__sub_I_touchgfx_init>:
 8012042:	b580      	push	{r7, lr}
 8012044:	af00      	add	r7, sp, #0
 8012046:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801204a:	2001      	movs	r0, #1
 801204c:	f7ff ff04 	bl	8011e58 <_Z41__static_initialization_and_destruction_0ii>
 8012050:	bd80      	pop	{r7, pc}

08012052 <_GLOBAL__sub_D_touchgfx_init>:
 8012052:	b580      	push	{r7, lr}
 8012054:	af00      	add	r7, sp, #0
 8012056:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801205a:	2000      	movs	r0, #0
 801205c:	f7ff fefc 	bl	8011e58 <_Z41__static_initialization_and_destruction_0ii>
 8012060:	bd80      	pop	{r7, pc}
	...

08012064 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 8012064:	b480      	push	{r7}
 8012066:	b083      	sub	sp, #12
 8012068:	af00      	add	r7, sp, #0
 801206a:	6078      	str	r0, [r7, #4]
    {
 801206c:	4a04      	ldr	r2, [pc, #16]	; (8012080 <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 801206e:	687b      	ldr	r3, [r7, #4]
 8012070:	601a      	str	r2, [r3, #0]
    }
 8012072:	687b      	ldr	r3, [r7, #4]
 8012074:	4618      	mov	r0, r3
 8012076:	370c      	adds	r7, #12
 8012078:	46bd      	mov	sp, r7
 801207a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801207e:	4770      	bx	lr
 8012080:	0802ece4 	.word	0x0802ece4

08012084 <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 8012084:	b580      	push	{r7, lr}
 8012086:	b082      	sub	sp, #8
 8012088:	af00      	add	r7, sp, #0
 801208a:	6078      	str	r0, [r7, #4]
    }
 801208c:	6878      	ldr	r0, [r7, #4]
 801208e:	f7ff ffe9 	bl	8012064 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 8012092:	2104      	movs	r1, #4
 8012094:	6878      	ldr	r0, [r7, #4]
 8012096:	f018 fba2 	bl	802a7de <_ZdlPvj>
 801209a:	687b      	ldr	r3, [r7, #4]
 801209c:	4618      	mov	r0, r3
 801209e:	3708      	adds	r7, #8
 80120a0:	46bd      	mov	sp, r7
 80120a2:	bd80      	pop	{r7, pc}

080120a4 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 80120a4:	b480      	push	{r7}
 80120a6:	b083      	sub	sp, #12
 80120a8:	af00      	add	r7, sp, #0
 80120aa:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 80120ac:	687b      	ldr	r3, [r7, #4]
 80120ae:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 80120b2:	3301      	adds	r3, #1
 80120b4:	b2da      	uxtb	r2, r3
 80120b6:	687b      	ldr	r3, [r7, #4]
 80120b8:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
    }
 80120bc:	bf00      	nop
 80120be:	370c      	adds	r7, #12
 80120c0:	46bd      	mov	sp, r7
 80120c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80120c6:	4770      	bx	lr

080120c8 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 80120c8:	b480      	push	{r7}
 80120ca:	b083      	sub	sp, #12
 80120cc:	af00      	add	r7, sp, #0
 80120ce:	6078      	str	r0, [r7, #4]
 80120d0:	6039      	str	r1, [r7, #0]
        frameBufferAllocator = allocator;
 80120d2:	687b      	ldr	r3, [r7, #4]
 80120d4:	683a      	ldr	r2, [r7, #0]
 80120d6:	619a      	str	r2, [r3, #24]
    }
 80120d8:	bf00      	nop
 80120da:	370c      	adds	r7, #12
 80120dc:	46bd      	mov	sp, r7
 80120de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80120e2:	4770      	bx	lr

080120e4 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    FrameBufferAllocator* getFrameBufferAllocator()
 80120e4:	b480      	push	{r7}
 80120e6:	b083      	sub	sp, #12
 80120e8:	af00      	add	r7, sp, #0
 80120ea:	6078      	str	r0, [r7, #4]
        return frameBufferAllocator;
 80120ec:	687b      	ldr	r3, [r7, #4]
 80120ee:	699b      	ldr	r3, [r3, #24]
    }
 80120f0:	4618      	mov	r0, r3
 80120f2:	370c      	adds	r7, #12
 80120f4:	46bd      	mov	sp, r7
 80120f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80120fa:	4770      	bx	lr

080120fc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 80120fc:	b580      	push	{r7, lr}
 80120fe:	b082      	sub	sp, #8
 8012100:	af00      	add	r7, sp, #0
 8012102:	6078      	str	r0, [r7, #4]
 8012104:	460b      	mov	r3, r1
 8012106:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 8012108:	78fb      	ldrb	r3, [r7, #3]
 801210a:	2b00      	cmp	r3, #0
 801210c:	d002      	beq.n	8012114 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 801210e:	78fb      	ldrb	r3, [r7, #3]
 8012110:	2b02      	cmp	r3, #2
 8012112:	d105      	bne.n	8012120 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 8012114:	687b      	ldr	r3, [r7, #4]
 8012116:	78fa      	ldrb	r2, [r7, #3]
 8012118:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 801211c:	2301      	movs	r3, #1
 801211e:	e027      	b.n	8012170 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 8012120:	78fb      	ldrb	r3, [r7, #3]
 8012122:	2b01      	cmp	r3, #1
 8012124:	d123      	bne.n	801216e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 8012126:	687b      	ldr	r3, [r7, #4]
 8012128:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801212a:	2b00      	cmp	r3, #0
 801212c:	d014      	beq.n	8012158 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 801212e:	687b      	ldr	r3, [r7, #4]
 8012130:	681b      	ldr	r3, [r3, #0]
 8012132:	339c      	adds	r3, #156	; 0x9c
 8012134:	681b      	ldr	r3, [r3, #0]
 8012136:	6878      	ldr	r0, [r7, #4]
 8012138:	4798      	blx	r3
 801213a:	4603      	mov	r3, r0
 801213c:	461a      	mov	r2, r3
 801213e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012142:	429a      	cmp	r2, r3
 8012144:	d008      	beq.n	8012158 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 8012146:	4b0c      	ldr	r3, [pc, #48]	; (8012178 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 8012148:	781b      	ldrb	r3, [r3, #0]
 801214a:	f083 0301 	eor.w	r3, r3, #1
 801214e:	b2db      	uxtb	r3, r3
 8012150:	2b00      	cmp	r3, #0
 8012152:	d001      	beq.n	8012158 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 8012154:	2301      	movs	r3, #1
 8012156:	e000      	b.n	801215a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 8012158:	2300      	movs	r3, #0
 801215a:	2b00      	cmp	r3, #0
 801215c:	d005      	beq.n	801216a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 801215e:	687b      	ldr	r3, [r7, #4]
 8012160:	78fa      	ldrb	r2, [r7, #3]
 8012162:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 8012166:	2301      	movs	r3, #1
 8012168:	e002      	b.n	8012170 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 801216a:	2300      	movs	r3, #0
 801216c:	e000      	b.n	8012170 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 801216e:	2300      	movs	r3, #0
    }
 8012170:	4618      	mov	r0, r3
 8012172:	3708      	adds	r7, #8
 8012174:	46bd      	mov	sp, r7
 8012176:	bd80      	pop	{r7, pc}
 8012178:	2000224a 	.word	0x2000224a

0801217c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
                   3, /* number of blocks */
                   2  /* bytes per pixel */
                   > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 801217c:	b5b0      	push	{r4, r5, r7, lr}
 801217e:	b082      	sub	sp, #8
 8012180:	af00      	add	r7, sp, #0
 8012182:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 8012184:	687b      	ldr	r3, [r7, #4]
 8012186:	4618      	mov	r0, r3
 8012188:	f001 fa37 	bl	80135fa <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 801218c:	687d      	ldr	r5, [r7, #4]
 801218e:	687b      	ldr	r3, [r7, #4]
 8012190:	681b      	ldr	r3, [r3, #0]
 8012192:	3364      	adds	r3, #100	; 0x64
 8012194:	681c      	ldr	r4, [r3, #0]
 8012196:	f007 f8c5 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 801219a:	4603      	mov	r3, r0
 801219c:	4619      	mov	r1, r3
 801219e:	4628      	mov	r0, r5
 80121a0:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 80121a2:	687b      	ldr	r3, [r7, #4]
 80121a4:	681b      	ldr	r3, [r3, #0]
 80121a6:	3380      	adds	r3, #128	; 0x80
 80121a8:	681b      	ldr	r3, [r3, #0]
 80121aa:	6878      	ldr	r0, [r7, #4]
 80121ac:	4798      	blx	r3
    enableInterrupts();
 80121ae:	687b      	ldr	r3, [r7, #4]
 80121b0:	681b      	ldr	r3, [r3, #0]
 80121b2:	3378      	adds	r3, #120	; 0x78
 80121b4:	681b      	ldr	r3, [r3, #0]
 80121b6:	6878      	ldr	r0, [r7, #4]
 80121b8:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 80121ba:	687b      	ldr	r3, [r7, #4]
 80121bc:	4906      	ldr	r1, [pc, #24]	; (80121d8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 80121be:	4618      	mov	r0, r3
 80121c0:	f7ff ff82 	bl	80120c8 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 80121c4:	687b      	ldr	r3, [r7, #4]
 80121c6:	2102      	movs	r1, #2
 80121c8:	4618      	mov	r0, r3
 80121ca:	f7ff ff97 	bl	80120fc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 80121ce:	bf00      	nop
 80121d0:	3708      	adds	r7, #8
 80121d2:	46bd      	mov	sp, r7
 80121d4:	bdb0      	pop	{r4, r5, r7, pc}
 80121d6:	bf00      	nop
 80121d8:	20000b98 	.word	0x20000b98

080121dc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 80121dc:	b480      	push	{r7}
 80121de:	b083      	sub	sp, #12
 80121e0:	af00      	add	r7, sp, #0
 80121e2:	6078      	str	r0, [r7, #4]
}
 80121e4:	bf00      	nop
 80121e6:	370c      	adds	r7, #12
 80121e8:	46bd      	mov	sp, r7
 80121ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80121ee:	4770      	bx	lr

080121f0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 80121f0:	b480      	push	{r7}
 80121f2:	b083      	sub	sp, #12
 80121f4:	af00      	add	r7, sp, #0
 80121f6:	6078      	str	r0, [r7, #4]
}
 80121f8:	bf00      	nop
 80121fa:	370c      	adds	r7, #12
 80121fc:	46bd      	mov	sp, r7
 80121fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012202:	4770      	bx	lr

08012204 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 8012204:	b480      	push	{r7}
 8012206:	b083      	sub	sp, #12
 8012208:	af00      	add	r7, sp, #0
 801220a:	6078      	str	r0, [r7, #4]
}
 801220c:	bf00      	nop
 801220e:	370c      	adds	r7, #12
 8012210:	46bd      	mov	sp, r7
 8012212:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012216:	4770      	bx	lr

08012218 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 8012218:	b480      	push	{r7}
 801221a:	b083      	sub	sp, #12
 801221c:	af00      	add	r7, sp, #0
 801221e:	6078      	str	r0, [r7, #4]
}
 8012220:	bf00      	nop
 8012222:	370c      	adds	r7, #12
 8012224:	46bd      	mov	sp, r7
 8012226:	f85d 7b04 	ldr.w	r7, [sp], #4
 801222a:	4770      	bx	lr

0801222c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 801222c:	b580      	push	{r7, lr}
 801222e:	b082      	sub	sp, #8
 8012230:	af00      	add	r7, sp, #0
 8012232:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 8012234:	687b      	ldr	r3, [r7, #4]
 8012236:	4618      	mov	r0, r3
 8012238:	f001 f9c6 	bl	80135c8 <_ZN8touchgfx3HAL10beginFrameEv>
 801223c:	4603      	mov	r3, r0
}
 801223e:	4618      	mov	r0, r3
 8012240:	3708      	adds	r7, #8
 8012242:	46bd      	mov	sp, r7
 8012244:	bd80      	pop	{r7, pc}

08012246 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 8012246:	b580      	push	{r7, lr}
 8012248:	b082      	sub	sp, #8
 801224a:	af00      	add	r7, sp, #0
 801224c:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 801224e:	bf00      	nop
 8012250:	f7f1 fb90 	bl	8003974 <touchgfxDisplayDriverTransmitActive>
 8012254:	4603      	mov	r3, r0
 8012256:	2b00      	cmp	r3, #0
 8012258:	bf14      	ite	ne
 801225a:	2301      	movne	r3, #1
 801225c:	2300      	moveq	r3, #0
 801225e:	b2db      	uxtb	r3, r3
 8012260:	2b00      	cmp	r3, #0
 8012262:	d1f5      	bne.n	8012250 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 8012264:	687b      	ldr	r3, [r7, #4]
 8012266:	4618      	mov	r0, r3
 8012268:	f001 f9ba 	bl	80135e0 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 801226c:	f7ff f8ce 	bl	801140c <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 8012270:	bf00      	nop
 8012272:	3708      	adds	r7, #8
 8012274:	46bd      	mov	sp, r7
 8012276:	bd80      	pop	{r7, pc}

08012278 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 8012278:	b480      	push	{r7}
 801227a:	b083      	sub	sp, #12
 801227c:	af00      	add	r7, sp, #0
 801227e:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 8012280:	2300      	movs	r3, #0
}
 8012282:	4618      	mov	r0, r3
 8012284:	370c      	adds	r7, #12
 8012286:	46bd      	mov	sp, r7
 8012288:	f85d 7b04 	ldr.w	r7, [sp], #4
 801228c:	4770      	bx	lr

0801228e <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 801228e:	b480      	push	{r7}
 8012290:	b083      	sub	sp, #12
 8012292:	af00      	add	r7, sp, #0
 8012294:	6078      	str	r0, [r7, #4]
 8012296:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 8012298:	bf00      	nop
 801229a:	370c      	adds	r7, #12
 801229c:	46bd      	mov	sp, r7
 801229e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80122a2:	4770      	bx	lr

080122a4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 80122a4:	b580      	push	{r7, lr}
 80122a6:	b088      	sub	sp, #32
 80122a8:	af02      	add	r7, sp, #8
 80122aa:	6078      	str	r0, [r7, #4]
 80122ac:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 80122ae:	687b      	ldr	r3, [r7, #4]
 80122b0:	6839      	ldr	r1, [r7, #0]
 80122b2:	4618      	mov	r0, r3
 80122b4:	f001 f952 	bl	801355c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 80122b8:	687b      	ldr	r3, [r7, #4]
 80122ba:	699a      	ldr	r2, [r3, #24]
 80122bc:	687b      	ldr	r3, [r7, #4]
 80122be:	699b      	ldr	r3, [r3, #24]
 80122c0:	681b      	ldr	r3, [r3, #0]
 80122c2:	3304      	adds	r3, #4
 80122c4:	681b      	ldr	r3, [r3, #0]
 80122c6:	4610      	mov	r0, r2
 80122c8:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 80122ca:	f7f1 fb53 	bl	8003974 <touchgfxDisplayDriverTransmitActive>
 80122ce:	4603      	mov	r3, r0
 80122d0:	2b00      	cmp	r3, #0
 80122d2:	bf0c      	ite	eq
 80122d4:	2301      	moveq	r3, #1
 80122d6:	2300      	movne	r3, #0
 80122d8:	b2db      	uxtb	r3, r3
 80122da:	2b00      	cmp	r3, #0
 80122dc:	d021      	beq.n	8012322 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 80122de:	f107 030c 	add.w	r3, r7, #12
 80122e2:	4618      	mov	r0, r3
 80122e4:	f7f7 fccb 	bl	8009c7e <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 80122e8:	687b      	ldr	r3, [r7, #4]
 80122ea:	699a      	ldr	r2, [r3, #24]
 80122ec:	687b      	ldr	r3, [r7, #4]
 80122ee:	699b      	ldr	r3, [r3, #24]
 80122f0:	681b      	ldr	r3, [r3, #0]
 80122f2:	330c      	adds	r3, #12
 80122f4:	681b      	ldr	r3, [r3, #0]
 80122f6:	f107 010c 	add.w	r1, r7, #12
 80122fa:	4610      	mov	r0, r2
 80122fc:	4798      	blx	r3
 80122fe:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 8012300:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8012304:	b299      	uxth	r1, r3
 8012306:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 801230a:	b29a      	uxth	r2, r3
 801230c:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 8012310:	b298      	uxth	r0, r3
 8012312:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8012316:	b29b      	uxth	r3, r3
 8012318:	9300      	str	r3, [sp, #0]
 801231a:	4603      	mov	r3, r0
 801231c:	6978      	ldr	r0, [r7, #20]
 801231e:	f7f1 fb3b 	bl	8003998 <touchgfxDisplayDriverTransmitBlock>
    }
}
 8012322:	bf00      	nop
 8012324:	3718      	adds	r7, #24
 8012326:	46bd      	mov	sp, r7
 8012328:	bd80      	pop	{r7, pc}

0801232a <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 801232a:	b580      	push	{r7, lr}
 801232c:	b084      	sub	sp, #16
 801232e:	af00      	add	r7, sp, #0
 8012330:	60f8      	str	r0, [r7, #12]
 8012332:	60b9      	str	r1, [r7, #8]
 8012334:	607a      	str	r2, [r7, #4]
 8012336:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 8012338:	68f8      	ldr	r0, [r7, #12]
 801233a:	683b      	ldr	r3, [r7, #0]
 801233c:	687a      	ldr	r2, [r7, #4]
 801233e:	68b9      	ldr	r1, [r7, #8]
 8012340:	f001 fa7d 	bl	801383e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 8012344:	4603      	mov	r3, r0
}
 8012346:	4618      	mov	r0, r3
 8012348:	3710      	adds	r7, #16
 801234a:	46bd      	mov	sp, r7
 801234c:	bd80      	pop	{r7, pc}

0801234e <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 801234e:	b480      	push	{r7}
 8012350:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
   */
}
 8012352:	bf00      	nop
 8012354:	46bd      	mov	sp, r7
 8012356:	f85d 7b04 	ldr.w	r7, [sp], #4
 801235a:	4770      	bx	lr

0801235c <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 801235c:	b480      	push	{r7}
 801235e:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
   */
}
 8012360:	bf00      	nop
 8012362:	46bd      	mov	sp, r7
 8012364:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012368:	4770      	bx	lr

0801236a <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 801236a:	b580      	push	{r7, lr}
 801236c:	b086      	sub	sp, #24
 801236e:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 8012370:	f7f8 fe3a 	bl	800afe8 <_ZN8touchgfx3HAL11getInstanceEv>
 8012374:	4603      	mov	r3, r0
 8012376:	4618      	mov	r0, r3
 8012378:	f7ff feb4 	bl	80120e4 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 801237c:	60f8      	str	r0, [r7, #12]

  // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 801237e:	68fb      	ldr	r3, [r7, #12]
 8012380:	681b      	ldr	r3, [r3, #0]
 8012382:	3318      	adds	r3, #24
 8012384:	681b      	ldr	r3, [r3, #0]
 8012386:	68f8      	ldr	r0, [r7, #12]
 8012388:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 801238a:	68fb      	ldr	r3, [r7, #12]
 801238c:	681b      	ldr	r3, [r3, #0]
 801238e:	3308      	adds	r3, #8
 8012390:	681b      	ldr	r3, [r3, #0]
 8012392:	68f8      	ldr	r0, [r7, #12]
 8012394:	4798      	blx	r3
 8012396:	4603      	mov	r3, r0
 8012398:	2b00      	cmp	r3, #0
 801239a:	d01d      	beq.n	80123d8 <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 801239c:	463b      	mov	r3, r7
 801239e:	4618      	mov	r0, r3
 80123a0:	f7f7 fc6d 	bl	8009c7e <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 80123a4:	68fb      	ldr	r3, [r7, #12]
 80123a6:	681b      	ldr	r3, [r3, #0]
 80123a8:	330c      	adds	r3, #12
 80123aa:	681b      	ldr	r3, [r3, #0]
 80123ac:	463a      	mov	r2, r7
 80123ae:	4611      	mov	r1, r2
 80123b0:	68f8      	ldr	r0, [r7, #12]
 80123b2:	4798      	blx	r3
 80123b4:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 80123b6:	f9b7 3000 	ldrsh.w	r3, [r7]
 80123ba:	b299      	uxth	r1, r3
 80123bc:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80123c0:	b29a      	uxth	r2, r3
 80123c2:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80123c6:	b298      	uxth	r0, r3
 80123c8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80123cc:	b29b      	uxth	r3, r3
 80123ce:	9300      	str	r3, [sp, #0]
 80123d0:	4603      	mov	r3, r0
 80123d2:	68b8      	ldr	r0, [r7, #8]
 80123d4:	f7f1 fae0 	bl	8003998 <touchgfxDisplayDriverTransmitBlock>
    }
}
 80123d8:	bf00      	nop
 80123da:	3710      	adds	r7, #16
 80123dc:	46bd      	mov	sp, r7
 80123de:	bd80      	pop	{r7, pc}

080123e0 <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 80123e0:	b580      	push	{r7, lr}
 80123e2:	af00      	add	r7, sp, #0
  // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 80123e4:	f7ff ffc1 	bl	801236a <_ZN8touchgfx16startNewTransferEv>
}
 80123e8:	bf00      	nop
 80123ea:	bd80      	pop	{r7, pc}

080123ec <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 80123ec:	b580      	push	{r7, lr}
 80123ee:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 80123f0:	f7f8 fdfa 	bl	800afe8 <_ZN8touchgfx3HAL11getInstanceEv>
 80123f4:	4603      	mov	r3, r0
 80123f6:	4618      	mov	r0, r3
 80123f8:	f7ff fe54 	bl	80120a4 <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 80123fc:	f7fe fffa 	bl	80113f4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 8012400:	bf00      	nop
 8012402:	bd80      	pop	{r7, pc}

08012404 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 8012404:	b480      	push	{r7}
 8012406:	b083      	sub	sp, #12
 8012408:	af00      	add	r7, sp, #0
 801240a:	6078      	str	r0, [r7, #4]
 801240c:	4a04      	ldr	r2, [pc, #16]	; (8012420 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 801240e:	687b      	ldr	r3, [r7, #4]
 8012410:	601a      	str	r2, [r3, #0]
 8012412:	687b      	ldr	r3, [r7, #4]
 8012414:	4618      	mov	r0, r3
 8012416:	370c      	adds	r7, #12
 8012418:	46bd      	mov	sp, r7
 801241a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801241e:	4770      	bx	lr
 8012420:	0802ece4 	.word	0x0802ece4

08012424 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 8012424:	b5b0      	push	{r4, r5, r7, lr}
 8012426:	b084      	sub	sp, #16
 8012428:	af00      	add	r7, sp, #0
 801242a:	6078      	str	r0, [r7, #4]
    {
 801242c:	687b      	ldr	r3, [r7, #4]
 801242e:	4618      	mov	r0, r3
 8012430:	f7ff ffe8 	bl	8012404 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 8012434:	4a1a      	ldr	r2, [pc, #104]	; (80124a0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x7c>)
 8012436:	687b      	ldr	r3, [r7, #4]
 8012438:	601a      	str	r2, [r3, #0]
 801243a:	687b      	ldr	r3, [r7, #4]
 801243c:	f503 53b4 	add.w	r3, r3, #5760	; 0x1680
 8012440:	3308      	adds	r3, #8
 8012442:	2402      	movs	r4, #2
 8012444:	461d      	mov	r5, r3
 8012446:	e004      	b.n	8012452 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x2e>
 8012448:	4628      	mov	r0, r5
 801244a:	f7f7 fc18 	bl	8009c7e <_ZN8touchgfx4RectC1Ev>
 801244e:	3508      	adds	r5, #8
 8012450:	3c01      	subs	r4, #1
 8012452:	2c00      	cmp	r4, #0
 8012454:	daf8      	bge.n	8012448 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 8012456:	687b      	ldr	r3, [r7, #4]
 8012458:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801245c:	461a      	mov	r2, r3
 801245e:	f04f 33ff 	mov.w	r3, #4294967295
 8012462:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        drawingBlock = -1;
 8012466:	687b      	ldr	r3, [r7, #4]
 8012468:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801246c:	461a      	mov	r2, r3
 801246e:	f04f 33ff 	mov.w	r3, #4294967295
 8012472:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        for (uint32_t i = 0; i < blocks; i++)
 8012476:	2300      	movs	r3, #0
 8012478:	60fb      	str	r3, [r7, #12]
 801247a:	e008      	b.n	801248e <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 801247c:	687a      	ldr	r2, [r7, #4]
 801247e:	68fb      	ldr	r3, [r7, #12]
 8012480:	4413      	add	r3, r2
 8012482:	3304      	adds	r3, #4
 8012484:	2200      	movs	r2, #0
 8012486:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 8012488:	68fb      	ldr	r3, [r7, #12]
 801248a:	3301      	adds	r3, #1
 801248c:	60fb      	str	r3, [r7, #12]
 801248e:	68fb      	ldr	r3, [r7, #12]
 8012490:	2b02      	cmp	r3, #2
 8012492:	d9f3      	bls.n	801247c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x58>
        }
    }
 8012494:	687b      	ldr	r3, [r7, #4]
 8012496:	4618      	mov	r0, r3
 8012498:	3710      	adds	r7, #16
 801249a:	46bd      	mov	sp, r7
 801249c:	bdb0      	pop	{r4, r5, r7, pc}
 801249e:	bf00      	nop
 80124a0:	0802ebe0 	.word	0x0802ebe0

080124a4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 80124a4:	b580      	push	{r7, lr}
 80124a6:	b082      	sub	sp, #8
 80124a8:	af00      	add	r7, sp, #0
 80124aa:	6078      	str	r0, [r7, #4]
 80124ac:	4a05      	ldr	r2, [pc, #20]	; (80124c4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev+0x20>)
 80124ae:	687b      	ldr	r3, [r7, #4]
 80124b0:	601a      	str	r2, [r3, #0]
 80124b2:	687b      	ldr	r3, [r7, #4]
 80124b4:	4618      	mov	r0, r3
 80124b6:	f7ff fdd5 	bl	8012064 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 80124ba:	687b      	ldr	r3, [r7, #4]
 80124bc:	4618      	mov	r0, r3
 80124be:	3708      	adds	r7, #8
 80124c0:	46bd      	mov	sp, r7
 80124c2:	bd80      	pop	{r7, pc}
 80124c4:	0802ebe0 	.word	0x0802ebe0

080124c8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED0Ev>:
 80124c8:	b580      	push	{r7, lr}
 80124ca:	b082      	sub	sp, #8
 80124cc:	af00      	add	r7, sp, #0
 80124ce:	6078      	str	r0, [r7, #4]
 80124d0:	6878      	ldr	r0, [r7, #4]
 80124d2:	f7ff ffe7 	bl	80124a4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
 80124d6:	f241 61a8 	movw	r1, #5800	; 0x16a8
 80124da:	6878      	ldr	r0, [r7, #4]
 80124dc:	f018 f97f 	bl	802a7de <_ZdlPvj>
 80124e0:	687b      	ldr	r3, [r7, #4]
 80124e2:	4618      	mov	r0, r3
 80124e4:	3708      	adds	r7, #8
 80124e6:	46bd      	mov	sp, r7
 80124e8:	bd80      	pop	{r7, pc}
	...

080124ec <_Z41__static_initialization_and_destruction_0ii>:
 80124ec:	b580      	push	{r7, lr}
 80124ee:	b082      	sub	sp, #8
 80124f0:	af00      	add	r7, sp, #0
 80124f2:	6078      	str	r0, [r7, #4]
 80124f4:	6039      	str	r1, [r7, #0]
 80124f6:	687b      	ldr	r3, [r7, #4]
 80124f8:	2b01      	cmp	r3, #1
 80124fa:	d107      	bne.n	801250c <_Z41__static_initialization_and_destruction_0ii+0x20>
 80124fc:	683b      	ldr	r3, [r7, #0]
 80124fe:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012502:	4293      	cmp	r3, r2
 8012504:	d102      	bne.n	801250c <_Z41__static_initialization_and_destruction_0ii+0x20>
                   > blockAllocator;
 8012506:	4809      	ldr	r0, [pc, #36]	; (801252c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8012508:	f7ff ff8c 	bl	8012424 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>
 801250c:	687b      	ldr	r3, [r7, #4]
 801250e:	2b00      	cmp	r3, #0
 8012510:	d107      	bne.n	8012522 <_Z41__static_initialization_and_destruction_0ii+0x36>
 8012512:	683b      	ldr	r3, [r7, #0]
 8012514:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012518:	4293      	cmp	r3, r2
 801251a:	d102      	bne.n	8012522 <_Z41__static_initialization_and_destruction_0ii+0x36>
 801251c:	4803      	ldr	r0, [pc, #12]	; (801252c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 801251e:	f7ff ffc1 	bl	80124a4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
}
 8012522:	bf00      	nop
 8012524:	3708      	adds	r7, #8
 8012526:	46bd      	mov	sp, r7
 8012528:	bd80      	pop	{r7, pc}
 801252a:	bf00      	nop
 801252c:	20000b98 	.word	0x20000b98

08012530 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 8012530:	b580      	push	{r7, lr}
 8012532:	b086      	sub	sp, #24
 8012534:	af00      	add	r7, sp, #0
 8012536:	60f8      	str	r0, [r7, #12]
 8012538:	4608      	mov	r0, r1
 801253a:	4611      	mov	r1, r2
 801253c:	461a      	mov	r2, r3
 801253e:	4603      	mov	r3, r0
 8012540:	817b      	strh	r3, [r7, #10]
 8012542:	460b      	mov	r3, r1
 8012544:	813b      	strh	r3, [r7, #8]
 8012546:	4613      	mov	r3, r2
 8012548:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 801254a:	68fb      	ldr	r3, [r7, #12]
 801254c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012550:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8012554:	3301      	adds	r3, #1
 8012556:	68fa      	ldr	r2, [r7, #12]
 8012558:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 801255c:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        if (drawingBlock == blocks)
 8012560:	68fb      	ldr	r3, [r7, #12]
 8012562:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012566:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 801256a:	2b03      	cmp	r3, #3
 801256c:	d109      	bne.n	8012582 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 801256e:	68fb      	ldr	r3, [r7, #12]
 8012570:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012574:	461a      	mov	r2, r3
 8012576:	2300      	movs	r3, #0
 8012578:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        }
        while (state[drawingBlock] != EMPTY)
 801257c:	e001      	b.n	8012582 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 801257e:	f7ff fee6 	bl	801234e <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 8012582:	68fb      	ldr	r3, [r7, #12]
 8012584:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012588:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 801258c:	68fa      	ldr	r2, [r7, #12]
 801258e:	4413      	add	r3, r2
 8012590:	791b      	ldrb	r3, [r3, #4]
 8012592:	b2db      	uxtb	r3, r3
 8012594:	2b00      	cmp	r3, #0
 8012596:	bf14      	ite	ne
 8012598:	2301      	movne	r3, #1
 801259a:	2300      	moveq	r3, #0
 801259c:	b2db      	uxtb	r3, r3
 801259e:	2b00      	cmp	r3, #0
 80125a0:	d1ed      	bne.n	801257e <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 80125a2:	68fb      	ldr	r3, [r7, #12]
 80125a4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80125a8:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 80125ac:	68fa      	ldr	r2, [r7, #12]
 80125ae:	4413      	add	r3, r2
 80125b0:	791b      	ldrb	r3, [r3, #4]
 80125b2:	b2db      	uxtb	r3, r3
 80125b4:	2b00      	cmp	r3, #0
 80125b6:	d005      	beq.n	80125c4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 80125b8:	4b38      	ldr	r3, [pc, #224]	; (801269c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 80125ba:	4a39      	ldr	r2, [pc, #228]	; (80126a0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x170>)
 80125bc:	21aa      	movs	r1, #170	; 0xaa
 80125be:	4839      	ldr	r0, [pc, #228]	; (80126a4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x174>)
 80125c0:	f018 fefe 	bl	802b3c0 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 80125c4:	68fb      	ldr	r3, [r7, #12]
 80125c6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80125ca:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 80125ce:	68fa      	ldr	r2, [r7, #12]
 80125d0:	4413      	add	r3, r2
 80125d2:	2201      	movs	r2, #1
 80125d4:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 80125d6:	88fb      	ldrh	r3, [r7, #6]
 80125d8:	005b      	lsls	r3, r3, #1
 80125da:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 80125dc:	697b      	ldr	r3, [r7, #20]
 80125de:	f44f 62f0 	mov.w	r2, #1920	; 0x780
 80125e2:	fbb2 f3f3 	udiv	r3, r2, r3
 80125e6:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 80125e8:	68fb      	ldr	r3, [r7, #12]
 80125ea:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80125ee:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	; 0x6a4
 80125f2:	4613      	mov	r3, r2
 80125f4:	011b      	lsls	r3, r3, #4
 80125f6:	1a9b      	subs	r3, r3, r2
 80125f8:	01db      	lsls	r3, r3, #7
 80125fa:	3308      	adds	r3, #8
 80125fc:	68fa      	ldr	r2, [r7, #12]
 80125fe:	441a      	add	r2, r3
 8012600:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012602:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 8012604:	68fb      	ldr	r3, [r7, #12]
 8012606:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801260a:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	; 0x6a4
 801260e:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8012612:	68fb      	ldr	r3, [r7, #12]
 8012614:	f202 22d1 	addw	r2, r2, #721	; 0x2d1
 8012618:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 801261c:	68fb      	ldr	r3, [r7, #12]
 801261e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012622:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8012626:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 801262a:	68fa      	ldr	r2, [r7, #12]
 801262c:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 8012630:	00db      	lsls	r3, r3, #3
 8012632:	4413      	add	r3, r2
 8012634:	460a      	mov	r2, r1
 8012636:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 8012638:	68fb      	ldr	r3, [r7, #12]
 801263a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801263e:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8012642:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 8012646:	68fa      	ldr	r2, [r7, #12]
 8012648:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 801264c:	00db      	lsls	r3, r3, #3
 801264e:	4413      	add	r3, r2
 8012650:	460a      	mov	r2, r1
 8012652:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 8012654:	8c3a      	ldrh	r2, [r7, #32]
 8012656:	693b      	ldr	r3, [r7, #16]
 8012658:	429a      	cmp	r2, r3
 801265a:	bfa8      	it	ge
 801265c:	461a      	movge	r2, r3
 801265e:	68fb      	ldr	r3, [r7, #12]
 8012660:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012664:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8012668:	b211      	sxth	r1, r2
 801266a:	68fa      	ldr	r2, [r7, #12]
 801266c:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 8012670:	00db      	lsls	r3, r3, #3
 8012672:	4413      	add	r3, r2
 8012674:	460a      	mov	r2, r1
 8012676:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 8012678:	68fb      	ldr	r3, [r7, #12]
 801267a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801267e:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8012682:	68fa      	ldr	r2, [r7, #12]
 8012684:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 8012688:	00db      	lsls	r3, r3, #3
 801268a:	4413      	add	r3, r2
 801268c:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8012690:	b29b      	uxth	r3, r3
    }
 8012692:	4618      	mov	r0, r3
 8012694:	3718      	adds	r7, #24
 8012696:	46bd      	mov	sp, r7
 8012698:	bd80      	pop	{r7, pc}
 801269a:	bf00      	nop
 801269c:	0802d840 	.word	0x0802d840
 80126a0:	0802d860 	.word	0x0802d860
 80126a4:	0802d994 	.word	0x0802d994

080126a8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 80126a8:	b580      	push	{r7, lr}
 80126aa:	b082      	sub	sp, #8
 80126ac:	af00      	add	r7, sp, #0
 80126ae:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 80126b0:	687b      	ldr	r3, [r7, #4]
 80126b2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80126b6:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 80126ba:	687a      	ldr	r2, [r7, #4]
 80126bc:	4413      	add	r3, r2
 80126be:	791b      	ldrb	r3, [r3, #4]
 80126c0:	b2db      	uxtb	r3, r3
 80126c2:	2b01      	cmp	r3, #1
 80126c4:	d005      	beq.n	80126d2 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 80126c6:	4b0a      	ldr	r3, [pc, #40]	; (80126f0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 80126c8:	4a0a      	ldr	r2, [pc, #40]	; (80126f4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 80126ca:	21b9      	movs	r1, #185	; 0xb9
 80126cc:	480a      	ldr	r0, [pc, #40]	; (80126f8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 80126ce:	f018 fe77 	bl	802b3c0 <__assert_func>
        state[drawingBlock] = DRAWN;
 80126d2:	687b      	ldr	r3, [r7, #4]
 80126d4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80126d8:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 80126dc:	687a      	ldr	r2, [r7, #4]
 80126de:	4413      	add	r3, r2
 80126e0:	2202      	movs	r2, #2
 80126e2:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 80126e4:	f7ff fe3a 	bl	801235c <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 80126e8:	bf00      	nop
 80126ea:	3708      	adds	r7, #8
 80126ec:	46bd      	mov	sp, r7
 80126ee:	bd80      	pop	{r7, pc}
 80126f0:	0802d9e8 	.word	0x0802d9e8
 80126f4:	0802da0c 	.word	0x0802da0c
 80126f8:	0802d994 	.word	0x0802d994

080126fc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 80126fc:	b480      	push	{r7}
 80126fe:	b085      	sub	sp, #20
 8012700:	af00      	add	r7, sp, #0
 8012702:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 8012704:	2300      	movs	r3, #0
 8012706:	60fb      	str	r3, [r7, #12]
 8012708:	e011      	b.n	801272e <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 801270a:	687a      	ldr	r2, [r7, #4]
 801270c:	68fb      	ldr	r3, [r7, #12]
 801270e:	4413      	add	r3, r2
 8012710:	3304      	adds	r3, #4
 8012712:	781b      	ldrb	r3, [r3, #0]
 8012714:	b2db      	uxtb	r3, r3
 8012716:	2b02      	cmp	r3, #2
 8012718:	bf0c      	ite	eq
 801271a:	2301      	moveq	r3, #1
 801271c:	2300      	movne	r3, #0
 801271e:	b2db      	uxtb	r3, r3
 8012720:	2b00      	cmp	r3, #0
 8012722:	d001      	beq.n	8012728 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 8012724:	2301      	movs	r3, #1
 8012726:	e006      	b.n	8012736 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 8012728:	68fb      	ldr	r3, [r7, #12]
 801272a:	3301      	adds	r3, #1
 801272c:	60fb      	str	r3, [r7, #12]
 801272e:	68fb      	ldr	r3, [r7, #12]
 8012730:	2b02      	cmp	r3, #2
 8012732:	d9ea      	bls.n	801270a <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 8012734:	2300      	movs	r3, #0
    }
 8012736:	4618      	mov	r0, r3
 8012738:	3714      	adds	r7, #20
 801273a:	46bd      	mov	sp, r7
 801273c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012740:	4770      	bx	lr
	...

08012744 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 8012744:	b580      	push	{r7, lr}
 8012746:	b082      	sub	sp, #8
 8012748:	af00      	add	r7, sp, #0
 801274a:	6078      	str	r0, [r7, #4]
 801274c:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 801274e:	687b      	ldr	r3, [r7, #4]
 8012750:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012754:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8012758:	3301      	adds	r3, #1
 801275a:	687a      	ldr	r2, [r7, #4]
 801275c:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8012760:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        if (sendingBlock == blocks)
 8012764:	687b      	ldr	r3, [r7, #4]
 8012766:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801276a:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 801276e:	2b03      	cmp	r3, #3
 8012770:	d106      	bne.n	8012780 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 8012772:	687b      	ldr	r3, [r7, #4]
 8012774:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012778:	461a      	mov	r2, r3
 801277a:	2300      	movs	r3, #0
 801277c:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        }
        assert(state[sendingBlock] == DRAWN);
 8012780:	687b      	ldr	r3, [r7, #4]
 8012782:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012786:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 801278a:	687a      	ldr	r2, [r7, #4]
 801278c:	4413      	add	r3, r2
 801278e:	791b      	ldrb	r3, [r3, #4]
 8012790:	b2db      	uxtb	r3, r3
 8012792:	2b02      	cmp	r3, #2
 8012794:	d005      	beq.n	80127a2 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 8012796:	4b16      	ldr	r3, [pc, #88]	; (80127f0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 8012798:	4a16      	ldr	r2, [pc, #88]	; (80127f4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 801279a:	21dd      	movs	r1, #221	; 0xdd
 801279c:	4816      	ldr	r0, [pc, #88]	; (80127f8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 801279e:	f018 fe0f 	bl	802b3c0 <__assert_func>
        rect = blockRect[sendingBlock];
 80127a2:	687b      	ldr	r3, [r7, #4]
 80127a4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80127a8:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 80127ac:	683a      	ldr	r2, [r7, #0]
 80127ae:	6879      	ldr	r1, [r7, #4]
 80127b0:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 80127b4:	00db      	lsls	r3, r3, #3
 80127b6:	440b      	add	r3, r1
 80127b8:	cb03      	ldmia	r3!, {r0, r1}
 80127ba:	6010      	str	r0, [r2, #0]
 80127bc:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 80127be:	687b      	ldr	r3, [r7, #4]
 80127c0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80127c4:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 80127c8:	687a      	ldr	r2, [r7, #4]
 80127ca:	4413      	add	r3, r2
 80127cc:	2203      	movs	r2, #3
 80127ce:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 80127d0:	687b      	ldr	r3, [r7, #4]
 80127d2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80127d6:	f8d3 26a0 	ldr.w	r2, [r3, #1696]	; 0x6a0
 80127da:	4613      	mov	r3, r2
 80127dc:	011b      	lsls	r3, r3, #4
 80127de:	1a9b      	subs	r3, r3, r2
 80127e0:	01db      	lsls	r3, r3, #7
 80127e2:	3308      	adds	r3, #8
 80127e4:	687a      	ldr	r2, [r7, #4]
 80127e6:	4413      	add	r3, r2
    }
 80127e8:	4618      	mov	r0, r3
 80127ea:	3708      	adds	r7, #8
 80127ec:	46bd      	mov	sp, r7
 80127ee:	bd80      	pop	{r7, pc}
 80127f0:	0802dae0 	.word	0x0802dae0
 80127f4:	0802db00 	.word	0x0802db00
 80127f8:	0802d994 	.word	0x0802d994

080127fc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 80127fc:	b580      	push	{r7, lr}
 80127fe:	b084      	sub	sp, #16
 8012800:	af00      	add	r7, sp, #0
 8012802:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 8012804:	687b      	ldr	r3, [r7, #4]
 8012806:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801280a:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 801280e:	3301      	adds	r3, #1
 8012810:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 8012812:	68fb      	ldr	r3, [r7, #12]
 8012814:	2b03      	cmp	r3, #3
 8012816:	d101      	bne.n	801281c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 8012818:	2300      	movs	r3, #0
 801281a:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 801281c:	687a      	ldr	r2, [r7, #4]
 801281e:	68fb      	ldr	r3, [r7, #12]
 8012820:	4413      	add	r3, r2
 8012822:	3304      	adds	r3, #4
 8012824:	781b      	ldrb	r3, [r3, #0]
 8012826:	b2db      	uxtb	r3, r3
 8012828:	2b02      	cmp	r3, #2
 801282a:	d005      	beq.n	8012838 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 801282c:	4b07      	ldr	r3, [pc, #28]	; (801284c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 801282e:	4a08      	ldr	r2, [pc, #32]	; (8012850 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 8012830:	21ea      	movs	r1, #234	; 0xea
 8012832:	4808      	ldr	r0, [pc, #32]	; (8012854 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 8012834:	f018 fdc4 	bl	802b3c0 <__assert_func>
        return blockRect[nextSendingBlock];
 8012838:	68fb      	ldr	r3, [r7, #12]
 801283a:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 801283e:	00db      	lsls	r3, r3, #3
 8012840:	687a      	ldr	r2, [r7, #4]
 8012842:	4413      	add	r3, r2
    }
 8012844:	4618      	mov	r0, r3
 8012846:	3710      	adds	r7, #16
 8012848:	46bd      	mov	sp, r7
 801284a:	bd80      	pop	{r7, pc}
 801284c:	0802dc00 	.word	0x0802dc00
 8012850:	0802dc24 	.word	0x0802dc24
 8012854:	0802d994 	.word	0x0802d994

08012858 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 8012858:	b480      	push	{r7}
 801285a:	b085      	sub	sp, #20
 801285c:	af00      	add	r7, sp, #0
 801285e:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 8012860:	687b      	ldr	r3, [r7, #4]
 8012862:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012866:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 801286a:	3301      	adds	r3, #1
 801286c:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 801286e:	68fb      	ldr	r3, [r7, #12]
 8012870:	2b03      	cmp	r3, #3
 8012872:	d101      	bne.n	8012878 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 8012874:	2300      	movs	r3, #0
 8012876:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 8012878:	687a      	ldr	r2, [r7, #4]
 801287a:	68fb      	ldr	r3, [r7, #12]
 801287c:	4413      	add	r3, r2
 801287e:	3304      	adds	r3, #4
 8012880:	781b      	ldrb	r3, [r3, #0]
 8012882:	b2db      	uxtb	r3, r3
 8012884:	2b00      	cmp	r3, #0
 8012886:	bf0c      	ite	eq
 8012888:	2301      	moveq	r3, #1
 801288a:	2300      	movne	r3, #0
 801288c:	b2db      	uxtb	r3, r3
    }
 801288e:	4618      	mov	r0, r3
 8012890:	3714      	adds	r7, #20
 8012892:	46bd      	mov	sp, r7
 8012894:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012898:	4770      	bx	lr
	...

0801289c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 801289c:	b580      	push	{r7, lr}
 801289e:	b082      	sub	sp, #8
 80128a0:	af00      	add	r7, sp, #0
 80128a2:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 80128a4:	687b      	ldr	r3, [r7, #4]
 80128a6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80128aa:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 80128ae:	687a      	ldr	r2, [r7, #4]
 80128b0:	4413      	add	r3, r2
 80128b2:	791b      	ldrb	r3, [r3, #4]
 80128b4:	b2db      	uxtb	r3, r3
 80128b6:	2b03      	cmp	r3, #3
 80128b8:	d005      	beq.n	80128c6 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 80128ba:	4b09      	ldr	r3, [pc, #36]	; (80128e0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 80128bc:	4a09      	ldr	r2, [pc, #36]	; (80128e4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 80128be:	21ff      	movs	r1, #255	; 0xff
 80128c0:	4809      	ldr	r0, [pc, #36]	; (80128e8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 80128c2:	f018 fd7d 	bl	802b3c0 <__assert_func>
        state[sendingBlock] = EMPTY;
 80128c6:	687b      	ldr	r3, [r7, #4]
 80128c8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80128cc:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 80128d0:	687a      	ldr	r2, [r7, #4]
 80128d2:	4413      	add	r3, r2
 80128d4:	2200      	movs	r2, #0
 80128d6:	711a      	strb	r2, [r3, #4]
    }
 80128d8:	bf00      	nop
 80128da:	3708      	adds	r7, #8
 80128dc:	46bd      	mov	sp, r7
 80128de:	bd80      	pop	{r7, pc}
 80128e0:	0802dd04 	.word	0x0802dd04
 80128e4:	0802dd24 	.word	0x0802dd24
 80128e8:	0802d994 	.word	0x0802d994

080128ec <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 80128ec:	b580      	push	{r7, lr}
 80128ee:	af00      	add	r7, sp, #0
 80128f0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80128f4:	2001      	movs	r0, #1
 80128f6:	f7ff fdf9 	bl	80124ec <_Z41__static_initialization_and_destruction_0ii>
 80128fa:	bd80      	pop	{r7, pc}

080128fc <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 80128fc:	b580      	push	{r7, lr}
 80128fe:	af00      	add	r7, sp, #0
 8012900:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012904:	2000      	movs	r0, #0
 8012906:	f7ff fdf1 	bl	80124ec <_Z41__static_initialization_and_destruction_0ii>
 801290a:	bd80      	pop	{r7, pc}

0801290c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 801290c:	8880      	ldrh	r0, [r0, #4]
 801290e:	4770      	bx	lr

08012910 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8012910:	b570      	push	{r4, r5, r6, lr}
 8012912:	6803      	ldr	r3, [r0, #0]
 8012914:	4605      	mov	r5, r0
 8012916:	460c      	mov	r4, r1
 8012918:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801291a:	2100      	movs	r1, #0
 801291c:	4798      	blx	r3
 801291e:	682b      	ldr	r3, [r5, #0]
 8012920:	4606      	mov	r6, r0
 8012922:	6a1b      	ldr	r3, [r3, #32]
 8012924:	4628      	mov	r0, r5
 8012926:	4798      	blx	r3
 8012928:	1ba4      	subs	r4, r4, r6
 801292a:	b2a4      	uxth	r4, r4
 801292c:	fbb4 f0f0 	udiv	r0, r4, r0
 8012930:	bd70      	pop	{r4, r5, r6, pc}

08012932 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8012932:	2300      	movs	r3, #0
 8012934:	8083      	strh	r3, [r0, #4]
 8012936:	4770      	bx	lr

08012938 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8012938:	b510      	push	{r4, lr}
 801293a:	6803      	ldr	r3, [r0, #0]
 801293c:	8881      	ldrh	r1, [r0, #4]
 801293e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012940:	4604      	mov	r4, r0
 8012942:	4798      	blx	r3
 8012944:	88a3      	ldrh	r3, [r4, #4]
 8012946:	3301      	adds	r3, #1
 8012948:	80a3      	strh	r3, [r4, #4]
 801294a:	bd10      	pop	{r4, pc}

0801294c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 801294c:	6803      	ldr	r3, [r0, #0]
 801294e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012950:	4718      	bx	r3

08012952 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8012952:	4770      	bx	lr

08012954 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8012954:	4a02      	ldr	r2, [pc, #8]	; (8012960 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8012956:	6002      	str	r2, [r0, #0]
 8012958:	2200      	movs	r2, #0
 801295a:	8082      	strh	r2, [r0, #4]
 801295c:	4770      	bx	lr
 801295e:	bf00      	nop
 8012960:	0802ed10 	.word	0x0802ed10

08012964 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8012964:	b510      	push	{r4, lr}
 8012966:	6803      	ldr	r3, [r0, #0]
 8012968:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801296c:	4604      	mov	r4, r0
 801296e:	4798      	blx	r3
 8012970:	b110      	cbz	r0, 8012978 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 8012972:	4620      	mov	r0, r4
 8012974:	f7f7 fa1a 	bl	8009dac <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012978:	bd10      	pop	{r4, pc}

0801297a <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 801297a:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 801297e:	4770      	bx	lr

08012980 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 8012980:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8012984:	4770      	bx	lr

08012986 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8012986:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 801298a:	4770      	bx	lr

0801298c <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 801298c:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 8012990:	4770      	bx	lr

08012992 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 8012992:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012994:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8012998:	461e      	mov	r6, r3
 801299a:	6803      	ldr	r3, [r0, #0]
 801299c:	460f      	mov	r7, r1
 801299e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80129a2:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 80129a6:	4604      	mov	r4, r0
 80129a8:	4615      	mov	r5, r2
 80129aa:	4798      	blx	r3
 80129ac:	b93e      	cbnz	r6, 80129be <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 80129ae:	1bed      	subs	r5, r5, r7
 80129b0:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 80129b4:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80129b8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 80129bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80129be:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 80129c2:	e7f7      	b.n	80129b4 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

080129c4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 80129c4:	b510      	push	{r4, lr}
 80129c6:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80129ca:	600c      	str	r4, [r1, #0]
 80129cc:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80129d0:	6011      	str	r1, [r2, #0]
 80129d2:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80129d6:	801a      	strh	r2, [r3, #0]
 80129d8:	9b02      	ldr	r3, [sp, #8]
 80129da:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 80129de:	801a      	strh	r2, [r3, #0]
 80129e0:	bd10      	pop	{r4, pc}

080129e2 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 80129e2:	b510      	push	{r4, lr}
 80129e4:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80129e8:	600c      	str	r4, [r1, #0]
 80129ea:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80129ee:	6011      	str	r1, [r2, #0]
 80129f0:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80129f4:	801a      	strh	r2, [r3, #0]
 80129f6:	bd10      	pop	{r4, pc}

080129f8 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 80129f8:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80129fc:	600b      	str	r3, [r1, #0]
 80129fe:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8012a02:	6013      	str	r3, [r2, #0]
 8012a04:	4770      	bx	lr

08012a06 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 8012a06:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 8012a0a:	4770      	bx	lr

08012a0c <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 8012a0c:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 8012a10:	4770      	bx	lr

08012a12 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 8012a12:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8012a16:	4770      	bx	lr

08012a18 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8012a18:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8012a1c:	4770      	bx	lr

08012a1e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 8012a1e:	b570      	push	{r4, r5, r6, lr}
 8012a20:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8012a24:	428d      	cmp	r5, r1
 8012a26:	bfb8      	it	lt
 8012a28:	460d      	movlt	r5, r1
 8012a2a:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 8012a2e:	428d      	cmp	r5, r1
 8012a30:	4604      	mov	r4, r0
 8012a32:	bfa8      	it	ge
 8012a34:	460d      	movge	r5, r1
 8012a36:	4616      	mov	r6, r2
 8012a38:	b99a      	cbnz	r2, 8012a62 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8012a3a:	6803      	ldr	r3, [r0, #0]
 8012a3c:	4629      	mov	r1, r5
 8012a3e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012a42:	4798      	blx	r3
 8012a44:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012a48:	b368      	cbz	r0, 8012aa6 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8012a4a:	6803      	ldr	r3, [r0, #0]
 8012a4c:	68db      	ldr	r3, [r3, #12]
 8012a4e:	4798      	blx	r3
 8012a50:	b348      	cbz	r0, 8012aa6 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8012a52:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012a56:	6803      	ldr	r3, [r0, #0]
 8012a58:	4621      	mov	r1, r4
 8012a5a:	689b      	ldr	r3, [r3, #8]
 8012a5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012a60:	4718      	bx	r3
 8012a62:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8012a66:	2b00      	cmp	r3, #0
 8012a68:	dd08      	ble.n	8012a7c <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8012a6a:	f006 fc5b 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 8012a6e:	4621      	mov	r1, r4
 8012a70:	3004      	adds	r0, #4
 8012a72:	f006 fc7c 	bl	801936e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012a76:	2300      	movs	r3, #0
 8012a78:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8012a7c:	6823      	ldr	r3, [r4, #0]
 8012a7e:	4620      	mov	r0, r4
 8012a80:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8012a84:	4798      	blx	r3
 8012a86:	2300      	movs	r3, #0
 8012a88:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8012a8c:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 8012a90:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8012a94:	f006 fc46 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 8012a98:	4621      	mov	r1, r4
 8012a9a:	3004      	adds	r0, #4
 8012a9c:	f006 fd10 	bl	80194c0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8012aa0:	2301      	movs	r3, #1
 8012aa2:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8012aa6:	bd70      	pop	{r4, r5, r6, pc}

08012aa8 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8012aa8:	b510      	push	{r4, lr}
 8012aaa:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8012aae:	4299      	cmp	r1, r3
 8012ab0:	bfb8      	it	lt
 8012ab2:	4619      	movlt	r1, r3
 8012ab4:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8012ab8:	4299      	cmp	r1, r3
 8012aba:	bfa8      	it	ge
 8012abc:	4619      	movge	r1, r3
 8012abe:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 8012ac2:	428b      	cmp	r3, r1
 8012ac4:	4604      	mov	r4, r0
 8012ac6:	d010      	beq.n	8012aea <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8012ac8:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 8012acc:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 8012ad0:	b158      	cbz	r0, 8012aea <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8012ad2:	6803      	ldr	r3, [r0, #0]
 8012ad4:	68db      	ldr	r3, [r3, #12]
 8012ad6:	4798      	blx	r3
 8012ad8:	b138      	cbz	r0, 8012aea <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8012ada:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 8012ade:	6803      	ldr	r3, [r0, #0]
 8012ae0:	4621      	mov	r1, r4
 8012ae2:	689b      	ldr	r3, [r3, #8]
 8012ae4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012ae8:	4718      	bx	r3
 8012aea:	bd10      	pop	{r4, pc}

08012aec <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 8012aec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012aee:	4604      	mov	r4, r0
 8012af0:	460d      	mov	r5, r1
 8012af2:	b1a9      	cbz	r1, 8012b20 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8012af4:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 8012af8:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 8012afc:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 8012b00:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8012b04:	ab01      	add	r3, sp, #4
 8012b06:	1a12      	subs	r2, r2, r0
 8012b08:	1b89      	subs	r1, r1, r6
 8012b0a:	1a38      	subs	r0, r7, r0
 8012b0c:	f007 fe98 	bl	801a840 <_ZN8touchgfx6muldivElllRl>
 8012b10:	4629      	mov	r1, r5
 8012b12:	ab01      	add	r3, sp, #4
 8012b14:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8012b18:	4430      	add	r0, r6
 8012b1a:	f007 fe91 	bl	801a840 <_ZN8touchgfx6muldivElllRl>
 8012b1e:	b285      	uxth	r5, r0
 8012b20:	4628      	mov	r0, r5
 8012b22:	b003      	add	sp, #12
 8012b24:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012b26 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8012b26:	b570      	push	{r4, r5, r6, lr}
 8012b28:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8012b2c:	4604      	mov	r4, r0
 8012b2e:	2b00      	cmp	r3, #0
 8012b30:	d035      	beq.n	8012b9e <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012b32:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8012b36:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8012b3a:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 8012b3e:	3001      	adds	r0, #1
 8012b40:	1ad2      	subs	r2, r2, r3
 8012b42:	b212      	sxth	r2, r2
 8012b44:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8012b48:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8012b4c:	2100      	movs	r1, #0
 8012b4e:	b280      	uxth	r0, r0
 8012b50:	47a8      	blx	r5
 8012b52:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8012b56:	6823      	ldr	r3, [r4, #0]
 8012b58:	4401      	add	r1, r0
 8012b5a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012b5e:	4620      	mov	r0, r4
 8012b60:	4798      	blx	r3
 8012b62:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012b66:	429a      	cmp	r2, r3
 8012b68:	db19      	blt.n	8012b9e <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012b6a:	2500      	movs	r5, #0
 8012b6c:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8012b70:	f006 fbd8 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 8012b74:	4621      	mov	r1, r4
 8012b76:	3004      	adds	r0, #4
 8012b78:	f006 fbf9 	bl	801936e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012b7c:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012b80:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8012b84:	b158      	cbz	r0, 8012b9e <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012b86:	6803      	ldr	r3, [r0, #0]
 8012b88:	68db      	ldr	r3, [r3, #12]
 8012b8a:	4798      	blx	r3
 8012b8c:	b138      	cbz	r0, 8012b9e <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012b8e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012b92:	6803      	ldr	r3, [r0, #0]
 8012b94:	4621      	mov	r1, r4
 8012b96:	689b      	ldr	r3, [r3, #8]
 8012b98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012b9c:	4718      	bx	r3
 8012b9e:	bd70      	pop	{r4, r5, r6, pc}

08012ba0 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 8012ba0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012ba4:	4604      	mov	r4, r0
 8012ba6:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8012baa:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 8012bae:	460e      	mov	r6, r1
 8012bb0:	4615      	mov	r5, r2
 8012bb2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8012bb6:	4619      	mov	r1, r3
 8012bb8:	463a      	mov	r2, r7
 8012bba:	3058      	adds	r0, #88	; 0x58
 8012bbc:	4698      	mov	r8, r3
 8012bbe:	f7f7 f9ae 	bl	8009f1e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012bc2:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8012bc6:	4446      	add	r6, r8
 8012bc8:	42b3      	cmp	r3, r6
 8012bca:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012bce:	bfb8      	it	lt
 8012bd0:	8126      	strhlt	r6, [r4, #8]
 8012bd2:	443d      	add	r5, r7
 8012bd4:	42ab      	cmp	r3, r5
 8012bd6:	bfb8      	it	lt
 8012bd8:	8165      	strhlt	r5, [r4, #10]
 8012bda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012bde <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8012bde:	b510      	push	{r4, lr}
 8012be0:	4604      	mov	r4, r0
 8012be2:	302c      	adds	r0, #44	; 0x2c
 8012be4:	f003 ffaa 	bl	8016b3c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012be8:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8012bec:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8012bf0:	4620      	mov	r0, r4
 8012bf2:	f7f7 f994 	bl	8009f1e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012bf6:	bd10      	pop	{r4, pc}

08012bf8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8012bf8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012bfa:	4604      	mov	r4, r0
 8012bfc:	4626      	mov	r6, r4
 8012bfe:	2500      	movs	r5, #0
 8012c00:	f7f7 f884 	bl	8009d0c <_ZN8touchgfx8DrawableC1Ev>
 8012c04:	4b23      	ldr	r3, [pc, #140]	; (8012c94 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 8012c06:	62a5      	str	r5, [r4, #40]	; 0x28
 8012c08:	f846 3b2c 	str.w	r3, [r6], #44
 8012c0c:	2226      	movs	r2, #38	; 0x26
 8012c0e:	4629      	mov	r1, r5
 8012c10:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8012c14:	4630      	mov	r0, r6
 8012c16:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012c1a:	f018 fdd6 	bl	802b7ca <memset>
 8012c1e:	4630      	mov	r0, r6
 8012c20:	f7f7 f874 	bl	8009d0c <_ZN8touchgfx8DrawableC1Ev>
 8012c24:	a902      	add	r1, sp, #8
 8012c26:	4b1c      	ldr	r3, [pc, #112]	; (8012c98 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8012c28:	62e3      	str	r3, [r4, #44]	; 0x2c
 8012c2a:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8012c2e:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8012c32:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 8012c36:	4630      	mov	r0, r6
 8012c38:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8012c3c:	f003 ff7e 	bl	8016b3c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012c40:	4638      	mov	r0, r7
 8012c42:	f7f7 f863 	bl	8009d0c <_ZN8touchgfx8DrawableC1Ev>
 8012c46:	4b15      	ldr	r3, [pc, #84]	; (8012c9c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8012c48:	65a3      	str	r3, [r4, #88]	; 0x58
 8012c4a:	2364      	movs	r3, #100	; 0x64
 8012c4c:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8012c50:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 8012c54:	4b12      	ldr	r3, [pc, #72]	; (8012ca0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 8012c56:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8012c5a:	4629      	mov	r1, r5
 8012c5c:	4630      	mov	r0, r6
 8012c5e:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 8012c62:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8012c66:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8012c6a:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8012c6e:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 8012c72:	f7f7 f8da 	bl	8009e2a <_ZN8touchgfx8Drawable4setXEs>
 8012c76:	4629      	mov	r1, r5
 8012c78:	4630      	mov	r0, r6
 8012c7a:	f7f7 f8e5 	bl	8009e48 <_ZN8touchgfx8Drawable4setYEs>
 8012c7e:	4631      	mov	r1, r6
 8012c80:	4620      	mov	r0, r4
 8012c82:	f000 f9d7 	bl	8013034 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012c86:	4620      	mov	r0, r4
 8012c88:	4639      	mov	r1, r7
 8012c8a:	f000 f9d3 	bl	8013034 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012c8e:	4620      	mov	r0, r4
 8012c90:	b003      	add	sp, #12
 8012c92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012c94:	0802ed44 	.word	0x0802ed44
 8012c98:	0802f910 	.word	0x0802f910
 8012c9c:	0802efc8 	.word	0x0802efc8
 8012ca0:	0801af0b 	.word	0x0801af0b

08012ca4 <_ZNK8touchgfx12DigitalClock14getDisplayModeEv>:
 8012ca4:	f890 002f 	ldrb.w	r0, [r0, #47]	; 0x2f
 8012ca8:	4770      	bx	lr

08012caa <_ZNK8touchgfx12DigitalClock17invalidateContentEv>:
 8012caa:	b510      	push	{r4, lr}
 8012cac:	6803      	ldr	r3, [r0, #0]
 8012cae:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012cb2:	4604      	mov	r4, r0
 8012cb4:	4798      	blx	r3
 8012cb6:	b110      	cbz	r0, 8012cbe <_ZNK8touchgfx12DigitalClock17invalidateContentEv+0x14>
 8012cb8:	4620      	mov	r0, r4
 8012cba:	f7f7 f877 	bl	8009dac <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012cbe:	bd10      	pop	{r4, pc}

08012cc0 <_ZN8touchgfx12DigitalClock8setWidthEs>:
 8012cc0:	b508      	push	{r3, lr}
 8012cc2:	3034      	adds	r0, #52	; 0x34
 8012cc4:	f820 1c2c 	strh.w	r1, [r0, #-44]
 8012cc8:	f7f7 fb08 	bl	800a2dc <_ZN8touchgfx8TextArea8setWidthEs>
 8012ccc:	bd08      	pop	{r3, pc}

08012cce <_ZN8touchgfx12DigitalClock9setHeightEs>:
 8012cce:	b508      	push	{r3, lr}
 8012cd0:	3034      	adds	r0, #52	; 0x34
 8012cd2:	f820 1c2a 	strh.w	r1, [r0, #-42]
 8012cd6:	f7f7 fb21 	bl	800a31c <_ZN8touchgfx8TextArea9setHeightEs>
 8012cda:	bd08      	pop	{r3, pc}

08012cdc <_ZN8touchgfx12DigitalClock12setBaselineYEs>:
 8012cdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012ce0:	4a10      	ldr	r2, [pc, #64]	; (8012d24 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x48>)
 8012ce2:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8012ce6:	8812      	ldrh	r2, [r2, #0]
 8012ce8:	429a      	cmp	r2, r3
 8012cea:	4604      	mov	r4, r0
 8012cec:	460d      	mov	r5, r1
 8012cee:	d916      	bls.n	8012d1e <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x42>
 8012cf0:	6802      	ldr	r2, [r0, #0]
 8012cf2:	f9b0 7004 	ldrsh.w	r7, [r0, #4]
 8012cf6:	6d96      	ldr	r6, [r2, #88]	; 0x58
 8012cf8:	4a0b      	ldr	r2, [pc, #44]	; (8012d28 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x4c>)
 8012cfa:	6812      	ldr	r2, [r2, #0]
 8012cfc:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8012d00:	4b0a      	ldr	r3, [pc, #40]	; (8012d2c <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x50>)
 8012d02:	681b      	ldr	r3, [r3, #0]
 8012d04:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8012d08:	6803      	ldr	r3, [r0, #0]
 8012d0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012d0c:	4798      	blx	r3
 8012d0e:	1a2a      	subs	r2, r5, r0
 8012d10:	4639      	mov	r1, r7
 8012d12:	4620      	mov	r0, r4
 8012d14:	4633      	mov	r3, r6
 8012d16:	b212      	sxth	r2, r2
 8012d18:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012d1c:	4718      	bx	r3
 8012d1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012d22:	bf00      	nop
 8012d24:	200022a8 	.word	0x200022a8
 8012d28:	200022a4 	.word	0x200022a4
 8012d2c:	200022ac 	.word	0x200022ac

08012d30 <_ZN8touchgfx12DigitalClock8setAlphaEh>:
 8012d30:	f880 106a 	strb.w	r1, [r0, #106]	; 0x6a
 8012d34:	4770      	bx	lr

08012d36 <_ZNK8touchgfx12DigitalClock8getAlphaEv>:
 8012d36:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8012d3a:	4770      	bx	lr

08012d3c <_ZN8touchgfx12DigitalClock8setColorENS_9colortypeE>:
 8012d3c:	b508      	push	{r3, lr}
 8012d3e:	3034      	adds	r0, #52	; 0x34
 8012d40:	6301      	str	r1, [r0, #48]	; 0x30
 8012d42:	f7f7 f833 	bl	8009dac <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012d46:	bd08      	pop	{r3, pc}

08012d48 <_ZNK8touchgfx12DigitalClock8getColorEv>:
 8012d48:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8012d4a:	4770      	bx	lr

08012d4c <_ZNK8touchgfx12DigitalClock12getTextWidthEv>:
 8012d4c:	3034      	adds	r0, #52	; 0x34
 8012d4e:	f002 bf85 	b.w	8015c5c <_ZNK8touchgfx8TextArea12getTextWidthEv>

08012d52 <_ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE>:
 8012d52:	b538      	push	{r3, r4, r5, lr}
 8012d54:	f100 0434 	add.w	r4, r0, #52	; 0x34
 8012d58:	460d      	mov	r5, r1
 8012d5a:	4620      	mov	r0, r4
 8012d5c:	f7f7 f826 	bl	8009dac <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012d60:	4620      	mov	r0, r4
 8012d62:	4629      	mov	r1, r5
 8012d64:	f003 faae 	bl	80162c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8012d68:	4620      	mov	r0, r4
 8012d6a:	f7f7 f81f 	bl	8009dac <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012d6e:	bd38      	pop	{r3, r4, r5, pc}

08012d70 <_ZN8touchgfx12DigitalClock11updateClockEv>:
 8012d70:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8012d74:	4604      	mov	r4, r0
 8012d76:	f100 0634 	add.w	r6, r0, #52	; 0x34
 8012d7a:	4630      	mov	r0, r6
 8012d7c:	f7f7 f816 	bl	8009dac <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012d80:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 8012d84:	bb03      	cbnz	r3, 8012dc8 <_ZN8touchgfx12DigitalClock11updateClockEv+0x58>
 8012d86:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 8012d8a:	4a41      	ldr	r2, [pc, #260]	; (8012e90 <_ZN8touchgfx12DigitalClock11updateClockEv+0x120>)
 8012d8c:	4d41      	ldr	r5, [pc, #260]	; (8012e94 <_ZN8touchgfx12DigitalClock11updateClockEv+0x124>)
 8012d8e:	4620      	mov	r0, r4
 8012d90:	2b00      	cmp	r3, #0
 8012d92:	bf08      	it	eq
 8012d94:	4615      	moveq	r5, r2
 8012d96:	f000 f92a 	bl	8012fee <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>
 8012d9a:	4680      	mov	r8, r0
 8012d9c:	4620      	mov	r0, r4
 8012d9e:	f000 f939 	bl	8013014 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 8012da2:	4681      	mov	r9, r0
 8012da4:	4620      	mov	r0, r4
 8012da6:	f000 f92e 	bl	8013006 <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>
 8012daa:	2800      	cmp	r0, #0
 8012dac:	bf14      	ite	ne
 8012dae:	2341      	movne	r3, #65	; 0x41
 8012db0:	2350      	moveq	r3, #80	; 0x50
 8012db2:	f104 0780 	add.w	r7, r4, #128	; 0x80
 8012db6:	e9cd 9300 	strd	r9, r3, [sp]
 8012dba:	462a      	mov	r2, r5
 8012dbc:	4643      	mov	r3, r8
 8012dbe:	210c      	movs	r1, #12
 8012dc0:	4638      	mov	r0, r7
 8012dc2:	f009 fcf7 	bl	801c7b4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8012dc6:	e017      	b.n	8012df8 <_ZN8touchgfx12DigitalClock11updateClockEv+0x88>
 8012dc8:	2b01      	cmp	r3, #1
 8012dca:	d11b      	bne.n	8012e04 <_ZN8touchgfx12DigitalClock11updateClockEv+0x94>
 8012dcc:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 8012dd0:	4a31      	ldr	r2, [pc, #196]	; (8012e98 <_ZN8touchgfx12DigitalClock11updateClockEv+0x128>)
 8012dd2:	4d32      	ldr	r5, [pc, #200]	; (8012e9c <_ZN8touchgfx12DigitalClock11updateClockEv+0x12c>)
 8012dd4:	4620      	mov	r0, r4
 8012dd6:	2b00      	cmp	r3, #0
 8012dd8:	bf08      	it	eq
 8012dda:	4615      	moveq	r5, r2
 8012ddc:	f000 f904 	bl	8012fe8 <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>
 8012de0:	4607      	mov	r7, r0
 8012de2:	4620      	mov	r0, r4
 8012de4:	f000 f916 	bl	8013014 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 8012de8:	463b      	mov	r3, r7
 8012dea:	9000      	str	r0, [sp, #0]
 8012dec:	462a      	mov	r2, r5
 8012dee:	210c      	movs	r1, #12
 8012df0:	f104 0080 	add.w	r0, r4, #128	; 0x80
 8012df4:	f009 fcde 	bl	801c7b4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8012df8:	4630      	mov	r0, r6
 8012dfa:	f7f6 ffd7 	bl	8009dac <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012dfe:	b004      	add	sp, #16
 8012e00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012e04:	2b02      	cmp	r3, #2
 8012e06:	d126      	bne.n	8012e56 <_ZN8touchgfx12DigitalClock11updateClockEv+0xe6>
 8012e08:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 8012e0c:	4a24      	ldr	r2, [pc, #144]	; (8012ea0 <_ZN8touchgfx12DigitalClock11updateClockEv+0x130>)
 8012e0e:	4d25      	ldr	r5, [pc, #148]	; (8012ea4 <_ZN8touchgfx12DigitalClock11updateClockEv+0x134>)
 8012e10:	4620      	mov	r0, r4
 8012e12:	2b00      	cmp	r3, #0
 8012e14:	bf08      	it	eq
 8012e16:	4615      	moveq	r5, r2
 8012e18:	f000 f8e9 	bl	8012fee <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>
 8012e1c:	4680      	mov	r8, r0
 8012e1e:	4620      	mov	r0, r4
 8012e20:	f000 f8f8 	bl	8013014 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 8012e24:	4681      	mov	r9, r0
 8012e26:	4620      	mov	r0, r4
 8012e28:	f000 f8f7 	bl	801301a <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>
 8012e2c:	4682      	mov	sl, r0
 8012e2e:	4620      	mov	r0, r4
 8012e30:	f000 f8e9 	bl	8013006 <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>
 8012e34:	2800      	cmp	r0, #0
 8012e36:	bf14      	ite	ne
 8012e38:	2341      	movne	r3, #65	; 0x41
 8012e3a:	2350      	moveq	r3, #80	; 0x50
 8012e3c:	f104 0780 	add.w	r7, r4, #128	; 0x80
 8012e40:	e9cd a301 	strd	sl, r3, [sp, #4]
 8012e44:	f8cd 9000 	str.w	r9, [sp]
 8012e48:	4643      	mov	r3, r8
 8012e4a:	462a      	mov	r2, r5
 8012e4c:	210c      	movs	r1, #12
 8012e4e:	4638      	mov	r0, r7
 8012e50:	f009 fcb0 	bl	801c7b4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8012e54:	e7d0      	b.n	8012df8 <_ZN8touchgfx12DigitalClock11updateClockEv+0x88>
 8012e56:	2b03      	cmp	r3, #3
 8012e58:	d1ce      	bne.n	8012df8 <_ZN8touchgfx12DigitalClock11updateClockEv+0x88>
 8012e5a:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 8012e5e:	4a12      	ldr	r2, [pc, #72]	; (8012ea8 <_ZN8touchgfx12DigitalClock11updateClockEv+0x138>)
 8012e60:	4d12      	ldr	r5, [pc, #72]	; (8012eac <_ZN8touchgfx12DigitalClock11updateClockEv+0x13c>)
 8012e62:	4620      	mov	r0, r4
 8012e64:	2b00      	cmp	r3, #0
 8012e66:	bf08      	it	eq
 8012e68:	4615      	moveq	r5, r2
 8012e6a:	f000 f8bd 	bl	8012fe8 <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>
 8012e6e:	4607      	mov	r7, r0
 8012e70:	4620      	mov	r0, r4
 8012e72:	f000 f8cf 	bl	8013014 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 8012e76:	4680      	mov	r8, r0
 8012e78:	4620      	mov	r0, r4
 8012e7a:	f000 f8ce 	bl	801301a <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>
 8012e7e:	463b      	mov	r3, r7
 8012e80:	e9cd 8000 	strd	r8, r0, [sp]
 8012e84:	462a      	mov	r2, r5
 8012e86:	210c      	movs	r1, #12
 8012e88:	f104 0080 	add.w	r0, r4, #128	; 0x80
 8012e8c:	e799      	b.n	8012dc2 <_ZN8touchgfx12DigitalClock11updateClockEv+0x52>
 8012e8e:	bf00      	nop
 8012e90:	0802ee10 	.word	0x0802ee10
 8012e94:	0802ee3a 	.word	0x0802ee3a
 8012e98:	0802ee1c 	.word	0x0802ee1c
 8012e9c:	0802ee5a 	.word	0x0802ee5a
 8012ea0:	0802ee37 	.word	0x0802ee37
 8012ea4:	0802ee24 	.word	0x0802ee24
 8012ea8:	0802ee57 	.word	0x0802ee57
 8012eac:	0802ee48 	.word	0x0802ee48

08012eb0 <_ZN8touchgfx12DigitalClockC1Ev>:
 8012eb0:	b510      	push	{r4, lr}
 8012eb2:	4604      	mov	r4, r0
 8012eb4:	f000 f87c 	bl	8012fb0 <_ZN8touchgfx13AbstractClockC1Ev>
 8012eb8:	2201      	movs	r2, #1
 8012eba:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8012ebe:	4a20      	ldr	r2, [pc, #128]	; (8012f40 <_ZN8touchgfx12DigitalClockC1Ev+0x90>)
 8012ec0:	65e2      	str	r2, [r4, #92]	; 0x5c
 8012ec2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012ec6:	f8a4 2060 	strh.w	r2, [r4, #96]	; 0x60
 8012eca:	f8a4 2074 	strh.w	r2, [r4, #116]	; 0x74
 8012ece:	f8a4 2076 	strh.w	r2, [r4, #118]	; 0x76
 8012ed2:	4b1c      	ldr	r3, [pc, #112]	; (8012f44 <_ZN8touchgfx12DigitalClockC1Ev+0x94>)
 8012ed4:	4a1c      	ldr	r2, [pc, #112]	; (8012f48 <_ZN8touchgfx12DigitalClockC1Ev+0x98>)
 8012ed6:	6023      	str	r3, [r4, #0]
 8012ed8:	6362      	str	r2, [r4, #52]	; 0x34
 8012eda:	2303      	movs	r3, #3
 8012edc:	4622      	mov	r2, r4
 8012ede:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 8012ee2:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 8012ee6:	2300      	movs	r3, #0
 8012ee8:	66a1      	str	r1, [r4, #104]	; 0x68
 8012eea:	f884 3030 	strb.w	r3, [r4, #48]	; 0x30
 8012eee:	8723      	strh	r3, [r4, #56]	; 0x38
 8012ef0:	8763      	strh	r3, [r4, #58]	; 0x3a
 8012ef2:	87a3      	strh	r3, [r4, #60]	; 0x3c
 8012ef4:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8012ef6:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
 8012efa:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 8012efe:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
 8012f02:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
 8012f06:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8012f0a:	6523      	str	r3, [r4, #80]	; 0x50
 8012f0c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8012f10:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8012f14:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8012f18:	6663      	str	r3, [r4, #100]	; 0x64
 8012f1a:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
 8012f1e:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8012f22:	f8a4 3070 	strh.w	r3, [r4, #112]	; 0x70
 8012f26:	f8a4 3072 	strh.w	r3, [r4, #114]	; 0x72
 8012f2a:	67a3      	str	r3, [r4, #120]	; 0x78
 8012f2c:	f822 3f80 	strh.w	r3, [r2, #128]!
 8012f30:	4620      	mov	r0, r4
 8012f32:	67e2      	str	r2, [r4, #124]	; 0x7c
 8012f34:	f104 0134 	add.w	r1, r4, #52	; 0x34
 8012f38:	f000 f87c 	bl	8013034 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012f3c:	4620      	mov	r0, r4
 8012f3e:	bd10      	pop	{r4, pc}
 8012f40:	0802de8c 	.word	0x0802de8c
 8012f44:	0802ee6c 	.word	0x0802ee6c
 8012f48:	0802df94 	.word	0x0802df94

08012f4c <_ZN8touchgfx12DigitalClock34displayLeadingZeroForHourIndicatorEb>:
 8012f4c:	f880 1030 	strb.w	r1, [r0, #48]	; 0x30
 8012f50:	4770      	bx	lr

08012f52 <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>:
 8012f52:	b470      	push	{r4, r5, r6}
 8012f54:	2518      	movs	r5, #24
 8012f56:	fbb1 f6f5 	udiv	r6, r1, r5
 8012f5a:	fb06 1115 	mls	r1, r6, r5, r1
 8012f5e:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 8012f62:	213c      	movs	r1, #60	; 0x3c
 8012f64:	fbb2 f5f1 	udiv	r5, r2, r1
 8012f68:	fb05 2211 	mls	r2, r5, r1, r2
 8012f6c:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
 8012f70:	fbb3 f2f1 	udiv	r2, r3, r1
 8012f74:	fb02 3311 	mls	r3, r2, r1, r3
 8012f78:	f880 302e 	strb.w	r3, [r0, #46]	; 0x2e
 8012f7c:	6803      	ldr	r3, [r0, #0]
 8012f7e:	bc70      	pop	{r4, r5, r6}
 8012f80:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8012f84:	4718      	bx	r3

08012f86 <_ZN8touchgfx13AbstractClock13setTime12HourEhhhb>:
 8012f86:	b4f0      	push	{r4, r5, r6, r7}
 8012f88:	6804      	ldr	r4, [r0, #0]
 8012f8a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8012f8e:	f8d4 5088 	ldr.w	r5, [r4, #136]	; 0x88
 8012f92:	2e00      	cmp	r6, #0
 8012f94:	f04f 040c 	mov.w	r4, #12
 8012f98:	fbb1 f7f4 	udiv	r7, r1, r4
 8012f9c:	fb07 1114 	mls	r1, r7, r4, r1
 8012fa0:	bf18      	it	ne
 8012fa2:	2400      	movne	r4, #0
 8012fa4:	fa54 f181 	uxtab	r1, r4, r1
 8012fa8:	46ac      	mov	ip, r5
 8012faa:	b2c9      	uxtb	r1, r1
 8012fac:	bcf0      	pop	{r4, r5, r6, r7}
 8012fae:	4760      	bx	ip

08012fb0 <_ZN8touchgfx13AbstractClockC1Ev>:
 8012fb0:	2101      	movs	r1, #1
 8012fb2:	2200      	movs	r2, #0
 8012fb4:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8012fb8:	490a      	ldr	r1, [pc, #40]	; (8012fe4 <_ZN8touchgfx13AbstractClockC1Ev+0x34>)
 8012fba:	8082      	strh	r2, [r0, #4]
 8012fbc:	80c2      	strh	r2, [r0, #6]
 8012fbe:	8102      	strh	r2, [r0, #8]
 8012fc0:	8142      	strh	r2, [r0, #10]
 8012fc2:	8182      	strh	r2, [r0, #12]
 8012fc4:	81c2      	strh	r2, [r0, #14]
 8012fc6:	8202      	strh	r2, [r0, #16]
 8012fc8:	8242      	strh	r2, [r0, #18]
 8012fca:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012fce:	61c2      	str	r2, [r0, #28]
 8012fd0:	8402      	strh	r2, [r0, #32]
 8012fd2:	8442      	strh	r2, [r0, #34]	; 0x22
 8012fd4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8012fd8:	6001      	str	r1, [r0, #0]
 8012fda:	6282      	str	r2, [r0, #40]	; 0x28
 8012fdc:	8582      	strh	r2, [r0, #44]	; 0x2c
 8012fde:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
 8012fe2:	4770      	bx	lr
 8012fe4:	0802ef2c 	.word	0x0802ef2c

08012fe8 <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>:
 8012fe8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012fec:	4770      	bx	lr

08012fee <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>:
 8012fee:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012ff2:	220c      	movs	r2, #12
 8012ff4:	f100 030b 	add.w	r3, r0, #11
 8012ff8:	fb93 f0f2 	sdiv	r0, r3, r2
 8012ffc:	fb02 3010 	mls	r0, r2, r0, r3
 8013000:	3001      	adds	r0, #1
 8013002:	b2c0      	uxtb	r0, r0
 8013004:	4770      	bx	lr

08013006 <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>:
 8013006:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 801300a:	280b      	cmp	r0, #11
 801300c:	bf8c      	ite	hi
 801300e:	2000      	movhi	r0, #0
 8013010:	2001      	movls	r0, #1
 8013012:	4770      	bx	lr

08013014 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>:
 8013014:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8013018:	4770      	bx	lr

0801301a <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>:
 801301a:	f890 002e 	ldrb.w	r0, [r0, #46]	; 0x2e
 801301e:	4770      	bx	lr

08013020 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8013020:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8013022:	2000      	movs	r0, #0
 8013024:	b12b      	cbz	r3, 8013032 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8013026:	b920      	cbnz	r0, 8013032 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8013028:	1a5a      	subs	r2, r3, r1
 801302a:	4250      	negs	r0, r2
 801302c:	4150      	adcs	r0, r2
 801302e:	699b      	ldr	r3, [r3, #24]
 8013030:	e7f8      	b.n	8013024 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8013032:	4770      	bx	lr

08013034 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8013034:	2300      	movs	r3, #0
 8013036:	6148      	str	r0, [r1, #20]
 8013038:	618b      	str	r3, [r1, #24]
 801303a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801303c:	b913      	cbnz	r3, 8013044 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 801303e:	6281      	str	r1, [r0, #40]	; 0x28
 8013040:	4770      	bx	lr
 8013042:	4613      	mov	r3, r2
 8013044:	699a      	ldr	r2, [r3, #24]
 8013046:	2a00      	cmp	r2, #0
 8013048:	d1fb      	bne.n	8013042 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 801304a:	6199      	str	r1, [r3, #24]
 801304c:	4770      	bx	lr

0801304e <_ZN8touchgfx9Container9removeAllEv>:
 801304e:	2200      	movs	r2, #0
 8013050:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8013052:	b123      	cbz	r3, 801305e <_ZN8touchgfx9Container9removeAllEv+0x10>
 8013054:	6999      	ldr	r1, [r3, #24]
 8013056:	6281      	str	r1, [r0, #40]	; 0x28
 8013058:	e9c3 2205 	strd	r2, r2, [r3, #20]
 801305c:	e7f8      	b.n	8013050 <_ZN8touchgfx9Container9removeAllEv+0x2>
 801305e:	4770      	bx	lr

08013060 <_ZN8touchgfx9Container6unlinkEv>:
 8013060:	2300      	movs	r3, #0
 8013062:	6283      	str	r3, [r0, #40]	; 0x28
 8013064:	4770      	bx	lr

08013066 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8013066:	2200      	movs	r2, #0
 8013068:	8002      	strh	r2, [r0, #0]
 801306a:	8042      	strh	r2, [r0, #2]
 801306c:	8082      	strh	r2, [r0, #4]
 801306e:	80c2      	strh	r2, [r0, #6]
 8013070:	4770      	bx	lr

08013072 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8013072:	b570      	push	{r4, r5, r6, lr}
 8013074:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8013076:	460d      	mov	r5, r1
 8013078:	4616      	mov	r6, r2
 801307a:	b13c      	cbz	r4, 801308c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 801307c:	6823      	ldr	r3, [r4, #0]
 801307e:	4620      	mov	r0, r4
 8013080:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8013082:	4632      	mov	r2, r6
 8013084:	4629      	mov	r1, r5
 8013086:	4798      	blx	r3
 8013088:	69a4      	ldr	r4, [r4, #24]
 801308a:	e7f6      	b.n	801307a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 801308c:	bd70      	pop	{r4, r5, r6, pc}

0801308e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 801308e:	b538      	push	{r3, r4, r5, lr}
 8013090:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8013092:	460d      	mov	r5, r1
 8013094:	b134      	cbz	r4, 80130a4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8013096:	682b      	ldr	r3, [r5, #0]
 8013098:	4621      	mov	r1, r4
 801309a:	689b      	ldr	r3, [r3, #8]
 801309c:	4628      	mov	r0, r5
 801309e:	4798      	blx	r3
 80130a0:	69a4      	ldr	r4, [r4, #24]
 80130a2:	e7f7      	b.n	8013094 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80130a4:	bd38      	pop	{r3, r4, r5, pc}

080130a6 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80130a6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80130a8:	b19b      	cbz	r3, 80130d2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80130aa:	428b      	cmp	r3, r1
 80130ac:	d109      	bne.n	80130c2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80130ae:	699a      	ldr	r2, [r3, #24]
 80130b0:	2100      	movs	r1, #0
 80130b2:	6159      	str	r1, [r3, #20]
 80130b4:	6282      	str	r2, [r0, #40]	; 0x28
 80130b6:	b902      	cbnz	r2, 80130ba <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80130b8:	4770      	bx	lr
 80130ba:	6199      	str	r1, [r3, #24]
 80130bc:	4770      	bx	lr
 80130be:	4613      	mov	r3, r2
 80130c0:	b13a      	cbz	r2, 80130d2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80130c2:	699a      	ldr	r2, [r3, #24]
 80130c4:	428a      	cmp	r2, r1
 80130c6:	d1fa      	bne.n	80130be <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80130c8:	698a      	ldr	r2, [r1, #24]
 80130ca:	619a      	str	r2, [r3, #24]
 80130cc:	2300      	movs	r3, #0
 80130ce:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80130d2:	4770      	bx	lr

080130d4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80130d4:	b410      	push	{r4}
 80130d6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80130d8:	4604      	mov	r4, r0
 80130da:	b92b      	cbnz	r3, 80130e8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80130dc:	6803      	ldr	r3, [r0, #0]
 80130de:	f85d 4b04 	ldr.w	r4, [sp], #4
 80130e2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80130e4:	4611      	mov	r1, r2
 80130e6:	4718      	bx	r3
 80130e8:	b941      	cbnz	r1, 80130fc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80130ea:	6193      	str	r3, [r2, #24]
 80130ec:	6282      	str	r2, [r0, #40]	; 0x28
 80130ee:	6154      	str	r4, [r2, #20]
 80130f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80130f4:	4770      	bx	lr
 80130f6:	4603      	mov	r3, r0
 80130f8:	2800      	cmp	r0, #0
 80130fa:	d0f9      	beq.n	80130f0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80130fc:	4299      	cmp	r1, r3
 80130fe:	6998      	ldr	r0, [r3, #24]
 8013100:	d1f9      	bne.n	80130f6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8013102:	6190      	str	r0, [r2, #24]
 8013104:	618a      	str	r2, [r1, #24]
 8013106:	e7f2      	b.n	80130ee <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08013108 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8013108:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801310c:	461f      	mov	r7, r3
 801310e:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8013112:	460d      	mov	r5, r1
 8013114:	4616      	mov	r6, r2
 8013116:	b103      	cbz	r3, 801311a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8013118:	6038      	str	r0, [r7, #0]
 801311a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801311c:	b314      	cbz	r4, 8013164 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 801311e:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8013122:	b1eb      	cbz	r3, 8013160 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8013124:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013128:	428d      	cmp	r5, r1
 801312a:	db19      	blt.n	8013160 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801312c:	8923      	ldrh	r3, [r4, #8]
 801312e:	b289      	uxth	r1, r1
 8013130:	440b      	add	r3, r1
 8013132:	b21b      	sxth	r3, r3
 8013134:	429d      	cmp	r5, r3
 8013136:	da13      	bge.n	8013160 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8013138:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801313c:	4296      	cmp	r6, r2
 801313e:	db0f      	blt.n	8013160 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8013140:	8963      	ldrh	r3, [r4, #10]
 8013142:	b292      	uxth	r2, r2
 8013144:	4413      	add	r3, r2
 8013146:	b21b      	sxth	r3, r3
 8013148:	429e      	cmp	r6, r3
 801314a:	da09      	bge.n	8013160 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801314c:	6823      	ldr	r3, [r4, #0]
 801314e:	1ab2      	subs	r2, r6, r2
 8013150:	1a69      	subs	r1, r5, r1
 8013152:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8013156:	b212      	sxth	r2, r2
 8013158:	463b      	mov	r3, r7
 801315a:	b209      	sxth	r1, r1
 801315c:	4620      	mov	r0, r4
 801315e:	47c0      	blx	r8
 8013160:	69a4      	ldr	r4, [r4, #24]
 8013162:	e7db      	b.n	801311c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8013164:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013168 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8013168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801316c:	4c6e      	ldr	r4, [pc, #440]	; (8013328 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801316e:	b0a1      	sub	sp, #132	; 0x84
 8013170:	6824      	ldr	r4, [r4, #0]
 8013172:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8013174:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8013178:	9303      	str	r3, [sp, #12]
 801317a:	2400      	movs	r4, #0
 801317c:	802c      	strh	r4, [r5, #0]
 801317e:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8013180:	802c      	strh	r4, [r5, #0]
 8013182:	601c      	str	r4, [r3, #0]
 8013184:	4606      	mov	r6, r0
 8013186:	e9cd 1201 	strd	r1, r2, [sp, #4]
 801318a:	f7ff ffbd 	bl	8013108 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801318e:	f1b9 0f03 	cmp.w	r9, #3
 8013192:	f340 80c2 	ble.w	801331a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8013196:	4631      	mov	r1, r6
 8013198:	a80c      	add	r0, sp, #48	; 0x30
 801319a:	f007 fa1f 	bl	801a5dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801319e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80131a2:	9306      	str	r3, [sp, #24]
 80131a4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80131a8:	9307      	str	r3, [sp, #28]
 80131aa:	9b03      	ldr	r3, [sp, #12]
 80131ac:	f8d3 a000 	ldr.w	sl, [r3]
 80131b0:	f1ba 0f00 	cmp.w	sl, #0
 80131b4:	f000 80b4 	beq.w	8013320 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 80131b8:	4651      	mov	r1, sl
 80131ba:	a810      	add	r0, sp, #64	; 0x40
 80131bc:	f007 fa0e 	bl	801a5dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80131c0:	9b01      	ldr	r3, [sp, #4]
 80131c2:	9a06      	ldr	r2, [sp, #24]
 80131c4:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 80131c8:	189d      	adds	r5, r3, r2
 80131ca:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 80131ce:	9a07      	ldr	r2, [sp, #28]
 80131d0:	2002      	movs	r0, #2
 80131d2:	fb91 f1f0 	sdiv	r1, r1, r0
 80131d6:	4419      	add	r1, r3
 80131d8:	1a6d      	subs	r5, r5, r1
 80131da:	9b02      	ldr	r3, [sp, #8]
 80131dc:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80131e0:	4413      	add	r3, r2
 80131e2:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 80131e6:	fb92 f2f0 	sdiv	r2, r2, r0
 80131ea:	440a      	add	r2, r1
 80131ec:	1a9b      	subs	r3, r3, r2
 80131ee:	435b      	muls	r3, r3
 80131f0:	fb05 3505 	mla	r5, r5, r5, r3
 80131f4:	4f4d      	ldr	r7, [pc, #308]	; (801332c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80131f6:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80131f8:	ac10      	add	r4, sp, #64	; 0x40
 80131fa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80131fc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80131fe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8013200:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8013202:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8013204:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8013208:	f1b9 0f0c 	cmp.w	r9, #12
 801320c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8013210:	f04f 0303 	mov.w	r3, #3
 8013214:	bfc8      	it	gt
 8013216:	4698      	movgt	r8, r3
 8013218:	f8cd 9000 	str.w	r9, [sp]
 801321c:	f04f 0400 	mov.w	r4, #0
 8013220:	bfdc      	itt	le
 8013222:	f109 32ff 	addle.w	r2, r9, #4294967295
 8013226:	fb92 f8f3 	sdivle	r8, r2, r3
 801322a:	1c63      	adds	r3, r4, #1
 801322c:	aa10      	add	r2, sp, #64	; 0x40
 801322e:	f004 0401 	and.w	r4, r4, #1
 8013232:	9308      	str	r3, [sp, #32]
 8013234:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8013238:	9b00      	ldr	r3, [sp, #0]
 801323a:	fb93 f3f8 	sdiv	r3, r3, r8
 801323e:	b29b      	uxth	r3, r3
 8013240:	3404      	adds	r4, #4
 8013242:	f04f 0b00 	mov.w	fp, #0
 8013246:	9304      	str	r3, [sp, #16]
 8013248:	9a04      	ldr	r2, [sp, #16]
 801324a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801324e:	fb13 f302 	smulbb	r3, r3, r2
 8013252:	9a01      	ldr	r2, [sp, #4]
 8013254:	b29b      	uxth	r3, r3
 8013256:	1899      	adds	r1, r3, r2
 8013258:	9305      	str	r3, [sp, #20]
 801325a:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801325e:	b209      	sxth	r1, r1
 8013260:	4299      	cmp	r1, r3
 8013262:	db4d      	blt.n	8013300 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8013264:	8932      	ldrh	r2, [r6, #8]
 8013266:	4413      	add	r3, r2
 8013268:	b21b      	sxth	r3, r3
 801326a:	4299      	cmp	r1, r3
 801326c:	da48      	bge.n	8013300 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801326e:	9b04      	ldr	r3, [sp, #16]
 8013270:	6827      	ldr	r7, [r4, #0]
 8013272:	fb17 f703 	smulbb	r7, r7, r3
 8013276:	9b02      	ldr	r3, [sp, #8]
 8013278:	b2bf      	uxth	r7, r7
 801327a:	18fa      	adds	r2, r7, r3
 801327c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8013280:	b212      	sxth	r2, r2
 8013282:	429a      	cmp	r2, r3
 8013284:	db3c      	blt.n	8013300 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8013286:	8970      	ldrh	r0, [r6, #10]
 8013288:	4403      	add	r3, r0
 801328a:	b21b      	sxth	r3, r3
 801328c:	429a      	cmp	r2, r3
 801328e:	da37      	bge.n	8013300 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8013290:	2300      	movs	r3, #0
 8013292:	930b      	str	r3, [sp, #44]	; 0x2c
 8013294:	4630      	mov	r0, r6
 8013296:	ab0b      	add	r3, sp, #44	; 0x2c
 8013298:	f7ff ff36 	bl	8013108 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801329c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801329e:	b37a      	cbz	r2, 8013300 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80132a0:	4552      	cmp	r2, sl
 80132a2:	d02d      	beq.n	8013300 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80132a4:	4611      	mov	r1, r2
 80132a6:	a80e      	add	r0, sp, #56	; 0x38
 80132a8:	9209      	str	r2, [sp, #36]	; 0x24
 80132aa:	f007 f997 	bl	801a5dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80132ae:	9a06      	ldr	r2, [sp, #24]
 80132b0:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 80132b4:	9b01      	ldr	r3, [sp, #4]
 80132b6:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 80132ba:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 80132be:	4413      	add	r3, r2
 80132c0:	f04f 0e02 	mov.w	lr, #2
 80132c4:	fb91 f1fe 	sdiv	r1, r1, lr
 80132c8:	4401      	add	r1, r0
 80132ca:	1a58      	subs	r0, r3, r1
 80132cc:	9a07      	ldr	r2, [sp, #28]
 80132ce:	9b02      	ldr	r3, [sp, #8]
 80132d0:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 80132d4:	fb9c fcfe 	sdiv	ip, ip, lr
 80132d8:	4413      	add	r3, r2
 80132da:	448c      	add	ip, r1
 80132dc:	eba3 030c 	sub.w	r3, r3, ip
 80132e0:	435b      	muls	r3, r3
 80132e2:	fb00 3300 	mla	r3, r0, r0, r3
 80132e6:	42ab      	cmp	r3, r5
 80132e8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80132ea:	d208      	bcs.n	80132fe <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80132ec:	9803      	ldr	r0, [sp, #12]
 80132ee:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80132f0:	6001      	str	r1, [r0, #0]
 80132f2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80132f4:	9805      	ldr	r0, [sp, #20]
 80132f6:	8008      	strh	r0, [r1, #0]
 80132f8:	992b      	ldr	r1, [sp, #172]	; 0xac
 80132fa:	461d      	mov	r5, r3
 80132fc:	800f      	strh	r7, [r1, #0]
 80132fe:	4692      	mov	sl, r2
 8013300:	f10b 0b01 	add.w	fp, fp, #1
 8013304:	f1bb 0f04 	cmp.w	fp, #4
 8013308:	f104 0408 	add.w	r4, r4, #8
 801330c:	d19c      	bne.n	8013248 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 801330e:	9b00      	ldr	r3, [sp, #0]
 8013310:	9c08      	ldr	r4, [sp, #32]
 8013312:	444b      	add	r3, r9
 8013314:	4544      	cmp	r4, r8
 8013316:	9300      	str	r3, [sp, #0]
 8013318:	d187      	bne.n	801322a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 801331a:	b021      	add	sp, #132	; 0x84
 801331c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013320:	f04f 35ff 	mov.w	r5, #4294967295
 8013324:	e766      	b.n	80131f4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8013326:	bf00      	nop
 8013328:	2000224c 	.word	0x2000224c
 801332c:	0802ddf4 	.word	0x0802ddf4

08013330 <_ZN8touchgfx4RectaNERKS0_>:
 8013330:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013334:	f9b1 7000 	ldrsh.w	r7, [r1]
 8013338:	888c      	ldrh	r4, [r1, #4]
 801333a:	f9b0 9000 	ldrsh.w	r9, [r0]
 801333e:	443c      	add	r4, r7
 8013340:	b2a4      	uxth	r4, r4
 8013342:	fa0f f884 	sxth.w	r8, r4
 8013346:	45c1      	cmp	r9, r8
 8013348:	da2f      	bge.n	80133aa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 801334a:	8882      	ldrh	r2, [r0, #4]
 801334c:	444a      	add	r2, r9
 801334e:	b292      	uxth	r2, r2
 8013350:	fa0f fe82 	sxth.w	lr, r2
 8013354:	4577      	cmp	r7, lr
 8013356:	da28      	bge.n	80133aa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8013358:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 801335c:	88cb      	ldrh	r3, [r1, #6]
 801335e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8013362:	442b      	add	r3, r5
 8013364:	b21b      	sxth	r3, r3
 8013366:	429e      	cmp	r6, r3
 8013368:	da1f      	bge.n	80133aa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 801336a:	88c3      	ldrh	r3, [r0, #6]
 801336c:	4433      	add	r3, r6
 801336e:	b29b      	uxth	r3, r3
 8013370:	fa0f fc83 	sxth.w	ip, r3
 8013374:	4565      	cmp	r5, ip
 8013376:	da18      	bge.n	80133aa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8013378:	454f      	cmp	r7, r9
 801337a:	bfb8      	it	lt
 801337c:	464f      	movlt	r7, r9
 801337e:	42b5      	cmp	r5, r6
 8013380:	bfb8      	it	lt
 8013382:	4635      	movlt	r5, r6
 8013384:	45f0      	cmp	r8, lr
 8013386:	bfd8      	it	le
 8013388:	4622      	movle	r2, r4
 801338a:	1bd2      	subs	r2, r2, r7
 801338c:	8082      	strh	r2, [r0, #4]
 801338e:	884a      	ldrh	r2, [r1, #2]
 8013390:	88c9      	ldrh	r1, [r1, #6]
 8013392:	8007      	strh	r7, [r0, #0]
 8013394:	440a      	add	r2, r1
 8013396:	b292      	uxth	r2, r2
 8013398:	b211      	sxth	r1, r2
 801339a:	458c      	cmp	ip, r1
 801339c:	bfa8      	it	ge
 801339e:	4613      	movge	r3, r2
 80133a0:	1b5b      	subs	r3, r3, r5
 80133a2:	80c3      	strh	r3, [r0, #6]
 80133a4:	8045      	strh	r5, [r0, #2]
 80133a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80133aa:	2300      	movs	r3, #0
 80133ac:	8003      	strh	r3, [r0, #0]
 80133ae:	8043      	strh	r3, [r0, #2]
 80133b0:	8083      	strh	r3, [r0, #4]
 80133b2:	80c3      	strh	r3, [r0, #6]
 80133b4:	e7f7      	b.n	80133a6 <_ZN8touchgfx4RectaNERKS0_+0x76>

080133b6 <_ZNK8touchgfx4Rect7isEmptyEv>:
 80133b6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80133ba:	2b00      	cmp	r3, #0
 80133bc:	dd06      	ble.n	80133cc <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 80133be:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 80133c2:	2800      	cmp	r0, #0
 80133c4:	bfcc      	ite	gt
 80133c6:	2000      	movgt	r0, #0
 80133c8:	2001      	movle	r0, #1
 80133ca:	4770      	bx	lr
 80133cc:	2001      	movs	r0, #1
 80133ce:	4770      	bx	lr

080133d0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80133d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80133d4:	2300      	movs	r3, #0
 80133d6:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80133d8:	8003      	strh	r3, [r0, #0]
 80133da:	4604      	mov	r4, r0
 80133dc:	8043      	strh	r3, [r0, #2]
 80133de:	8083      	strh	r3, [r0, #4]
 80133e0:	80c3      	strh	r3, [r0, #6]
 80133e2:	2d00      	cmp	r5, #0
 80133e4:	d040      	beq.n	8013468 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80133e6:	1d28      	adds	r0, r5, #4
 80133e8:	f7ff ffe5 	bl	80133b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80133ec:	b988      	cbnz	r0, 8013412 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80133ee:	4620      	mov	r0, r4
 80133f0:	f7ff ffe1 	bl	80133b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80133f4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80133f8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80133fc:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8013400:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8013404:	b138      	cbz	r0, 8013416 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8013406:	8022      	strh	r2, [r4, #0]
 8013408:	8063      	strh	r3, [r4, #2]
 801340a:	f8a4 e004 	strh.w	lr, [r4, #4]
 801340e:	f8a4 c006 	strh.w	ip, [r4, #6]
 8013412:	69ad      	ldr	r5, [r5, #24]
 8013414:	e7e5      	b.n	80133e2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8013416:	f9b4 0000 	ldrsh.w	r0, [r4]
 801341a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801341e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8013422:	4290      	cmp	r0, r2
 8013424:	4607      	mov	r7, r0
 8013426:	bfa8      	it	ge
 8013428:	4617      	movge	r7, r2
 801342a:	4472      	add	r2, lr
 801342c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8013430:	8027      	strh	r7, [r4, #0]
 8013432:	4299      	cmp	r1, r3
 8013434:	460e      	mov	r6, r1
 8013436:	4440      	add	r0, r8
 8013438:	bfa8      	it	ge
 801343a:	461e      	movge	r6, r3
 801343c:	4471      	add	r1, lr
 801343e:	4463      	add	r3, ip
 8013440:	b200      	sxth	r0, r0
 8013442:	b212      	sxth	r2, r2
 8013444:	b209      	sxth	r1, r1
 8013446:	b21b      	sxth	r3, r3
 8013448:	4290      	cmp	r0, r2
 801344a:	bfac      	ite	ge
 801344c:	ebc7 0200 	rsbge	r2, r7, r0
 8013450:	ebc7 0202 	rsblt	r2, r7, r2
 8013454:	4299      	cmp	r1, r3
 8013456:	bfac      	ite	ge
 8013458:	ebc6 0301 	rsbge	r3, r6, r1
 801345c:	ebc6 0303 	rsblt	r3, r6, r3
 8013460:	8066      	strh	r6, [r4, #2]
 8013462:	80a2      	strh	r2, [r4, #4]
 8013464:	80e3      	strh	r3, [r4, #6]
 8013466:	e7d4      	b.n	8013412 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8013468:	4620      	mov	r0, r4
 801346a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801346e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 801346e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8013472:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8013476:	b383      	cbz	r3, 80134da <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8013478:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801347a:	b374      	cbz	r4, 80134da <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 801347c:	f9b1 5000 	ldrsh.w	r5, [r1]
 8013480:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8013484:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8013488:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 801348c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8013490:	b303      	cbz	r3, 80134d4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8013492:	4668      	mov	r0, sp
 8013494:	1d21      	adds	r1, r4, #4
 8013496:	f8ad 5000 	strh.w	r5, [sp]
 801349a:	f8ad 6002 	strh.w	r6, [sp, #2]
 801349e:	f8ad 7004 	strh.w	r7, [sp, #4]
 80134a2:	f8ad 8006 	strh.w	r8, [sp, #6]
 80134a6:	f7ff ff43 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 80134aa:	4668      	mov	r0, sp
 80134ac:	f7ff ff83 	bl	80133b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80134b0:	b980      	cbnz	r0, 80134d4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80134b2:	f8bd 3000 	ldrh.w	r3, [sp]
 80134b6:	88a2      	ldrh	r2, [r4, #4]
 80134b8:	1a9b      	subs	r3, r3, r2
 80134ba:	f8ad 3000 	strh.w	r3, [sp]
 80134be:	88e2      	ldrh	r2, [r4, #6]
 80134c0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80134c4:	1a9b      	subs	r3, r3, r2
 80134c6:	f8ad 3002 	strh.w	r3, [sp, #2]
 80134ca:	6823      	ldr	r3, [r4, #0]
 80134cc:	4669      	mov	r1, sp
 80134ce:	689b      	ldr	r3, [r3, #8]
 80134d0:	4620      	mov	r0, r4
 80134d2:	4798      	blx	r3
 80134d4:	69a4      	ldr	r4, [r4, #24]
 80134d6:	2c00      	cmp	r4, #0
 80134d8:	d1d8      	bne.n	801348c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 80134da:	b002      	add	sp, #8
 80134dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080134e0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 80134e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80134e2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80134e6:	460d      	mov	r5, r1
 80134e8:	4616      	mov	r6, r2
 80134ea:	b323      	cbz	r3, 8013536 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80134ec:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80134ee:	b314      	cbz	r4, 8013536 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80134f0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80134f4:	b1eb      	cbz	r3, 8013532 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80134f6:	6828      	ldr	r0, [r5, #0]
 80134f8:	6869      	ldr	r1, [r5, #4]
 80134fa:	466b      	mov	r3, sp
 80134fc:	c303      	stmia	r3!, {r0, r1}
 80134fe:	4668      	mov	r0, sp
 8013500:	1d21      	adds	r1, r4, #4
 8013502:	f7ff ff15 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 8013506:	4668      	mov	r0, sp
 8013508:	f7ff ff55 	bl	80133b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801350c:	b988      	cbnz	r0, 8013532 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 801350e:	f8bd 3000 	ldrh.w	r3, [sp]
 8013512:	88a2      	ldrh	r2, [r4, #4]
 8013514:	1a9b      	subs	r3, r3, r2
 8013516:	f8ad 3000 	strh.w	r3, [sp]
 801351a:	88e2      	ldrh	r2, [r4, #6]
 801351c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013520:	1a9b      	subs	r3, r3, r2
 8013522:	f8ad 3002 	strh.w	r3, [sp, #2]
 8013526:	6823      	ldr	r3, [r4, #0]
 8013528:	4632      	mov	r2, r6
 801352a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801352c:	4669      	mov	r1, sp
 801352e:	4620      	mov	r0, r4
 8013530:	4798      	blx	r3
 8013532:	69a4      	ldr	r4, [r4, #24]
 8013534:	e7db      	b.n	80134ee <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8013536:	b002      	add	sp, #8
 8013538:	bd70      	pop	{r4, r5, r6, pc}

0801353a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 801353a:	b513      	push	{r0, r1, r4, lr}
 801353c:	6803      	ldr	r3, [r0, #0]
 801353e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8013542:	2300      	movs	r3, #0
 8013544:	e9cd 3300 	strd	r3, r3, [sp]
 8013548:	466b      	mov	r3, sp
 801354a:	47a0      	blx	r4
 801354c:	b002      	add	sp, #8
 801354e:	bd10      	pop	{r4, pc}

08013550 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8013550:	2301      	movs	r3, #1
 8013552:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8013556:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 801355a:	4770      	bx	lr

0801355c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 801355c:	2301      	movs	r3, #1
 801355e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8013562:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8013566:	4770      	bx	lr

08013568 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8013568:	6843      	ldr	r3, [r0, #4]
 801356a:	2201      	movs	r2, #1
 801356c:	725a      	strb	r2, [r3, #9]
 801356e:	6840      	ldr	r0, [r0, #4]
 8013570:	6803      	ldr	r3, [r0, #0]
 8013572:	691b      	ldr	r3, [r3, #16]
 8013574:	4718      	bx	r3

08013576 <_ZN8touchgfx3HAL8flushDMAEv>:
 8013576:	6840      	ldr	r0, [r0, #4]
 8013578:	6803      	ldr	r3, [r0, #0]
 801357a:	689b      	ldr	r3, [r3, #8]
 801357c:	4718      	bx	r3

0801357e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 801357e:	b530      	push	{r4, r5, lr}
 8013580:	b08b      	sub	sp, #44	; 0x2c
 8013582:	6804      	ldr	r4, [r0, #0]
 8013584:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8013588:	9509      	str	r5, [sp, #36]	; 0x24
 801358a:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 801358e:	9508      	str	r5, [sp, #32]
 8013590:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8013594:	9507      	str	r5, [sp, #28]
 8013596:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801359a:	9506      	str	r5, [sp, #24]
 801359c:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80135a0:	9505      	str	r5, [sp, #20]
 80135a2:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80135a6:	9504      	str	r5, [sp, #16]
 80135a8:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 80135ac:	9503      	str	r5, [sp, #12]
 80135ae:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 80135b2:	9502      	str	r5, [sp, #8]
 80135b4:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80135b8:	e9cd 3500 	strd	r3, r5, [sp]
 80135bc:	4613      	mov	r3, r2
 80135be:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 80135c0:	2200      	movs	r2, #0
 80135c2:	47a0      	blx	r4
 80135c4:	b00b      	add	sp, #44	; 0x2c
 80135c6:	bd30      	pop	{r4, r5, pc}

080135c8 <_ZN8touchgfx3HAL10beginFrameEv>:
 80135c8:	4b04      	ldr	r3, [pc, #16]	; (80135dc <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80135ca:	781b      	ldrb	r3, [r3, #0]
 80135cc:	b123      	cbz	r3, 80135d8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80135ce:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 80135d2:	f080 0001 	eor.w	r0, r0, #1
 80135d6:	4770      	bx	lr
 80135d8:	2001      	movs	r0, #1
 80135da:	4770      	bx	lr
 80135dc:	2000224a 	.word	0x2000224a

080135e0 <_ZN8touchgfx3HAL8endFrameEv>:
 80135e0:	b510      	push	{r4, lr}
 80135e2:	4604      	mov	r4, r0
 80135e4:	6840      	ldr	r0, [r0, #4]
 80135e6:	6803      	ldr	r3, [r0, #0]
 80135e8:	689b      	ldr	r3, [r3, #8]
 80135ea:	4798      	blx	r3
 80135ec:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 80135f0:	b113      	cbz	r3, 80135f8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80135f2:	2301      	movs	r3, #1
 80135f4:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80135f8:	bd10      	pop	{r4, pc}

080135fa <_ZN8touchgfx3HAL10initializeEv>:
 80135fa:	b510      	push	{r4, lr}
 80135fc:	4604      	mov	r4, r0
 80135fe:	f7fd fead 	bl	801135c <_ZN8touchgfx10OSWrappers10initializeEv>
 8013602:	f7fd fbf3 	bl	8010dec <_ZN8touchgfx4GPIO4initEv>
 8013606:	6860      	ldr	r0, [r4, #4]
 8013608:	6803      	ldr	r3, [r0, #0]
 801360a:	68db      	ldr	r3, [r3, #12]
 801360c:	4798      	blx	r3
 801360e:	68e0      	ldr	r0, [r4, #12]
 8013610:	6803      	ldr	r3, [r0, #0]
 8013612:	689b      	ldr	r3, [r3, #8]
 8013614:	4798      	blx	r3
 8013616:	6823      	ldr	r3, [r4, #0]
 8013618:	4620      	mov	r0, r4
 801361a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801361c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013620:	4718      	bx	r3

08013622 <_ZN8touchgfx3HAL9taskEntryEv>:
 8013622:	b508      	push	{r3, lr}
 8013624:	6803      	ldr	r3, [r0, #0]
 8013626:	4604      	mov	r4, r0
 8013628:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801362c:	4798      	blx	r3
 801362e:	6823      	ldr	r3, [r4, #0]
 8013630:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8013632:	4620      	mov	r0, r4
 8013634:	4798      	blx	r3
 8013636:	f7fd ff05 	bl	8011444 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 801363a:	6823      	ldr	r3, [r4, #0]
 801363c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801363e:	e7f8      	b.n	8013632 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

08013640 <_ZN8touchgfx3HAL4tickEv>:
 8013640:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8013642:	6803      	ldr	r3, [r0, #0]
 8013644:	4d5b      	ldr	r5, [pc, #364]	; (80137b4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8013646:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801364a:	4604      	mov	r4, r0
 801364c:	4798      	blx	r3
 801364e:	2800      	cmp	r0, #0
 8013650:	f000 8095 	beq.w	801377e <_ZN8touchgfx3HAL4tickEv+0x13e>
 8013654:	2001      	movs	r0, #1
 8013656:	f7fd fbd1 	bl	8010dfc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801365a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 801365e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8013662:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8013666:	2600      	movs	r6, #0
 8013668:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 801366c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8013670:	b133      	cbz	r3, 8013680 <_ZN8touchgfx3HAL4tickEv+0x40>
 8013672:	6823      	ldr	r3, [r4, #0]
 8013674:	4620      	mov	r0, r4
 8013676:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 801367a:	4798      	blx	r3
 801367c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8013680:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8013684:	6862      	ldr	r2, [r4, #4]
 8013686:	f083 0301 	eor.w	r3, r3, #1
 801368a:	7253      	strb	r3, [r2, #9]
 801368c:	2601      	movs	r6, #1
 801368e:	702e      	strb	r6, [r5, #0]
 8013690:	f005 fe48 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 8013694:	6803      	ldr	r3, [r0, #0]
 8013696:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013698:	4798      	blx	r3
 801369a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 801369e:	b90b      	cbnz	r3, 80136a4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80136a0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 80136a4:	f005 fe3e 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 80136a8:	6803      	ldr	r3, [r0, #0]
 80136aa:	695b      	ldr	r3, [r3, #20]
 80136ac:	4798      	blx	r3
 80136ae:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80136b0:	6803      	ldr	r3, [r0, #0]
 80136b2:	691b      	ldr	r3, [r3, #16]
 80136b4:	4798      	blx	r3
 80136b6:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 80136ba:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 80136be:	3b01      	subs	r3, #1
 80136c0:	b2db      	uxtb	r3, r3
 80136c2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80136c6:	b10a      	cbz	r2, 80136cc <_ZN8touchgfx3HAL4tickEv+0x8c>
 80136c8:	2b00      	cmp	r3, #0
 80136ca:	d1eb      	bne.n	80136a4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80136cc:	4a3a      	ldr	r2, [pc, #232]	; (80137b8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 80136ce:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 80136d2:	7813      	ldrb	r3, [r2, #0]
 80136d4:	3301      	adds	r3, #1
 80136d6:	b25b      	sxtb	r3, r3
 80136d8:	4299      	cmp	r1, r3
 80136da:	7013      	strb	r3, [r2, #0]
 80136dc:	dc10      	bgt.n	8013700 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80136de:	68e0      	ldr	r0, [r4, #12]
 80136e0:	2300      	movs	r3, #0
 80136e2:	7013      	strb	r3, [r2, #0]
 80136e4:	6803      	ldr	r3, [r0, #0]
 80136e6:	aa03      	add	r2, sp, #12
 80136e8:	68db      	ldr	r3, [r3, #12]
 80136ea:	a902      	add	r1, sp, #8
 80136ec:	4798      	blx	r3
 80136ee:	6823      	ldr	r3, [r4, #0]
 80136f0:	2800      	cmp	r0, #0
 80136f2:	d050      	beq.n	8013796 <_ZN8touchgfx3HAL4tickEv+0x156>
 80136f4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80136f8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80136fc:	4620      	mov	r0, r4
 80136fe:	4798      	blx	r3
 8013700:	6960      	ldr	r0, [r4, #20]
 8013702:	2300      	movs	r3, #0
 8013704:	f88d 3007 	strb.w	r3, [sp, #7]
 8013708:	b158      	cbz	r0, 8013722 <_ZN8touchgfx3HAL4tickEv+0xe2>
 801370a:	6803      	ldr	r3, [r0, #0]
 801370c:	f10d 0107 	add.w	r1, sp, #7
 8013710:	68db      	ldr	r3, [r3, #12]
 8013712:	4798      	blx	r3
 8013714:	b128      	cbz	r0, 8013722 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8013716:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8013718:	f89d 1007 	ldrb.w	r1, [sp, #7]
 801371c:	6803      	ldr	r3, [r0, #0]
 801371e:	68db      	ldr	r3, [r3, #12]
 8013720:	4798      	blx	r3
 8013722:	f104 001c 	add.w	r0, r4, #28
 8013726:	f016 fc7b 	bl	802a020 <_ZN8touchgfx8Gestures4tickEv>
 801372a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 801372e:	b30b      	cbz	r3, 8013774 <_ZN8touchgfx3HAL4tickEv+0x134>
 8013730:	6920      	ldr	r0, [r4, #16]
 8013732:	6803      	ldr	r3, [r0, #0]
 8013734:	691b      	ldr	r3, [r3, #16]
 8013736:	4798      	blx	r3
 8013738:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801373a:	4606      	mov	r6, r0
 801373c:	b903      	cbnz	r3, 8013740 <_ZN8touchgfx3HAL4tickEv+0x100>
 801373e:	6760      	str	r0, [r4, #116]	; 0x74
 8013740:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8013742:	4a1e      	ldr	r2, [pc, #120]	; (80137bc <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8013744:	1af3      	subs	r3, r6, r3
 8013746:	4293      	cmp	r3, r2
 8013748:	d914      	bls.n	8013774 <_ZN8touchgfx3HAL4tickEv+0x134>
 801374a:	6920      	ldr	r0, [r4, #16]
 801374c:	6803      	ldr	r3, [r0, #0]
 801374e:	699b      	ldr	r3, [r3, #24]
 8013750:	4798      	blx	r3
 8013752:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8013754:	2264      	movs	r2, #100	; 0x64
 8013756:	1af3      	subs	r3, r6, r3
 8013758:	fbb3 f3f2 	udiv	r3, r3, r2
 801375c:	fbb0 f0f3 	udiv	r0, r0, r3
 8013760:	2800      	cmp	r0, #0
 8013762:	dc1d      	bgt.n	80137a0 <_ZN8touchgfx3HAL4tickEv+0x160>
 8013764:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8013768:	6920      	ldr	r0, [r4, #16]
 801376a:	6803      	ldr	r3, [r0, #0]
 801376c:	2100      	movs	r1, #0
 801376e:	69db      	ldr	r3, [r3, #28]
 8013770:	4798      	blx	r3
 8013772:	6766      	str	r6, [r4, #116]	; 0x74
 8013774:	f005 fdd6 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 8013778:	6803      	ldr	r3, [r0, #0]
 801377a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801377c:	4798      	blx	r3
 801377e:	6823      	ldr	r3, [r4, #0]
 8013780:	4620      	mov	r0, r4
 8013782:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8013786:	4798      	blx	r3
 8013788:	2001      	movs	r0, #1
 801378a:	f7fd fb53 	bl	8010e34 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801378e:	2300      	movs	r3, #0
 8013790:	702b      	strb	r3, [r5, #0]
 8013792:	b004      	add	sp, #16
 8013794:	bd70      	pop	{r4, r5, r6, pc}
 8013796:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 801379a:	4620      	mov	r0, r4
 801379c:	4798      	blx	r3
 801379e:	e7af      	b.n	8013700 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80137a0:	2863      	cmp	r0, #99	; 0x63
 80137a2:	bfcb      	itete	gt
 80137a4:	2300      	movgt	r3, #0
 80137a6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80137aa:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 80137ae:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 80137b2:	e7d9      	b.n	8013768 <_ZN8touchgfx3HAL4tickEv+0x128>
 80137b4:	20002250 	.word	0x20002250
 80137b8:	20002251 	.word	0x20002251
 80137bc:	05f5e100 	.word	0x05f5e100

080137c0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 80137c0:	b510      	push	{r4, lr}
 80137c2:	4604      	mov	r4, r0
 80137c4:	f7fd fdf2 	bl	80113ac <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 80137c8:	6863      	ldr	r3, [r4, #4]
 80137ca:	2200      	movs	r2, #0
 80137cc:	729a      	strb	r2, [r3, #10]
 80137ce:	bd10      	pop	{r4, pc}

080137d0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 80137d0:	65c1      	str	r1, [r0, #92]	; 0x5c
 80137d2:	301c      	adds	r0, #28
 80137d4:	f016 bc22 	b.w	802a01c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080137d8 <_ZN8touchgfx3HAL5touchEll>:
 80137d8:	b530      	push	{r4, r5, lr}
 80137da:	b087      	sub	sp, #28
 80137dc:	4604      	mov	r4, r0
 80137de:	a804      	add	r0, sp, #16
 80137e0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80137e4:	f005 fb74 	bl	8018ed0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80137e8:	9b04      	ldr	r3, [sp, #16]
 80137ea:	f8ad 300c 	strh.w	r3, [sp, #12]
 80137ee:	a906      	add	r1, sp, #24
 80137f0:	9b05      	ldr	r3, [sp, #20]
 80137f2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 80137f6:	a803      	add	r0, sp, #12
 80137f8:	f005 fbbc 	bl	8018f74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80137fc:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8013800:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8013804:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8013808:	f104 001c 	add.w	r0, r4, #28
 801380c:	b189      	cbz	r1, 8013832 <_ZN8touchgfx3HAL5touchEll+0x5a>
 801380e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8013812:	9300      	str	r3, [sp, #0]
 8013814:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8013818:	4613      	mov	r3, r2
 801381a:	462a      	mov	r2, r5
 801381c:	f016 fc0e 	bl	802a03c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8013820:	b128      	cbz	r0, 801382e <_ZN8touchgfx3HAL5touchEll+0x56>
 8013822:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8013826:	6623      	str	r3, [r4, #96]	; 0x60
 8013828:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801382c:	6663      	str	r3, [r4, #100]	; 0x64
 801382e:	b007      	add	sp, #28
 8013830:	bd30      	pop	{r4, r5, pc}
 8013832:	f016 fc43 	bl	802a0bc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8013836:	2301      	movs	r3, #1
 8013838:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 801383c:	e7f1      	b.n	8013822 <_ZN8touchgfx3HAL5touchEll+0x4a>

0801383e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 801383e:	b510      	push	{r4, lr}
 8013840:	2b00      	cmp	r3, #0
 8013842:	d046      	beq.n	80138d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8013844:	ea81 0002 	eor.w	r0, r1, r2
 8013848:	07c4      	lsls	r4, r0, #31
 801384a:	d508      	bpl.n	801385e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 801384c:	440b      	add	r3, r1
 801384e:	3a01      	subs	r2, #1
 8013850:	428b      	cmp	r3, r1
 8013852:	d93e      	bls.n	80138d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8013854:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8013858:	f801 0b01 	strb.w	r0, [r1], #1
 801385c:	e7f8      	b.n	8013850 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 801385e:	07d0      	lsls	r0, r2, #31
 8013860:	bf42      	ittt	mi
 8013862:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8013866:	f801 0b01 	strbmi.w	r0, [r1], #1
 801386a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 801386e:	2b01      	cmp	r3, #1
 8013870:	d911      	bls.n	8013896 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8013872:	ea81 0402 	eor.w	r4, r1, r2
 8013876:	07a4      	lsls	r4, r4, #30
 8013878:	4610      	mov	r0, r2
 801387a:	d022      	beq.n	80138c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 801387c:	f023 0401 	bic.w	r4, r3, #1
 8013880:	440c      	add	r4, r1
 8013882:	428c      	cmp	r4, r1
 8013884:	4602      	mov	r2, r0
 8013886:	d904      	bls.n	8013892 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8013888:	8812      	ldrh	r2, [r2, #0]
 801388a:	f821 2b02 	strh.w	r2, [r1], #2
 801388e:	3002      	adds	r0, #2
 8013890:	e7f7      	b.n	8013882 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8013892:	f003 0301 	and.w	r3, r3, #1
 8013896:	f023 0003 	bic.w	r0, r3, #3
 801389a:	4408      	add	r0, r1
 801389c:	4288      	cmp	r0, r1
 801389e:	4614      	mov	r4, r2
 80138a0:	d904      	bls.n	80138ac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80138a2:	6824      	ldr	r4, [r4, #0]
 80138a4:	f841 4b04 	str.w	r4, [r1], #4
 80138a8:	3204      	adds	r2, #4
 80138aa:	e7f7      	b.n	801389c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80138ac:	f003 0303 	and.w	r3, r3, #3
 80138b0:	440b      	add	r3, r1
 80138b2:	3a01      	subs	r2, #1
 80138b4:	428b      	cmp	r3, r1
 80138b6:	d90c      	bls.n	80138d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80138b8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80138bc:	f801 0b01 	strb.w	r0, [r1], #1
 80138c0:	e7f8      	b.n	80138b4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 80138c2:	0790      	lsls	r0, r2, #30
 80138c4:	d0e7      	beq.n	8013896 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80138c6:	f832 0b02 	ldrh.w	r0, [r2], #2
 80138ca:	f821 0b02 	strh.w	r0, [r1], #2
 80138ce:	3b02      	subs	r3, #2
 80138d0:	e7e1      	b.n	8013896 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80138d2:	2001      	movs	r0, #1
 80138d4:	bd10      	pop	{r4, pc}

080138d6 <_ZN8touchgfx3HAL7noTouchEv>:
 80138d6:	b510      	push	{r4, lr}
 80138d8:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 80138dc:	4604      	mov	r4, r0
 80138de:	b153      	cbz	r3, 80138f6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80138e0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 80138e4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 80138e8:	2101      	movs	r1, #1
 80138ea:	301c      	adds	r0, #28
 80138ec:	f016 fbe6 	bl	802a0bc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80138f0:	2300      	movs	r3, #0
 80138f2:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80138f6:	bd10      	pop	{r4, pc}

080138f8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80138f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80138fc:	b085      	sub	sp, #20
 80138fe:	ad04      	add	r5, sp, #16
 8013900:	4604      	mov	r4, r0
 8013902:	2000      	movs	r0, #0
 8013904:	f845 0d04 	str.w	r0, [r5, #-4]!
 8013908:	69a0      	ldr	r0, [r4, #24]
 801390a:	6806      	ldr	r6, [r0, #0]
 801390c:	9501      	str	r5, [sp, #4]
 801390e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8013912:	9500      	str	r5, [sp, #0]
 8013914:	6835      	ldr	r5, [r6, #0]
 8013916:	4699      	mov	r9, r3
 8013918:	460f      	mov	r7, r1
 801391a:	4690      	mov	r8, r2
 801391c:	47a8      	blx	r5
 801391e:	4d10      	ldr	r5, [pc, #64]	; (8013960 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8013920:	4606      	mov	r6, r0
 8013922:	f8a5 9000 	strh.w	r9, [r5]
 8013926:	f7f7 fb6b 	bl	800b000 <_ZN8touchgfx3HAL3lcdEv>
 801392a:	6803      	ldr	r3, [r0, #0]
 801392c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801392e:	4798      	blx	r3
 8013930:	b128      	cbz	r0, 801393e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8013932:	2801      	cmp	r0, #1
 8013934:	d00b      	beq.n	801394e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8013936:	4630      	mov	r0, r6
 8013938:	b005      	add	sp, #20
 801393a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801393e:	882b      	ldrh	r3, [r5, #0]
 8013940:	fb08 7203 	mla	r2, r8, r3, r7
 8013944:	9b03      	ldr	r3, [sp, #12]
 8013946:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 801394a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801394c:	e7f3      	b.n	8013936 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 801394e:	882a      	ldrh	r2, [r5, #0]
 8013950:	9b03      	ldr	r3, [sp, #12]
 8013952:	fb08 7202 	mla	r2, r8, r2, r7
 8013956:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801395a:	1a9a      	subs	r2, r3, r2
 801395c:	63e2      	str	r2, [r4, #60]	; 0x3c
 801395e:	e7ea      	b.n	8013936 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8013960:	20002246 	.word	0x20002246

08013964 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8013964:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013966:	b08b      	sub	sp, #44	; 0x2c
 8013968:	4617      	mov	r7, r2
 801396a:	4604      	mov	r4, r0
 801396c:	460e      	mov	r6, r1
 801396e:	461d      	mov	r5, r3
 8013970:	f7f7 fb46 	bl	800b000 <_ZN8touchgfx3HAL3lcdEv>
 8013974:	6803      	ldr	r3, [r0, #0]
 8013976:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013978:	4798      	blx	r3
 801397a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801397e:	9007      	str	r0, [sp, #28]
 8013980:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8013984:	4b0d      	ldr	r3, [pc, #52]	; (80139bc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8013986:	6822      	ldr	r2, [r4, #0]
 8013988:	881b      	ldrh	r3, [r3, #0]
 801398a:	9306      	str	r3, [sp, #24]
 801398c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013990:	9305      	str	r3, [sp, #20]
 8013992:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8013996:	9304      	str	r3, [sp, #16]
 8013998:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801399c:	9303      	str	r3, [sp, #12]
 801399e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80139a2:	9302      	str	r3, [sp, #8]
 80139a4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80139a8:	e9cd 5300 	strd	r5, r3, [sp]
 80139ac:	4631      	mov	r1, r6
 80139ae:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 80139b0:	463b      	mov	r3, r7
 80139b2:	2200      	movs	r2, #0
 80139b4:	4620      	mov	r0, r4
 80139b6:	47a8      	blx	r5
 80139b8:	b00b      	add	sp, #44	; 0x2c
 80139ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80139bc:	20002246 	.word	0x20002246

080139c0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80139c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80139c4:	4698      	mov	r8, r3
 80139c6:	6803      	ldr	r3, [r0, #0]
 80139c8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80139ca:	4b15      	ldr	r3, [pc, #84]	; (8013a20 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80139cc:	b08b      	sub	sp, #44	; 0x2c
 80139ce:	4617      	mov	r7, r2
 80139d0:	f8b3 9000 	ldrh.w	r9, [r3]
 80139d4:	460e      	mov	r6, r1
 80139d6:	4604      	mov	r4, r0
 80139d8:	f7f7 fb12 	bl	800b000 <_ZN8touchgfx3HAL3lcdEv>
 80139dc:	6803      	ldr	r3, [r0, #0]
 80139de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80139e0:	4798      	blx	r3
 80139e2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80139e6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80139ea:	2302      	movs	r3, #2
 80139ec:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80139f0:	2301      	movs	r3, #1
 80139f2:	9305      	str	r3, [sp, #20]
 80139f4:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80139f8:	9304      	str	r3, [sp, #16]
 80139fa:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80139fe:	9303      	str	r3, [sp, #12]
 8013a00:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013a04:	9302      	str	r3, [sp, #8]
 8013a06:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013a0a:	2200      	movs	r2, #0
 8013a0c:	e9cd 8300 	strd	r8, r3, [sp]
 8013a10:	4631      	mov	r1, r6
 8013a12:	463b      	mov	r3, r7
 8013a14:	4620      	mov	r0, r4
 8013a16:	47a8      	blx	r5
 8013a18:	b00b      	add	sp, #44	; 0x2c
 8013a1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013a1e:	bf00      	nop
 8013a20:	20002246 	.word	0x20002246

08013a24 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8013a24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013a28:	4698      	mov	r8, r3
 8013a2a:	6803      	ldr	r3, [r0, #0]
 8013a2c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8013a2e:	4b11      	ldr	r3, [pc, #68]	; (8013a74 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8013a30:	b087      	sub	sp, #28
 8013a32:	f8b3 9000 	ldrh.w	r9, [r3]
 8013a36:	460e      	mov	r6, r1
 8013a38:	4617      	mov	r7, r2
 8013a3a:	4604      	mov	r4, r0
 8013a3c:	f7f7 fae0 	bl	800b000 <_ZN8touchgfx3HAL3lcdEv>
 8013a40:	6803      	ldr	r3, [r0, #0]
 8013a42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013a44:	4798      	blx	r3
 8013a46:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8013a4a:	f8cd 900c 	str.w	r9, [sp, #12]
 8013a4e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8013a52:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8013a56:	9302      	str	r3, [sp, #8]
 8013a58:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8013a5c:	9301      	str	r3, [sp, #4]
 8013a5e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013a62:	9300      	str	r3, [sp, #0]
 8013a64:	463a      	mov	r2, r7
 8013a66:	4643      	mov	r3, r8
 8013a68:	4631      	mov	r1, r6
 8013a6a:	4620      	mov	r0, r4
 8013a6c:	47a8      	blx	r5
 8013a6e:	b007      	add	sp, #28
 8013a70:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013a74:	20002246 	.word	0x20002246

08013a78 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8013a78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a7c:	4604      	mov	r4, r0
 8013a7e:	b08f      	sub	sp, #60	; 0x3c
 8013a80:	4610      	mov	r0, r2
 8013a82:	460d      	mov	r5, r1
 8013a84:	4691      	mov	r9, r2
 8013a86:	461e      	mov	r6, r3
 8013a88:	f008 feba 	bl	801c800 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013a8c:	2800      	cmp	r0, #0
 8013a8e:	f000 809d 	beq.w	8013bcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8013a92:	6823      	ldr	r3, [r4, #0]
 8013a94:	f8df b198 	ldr.w	fp, [pc, #408]	; 8013c30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8013a98:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013a9a:	f8df a198 	ldr.w	sl, [pc, #408]	; 8013c34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8013a9e:	4f61      	ldr	r7, [pc, #388]	; (8013c24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013aa0:	4620      	mov	r0, r4
 8013aa2:	4798      	blx	r3
 8013aa4:	6823      	ldr	r3, [r4, #0]
 8013aa6:	4620      	mov	r0, r4
 8013aa8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013aaa:	4798      	blx	r3
 8013aac:	f8bb 3000 	ldrh.w	r3, [fp]
 8013ab0:	9301      	str	r3, [sp, #4]
 8013ab2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8013ab6:	f8ba 3000 	ldrh.w	r3, [sl]
 8013aba:	9302      	str	r3, [sp, #8]
 8013abc:	883b      	ldrh	r3, [r7, #0]
 8013abe:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8013ac2:	9303      	str	r3, [sp, #12]
 8013ac4:	4b58      	ldr	r3, [pc, #352]	; (8013c28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013ac6:	9305      	str	r3, [sp, #20]
 8013ac8:	881a      	ldrh	r2, [r3, #0]
 8013aca:	9204      	str	r2, [sp, #16]
 8013acc:	4640      	mov	r0, r8
 8013ace:	f008 ff2b 	bl	801c928 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013ad2:	8038      	strh	r0, [r7, #0]
 8013ad4:	4640      	mov	r0, r8
 8013ad6:	f008 ff5b 	bl	801c990 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013ada:	9b05      	ldr	r3, [sp, #20]
 8013adc:	b280      	uxth	r0, r0
 8013ade:	8018      	strh	r0, [r3, #0]
 8013ae0:	4b52      	ldr	r3, [pc, #328]	; (8013c2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8013ae2:	781b      	ldrb	r3, [r3, #0]
 8013ae4:	2b00      	cmp	r3, #0
 8013ae6:	d174      	bne.n	8013bd2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8013ae8:	883b      	ldrh	r3, [r7, #0]
 8013aea:	f8ab 3000 	strh.w	r3, [fp]
 8013aee:	f8aa 0000 	strh.w	r0, [sl]
 8013af2:	4648      	mov	r0, r9
 8013af4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8013af8:	f008 fe82 	bl	801c800 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013afc:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8013b00:	2200      	movs	r2, #0
 8013b02:	4611      	mov	r1, r2
 8013b04:	4628      	mov	r0, r5
 8013b06:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8013b0a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8013b0e:	f7f6 f9aa 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
 8013b12:	2301      	movs	r3, #1
 8013b14:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8013b18:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8013b1c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8013b20:	2b00      	cmp	r3, #0
 8013b22:	dd5c      	ble.n	8013bde <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013b24:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8013b28:	2b00      	cmp	r3, #0
 8013b2a:	dd58      	ble.n	8013bde <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013b2c:	462a      	mov	r2, r5
 8013b2e:	ab0a      	add	r3, sp, #40	; 0x28
 8013b30:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013b34:	6851      	ldr	r1, [r2, #4]
 8013b36:	c303      	stmia	r3!, {r0, r1}
 8013b38:	4631      	mov	r1, r6
 8013b3a:	a80a      	add	r0, sp, #40	; 0x28
 8013b3c:	f7ff fbf8 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 8013b40:	4b38      	ldr	r3, [pc, #224]	; (8013c24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013b42:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013b46:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8013b4a:	2100      	movs	r1, #0
 8013b4c:	aa0a      	add	r2, sp, #40	; 0x28
 8013b4e:	4b36      	ldr	r3, [pc, #216]	; (8013c28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013b50:	910c      	str	r1, [sp, #48]	; 0x30
 8013b52:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013b56:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013b5a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013b5e:	ab08      	add	r3, sp, #32
 8013b60:	e883 0003 	stmia.w	r3, {r0, r1}
 8013b64:	4618      	mov	r0, r3
 8013b66:	a90c      	add	r1, sp, #48	; 0x30
 8013b68:	f7ff fbe2 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 8013b6c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8013b6e:	2b00      	cmp	r3, #0
 8013b70:	d13c      	bne.n	8013bec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8013b72:	2000      	movs	r0, #0
 8013b74:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8013b78:	2600      	movs	r6, #0
 8013b7a:	682a      	ldr	r2, [r5, #0]
 8013b7c:	696b      	ldr	r3, [r5, #20]
 8013b7e:	616e      	str	r6, [r5, #20]
 8013b80:	9305      	str	r3, [sp, #20]
 8013b82:	6892      	ldr	r2, [r2, #8]
 8013b84:	a908      	add	r1, sp, #32
 8013b86:	4628      	mov	r0, r5
 8013b88:	4790      	blx	r2
 8013b8a:	9b05      	ldr	r3, [sp, #20]
 8013b8c:	616b      	str	r3, [r5, #20]
 8013b8e:	4652      	mov	r2, sl
 8013b90:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8013b94:	4649      	mov	r1, r9
 8013b96:	4628      	mov	r0, r5
 8013b98:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8013b9c:	f7f6 f963 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
 8013ba0:	4b23      	ldr	r3, [pc, #140]	; (8013c30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8013ba2:	9a01      	ldr	r2, [sp, #4]
 8013ba4:	801a      	strh	r2, [r3, #0]
 8013ba6:	4b23      	ldr	r3, [pc, #140]	; (8013c34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8013ba8:	9a02      	ldr	r2, [sp, #8]
 8013baa:	801a      	strh	r2, [r3, #0]
 8013bac:	4b1d      	ldr	r3, [pc, #116]	; (8013c24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013bae:	9a03      	ldr	r2, [sp, #12]
 8013bb0:	801a      	strh	r2, [r3, #0]
 8013bb2:	4b1d      	ldr	r3, [pc, #116]	; (8013c28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013bb4:	9a04      	ldr	r2, [sp, #16]
 8013bb6:	801a      	strh	r2, [r3, #0]
 8013bb8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8013bbc:	6823      	ldr	r3, [r4, #0]
 8013bbe:	4620      	mov	r0, r4
 8013bc0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013bc2:	4798      	blx	r3
 8013bc4:	6823      	ldr	r3, [r4, #0]
 8013bc6:	4620      	mov	r0, r4
 8013bc8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013bca:	4798      	blx	r3
 8013bcc:	b00f      	add	sp, #60	; 0x3c
 8013bce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013bd2:	883b      	ldrh	r3, [r7, #0]
 8013bd4:	f8ab 0000 	strh.w	r0, [fp]
 8013bd8:	f8aa 3000 	strh.w	r3, [sl]
 8013bdc:	e789      	b.n	8013af2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8013bde:	462a      	mov	r2, r5
 8013be0:	ab0a      	add	r3, sp, #40	; 0x28
 8013be2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013be6:	6851      	ldr	r1, [r2, #4]
 8013be8:	c303      	stmia	r3!, {r0, r1}
 8013bea:	e7a9      	b.n	8013b40 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8013bec:	a807      	add	r0, sp, #28
 8013bee:	f009 f80b 	bl	801cc08 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013bf2:	4606      	mov	r6, r0
 8013bf4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8013bf6:	6803      	ldr	r3, [r0, #0]
 8013bf8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013bfa:	4798      	blx	r3
 8013bfc:	4286      	cmp	r6, r0
 8013bfe:	d1b8      	bne.n	8013b72 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8013c00:	f7f7 f9fe 	bl	800b000 <_ZN8touchgfx3HAL3lcdEv>
 8013c04:	6803      	ldr	r3, [r0, #0]
 8013c06:	4606      	mov	r6, r0
 8013c08:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013c0a:	9305      	str	r3, [sp, #20]
 8013c0c:	a807      	add	r0, sp, #28
 8013c0e:	f008 fffb 	bl	801cc08 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013c12:	9b05      	ldr	r3, [sp, #20]
 8013c14:	4601      	mov	r1, r0
 8013c16:	4630      	mov	r0, r6
 8013c18:	4798      	blx	r3
 8013c1a:	f080 0001 	eor.w	r0, r0, #1
 8013c1e:	b2c0      	uxtb	r0, r0
 8013c20:	e7a8      	b.n	8013b74 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8013c22:	bf00      	nop
 8013c24:	20002240 	.word	0x20002240
 8013c28:	20002242 	.word	0x20002242
 8013c2c:	20002244 	.word	0x20002244
 8013c30:	20002246 	.word	0x20002246
 8013c34:	20002248 	.word	0x20002248

08013c38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8013c38:	b510      	push	{r4, lr}
 8013c3a:	4b07      	ldr	r3, [pc, #28]	; (8013c58 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8013c3c:	781b      	ldrb	r3, [r3, #0]
 8013c3e:	4604      	mov	r4, r0
 8013c40:	b13b      	cbz	r3, 8013c52 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013c42:	6803      	ldr	r3, [r0, #0]
 8013c44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013c46:	4798      	blx	r3
 8013c48:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8013c4a:	4283      	cmp	r3, r0
 8013c4c:	d101      	bne.n	8013c52 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013c4e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8013c50:	bd10      	pop	{r4, pc}
 8013c52:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8013c54:	e7fc      	b.n	8013c50 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8013c56:	bf00      	nop
 8013c58:	2000224a 	.word	0x2000224a

08013c5c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8013c5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013c60:	b08a      	sub	sp, #40	; 0x28
 8013c62:	461d      	mov	r5, r3
 8013c64:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013c68:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013c6c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013c70:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013c74:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013c78:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013c7c:	2400      	movs	r4, #0
 8013c7e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013c82:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8013c86:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013c8a:	4690      	mov	r8, r2
 8013c8c:	4607      	mov	r7, r0
 8013c8e:	9404      	str	r4, [sp, #16]
 8013c90:	f88d 4020 	strb.w	r4, [sp, #32]
 8013c94:	f7ff ffd0 	bl	8013c38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013c98:	fb06 8505 	mla	r5, r6, r5, r8
 8013c9c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013ca0:	6878      	ldr	r0, [r7, #4]
 8013ca2:	9505      	str	r5, [sp, #20]
 8013ca4:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013ca8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013cac:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8013cb0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013cb4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013cb8:	6803      	ldr	r3, [r0, #0]
 8013cba:	a901      	add	r1, sp, #4
 8013cbc:	685b      	ldr	r3, [r3, #4]
 8013cbe:	4798      	blx	r3
 8013cc0:	b00a      	add	sp, #40	; 0x28
 8013cc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013cc6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8013cc6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013cca:	b08b      	sub	sp, #44	; 0x2c
 8013ccc:	2400      	movs	r4, #0
 8013cce:	461d      	mov	r5, r3
 8013cd0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013cd4:	4688      	mov	r8, r1
 8013cd6:	4691      	mov	r9, r2
 8013cd8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8013cdc:	9404      	str	r4, [sp, #16]
 8013cde:	4607      	mov	r7, r0
 8013ce0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013ce4:	f7ff ffa8 	bl	8013c38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013ce8:	fb06 9505 	mla	r5, r6, r5, r9
 8013cec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013cf0:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013cf4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013cf8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013cfc:	6878      	ldr	r0, [r7, #4]
 8013cfe:	9505      	str	r5, [sp, #20]
 8013d00:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013d04:	f8ad 401c 	strh.w	r4, [sp, #28]
 8013d08:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013d0c:	f8cd 8010 	str.w	r8, [sp, #16]
 8013d10:	f8ad 4020 	strh.w	r4, [sp, #32]
 8013d14:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013d18:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013d1c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013d20:	6803      	ldr	r3, [r0, #0]
 8013d22:	a901      	add	r1, sp, #4
 8013d24:	685b      	ldr	r3, [r3, #4]
 8013d26:	4798      	blx	r3
 8013d28:	b00b      	add	sp, #44	; 0x2c
 8013d2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08013d30 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8013d30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013d34:	b08a      	sub	sp, #40	; 0x28
 8013d36:	4698      	mov	r8, r3
 8013d38:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8013d3c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8013d40:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8013d44:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8013d48:	2300      	movs	r3, #0
 8013d4a:	2d0b      	cmp	r5, #11
 8013d4c:	4606      	mov	r6, r0
 8013d4e:	9304      	str	r3, [sp, #16]
 8013d50:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8013d54:	d138      	bne.n	8013dc8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8013d56:	2380      	movs	r3, #128	; 0x80
 8013d58:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013d5c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013d60:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013d64:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013d68:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013d6c:	f88d 0020 	strb.w	r0, [sp, #32]
 8013d70:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013d74:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013d78:	4630      	mov	r0, r6
 8013d7a:	9203      	str	r2, [sp, #12]
 8013d7c:	f7ff ff5c 	bl	8013c38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013d80:	2c0b      	cmp	r4, #11
 8013d82:	bf98      	it	ls
 8013d84:	4b1b      	ldrls	r3, [pc, #108]	; (8013df4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8013d86:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8013d8a:	bf98      	it	ls
 8013d8c:	5d19      	ldrbls	r1, [r3, r4]
 8013d8e:	f8ad 701e 	strh.w	r7, [sp, #30]
 8013d92:	bf88      	it	hi
 8013d94:	2100      	movhi	r1, #0
 8013d96:	fb02 8307 	mla	r3, r2, r7, r8
 8013d9a:	10c9      	asrs	r1, r1, #3
 8013d9c:	fb01 0003 	mla	r0, r1, r3, r0
 8013da0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8013da4:	9005      	str	r0, [sp, #20]
 8013da6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013daa:	6870      	ldr	r0, [r6, #4]
 8013dac:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8013db0:	2300      	movs	r3, #0
 8013db2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013db6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013dba:	6803      	ldr	r3, [r0, #0]
 8013dbc:	a901      	add	r1, sp, #4
 8013dbe:	685b      	ldr	r3, [r3, #4]
 8013dc0:	4798      	blx	r3
 8013dc2:	b00a      	add	sp, #40	; 0x28
 8013dc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013dc8:	2d02      	cmp	r5, #2
 8013dca:	d109      	bne.n	8013de0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8013dcc:	28ff      	cmp	r0, #255	; 0xff
 8013dce:	d105      	bne.n	8013ddc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8013dd0:	f1bc 0f00 	cmp.w	ip, #0
 8013dd4:	bf14      	ite	ne
 8013dd6:	2340      	movne	r3, #64	; 0x40
 8013dd8:	2320      	moveq	r3, #32
 8013dda:	e7bd      	b.n	8013d58 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013ddc:	2340      	movs	r3, #64	; 0x40
 8013dde:	e7bb      	b.n	8013d58 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013de0:	28ff      	cmp	r0, #255	; 0xff
 8013de2:	d105      	bne.n	8013df0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8013de4:	f1bc 0f00 	cmp.w	ip, #0
 8013de8:	bf14      	ite	ne
 8013dea:	2304      	movne	r3, #4
 8013dec:	2301      	moveq	r3, #1
 8013dee:	e7b3      	b.n	8013d58 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013df0:	2304      	movs	r3, #4
 8013df2:	e7b1      	b.n	8013d58 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013df4:	0802f050 	.word	0x0802f050

08013df8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8013df8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013dfc:	b08b      	sub	sp, #44	; 0x2c
 8013dfe:	461d      	mov	r5, r3
 8013e00:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8013e04:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8013e08:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8013e0c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013e10:	bf14      	ite	ne
 8013e12:	2308      	movne	r3, #8
 8013e14:	2302      	moveq	r3, #2
 8013e16:	2400      	movs	r4, #0
 8013e18:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013e1c:	4688      	mov	r8, r1
 8013e1e:	4693      	mov	fp, r2
 8013e20:	9404      	str	r4, [sp, #16]
 8013e22:	4607      	mov	r7, r0
 8013e24:	f7ff ff08 	bl	8013c38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013e28:	2e0b      	cmp	r6, #11
 8013e2a:	bf98      	it	ls
 8013e2c:	4b15      	ldrls	r3, [pc, #84]	; (8013e84 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8013e2e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013e32:	bf98      	it	ls
 8013e34:	5d9c      	ldrbls	r4, [r3, r6]
 8013e36:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8013e3a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013e3e:	fb05 b50a 	mla	r5, r5, sl, fp
 8013e42:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013e46:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013e4a:	10e4      	asrs	r4, r4, #3
 8013e4c:	fb04 0405 	mla	r4, r4, r5, r0
 8013e50:	2300      	movs	r3, #0
 8013e52:	6878      	ldr	r0, [r7, #4]
 8013e54:	9405      	str	r4, [sp, #20]
 8013e56:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013e5a:	f8ad a01e 	strh.w	sl, [sp, #30]
 8013e5e:	f8cd 8010 	str.w	r8, [sp, #16]
 8013e62:	f88d 9020 	strb.w	r9, [sp, #32]
 8013e66:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8013e6a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013e6e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8013e72:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8013e76:	6803      	ldr	r3, [r0, #0]
 8013e78:	a901      	add	r1, sp, #4
 8013e7a:	685b      	ldr	r3, [r3, #4]
 8013e7c:	4798      	blx	r3
 8013e7e:	b00b      	add	sp, #44	; 0x2c
 8013e80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e84:	0802f050 	.word	0x0802f050

08013e88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8013e88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013e8c:	461e      	mov	r6, r3
 8013e8e:	4b0a      	ldr	r3, [pc, #40]	; (8013eb8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8013e90:	460f      	mov	r7, r1
 8013e92:	881d      	ldrh	r5, [r3, #0]
 8013e94:	4690      	mov	r8, r2
 8013e96:	f7f7 f8b3 	bl	800b000 <_ZN8touchgfx3HAL3lcdEv>
 8013e9a:	6803      	ldr	r3, [r0, #0]
 8013e9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013e9e:	4798      	blx	r3
 8013ea0:	280b      	cmp	r0, #11
 8013ea2:	bf9a      	itte	ls
 8013ea4:	4b05      	ldrls	r3, [pc, #20]	; (8013ebc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8013ea6:	5c1c      	ldrbls	r4, [r3, r0]
 8013ea8:	2400      	movhi	r4, #0
 8013eaa:	fb08 7005 	mla	r0, r8, r5, r7
 8013eae:	10e4      	asrs	r4, r4, #3
 8013eb0:	fb04 6000 	mla	r0, r4, r0, r6
 8013eb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013eb8:	20002246 	.word	0x20002246
 8013ebc:	0802f050 	.word	0x0802f050

08013ec0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8013ec0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013ec2:	b08b      	sub	sp, #44	; 0x2c
 8013ec4:	461f      	mov	r7, r3
 8013ec6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013eca:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013ece:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013ed2:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013ed6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013eda:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013ede:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013ee2:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013ee6:	2500      	movs	r5, #0
 8013ee8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013eec:	f88d 3020 	strb.w	r3, [sp, #32]
 8013ef0:	4604      	mov	r4, r0
 8013ef2:	4616      	mov	r6, r2
 8013ef4:	9504      	str	r5, [sp, #16]
 8013ef6:	f7ff fe9f 	bl	8013c38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013efa:	463a      	mov	r2, r7
 8013efc:	4631      	mov	r1, r6
 8013efe:	4603      	mov	r3, r0
 8013f00:	4620      	mov	r0, r4
 8013f02:	f7ff ffc1 	bl	8013e88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013f06:	4b0e      	ldr	r3, [pc, #56]	; (8013f40 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8013f08:	9005      	str	r0, [sp, #20]
 8013f0a:	881b      	ldrh	r3, [r3, #0]
 8013f0c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013f10:	f7f7 f876 	bl	800b000 <_ZN8touchgfx3HAL3lcdEv>
 8013f14:	6803      	ldr	r3, [r0, #0]
 8013f16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013f18:	4798      	blx	r3
 8013f1a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013f1c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8013f20:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8013f24:	9304      	str	r3, [sp, #16]
 8013f26:	6860      	ldr	r0, [r4, #4]
 8013f28:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8013f2c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013f30:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8013f34:	6803      	ldr	r3, [r0, #0]
 8013f36:	a901      	add	r1, sp, #4
 8013f38:	685b      	ldr	r3, [r3, #4]
 8013f3a:	4798      	blx	r3
 8013f3c:	b00b      	add	sp, #44	; 0x2c
 8013f3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013f40:	20002246 	.word	0x20002246

08013f44 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8013f44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013f46:	b08d      	sub	sp, #52	; 0x34
 8013f48:	466b      	mov	r3, sp
 8013f4a:	e883 0006 	stmia.w	r3, {r1, r2}
 8013f4e:	2300      	movs	r3, #0
 8013f50:	9306      	str	r3, [sp, #24]
 8013f52:	6803      	ldr	r3, [r0, #0]
 8013f54:	f8bd 6000 	ldrh.w	r6, [sp]
 8013f58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013f5a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8013f5e:	2501      	movs	r5, #1
 8013f60:	9503      	str	r5, [sp, #12]
 8013f62:	4604      	mov	r4, r0
 8013f64:	4798      	blx	r3
 8013f66:	463a      	mov	r2, r7
 8013f68:	4631      	mov	r1, r6
 8013f6a:	4603      	mov	r3, r0
 8013f6c:	4620      	mov	r0, r4
 8013f6e:	f7ff ff8b 	bl	8013e88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013f72:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8013f74:	9307      	str	r3, [sp, #28]
 8013f76:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8013f7a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013f7e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8013f82:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8013f86:	4b0f      	ldr	r3, [pc, #60]	; (8013fc4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8013f88:	9004      	str	r0, [sp, #16]
 8013f8a:	881b      	ldrh	r3, [r3, #0]
 8013f8c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8013f90:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8013f94:	f7f7 f834 	bl	800b000 <_ZN8touchgfx3HAL3lcdEv>
 8013f98:	6803      	ldr	r3, [r0, #0]
 8013f9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013f9c:	4798      	blx	r3
 8013f9e:	23ff      	movs	r3, #255	; 0xff
 8013fa0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8013fa4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013fa8:	6860      	ldr	r0, [r4, #4]
 8013faa:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8013fae:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8013fb2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8013fb6:	6803      	ldr	r3, [r0, #0]
 8013fb8:	a903      	add	r1, sp, #12
 8013fba:	685b      	ldr	r3, [r3, #4]
 8013fbc:	4798      	blx	r3
 8013fbe:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8013fc0:	b00d      	add	sp, #52	; 0x34
 8013fc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013fc4:	20002246 	.word	0x20002246

08013fc8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8013fc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013fcc:	b08c      	sub	sp, #48	; 0x30
 8013fce:	461e      	mov	r6, r3
 8013fd0:	466d      	mov	r5, sp
 8013fd2:	2300      	movs	r3, #0
 8013fd4:	e885 0006 	stmia.w	r5, {r1, r2}
 8013fd8:	9306      	str	r3, [sp, #24]
 8013fda:	6803      	ldr	r3, [r0, #0]
 8013fdc:	f8bd 7000 	ldrh.w	r7, [sp]
 8013fe0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013fe2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8013fe6:	2501      	movs	r5, #1
 8013fe8:	9503      	str	r5, [sp, #12]
 8013fea:	4604      	mov	r4, r0
 8013fec:	4798      	blx	r3
 8013fee:	4642      	mov	r2, r8
 8013ff0:	4639      	mov	r1, r7
 8013ff2:	4603      	mov	r3, r0
 8013ff4:	4620      	mov	r0, r4
 8013ff6:	f7ff ff47 	bl	8013e88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013ffa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8013ffe:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014002:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8014006:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801400a:	4b11      	ldr	r3, [pc, #68]	; (8014050 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 801400c:	9004      	str	r0, [sp, #16]
 801400e:	881b      	ldrh	r3, [r3, #0]
 8014010:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8014014:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014016:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801401a:	9607      	str	r6, [sp, #28]
 801401c:	f7f6 fff0 	bl	800b000 <_ZN8touchgfx3HAL3lcdEv>
 8014020:	6803      	ldr	r3, [r0, #0]
 8014022:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014024:	4798      	blx	r3
 8014026:	23ff      	movs	r3, #255	; 0xff
 8014028:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801402c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8014030:	6860      	ldr	r0, [r4, #4]
 8014032:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8014036:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801403a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801403e:	6803      	ldr	r3, [r0, #0]
 8014040:	a903      	add	r1, sp, #12
 8014042:	685b      	ldr	r3, [r3, #4]
 8014044:	4798      	blx	r3
 8014046:	4630      	mov	r0, r6
 8014048:	b00c      	add	sp, #48	; 0x30
 801404a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801404e:	bf00      	nop
 8014050:	20002246 	.word	0x20002246

08014054 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8014054:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014056:	b085      	sub	sp, #20
 8014058:	ac02      	add	r4, sp, #8
 801405a:	e884 0006 	stmia.w	r4, {r1, r2}
 801405e:	4605      	mov	r5, r0
 8014060:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8014064:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8014068:	f7ff fde6 	bl	8013c38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801406c:	463a      	mov	r2, r7
 801406e:	4603      	mov	r3, r0
 8014070:	4631      	mov	r1, r6
 8014072:	4628      	mov	r0, r5
 8014074:	f7ff ff08 	bl	8013e88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8014078:	4a05      	ldr	r2, [pc, #20]	; (8014090 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 801407a:	682b      	ldr	r3, [r5, #0]
 801407c:	8812      	ldrh	r2, [r2, #0]
 801407e:	9200      	str	r2, [sp, #0]
 8014080:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8014082:	e894 0006 	ldmia.w	r4, {r1, r2}
 8014086:	4603      	mov	r3, r0
 8014088:	4628      	mov	r0, r5
 801408a:	47b0      	blx	r6
 801408c:	b005      	add	sp, #20
 801408e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014090:	20002246 	.word	0x20002246

08014094 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8014094:	b570      	push	{r4, r5, r6, lr}
 8014096:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 801409a:	4604      	mov	r4, r0
 801409c:	b19b      	cbz	r3, 80140c6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 801409e:	2002      	movs	r0, #2
 80140a0:	f7fc fee4 	bl	8010e6c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80140a4:	2300      	movs	r3, #0
 80140a6:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80140aa:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 80140ae:	6823      	ldr	r3, [r4, #0]
 80140b0:	4620      	mov	r0, r4
 80140b2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 80140b6:	f7ff fdbf 	bl	8013c38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80140ba:	462b      	mov	r3, r5
 80140bc:	4601      	mov	r1, r0
 80140be:	4620      	mov	r0, r4
 80140c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80140c4:	4718      	bx	r3
 80140c6:	bd70      	pop	{r4, r5, r6, pc}

080140c8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 80140c8:	b538      	push	{r3, r4, r5, lr}
 80140ca:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 80140ce:	428b      	cmp	r3, r1
 80140d0:	4604      	mov	r4, r0
 80140d2:	460d      	mov	r5, r1
 80140d4:	d006      	beq.n	80140e4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 80140d6:	6803      	ldr	r3, [r0, #0]
 80140d8:	b929      	cbnz	r1, 80140e6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 80140da:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80140de:	4798      	blx	r3
 80140e0:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 80140e4:	bd38      	pop	{r3, r4, r5, pc}
 80140e6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 80140ea:	e7f8      	b.n	80140de <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

080140ec <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 80140ec:	b510      	push	{r4, lr}
 80140ee:	4b0d      	ldr	r3, [pc, #52]	; (8014124 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 80140f0:	781b      	ldrb	r3, [r3, #0]
 80140f2:	4604      	mov	r4, r0
 80140f4:	b95b      	cbnz	r3, 801410e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80140f6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80140fa:	2b02      	cmp	r3, #2
 80140fc:	d007      	beq.n	801410e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80140fe:	6840      	ldr	r0, [r0, #4]
 8014100:	f000 f928 	bl	8014354 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8014104:	b118      	cbz	r0, 801410e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8014106:	6862      	ldr	r2, [r4, #4]
 8014108:	7a53      	ldrb	r3, [r2, #9]
 801410a:	2b00      	cmp	r3, #0
 801410c:	d0fc      	beq.n	8014108 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801410e:	f7fd f937 	bl	8011380 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8014112:	4620      	mov	r0, r4
 8014114:	2100      	movs	r1, #0
 8014116:	f7ff ffd7 	bl	80140c8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801411a:	4620      	mov	r0, r4
 801411c:	f7ff fd8c 	bl	8013c38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8014120:	bd10      	pop	{r4, pc}
 8014122:	bf00      	nop
 8014124:	2000224a 	.word	0x2000224a

08014128 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8014128:	b570      	push	{r4, r5, r6, lr}
 801412a:	4604      	mov	r4, r0
 801412c:	6803      	ldr	r3, [r0, #0]
 801412e:	b919      	cbnz	r1, 8014138 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8014130:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014132:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014136:	4718      	bx	r3
 8014138:	2200      	movs	r2, #0
 801413a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 801413e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8014142:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014144:	4798      	blx	r3
 8014146:	6863      	ldr	r3, [r4, #4]
 8014148:	2101      	movs	r1, #1
 801414a:	4605      	mov	r5, r0
 801414c:	7299      	strb	r1, [r3, #10]
 801414e:	4620      	mov	r0, r4
 8014150:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8014154:	f7ff ffb8 	bl	80140c8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8014158:	4628      	mov	r0, r5
 801415a:	bd70      	pop	{r4, r5, r6, pc}

0801415c <_ZN8touchgfx13DMA_Interface5flushEv>:
 801415c:	6803      	ldr	r3, [r0, #0]
 801415e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014160:	4718      	bx	r3

08014162 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8014162:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8014166:	1a13      	subs	r3, r2, r0
 8014168:	4258      	negs	r0, r3
 801416a:	4158      	adcs	r0, r3
 801416c:	4770      	bx	lr

0801416e <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 801416e:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8014172:	1a9b      	subs	r3, r3, r2
 8014174:	2b00      	cmp	r3, #0
 8014176:	bfdc      	itt	le
 8014178:	6882      	ldrle	r2, [r0, #8]
 801417a:	189b      	addle	r3, r3, r2
 801417c:	2b01      	cmp	r3, #1
 801417e:	bfcc      	ite	gt
 8014180:	2000      	movgt	r0, #0
 8014182:	2001      	movle	r0, #1
 8014184:	4770      	bx	lr

08014186 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8014186:	6902      	ldr	r2, [r0, #16]
 8014188:	6843      	ldr	r3, [r0, #4]
 801418a:	2024      	movs	r0, #36	; 0x24
 801418c:	fb00 3002 	mla	r0, r0, r2, r3
 8014190:	4770      	bx	lr

08014192 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8014192:	6803      	ldr	r3, [r0, #0]
 8014194:	691b      	ldr	r3, [r3, #16]
 8014196:	4718      	bx	r3

08014198 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8014198:	b570      	push	{r4, r5, r6, lr}
 801419a:	2301      	movs	r3, #1
 801419c:	7203      	strb	r3, [r0, #8]
 801419e:	4604      	mov	r4, r0
 80141a0:	6840      	ldr	r0, [r0, #4]
 80141a2:	6803      	ldr	r3, [r0, #0]
 80141a4:	699b      	ldr	r3, [r3, #24]
 80141a6:	4798      	blx	r3
 80141a8:	6803      	ldr	r3, [r0, #0]
 80141aa:	2b40      	cmp	r3, #64	; 0x40
 80141ac:	4605      	mov	r5, r0
 80141ae:	d00c      	beq.n	80141ca <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80141b0:	d810      	bhi.n	80141d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80141b2:	2b04      	cmp	r3, #4
 80141b4:	d01d      	beq.n	80141f2 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 80141b6:	d804      	bhi.n	80141c2 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 80141b8:	2b01      	cmp	r3, #1
 80141ba:	d006      	beq.n	80141ca <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80141bc:	2b02      	cmp	r3, #2
 80141be:	d02c      	beq.n	801421a <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 80141c0:	bd70      	pop	{r4, r5, r6, pc}
 80141c2:	2b08      	cmp	r3, #8
 80141c4:	d01d      	beq.n	8014202 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 80141c6:	2b20      	cmp	r3, #32
 80141c8:	d1fa      	bne.n	80141c0 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 80141ca:	6823      	ldr	r3, [r4, #0]
 80141cc:	4620      	mov	r0, r4
 80141ce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80141d0:	4798      	blx	r3
 80141d2:	e013      	b.n	80141fc <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80141d4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80141d8:	d0f7      	beq.n	80141ca <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80141da:	d804      	bhi.n	80141e6 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 80141dc:	2b80      	cmp	r3, #128	; 0x80
 80141de:	d0f4      	beq.n	80141ca <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80141e0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80141e4:	e7f0      	b.n	80141c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 80141e6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80141ea:	d0ee      	beq.n	80141ca <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80141ec:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80141f0:	e7e5      	b.n	80141be <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 80141f2:	6823      	ldr	r3, [r4, #0]
 80141f4:	7f01      	ldrb	r1, [r0, #28]
 80141f6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80141f8:	4620      	mov	r0, r4
 80141fa:	4798      	blx	r3
 80141fc:	6823      	ldr	r3, [r4, #0]
 80141fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014200:	e006      	b.n	8014210 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8014202:	6823      	ldr	r3, [r4, #0]
 8014204:	7f01      	ldrb	r1, [r0, #28]
 8014206:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014208:	4620      	mov	r0, r4
 801420a:	4798      	blx	r3
 801420c:	6823      	ldr	r3, [r4, #0]
 801420e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8014210:	4629      	mov	r1, r5
 8014212:	4620      	mov	r0, r4
 8014214:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014218:	4718      	bx	r3
 801421a:	6823      	ldr	r3, [r4, #0]
 801421c:	4620      	mov	r0, r4
 801421e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014220:	4798      	blx	r3
 8014222:	e7f3      	b.n	801420c <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08014224 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8014224:	4770      	bx	lr

08014226 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8014226:	4770      	bx	lr

08014228 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8014228:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 801422c:	1ad2      	subs	r2, r2, r3
 801422e:	2a00      	cmp	r2, #0
 8014230:	b510      	push	{r4, lr}
 8014232:	bfdc      	itt	le
 8014234:	6884      	ldrle	r4, [r0, #8]
 8014236:	1912      	addle	r2, r2, r4
 8014238:	2a01      	cmp	r2, #1
 801423a:	dd16      	ble.n	801426a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 801423c:	6842      	ldr	r2, [r0, #4]
 801423e:	2424      	movs	r4, #36	; 0x24
 8014240:	fb04 2303 	mla	r3, r4, r3, r2
 8014244:	f101 0220 	add.w	r2, r1, #32
 8014248:	f851 4b04 	ldr.w	r4, [r1], #4
 801424c:	f843 4b04 	str.w	r4, [r3], #4
 8014250:	4291      	cmp	r1, r2
 8014252:	d1f9      	bne.n	8014248 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8014254:	780a      	ldrb	r2, [r1, #0]
 8014256:	701a      	strb	r2, [r3, #0]
 8014258:	68c3      	ldr	r3, [r0, #12]
 801425a:	6882      	ldr	r2, [r0, #8]
 801425c:	f3bf 8f5b 	dmb	ish
 8014260:	3301      	adds	r3, #1
 8014262:	429a      	cmp	r2, r3
 8014264:	bfd8      	it	le
 8014266:	1a9b      	suble	r3, r3, r2
 8014268:	60c3      	str	r3, [r0, #12]
 801426a:	bd10      	pop	{r4, pc}

0801426c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 801426c:	6903      	ldr	r3, [r0, #16]
 801426e:	6882      	ldr	r2, [r0, #8]
 8014270:	f3bf 8f5b 	dmb	ish
 8014274:	3301      	adds	r3, #1
 8014276:	429a      	cmp	r2, r3
 8014278:	bfd8      	it	le
 801427a:	1a9b      	suble	r3, r3, r2
 801427c:	6103      	str	r3, [r0, #16]
 801427e:	4770      	bx	lr

08014280 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8014280:	b570      	push	{r4, r5, r6, lr}
 8014282:	4604      	mov	r4, r0
 8014284:	460e      	mov	r6, r1
 8014286:	6860      	ldr	r0, [r4, #4]
 8014288:	6803      	ldr	r3, [r0, #0]
 801428a:	685b      	ldr	r3, [r3, #4]
 801428c:	4798      	blx	r3
 801428e:	2800      	cmp	r0, #0
 8014290:	d1f9      	bne.n	8014286 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8014292:	4d0d      	ldr	r5, [pc, #52]	; (80142c8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8014294:	6828      	ldr	r0, [r5, #0]
 8014296:	6803      	ldr	r3, [r0, #0]
 8014298:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801429a:	4798      	blx	r3
 801429c:	f7fd f892 	bl	80113c4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80142a0:	6828      	ldr	r0, [r5, #0]
 80142a2:	2101      	movs	r1, #1
 80142a4:	f7ff ff10 	bl	80140c8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80142a8:	6860      	ldr	r0, [r4, #4]
 80142aa:	6803      	ldr	r3, [r0, #0]
 80142ac:	4631      	mov	r1, r6
 80142ae:	689b      	ldr	r3, [r3, #8]
 80142b0:	4798      	blx	r3
 80142b2:	6823      	ldr	r3, [r4, #0]
 80142b4:	4620      	mov	r0, r4
 80142b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80142b8:	4798      	blx	r3
 80142ba:	6828      	ldr	r0, [r5, #0]
 80142bc:	6803      	ldr	r3, [r0, #0]
 80142be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80142c2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80142c4:	4718      	bx	r3
 80142c6:	bf00      	nop
 80142c8:	2000224c 	.word	0x2000224c

080142cc <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 80142cc:	b508      	push	{r3, lr}
 80142ce:	f7fd f857 	bl	8011380 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80142d2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80142d6:	f7fd b869 	b.w	80113ac <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080142da <_ZN8touchgfx13DMA_Interface5startEv>:
 80142da:	b510      	push	{r4, lr}
 80142dc:	4604      	mov	r4, r0
 80142de:	6840      	ldr	r0, [r0, #4]
 80142e0:	6803      	ldr	r3, [r0, #0]
 80142e2:	681b      	ldr	r3, [r3, #0]
 80142e4:	4798      	blx	r3
 80142e6:	b948      	cbnz	r0, 80142fc <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80142e8:	7a63      	ldrb	r3, [r4, #9]
 80142ea:	b13b      	cbz	r3, 80142fc <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80142ec:	7a23      	ldrb	r3, [r4, #8]
 80142ee:	b92b      	cbnz	r3, 80142fc <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80142f0:	6823      	ldr	r3, [r4, #0]
 80142f2:	4620      	mov	r0, r4
 80142f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80142f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80142fa:	4718      	bx	r3
 80142fc:	bd10      	pop	{r4, pc}

080142fe <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80142fe:	b570      	push	{r4, r5, r6, lr}
 8014300:	4604      	mov	r4, r0
 8014302:	6840      	ldr	r0, [r0, #4]
 8014304:	6803      	ldr	r3, [r0, #0]
 8014306:	681b      	ldr	r3, [r3, #0]
 8014308:	4798      	blx	r3
 801430a:	4605      	mov	r5, r0
 801430c:	b930      	cbnz	r0, 801431c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 801430e:	7a23      	ldrb	r3, [r4, #8]
 8014310:	b123      	cbz	r3, 801431c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8014312:	6860      	ldr	r0, [r4, #4]
 8014314:	6803      	ldr	r3, [r0, #0]
 8014316:	695b      	ldr	r3, [r3, #20]
 8014318:	4798      	blx	r3
 801431a:	7225      	strb	r5, [r4, #8]
 801431c:	6860      	ldr	r0, [r4, #4]
 801431e:	6803      	ldr	r3, [r0, #0]
 8014320:	681b      	ldr	r3, [r3, #0]
 8014322:	4798      	blx	r3
 8014324:	b928      	cbnz	r0, 8014332 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8014326:	6823      	ldr	r3, [r4, #0]
 8014328:	4620      	mov	r0, r4
 801432a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801432c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014330:	4718      	bx	r3
 8014332:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014336:	f7fd b851 	b.w	80113dc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

0801433c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 801433c:	b510      	push	{r4, lr}
 801433e:	4c04      	ldr	r4, [pc, #16]	; (8014350 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8014340:	6082      	str	r2, [r0, #8]
 8014342:	2200      	movs	r2, #0
 8014344:	e9c0 4100 	strd	r4, r1, [r0]
 8014348:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801434c:	bd10      	pop	{r4, pc}
 801434e:	bf00      	nop
 8014350:	0802f18c 	.word	0x0802f18c

08014354 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8014354:	6840      	ldr	r0, [r0, #4]
 8014356:	6803      	ldr	r3, [r0, #0]
 8014358:	681b      	ldr	r3, [r3, #0]
 801435a:	4718      	bx	r3

0801435c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
 801435c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8014360:	4770      	bx	lr

08014362 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:
 8014362:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8014366:	4770      	bx	lr

08014368 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
 8014368:	2200      	movs	r2, #0
 801436a:	8002      	strh	r2, [r0, #0]
 801436c:	8042      	strh	r2, [r0, #2]
 801436e:	8082      	strh	r2, [r0, #4]
 8014370:	80c2      	strh	r2, [r0, #6]
 8014372:	4770      	bx	lr

08014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8014374:	b507      	push	{r0, r1, r2, lr}
 8014376:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 801437a:	ab01      	add	r3, sp, #4
 801437c:	6809      	ldr	r1, [r1, #0]
 801437e:	6800      	ldr	r0, [r0, #0]
 8014380:	f006 fa5e 	bl	801a840 <_ZN8touchgfx6muldivElllRl>
 8014384:	b003      	add	sp, #12
 8014386:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801438c <_ZN8touchgfx7CWRUtil4sineEi>:
 801438c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8014390:	fb90 f2f3 	sdiv	r2, r0, r3
 8014394:	fb02 0013 	mls	r0, r2, r3, r0
 8014398:	2800      	cmp	r0, #0
 801439a:	bfb8      	it	lt
 801439c:	18c0      	addlt	r0, r0, r3
 801439e:	285a      	cmp	r0, #90	; 0x5a
 80143a0:	4b09      	ldr	r3, [pc, #36]	; (80143c8 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 80143a2:	dc02      	bgt.n	80143aa <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 80143a4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80143a8:	4770      	bx	lr
 80143aa:	28b4      	cmp	r0, #180	; 0xb4
 80143ac:	dc02      	bgt.n	80143b4 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 80143ae:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 80143b2:	e7f7      	b.n	80143a4 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 80143b4:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 80143b8:	bfd4      	ite	le
 80143ba:	38b4      	suble	r0, #180	; 0xb4
 80143bc:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 80143c0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80143c4:	4240      	negs	r0, r0
 80143c6:	4770      	bx	lr
 80143c8:	0802f1a8 	.word	0x0802f1a8

080143cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 80143cc:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 80143d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80143d2:	fb90 f2f3 	sdiv	r2, r0, r3
 80143d6:	fb02 0013 	mls	r0, r2, r3, r0
 80143da:	2800      	cmp	r0, #0
 80143dc:	bfb8      	it	lt
 80143de:	18c0      	addlt	r0, r0, r3
 80143e0:	1144      	asrs	r4, r0, #5
 80143e2:	f000 061f 	and.w	r6, r0, #31
 80143e6:	4620      	mov	r0, r4
 80143e8:	f7ff ffd0 	bl	801438c <_ZN8touchgfx7CWRUtil4sineEi>
 80143ec:	4605      	mov	r5, r0
 80143ee:	b90e      	cbnz	r6, 80143f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 80143f0:	b002      	add	sp, #8
 80143f2:	bd70      	pop	{r4, r5, r6, pc}
 80143f4:	1c60      	adds	r0, r4, #1
 80143f6:	f7ff ffc9 	bl	801438c <_ZN8touchgfx7CWRUtil4sineEi>
 80143fa:	ab01      	add	r3, sp, #4
 80143fc:	2220      	movs	r2, #32
 80143fe:	4631      	mov	r1, r6
 8014400:	1b40      	subs	r0, r0, r5
 8014402:	f006 fa1d 	bl	801a840 <_ZN8touchgfx6muldivElllRl>
 8014406:	4428      	add	r0, r5
 8014408:	e7f2      	b.n	80143f0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

0801440a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 801440a:	b508      	push	{r3, lr}
 801440c:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8014410:	f7ff ffdc 	bl	80143cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014414:	bd08      	pop	{r3, pc}
	...

08014418 <_ZN8touchgfx6CircleC1Ev>:
 8014418:	b510      	push	{r4, lr}
 801441a:	4604      	mov	r4, r0
 801441c:	f000 fd68 	bl	8014ef0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8014420:	4b08      	ldr	r3, [pc, #32]	; (8014444 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8014422:	6023      	str	r3, [r4, #0]
 8014424:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8014428:	2300      	movs	r3, #0
 801442a:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 801442e:	f24b 4205 	movw	r2, #46085	; 0xb405
 8014432:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8014436:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 801443a:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 801443e:	60a3      	str	r3, [r4, #8]
 8014440:	4620      	mov	r0, r4
 8014442:	bd10      	pop	{r4, pc}
 8014444:	0802f268 	.word	0x0802f268

08014448 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8014448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801444c:	428a      	cmp	r2, r1
 801444e:	4680      	mov	r8, r0
 8014450:	4610      	mov	r0, r2
 8014452:	4699      	mov	r9, r3
 8014454:	bfa6      	itte	ge
 8014456:	460a      	movge	r2, r1
 8014458:	4603      	movge	r3, r0
 801445a:	460b      	movlt	r3, r1
 801445c:	1a99      	subs	r1, r3, r2
 801445e:	b085      	sub	sp, #20
 8014460:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8014464:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8014468:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801446a:	bfa4      	itt	ge
 801446c:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8014470:	2200      	movge	r2, #0
 8014472:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8014476:	9300      	str	r3, [sp, #0]
 8014478:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 801447c:	f102 0b01 	add.w	fp, r2, #1
 8014480:	2c00      	cmp	r4, #0
 8014482:	f040 80af 	bne.w	80145e4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8014486:	4610      	mov	r0, r2
 8014488:	9201      	str	r2, [sp, #4]
 801448a:	f7ff ff9f 	bl	80143cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 801448e:	a903      	add	r1, sp, #12
 8014490:	9003      	str	r0, [sp, #12]
 8014492:	4650      	mov	r0, sl
 8014494:	f7ff ff6e 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014498:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 801449c:	9a01      	ldr	r2, [sp, #4]
 801449e:	4408      	add	r0, r1
 80144a0:	f8d9 1000 	ldr.w	r1, [r9]
 80144a4:	4281      	cmp	r1, r0
 80144a6:	bfc8      	it	gt
 80144a8:	f8c9 0000 	strgt.w	r0, [r9]
 80144ac:	6839      	ldr	r1, [r7, #0]
 80144ae:	4288      	cmp	r0, r1
 80144b0:	bfc8      	it	gt
 80144b2:	6038      	strgt	r0, [r7, #0]
 80144b4:	4610      	mov	r0, r2
 80144b6:	f7ff ffa8 	bl	801440a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80144ba:	a903      	add	r1, sp, #12
 80144bc:	9003      	str	r0, [sp, #12]
 80144be:	4650      	mov	r0, sl
 80144c0:	f7ff ff58 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80144c4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80144c8:	1a10      	subs	r0, r2, r0
 80144ca:	6832      	ldr	r2, [r6, #0]
 80144cc:	4282      	cmp	r2, r0
 80144ce:	bfc8      	it	gt
 80144d0:	6030      	strgt	r0, [r6, #0]
 80144d2:	682a      	ldr	r2, [r5, #0]
 80144d4:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80144d8:	4290      	cmp	r0, r2
 80144da:	fb9b f2f1 	sdiv	r2, fp, r1
 80144de:	fb01 b212 	mls	r2, r1, r2, fp
 80144e2:	eba1 0202 	sub.w	r2, r1, r2
 80144e6:	bfc8      	it	gt
 80144e8:	6028      	strgt	r0, [r5, #0]
 80144ea:	fb92 f0f1 	sdiv	r0, r2, r1
 80144ee:	fb01 2210 	mls	r2, r1, r0, r2
 80144f2:	4493      	add	fp, r2
 80144f4:	9b00      	ldr	r3, [sp, #0]
 80144f6:	455b      	cmp	r3, fp
 80144f8:	db2a      	blt.n	8014550 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 80144fa:	4658      	mov	r0, fp
 80144fc:	f7ff ff66 	bl	80143cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014500:	a903      	add	r1, sp, #12
 8014502:	9003      	str	r0, [sp, #12]
 8014504:	4650      	mov	r0, sl
 8014506:	f7ff ff35 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801450a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 801450e:	4410      	add	r0, r2
 8014510:	f8d9 2000 	ldr.w	r2, [r9]
 8014514:	4282      	cmp	r2, r0
 8014516:	bfc8      	it	gt
 8014518:	f8c9 0000 	strgt.w	r0, [r9]
 801451c:	683a      	ldr	r2, [r7, #0]
 801451e:	4290      	cmp	r0, r2
 8014520:	bfc8      	it	gt
 8014522:	6038      	strgt	r0, [r7, #0]
 8014524:	4658      	mov	r0, fp
 8014526:	f7ff ff70 	bl	801440a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801452a:	a903      	add	r1, sp, #12
 801452c:	9003      	str	r0, [sp, #12]
 801452e:	4650      	mov	r0, sl
 8014530:	f7ff ff20 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014534:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8014538:	1a10      	subs	r0, r2, r0
 801453a:	6832      	ldr	r2, [r6, #0]
 801453c:	4282      	cmp	r2, r0
 801453e:	bfc8      	it	gt
 8014540:	6030      	strgt	r0, [r6, #0]
 8014542:	682a      	ldr	r2, [r5, #0]
 8014544:	4290      	cmp	r0, r2
 8014546:	bfc8      	it	gt
 8014548:	6028      	strgt	r0, [r5, #0]
 801454a:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 801454e:	e7d1      	b.n	80144f4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8014550:	9b00      	ldr	r3, [sp, #0]
 8014552:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8014556:	455b      	cmp	r3, fp
 8014558:	dd27      	ble.n	80145aa <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 801455a:	4618      	mov	r0, r3
 801455c:	f7ff ff36 	bl	80143cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014560:	a903      	add	r1, sp, #12
 8014562:	9003      	str	r0, [sp, #12]
 8014564:	4650      	mov	r0, sl
 8014566:	f7ff ff05 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801456a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 801456e:	4410      	add	r0, r2
 8014570:	f8d9 2000 	ldr.w	r2, [r9]
 8014574:	4282      	cmp	r2, r0
 8014576:	bfc8      	it	gt
 8014578:	f8c9 0000 	strgt.w	r0, [r9]
 801457c:	683a      	ldr	r2, [r7, #0]
 801457e:	4290      	cmp	r0, r2
 8014580:	bfc8      	it	gt
 8014582:	6038      	strgt	r0, [r7, #0]
 8014584:	9800      	ldr	r0, [sp, #0]
 8014586:	f7ff ff40 	bl	801440a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801458a:	a903      	add	r1, sp, #12
 801458c:	9003      	str	r0, [sp, #12]
 801458e:	4650      	mov	r0, sl
 8014590:	f7ff fef0 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014594:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8014598:	1a10      	subs	r0, r2, r0
 801459a:	6832      	ldr	r2, [r6, #0]
 801459c:	4282      	cmp	r2, r0
 801459e:	bfc8      	it	gt
 80145a0:	6030      	strgt	r0, [r6, #0]
 80145a2:	682a      	ldr	r2, [r5, #0]
 80145a4:	4290      	cmp	r0, r2
 80145a6:	bfc8      	it	gt
 80145a8:	6028      	strgt	r0, [r5, #0]
 80145aa:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80145ae:	f8d9 1000 	ldr.w	r1, [r9]
 80145b2:	4291      	cmp	r1, r2
 80145b4:	bfc8      	it	gt
 80145b6:	f8c9 2000 	strgt.w	r2, [r9]
 80145ba:	683a      	ldr	r2, [r7, #0]
 80145bc:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 80145c0:	429a      	cmp	r2, r3
 80145c2:	bfb8      	it	lt
 80145c4:	603b      	strlt	r3, [r7, #0]
 80145c6:	6832      	ldr	r2, [r6, #0]
 80145c8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80145cc:	429a      	cmp	r2, r3
 80145ce:	bfc8      	it	gt
 80145d0:	6033      	strgt	r3, [r6, #0]
 80145d2:	682a      	ldr	r2, [r5, #0]
 80145d4:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80145d8:	429a      	cmp	r2, r3
 80145da:	da00      	bge.n	80145de <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80145dc:	602b      	str	r3, [r5, #0]
 80145de:	b005      	add	sp, #20
 80145e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80145e4:	2002      	movs	r0, #2
 80145e6:	3401      	adds	r4, #1
 80145e8:	fb94 f4f0 	sdiv	r4, r4, r0
 80145ec:	4610      	mov	r0, r2
 80145ee:	9201      	str	r2, [sp, #4]
 80145f0:	f7ff feec 	bl	80143cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80145f4:	a903      	add	r1, sp, #12
 80145f6:	9003      	str	r0, [sp, #12]
 80145f8:	4650      	mov	r0, sl
 80145fa:	f7ff febb 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80145fe:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8014602:	9a01      	ldr	r2, [sp, #4]
 8014604:	4408      	add	r0, r1
 8014606:	f8d9 1000 	ldr.w	r1, [r9]
 801460a:	1b03      	subs	r3, r0, r4
 801460c:	4299      	cmp	r1, r3
 801460e:	bfc8      	it	gt
 8014610:	f8c9 3000 	strgt.w	r3, [r9]
 8014614:	6839      	ldr	r1, [r7, #0]
 8014616:	428b      	cmp	r3, r1
 8014618:	bfc8      	it	gt
 801461a:	603b      	strgt	r3, [r7, #0]
 801461c:	f8d9 1000 	ldr.w	r1, [r9]
 8014620:	4420      	add	r0, r4
 8014622:	4281      	cmp	r1, r0
 8014624:	bfc8      	it	gt
 8014626:	f8c9 0000 	strgt.w	r0, [r9]
 801462a:	6839      	ldr	r1, [r7, #0]
 801462c:	4288      	cmp	r0, r1
 801462e:	bfc8      	it	gt
 8014630:	6038      	strgt	r0, [r7, #0]
 8014632:	4610      	mov	r0, r2
 8014634:	f7ff fee9 	bl	801440a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014638:	a903      	add	r1, sp, #12
 801463a:	9003      	str	r0, [sp, #12]
 801463c:	4650      	mov	r0, sl
 801463e:	f7ff fe99 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014642:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8014646:	1a10      	subs	r0, r2, r0
 8014648:	6832      	ldr	r2, [r6, #0]
 801464a:	1b01      	subs	r1, r0, r4
 801464c:	428a      	cmp	r2, r1
 801464e:	bfc8      	it	gt
 8014650:	6031      	strgt	r1, [r6, #0]
 8014652:	682a      	ldr	r2, [r5, #0]
 8014654:	4291      	cmp	r1, r2
 8014656:	bfc8      	it	gt
 8014658:	6029      	strgt	r1, [r5, #0]
 801465a:	6832      	ldr	r2, [r6, #0]
 801465c:	4420      	add	r0, r4
 801465e:	4282      	cmp	r2, r0
 8014660:	bfc8      	it	gt
 8014662:	6030      	strgt	r0, [r6, #0]
 8014664:	682a      	ldr	r2, [r5, #0]
 8014666:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 801466a:	4290      	cmp	r0, r2
 801466c:	fb9b f2f1 	sdiv	r2, fp, r1
 8014670:	fb01 b212 	mls	r2, r1, r2, fp
 8014674:	eba1 0202 	sub.w	r2, r1, r2
 8014678:	bfc8      	it	gt
 801467a:	6028      	strgt	r0, [r5, #0]
 801467c:	fb92 f0f1 	sdiv	r0, r2, r1
 8014680:	fb01 2210 	mls	r2, r1, r0, r2
 8014684:	4493      	add	fp, r2
 8014686:	9b00      	ldr	r3, [sp, #0]
 8014688:	455b      	cmp	r3, fp
 801468a:	db40      	blt.n	801470e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 801468c:	4658      	mov	r0, fp
 801468e:	f7ff fe9d 	bl	80143cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014692:	a903      	add	r1, sp, #12
 8014694:	9003      	str	r0, [sp, #12]
 8014696:	4650      	mov	r0, sl
 8014698:	f7ff fe6c 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801469c:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80146a0:	4410      	add	r0, r2
 80146a2:	f8d9 2000 	ldr.w	r2, [r9]
 80146a6:	1b01      	subs	r1, r0, r4
 80146a8:	428a      	cmp	r2, r1
 80146aa:	bfc8      	it	gt
 80146ac:	f8c9 1000 	strgt.w	r1, [r9]
 80146b0:	683a      	ldr	r2, [r7, #0]
 80146b2:	4291      	cmp	r1, r2
 80146b4:	bfc8      	it	gt
 80146b6:	6039      	strgt	r1, [r7, #0]
 80146b8:	f8d9 2000 	ldr.w	r2, [r9]
 80146bc:	4420      	add	r0, r4
 80146be:	4282      	cmp	r2, r0
 80146c0:	bfc8      	it	gt
 80146c2:	f8c9 0000 	strgt.w	r0, [r9]
 80146c6:	683a      	ldr	r2, [r7, #0]
 80146c8:	4290      	cmp	r0, r2
 80146ca:	bfc8      	it	gt
 80146cc:	6038      	strgt	r0, [r7, #0]
 80146ce:	4658      	mov	r0, fp
 80146d0:	f7ff fe9b 	bl	801440a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80146d4:	a903      	add	r1, sp, #12
 80146d6:	9003      	str	r0, [sp, #12]
 80146d8:	4650      	mov	r0, sl
 80146da:	f7ff fe4b 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80146de:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80146e2:	1a10      	subs	r0, r2, r0
 80146e4:	6832      	ldr	r2, [r6, #0]
 80146e6:	1b01      	subs	r1, r0, r4
 80146e8:	428a      	cmp	r2, r1
 80146ea:	bfc8      	it	gt
 80146ec:	6031      	strgt	r1, [r6, #0]
 80146ee:	682a      	ldr	r2, [r5, #0]
 80146f0:	4291      	cmp	r1, r2
 80146f2:	bfc8      	it	gt
 80146f4:	6029      	strgt	r1, [r5, #0]
 80146f6:	6832      	ldr	r2, [r6, #0]
 80146f8:	4420      	add	r0, r4
 80146fa:	4282      	cmp	r2, r0
 80146fc:	bfc8      	it	gt
 80146fe:	6030      	strgt	r0, [r6, #0]
 8014700:	682a      	ldr	r2, [r5, #0]
 8014702:	4290      	cmp	r0, r2
 8014704:	bfc8      	it	gt
 8014706:	6028      	strgt	r0, [r5, #0]
 8014708:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 801470c:	e7bb      	b.n	8014686 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 801470e:	9b00      	ldr	r3, [sp, #0]
 8014710:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8014714:	455b      	cmp	r3, fp
 8014716:	f77f af62 	ble.w	80145de <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 801471a:	4618      	mov	r0, r3
 801471c:	f7ff fe56 	bl	80143cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014720:	a903      	add	r1, sp, #12
 8014722:	9003      	str	r0, [sp, #12]
 8014724:	4650      	mov	r0, sl
 8014726:	f7ff fe25 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801472a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 801472e:	4410      	add	r0, r2
 8014730:	f8d9 2000 	ldr.w	r2, [r9]
 8014734:	1b01      	subs	r1, r0, r4
 8014736:	428a      	cmp	r2, r1
 8014738:	bfc8      	it	gt
 801473a:	f8c9 1000 	strgt.w	r1, [r9]
 801473e:	683a      	ldr	r2, [r7, #0]
 8014740:	4291      	cmp	r1, r2
 8014742:	bfc8      	it	gt
 8014744:	6039      	strgt	r1, [r7, #0]
 8014746:	f8d9 2000 	ldr.w	r2, [r9]
 801474a:	4420      	add	r0, r4
 801474c:	4282      	cmp	r2, r0
 801474e:	bfc8      	it	gt
 8014750:	f8c9 0000 	strgt.w	r0, [r9]
 8014754:	683b      	ldr	r3, [r7, #0]
 8014756:	4298      	cmp	r0, r3
 8014758:	bfc8      	it	gt
 801475a:	6038      	strgt	r0, [r7, #0]
 801475c:	9800      	ldr	r0, [sp, #0]
 801475e:	f7ff fe54 	bl	801440a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014762:	a903      	add	r1, sp, #12
 8014764:	9003      	str	r0, [sp, #12]
 8014766:	4650      	mov	r0, sl
 8014768:	f7ff fe04 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801476c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8014770:	6832      	ldr	r2, [r6, #0]
 8014772:	1a18      	subs	r0, r3, r0
 8014774:	1b03      	subs	r3, r0, r4
 8014776:	429a      	cmp	r2, r3
 8014778:	bfc8      	it	gt
 801477a:	6033      	strgt	r3, [r6, #0]
 801477c:	682a      	ldr	r2, [r5, #0]
 801477e:	4293      	cmp	r3, r2
 8014780:	bfc8      	it	gt
 8014782:	602b      	strgt	r3, [r5, #0]
 8014784:	6833      	ldr	r3, [r6, #0]
 8014786:	4404      	add	r4, r0
 8014788:	42a3      	cmp	r3, r4
 801478a:	bfc8      	it	gt
 801478c:	6034      	strgt	r4, [r6, #0]
 801478e:	682b      	ldr	r3, [r5, #0]
 8014790:	429c      	cmp	r4, r3
 8014792:	bfc8      	it	gt
 8014794:	602c      	strgt	r4, [r5, #0]
 8014796:	e722      	b.n	80145de <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08014798 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8014798:	b530      	push	{r4, r5, lr}
 801479a:	4604      	mov	r4, r0
 801479c:	4608      	mov	r0, r1
 801479e:	4611      	mov	r1, r2
 80147a0:	461a      	mov	r2, r3
 80147a2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80147a6:	b089      	sub	sp, #36	; 0x24
 80147a8:	015b      	lsls	r3, r3, #5
 80147aa:	9304      	str	r3, [sp, #16]
 80147ac:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80147b0:	2500      	movs	r5, #0
 80147b2:	015b      	lsls	r3, r3, #5
 80147b4:	e9cd 3506 	strd	r3, r5, [sp, #24]
 80147b8:	ab07      	add	r3, sp, #28
 80147ba:	9302      	str	r3, [sp, #8]
 80147bc:	ab06      	add	r3, sp, #24
 80147be:	9301      	str	r3, [sp, #4]
 80147c0:	ab05      	add	r3, sp, #20
 80147c2:	9300      	str	r3, [sp, #0]
 80147c4:	ab04      	add	r3, sp, #16
 80147c6:	9505      	str	r5, [sp, #20]
 80147c8:	f7ff fe3e 	bl	8014448 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 80147cc:	2520      	movs	r5, #32
 80147ce:	9a04      	ldr	r2, [sp, #16]
 80147d0:	9805      	ldr	r0, [sp, #20]
 80147d2:	fb92 f2f5 	sdiv	r2, r2, r5
 80147d6:	fb90 f0f5 	sdiv	r0, r0, r5
 80147da:	b292      	uxth	r2, r2
 80147dc:	3002      	adds	r0, #2
 80147de:	1a80      	subs	r0, r0, r2
 80147e0:	9b06      	ldr	r3, [sp, #24]
 80147e2:	9907      	ldr	r1, [sp, #28]
 80147e4:	fb93 f3f5 	sdiv	r3, r3, r5
 80147e8:	fb91 f1f5 	sdiv	r1, r1, r5
 80147ec:	b29b      	uxth	r3, r3
 80147ee:	3102      	adds	r1, #2
 80147f0:	1ac9      	subs	r1, r1, r3
 80147f2:	3a01      	subs	r2, #1
 80147f4:	3b01      	subs	r3, #1
 80147f6:	80a0      	strh	r0, [r4, #4]
 80147f8:	4620      	mov	r0, r4
 80147fa:	8022      	strh	r2, [r4, #0]
 80147fc:	8063      	strh	r3, [r4, #2]
 80147fe:	80e1      	strh	r1, [r4, #6]
 8014800:	b009      	add	sp, #36	; 0x24
 8014802:	bd30      	pop	{r4, r5, pc}

08014804 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8014804:	b510      	push	{r4, lr}
 8014806:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 801480a:	4604      	mov	r4, r0
 801480c:	f7ff ffc4 	bl	8014798 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8014810:	4620      	mov	r0, r4
 8014812:	bd10      	pop	{r4, pc}

08014814 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8014814:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014816:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 801481a:	4606      	mov	r6, r0
 801481c:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8014820:	6813      	ldr	r3, [r2, #0]
 8014822:	42a5      	cmp	r5, r4
 8014824:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8014828:	da2b      	bge.n	8014882 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 801482a:	42a3      	cmp	r3, r4
 801482c:	dd14      	ble.n	8014858 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 801482e:	b168      	cbz	r0, 801484c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8014830:	4267      	negs	r7, r4
 8014832:	fb97 f2f0 	sdiv	r2, r7, r0
 8014836:	fb00 7212 	mls	r2, r0, r2, r7
 801483a:	1a82      	subs	r2, r0, r2
 801483c:	fb92 f7f0 	sdiv	r7, r2, r0
 8014840:	fb00 2017 	mls	r0, r0, r7, r2
 8014844:	1a24      	subs	r4, r4, r0
 8014846:	42ac      	cmp	r4, r5
 8014848:	bfb8      	it	lt
 801484a:	462c      	movlt	r4, r5
 801484c:	4630      	mov	r0, r6
 801484e:	4622      	mov	r2, r4
 8014850:	f7ff ffa2 	bl	8014798 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8014854:	4630      	mov	r0, r6
 8014856:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014858:	42ab      	cmp	r3, r5
 801485a:	dd0e      	ble.n	801487a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 801485c:	b168      	cbz	r0, 801487a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 801485e:	425f      	negs	r7, r3
 8014860:	fb97 f2f0 	sdiv	r2, r7, r0
 8014864:	fb00 7212 	mls	r2, r0, r2, r7
 8014868:	1a82      	subs	r2, r0, r2
 801486a:	fb92 f7f0 	sdiv	r7, r2, r0
 801486e:	fb00 2017 	mls	r0, r0, r7, r2
 8014872:	1a1b      	subs	r3, r3, r0
 8014874:	42ab      	cmp	r3, r5
 8014876:	bfb8      	it	lt
 8014878:	462b      	movlt	r3, r5
 801487a:	4622      	mov	r2, r4
 801487c:	461c      	mov	r4, r3
 801487e:	4613      	mov	r3, r2
 8014880:	e7e4      	b.n	801484c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8014882:	42a3      	cmp	r3, r4
 8014884:	da10      	bge.n	80148a8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8014886:	b148      	cbz	r0, 801489c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8014888:	fb94 f2f0 	sdiv	r2, r4, r0
 801488c:	fb00 4212 	mls	r2, r0, r2, r4
 8014890:	1a82      	subs	r2, r0, r2
 8014892:	fb92 f7f0 	sdiv	r7, r2, r0
 8014896:	fb00 2017 	mls	r0, r0, r7, r2
 801489a:	4404      	add	r4, r0
 801489c:	42a5      	cmp	r5, r4
 801489e:	bfa8      	it	ge
 80148a0:	4625      	movge	r5, r4
 80148a2:	461c      	mov	r4, r3
 80148a4:	462b      	mov	r3, r5
 80148a6:	e7d1      	b.n	801484c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80148a8:	42ab      	cmp	r3, r5
 80148aa:	dacf      	bge.n	801484c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80148ac:	2800      	cmp	r0, #0
 80148ae:	d0cd      	beq.n	801484c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80148b0:	fb93 f2f0 	sdiv	r2, r3, r0
 80148b4:	fb00 3212 	mls	r2, r0, r2, r3
 80148b8:	1a82      	subs	r2, r0, r2
 80148ba:	fb92 f7f0 	sdiv	r7, r2, r0
 80148be:	fb00 2017 	mls	r0, r0, r7, r2
 80148c2:	4403      	add	r3, r0
 80148c4:	42ab      	cmp	r3, r5
 80148c6:	bfa8      	it	ge
 80148c8:	462b      	movge	r3, r5
 80148ca:	e7bf      	b.n	801484c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

080148cc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 80148cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80148d0:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 80148d4:	42ae      	cmp	r6, r5
 80148d6:	bfa2      	ittt	ge
 80148d8:	4633      	movge	r3, r6
 80148da:	462e      	movge	r6, r5
 80148dc:	461d      	movge	r5, r3
 80148de:	1bab      	subs	r3, r5, r6
 80148e0:	468b      	mov	fp, r1
 80148e2:	6c01      	ldr	r1, [r0, #64]	; 0x40
 80148e4:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 80148e8:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 80148ec:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80148f0:	f04f 0220 	mov.w	r2, #32
 80148f4:	b0ab      	sub	sp, #172	; 0xac
 80148f6:	4604      	mov	r4, r0
 80148f8:	bfa4      	itt	ge
 80148fa:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 80148fe:	2600      	movge	r6, #0
 8014900:	fb99 f9f2 	sdiv	r9, r9, r2
 8014904:	fb9a faf2 	sdiv	sl, sl, r2
 8014908:	6b43      	ldr	r3, [r0, #52]	; 0x34
 801490a:	2900      	cmp	r1, #0
 801490c:	f000 80f5 	beq.w	8014afa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8014910:	f9bb 0000 	ldrsh.w	r0, [fp]
 8014914:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8014918:	eba9 0700 	sub.w	r7, r9, r0
 801491c:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8014920:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8014924:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8014928:	ebaa 0802 	sub.w	r8, sl, r2
 801492c:	4407      	add	r7, r0
 801492e:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8014932:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8014936:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 801493a:	b23f      	sxth	r7, r7
 801493c:	4490      	add	r8, r2
 801493e:	eba9 0707 	sub.w	r7, r9, r7
 8014942:	fa0f f888 	sxth.w	r8, r8
 8014946:	ebaa 0808 	sub.w	r8, sl, r8
 801494a:	2f00      	cmp	r7, #0
 801494c:	bfb8      	it	lt
 801494e:	427f      	neglt	r7, r7
 8014950:	f1b8 0f00 	cmp.w	r8, #0
 8014954:	bfb8      	it	lt
 8014956:	f1c8 0800 	rsblt	r8, r8, #0
 801495a:	45bc      	cmp	ip, r7
 801495c:	bfcc      	ite	gt
 801495e:	f10c 0701 	addgt.w	r7, ip, #1
 8014962:	3701      	addle	r7, #1
 8014964:	4540      	cmp	r0, r8
 8014966:	bfc8      	it	gt
 8014968:	f100 0801 	addgt.w	r8, r0, #1
 801496c:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8014970:	f100 0001 	add.w	r0, r0, #1
 8014974:	ea4f 0060 	mov.w	r0, r0, asr #1
 8014978:	f04f 0202 	mov.w	r2, #2
 801497c:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8014980:	fb91 f1f2 	sdiv	r1, r1, r2
 8014984:	eba3 0301 	sub.w	r3, r3, r1
 8014988:	bfd8      	it	le
 801498a:	f108 0801 	addle.w	r8, r8, #1
 801498e:	9201      	str	r2, [sp, #4]
 8014990:	930d      	str	r3, [sp, #52]	; 0x34
 8014992:	f7ff fcfb 	bl	801438c <_ZN8touchgfx7CWRUtil4sineEi>
 8014996:	a92a      	add	r1, sp, #168	; 0xa8
 8014998:	fb08 f808 	mul.w	r8, r8, r8
 801499c:	f841 0d70 	str.w	r0, [r1, #-112]!
 80149a0:	a80d      	add	r0, sp, #52	; 0x34
 80149a2:	f7ff fce7 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80149a6:	fb07 8707 	mla	r7, r7, r7, r8
 80149aa:	f04f 0c20 	mov.w	ip, #32
 80149ae:	fb90 f0fc 	sdiv	r0, r0, ip
 80149b2:	4340      	muls	r0, r0
 80149b4:	4287      	cmp	r7, r0
 80149b6:	9a01      	ldr	r2, [sp, #4]
 80149b8:	da04      	bge.n	80149c4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 80149ba:	2401      	movs	r4, #1
 80149bc:	4620      	mov	r0, r4
 80149be:	b02b      	add	sp, #172	; 0xac
 80149c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80149c4:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80149c6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80149c8:	fb91 f3f2 	sdiv	r3, r1, r2
 80149cc:	4403      	add	r3, r0
 80149ce:	fb93 f3fc 	sdiv	r3, r3, ip
 80149d2:	f9bb 1000 	ldrsh.w	r1, [fp]
 80149d6:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 80149da:	440a      	add	r2, r1
 80149dc:	b212      	sxth	r2, r2
 80149de:	454a      	cmp	r2, r9
 80149e0:	bfa8      	it	ge
 80149e2:	464a      	movge	r2, r9
 80149e4:	428a      	cmp	r2, r1
 80149e6:	bfac      	ite	ge
 80149e8:	eba9 0902 	subge.w	r9, r9, r2
 80149ec:	eba9 0901 	sublt.w	r9, r9, r1
 80149f0:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 80149f4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80149f8:	440a      	add	r2, r1
 80149fa:	b212      	sxth	r2, r2
 80149fc:	4552      	cmp	r2, sl
 80149fe:	bfa8      	it	ge
 8014a00:	4652      	movge	r2, sl
 8014a02:	428a      	cmp	r2, r1
 8014a04:	bfac      	ite	ge
 8014a06:	ebaa 0a02 	subge.w	sl, sl, r2
 8014a0a:	ebaa 0a01 	sublt.w	sl, sl, r1
 8014a0e:	3301      	adds	r3, #1
 8014a10:	fb0a fa0a 	mul.w	sl, sl, sl
 8014a14:	fb09 a909 	mla	r9, r9, r9, sl
 8014a18:	435b      	muls	r3, r3
 8014a1a:	4599      	cmp	r9, r3
 8014a1c:	dccd      	bgt.n	80149ba <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8014a1e:	465a      	mov	r2, fp
 8014a20:	4621      	mov	r1, r4
 8014a22:	a80e      	add	r0, sp, #56	; 0x38
 8014a24:	f015 fc9a 	bl	802a35c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8014a28:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8014a2a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8014a2c:	9209      	str	r2, [sp, #36]	; 0x24
 8014a2e:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8014a32:	930a      	str	r3, [sp, #40]	; 0x28
 8014a34:	dd07      	ble.n	8014a46 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8014a36:	2102      	movs	r1, #2
 8014a38:	fb93 f3f1 	sdiv	r3, r3, r1
 8014a3c:	4413      	add	r3, r2
 8014a3e:	930a      	str	r3, [sp, #40]	; 0x28
 8014a40:	fb93 f3f1 	sdiv	r3, r3, r1
 8014a44:	9309      	str	r3, [sp, #36]	; 0x24
 8014a46:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8014a4a:	4630      	mov	r0, r6
 8014a4c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8014a50:	930b      	str	r3, [sp, #44]	; 0x2c
 8014a52:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8014a56:	f7ff fcb9 	bl	80143cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014a5a:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8014a5e:	f04f 0a02 	mov.w	sl, #2
 8014a62:	f849 0d74 	str.w	r0, [r9, #-116]!
 8014a66:	a80b      	add	r0, sp, #44	; 0x2c
 8014a68:	4649      	mov	r1, r9
 8014a6a:	f7ff fc83 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014a6e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014a70:	fb90 f0fa 	sdiv	r0, r0, sl
 8014a74:	eb00 0b03 	add.w	fp, r0, r3
 8014a78:	4630      	mov	r0, r6
 8014a7a:	f7ff fcc6 	bl	801440a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014a7e:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8014a82:	017f      	lsls	r7, r7, #5
 8014a84:	f848 0d78 	str.w	r0, [r8, #-120]!
 8014a88:	a80b      	add	r0, sp, #44	; 0x2c
 8014a8a:	4641      	mov	r1, r8
 8014a8c:	f7ff fc72 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014a90:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014a92:	fb90 f0fa 	sdiv	r0, r0, sl
 8014a96:	4659      	mov	r1, fp
 8014a98:	1a12      	subs	r2, r2, r0
 8014a9a:	a80e      	add	r0, sp, #56	; 0x38
 8014a9c:	f015 fdde 	bl	802a65c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8014aa0:	f106 0a20 	add.w	sl, r6, #32
 8014aa4:	bb67      	cbnz	r7, 8014b00 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8014aa6:	46b3      	mov	fp, r6
 8014aa8:	45aa      	cmp	sl, r5
 8014aaa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014aac:	dc33      	bgt.n	8014b16 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8014aae:	9909      	ldr	r1, [sp, #36]	; 0x24
 8014ab0:	4650      	mov	r0, sl
 8014ab2:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8014ab6:	920b      	str	r2, [sp, #44]	; 0x2c
 8014ab8:	f7ff fc88 	bl	80143cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014abc:	4641      	mov	r1, r8
 8014abe:	900c      	str	r0, [sp, #48]	; 0x30
 8014ac0:	a80b      	add	r0, sp, #44	; 0x2c
 8014ac2:	f7ff fc57 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014ac6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014ac8:	2302      	movs	r3, #2
 8014aca:	fb90 f0f3 	sdiv	r0, r0, r3
 8014ace:	eb00 0b02 	add.w	fp, r0, r2
 8014ad2:	4650      	mov	r0, sl
 8014ad4:	f7ff fc99 	bl	801440a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014ad8:	4649      	mov	r1, r9
 8014ada:	900d      	str	r0, [sp, #52]	; 0x34
 8014adc:	a80b      	add	r0, sp, #44	; 0x2c
 8014ade:	f7ff fc49 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014ae2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014ae4:	2302      	movs	r3, #2
 8014ae6:	4659      	mov	r1, fp
 8014ae8:	fb90 f0f3 	sdiv	r0, r0, r3
 8014aec:	1a12      	subs	r2, r2, r0
 8014aee:	a80e      	add	r0, sp, #56	; 0x38
 8014af0:	46d3      	mov	fp, sl
 8014af2:	f015 fe00 	bl	802a6f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014af6:	44ba      	add	sl, r7
 8014af8:	e7d6      	b.n	8014aa8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8014afa:	fb93 f3f2 	sdiv	r3, r3, r2
 8014afe:	e768      	b.n	80149d2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8014b00:	fb9a f2f7 	sdiv	r2, sl, r7
 8014b04:	fb07 a212 	mls	r2, r7, r2, sl
 8014b08:	1aba      	subs	r2, r7, r2
 8014b0a:	fb92 f1f7 	sdiv	r1, r2, r7
 8014b0e:	fb07 2211 	mls	r2, r7, r1, r2
 8014b12:	4492      	add	sl, r2
 8014b14:	e7c7      	b.n	8014aa6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8014b16:	45ab      	cmp	fp, r5
 8014b18:	da23      	bge.n	8014b62 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8014b1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014b1c:	4628      	mov	r0, r5
 8014b1e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8014b22:	920b      	str	r2, [sp, #44]	; 0x2c
 8014b24:	f7ff fc52 	bl	80143cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014b28:	4641      	mov	r1, r8
 8014b2a:	900c      	str	r0, [sp, #48]	; 0x30
 8014b2c:	a80b      	add	r0, sp, #44	; 0x2c
 8014b2e:	f7ff fc21 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014b32:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014b34:	f04f 0a02 	mov.w	sl, #2
 8014b38:	fb90 f0fa 	sdiv	r0, r0, sl
 8014b3c:	4403      	add	r3, r0
 8014b3e:	4628      	mov	r0, r5
 8014b40:	9301      	str	r3, [sp, #4]
 8014b42:	f7ff fc62 	bl	801440a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014b46:	4649      	mov	r1, r9
 8014b48:	900d      	str	r0, [sp, #52]	; 0x34
 8014b4a:	a80b      	add	r0, sp, #44	; 0x2c
 8014b4c:	f7ff fc12 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014b50:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014b52:	9b01      	ldr	r3, [sp, #4]
 8014b54:	fb90 f0fa 	sdiv	r0, r0, sl
 8014b58:	4619      	mov	r1, r3
 8014b5a:	1a12      	subs	r2, r2, r0
 8014b5c:	a80e      	add	r0, sp, #56	; 0x38
 8014b5e:	f015 fdca 	bl	802a6f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014b62:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014b64:	b99b      	cbnz	r3, 8014b8e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8014b66:	1bad      	subs	r5, r5, r6
 8014b68:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8014b6c:	da04      	bge.n	8014b78 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8014b6e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8014b72:	a80e      	add	r0, sp, #56	; 0x38
 8014b74:	f015 fdbf 	bl	802a6f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014b78:	21ff      	movs	r1, #255	; 0xff
 8014b7a:	a80e      	add	r0, sp, #56	; 0x38
 8014b7c:	f015 fcaa 	bl	802a4d4 <_ZN8touchgfx6Canvas6renderEh>
 8014b80:	4604      	mov	r4, r0
 8014b82:	4b8a      	ldr	r3, [pc, #552]	; (8014dac <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8014b84:	930e      	str	r3, [sp, #56]	; 0x38
 8014b86:	a816      	add	r0, sp, #88	; 0x58
 8014b88:	f002 f84e 	bl	8016c28 <_ZN8touchgfx7OutlineD1Ev>
 8014b8c:	e716      	b.n	80149bc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8014b8e:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8014b92:	429a      	cmp	r2, r3
 8014b94:	f0c0 8107 	bcc.w	8014da6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8014b98:	1bab      	subs	r3, r5, r6
 8014b9a:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8014b9e:	9301      	str	r3, [sp, #4]
 8014ba0:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8014ba4:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8014ba8:	da43      	bge.n	8014c32 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8014baa:	4628      	mov	r0, r5
 8014bac:	f7ff fc0e 	bl	80143cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014bb0:	4649      	mov	r1, r9
 8014bb2:	900d      	str	r0, [sp, #52]	; 0x34
 8014bb4:	a809      	add	r0, sp, #36	; 0x24
 8014bb6:	f7ff fbdd 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014bba:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014bbc:	18c3      	adds	r3, r0, r3
 8014bbe:	4628      	mov	r0, r5
 8014bc0:	9303      	str	r3, [sp, #12]
 8014bc2:	f7ff fc22 	bl	801440a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014bc6:	4649      	mov	r1, r9
 8014bc8:	900d      	str	r0, [sp, #52]	; 0x34
 8014bca:	a809      	add	r0, sp, #36	; 0x24
 8014bcc:	f7ff fbd2 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014bd0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014bd2:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8014bd6:	1a1b      	subs	r3, r3, r0
 8014bd8:	9302      	str	r3, [sp, #8]
 8014bda:	9204      	str	r2, [sp, #16]
 8014bdc:	eb0a 0305 	add.w	r3, sl, r5
 8014be0:	9a04      	ldr	r2, [sp, #16]
 8014be2:	4293      	cmp	r3, r2
 8014be4:	da25      	bge.n	8014c32 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8014be6:	4618      	mov	r0, r3
 8014be8:	9306      	str	r3, [sp, #24]
 8014bea:	f7ff fbef 	bl	80143cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014bee:	4649      	mov	r1, r9
 8014bf0:	900d      	str	r0, [sp, #52]	; 0x34
 8014bf2:	a80a      	add	r0, sp, #40	; 0x28
 8014bf4:	f7ff fbbe 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014bf8:	9b03      	ldr	r3, [sp, #12]
 8014bfa:	2202      	movs	r2, #2
 8014bfc:	fb90 f0f2 	sdiv	r0, r0, r2
 8014c00:	18c3      	adds	r3, r0, r3
 8014c02:	9305      	str	r3, [sp, #20]
 8014c04:	9b06      	ldr	r3, [sp, #24]
 8014c06:	9207      	str	r2, [sp, #28]
 8014c08:	4618      	mov	r0, r3
 8014c0a:	f7ff fbfe 	bl	801440a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014c0e:	a92a      	add	r1, sp, #168	; 0xa8
 8014c10:	f841 0d78 	str.w	r0, [r1, #-120]!
 8014c14:	a80a      	add	r0, sp, #40	; 0x28
 8014c16:	f7ff fbad 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014c1a:	9b02      	ldr	r3, [sp, #8]
 8014c1c:	9a07      	ldr	r2, [sp, #28]
 8014c1e:	9905      	ldr	r1, [sp, #20]
 8014c20:	fb90 f2f2 	sdiv	r2, r0, r2
 8014c24:	a80e      	add	r0, sp, #56	; 0x38
 8014c26:	1a9a      	subs	r2, r3, r2
 8014c28:	f015 fd65 	bl	802a6f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014c2c:	9b06      	ldr	r3, [sp, #24]
 8014c2e:	4453      	add	r3, sl
 8014c30:	e7d6      	b.n	8014be0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8014c32:	45ab      	cmp	fp, r5
 8014c34:	da25      	bge.n	8014c82 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8014c36:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8014c3a:	4628      	mov	r0, r5
 8014c3c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8014c40:	930b      	str	r3, [sp, #44]	; 0x2c
 8014c42:	f7ff fbc3 	bl	80143cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014c46:	4641      	mov	r1, r8
 8014c48:	900c      	str	r0, [sp, #48]	; 0x30
 8014c4a:	a80b      	add	r0, sp, #44	; 0x2c
 8014c4c:	f7ff fb92 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014c50:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014c52:	2202      	movs	r2, #2
 8014c54:	fb90 f0f2 	sdiv	r0, r0, r2
 8014c58:	eb00 0903 	add.w	r9, r0, r3
 8014c5c:	4628      	mov	r0, r5
 8014c5e:	9202      	str	r2, [sp, #8]
 8014c60:	f7ff fbd3 	bl	801440a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014c64:	a92a      	add	r1, sp, #168	; 0xa8
 8014c66:	f841 0d74 	str.w	r0, [r1, #-116]!
 8014c6a:	a80b      	add	r0, sp, #44	; 0x2c
 8014c6c:	f7ff fb82 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014c70:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014c72:	9a02      	ldr	r2, [sp, #8]
 8014c74:	fb90 f2f2 	sdiv	r2, r0, r2
 8014c78:	4649      	mov	r1, r9
 8014c7a:	1a9a      	subs	r2, r3, r2
 8014c7c:	a80e      	add	r0, sp, #56	; 0x38
 8014c7e:	f015 fd3a 	bl	802a6f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014c82:	46d9      	mov	r9, fp
 8014c84:	2502      	movs	r5, #2
 8014c86:	45b1      	cmp	r9, r6
 8014c88:	db25      	blt.n	8014cd6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8014c8a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8014c8e:	4648      	mov	r0, r9
 8014c90:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8014c94:	930b      	str	r3, [sp, #44]	; 0x2c
 8014c96:	f7ff fb99 	bl	80143cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014c9a:	4641      	mov	r1, r8
 8014c9c:	900c      	str	r0, [sp, #48]	; 0x30
 8014c9e:	a80b      	add	r0, sp, #44	; 0x2c
 8014ca0:	f7ff fb68 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014ca4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014ca6:	fb90 f0f5 	sdiv	r0, r0, r5
 8014caa:	eb00 0b03 	add.w	fp, r0, r3
 8014cae:	4648      	mov	r0, r9
 8014cb0:	f7ff fbab 	bl	801440a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014cb4:	a90d      	add	r1, sp, #52	; 0x34
 8014cb6:	900d      	str	r0, [sp, #52]	; 0x34
 8014cb8:	a80b      	add	r0, sp, #44	; 0x2c
 8014cba:	f7ff fb5b 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014cbe:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014cc0:	fb90 f0f5 	sdiv	r0, r0, r5
 8014cc4:	4659      	mov	r1, fp
 8014cc6:	1a12      	subs	r2, r2, r0
 8014cc8:	a80e      	add	r0, sp, #56	; 0x38
 8014cca:	46cb      	mov	fp, r9
 8014ccc:	f015 fd13 	bl	802a6f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014cd0:	eba9 0907 	sub.w	r9, r9, r7
 8014cd4:	e7d7      	b.n	8014c86 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8014cd6:	455e      	cmp	r6, fp
 8014cd8:	da22      	bge.n	8014d20 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8014cda:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8014cde:	4630      	mov	r0, r6
 8014ce0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8014ce4:	930b      	str	r3, [sp, #44]	; 0x2c
 8014ce6:	f7ff fb71 	bl	80143cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014cea:	4641      	mov	r1, r8
 8014cec:	900c      	str	r0, [sp, #48]	; 0x30
 8014cee:	a80b      	add	r0, sp, #44	; 0x2c
 8014cf0:	f7ff fb40 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014cf4:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8014cf6:	2502      	movs	r5, #2
 8014cf8:	fb90 f0f5 	sdiv	r0, r0, r5
 8014cfc:	4407      	add	r7, r0
 8014cfe:	4630      	mov	r0, r6
 8014d00:	f7ff fb83 	bl	801440a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014d04:	a92a      	add	r1, sp, #168	; 0xa8
 8014d06:	f841 0d74 	str.w	r0, [r1, #-116]!
 8014d0a:	a80b      	add	r0, sp, #44	; 0x2c
 8014d0c:	f7ff fb32 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014d10:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014d12:	fb90 f0f5 	sdiv	r0, r0, r5
 8014d16:	4639      	mov	r1, r7
 8014d18:	1a12      	subs	r2, r2, r0
 8014d1a:	a80e      	add	r0, sp, #56	; 0x38
 8014d1c:	f015 fceb 	bl	802a6f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014d20:	9b01      	ldr	r3, [sp, #4]
 8014d22:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8014d26:	f6bf af27 	bge.w	8014b78 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8014d2a:	4630      	mov	r0, r6
 8014d2c:	f7ff fb4e 	bl	80143cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014d30:	ad2a      	add	r5, sp, #168	; 0xa8
 8014d32:	f04f 0b02 	mov.w	fp, #2
 8014d36:	f845 0d74 	str.w	r0, [r5, #-116]!
 8014d3a:	a809      	add	r0, sp, #36	; 0x24
 8014d3c:	4629      	mov	r1, r5
 8014d3e:	f7ff fb19 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014d42:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014d44:	eb00 0903 	add.w	r9, r0, r3
 8014d48:	4630      	mov	r0, r6
 8014d4a:	f7ff fb5e 	bl	801440a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014d4e:	4629      	mov	r1, r5
 8014d50:	900d      	str	r0, [sp, #52]	; 0x34
 8014d52:	a809      	add	r0, sp, #36	; 0x24
 8014d54:	f7ff fb0e 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014d58:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014d5a:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8014d5e:	eba3 0800 	sub.w	r8, r3, r0
 8014d62:	4454      	add	r4, sl
 8014d64:	42a6      	cmp	r6, r4
 8014d66:	f77f af07 	ble.w	8014b78 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8014d6a:	4620      	mov	r0, r4
 8014d6c:	f7ff fb2e 	bl	80143cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014d70:	4629      	mov	r1, r5
 8014d72:	900d      	str	r0, [sp, #52]	; 0x34
 8014d74:	a80a      	add	r0, sp, #40	; 0x28
 8014d76:	f7ff fafd 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014d7a:	fb90 f0fb 	sdiv	r0, r0, fp
 8014d7e:	eb00 0709 	add.w	r7, r0, r9
 8014d82:	4620      	mov	r0, r4
 8014d84:	f7ff fb41 	bl	801440a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014d88:	a90c      	add	r1, sp, #48	; 0x30
 8014d8a:	900c      	str	r0, [sp, #48]	; 0x30
 8014d8c:	a80a      	add	r0, sp, #40	; 0x28
 8014d8e:	f7ff faf1 	bl	8014374 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014d92:	4639      	mov	r1, r7
 8014d94:	fb90 f2fb 	sdiv	r2, r0, fp
 8014d98:	a80e      	add	r0, sp, #56	; 0x38
 8014d9a:	eba8 0202 	sub.w	r2, r8, r2
 8014d9e:	f015 fcaa 	bl	802a6f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014da2:	4454      	add	r4, sl
 8014da4:	e7de      	b.n	8014d64 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8014da6:	2400      	movs	r4, #0
 8014da8:	e6eb      	b.n	8014b82 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8014daa:	bf00      	nop
 8014dac:	0802fe4c 	.word	0x0802fe4c

08014db0 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
 8014db0:	b510      	push	{r4, lr}
 8014db2:	2200      	movs	r2, #0
 8014db4:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8014db8:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8014dbc:	8002      	strh	r2, [r0, #0]
 8014dbe:	8042      	strh	r2, [r0, #2]
 8014dc0:	8084      	strh	r4, [r0, #4]
 8014dc2:	80c1      	strh	r1, [r0, #6]
 8014dc4:	bd10      	pop	{r4, pc}
	...

08014dc8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8014dc8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8014dca:	6803      	ldr	r3, [r0, #0]
 8014dcc:	460d      	mov	r5, r1
 8014dce:	4604      	mov	r4, r0
 8014dd0:	4601      	mov	r1, r0
 8014dd2:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014dd4:	a802      	add	r0, sp, #8
 8014dd6:	4798      	blx	r3
 8014dd8:	6828      	ldr	r0, [r5, #0]
 8014dda:	6869      	ldr	r1, [r5, #4]
 8014ddc:	466b      	mov	r3, sp
 8014dde:	c303      	stmia	r3!, {r0, r1}
 8014de0:	4668      	mov	r0, sp
 8014de2:	4619      	mov	r1, r3
 8014de4:	f7fe faa4 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 8014de8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8014dea:	b188      	cbz	r0, 8014e10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014dec:	6803      	ldr	r3, [r0, #0]
 8014dee:	1d21      	adds	r1, r4, #4
 8014df0:	68db      	ldr	r3, [r3, #12]
 8014df2:	4798      	blx	r3
 8014df4:	b160      	cbz	r0, 8014e10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014df6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8014dfa:	2b00      	cmp	r3, #0
 8014dfc:	dd08      	ble.n	8014e10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014dfe:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8014e02:	2d00      	cmp	r5, #0
 8014e04:	dd04      	ble.n	8014e10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014e06:	4a2b      	ldr	r2, [pc, #172]	; (8014eb4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8014e08:	7812      	ldrb	r2, [r2, #0]
 8014e0a:	b11a      	cbz	r2, 8014e14 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8014e0c:	2a01      	cmp	r2, #1
 8014e0e:	d029      	beq.n	8014e64 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8014e10:	b004      	add	sp, #16
 8014e12:	bd70      	pop	{r4, r5, r6, pc}
 8014e14:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8014e18:	441d      	add	r5, r3
 8014e1a:	b2ad      	uxth	r5, r5
 8014e1c:	b22e      	sxth	r6, r5
 8014e1e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8014e22:	42b3      	cmp	r3, r6
 8014e24:	daf4      	bge.n	8014e10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014e26:	6823      	ldr	r3, [r4, #0]
 8014e28:	4669      	mov	r1, sp
 8014e2a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014e2c:	4620      	mov	r0, r4
 8014e2e:	4798      	blx	r3
 8014e30:	b940      	cbnz	r0, 8014e44 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8014e32:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8014e36:	2b01      	cmp	r3, #1
 8014e38:	d004      	beq.n	8014e44 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8014e3a:	3301      	adds	r3, #1
 8014e3c:	105b      	asrs	r3, r3, #1
 8014e3e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014e42:	e7f0      	b.n	8014e26 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8014e44:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8014e48:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8014e4c:	4413      	add	r3, r2
 8014e4e:	b29b      	uxth	r3, r3
 8014e50:	441a      	add	r2, r3
 8014e52:	b212      	sxth	r2, r2
 8014e54:	4296      	cmp	r6, r2
 8014e56:	f8ad 3002 	strh.w	r3, [sp, #2]
 8014e5a:	dae0      	bge.n	8014e1e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8014e5c:	1aeb      	subs	r3, r5, r3
 8014e5e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014e62:	e7dc      	b.n	8014e1e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8014e64:	f8bd 5000 	ldrh.w	r5, [sp]
 8014e68:	441d      	add	r5, r3
 8014e6a:	b2ad      	uxth	r5, r5
 8014e6c:	b22e      	sxth	r6, r5
 8014e6e:	f9bd 3000 	ldrsh.w	r3, [sp]
 8014e72:	42b3      	cmp	r3, r6
 8014e74:	dacc      	bge.n	8014e10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014e76:	6823      	ldr	r3, [r4, #0]
 8014e78:	4669      	mov	r1, sp
 8014e7a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014e7c:	4620      	mov	r0, r4
 8014e7e:	4798      	blx	r3
 8014e80:	b940      	cbnz	r0, 8014e94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8014e82:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8014e86:	2b01      	cmp	r3, #1
 8014e88:	d004      	beq.n	8014e94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8014e8a:	3301      	adds	r3, #1
 8014e8c:	105b      	asrs	r3, r3, #1
 8014e8e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8014e92:	e7f0      	b.n	8014e76 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8014e94:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8014e98:	f8bd 3000 	ldrh.w	r3, [sp]
 8014e9c:	4413      	add	r3, r2
 8014e9e:	b29b      	uxth	r3, r3
 8014ea0:	441a      	add	r2, r3
 8014ea2:	b212      	sxth	r2, r2
 8014ea4:	4296      	cmp	r6, r2
 8014ea6:	f8ad 3000 	strh.w	r3, [sp]
 8014eaa:	dae0      	bge.n	8014e6e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8014eac:	1aeb      	subs	r3, r5, r3
 8014eae:	f8ad 3004 	strh.w	r3, [sp, #4]
 8014eb2:	e7dc      	b.n	8014e6e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8014eb4:	20002244 	.word	0x20002244

08014eb8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8014eb8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8014eba:	6803      	ldr	r3, [r0, #0]
 8014ebc:	4604      	mov	r4, r0
 8014ebe:	4601      	mov	r1, r0
 8014ec0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014ec2:	4668      	mov	r0, sp
 8014ec4:	4798      	blx	r3
 8014ec6:	2100      	movs	r1, #0
 8014ec8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8014ecc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8014ed0:	9102      	str	r1, [sp, #8]
 8014ed2:	4668      	mov	r0, sp
 8014ed4:	a902      	add	r1, sp, #8
 8014ed6:	f8ad 200c 	strh.w	r2, [sp, #12]
 8014eda:	f8ad 300e 	strh.w	r3, [sp, #14]
 8014ede:	f7fe fa27 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 8014ee2:	6823      	ldr	r3, [r4, #0]
 8014ee4:	4669      	mov	r1, sp
 8014ee6:	691b      	ldr	r3, [r3, #16]
 8014ee8:	4620      	mov	r0, r4
 8014eea:	4798      	blx	r3
 8014eec:	b004      	add	sp, #16
 8014eee:	bd10      	pop	{r4, pc}

08014ef0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8014ef0:	2101      	movs	r1, #1
 8014ef2:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8014ef6:	490b      	ldr	r1, [pc, #44]	; (8014f24 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8014ef8:	6001      	str	r1, [r0, #0]
 8014efa:	2200      	movs	r2, #0
 8014efc:	21ff      	movs	r1, #255	; 0xff
 8014efe:	8082      	strh	r2, [r0, #4]
 8014f00:	80c2      	strh	r2, [r0, #6]
 8014f02:	8102      	strh	r2, [r0, #8]
 8014f04:	8142      	strh	r2, [r0, #10]
 8014f06:	8182      	strh	r2, [r0, #12]
 8014f08:	81c2      	strh	r2, [r0, #14]
 8014f0a:	8202      	strh	r2, [r0, #16]
 8014f0c:	8242      	strh	r2, [r0, #18]
 8014f0e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8014f12:	61c2      	str	r2, [r0, #28]
 8014f14:	8402      	strh	r2, [r0, #32]
 8014f16:	8442      	strh	r2, [r0, #34]	; 0x22
 8014f18:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8014f1c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8014f20:	6282      	str	r2, [r0, #40]	; 0x28
 8014f22:	4770      	bx	lr
 8014f24:	0802f2e0 	.word	0x0802f2e0

08014f28 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8014f28:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8014f2c:	4770      	bx	lr

08014f2e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8014f2e:	b510      	push	{r4, lr}
 8014f30:	4604      	mov	r4, r0
 8014f32:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8014f34:	b150      	cbz	r0, 8014f4c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8014f36:	6803      	ldr	r3, [r0, #0]
 8014f38:	68db      	ldr	r3, [r3, #12]
 8014f3a:	4798      	blx	r3
 8014f3c:	b130      	cbz	r0, 8014f4c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8014f3e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8014f40:	6803      	ldr	r3, [r0, #0]
 8014f42:	4621      	mov	r1, r4
 8014f44:	689b      	ldr	r3, [r3, #8]
 8014f46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014f4a:	4718      	bx	r3
 8014f4c:	bd10      	pop	{r4, pc}

08014f4e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8014f4e:	b570      	push	{r4, r5, r6, lr}
 8014f50:	790b      	ldrb	r3, [r1, #4]
 8014f52:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8014f56:	2b00      	cmp	r3, #0
 8014f58:	bf0c      	ite	eq
 8014f5a:	2301      	moveq	r3, #1
 8014f5c:	2300      	movne	r3, #0
 8014f5e:	4604      	mov	r4, r0
 8014f60:	460e      	mov	r6, r1
 8014f62:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8014f66:	d109      	bne.n	8014f7c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8014f68:	b14d      	cbz	r5, 8014f7e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8014f6a:	7933      	ldrb	r3, [r6, #4]
 8014f6c:	2b01      	cmp	r3, #1
 8014f6e:	d10c      	bne.n	8014f8a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8014f70:	6823      	ldr	r3, [r4, #0]
 8014f72:	4620      	mov	r0, r4
 8014f74:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8014f76:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014f7a:	4718      	bx	r3
 8014f7c:	b12d      	cbz	r5, 8014f8a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8014f7e:	6823      	ldr	r3, [r4, #0]
 8014f80:	4620      	mov	r0, r4
 8014f82:	695b      	ldr	r3, [r3, #20]
 8014f84:	4798      	blx	r3
 8014f86:	2d00      	cmp	r5, #0
 8014f88:	d1ef      	bne.n	8014f6a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8014f8a:	bd70      	pop	{r4, r5, r6, pc}

08014f8c <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8014f8c:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8014f90:	4770      	bx	lr

08014f92 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8014f92:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8014f96:	4770      	bx	lr

08014f98 <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8014f98:	6802      	ldr	r2, [r0, #0]
 8014f9a:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8014f9e:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8014fa0:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8014fa4:	4710      	bx	r2

08014fa6 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8014fa6:	6802      	ldr	r2, [r0, #0]
 8014fa8:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8014fac:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8014fae:	eef0 0a40 	vmov.f32	s1, s0
 8014fb2:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8014fb6:	4710      	bx	r2

08014fb8 <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8014fb8:	6802      	ldr	r2, [r0, #0]
 8014fba:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8014fbe:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8014fc0:	eeb0 1a40 	vmov.f32	s2, s0
 8014fc4:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8014fc8:	4710      	bx	r2

08014fca <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8014fca:	6802      	ldr	r2, [r0, #0]
 8014fcc:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8014fd0:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8014fd2:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8014fd6:	4710      	bx	r2

08014fd8 <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8014fd8:	6802      	ldr	r2, [r0, #0]
 8014fda:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8014fde:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8014fe0:	eef0 0a40 	vmov.f32	s1, s0
 8014fe4:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8014fe8:	4710      	bx	r2

08014fea <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8014fea:	6802      	ldr	r2, [r0, #0]
 8014fec:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8014ff0:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8014ff2:	eeb0 1a40 	vmov.f32	s2, s0
 8014ff6:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8014ffa:	4710      	bx	r2

08014ffc <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8014ffc:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8015000:	4770      	bx	lr

08015002 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8015002:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8015006:	4770      	bx	lr

08015008 <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8015008:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 801500c:	4770      	bx	lr

0801500e <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 801500e:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8015012:	4770      	bx	lr

08015014 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8015014:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8015018:	4770      	bx	lr

0801501a <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 801501a:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 801501e:	4770      	bx	lr

08015020 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8015020:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8015024:	4770      	bx	lr

08015026 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8015026:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 801502a:	4770      	bx	lr

0801502c <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 801502c:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8015030:	4770      	bx	lr

08015032 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8015032:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8015036:	4770      	bx	lr

08015038 <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8015038:	ee07 2a90 	vmov	s15, r2
 801503c:	6803      	ldr	r3, [r0, #0]
 801503e:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8015042:	ee07 1a90 	vmov	s15, r1
 8015046:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 801504a:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 801504e:	4718      	bx	r3

08015050 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8015050:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8015054:	4770      	bx	lr

08015056 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8015056:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 801505a:	4770      	bx	lr

0801505c <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 801505c:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8015060:	4770      	bx	lr

08015062 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8015062:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8015066:	4770      	bx	lr

08015068 <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8015068:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 801506c:	4770      	bx	lr

0801506e <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 801506e:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8015072:	4770      	bx	lr

08015074 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8015074:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8015078:	4770      	bx	lr

0801507a <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 801507a:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 801507e:	4770      	bx	lr

08015080 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8015080:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8015084:	4770      	bx	lr

08015086 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8015086:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 801508a:	4770      	bx	lr

0801508c <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 801508c:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8015090:	4770      	bx	lr

08015092 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8015092:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8015096:	4770      	bx	lr

08015098 <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8015098:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 801509c:	4770      	bx	lr

0801509e <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 801509e:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 80150a2:	4770      	bx	lr

080150a4 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 80150a4:	b510      	push	{r4, lr}
 80150a6:	ed2d 8b04 	vpush	{d8-d9}
 80150aa:	6803      	ldr	r3, [r0, #0]
 80150ac:	4604      	mov	r4, r0
 80150ae:	699b      	ldr	r3, [r3, #24]
 80150b0:	eeb0 8a40 	vmov.f32	s16, s0
 80150b4:	eef0 8a60 	vmov.f32	s17, s1
 80150b8:	eeb0 9a41 	vmov.f32	s18, s2
 80150bc:	4798      	blx	r3
 80150be:	6823      	ldr	r3, [r4, #0]
 80150c0:	4620      	mov	r0, r4
 80150c2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80150c4:	eeb0 1a49 	vmov.f32	s2, s18
 80150c8:	eef0 0a68 	vmov.f32	s1, s17
 80150cc:	eeb0 0a48 	vmov.f32	s0, s16
 80150d0:	4798      	blx	r3
 80150d2:	ecbd 8b04 	vpop	{d8-d9}
 80150d6:	6823      	ldr	r3, [r4, #0]
 80150d8:	4620      	mov	r0, r4
 80150da:	699b      	ldr	r3, [r3, #24]
 80150dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80150e0:	4718      	bx	r3

080150e2 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 80150e2:	b510      	push	{r4, lr}
 80150e4:	ed2d 8b02 	vpush	{d8}
 80150e8:	6803      	ldr	r3, [r0, #0]
 80150ea:	4604      	mov	r4, r0
 80150ec:	699b      	ldr	r3, [r3, #24]
 80150ee:	eeb0 8a40 	vmov.f32	s16, s0
 80150f2:	4798      	blx	r3
 80150f4:	6823      	ldr	r3, [r4, #0]
 80150f6:	4620      	mov	r0, r4
 80150f8:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80150fc:	eeb0 0a48 	vmov.f32	s0, s16
 8015100:	4798      	blx	r3
 8015102:	ecbd 8b02 	vpop	{d8}
 8015106:	6823      	ldr	r3, [r4, #0]
 8015108:	4620      	mov	r0, r4
 801510a:	699b      	ldr	r3, [r3, #24]
 801510c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015110:	4718      	bx	r3

08015112 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8015112:	2200      	movs	r2, #0
 8015114:	8002      	strh	r2, [r0, #0]
 8015116:	8042      	strh	r2, [r0, #2]
 8015118:	8082      	strh	r2, [r0, #4]
 801511a:	80c2      	strh	r2, [r0, #6]
 801511c:	4770      	bx	lr
	...

08015120 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8015120:	b538      	push	{r3, r4, r5, lr}
 8015122:	2500      	movs	r5, #0
 8015124:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8015128:	2301      	movs	r3, #1
 801512a:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 801512e:	4b1f      	ldr	r3, [pc, #124]	; (80151ac <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8015130:	8085      	strh	r5, [r0, #4]
 8015132:	80c5      	strh	r5, [r0, #6]
 8015134:	8105      	strh	r5, [r0, #8]
 8015136:	8145      	strh	r5, [r0, #10]
 8015138:	8185      	strh	r5, [r0, #12]
 801513a:	81c5      	strh	r5, [r0, #14]
 801513c:	8205      	strh	r5, [r0, #16]
 801513e:	8245      	strh	r5, [r0, #18]
 8015140:	61c5      	str	r5, [r0, #28]
 8015142:	8405      	strh	r5, [r0, #32]
 8015144:	8445      	strh	r5, [r0, #34]	; 0x22
 8015146:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 801514a:	6003      	str	r3, [r0, #0]
 801514c:	880b      	ldrh	r3, [r1, #0]
 801514e:	84c3      	strh	r3, [r0, #38]	; 0x26
 8015150:	23ff      	movs	r3, #255	; 0xff
 8015152:	4604      	mov	r4, r0
 8015154:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8015158:	f001 fcf0 	bl	8016b3c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801515c:	4b14      	ldr	r3, [pc, #80]	; (80151b0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 801515e:	6023      	str	r3, [r4, #0]
 8015160:	2300      	movs	r3, #0
 8015162:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8015166:	4913      	ldr	r1, [pc, #76]	; (80151b4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8015168:	62e3      	str	r3, [r4, #44]	; 0x2c
 801516a:	6323      	str	r3, [r4, #48]	; 0x30
 801516c:	6363      	str	r3, [r4, #52]	; 0x34
 801516e:	63a3      	str	r3, [r4, #56]	; 0x38
 8015170:	63e3      	str	r3, [r4, #60]	; 0x3c
 8015172:	6463      	str	r3, [r4, #68]	; 0x44
 8015174:	64a3      	str	r3, [r4, #72]	; 0x48
 8015176:	6523      	str	r3, [r4, #80]	; 0x50
 8015178:	6563      	str	r3, [r4, #84]	; 0x54
 801517a:	65e3      	str	r3, [r4, #92]	; 0x5c
 801517c:	6623      	str	r3, [r4, #96]	; 0x60
 801517e:	66a3      	str	r3, [r4, #104]	; 0x68
 8015180:	66e3      	str	r3, [r4, #108]	; 0x6c
 8015182:	6763      	str	r3, [r4, #116]	; 0x74
 8015184:	67a3      	str	r3, [r4, #120]	; 0x78
 8015186:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 801518a:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 801518e:	230c      	movs	r3, #12
 8015190:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8015194:	6422      	str	r2, [r4, #64]	; 0x40
 8015196:	64e1      	str	r1, [r4, #76]	; 0x4c
 8015198:	65a1      	str	r1, [r4, #88]	; 0x58
 801519a:	6662      	str	r2, [r4, #100]	; 0x64
 801519c:	6722      	str	r2, [r4, #112]	; 0x70
 801519e:	67e2      	str	r2, [r4, #124]	; 0x7c
 80151a0:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 80151a4:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 80151a8:	4620      	mov	r0, r4
 80151aa:	bd38      	pop	{r3, r4, r5, pc}
 80151ac:	0802f910 	.word	0x0802f910
 80151b0:	0802f3c8 	.word	0x0802f3c8
 80151b4:	447a0000 	.word	0x447a0000

080151b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 80151b8:	b570      	push	{r4, r5, r6, lr}
 80151ba:	ed2d 8b04 	vpush	{d8-d9}
 80151be:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 80151c2:	add0      	add	r5, sp, #832	; 0x340
 80151c4:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 80151c6:	f825 3d40 	strh.w	r3, [r5, #-64]!
 80151ca:	4604      	mov	r4, r0
 80151cc:	4628      	mov	r0, r5
 80151ce:	f007 fbab 	bl	801c928 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80151d2:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 80151d4:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 80151d8:	4606      	mov	r6, r0
 80151da:	4628      	mov	r0, r5
 80151dc:	f007 fbd8 	bl	801c990 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80151e0:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80151e4:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 80151e8:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80151ea:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 80151ee:	9312      	str	r3, [sp, #72]	; 0x48
 80151f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80151f4:	1c72      	adds	r2, r6, #1
 80151f6:	3001      	adds	r0, #1
 80151f8:	ee76 5ac7 	vsub.f32	s11, s13, s14
 80151fc:	ee07 2a90 	vmov	s15, r2
 8015200:	ee06 0a90 	vmov	s13, r0
 8015204:	ee36 6a47 	vsub.f32	s12, s12, s14
 8015208:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801520c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8015210:	ee77 7a86 	vadd.f32	s15, s15, s12
 8015214:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8015218:	9316      	str	r3, [sp, #88]	; 0x58
 801521a:	931a      	str	r3, [sp, #104]	; 0x68
 801521c:	931e      	str	r3, [sp, #120]	; 0x78
 801521e:	2300      	movs	r3, #0
 8015220:	9320      	str	r3, [sp, #128]	; 0x80
 8015222:	9321      	str	r3, [sp, #132]	; 0x84
 8015224:	9322      	str	r3, [sp, #136]	; 0x88
 8015226:	9324      	str	r3, [sp, #144]	; 0x90
 8015228:	9325      	str	r3, [sp, #148]	; 0x94
 801522a:	9326      	str	r3, [sp, #152]	; 0x98
 801522c:	9328      	str	r3, [sp, #160]	; 0xa0
 801522e:	9329      	str	r3, [sp, #164]	; 0xa4
 8015230:	932a      	str	r3, [sp, #168]	; 0xa8
 8015232:	932c      	str	r3, [sp, #176]	; 0xb0
 8015234:	932d      	str	r3, [sp, #180]	; 0xb4
 8015236:	932e      	str	r3, [sp, #184]	; 0xb8
 8015238:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801523c:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8015240:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8015244:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8015248:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 801524c:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8015250:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8015254:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8015258:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 801525c:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8015260:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8015264:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8015268:	a830      	add	r0, sp, #192	; 0xc0
 801526a:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 801526e:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8015272:	f006 fbef 	bl	801ba54 <_ZN8touchgfx9Matrix4x4C1Ev>
 8015276:	eeb1 0a49 	vneg.f32	s0, s18
 801527a:	a830      	add	r0, sp, #192	; 0xc0
 801527c:	f006 fcbe 	bl	801bbfc <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8015280:	eeb1 0a68 	vneg.f32	s0, s17
 8015284:	f006 fcc8 	bl	801bc18 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8015288:	eeb1 0a48 	vneg.f32	s0, s16
 801528c:	f006 fcd3 	bl	801bc36 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8015290:	a840      	add	r0, sp, #256	; 0x100
 8015292:	f006 fbdf 	bl	801ba54 <_ZN8touchgfx9Matrix4x4C1Ev>
 8015296:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 801529a:	a840      	add	r0, sp, #256	; 0x100
 801529c:	f006 fc32 	bl	801bb04 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 80152a0:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 80152a4:	f006 fc58 	bl	801bb58 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 80152a8:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 80152ac:	f006 fc7d 	bl	801bbaa <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 80152b0:	a850      	add	r0, sp, #320	; 0x140
 80152b2:	f006 fbcf 	bl	801ba54 <_ZN8touchgfx9Matrix4x4C1Ev>
 80152b6:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80152ba:	a850      	add	r0, sp, #320	; 0x140
 80152bc:	f006 fcca 	bl	801bc54 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 80152c0:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80152c4:	f006 fcd2 	bl	801bc6c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 80152c8:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80152cc:	f006 fcdb 	bl	801bc86 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 80152d0:	a860      	add	r0, sp, #384	; 0x180
 80152d2:	f006 fbbf 	bl	801ba54 <_ZN8touchgfx9Matrix4x4C1Ev>
 80152d6:	eeb0 0a49 	vmov.f32	s0, s18
 80152da:	a860      	add	r0, sp, #384	; 0x180
 80152dc:	f006 fc8e 	bl	801bbfc <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80152e0:	eeb0 0a68 	vmov.f32	s0, s17
 80152e4:	f006 fc98 	bl	801bc18 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80152e8:	eeb0 0a48 	vmov.f32	s0, s16
 80152ec:	f006 fca3 	bl	801bc36 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 80152f0:	aa50      	add	r2, sp, #320	; 0x140
 80152f2:	a960      	add	r1, sp, #384	; 0x180
 80152f4:	a8b0      	add	r0, sp, #704	; 0x2c0
 80152f6:	f006 fbc7 	bl	801ba88 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80152fa:	4628      	mov	r0, r5
 80152fc:	aa40      	add	r2, sp, #256	; 0x100
 80152fe:	a9b0      	add	r1, sp, #704	; 0x2c0
 8015300:	f006 fbc2 	bl	801ba88 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8015304:	4629      	mov	r1, r5
 8015306:	aa30      	add	r2, sp, #192	; 0xc0
 8015308:	a870      	add	r0, sp, #448	; 0x1c0
 801530a:	f006 fbbd 	bl	801ba88 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801530e:	a880      	add	r0, sp, #512	; 0x200
 8015310:	f006 fba0 	bl	801ba54 <_ZN8touchgfx9Matrix4x4C1Ev>
 8015314:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8015318:	a880      	add	r0, sp, #512	; 0x200
 801531a:	eeb1 0a40 	vneg.f32	s0, s0
 801531e:	f006 fc6d 	bl	801bbfc <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8015322:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8015326:	a880      	add	r0, sp, #512	; 0x200
 8015328:	eeb1 0a40 	vneg.f32	s0, s0
 801532c:	f006 fc74 	bl	801bc18 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8015330:	a890      	add	r0, sp, #576	; 0x240
 8015332:	f006 fb8f 	bl	801ba54 <_ZN8touchgfx9Matrix4x4C1Ev>
 8015336:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 801533a:	a890      	add	r0, sp, #576	; 0x240
 801533c:	f006 fbd2 	bl	801bae4 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8015340:	a8a0      	add	r0, sp, #640	; 0x280
 8015342:	f006 fb87 	bl	801ba54 <_ZN8touchgfx9Matrix4x4C1Ev>
 8015346:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 801534a:	a8a0      	add	r0, sp, #640	; 0x280
 801534c:	f006 fc56 	bl	801bbfc <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8015350:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8015354:	f006 fc60 	bl	801bc18 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8015358:	aa90      	add	r2, sp, #576	; 0x240
 801535a:	a9a0      	add	r1, sp, #640	; 0x280
 801535c:	a8b0      	add	r0, sp, #704	; 0x2c0
 801535e:	f006 fb93 	bl	801ba88 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8015362:	4628      	mov	r0, r5
 8015364:	aa80      	add	r2, sp, #512	; 0x200
 8015366:	a9b0      	add	r1, sp, #704	; 0x2c0
 8015368:	f006 fb8e 	bl	801ba88 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801536c:	4629      	mov	r1, r5
 801536e:	aa70      	add	r2, sp, #448	; 0x1c0
 8015370:	4668      	mov	r0, sp
 8015372:	466d      	mov	r5, sp
 8015374:	f006 fb88 	bl	801ba88 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8015378:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801537a:	ae70      	add	r6, sp, #448	; 0x1c0
 801537c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 801537e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8015380:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8015382:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8015384:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8015386:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 801538a:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 801538e:	2500      	movs	r5, #0
 8015390:	0129      	lsls	r1, r5, #4
 8015392:	ab20      	add	r3, sp, #128	; 0x80
 8015394:	185e      	adds	r6, r3, r1
 8015396:	ab10      	add	r3, sp, #64	; 0x40
 8015398:	4419      	add	r1, r3
 801539a:	a870      	add	r0, sp, #448	; 0x1c0
 801539c:	f006 fb2a 	bl	801b9f4 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 80153a0:	3501      	adds	r5, #1
 80153a2:	2d04      	cmp	r5, #4
 80153a4:	ed86 0a00 	vstr	s0, [r6]
 80153a8:	edc6 0a01 	vstr	s1, [r6, #4]
 80153ac:	ed86 1a02 	vstr	s2, [r6, #8]
 80153b0:	edc6 1a03 	vstr	s3, [r6, #12]
 80153b4:	d1ec      	bne.n	8015390 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 80153b6:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 80153ba:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 80153be:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 80153c2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80153c6:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 80153ca:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80153ce:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 80153d2:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 80153d6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80153da:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80153de:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 80153e2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80153e6:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 80153ea:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80153ee:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 80153f2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80153f6:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 80153fa:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 80153fe:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8015402:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8015406:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 801540a:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 801540e:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8015412:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8015416:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 801541a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801541e:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8015422:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 8015426:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801542a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801542e:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8015432:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8015436:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 801543a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801543e:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8015442:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8015446:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 801544a:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 801544e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8015452:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8015456:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 801545a:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 801545e:	ecbd 8b04 	vpop	{d8-d9}
 8015462:	bd70      	pop	{r4, r5, r6, pc}

08015464 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8015464:	b510      	push	{r4, lr}
 8015466:	4604      	mov	r4, r0
 8015468:	f001 fb68 	bl	8016b3c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801546c:	4620      	mov	r0, r4
 801546e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015472:	f7ff bea1 	b.w	80151b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08015476 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8015476:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 801547a:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 801547e:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8015482:	f7ff be99 	b.w	80151b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08015486 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8015486:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 801548a:	f7ff be95 	b.w	80151b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801548e <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 801548e:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8015492:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8015496:	f7ff be8f 	b.w	80151b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801549a <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 801549a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801549e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80154a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80154a6:	bfd8      	it	le
 80154a8:	eeb0 0a67 	vmovle.f32	s0, s15
 80154ac:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 80154b0:	f7ff be82 	b.w	80151b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080154b4 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 80154b4:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 80154b8:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 80154bc:	f7ff be7c 	b.w	80151b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080154c0 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 80154c0:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80154c4:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80154c8:	f7ff be76 	b.w	80151b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080154cc <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 80154cc:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80154d0:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80154d4:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 80154d8:	f7ff be6e 	b.w	80151b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080154dc <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 80154dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80154e0:	ed2d 8b04 	vpush	{d8-d9}
 80154e4:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 80154e8:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 80154ec:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 80154f0:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 80154f4:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80154f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80154fc:	bf54      	ite	pl
 80154fe:	eeb0 0a69 	vmovpl.f32	s0, s19
 8015502:	eeb0 0a48 	vmovmi.f32	s0, s16
 8015506:	eeb4 9ac0 	vcmpe.f32	s18, s0
 801550a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801550e:	bfd8      	it	le
 8015510:	eeb0 0a49 	vmovle.f32	s0, s18
 8015514:	eef4 8ac0 	vcmpe.f32	s17, s0
 8015518:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801551c:	bfd8      	it	le
 801551e:	eeb0 0a68 	vmovle.f32	s0, s17
 8015522:	460c      	mov	r4, r1
 8015524:	4607      	mov	r7, r0
 8015526:	f015 fa4f 	bl	802a9c8 <floorf>
 801552a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801552e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015532:	bf58      	it	pl
 8015534:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8015538:	eeb4 8ae9 	vcmpe.f32	s16, s19
 801553c:	bf56      	itet	pl
 801553e:	ee10 3a10 	vmovpl	r3, s0
 8015542:	2600      	movmi	r6, #0
 8015544:	b21e      	sxthpl	r6, r3
 8015546:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801554a:	bfd8      	it	le
 801554c:	eeb0 8a69 	vmovle.f32	s16, s19
 8015550:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8015554:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015558:	bf58      	it	pl
 801555a:	eeb0 8a49 	vmovpl.f32	s16, s18
 801555e:	eef4 8ac8 	vcmpe.f32	s17, s16
 8015562:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015566:	bf54      	ite	pl
 8015568:	eeb0 0a68 	vmovpl.f32	s0, s17
 801556c:	eeb0 0a48 	vmovmi.f32	s0, s16
 8015570:	f015 f9e8 	bl	802a944 <ceilf>
 8015574:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8015578:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 801557c:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8015580:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8015584:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8015588:	ee07 8a90 	vmov	s15, r8
 801558c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015590:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8015594:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015598:	bfd8      	it	le
 801559a:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 801559e:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80155a2:	bfdc      	itt	le
 80155a4:	ee10 3a10 	vmovle	r3, s0
 80155a8:	fa0f f883 	sxthle.w	r8, r3
 80155ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155b0:	bf54      	ite	pl
 80155b2:	eeb0 0a69 	vmovpl.f32	s0, s19
 80155b6:	eeb0 0a48 	vmovmi.f32	s0, s16
 80155ba:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80155be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155c2:	bfd8      	it	le
 80155c4:	eeb0 0a49 	vmovle.f32	s0, s18
 80155c8:	eef4 8ac0 	vcmpe.f32	s17, s0
 80155cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155d0:	bfd8      	it	le
 80155d2:	eeb0 0a68 	vmovle.f32	s0, s17
 80155d6:	f015 f9f7 	bl	802a9c8 <floorf>
 80155da:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80155de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155e2:	bf58      	it	pl
 80155e4:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80155e8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80155ec:	bf56      	itet	pl
 80155ee:	ee10 3a10 	vmovpl	r3, s0
 80155f2:	2500      	movmi	r5, #0
 80155f4:	b21d      	sxthpl	r5, r3
 80155f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155fa:	bfd8      	it	le
 80155fc:	eeb0 8a69 	vmovle.f32	s16, s19
 8015600:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8015604:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015608:	bf58      	it	pl
 801560a:	eeb0 8a49 	vmovpl.f32	s16, s18
 801560e:	eef4 8ac8 	vcmpe.f32	s17, s16
 8015612:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015616:	bf54      	ite	pl
 8015618:	eeb0 0a68 	vmovpl.f32	s0, s17
 801561c:	eeb0 0a48 	vmovmi.f32	s0, s16
 8015620:	f015 f990 	bl	802a944 <ceilf>
 8015624:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8015628:	803e      	strh	r6, [r7, #0]
 801562a:	ee07 3a90 	vmov	s15, r3
 801562e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015632:	807d      	strh	r5, [r7, #2]
 8015634:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8015638:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801563c:	bfd8      	it	le
 801563e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8015642:	eba8 0606 	sub.w	r6, r8, r6
 8015646:	bfdc      	itt	le
 8015648:	ee10 3a10 	vmovle	r3, s0
 801564c:	b21b      	sxthle	r3, r3
 801564e:	1b5d      	subs	r5, r3, r5
 8015650:	80be      	strh	r6, [r7, #4]
 8015652:	80fd      	strh	r5, [r7, #6]
 8015654:	ecbd 8b04 	vpop	{d8-d9}
 8015658:	4638      	mov	r0, r7
 801565a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801565e <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 801565e:	b513      	push	{r0, r1, r4, lr}
 8015660:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8015664:	4604      	mov	r4, r0
 8015666:	b143      	cbz	r3, 801567a <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8015668:	4601      	mov	r1, r0
 801566a:	4668      	mov	r0, sp
 801566c:	f7ff ff36 	bl	80154dc <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8015670:	6823      	ldr	r3, [r4, #0]
 8015672:	4669      	mov	r1, sp
 8015674:	691b      	ldr	r3, [r3, #16]
 8015676:	4620      	mov	r0, r4
 8015678:	4798      	blx	r3
 801567a:	b002      	add	sp, #8
 801567c:	bd10      	pop	{r4, pc}

0801567e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 801567e:	4603      	mov	r3, r0
 8015680:	3026      	adds	r0, #38	; 0x26
 8015682:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8015686:	b90b      	cbnz	r3, 801568c <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8015688:	f005 b84c 	b.w	801a724 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 801568c:	f005 b85a 	b.w	801a744 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08015690 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8015690:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015694:	ed2d 8b04 	vpush	{d8-d9}
 8015698:	4604      	mov	r4, r0
 801569a:	469b      	mov	fp, r3
 801569c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 80156a0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80156a4:	f9b1 6000 	ldrsh.w	r6, [r1]
 80156a8:	8888      	ldrh	r0, [r1, #4]
 80156aa:	b0b3      	sub	sp, #204	; 0xcc
 80156ac:	4430      	add	r0, r6
 80156ae:	b280      	uxth	r0, r0
 80156b0:	9206      	str	r2, [sp, #24]
 80156b2:	fa0f fe80 	sxth.w	lr, r0
 80156b6:	2200      	movs	r2, #0
 80156b8:	4596      	cmp	lr, r2
 80156ba:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 80156be:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 80156c2:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 80156c6:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 80156c8:	9211      	str	r2, [sp, #68]	; 0x44
 80156ca:	f340 8129 	ble.w	8015920 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80156ce:	45b4      	cmp	ip, r6
 80156d0:	f340 8126 	ble.w	8015920 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80156d4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80156d8:	88ca      	ldrh	r2, [r1, #6]
 80156da:	442a      	add	r2, r5
 80156dc:	b292      	uxth	r2, r2
 80156de:	b211      	sxth	r1, r2
 80156e0:	2900      	cmp	r1, #0
 80156e2:	f340 811d 	ble.w	8015920 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80156e6:	42ab      	cmp	r3, r5
 80156e8:	f340 811a 	ble.w	8015920 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80156ec:	45f4      	cmp	ip, lr
 80156ee:	bfb8      	it	lt
 80156f0:	fa1f f08c 	uxthlt.w	r0, ip
 80156f4:	428b      	cmp	r3, r1
 80156f6:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80156fa:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80156fe:	bfb8      	it	lt
 8015700:	b29a      	uxthlt	r2, r3
 8015702:	1b80      	subs	r0, r0, r6
 8015704:	1b52      	subs	r2, r2, r5
 8015706:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 801570a:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 801570e:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8015712:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8015716:	ab11      	add	r3, sp, #68	; 0x44
 8015718:	e893 0003 	ldmia.w	r3, {r0, r1}
 801571c:	6822      	ldr	r2, [r4, #0]
 801571e:	9307      	str	r3, [sp, #28]
 8015720:	ad13      	add	r5, sp, #76	; 0x4c
 8015722:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8015724:	e885 0003 	stmia.w	r5, {r0, r1}
 8015728:	4629      	mov	r1, r5
 801572a:	4620      	mov	r0, r4
 801572c:	4790      	blx	r2
 801572e:	4621      	mov	r1, r4
 8015730:	a815      	add	r0, sp, #84	; 0x54
 8015732:	f004 ff53 	bl	801a5dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015736:	a815      	add	r0, sp, #84	; 0x54
 8015738:	f003 fc4a 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801573c:	9b07      	ldr	r3, [sp, #28]
 801573e:	1d26      	adds	r6, r4, #4
 8015740:	4618      	mov	r0, r3
 8015742:	4631      	mov	r1, r6
 8015744:	f003 fc88 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015748:	4628      	mov	r0, r5
 801574a:	f104 0526 	add.w	r5, r4, #38	; 0x26
 801574e:	f003 fc3f 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015752:	4628      	mov	r0, r5
 8015754:	f007 f9d4 	bl	801cb00 <_ZNK8touchgfx6Bitmap7getDataEv>
 8015758:	9007      	str	r0, [sp, #28]
 801575a:	2800      	cmp	r0, #0
 801575c:	f000 80db 	beq.w	8015916 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8015760:	f8db 2000 	ldr.w	r2, [fp]
 8015764:	9209      	str	r2, [sp, #36]	; 0x24
 8015766:	f8db 2004 	ldr.w	r2, [fp, #4]
 801576a:	920a      	str	r2, [sp, #40]	; 0x28
 801576c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8015770:	920b      	str	r2, [sp, #44]	; 0x2c
 8015772:	f8db 200c 	ldr.w	r2, [fp, #12]
 8015776:	920c      	str	r2, [sp, #48]	; 0x30
 8015778:	f8da 2000 	ldr.w	r2, [sl]
 801577c:	920d      	str	r2, [sp, #52]	; 0x34
 801577e:	f8da 2004 	ldr.w	r2, [sl, #4]
 8015782:	920e      	str	r2, [sp, #56]	; 0x38
 8015784:	f8da 2008 	ldr.w	r2, [sl, #8]
 8015788:	920f      	str	r2, [sp, #60]	; 0x3c
 801578a:	f8da 200c 	ldr.w	r2, [sl, #12]
 801578e:	9210      	str	r2, [sp, #64]	; 0x40
 8015790:	a90d      	add	r1, sp, #52	; 0x34
 8015792:	4632      	mov	r2, r6
 8015794:	a809      	add	r0, sp, #36	; 0x24
 8015796:	f003 fc43 	bl	8019020 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801579a:	4632      	mov	r2, r6
 801579c:	a90e      	add	r1, sp, #56	; 0x38
 801579e:	a80a      	add	r0, sp, #40	; 0x28
 80157a0:	f003 fc3e 	bl	8019020 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80157a4:	4632      	mov	r2, r6
 80157a6:	a90f      	add	r1, sp, #60	; 0x3c
 80157a8:	a80b      	add	r0, sp, #44	; 0x2c
 80157aa:	f003 fc39 	bl	8019020 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80157ae:	4632      	mov	r2, r6
 80157b0:	a910      	add	r1, sp, #64	; 0x40
 80157b2:	a80c      	add	r0, sp, #48	; 0x30
 80157b4:	f003 fc34 	bl	8019020 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80157b8:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 80157bc:	edd7 4a00 	vldr	s9, [r7]
 80157c0:	edd7 5a01 	vldr	s11, [r7, #4]
 80157c4:	ed98 4a00 	vldr	s8, [r8]
 80157c8:	ed98 5a01 	vldr	s10, [r8, #4]
 80157cc:	ed99 9a00 	vldr	s18, [r9]
 80157d0:	ed99 8a01 	vldr	s16, [r9, #4]
 80157d4:	edd9 8a02 	vldr	s17, [r9, #8]
 80157d8:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 80157dc:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 80157e0:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 80157e4:	eef0 6a67 	vmov.f32	s13, s15
 80157e8:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 80157ec:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 80157f0:	eeb0 7a67 	vmov.f32	s14, s15
 80157f4:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 80157f8:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 80157fc:	eeb0 6a67 	vmov.f32	s12, s15
 8015800:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8015804:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8015808:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 801580c:	ee16 6a10 	vmov	r6, s12
 8015810:	eeb0 6a67 	vmov.f32	s12, s15
 8015814:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8015818:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 801581c:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8015820:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8015824:	68ff      	ldr	r7, [r7, #12]
 8015826:	9624      	str	r6, [sp, #144]	; 0x90
 8015828:	ee16 0a10 	vmov	r0, s12
 801582c:	eeb0 6a67 	vmov.f32	s12, s15
 8015830:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8015834:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8015838:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 801583c:	ee16 1a10 	vmov	r1, s12
 8015840:	eeb0 6a67 	vmov.f32	s12, s15
 8015844:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8015848:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 801584c:	ee16 2a10 	vmov	r2, s12
 8015850:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8015854:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8015858:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801585c:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8015860:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8015864:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8015868:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 801586c:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8015870:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8015874:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8015878:	922d      	str	r2, [sp, #180]	; 0xb4
 801587a:	4a2b      	ldr	r2, [pc, #172]	; (8015928 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 801587c:	9b06      	ldr	r3, [sp, #24]
 801587e:	8812      	ldrh	r2, [r2, #0]
 8015880:	9317      	str	r3, [sp, #92]	; 0x5c
 8015882:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8015886:	9b07      	ldr	r3, [sp, #28]
 8015888:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 801588c:	4628      	mov	r0, r5
 801588e:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8015892:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8015896:	9218      	str	r2, [sp, #96]	; 0x60
 8015898:	9319      	str	r3, [sp, #100]	; 0x64
 801589a:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 801589e:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 80158a2:	9731      	str	r7, [sp, #196]	; 0xc4
 80158a4:	f007 f95c 	bl	801cb60 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80158a8:	901a      	str	r0, [sp, #104]	; 0x68
 80158aa:	4628      	mov	r0, r5
 80158ac:	f007 f83c 	bl	801c928 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80158b0:	901b      	str	r0, [sp, #108]	; 0x6c
 80158b2:	4628      	mov	r0, r5
 80158b4:	f007 f86c 	bl	801c990 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80158b8:	901c      	str	r0, [sp, #112]	; 0x70
 80158ba:	4628      	mov	r0, r5
 80158bc:	f007 f834 	bl	801c928 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80158c0:	eeb4 9a48 	vcmp.f32	s18, s16
 80158c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80158c8:	901d      	str	r0, [sp, #116]	; 0x74
 80158ca:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 80158ce:	d107      	bne.n	80158e0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 80158d0:	eeb4 8a68 	vcmp.f32	s16, s17
 80158d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80158d8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80158dc:	bf08      	it	eq
 80158de:	461e      	moveq	r6, r3
 80158e0:	4b12      	ldr	r3, [pc, #72]	; (801592c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 80158e2:	681b      	ldr	r3, [r3, #0]
 80158e4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80158e8:	b10a      	cbz	r2, 80158ee <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 80158ea:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80158ec:	b905      	cbnz	r5, 80158f0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 80158ee:	689d      	ldr	r5, [r3, #8]
 80158f0:	682b      	ldr	r3, [r5, #0]
 80158f2:	4620      	mov	r0, r4
 80158f4:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 80158f6:	f7ff fec2 	bl	801567e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 80158fa:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80158fe:	9604      	str	r6, [sp, #16]
 8015900:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8015904:	ab13      	add	r3, sp, #76	; 0x4c
 8015906:	9301      	str	r3, [sp, #4]
 8015908:	ab15      	add	r3, sp, #84	; 0x54
 801590a:	9300      	str	r3, [sp, #0]
 801590c:	aa1e      	add	r2, sp, #120	; 0x78
 801590e:	ab19      	add	r3, sp, #100	; 0x64
 8015910:	a917      	add	r1, sp, #92	; 0x5c
 8015912:	4628      	mov	r0, r5
 8015914:	47b8      	blx	r7
 8015916:	b033      	add	sp, #204	; 0xcc
 8015918:	ecbd 8b04 	vpop	{d8-d9}
 801591c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015920:	2300      	movs	r3, #0
 8015922:	9312      	str	r3, [sp, #72]	; 0x48
 8015924:	e6f7      	b.n	8015716 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8015926:	bf00      	nop
 8015928:	20002246 	.word	0x20002246
 801592c:	2000224c 	.word	0x2000224c

08015930 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8015930:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015934:	ed2d 8b02 	vpush	{d8}
 8015938:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 801593c:	b098      	sub	sp, #96	; 0x60
 801593e:	4604      	mov	r4, r0
 8015940:	4688      	mov	r8, r1
 8015942:	2b00      	cmp	r3, #0
 8015944:	d077      	beq.n	8015a36 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 8015946:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801594a:	4628      	mov	r0, r5
 801594c:	f006 ffec 	bl	801c928 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015950:	ee07 0a90 	vmov	s15, r0
 8015954:	4628      	mov	r0, r5
 8015956:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 801595a:	f007 f819 	bl	801c990 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801595e:	4b4e      	ldr	r3, [pc, #312]	; (8015a98 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8015960:	781b      	ldrb	r3, [r3, #0]
 8015962:	ee07 0a90 	vmov	s15, r0
 8015966:	2b01      	cmp	r3, #1
 8015968:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801596c:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8015970:	d066      	beq.n	8015a40 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8015972:	eeb0 6a47 	vmov.f32	s12, s14
 8015976:	ee17 3a10 	vmov	r3, s14
 801597a:	eeb0 4a48 	vmov.f32	s8, s16
 801597e:	eeb0 7a48 	vmov.f32	s14, s16
 8015982:	eef0 4a67 	vmov.f32	s9, s15
 8015986:	eeb0 8a67 	vmov.f32	s16, s15
 801598a:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 801598e:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8015992:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8015996:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 801599a:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 801599e:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 80159a2:	6f25      	ldr	r5, [r4, #112]	; 0x70
 80159a4:	6e66      	ldr	r6, [r4, #100]	; 0x64
 80159a6:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 80159a8:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 80159ac:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 80159b0:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80159b4:	ee73 1a65 	vsub.f32	s3, s6, s11
 80159b8:	ee72 6ac5 	vsub.f32	s13, s5, s10
 80159bc:	ee32 1a45 	vsub.f32	s2, s4, s10
 80159c0:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 80159c4:	ee73 1ae5 	vsub.f32	s3, s7, s11
 80159c8:	eee1 6a21 	vfma.f32	s13, s2, s3
 80159cc:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80159d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80159d4:	dd3d      	ble.n	8015a52 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 80159d6:	ed8d 5a04 	vstr	s10, [sp, #16]
 80159da:	ed8d 2a05 	vstr	s4, [sp, #20]
 80159de:	edcd 2a06 	vstr	s5, [sp, #24]
 80159e2:	f8cd c01c 	str.w	ip, [sp, #28]
 80159e6:	edcd 5a08 	vstr	s11, [sp, #32]
 80159ea:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 80159ee:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 80159f2:	970b      	str	r7, [sp, #44]	; 0x2c
 80159f4:	960c      	str	r6, [sp, #48]	; 0x30
 80159f6:	950d      	str	r5, [sp, #52]	; 0x34
 80159f8:	920e      	str	r2, [sp, #56]	; 0x38
 80159fa:	900f      	str	r0, [sp, #60]	; 0x3c
 80159fc:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8015a00:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8015a04:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8015a08:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8015a0c:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8015a10:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8015a14:	9316      	str	r3, [sp, #88]	; 0x58
 8015a16:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 8015a1a:	ab14      	add	r3, sp, #80	; 0x50
 8015a1c:	9303      	str	r3, [sp, #12]
 8015a1e:	ab10      	add	r3, sp, #64	; 0x40
 8015a20:	9302      	str	r3, [sp, #8]
 8015a22:	ab0c      	add	r3, sp, #48	; 0x30
 8015a24:	9301      	str	r3, [sp, #4]
 8015a26:	ab08      	add	r3, sp, #32
 8015a28:	9300      	str	r3, [sp, #0]
 8015a2a:	2200      	movs	r2, #0
 8015a2c:	ab04      	add	r3, sp, #16
 8015a2e:	4641      	mov	r1, r8
 8015a30:	4620      	mov	r0, r4
 8015a32:	f7ff fe2d 	bl	8015690 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8015a36:	b018      	add	sp, #96	; 0x60
 8015a38:	ecbd 8b02 	vpop	{d8}
 8015a3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015a40:	eeb0 6a48 	vmov.f32	s12, s16
 8015a44:	eef0 4a47 	vmov.f32	s9, s14
 8015a48:	ee17 3a90 	vmov	r3, s15
 8015a4c:	eeb0 4a67 	vmov.f32	s8, s15
 8015a50:	e79b      	b.n	801598a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8015a52:	ed8d 5a05 	vstr	s10, [sp, #20]
 8015a56:	ed8d 2a04 	vstr	s4, [sp, #16]
 8015a5a:	f8cd c018 	str.w	ip, [sp, #24]
 8015a5e:	edcd 2a07 	vstr	s5, [sp, #28]
 8015a62:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8015a66:	ed8d 3a08 	vstr	s6, [sp, #32]
 8015a6a:	970a      	str	r7, [sp, #40]	; 0x28
 8015a6c:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8015a70:	960d      	str	r6, [sp, #52]	; 0x34
 8015a72:	950c      	str	r5, [sp, #48]	; 0x30
 8015a74:	900e      	str	r0, [sp, #56]	; 0x38
 8015a76:	920f      	str	r2, [sp, #60]	; 0x3c
 8015a78:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8015a7c:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8015a80:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8015a84:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8015a88:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8015a8c:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8015a90:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8015a94:	9317      	str	r3, [sp, #92]	; 0x5c
 8015a96:	e7c0      	b.n	8015a1a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8015a98:	20002244 	.word	0x20002244

08015a9c <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
 8015a9c:	b508      	push	{r3, lr}
 8015a9e:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8015aa2:	b10b      	cbz	r3, 8015aa8 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
 8015aa4:	f7f4 f982 	bl	8009dac <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8015aa8:	bd08      	pop	{r3, pc}

08015aaa <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 8015aaa:	6803      	ldr	r3, [r0, #0]
 8015aac:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8015ab0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8015ab2:	4718      	bx	r3

08015ab4 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 8015ab4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8015ab8:	2bff      	cmp	r3, #255	; 0xff
 8015aba:	b510      	push	{r4, lr}
 8015abc:	d104      	bne.n	8015ac8 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 8015abe:	8cca      	ldrh	r2, [r1, #38]	; 0x26
 8015ac0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015ac4:	429a      	cmp	r2, r3
 8015ac6:	d105      	bne.n	8015ad4 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 8015ac8:	2300      	movs	r3, #0
 8015aca:	8003      	strh	r3, [r0, #0]
 8015acc:	8043      	strh	r3, [r0, #2]
 8015ace:	8083      	strh	r3, [r0, #4]
 8015ad0:	80c3      	strh	r3, [r0, #6]
 8015ad2:	bd10      	pop	{r4, pc}
 8015ad4:	2300      	movs	r3, #0
 8015ad6:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8015ada:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 8015ade:	8003      	strh	r3, [r0, #0]
 8015ae0:	8043      	strh	r3, [r0, #2]
 8015ae2:	8084      	strh	r4, [r0, #4]
 8015ae4:	80c2      	strh	r2, [r0, #6]
 8015ae6:	e7f4      	b.n	8015ad2 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

08015ae8 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 8015ae8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015aec:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8015af0:	b087      	sub	sp, #28
 8015af2:	4604      	mov	r4, r0
 8015af4:	4689      	mov	r9, r1
 8015af6:	b363      	cbz	r3, 8015b52 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 8015af8:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 8015afa:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015afe:	429a      	cmp	r2, r3
 8015b00:	d027      	beq.n	8015b52 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 8015b02:	ad06      	add	r5, sp, #24
 8015b04:	2700      	movs	r7, #0
 8015b06:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 8015b0a:	4628      	mov	r0, r5
 8015b0c:	f006 ff0c 	bl	801c928 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015b10:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8015b14:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015b18:	6823      	ldr	r3, [r4, #0]
 8015b1a:	f8ad 0014 	strh.w	r0, [sp, #20]
 8015b1e:	a904      	add	r1, sp, #16
 8015b20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015b22:	9704      	str	r7, [sp, #16]
 8015b24:	4620      	mov	r0, r4
 8015b26:	4798      	blx	r3
 8015b28:	f7f5 fa6a 	bl	800b000 <_ZN8touchgfx3HAL3lcdEv>
 8015b2c:	6803      	ldr	r3, [r0, #0]
 8015b2e:	4606      	mov	r6, r0
 8015b30:	f8d3 800c 	ldr.w	r8, [r3, #12]
 8015b34:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8015b36:	f8ad 300c 	strh.w	r3, [sp, #12]
 8015b3a:	4628      	mov	r0, r5
 8015b3c:	f006 ffe0 	bl	801cb00 <_ZNK8touchgfx6Bitmap7getDataEv>
 8015b40:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8015b44:	9300      	str	r3, [sp, #0]
 8015b46:	4601      	mov	r1, r0
 8015b48:	9701      	str	r7, [sp, #4]
 8015b4a:	464b      	mov	r3, r9
 8015b4c:	aa04      	add	r2, sp, #16
 8015b4e:	4630      	mov	r0, r6
 8015b50:	47c0      	blx	r8
 8015b52:	b007      	add	sp, #28
 8015b54:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08015b58 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 8015b58:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8015b5a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015b5e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015b62:	6803      	ldr	r3, [r0, #0]
 8015b64:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8015b68:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015b6c:	460d      	mov	r5, r1
 8015b6e:	2100      	movs	r1, #0
 8015b70:	4604      	mov	r4, r0
 8015b72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015b74:	9100      	str	r1, [sp, #0]
 8015b76:	4669      	mov	r1, sp
 8015b78:	4798      	blx	r3
 8015b7a:	4621      	mov	r1, r4
 8015b7c:	a802      	add	r0, sp, #8
 8015b7e:	f004 fd2d 	bl	801a5dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015b82:	f7f5 fa3d 	bl	800b000 <_ZN8touchgfx3HAL3lcdEv>
 8015b86:	6803      	ldr	r3, [r0, #0]
 8015b88:	aa02      	add	r2, sp, #8
 8015b8a:	695e      	ldr	r6, [r3, #20]
 8015b8c:	4669      	mov	r1, sp
 8015b8e:	462b      	mov	r3, r5
 8015b90:	47b0      	blx	r6
 8015b92:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015b96:	2800      	cmp	r0, #0
 8015b98:	bf08      	it	eq
 8015b9a:	461d      	moveq	r5, r3
 8015b9c:	84e5      	strh	r5, [r4, #38]	; 0x26
 8015b9e:	b004      	add	sp, #16
 8015ba0:	bd70      	pop	{r4, r5, r6, pc}
	...

08015ba4 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 8015ba4:	2200      	movs	r2, #0
 8015ba6:	8082      	strh	r2, [r0, #4]
 8015ba8:	80c2      	strh	r2, [r0, #6]
 8015baa:	8102      	strh	r2, [r0, #8]
 8015bac:	8142      	strh	r2, [r0, #10]
 8015bae:	8182      	strh	r2, [r0, #12]
 8015bb0:	81c2      	strh	r2, [r0, #14]
 8015bb2:	8202      	strh	r2, [r0, #16]
 8015bb4:	8242      	strh	r2, [r0, #18]
 8015bb6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8015bba:	61c2      	str	r2, [r0, #28]
 8015bbc:	8402      	strh	r2, [r0, #32]
 8015bbe:	8442      	strh	r2, [r0, #34]	; 0x22
 8015bc0:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8015bc4:	2201      	movs	r2, #1
 8015bc6:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8015bca:	4a04      	ldr	r2, [pc, #16]	; (8015bdc <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
 8015bcc:	6002      	str	r2, [r0, #0]
 8015bce:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8015bd2:	84c2      	strh	r2, [r0, #38]	; 0x26
 8015bd4:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 8015bd8:	4770      	bx	lr
 8015bda:	bf00      	nop
 8015bdc:	0802f4dc 	.word	0x0802f4dc

08015be0 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8015be0:	2000      	movs	r0, #0
 8015be2:	4770      	bx	lr

08015be4 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8015be4:	4b07      	ldr	r3, [pc, #28]	; (8015c04 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8015be6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8015be8:	881b      	ldrh	r3, [r3, #0]
 8015bea:	4293      	cmp	r3, r2
 8015bec:	bf81      	itttt	hi
 8015bee:	4b06      	ldrhi	r3, [pc, #24]	; (8015c08 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8015bf0:	681b      	ldrhi	r3, [r3, #0]
 8015bf2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8015bf6:	7858      	ldrbhi	r0, [r3, #1]
 8015bf8:	bf8c      	ite	hi
 8015bfa:	f000 0003 	andhi.w	r0, r0, #3
 8015bfe:	2000      	movls	r0, #0
 8015c00:	4770      	bx	lr
 8015c02:	bf00      	nop
 8015c04:	200022a8 	.word	0x200022a8
 8015c08:	200022a4 	.word	0x200022a4

08015c0c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8015c0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015c10:	4b10      	ldr	r3, [pc, #64]	; (8015c54 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8015c12:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8015c14:	881b      	ldrh	r3, [r3, #0]
 8015c16:	428b      	cmp	r3, r1
 8015c18:	4604      	mov	r4, r0
 8015c1a:	d918      	bls.n	8015c4e <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8015c1c:	6803      	ldr	r3, [r0, #0]
 8015c1e:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8015c20:	4b0d      	ldr	r3, [pc, #52]	; (8015c58 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8015c22:	6818      	ldr	r0, [r3, #0]
 8015c24:	f7fa fa5e 	bl	80100e4 <_ZNK8touchgfx5Texts7getTextEt>
 8015c28:	6823      	ldr	r3, [r4, #0]
 8015c2a:	4606      	mov	r6, r0
 8015c2c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8015c2e:	4620      	mov	r0, r4
 8015c30:	4798      	blx	r3
 8015c32:	6823      	ldr	r3, [r4, #0]
 8015c34:	4607      	mov	r7, r0
 8015c36:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8015c3a:	4620      	mov	r0, r4
 8015c3c:	4798      	blx	r3
 8015c3e:	463a      	mov	r2, r7
 8015c40:	4603      	mov	r3, r0
 8015c42:	4631      	mov	r1, r6
 8015c44:	4620      	mov	r0, r4
 8015c46:	46ac      	mov	ip, r5
 8015c48:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8015c4c:	4760      	bx	ip
 8015c4e:	2000      	movs	r0, #0
 8015c50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015c54:	200022a8 	.word	0x200022a8
 8015c58:	200022b0 	.word	0x200022b0

08015c5c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8015c5c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8015c60:	4b17      	ldr	r3, [pc, #92]	; (8015cc0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8015c62:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8015c64:	881b      	ldrh	r3, [r3, #0]
 8015c66:	428b      	cmp	r3, r1
 8015c68:	4604      	mov	r4, r0
 8015c6a:	d926      	bls.n	8015cba <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8015c6c:	4b15      	ldr	r3, [pc, #84]	; (8015cc4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8015c6e:	681b      	ldr	r3, [r3, #0]
 8015c70:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8015c74:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8015c78:	4b13      	ldr	r3, [pc, #76]	; (8015cc8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8015c7a:	7855      	ldrb	r5, [r2, #1]
 8015c7c:	681b      	ldr	r3, [r3, #0]
 8015c7e:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8015c82:	6833      	ldr	r3, [r6, #0]
 8015c84:	69df      	ldr	r7, [r3, #28]
 8015c86:	4b11      	ldr	r3, [pc, #68]	; (8015ccc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8015c88:	6818      	ldr	r0, [r3, #0]
 8015c8a:	f7fa fa2b 	bl	80100e4 <_ZNK8touchgfx5Texts7getTextEt>
 8015c8e:	6823      	ldr	r3, [r4, #0]
 8015c90:	4680      	mov	r8, r0
 8015c92:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8015c94:	4620      	mov	r0, r4
 8015c96:	4798      	blx	r3
 8015c98:	6823      	ldr	r3, [r4, #0]
 8015c9a:	4681      	mov	r9, r0
 8015c9c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8015ca0:	4620      	mov	r0, r4
 8015ca2:	4798      	blx	r3
 8015ca4:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8015ca8:	9000      	str	r0, [sp, #0]
 8015caa:	464b      	mov	r3, r9
 8015cac:	4642      	mov	r2, r8
 8015cae:	4629      	mov	r1, r5
 8015cb0:	4630      	mov	r0, r6
 8015cb2:	47b8      	blx	r7
 8015cb4:	b003      	add	sp, #12
 8015cb6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015cba:	2000      	movs	r0, #0
 8015cbc:	e7fa      	b.n	8015cb4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8015cbe:	bf00      	nop
 8015cc0:	200022a8 	.word	0x200022a8
 8015cc4:	200022a4 	.word	0x200022a4
 8015cc8:	200022ac 	.word	0x200022ac
 8015ccc:	200022b0 	.word	0x200022b0

08015cd0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8015cd0:	b40e      	push	{r1, r2, r3}
 8015cd2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015cd6:	4b2f      	ldr	r3, [pc, #188]	; (8015d94 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8015cd8:	881a      	ldrh	r2, [r3, #0]
 8015cda:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8015cdc:	429a      	cmp	r2, r3
 8015cde:	b09d      	sub	sp, #116	; 0x74
 8015ce0:	4604      	mov	r4, r0
 8015ce2:	d954      	bls.n	8015d8e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8015ce4:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8015d98 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8015ce8:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8015d9c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8015cec:	aa26      	add	r2, sp, #152	; 0x98
 8015cee:	9202      	str	r2, [sp, #8]
 8015cf0:	f8d9 2000 	ldr.w	r2, [r9]
 8015cf4:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8015cf8:	f8d8 3000 	ldr.w	r3, [r8]
 8015cfc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8015d00:	682b      	ldr	r3, [r5, #0]
 8015d02:	4628      	mov	r0, r5
 8015d04:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015d06:	4798      	blx	r3
 8015d08:	b207      	sxth	r7, r0
 8015d0a:	4606      	mov	r6, r0
 8015d0c:	a803      	add	r0, sp, #12
 8015d0e:	f005 f929 	bl	801af64 <_ZN8touchgfx12TextProviderC1Ev>
 8015d12:	682b      	ldr	r3, [r5, #0]
 8015d14:	4628      	mov	r0, r5
 8015d16:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015d18:	4798      	blx	r3
 8015d1a:	682b      	ldr	r3, [r5, #0]
 8015d1c:	4682      	mov	sl, r0
 8015d1e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015d20:	4628      	mov	r0, r5
 8015d22:	4798      	blx	r3
 8015d24:	4653      	mov	r3, sl
 8015d26:	9000      	str	r0, [sp, #0]
 8015d28:	9a02      	ldr	r2, [sp, #8]
 8015d2a:	9925      	ldr	r1, [sp, #148]	; 0x94
 8015d2c:	a803      	add	r0, sp, #12
 8015d2e:	f005 f974 	bl	801b01a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015d32:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8015d34:	f8d9 3000 	ldr.w	r3, [r9]
 8015d38:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8015d3c:	8925      	ldrh	r5, [r4, #8]
 8015d3e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8015d42:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8015d46:	eba5 050c 	sub.w	r5, r5, ip
 8015d4a:	784a      	ldrb	r2, [r1, #1]
 8015d4c:	f8d8 3000 	ldr.w	r3, [r8]
 8015d50:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8015d54:	b22d      	sxth	r5, r5
 8015d56:	9500      	str	r5, [sp, #0]
 8015d58:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8015d5c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8015d60:	a803      	add	r0, sp, #12
 8015d62:	f002 fe3b 	bl	80189dc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8015d66:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8015d6a:	18b9      	adds	r1, r7, r2
 8015d6c:	2900      	cmp	r1, #0
 8015d6e:	b203      	sxth	r3, r0
 8015d70:	dd0b      	ble.n	8015d8a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8015d72:	3b01      	subs	r3, #1
 8015d74:	fb13 f302 	smulbb	r3, r3, r2
 8015d78:	fb16 3300 	smlabb	r3, r6, r0, r3
 8015d7c:	b21f      	sxth	r7, r3
 8015d7e:	4638      	mov	r0, r7
 8015d80:	b01d      	add	sp, #116	; 0x74
 8015d82:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015d86:	b003      	add	sp, #12
 8015d88:	4770      	bx	lr
 8015d8a:	2b00      	cmp	r3, #0
 8015d8c:	dcf7      	bgt.n	8015d7e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8015d8e:	2700      	movs	r7, #0
 8015d90:	e7f5      	b.n	8015d7e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8015d92:	bf00      	nop
 8015d94:	200022a8 	.word	0x200022a8
 8015d98:	200022a4 	.word	0x200022a4
 8015d9c:	200022ac 	.word	0x200022ac

08015da0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8015da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015da4:	4bbc      	ldr	r3, [pc, #752]	; (8016098 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8015da6:	460c      	mov	r4, r1
 8015da8:	881b      	ldrh	r3, [r3, #0]
 8015daa:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8015dac:	428b      	cmp	r3, r1
 8015dae:	b0a9      	sub	sp, #164	; 0xa4
 8015db0:	4680      	mov	r8, r0
 8015db2:	d809      	bhi.n	8015dc8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8015db4:	2300      	movs	r3, #0
 8015db6:	f04f 32ff 	mov.w	r2, #4294967295
 8015dba:	e9c0 3200 	strd	r3, r2, [r0]
 8015dbe:	6083      	str	r3, [r0, #8]
 8015dc0:	4640      	mov	r0, r8
 8015dc2:	b029      	add	sp, #164	; 0xa4
 8015dc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015dc8:	4eb4      	ldr	r6, [pc, #720]	; (801609c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8015dca:	6833      	ldr	r3, [r6, #0]
 8015dcc:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8015dd0:	4bb3      	ldr	r3, [pc, #716]	; (80160a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8015dd2:	681b      	ldr	r3, [r3, #0]
 8015dd4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8015dd8:	4bb2      	ldr	r3, [pc, #712]	; (80160a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8015dda:	6818      	ldr	r0, [r3, #0]
 8015ddc:	f7fa f982 	bl	80100e4 <_ZNK8touchgfx5Texts7getTextEt>
 8015de0:	682b      	ldr	r3, [r5, #0]
 8015de2:	4681      	mov	r9, r0
 8015de4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015de6:	4628      	mov	r0, r5
 8015de8:	4798      	blx	r3
 8015dea:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8015dec:	b203      	sxth	r3, r0
 8015dee:	4407      	add	r7, r0
 8015df0:	9304      	str	r3, [sp, #16]
 8015df2:	b2bb      	uxth	r3, r7
 8015df4:	9303      	str	r3, [sp, #12]
 8015df6:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8015dfa:	4682      	mov	sl, r0
 8015dfc:	a80f      	add	r0, sp, #60	; 0x3c
 8015dfe:	2b00      	cmp	r3, #0
 8015e00:	f040 80a6 	bne.w	8015f50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8015e04:	f005 f8ae 	bl	801af64 <_ZN8touchgfx12TextProviderC1Ev>
 8015e08:	682b      	ldr	r3, [r5, #0]
 8015e0a:	4628      	mov	r0, r5
 8015e0c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015e0e:	4798      	blx	r3
 8015e10:	682b      	ldr	r3, [r5, #0]
 8015e12:	4606      	mov	r6, r0
 8015e14:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015e16:	4628      	mov	r0, r5
 8015e18:	4798      	blx	r3
 8015e1a:	6823      	ldr	r3, [r4, #0]
 8015e1c:	4607      	mov	r7, r0
 8015e1e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8015e20:	4620      	mov	r0, r4
 8015e22:	4798      	blx	r3
 8015e24:	6823      	ldr	r3, [r4, #0]
 8015e26:	4683      	mov	fp, r0
 8015e28:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8015e2c:	4620      	mov	r0, r4
 8015e2e:	4798      	blx	r3
 8015e30:	463b      	mov	r3, r7
 8015e32:	e9cd b000 	strd	fp, r0, [sp]
 8015e36:	4649      	mov	r1, r9
 8015e38:	4632      	mov	r2, r6
 8015e3a:	a80f      	add	r0, sp, #60	; 0x3c
 8015e3c:	f005 f902 	bl	801b044 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8015e40:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015e44:	f8df b254 	ldr.w	fp, [pc, #596]	; 801609c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8015e48:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8015e4c:	f04f 0600 	mov.w	r6, #0
 8015e50:	bf0c      	ite	eq
 8015e52:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8015e56:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8015e5a:	4637      	mov	r7, r6
 8015e5c:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8015e5e:	f8db 3000 	ldr.w	r3, [fp]
 8015e62:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8015e66:	4629      	mov	r1, r5
 8015e68:	785b      	ldrb	r3, [r3, #1]
 8015e6a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8015e6e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8015e72:	a80f      	add	r0, sp, #60	; 0x3c
 8015e74:	f002 facd 	bl	8018412 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8015e78:	9b03      	ldr	r3, [sp, #12]
 8015e7a:	4286      	cmp	r6, r0
 8015e7c:	bfb8      	it	lt
 8015e7e:	4606      	movlt	r6, r0
 8015e80:	3701      	adds	r7, #1
 8015e82:	eba9 0903 	sub.w	r9, r9, r3
 8015e86:	a80f      	add	r0, sp, #60	; 0x3c
 8015e88:	b236      	sxth	r6, r6
 8015e8a:	b2bf      	uxth	r7, r7
 8015e8c:	fa0f f989 	sxth.w	r9, r9
 8015e90:	f005 f88f 	bl	801afb2 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8015e94:	b918      	cbnz	r0, 8015e9e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8015e96:	7a2b      	ldrb	r3, [r5, #8]
 8015e98:	444b      	add	r3, r9
 8015e9a:	2b00      	cmp	r3, #0
 8015e9c:	dcde      	bgt.n	8015e5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8015e9e:	9b03      	ldr	r3, [sp, #12]
 8015ea0:	9a04      	ldr	r2, [sp, #16]
 8015ea2:	f895 9009 	ldrb.w	r9, [r5, #9]
 8015ea6:	fb13 f707 	smulbb	r7, r3, r7
 8015eaa:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8015eac:	1aff      	subs	r7, r7, r3
 8015eae:	b2bf      	uxth	r7, r7
 8015eb0:	b23b      	sxth	r3, r7
 8015eb2:	429a      	cmp	r2, r3
 8015eb4:	bfa8      	it	ge
 8015eb6:	4657      	movge	r7, sl
 8015eb8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015ebc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8015ec0:	6823      	ldr	r3, [r4, #0]
 8015ec2:	bf08      	it	eq
 8015ec4:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8015ec8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015eca:	bf18      	it	ne
 8015ecc:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8015ed0:	4620      	mov	r0, r4
 8015ed2:	4798      	blx	r3
 8015ed4:	444f      	add	r7, r9
 8015ed6:	fa1f f987 	uxth.w	r9, r7
 8015eda:	2801      	cmp	r0, #1
 8015edc:	fa0f f789 	sxth.w	r7, r9
 8015ee0:	b2b3      	uxth	r3, r6
 8015ee2:	f000 80e1 	beq.w	80160a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8015ee6:	2802      	cmp	r0, #2
 8015ee8:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8015eec:	f000 80e2 	beq.w	80160b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8015ef0:	7aea      	ldrb	r2, [r5, #11]
 8015ef2:	7b2d      	ldrb	r5, [r5, #12]
 8015ef4:	b236      	sxth	r6, r6
 8015ef6:	1ab6      	subs	r6, r6, r2
 8015ef8:	442a      	add	r2, r5
 8015efa:	4413      	add	r3, r2
 8015efc:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8015f00:	fa1f fa86 	uxth.w	sl, r6
 8015f04:	b29b      	uxth	r3, r3
 8015f06:	2a02      	cmp	r2, #2
 8015f08:	fa0f fb8a 	sxth.w	fp, sl
 8015f0c:	b21e      	sxth	r6, r3
 8015f0e:	f000 80d5 	beq.w	80160bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8015f12:	2a03      	cmp	r2, #3
 8015f14:	f000 80dd 	beq.w	80160d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8015f18:	2a01      	cmp	r2, #1
 8015f1a:	f040 80e5 	bne.w	80160e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8015f1e:	8925      	ldrh	r5, [r4, #8]
 8015f20:	4633      	mov	r3, r6
 8015f22:	eba5 0909 	sub.w	r9, r5, r9
 8015f26:	463e      	mov	r6, r7
 8015f28:	465d      	mov	r5, fp
 8015f2a:	461f      	mov	r7, r3
 8015f2c:	fa0f fb89 	sxth.w	fp, r9
 8015f30:	4b5c      	ldr	r3, [pc, #368]	; (80160a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8015f32:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015f34:	6818      	ldr	r0, [r3, #0]
 8015f36:	f7fa f8d5 	bl	80100e4 <_ZNK8touchgfx5Texts7getTextEt>
 8015f3a:	f8a8 b000 	strh.w	fp, [r8]
 8015f3e:	f8a8 5002 	strh.w	r5, [r8, #2]
 8015f42:	f8a8 6004 	strh.w	r6, [r8, #4]
 8015f46:	f8a8 7006 	strh.w	r7, [r8, #6]
 8015f4a:	f8c8 0008 	str.w	r0, [r8, #8]
 8015f4e:	e737      	b.n	8015dc0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8015f50:	f005 f808 	bl	801af64 <_ZN8touchgfx12TextProviderC1Ev>
 8015f54:	682b      	ldr	r3, [r5, #0]
 8015f56:	4628      	mov	r0, r5
 8015f58:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015f5a:	4798      	blx	r3
 8015f5c:	682b      	ldr	r3, [r5, #0]
 8015f5e:	4607      	mov	r7, r0
 8015f60:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015f62:	4628      	mov	r0, r5
 8015f64:	4798      	blx	r3
 8015f66:	6823      	ldr	r3, [r4, #0]
 8015f68:	4683      	mov	fp, r0
 8015f6a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8015f6c:	4620      	mov	r0, r4
 8015f6e:	4798      	blx	r3
 8015f70:	6822      	ldr	r2, [r4, #0]
 8015f72:	9005      	str	r0, [sp, #20]
 8015f74:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8015f78:	4620      	mov	r0, r4
 8015f7a:	4790      	blx	r2
 8015f7c:	9b05      	ldr	r3, [sp, #20]
 8015f7e:	9001      	str	r0, [sp, #4]
 8015f80:	463a      	mov	r2, r7
 8015f82:	4649      	mov	r1, r9
 8015f84:	9300      	str	r3, [sp, #0]
 8015f86:	a80f      	add	r0, sp, #60	; 0x3c
 8015f88:	465b      	mov	r3, fp
 8015f8a:	f005 f85b 	bl	801b044 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8015f8e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015f92:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8015f96:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015f98:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8015f9c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8015fa0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8015fa4:	bf0a      	itet	eq
 8015fa6:	464a      	moveq	r2, r9
 8015fa8:	461a      	movne	r2, r3
 8015faa:	4699      	moveq	r9, r3
 8015fac:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8015fb0:	1ad2      	subs	r2, r2, r3
 8015fb2:	6833      	ldr	r3, [r6, #0]
 8015fb4:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8015fb8:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8015fbc:	af0f      	add	r7, sp, #60	; 0x3c
 8015fbe:	7859      	ldrb	r1, [r3, #1]
 8015fc0:	9707      	str	r7, [sp, #28]
 8015fc2:	2300      	movs	r3, #0
 8015fc4:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8015fc8:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015fcc:	f88d 1020 	strb.w	r1, [sp, #32]
 8015fd0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8015fd4:	9509      	str	r5, [sp, #36]	; 0x24
 8015fd6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8015fda:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8015fde:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8015fe2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015fe6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8015fea:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015fee:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8015ff2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015ff6:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8015ffa:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8015ffe:	b350      	cbz	r0, 8016056 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8016000:	682b      	ldr	r3, [r5, #0]
 8016002:	4628      	mov	r0, r5
 8016004:	695b      	ldr	r3, [r3, #20]
 8016006:	4798      	blx	r3
 8016008:	4607      	mov	r7, r0
 801600a:	b320      	cbz	r0, 8016056 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801600c:	9809      	ldr	r0, [sp, #36]	; 0x24
 801600e:	6803      	ldr	r3, [r0, #0]
 8016010:	4639      	mov	r1, r7
 8016012:	68db      	ldr	r3, [r3, #12]
 8016014:	4798      	blx	r3
 8016016:	4606      	mov	r6, r0
 8016018:	b1e8      	cbz	r0, 8016056 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801601a:	7b43      	ldrb	r3, [r0, #13]
 801601c:	7a82      	ldrb	r2, [r0, #10]
 801601e:	005b      	lsls	r3, r3, #1
 8016020:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016024:	4313      	orrs	r3, r2
 8016026:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801602a:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 801602e:	2b06      	cmp	r3, #6
 8016030:	d111      	bne.n	8016056 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8016032:	9809      	ldr	r0, [sp, #36]	; 0x24
 8016034:	6803      	ldr	r3, [r0, #0]
 8016036:	4632      	mov	r2, r6
 8016038:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801603a:	4639      	mov	r1, r7
 801603c:	4798      	blx	r3
 801603e:	7b73      	ldrb	r3, [r6, #13]
 8016040:	005b      	lsls	r3, r3, #1
 8016042:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016046:	7ab3      	ldrb	r3, [r6, #10]
 8016048:	4313      	orrs	r3, r2
 801604a:	4418      	add	r0, r3
 801604c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8016050:	4418      	add	r0, r3
 8016052:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8016056:	2600      	movs	r6, #0
 8016058:	4637      	mov	r7, r6
 801605a:	a806      	add	r0, sp, #24
 801605c:	f002 fbba 	bl	80187d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8016060:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8016064:	9b03      	ldr	r3, [sp, #12]
 8016066:	4286      	cmp	r6, r0
 8016068:	eba9 0903 	sub.w	r9, r9, r3
 801606c:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8016070:	bfb8      	it	lt
 8016072:	4606      	movlt	r6, r0
 8016074:	3701      	adds	r7, #1
 8016076:	b236      	sxth	r6, r6
 8016078:	b2bf      	uxth	r7, r7
 801607a:	fa0f f989 	sxth.w	r9, r9
 801607e:	2b00      	cmp	r3, #0
 8016080:	f43f af0d 	beq.w	8015e9e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8016084:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8016088:	2b00      	cmp	r3, #0
 801608a:	f47f af08 	bne.w	8015e9e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801608e:	7a2b      	ldrb	r3, [r5, #8]
 8016090:	444b      	add	r3, r9
 8016092:	2b00      	cmp	r3, #0
 8016094:	dce1      	bgt.n	801605a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8016096:	e702      	b.n	8015e9e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8016098:	200022a8 	.word	0x200022a8
 801609c:	200022a4 	.word	0x200022a4
 80160a0:	200022ac 	.word	0x200022ac
 80160a4:	200022b0 	.word	0x200022b0
 80160a8:	ebaa 0606 	sub.w	r6, sl, r6
 80160ac:	2002      	movs	r0, #2
 80160ae:	fb96 f6f0 	sdiv	r6, r6, r0
 80160b2:	e71d      	b.n	8015ef0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80160b4:	441e      	add	r6, r3
 80160b6:	ebaa 0606 	sub.w	r6, sl, r6
 80160ba:	e719      	b.n	8015ef0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80160bc:	8925      	ldrh	r5, [r4, #8]
 80160be:	1aed      	subs	r5, r5, r3
 80160c0:	eba5 050a 	sub.w	r5, r5, sl
 80160c4:	fa0f fb85 	sxth.w	fp, r5
 80160c8:	8965      	ldrh	r5, [r4, #10]
 80160ca:	eba5 0509 	sub.w	r5, r5, r9
 80160ce:	b22d      	sxth	r5, r5
 80160d0:	e72e      	b.n	8015f30 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80160d2:	8965      	ldrh	r5, [r4, #10]
 80160d4:	1aed      	subs	r5, r5, r3
 80160d6:	eba5 050a 	sub.w	r5, r5, sl
 80160da:	4633      	mov	r3, r6
 80160dc:	b22d      	sxth	r5, r5
 80160de:	463e      	mov	r6, r7
 80160e0:	f04f 0b00 	mov.w	fp, #0
 80160e4:	461f      	mov	r7, r3
 80160e6:	e723      	b.n	8015f30 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80160e8:	2500      	movs	r5, #0
 80160ea:	e721      	b.n	8015f30 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

080160ec <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 80160ec:	b513      	push	{r0, r1, r4, lr}
 80160ee:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 80160f2:	4604      	mov	r4, r0
 80160f4:	b1fb      	cbz	r3, 8016136 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80160f6:	4b16      	ldr	r3, [pc, #88]	; (8016150 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 80160f8:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80160fa:	881b      	ldrh	r3, [r3, #0]
 80160fc:	428b      	cmp	r3, r1
 80160fe:	d91a      	bls.n	8016136 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8016100:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8016104:	2b00      	cmp	r3, #0
 8016106:	dd16      	ble.n	8016136 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8016108:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801610c:	2b00      	cmp	r3, #0
 801610e:	dd12      	ble.n	8016136 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8016110:	4b10      	ldr	r3, [pc, #64]	; (8016154 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8016112:	6818      	ldr	r0, [r3, #0]
 8016114:	f7f9 ffe6 	bl	80100e4 <_ZNK8touchgfx5Texts7getTextEt>
 8016118:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 801611c:	6822      	ldr	r2, [r4, #0]
 801611e:	2b00      	cmp	r3, #0
 8016120:	db06      	blt.n	8016130 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8016122:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8016126:	2b00      	cmp	r3, #0
 8016128:	db02      	blt.n	8016130 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801612a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801612c:	4298      	cmp	r0, r3
 801612e:	d004      	beq.n	801613a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8016130:	6953      	ldr	r3, [r2, #20]
 8016132:	4620      	mov	r0, r4
 8016134:	4798      	blx	r3
 8016136:	b002      	add	sp, #8
 8016138:	bd10      	pop	{r4, pc}
 801613a:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 801613e:	c903      	ldmia	r1, {r0, r1}
 8016140:	466b      	mov	r3, sp
 8016142:	e883 0003 	stmia.w	r3, {r0, r1}
 8016146:	6912      	ldr	r2, [r2, #16]
 8016148:	4619      	mov	r1, r3
 801614a:	4620      	mov	r0, r4
 801614c:	4790      	blx	r2
 801614e:	e7f2      	b.n	8016136 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8016150:	200022a8 	.word	0x200022a8
 8016154:	200022b0 	.word	0x200022b0

08016158 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8016158:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801615c:	4b44      	ldr	r3, [pc, #272]	; (8016270 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 801615e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8016160:	881b      	ldrh	r3, [r3, #0]
 8016162:	4293      	cmp	r3, r2
 8016164:	b08e      	sub	sp, #56	; 0x38
 8016166:	4604      	mov	r4, r0
 8016168:	d97e      	bls.n	8016268 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801616a:	6808      	ldr	r0, [r1, #0]
 801616c:	4d41      	ldr	r5, [pc, #260]	; (8016274 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 801616e:	6849      	ldr	r1, [r1, #4]
 8016170:	ab05      	add	r3, sp, #20
 8016172:	c303      	stmia	r3!, {r0, r1}
 8016174:	4611      	mov	r1, r2
 8016176:	6828      	ldr	r0, [r5, #0]
 8016178:	f7f9 ffb4 	bl	80100e4 <_ZNK8touchgfx5Texts7getTextEt>
 801617c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8016180:	2b00      	cmp	r3, #0
 8016182:	db11      	blt.n	80161a8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8016184:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8016188:	2b00      	cmp	r3, #0
 801618a:	db0d      	blt.n	80161a8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801618c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801618e:	4298      	cmp	r0, r3
 8016190:	d10a      	bne.n	80161a8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8016192:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8016196:	e892 0003 	ldmia.w	r2, {r0, r1}
 801619a:	ab09      	add	r3, sp, #36	; 0x24
 801619c:	e883 0003 	stmia.w	r3, {r0, r1}
 80161a0:	4619      	mov	r1, r3
 80161a2:	a805      	add	r0, sp, #20
 80161a4:	f7fd f8c4 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 80161a8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80161ac:	2b00      	cmp	r3, #0
 80161ae:	dd5b      	ble.n	8016268 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80161b0:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80161b4:	2b00      	cmp	r3, #0
 80161b6:	dd57      	ble.n	8016268 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80161b8:	4f2f      	ldr	r7, [pc, #188]	; (8016278 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80161ba:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80161bc:	683b      	ldr	r3, [r7, #0]
 80161be:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80161c2:	4b2e      	ldr	r3, [pc, #184]	; (801627c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80161c4:	681b      	ldr	r3, [r3, #0]
 80161c6:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80161ca:	2e00      	cmp	r6, #0
 80161cc:	d04c      	beq.n	8016268 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80161ce:	6823      	ldr	r3, [r4, #0]
 80161d0:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 80161d4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80161d6:	4620      	mov	r0, r4
 80161d8:	4798      	blx	r3
 80161da:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80161dc:	683b      	ldr	r3, [r7, #0]
 80161de:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 80161e2:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 80161e6:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 80161ea:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80161ec:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80161f0:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 80161f4:	785b      	ldrb	r3, [r3, #1]
 80161f6:	9609      	str	r6, [sp, #36]	; 0x24
 80161f8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80161fc:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8016200:	4b1f      	ldr	r3, [pc, #124]	; (8016280 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8016202:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8016206:	681b      	ldr	r3, [r3, #0]
 8016208:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 801620c:	910b      	str	r1, [sp, #44]	; 0x2c
 801620e:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8016212:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8016216:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 801621a:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 801621e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8016222:	b10a      	cbz	r2, 8016228 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8016224:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8016226:	b906      	cbnz	r6, 801622a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8016228:	689e      	ldr	r6, [r3, #8]
 801622a:	af07      	add	r7, sp, #28
 801622c:	4621      	mov	r1, r4
 801622e:	4638      	mov	r0, r7
 8016230:	f004 f9d4 	bl	801a5dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016234:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8016236:	6828      	ldr	r0, [r5, #0]
 8016238:	f7f9 ff54 	bl	80100e4 <_ZNK8touchgfx5Texts7getTextEt>
 801623c:	6823      	ldr	r3, [r4, #0]
 801623e:	4605      	mov	r5, r0
 8016240:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8016242:	4620      	mov	r0, r4
 8016244:	4798      	blx	r3
 8016246:	6823      	ldr	r3, [r4, #0]
 8016248:	4680      	mov	r8, r0
 801624a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801624e:	4620      	mov	r0, r4
 8016250:	4798      	blx	r3
 8016252:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8016256:	ab09      	add	r3, sp, #36	; 0x24
 8016258:	9300      	str	r3, [sp, #0]
 801625a:	9501      	str	r5, [sp, #4]
 801625c:	ab05      	add	r3, sp, #20
 801625e:	e897 0006 	ldmia.w	r7, {r1, r2}
 8016262:	4630      	mov	r0, r6
 8016264:	f7f9 fecf 	bl	8010006 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8016268:	b00e      	add	sp, #56	; 0x38
 801626a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801626e:	bf00      	nop
 8016270:	200022a8 	.word	0x200022a8
 8016274:	200022b0 	.word	0x200022b0
 8016278:	200022a4 	.word	0x200022a4
 801627c:	200022ac 	.word	0x200022ac
 8016280:	2000224c 	.word	0x2000224c

08016284 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8016284:	b538      	push	{r3, r4, r5, lr}
 8016286:	4b0e      	ldr	r3, [pc, #56]	; (80162c0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8016288:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801628a:	881b      	ldrh	r3, [r3, #0]
 801628c:	429a      	cmp	r2, r3
 801628e:	4604      	mov	r4, r0
 8016290:	d214      	bcs.n	80162bc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8016292:	6803      	ldr	r3, [r0, #0]
 8016294:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8016296:	4798      	blx	r3
 8016298:	6823      	ldr	r3, [r4, #0]
 801629a:	4605      	mov	r5, r0
 801629c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801629e:	4620      	mov	r0, r4
 80162a0:	4798      	blx	r3
 80162a2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80162a6:	b22d      	sxth	r5, r5
 80162a8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80162ac:	4601      	mov	r1, r0
 80162ae:	bf06      	itte	eq
 80162b0:	4602      	moveq	r2, r0
 80162b2:	4629      	moveq	r1, r5
 80162b4:	462a      	movne	r2, r5
 80162b6:	4620      	mov	r0, r4
 80162b8:	f7f3 fe31 	bl	8009f1e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80162bc:	bd38      	pop	{r3, r4, r5, pc}
 80162be:	bf00      	nop
 80162c0:	200022a8 	.word	0x200022a8

080162c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80162c4:	b530      	push	{r4, r5, lr}
 80162c6:	888b      	ldrh	r3, [r1, #4]
 80162c8:	8583      	strh	r3, [r0, #44]	; 0x2c
 80162ca:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80162ce:	b085      	sub	sp, #20
 80162d0:	4604      	mov	r4, r0
 80162d2:	b923      	cbnz	r3, 80162de <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80162d4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80162d8:	b90b      	cbnz	r3, 80162de <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80162da:	f7ff ffd3 	bl	8016284 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80162de:	6823      	ldr	r3, [r4, #0]
 80162e0:	466d      	mov	r5, sp
 80162e2:	4621      	mov	r1, r4
 80162e4:	4628      	mov	r0, r5
 80162e6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80162ea:	4798      	blx	r3
 80162ec:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80162f0:	343c      	adds	r4, #60	; 0x3c
 80162f2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80162f6:	b005      	add	sp, #20
 80162f8:	bd30      	pop	{r4, r5, pc}

080162fa <_ZNK8touchgfx3Box12getSolidRectEv>:
 80162fa:	2300      	movs	r3, #0
 80162fc:	8083      	strh	r3, [r0, #4]
 80162fe:	80c3      	strh	r3, [r0, #6]
 8016300:	8003      	strh	r3, [r0, #0]
 8016302:	8043      	strh	r3, [r0, #2]
 8016304:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8016308:	2bff      	cmp	r3, #255	; 0xff
 801630a:	bf01      	itttt	eq
 801630c:	890b      	ldrheq	r3, [r1, #8]
 801630e:	8083      	strheq	r3, [r0, #4]
 8016310:	894b      	ldrheq	r3, [r1, #10]
 8016312:	80c3      	strheq	r3, [r0, #6]
 8016314:	4770      	bx	lr
	...

08016318 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8016318:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801631a:	4604      	mov	r4, r0
 801631c:	6808      	ldr	r0, [r1, #0]
 801631e:	6849      	ldr	r1, [r1, #4]
 8016320:	466b      	mov	r3, sp
 8016322:	c303      	stmia	r3!, {r0, r1}
 8016324:	6823      	ldr	r3, [r4, #0]
 8016326:	4669      	mov	r1, sp
 8016328:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801632a:	4620      	mov	r0, r4
 801632c:	4798      	blx	r3
 801632e:	4b08      	ldr	r3, [pc, #32]	; (8016350 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8016330:	681b      	ldr	r3, [r3, #0]
 8016332:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8016336:	b10a      	cbz	r2, 801633c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8016338:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801633a:	b900      	cbnz	r0, 801633e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 801633c:	6898      	ldr	r0, [r3, #8]
 801633e:	6803      	ldr	r3, [r0, #0]
 8016340:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8016342:	6a1d      	ldr	r5, [r3, #32]
 8016344:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8016348:	4669      	mov	r1, sp
 801634a:	47a8      	blx	r5
 801634c:	b003      	add	sp, #12
 801634e:	bd30      	pop	{r4, r5, pc}
 8016350:	2000224c 	.word	0x2000224c

08016354 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8016354:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8016358:	b12a      	cbz	r2, 8016366 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801635a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801635e:	b112      	cbz	r2, 8016366 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8016360:	6803      	ldr	r3, [r0, #0]
 8016362:	695b      	ldr	r3, [r3, #20]
 8016364:	4718      	bx	r3
 8016366:	4770      	bx	lr

08016368 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8016368:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 801636c:	600b      	str	r3, [r1, #0]
 801636e:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8016372:	6013      	str	r3, [r2, #0]
 8016374:	4770      	bx	lr

08016376 <_ZN8touchgfx5Gauge8setWidthEs>:
 8016376:	8101      	strh	r1, [r0, #8]
 8016378:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 801637c:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8016380:	4770      	bx	lr

08016382 <_ZN8touchgfx5Gauge9setHeightEs>:
 8016382:	8141      	strh	r1, [r0, #10]
 8016384:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8016388:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 801638c:	4770      	bx	lr

0801638e <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 801638e:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8016392:	4770      	bx	lr

08016394 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8016394:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8016398:	4770      	bx	lr

0801639a <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 801639a:	4770      	bx	lr

0801639c <_ZN8touchgfx5Gauge8setAlphaEh>:
 801639c:	b538      	push	{r3, r4, r5, lr}
 801639e:	4604      	mov	r4, r0
 80163a0:	460d      	mov	r5, r1
 80163a2:	f7fc fb36 	bl	8012a12 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 80163a6:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 80163aa:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 80163ae:	bd38      	pop	{r3, r4, r5, pc}

080163b0 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 80163b0:	b510      	push	{r4, lr}
 80163b2:	6803      	ldr	r3, [r0, #0]
 80163b4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80163b8:	4604      	mov	r4, r0
 80163ba:	4798      	blx	r3
 80163bc:	b170      	cbz	r0, 80163dc <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80163be:	6823      	ldr	r3, [r4, #0]
 80163c0:	4620      	mov	r0, r4
 80163c2:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80163c6:	4798      	blx	r3
 80163c8:	b140      	cbz	r0, 80163dc <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80163ca:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80163ce:	b12b      	cbz	r3, 80163dc <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80163d0:	6823      	ldr	r3, [r4, #0]
 80163d2:	4620      	mov	r0, r4
 80163d4:	695b      	ldr	r3, [r3, #20]
 80163d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80163da:	4718      	bx	r3
 80163dc:	bd10      	pop	{r4, pc}
	...

080163e0 <_ZN8touchgfx5GaugeC1Ev>:
 80163e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80163e2:	4604      	mov	r4, r0
 80163e4:	4626      	mov	r6, r4
 80163e6:	f7fc fc07 	bl	8012bf8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 80163ea:	4b18      	ldr	r3, [pc, #96]	; (801644c <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 80163ec:	f846 3bb4 	str.w	r3, [r6], #180
 80163f0:	a902      	add	r1, sp, #8
 80163f2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80163f6:	f821 3d04 	strh.w	r3, [r1, #-4]!
 80163fa:	4630      	mov	r0, r6
 80163fc:	f7fe fe90 	bl	8015120 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8016400:	2500      	movs	r5, #0
 8016402:	2301      	movs	r3, #1
 8016404:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8016408:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 801640c:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8016410:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8016414:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8016418:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 801641c:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8016420:	4638      	mov	r0, r7
 8016422:	f7fd fff9 	bl	8014418 <_ZN8touchgfx6CircleC1Ev>
 8016426:	f104 0158 	add.w	r1, r4, #88	; 0x58
 801642a:	4620      	mov	r0, r4
 801642c:	f7fc fe3b 	bl	80130a6 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8016430:	4639      	mov	r1, r7
 8016432:	4620      	mov	r0, r4
 8016434:	f7fc fdfe 	bl	8013034 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8016438:	4620      	mov	r0, r4
 801643a:	4631      	mov	r1, r6
 801643c:	f7fc fdfa 	bl	8013034 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8016440:	4620      	mov	r0, r4
 8016442:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8016446:	b003      	add	sp, #12
 8016448:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801644a:	bf00      	nop
 801644c:	0802f644 	.word	0x0802f644

08016450 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8016450:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8016454:	4770      	bx	lr

08016456 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8016456:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 801645a:	4770      	bx	lr

0801645c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 801645c:	b538      	push	{r3, r4, r5, lr}
 801645e:	8902      	ldrh	r2, [r0, #8]
 8016460:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8016464:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8016468:	4604      	mov	r4, r0
 801646a:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 801646e:	2200      	movs	r2, #0
 8016470:	4611      	mov	r1, r2
 8016472:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8016476:	4628      	mov	r0, r5
 8016478:	f7f3 fcf5 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
 801647c:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8016480:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8016484:	1a9b      	subs	r3, r3, r2
 8016486:	ee07 3a90 	vmov	s15, r3
 801648a:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 801648e:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8016492:	1a9b      	subs	r3, r3, r2
 8016494:	ee07 3a10 	vmov	s14, r3
 8016498:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801649c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80164a0:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 80164a4:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 80164a8:	4628      	mov	r0, r5
 80164aa:	f7fe fe85 	bl	80151b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80164ae:	4b16      	ldr	r3, [pc, #88]	; (8016508 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 80164b0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 80164b4:	4628      	mov	r0, r5
 80164b6:	f7fe fe7f 	bl	80151b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80164ba:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 80164be:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 80164c2:	ee07 3a90 	vmov	s15, r3
 80164c6:	ee07 2a10 	vmov	s14, r2
 80164ca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80164ce:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80164d2:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 80164d6:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 80164da:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 80164de:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80164e2:	4628      	mov	r0, r5
 80164e4:	f7fe fe68 	bl	80151b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80164e8:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 80164ec:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 80164f0:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80164f4:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 80164f8:	4628      	mov	r0, r5
 80164fa:	f7fe fe5d 	bl	80151b8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80164fe:	2301      	movs	r3, #1
 8016500:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8016504:	bd38      	pop	{r3, r4, r5, pc}
 8016506:	bf00      	nop
 8016508:	43960000 	.word	0x43960000

0801650c <_ZN8touchgfx5Gauge9setNeedleEtss>:
 801650c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801650e:	4604      	mov	r4, r0
 8016510:	a802      	add	r0, sp, #8
 8016512:	4616      	mov	r6, r2
 8016514:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8016518:	461d      	mov	r5, r3
 801651a:	4601      	mov	r1, r0
 801651c:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8016520:	f7fe ffa0 	bl	8015464 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8016524:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8016528:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 801652c:	4620      	mov	r0, r4
 801652e:	f7ff ff95 	bl	801645c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8016532:	b002      	add	sp, #8
 8016534:	bd70      	pop	{r4, r5, r6, pc}

08016536 <_ZN8touchgfx5Gauge9setCenterEii>:
 8016536:	b570      	push	{r4, r5, r6, lr}
 8016538:	4606      	mov	r6, r0
 801653a:	460d      	mov	r5, r1
 801653c:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8016540:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8016544:	4614      	mov	r4, r2
 8016546:	f7ff ff89 	bl	801645c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 801654a:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 801654e:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8016552:	1aa4      	subs	r4, r4, r2
 8016554:	1a6d      	subs	r5, r5, r1
 8016556:	0164      	lsls	r4, r4, #5
 8016558:	016d      	lsls	r5, r5, #5
 801655a:	3410      	adds	r4, #16
 801655c:	3510      	adds	r5, #16
 801655e:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8016562:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8016566:	bd70      	pop	{r4, r5, r6, pc}

08016568 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8016568:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801656a:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 801656c:	0149      	lsls	r1, r1, #5
 801656e:	4299      	cmp	r1, r3
 8016570:	4604      	mov	r4, r0
 8016572:	9101      	str	r1, [sp, #4]
 8016574:	d00b      	beq.n	801658e <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8016576:	4601      	mov	r1, r0
 8016578:	aa01      	add	r2, sp, #4
 801657a:	a802      	add	r0, sp, #8
 801657c:	f7fe f94a 	bl	8014814 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8016580:	9b01      	ldr	r3, [sp, #4]
 8016582:	63e3      	str	r3, [r4, #60]	; 0x3c
 8016584:	6823      	ldr	r3, [r4, #0]
 8016586:	a902      	add	r1, sp, #8
 8016588:	691b      	ldr	r3, [r3, #16]
 801658a:	4620      	mov	r0, r4
 801658c:	4798      	blx	r3
 801658e:	b004      	add	sp, #16
 8016590:	bd10      	pop	{r4, pc}
	...

08016594 <_ZN8touchgfx5Gauge8setValueEi>:
 8016594:	b570      	push	{r4, r5, r6, lr}
 8016596:	4604      	mov	r4, r0
 8016598:	f7fc fa86 	bl	8012aa8 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 801659c:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 80165a0:	429a      	cmp	r2, r3
 80165a2:	bfac      	ite	ge
 80165a4:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 80165a8:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 80165ac:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 80165b0:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 80165b4:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 80165b8:	1ac9      	subs	r1, r1, r3
 80165ba:	2900      	cmp	r1, #0
 80165bc:	bfb8      	it	lt
 80165be:	4249      	neglt	r1, r1
 80165c0:	b289      	uxth	r1, r1
 80165c2:	4620      	mov	r0, r4
 80165c4:	f7fc fa92 	bl	8012aec <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 80165c8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 80165cc:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80165d0:	eddf 6a19 	vldr	s13, [pc, #100]	; 8016638 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 80165d4:	ed9f 7a19 	vldr	s14, [pc, #100]	; 801663c <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 80165d8:	429a      	cmp	r2, r3
 80165da:	4605      	mov	r5, r0
 80165dc:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 80165e0:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 80165e4:	da15      	bge.n	8016612 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 80165e6:	1b5b      	subs	r3, r3, r5
 80165e8:	ee07 3a90 	vmov	s15, r3
 80165ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80165f0:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 80165f4:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 80165f8:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 80165fc:	ee21 1a07 	vmul.f32	s2, s2, s14
 8016600:	f7fe fd50 	bl	80150a4 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8016604:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8016608:	1b49      	subs	r1, r1, r5
 801660a:	4630      	mov	r0, r6
 801660c:	f7ff ffac 	bl	8016568 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8016610:	bd70      	pop	{r4, r5, r6, pc}
 8016612:	442b      	add	r3, r5
 8016614:	ee07 3a90 	vmov	s15, r3
 8016618:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801661c:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8016620:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8016624:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8016628:	ee21 1a07 	vmul.f32	s2, s2, s14
 801662c:	f7fe fd3a 	bl	80150a4 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8016630:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8016634:	4429      	add	r1, r5
 8016636:	e7e8      	b.n	801660a <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8016638:	43340000 	.word	0x43340000
 801663c:	40490fdb 	.word	0x40490fdb

08016640 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8016640:	b510      	push	{r4, lr}
 8016642:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8016646:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 801664a:	0149      	lsls	r1, r1, #5
 801664c:	0152      	lsls	r2, r2, #5
 801664e:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8016652:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8016656:	4604      	mov	r4, r0
 8016658:	f7fc f9d8 	bl	8012a0c <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 801665c:	4601      	mov	r1, r0
 801665e:	4620      	mov	r0, r4
 8016660:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016664:	f7ff bf96 	b.w	8016594 <_ZN8touchgfx5Gauge8setValueEi>

08016668 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8016668:	b570      	push	{r4, r5, r6, lr}
 801666a:	880b      	ldrh	r3, [r1, #0]
 801666c:	85c3      	strh	r3, [r0, #46]	; 0x2e
 801666e:	4605      	mov	r5, r0
 8016670:	8813      	ldrh	r3, [r2, #0]
 8016672:	f825 3f30 	strh.w	r3, [r5, #48]!
 8016676:	4604      	mov	r4, r0
 8016678:	4628      	mov	r0, r5
 801667a:	f006 f955 	bl	801c928 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801667e:	4606      	mov	r6, r0
 8016680:	4628      	mov	r0, r5
 8016682:	f006 f985 	bl	801c990 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016686:	6823      	ldr	r3, [r4, #0]
 8016688:	4605      	mov	r5, r0
 801668a:	4631      	mov	r1, r6
 801668c:	4620      	mov	r0, r4
 801668e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016690:	4798      	blx	r3
 8016692:	6823      	ldr	r3, [r4, #0]
 8016694:	4629      	mov	r1, r5
 8016696:	4620      	mov	r0, r4
 8016698:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801669a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801669e:	4718      	bx	r3

080166a0 <_ZNK8touchgfx6Button12getSolidRectEv>:
 80166a0:	b510      	push	{r4, lr}
 80166a2:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 80166a6:	2bff      	cmp	r3, #255	; 0xff
 80166a8:	4604      	mov	r4, r0
 80166aa:	d006      	beq.n	80166ba <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80166ac:	2300      	movs	r3, #0
 80166ae:	8003      	strh	r3, [r0, #0]
 80166b0:	8043      	strh	r3, [r0, #2]
 80166b2:	8083      	strh	r3, [r0, #4]
 80166b4:	80c3      	strh	r3, [r0, #6]
 80166b6:	4620      	mov	r0, r4
 80166b8:	bd10      	pop	{r4, pc}
 80166ba:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 80166be:	b11b      	cbz	r3, 80166c8 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 80166c0:	3130      	adds	r1, #48	; 0x30
 80166c2:	f006 f999 	bl	801c9f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80166c6:	e7f6      	b.n	80166b6 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 80166c8:	312e      	adds	r1, #46	; 0x2e
 80166ca:	e7fa      	b.n	80166c2 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

080166cc <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 80166cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80166d0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80166d4:	b08a      	sub	sp, #40	; 0x28
 80166d6:	4604      	mov	r4, r0
 80166d8:	4688      	mov	r8, r1
 80166da:	2b00      	cmp	r3, #0
 80166dc:	d066      	beq.n	80167ac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 80166de:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80166e0:	f8ad 3014 	strh.w	r3, [sp, #20]
 80166e4:	a805      	add	r0, sp, #20
 80166e6:	f006 f91f 	bl	801c928 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80166ea:	4607      	mov	r7, r0
 80166ec:	a805      	add	r0, sp, #20
 80166ee:	f006 f94f 	bl	801c990 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80166f2:	f9b8 6000 	ldrsh.w	r6, [r8]
 80166f6:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 80166fa:	4432      	add	r2, r6
 80166fc:	b292      	uxth	r2, r2
 80166fe:	2300      	movs	r3, #0
 8016700:	fa0f fc82 	sxth.w	ip, r2
 8016704:	459c      	cmp	ip, r3
 8016706:	9306      	str	r3, [sp, #24]
 8016708:	dd52      	ble.n	80167b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801670a:	42b7      	cmp	r7, r6
 801670c:	dd50      	ble.n	80167b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801670e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8016712:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8016716:	442b      	add	r3, r5
 8016718:	b29b      	uxth	r3, r3
 801671a:	b219      	sxth	r1, r3
 801671c:	2900      	cmp	r1, #0
 801671e:	dd47      	ble.n	80167b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8016720:	42a8      	cmp	r0, r5
 8016722:	dd45      	ble.n	80167b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8016724:	4567      	cmp	r7, ip
 8016726:	bfb8      	it	lt
 8016728:	b2ba      	uxthlt	r2, r7
 801672a:	4288      	cmp	r0, r1
 801672c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8016730:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8016734:	bfb8      	it	lt
 8016736:	b283      	uxthlt	r3, r0
 8016738:	1b92      	subs	r2, r2, r6
 801673a:	1b5b      	subs	r3, r3, r5
 801673c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8016740:	f8ad 301e 	strh.w	r3, [sp, #30]
 8016744:	f8ad 6018 	strh.w	r6, [sp, #24]
 8016748:	f8ad 501a 	strh.w	r5, [sp, #26]
 801674c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8016750:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8016754:	429a      	cmp	r2, r3
 8016756:	d026      	beq.n	80167a6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8016758:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801675c:	2b00      	cmp	r3, #0
 801675e:	dd22      	ble.n	80167a6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8016760:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8016764:	2b00      	cmp	r3, #0
 8016766:	dd1e      	ble.n	80167a6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8016768:	2300      	movs	r3, #0
 801676a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801676e:	6823      	ldr	r3, [r4, #0]
 8016770:	a908      	add	r1, sp, #32
 8016772:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016774:	4620      	mov	r0, r4
 8016776:	4798      	blx	r3
 8016778:	4b0f      	ldr	r3, [pc, #60]	; (80167b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 801677a:	681b      	ldr	r3, [r3, #0]
 801677c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8016780:	b10a      	cbz	r2, 8016786 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8016782:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8016784:	b900      	cbnz	r0, 8016788 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8016786:	6898      	ldr	r0, [r3, #8]
 8016788:	6801      	ldr	r1, [r0, #0]
 801678a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801678e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8016792:	2501      	movs	r5, #1
 8016794:	9502      	str	r5, [sp, #8]
 8016796:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 801679a:	9401      	str	r4, [sp, #4]
 801679c:	ac06      	add	r4, sp, #24
 801679e:	9400      	str	r4, [sp, #0]
 80167a0:	688c      	ldr	r4, [r1, #8]
 80167a2:	a905      	add	r1, sp, #20
 80167a4:	47a0      	blx	r4
 80167a6:	b00a      	add	sp, #40	; 0x28
 80167a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80167ac:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80167ae:	e797      	b.n	80166e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80167b0:	2300      	movs	r3, #0
 80167b2:	9307      	str	r3, [sp, #28]
 80167b4:	e7ca      	b.n	801674c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 80167b6:	bf00      	nop
 80167b8:	2000224c 	.word	0x2000224c

080167bc <_ZNK8touchgfx6Button17invalidateContentEv>:
 80167bc:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 80167c0:	b12a      	cbz	r2, 80167ce <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80167c2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80167c6:	b112      	cbz	r2, 80167ce <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80167c8:	6803      	ldr	r3, [r0, #0]
 80167ca:	695b      	ldr	r3, [r3, #20]
 80167cc:	4718      	bx	r3
 80167ce:	4770      	bx	lr

080167d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 80167d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80167d4:	4b2f      	ldr	r3, [pc, #188]	; (8016894 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 80167d6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80167d8:	881b      	ldrh	r3, [r3, #0]
 80167da:	4293      	cmp	r3, r2
 80167dc:	b08d      	sub	sp, #52	; 0x34
 80167de:	4604      	mov	r4, r0
 80167e0:	460f      	mov	r7, r1
 80167e2:	d954      	bls.n	801688e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80167e4:	4b2c      	ldr	r3, [pc, #176]	; (8016898 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 80167e6:	6819      	ldr	r1, [r3, #0]
 80167e8:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 80167ec:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 80167f0:	4a2a      	ldr	r2, [pc, #168]	; (801689c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 80167f2:	6812      	ldr	r2, [r2, #0]
 80167f4:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80167f8:	2900      	cmp	r1, #0
 80167fa:	d048      	beq.n	801688e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80167fc:	785a      	ldrb	r2, [r3, #1]
 80167fe:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8016802:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8016806:	4b26      	ldr	r3, [pc, #152]	; (80168a0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8016808:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 801680c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8016810:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8016814:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8016816:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 801681a:	9107      	str	r1, [sp, #28]
 801681c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8016820:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8016824:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8016828:	681a      	ldr	r2, [r3, #0]
 801682a:	f88d 8020 	strb.w	r8, [sp, #32]
 801682e:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8016832:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8016836:	9609      	str	r6, [sp, #36]	; 0x24
 8016838:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 801683c:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8016840:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8016844:	b10b      	cbz	r3, 801684a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8016846:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8016848:	b905      	cbnz	r5, 801684c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 801684a:	6895      	ldr	r5, [r2, #8]
 801684c:	ae05      	add	r6, sp, #20
 801684e:	4621      	mov	r1, r4
 8016850:	4630      	mov	r0, r6
 8016852:	f003 fec3 	bl	801a5dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016856:	4b13      	ldr	r3, [pc, #76]	; (80168a4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8016858:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801685a:	6818      	ldr	r0, [r3, #0]
 801685c:	f7f9 fc42 	bl	80100e4 <_ZNK8touchgfx5Texts7getTextEt>
 8016860:	6823      	ldr	r3, [r4, #0]
 8016862:	4680      	mov	r8, r0
 8016864:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8016866:	4620      	mov	r0, r4
 8016868:	4798      	blx	r3
 801686a:	6823      	ldr	r3, [r4, #0]
 801686c:	4681      	mov	r9, r0
 801686e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8016872:	4620      	mov	r0, r4
 8016874:	4798      	blx	r3
 8016876:	e9cd 9002 	strd	r9, r0, [sp, #8]
 801687a:	ab07      	add	r3, sp, #28
 801687c:	9300      	str	r3, [sp, #0]
 801687e:	f8cd 8004 	str.w	r8, [sp, #4]
 8016882:	463b      	mov	r3, r7
 8016884:	e896 0006 	ldmia.w	r6, {r1, r2}
 8016888:	4628      	mov	r0, r5
 801688a:	f7f9 fbbc 	bl	8010006 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801688e:	b00d      	add	sp, #52	; 0x34
 8016890:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016894:	200022a8 	.word	0x200022a8
 8016898:	200022a4 	.word	0x200022a4
 801689c:	200022ac 	.word	0x200022ac
 80168a0:	2000224c 	.word	0x2000224c
 80168a4:	200022b0 	.word	0x200022b0

080168a8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 80168a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80168ac:	4604      	mov	r4, r0
 80168ae:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80168b0:	8962      	ldrh	r2, [r4, #10]
 80168b2:	b218      	sxth	r0, r3
 80168b4:	460e      	mov	r6, r1
 80168b6:	005b      	lsls	r3, r3, #1
 80168b8:	8921      	ldrh	r1, [r4, #8]
 80168ba:	b29b      	uxth	r3, r3
 80168bc:	1ac9      	subs	r1, r1, r3
 80168be:	b08e      	sub	sp, #56	; 0x38
 80168c0:	b209      	sxth	r1, r1
 80168c2:	1ad3      	subs	r3, r2, r3
 80168c4:	b21b      	sxth	r3, r3
 80168c6:	2900      	cmp	r1, #0
 80168c8:	f8ad 0000 	strh.w	r0, [sp]
 80168cc:	f8ad 0002 	strh.w	r0, [sp, #2]
 80168d0:	f8ad 1004 	strh.w	r1, [sp, #4]
 80168d4:	f8ad 3006 	strh.w	r3, [sp, #6]
 80168d8:	dd5e      	ble.n	8016998 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 80168da:	2b00      	cmp	r3, #0
 80168dc:	dd5c      	ble.n	8016998 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 80168de:	6830      	ldr	r0, [r6, #0]
 80168e0:	6871      	ldr	r1, [r6, #4]
 80168e2:	ab02      	add	r3, sp, #8
 80168e4:	c303      	stmia	r3!, {r0, r1}
 80168e6:	4669      	mov	r1, sp
 80168e8:	a802      	add	r0, sp, #8
 80168ea:	f7fc fd21 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 80168ee:	4620      	mov	r0, r4
 80168f0:	a902      	add	r1, sp, #8
 80168f2:	f7ff fd11 	bl	8016318 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 80168f6:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 80168f8:	2800      	cmp	r0, #0
 80168fa:	d05f      	beq.n	80169bc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 80168fc:	8963      	ldrh	r3, [r4, #10]
 80168fe:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8016902:	f8ad 101c 	strh.w	r1, [sp, #28]
 8016906:	1a1f      	subs	r7, r3, r0
 8016908:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 801690c:	b202      	sxth	r2, r0
 801690e:	2500      	movs	r5, #0
 8016910:	b21b      	sxth	r3, r3
 8016912:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 8016916:	1a09      	subs	r1, r1, r0
 8016918:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801691c:	9506      	str	r5, [sp, #24]
 801691e:	f8ad 201e 	strh.w	r2, [sp, #30]
 8016922:	f8ad 5020 	strh.w	r5, [sp, #32]
 8016926:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 801692a:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 801692e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8016932:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8016936:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801693a:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 801693e:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8016942:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8016946:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801694a:	af04      	add	r7, sp, #16
 801694c:	ab06      	add	r3, sp, #24
 801694e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016952:	e893 0003 	ldmia.w	r3, {r0, r1}
 8016956:	e887 0003 	stmia.w	r7, {r0, r1}
 801695a:	4631      	mov	r1, r6
 801695c:	4638      	mov	r0, r7
 801695e:	f7fc fce7 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 8016962:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8016966:	2b00      	cmp	r3, #0
 8016968:	dd12      	ble.n	8016990 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 801696a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801696e:	2b00      	cmp	r3, #0
 8016970:	dd0e      	ble.n	8016990 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8016972:	6823      	ldr	r3, [r4, #0]
 8016974:	4639      	mov	r1, r7
 8016976:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016978:	4620      	mov	r0, r4
 801697a:	4798      	blx	r3
 801697c:	f7f4 fb40 	bl	800b000 <_ZN8touchgfx3HAL3lcdEv>
 8016980:	6803      	ldr	r3, [r0, #0]
 8016982:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8016984:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8016988:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 801698c:	4639      	mov	r1, r7
 801698e:	47c0      	blx	r8
 8016990:	3501      	adds	r5, #1
 8016992:	2d04      	cmp	r5, #4
 8016994:	d1da      	bne.n	801694c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 8016996:	e011      	b.n	80169bc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8016998:	6830      	ldr	r0, [r6, #0]
 801699a:	6871      	ldr	r1, [r6, #4]
 801699c:	ab06      	add	r3, sp, #24
 801699e:	c303      	stmia	r3!, {r0, r1}
 80169a0:	6823      	ldr	r3, [r4, #0]
 80169a2:	a906      	add	r1, sp, #24
 80169a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80169a6:	4620      	mov	r0, r4
 80169a8:	4798      	blx	r3
 80169aa:	f7f4 fb29 	bl	800b000 <_ZN8touchgfx3HAL3lcdEv>
 80169ae:	6803      	ldr	r3, [r0, #0]
 80169b0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80169b2:	6a1d      	ldr	r5, [r3, #32]
 80169b4:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80169b8:	a906      	add	r1, sp, #24
 80169ba:	47a8      	blx	r5
 80169bc:	b00e      	add	sp, #56	; 0x38
 80169be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080169c2 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 80169c2:	4770      	bx	lr

080169c4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 80169c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80169c8:	461c      	mov	r4, r3
 80169ca:	4606      	mov	r6, r0
 80169cc:	9f06      	ldr	r7, [sp, #24]
 80169ce:	f7ff fe4b 	bl	8016668 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80169d2:	8823      	ldrh	r3, [r4, #0]
 80169d4:	86b3      	strh	r3, [r6, #52]	; 0x34
 80169d6:	883b      	ldrh	r3, [r7, #0]
 80169d8:	86f3      	strh	r3, [r6, #54]	; 0x36
 80169da:	4638      	mov	r0, r7
 80169dc:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 80169e0:	f005 ffa2 	bl	801c928 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80169e4:	f04f 0802 	mov.w	r8, #2
 80169e8:	fb95 f5f8 	sdiv	r5, r5, r8
 80169ec:	b2ad      	uxth	r5, r5
 80169ee:	fb90 f0f8 	sdiv	r0, r0, r8
 80169f2:	1a2d      	subs	r5, r5, r0
 80169f4:	8735      	strh	r5, [r6, #56]	; 0x38
 80169f6:	4638      	mov	r0, r7
 80169f8:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 80169fc:	fb94 f4f8 	sdiv	r4, r4, r8
 8016a00:	f005 ffc6 	bl	801c990 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016a04:	b2a4      	uxth	r4, r4
 8016a06:	fb90 f0f8 	sdiv	r0, r0, r8
 8016a0a:	1a24      	subs	r4, r4, r0
 8016a0c:	8774      	strh	r4, [r6, #58]	; 0x3a
 8016a0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08016a14 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8016a14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016a18:	4604      	mov	r4, r0
 8016a1a:	b08c      	sub	sp, #48	; 0x30
 8016a1c:	460d      	mov	r5, r1
 8016a1e:	f7ff fe55 	bl	80166cc <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8016a22:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8016a26:	2b00      	cmp	r3, #0
 8016a28:	d05d      	beq.n	8016ae6 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8016a2a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8016a2c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016a30:	a805      	add	r0, sp, #20
 8016a32:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8016a36:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 8016a3a:	f005 ff75 	bl	801c928 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016a3e:	4606      	mov	r6, r0
 8016a40:	a805      	add	r0, sp, #20
 8016a42:	f005 ffa5 	bl	801c990 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016a46:	6869      	ldr	r1, [r5, #4]
 8016a48:	f8ad 001e 	strh.w	r0, [sp, #30]
 8016a4c:	6828      	ldr	r0, [r5, #0]
 8016a4e:	f8ad 8018 	strh.w	r8, [sp, #24]
 8016a52:	ab08      	add	r3, sp, #32
 8016a54:	ad08      	add	r5, sp, #32
 8016a56:	c303      	stmia	r3!, {r0, r1}
 8016a58:	a906      	add	r1, sp, #24
 8016a5a:	4628      	mov	r0, r5
 8016a5c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8016a60:	f8ad 601c 	strh.w	r6, [sp, #28]
 8016a64:	f7fc fc64 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 8016a68:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8016a6c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8016a70:	429a      	cmp	r2, r3
 8016a72:	d035      	beq.n	8016ae0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8016a74:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8016a78:	2b00      	cmp	r3, #0
 8016a7a:	dd31      	ble.n	8016ae0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8016a7c:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8016a80:	2b00      	cmp	r3, #0
 8016a82:	dd2d      	ble.n	8016ae0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8016a84:	2300      	movs	r3, #0
 8016a86:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8016a8a:	6823      	ldr	r3, [r4, #0]
 8016a8c:	a90a      	add	r1, sp, #40	; 0x28
 8016a8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016a90:	4620      	mov	r0, r4
 8016a92:	4798      	blx	r3
 8016a94:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8016a98:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8016a9a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8016a9e:	1a9b      	subs	r3, r3, r2
 8016aa0:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016aa4:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8016aa6:	1ac9      	subs	r1, r1, r3
 8016aa8:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8016aac:	490f      	ldr	r1, [pc, #60]	; (8016aec <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8016aae:	6809      	ldr	r1, [r1, #0]
 8016ab0:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8016ab4:	b108      	cbz	r0, 8016aba <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8016ab6:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8016ab8:	b900      	cbnz	r0, 8016abc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 8016aba:	6888      	ldr	r0, [r1, #8]
 8016abc:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8016ac0:	440b      	add	r3, r1
 8016ac2:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8016ac6:	2601      	movs	r6, #1
 8016ac8:	440a      	add	r2, r1
 8016aca:	6801      	ldr	r1, [r0, #0]
 8016acc:	9602      	str	r6, [sp, #8]
 8016ace:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8016ad2:	e9cd 5400 	strd	r5, r4, [sp]
 8016ad6:	b21b      	sxth	r3, r3
 8016ad8:	688c      	ldr	r4, [r1, #8]
 8016ada:	b212      	sxth	r2, r2
 8016adc:	a905      	add	r1, sp, #20
 8016ade:	47a0      	blx	r4
 8016ae0:	b00c      	add	sp, #48	; 0x30
 8016ae2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016ae6:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8016ae8:	e7a0      	b.n	8016a2c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8016aea:	bf00      	nop
 8016aec:	2000224c 	.word	0x2000224c

08016af0 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8016af0:	b510      	push	{r4, lr}
 8016af2:	2101      	movs	r1, #1
 8016af4:	2200      	movs	r2, #0
 8016af6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8016afa:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8016afe:	4c0e      	ldr	r4, [pc, #56]	; (8016b38 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8016b00:	8082      	strh	r2, [r0, #4]
 8016b02:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016b06:	80c2      	strh	r2, [r0, #6]
 8016b08:	8102      	strh	r2, [r0, #8]
 8016b0a:	8142      	strh	r2, [r0, #10]
 8016b0c:	8182      	strh	r2, [r0, #12]
 8016b0e:	81c2      	strh	r2, [r0, #14]
 8016b10:	8202      	strh	r2, [r0, #16]
 8016b12:	8242      	strh	r2, [r0, #18]
 8016b14:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8016b18:	61c2      	str	r2, [r0, #28]
 8016b1a:	8402      	strh	r2, [r0, #32]
 8016b1c:	8442      	strh	r2, [r0, #34]	; 0x22
 8016b1e:	6282      	str	r2, [r0, #40]	; 0x28
 8016b20:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8016b24:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8016b26:	8601      	strh	r1, [r0, #48]	; 0x30
 8016b28:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8016b2c:	6004      	str	r4, [r0, #0]
 8016b2e:	8681      	strh	r1, [r0, #52]	; 0x34
 8016b30:	86c1      	strh	r1, [r0, #54]	; 0x36
 8016b32:	8702      	strh	r2, [r0, #56]	; 0x38
 8016b34:	8742      	strh	r2, [r0, #58]	; 0x3a
 8016b36:	bd10      	pop	{r4, pc}
 8016b38:	0802f898 	.word	0x0802f898

08016b3c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8016b3c:	b570      	push	{r4, r5, r6, lr}
 8016b3e:	880b      	ldrh	r3, [r1, #0]
 8016b40:	84c3      	strh	r3, [r0, #38]	; 0x26
 8016b42:	4604      	mov	r4, r0
 8016b44:	4608      	mov	r0, r1
 8016b46:	460d      	mov	r5, r1
 8016b48:	f005 feee 	bl	801c928 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016b4c:	4606      	mov	r6, r0
 8016b4e:	4628      	mov	r0, r5
 8016b50:	f005 ff1e 	bl	801c990 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016b54:	6823      	ldr	r3, [r4, #0]
 8016b56:	4605      	mov	r5, r0
 8016b58:	4631      	mov	r1, r6
 8016b5a:	4620      	mov	r0, r4
 8016b5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016b5e:	4798      	blx	r3
 8016b60:	6823      	ldr	r3, [r4, #0]
 8016b62:	4629      	mov	r1, r5
 8016b64:	4620      	mov	r0, r4
 8016b66:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016b68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016b6c:	4718      	bx	r3

08016b6e <_ZNK8touchgfx5Image12getSolidRectEv>:
 8016b6e:	b510      	push	{r4, lr}
 8016b70:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8016b74:	2bff      	cmp	r3, #255	; 0xff
 8016b76:	4604      	mov	r4, r0
 8016b78:	d006      	beq.n	8016b88 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8016b7a:	2300      	movs	r3, #0
 8016b7c:	8003      	strh	r3, [r0, #0]
 8016b7e:	8043      	strh	r3, [r0, #2]
 8016b80:	8083      	strh	r3, [r0, #4]
 8016b82:	80c3      	strh	r3, [r0, #6]
 8016b84:	4620      	mov	r0, r4
 8016b86:	bd10      	pop	{r4, pc}
 8016b88:	3126      	adds	r1, #38	; 0x26
 8016b8a:	f005 ff35 	bl	801c9f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8016b8e:	e7f9      	b.n	8016b84 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08016b90 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8016b90:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8016b94:	b12a      	cbz	r2, 8016ba2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8016b96:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8016b9a:	b112      	cbz	r2, 8016ba2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8016b9c:	6803      	ldr	r3, [r0, #0]
 8016b9e:	695b      	ldr	r3, [r3, #20]
 8016ba0:	4718      	bx	r3
 8016ba2:	4770      	bx	lr

08016ba4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8016ba4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016ba8:	4604      	mov	r4, r0
 8016baa:	b088      	sub	sp, #32
 8016bac:	f854 3b26 	ldr.w	r3, [r4], #38
 8016bb0:	2500      	movs	r5, #0
 8016bb2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016bb4:	460f      	mov	r7, r1
 8016bb6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8016bba:	a904      	add	r1, sp, #16
 8016bbc:	4606      	mov	r6, r0
 8016bbe:	4798      	blx	r3
 8016bc0:	4620      	mov	r0, r4
 8016bc2:	f005 feb1 	bl	801c928 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016bc6:	4680      	mov	r8, r0
 8016bc8:	4620      	mov	r0, r4
 8016bca:	f005 fee1 	bl	801c990 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016bce:	9506      	str	r5, [sp, #24]
 8016bd0:	ad06      	add	r5, sp, #24
 8016bd2:	f8ad 001e 	strh.w	r0, [sp, #30]
 8016bd6:	4639      	mov	r1, r7
 8016bd8:	4628      	mov	r0, r5
 8016bda:	f8ad 801c 	strh.w	r8, [sp, #28]
 8016bde:	f7fc fba7 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 8016be2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016be6:	2b00      	cmp	r3, #0
 8016be8:	dd19      	ble.n	8016c1e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8016bea:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8016bee:	2b00      	cmp	r3, #0
 8016bf0:	dd15      	ble.n	8016c1e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8016bf2:	4b0c      	ldr	r3, [pc, #48]	; (8016c24 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8016bf4:	681b      	ldr	r3, [r3, #0]
 8016bf6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8016bfa:	b10a      	cbz	r2, 8016c00 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8016bfc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8016bfe:	b900      	cbnz	r0, 8016c02 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8016c00:	6898      	ldr	r0, [r3, #8]
 8016c02:	6801      	ldr	r1, [r0, #0]
 8016c04:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8016c08:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8016c0c:	2701      	movs	r7, #1
 8016c0e:	9702      	str	r7, [sp, #8]
 8016c10:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8016c14:	e9cd 5600 	strd	r5, r6, [sp]
 8016c18:	688d      	ldr	r5, [r1, #8]
 8016c1a:	4621      	mov	r1, r4
 8016c1c:	47a8      	blx	r5
 8016c1e:	b008      	add	sp, #32
 8016c20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016c24:	2000224c 	.word	0x2000224c

08016c28 <_ZN8touchgfx7OutlineD1Ev>:
 8016c28:	4770      	bx	lr

08016c2a <_ZN8touchgfx7OutlineD0Ev>:
 8016c2a:	b510      	push	{r4, lr}
 8016c2c:	2130      	movs	r1, #48	; 0x30
 8016c2e:	4604      	mov	r4, r0
 8016c30:	f013 fdd5 	bl	802a7de <_ZdlPvj>
 8016c34:	4620      	mov	r0, r4
 8016c36:	bd10      	pop	{r4, pc}

08016c38 <_ZN8touchgfx7Outline5resetEv>:
 8016c38:	b510      	push	{r4, lr}
 8016c3a:	4604      	mov	r4, r0
 8016c3c:	f000 fe82 	bl	8017944 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8016c40:	60e0      	str	r0, [r4, #12]
 8016c42:	f000 fe85 	bl	8017950 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8016c46:	68e3      	ldr	r3, [r4, #12]
 8016c48:	6123      	str	r3, [r4, #16]
 8016c4a:	08c0      	lsrs	r0, r0, #3
 8016c4c:	2200      	movs	r2, #0
 8016c4e:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8016c52:	3801      	subs	r0, #1
 8016c54:	6060      	str	r0, [r4, #4]
 8016c56:	60a2      	str	r2, [r4, #8]
 8016c58:	8019      	strh	r1, [r3, #0]
 8016c5a:	8059      	strh	r1, [r3, #2]
 8016c5c:	809a      	strh	r2, [r3, #4]
 8016c5e:	80da      	strh	r2, [r3, #6]
 8016c60:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016c62:	f023 0301 	bic.w	r3, r3, #1
 8016c66:	f043 0302 	orr.w	r3, r3, #2
 8016c6a:	6263      	str	r3, [r4, #36]	; 0x24
 8016c6c:	bd10      	pop	{r4, pc}
	...

08016c70 <_ZN8touchgfx7OutlineC1Ev>:
 8016c70:	b510      	push	{r4, lr}
 8016c72:	4b0a      	ldr	r3, [pc, #40]	; (8016c9c <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8016c74:	6003      	str	r3, [r0, #0]
 8016c76:	2300      	movs	r3, #0
 8016c78:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8016c7c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8016c80:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8016c84:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8016c88:	6243      	str	r3, [r0, #36]	; 0x24
 8016c8a:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8016c8e:	4604      	mov	r4, r0
 8016c90:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8016c94:	f7ff ffd0 	bl	8016c38 <_ZN8touchgfx7Outline5resetEv>
 8016c98:	4620      	mov	r0, r4
 8016c9a:	bd10      	pop	{r4, pc}
 8016c9c:	0802f97c 	.word	0x0802f97c

08016ca0 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8016ca0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ca4:	b093      	sub	sp, #76	; 0x4c
 8016ca6:	1156      	asrs	r6, r2, #5
 8016ca8:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8016caa:	9305      	str	r3, [sp, #20]
 8016cac:	f004 051f 	and.w	r5, r4, #31
 8016cb0:	1153      	asrs	r3, r2, #5
 8016cb2:	9504      	str	r5, [sp, #16]
 8016cb4:	1165      	asrs	r5, r4, #5
 8016cb6:	9303      	str	r3, [sp, #12]
 8016cb8:	42ae      	cmp	r6, r5
 8016cba:	ea4f 1364 	mov.w	r3, r4, asr #5
 8016cbe:	9306      	str	r3, [sp, #24]
 8016cc0:	f002 031f 	and.w	r3, r2, #31
 8016cc4:	f040 80f8 	bne.w	8016eb8 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8016cc8:	9c04      	ldr	r4, [sp, #16]
 8016cca:	9a05      	ldr	r2, [sp, #20]
 8016ccc:	42a3      	cmp	r3, r4
 8016cce:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8016cd2:	6902      	ldr	r2, [r0, #16]
 8016cd4:	d125      	bne.n	8016d22 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8016cd6:	f9b2 3000 	ldrsh.w	r3, [r2]
 8016cda:	459e      	cmp	lr, r3
 8016cdc:	d103      	bne.n	8016ce6 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8016cde:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8016ce2:	429e      	cmp	r6, r3
 8016ce4:	d035      	beq.n	8016d52 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016ce6:	88d1      	ldrh	r1, [r2, #6]
 8016ce8:	8893      	ldrh	r3, [r2, #4]
 8016cea:	430b      	orrs	r3, r1
 8016cec:	d010      	beq.n	8016d10 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8016cee:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8016cf2:	2b00      	cmp	r3, #0
 8016cf4:	db0c      	blt.n	8016d10 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8016cf6:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8016cf8:	428b      	cmp	r3, r1
 8016cfa:	da09      	bge.n	8016d10 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8016cfc:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8016d00:	428b      	cmp	r3, r1
 8016d02:	bf38      	it	cc
 8016d04:	3208      	addcc	r2, #8
 8016d06:	f103 0301 	add.w	r3, r3, #1
 8016d0a:	bf38      	it	cc
 8016d0c:	6102      	strcc	r2, [r0, #16]
 8016d0e:	6083      	str	r3, [r0, #8]
 8016d10:	6903      	ldr	r3, [r0, #16]
 8016d12:	9a03      	ldr	r2, [sp, #12]
 8016d14:	f8a3 e000 	strh.w	lr, [r3]
 8016d18:	805a      	strh	r2, [r3, #2]
 8016d1a:	2200      	movs	r2, #0
 8016d1c:	809a      	strh	r2, [r3, #4]
 8016d1e:	80da      	strh	r2, [r3, #6]
 8016d20:	e017      	b.n	8016d52 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016d22:	9c05      	ldr	r4, [sp, #20]
 8016d24:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8016d28:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8016d2c:	f004 041f 	and.w	r4, r4, #31
 8016d30:	114e      	asrs	r6, r1, #5
 8016d32:	9402      	str	r4, [sp, #8]
 8016d34:	9c04      	ldr	r4, [sp, #16]
 8016d36:	4576      	cmp	r6, lr
 8016d38:	f001 0c1f 	and.w	ip, r1, #31
 8016d3c:	eba4 0403 	sub.w	r4, r4, r3
 8016d40:	d10a      	bne.n	8016d58 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8016d42:	9b02      	ldr	r3, [sp, #8]
 8016d44:	449c      	add	ip, r3
 8016d46:	44a0      	add	r8, r4
 8016d48:	fb04 a40c 	mla	r4, r4, ip, sl
 8016d4c:	f8a2 8004 	strh.w	r8, [r2, #4]
 8016d50:	80d4      	strh	r4, [r2, #6]
 8016d52:	b013      	add	sp, #76	; 0x4c
 8016d54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d58:	9d05      	ldr	r5, [sp, #20]
 8016d5a:	1a69      	subs	r1, r5, r1
 8016d5c:	bf5b      	ittet	pl
 8016d5e:	f1cc 0520 	rsbpl	r5, ip, #32
 8016d62:	436c      	mulpl	r4, r5
 8016d64:	2500      	movmi	r5, #0
 8016d66:	2520      	movpl	r5, #32
 8016d68:	bf44      	itt	mi
 8016d6a:	fb04 f40c 	mulmi.w	r4, r4, ip
 8016d6e:	4249      	negmi	r1, r1
 8016d70:	9501      	str	r5, [sp, #4]
 8016d72:	9f01      	ldr	r7, [sp, #4]
 8016d74:	fb94 f5f1 	sdiv	r5, r4, r1
 8016d78:	fb01 4415 	mls	r4, r1, r5, r4
 8016d7c:	bf54      	ite	pl
 8016d7e:	f04f 0901 	movpl.w	r9, #1
 8016d82:	f04f 39ff 	movmi.w	r9, #4294967295
 8016d86:	2c00      	cmp	r4, #0
 8016d88:	bfb8      	it	lt
 8016d8a:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8016d8e:	44bc      	add	ip, r7
 8016d90:	44a8      	add	r8, r5
 8016d92:	fb05 ac0c 	mla	ip, r5, ip, sl
 8016d96:	f8a2 8004 	strh.w	r8, [r2, #4]
 8016d9a:	f8a2 c006 	strh.w	ip, [r2, #6]
 8016d9e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016da2:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8016da6:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8016daa:	bfb8      	it	lt
 8016dac:	1864      	addlt	r4, r4, r1
 8016dae:	ea58 0202 	orrs.w	r2, r8, r2
 8016db2:	444e      	add	r6, r9
 8016db4:	d011      	beq.n	8016dda <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8016db6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8016dba:	f1b8 0f00 	cmp.w	r8, #0
 8016dbe:	db0c      	blt.n	8016dda <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8016dc0:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8016dc2:	4590      	cmp	r8, r2
 8016dc4:	da09      	bge.n	8016dda <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8016dc6:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8016dca:	4590      	cmp	r8, r2
 8016dcc:	bf3c      	itt	cc
 8016dce:	f10c 0208 	addcc.w	r2, ip, #8
 8016dd2:	6102      	strcc	r2, [r0, #16]
 8016dd4:	f108 0201 	add.w	r2, r8, #1
 8016dd8:	6082      	str	r2, [r0, #8]
 8016dda:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016dde:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016de2:	f8ac 6000 	strh.w	r6, [ip]
 8016de6:	2700      	movs	r7, #0
 8016de8:	45b6      	cmp	lr, r6
 8016dea:	f8ac 2002 	strh.w	r2, [ip, #2]
 8016dee:	f8ac 7004 	strh.w	r7, [ip, #4]
 8016df2:	f8ac 7006 	strh.w	r7, [ip, #6]
 8016df6:	442b      	add	r3, r5
 8016df8:	d04d      	beq.n	8016e96 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8016dfa:	9f04      	ldr	r7, [sp, #16]
 8016dfc:	1aff      	subs	r7, r7, r3
 8016dfe:	443d      	add	r5, r7
 8016e00:	016d      	lsls	r5, r5, #5
 8016e02:	fb95 f8f1 	sdiv	r8, r5, r1
 8016e06:	fb01 5518 	mls	r5, r1, r8, r5
 8016e0a:	2d00      	cmp	r5, #0
 8016e0c:	bfb8      	it	lt
 8016e0e:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016e12:	f108 0701 	add.w	r7, r8, #1
 8016e16:	bfb8      	it	lt
 8016e18:	186d      	addlt	r5, r5, r1
 8016e1a:	1a64      	subs	r4, r4, r1
 8016e1c:	9703      	str	r7, [sp, #12]
 8016e1e:	f04f 0a00 	mov.w	sl, #0
 8016e22:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016e26:	1964      	adds	r4, r4, r5
 8016e28:	bf58      	it	pl
 8016e2a:	9f03      	ldrpl	r7, [sp, #12]
 8016e2c:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8016e30:	bf48      	it	mi
 8016e32:	4647      	movmi	r7, r8
 8016e34:	44bb      	add	fp, r7
 8016e36:	f8ac b004 	strh.w	fp, [ip, #4]
 8016e3a:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016e3e:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016e42:	f8ac b006 	strh.w	fp, [ip, #6]
 8016e46:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016e4a:	443b      	add	r3, r7
 8016e4c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016e50:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016e54:	bf58      	it	pl
 8016e56:	1a64      	subpl	r4, r4, r1
 8016e58:	ea5b 0707 	orrs.w	r7, fp, r7
 8016e5c:	444e      	add	r6, r9
 8016e5e:	d011      	beq.n	8016e84 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8016e60:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8016e64:	f1bb 0f00 	cmp.w	fp, #0
 8016e68:	db0c      	blt.n	8016e84 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8016e6a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016e6c:	45bb      	cmp	fp, r7
 8016e6e:	da09      	bge.n	8016e84 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8016e70:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016e74:	45bb      	cmp	fp, r7
 8016e76:	bf3c      	itt	cc
 8016e78:	f10c 0708 	addcc.w	r7, ip, #8
 8016e7c:	6107      	strcc	r7, [r0, #16]
 8016e7e:	f10b 0701 	add.w	r7, fp, #1
 8016e82:	6087      	str	r7, [r0, #8]
 8016e84:	6907      	ldr	r7, [r0, #16]
 8016e86:	45b6      	cmp	lr, r6
 8016e88:	803e      	strh	r6, [r7, #0]
 8016e8a:	807a      	strh	r2, [r7, #2]
 8016e8c:	f8a7 a004 	strh.w	sl, [r7, #4]
 8016e90:	f8a7 a006 	strh.w	sl, [r7, #6]
 8016e94:	d1c5      	bne.n	8016e22 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8016e96:	9a04      	ldr	r2, [sp, #16]
 8016e98:	1ad3      	subs	r3, r2, r3
 8016e9a:	6902      	ldr	r2, [r0, #16]
 8016e9c:	8891      	ldrh	r1, [r2, #4]
 8016e9e:	88d6      	ldrh	r6, [r2, #6]
 8016ea0:	4419      	add	r1, r3
 8016ea2:	8091      	strh	r1, [r2, #4]
 8016ea4:	9902      	ldr	r1, [sp, #8]
 8016ea6:	f101 0c20 	add.w	ip, r1, #32
 8016eaa:	9901      	ldr	r1, [sp, #4]
 8016eac:	ebac 0c01 	sub.w	ip, ip, r1
 8016eb0:	fb03 630c 	mla	r3, r3, ip, r6
 8016eb4:	80d3      	strh	r3, [r2, #6]
 8016eb6:	e74c      	b.n	8016d52 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016eb8:	9d05      	ldr	r5, [sp, #20]
 8016eba:	1aa2      	subs	r2, r4, r2
 8016ebc:	eba5 0501 	sub.w	r5, r5, r1
 8016ec0:	9508      	str	r5, [sp, #32]
 8016ec2:	9202      	str	r2, [sp, #8]
 8016ec4:	f140 8128 	bpl.w	8017118 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8016ec8:	9a03      	ldr	r2, [sp, #12]
 8016eca:	2a00      	cmp	r2, #0
 8016ecc:	f6ff af41 	blt.w	8016d52 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016ed0:	9a02      	ldr	r2, [sp, #8]
 8016ed2:	4252      	negs	r2, r2
 8016ed4:	9202      	str	r2, [sp, #8]
 8016ed6:	9a06      	ldr	r2, [sp, #24]
 8016ed8:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8016edc:	f04f 34ff 	mov.w	r4, #4294967295
 8016ee0:	9206      	str	r2, [sp, #24]
 8016ee2:	462a      	mov	r2, r5
 8016ee4:	940b      	str	r4, [sp, #44]	; 0x2c
 8016ee6:	435a      	muls	r2, r3
 8016ee8:	2400      	movs	r4, #0
 8016eea:	9d02      	ldr	r5, [sp, #8]
 8016eec:	9401      	str	r4, [sp, #4]
 8016eee:	9c02      	ldr	r4, [sp, #8]
 8016ef0:	fb92 f4f4 	sdiv	r4, r2, r4
 8016ef4:	fb05 2214 	mls	r2, r5, r4, r2
 8016ef8:	2a00      	cmp	r2, #0
 8016efa:	9207      	str	r2, [sp, #28]
 8016efc:	bfbc      	itt	lt
 8016efe:	1952      	addlt	r2, r2, r5
 8016f00:	9207      	strlt	r2, [sp, #28]
 8016f02:	9a01      	ldr	r2, [sp, #4]
 8016f04:	6905      	ldr	r5, [r0, #16]
 8016f06:	bfb8      	it	lt
 8016f08:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8016f0c:	eb04 0901 	add.w	r9, r4, r1
 8016f10:	429a      	cmp	r2, r3
 8016f12:	ea4f 1669 	mov.w	r6, r9, asr #5
 8016f16:	f040 8112 	bne.w	801713e <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8016f1a:	f9b5 3000 	ldrsh.w	r3, [r5]
 8016f1e:	429e      	cmp	r6, r3
 8016f20:	d104      	bne.n	8016f2c <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8016f22:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8016f26:	9a03      	ldr	r2, [sp, #12]
 8016f28:	429a      	cmp	r2, r3
 8016f2a:	d01b      	beq.n	8016f64 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8016f2c:	88ea      	ldrh	r2, [r5, #6]
 8016f2e:	88ab      	ldrh	r3, [r5, #4]
 8016f30:	4313      	orrs	r3, r2
 8016f32:	d010      	beq.n	8016f56 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016f34:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8016f38:	2a00      	cmp	r2, #0
 8016f3a:	db0c      	blt.n	8016f56 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016f3c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016f3e:	429a      	cmp	r2, r3
 8016f40:	da09      	bge.n	8016f56 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016f42:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8016f46:	429a      	cmp	r2, r3
 8016f48:	bf38      	it	cc
 8016f4a:	3508      	addcc	r5, #8
 8016f4c:	f102 0201 	add.w	r2, r2, #1
 8016f50:	bf38      	it	cc
 8016f52:	6105      	strcc	r5, [r0, #16]
 8016f54:	6082      	str	r2, [r0, #8]
 8016f56:	6903      	ldr	r3, [r0, #16]
 8016f58:	9a03      	ldr	r2, [sp, #12]
 8016f5a:	805a      	strh	r2, [r3, #2]
 8016f5c:	2200      	movs	r2, #0
 8016f5e:	801e      	strh	r6, [r3, #0]
 8016f60:	809a      	strh	r2, [r3, #4]
 8016f62:	80da      	strh	r2, [r3, #6]
 8016f64:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016f66:	9a03      	ldr	r2, [sp, #12]
 8016f68:	6901      	ldr	r1, [r0, #16]
 8016f6a:	441a      	add	r2, r3
 8016f6c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8016f70:	42b3      	cmp	r3, r6
 8016f72:	d103      	bne.n	8016f7c <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8016f74:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8016f78:	429a      	cmp	r2, r3
 8016f7a:	d01a      	beq.n	8016fb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8016f7c:	88cc      	ldrh	r4, [r1, #6]
 8016f7e:	888b      	ldrh	r3, [r1, #4]
 8016f80:	4323      	orrs	r3, r4
 8016f82:	d010      	beq.n	8016fa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8016f84:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8016f88:	2c00      	cmp	r4, #0
 8016f8a:	db0c      	blt.n	8016fa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8016f8c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016f8e:	429c      	cmp	r4, r3
 8016f90:	da09      	bge.n	8016fa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8016f92:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8016f96:	429c      	cmp	r4, r3
 8016f98:	bf38      	it	cc
 8016f9a:	3108      	addcc	r1, #8
 8016f9c:	f104 0401 	add.w	r4, r4, #1
 8016fa0:	bf38      	it	cc
 8016fa2:	6101      	strcc	r1, [r0, #16]
 8016fa4:	6084      	str	r4, [r0, #8]
 8016fa6:	6903      	ldr	r3, [r0, #16]
 8016fa8:	2100      	movs	r1, #0
 8016faa:	801e      	strh	r6, [r3, #0]
 8016fac:	805a      	strh	r2, [r3, #2]
 8016fae:	8099      	strh	r1, [r3, #4]
 8016fb0:	80d9      	strh	r1, [r3, #6]
 8016fb2:	9b06      	ldr	r3, [sp, #24]
 8016fb4:	4293      	cmp	r3, r2
 8016fb6:	f000 8082 	beq.w	80170be <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8016fba:	9b08      	ldr	r3, [sp, #32]
 8016fbc:	9c02      	ldr	r4, [sp, #8]
 8016fbe:	9902      	ldr	r1, [sp, #8]
 8016fc0:	015b      	lsls	r3, r3, #5
 8016fc2:	fb93 f1f1 	sdiv	r1, r3, r1
 8016fc6:	fb04 3311 	mls	r3, r4, r1, r3
 8016fca:	2b00      	cmp	r3, #0
 8016fcc:	9103      	str	r1, [sp, #12]
 8016fce:	9308      	str	r3, [sp, #32]
 8016fd0:	da04      	bge.n	8016fdc <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8016fd2:	1e4b      	subs	r3, r1, #1
 8016fd4:	9303      	str	r3, [sp, #12]
 8016fd6:	9b08      	ldr	r3, [sp, #32]
 8016fd8:	4423      	add	r3, r4
 8016fda:	9308      	str	r3, [sp, #32]
 8016fdc:	9b07      	ldr	r3, [sp, #28]
 8016fde:	9902      	ldr	r1, [sp, #8]
 8016fe0:	1a5b      	subs	r3, r3, r1
 8016fe2:	9307      	str	r3, [sp, #28]
 8016fe4:	9b01      	ldr	r3, [sp, #4]
 8016fe6:	f1c3 0320 	rsb	r3, r3, #32
 8016fea:	930e      	str	r3, [sp, #56]	; 0x38
 8016fec:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016fee:	9b01      	ldr	r3, [sp, #4]
 8016ff0:	1a5b      	subs	r3, r3, r1
 8016ff2:	464f      	mov	r7, r9
 8016ff4:	930a      	str	r3, [sp, #40]	; 0x28
 8016ff6:	2600      	movs	r6, #0
 8016ff8:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8016ffc:	185b      	adds	r3, r3, r1
 8016ffe:	bf58      	it	pl
 8017000:	9902      	ldrpl	r1, [sp, #8]
 8017002:	9307      	str	r3, [sp, #28]
 8017004:	bf5d      	ittte	pl
 8017006:	1a5b      	subpl	r3, r3, r1
 8017008:	9307      	strpl	r3, [sp, #28]
 801700a:	9b03      	ldrpl	r3, [sp, #12]
 801700c:	9903      	ldrmi	r1, [sp, #12]
 801700e:	bf58      	it	pl
 8017010:	1c59      	addpl	r1, r3, #1
 8017012:	4489      	add	r9, r1
 8017014:	2a00      	cmp	r2, #0
 8017016:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801701a:	db2e      	blt.n	801707a <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801701c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801701e:	4293      	cmp	r3, r2
 8017020:	dd2b      	ble.n	801707a <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8017022:	9c01      	ldr	r4, [sp, #4]
 8017024:	6905      	ldr	r5, [r0, #16]
 8017026:	46a0      	mov	r8, r4
 8017028:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801702a:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 801702e:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8017032:	45a0      	cmp	r8, r4
 8017034:	f040 814f 	bne.w	80172d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8017038:	f9b5 1000 	ldrsh.w	r1, [r5]
 801703c:	4551      	cmp	r1, sl
 801703e:	d103      	bne.n	8017048 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8017040:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8017044:	4291      	cmp	r1, r2
 8017046:	d018      	beq.n	801707a <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8017048:	ea5c 010e 	orrs.w	r1, ip, lr
 801704c:	d00f      	beq.n	801706e <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801704e:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8017052:	2900      	cmp	r1, #0
 8017054:	db0b      	blt.n	801706e <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8017056:	428b      	cmp	r3, r1
 8017058:	dd09      	ble.n	801706e <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801705a:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 801705e:	4299      	cmp	r1, r3
 8017060:	bf38      	it	cc
 8017062:	3508      	addcc	r5, #8
 8017064:	f101 0101 	add.w	r1, r1, #1
 8017068:	bf38      	it	cc
 801706a:	6105      	strcc	r5, [r0, #16]
 801706c:	6081      	str	r1, [r0, #8]
 801706e:	6903      	ldr	r3, [r0, #16]
 8017070:	f8a3 a000 	strh.w	sl, [r3]
 8017074:	805a      	strh	r2, [r3, #2]
 8017076:	809e      	strh	r6, [r3, #4]
 8017078:	80de      	strh	r6, [r3, #6]
 801707a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801707c:	6901      	ldr	r1, [r0, #16]
 801707e:	441a      	add	r2, r3
 8017080:	88cc      	ldrh	r4, [r1, #6]
 8017082:	888b      	ldrh	r3, [r1, #4]
 8017084:	4323      	orrs	r3, r4
 8017086:	d010      	beq.n	80170aa <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8017088:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 801708c:	2c00      	cmp	r4, #0
 801708e:	db0c      	blt.n	80170aa <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8017090:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8017092:	429c      	cmp	r4, r3
 8017094:	da09      	bge.n	80170aa <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8017096:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801709a:	429c      	cmp	r4, r3
 801709c:	bf38      	it	cc
 801709e:	3108      	addcc	r1, #8
 80170a0:	f104 0401 	add.w	r4, r4, #1
 80170a4:	bf38      	it	cc
 80170a6:	6101      	strcc	r1, [r0, #16]
 80170a8:	6084      	str	r4, [r0, #8]
 80170aa:	6903      	ldr	r3, [r0, #16]
 80170ac:	f8a3 a000 	strh.w	sl, [r3]
 80170b0:	805a      	strh	r2, [r3, #2]
 80170b2:	809e      	strh	r6, [r3, #4]
 80170b4:	80de      	strh	r6, [r3, #6]
 80170b6:	9b06      	ldr	r3, [sp, #24]
 80170b8:	4293      	cmp	r3, r2
 80170ba:	464f      	mov	r7, r9
 80170bc:	d19c      	bne.n	8016ff8 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 80170be:	9b01      	ldr	r3, [sp, #4]
 80170c0:	6907      	ldr	r7, [r0, #16]
 80170c2:	f1c3 0620 	rsb	r6, r3, #32
 80170c6:	9b05      	ldr	r3, [sp, #20]
 80170c8:	ea4f 1e63 	mov.w	lr, r3, asr #5
 80170cc:	9b04      	ldr	r3, [sp, #16]
 80170ce:	429e      	cmp	r6, r3
 80170d0:	f040 81cc 	bne.w	801746c <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 80170d4:	f9b7 3000 	ldrsh.w	r3, [r7]
 80170d8:	459e      	cmp	lr, r3
 80170da:	d104      	bne.n	80170e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 80170dc:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80170e0:	429a      	cmp	r2, r3
 80170e2:	f43f ae36 	beq.w	8016d52 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80170e6:	88f9      	ldrh	r1, [r7, #6]
 80170e8:	88bb      	ldrh	r3, [r7, #4]
 80170ea:	430b      	orrs	r3, r1
 80170ec:	d010      	beq.n	8017110 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80170ee:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80170f2:	2b00      	cmp	r3, #0
 80170f4:	db0c      	blt.n	8017110 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80170f6:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80170f8:	428b      	cmp	r3, r1
 80170fa:	da09      	bge.n	8017110 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80170fc:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8017100:	428b      	cmp	r3, r1
 8017102:	bf38      	it	cc
 8017104:	3708      	addcc	r7, #8
 8017106:	f103 0301 	add.w	r3, r3, #1
 801710a:	bf38      	it	cc
 801710c:	6107      	strcc	r7, [r0, #16]
 801710e:	6083      	str	r3, [r0, #8]
 8017110:	6903      	ldr	r3, [r0, #16]
 8017112:	f8a3 e000 	strh.w	lr, [r3]
 8017116:	e5ff      	b.n	8016d18 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8017118:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801711a:	9c03      	ldr	r4, [sp, #12]
 801711c:	42a2      	cmp	r2, r4
 801711e:	f6ff ae18 	blt.w	8016d52 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8017122:	9c06      	ldr	r4, [sp, #24]
 8017124:	42a2      	cmp	r2, r4
 8017126:	bfb8      	it	lt
 8017128:	3201      	addlt	r2, #1
 801712a:	9c08      	ldr	r4, [sp, #32]
 801712c:	bfb8      	it	lt
 801712e:	9206      	strlt	r2, [sp, #24]
 8017130:	f1c3 0220 	rsb	r2, r3, #32
 8017134:	4362      	muls	r2, r4
 8017136:	2401      	movs	r4, #1
 8017138:	940b      	str	r4, [sp, #44]	; 0x2c
 801713a:	2420      	movs	r4, #32
 801713c:	e6d5      	b.n	8016eea <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 801713e:	f009 021f 	and.w	r2, r9, #31
 8017142:	ea4f 1861 	mov.w	r8, r1, asr #5
 8017146:	920c      	str	r2, [sp, #48]	; 0x30
 8017148:	9a01      	ldr	r2, [sp, #4]
 801714a:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 801714e:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8017152:	45b0      	cmp	r8, r6
 8017154:	f001 011f 	and.w	r1, r1, #31
 8017158:	eba2 0203 	sub.w	r2, r2, r3
 801715c:	d108      	bne.n	8017170 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 801715e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017160:	4419      	add	r1, r3
 8017162:	4496      	add	lr, r2
 8017164:	fb02 a101 	mla	r1, r2, r1, sl
 8017168:	f8a5 e004 	strh.w	lr, [r5, #4]
 801716c:	80e9      	strh	r1, [r5, #6]
 801716e:	e6f9      	b.n	8016f64 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8017170:	2c00      	cmp	r4, #0
 8017172:	f2c0 80a9 	blt.w	80172c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8017176:	2701      	movs	r7, #1
 8017178:	f1c1 0c20 	rsb	ip, r1, #32
 801717c:	970a      	str	r7, [sp, #40]	; 0x28
 801717e:	fb02 f20c 	mul.w	r2, r2, ip
 8017182:	2720      	movs	r7, #32
 8017184:	9709      	str	r7, [sp, #36]	; 0x24
 8017186:	fb92 fcf4 	sdiv	ip, r2, r4
 801718a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801718c:	fb04 221c 	mls	r2, r4, ip, r2
 8017190:	2a00      	cmp	r2, #0
 8017192:	bfb8      	it	lt
 8017194:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8017198:	4439      	add	r1, r7
 801719a:	fb0c a101 	mla	r1, ip, r1, sl
 801719e:	80e9      	strh	r1, [r5, #6]
 80171a0:	44e6      	add	lr, ip
 80171a2:	990a      	ldr	r1, [sp, #40]	; 0x28
 80171a4:	f8a5 e004 	strh.w	lr, [r5, #4]
 80171a8:	eb08 0501 	add.w	r5, r8, r1
 80171ac:	6901      	ldr	r1, [r0, #16]
 80171ae:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 80171b2:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 80171b6:	bfb8      	it	lt
 80171b8:	1912      	addlt	r2, r2, r4
 80171ba:	ea58 070e 	orrs.w	r7, r8, lr
 80171be:	d010      	beq.n	80171e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80171c0:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 80171c4:	f1be 0f00 	cmp.w	lr, #0
 80171c8:	db0b      	blt.n	80171e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80171ca:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80171cc:	45be      	cmp	lr, r7
 80171ce:	da08      	bge.n	80171e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80171d0:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80171d4:	45be      	cmp	lr, r7
 80171d6:	bf3c      	itt	cc
 80171d8:	3108      	addcc	r1, #8
 80171da:	6101      	strcc	r1, [r0, #16]
 80171dc:	f10e 0101 	add.w	r1, lr, #1
 80171e0:	6081      	str	r1, [r0, #8]
 80171e2:	6901      	ldr	r1, [r0, #16]
 80171e4:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80171e8:	800d      	strh	r5, [r1, #0]
 80171ea:	f04f 0e00 	mov.w	lr, #0
 80171ee:	42ae      	cmp	r6, r5
 80171f0:	f8a1 8002 	strh.w	r8, [r1, #2]
 80171f4:	f8a1 e004 	strh.w	lr, [r1, #4]
 80171f8:	f8a1 e006 	strh.w	lr, [r1, #6]
 80171fc:	4463      	add	r3, ip
 80171fe:	d054      	beq.n	80172aa <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8017200:	9901      	ldr	r1, [sp, #4]
 8017202:	1ac9      	subs	r1, r1, r3
 8017204:	4461      	add	r1, ip
 8017206:	0149      	lsls	r1, r1, #5
 8017208:	fb91 fef4 	sdiv	lr, r1, r4
 801720c:	fb04 111e 	mls	r1, r4, lr, r1
 8017210:	2900      	cmp	r1, #0
 8017212:	bfb8      	it	lt
 8017214:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8017218:	f10e 0701 	add.w	r7, lr, #1
 801721c:	bfb8      	it	lt
 801721e:	1909      	addlt	r1, r1, r4
 8017220:	1b12      	subs	r2, r2, r4
 8017222:	970d      	str	r7, [sp, #52]	; 0x34
 8017224:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8017228:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801722a:	f8ba b004 	ldrh.w	fp, [sl, #4]
 801722e:	1852      	adds	r2, r2, r1
 8017230:	bf54      	ite	pl
 8017232:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8017236:	46f4      	movmi	ip, lr
 8017238:	44e3      	add	fp, ip
 801723a:	f8aa b004 	strh.w	fp, [sl, #4]
 801723e:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8017242:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8017246:	f8aa b006 	strh.w	fp, [sl, #6]
 801724a:	4463      	add	r3, ip
 801724c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8017250:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8017254:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8017258:	bf58      	it	pl
 801725a:	1b12      	subpl	r2, r2, r4
 801725c:	443d      	add	r5, r7
 801725e:	ea5b 070a 	orrs.w	r7, fp, sl
 8017262:	d014      	beq.n	801728e <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8017264:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8017268:	f1ba 0f00 	cmp.w	sl, #0
 801726c:	db0f      	blt.n	801728e <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 801726e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8017270:	45ba      	cmp	sl, r7
 8017272:	da0c      	bge.n	801728e <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8017274:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8017278:	45ba      	cmp	sl, r7
 801727a:	bf38      	it	cc
 801727c:	f10c 0c08 	addcc.w	ip, ip, #8
 8017280:	f10a 0a01 	add.w	sl, sl, #1
 8017284:	bf38      	it	cc
 8017286:	f8c0 c010 	strcc.w	ip, [r0, #16]
 801728a:	f8c0 a008 	str.w	sl, [r0, #8]
 801728e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8017292:	f04f 0700 	mov.w	r7, #0
 8017296:	42ae      	cmp	r6, r5
 8017298:	f8ac 5000 	strh.w	r5, [ip]
 801729c:	f8ac 8002 	strh.w	r8, [ip, #2]
 80172a0:	f8ac 7004 	strh.w	r7, [ip, #4]
 80172a4:	f8ac 7006 	strh.w	r7, [ip, #6]
 80172a8:	d1bc      	bne.n	8017224 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 80172aa:	6904      	ldr	r4, [r0, #16]
 80172ac:	9a01      	ldr	r2, [sp, #4]
 80172ae:	990c      	ldr	r1, [sp, #48]	; 0x30
 80172b0:	1ad3      	subs	r3, r2, r3
 80172b2:	88a2      	ldrh	r2, [r4, #4]
 80172b4:	441a      	add	r2, r3
 80172b6:	80a2      	strh	r2, [r4, #4]
 80172b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80172ba:	3120      	adds	r1, #32
 80172bc:	1a89      	subs	r1, r1, r2
 80172be:	88e2      	ldrh	r2, [r4, #6]
 80172c0:	fb03 2301 	mla	r3, r3, r1, r2
 80172c4:	80e3      	strh	r3, [r4, #6]
 80172c6:	e64d      	b.n	8016f64 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80172c8:	f04f 37ff 	mov.w	r7, #4294967295
 80172cc:	970a      	str	r7, [sp, #40]	; 0x28
 80172ce:	434a      	muls	r2, r1
 80172d0:	4264      	negs	r4, r4
 80172d2:	2700      	movs	r7, #0
 80172d4:	e756      	b.n	8017184 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 80172d6:	ea4f 1867 	mov.w	r8, r7, asr #5
 80172da:	f009 031f 	and.w	r3, r9, #31
 80172de:	45d0      	cmp	r8, sl
 80172e0:	f007 071f 	and.w	r7, r7, #31
 80172e4:	930f      	str	r3, [sp, #60]	; 0x3c
 80172e6:	fa1f fc8c 	uxth.w	ip, ip
 80172ea:	fa1f fe8e 	uxth.w	lr, lr
 80172ee:	d10a      	bne.n	8017306 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 80172f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80172f2:	449c      	add	ip, r3
 80172f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80172f6:	f8a5 c004 	strh.w	ip, [r5, #4]
 80172fa:	441f      	add	r7, r3
 80172fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80172fe:	fb03 e707 	mla	r7, r3, r7, lr
 8017302:	80ef      	strh	r7, [r5, #6]
 8017304:	e6b9      	b.n	801707a <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8017306:	2900      	cmp	r1, #0
 8017308:	f2c0 80a8 	blt.w	801745c <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 801730c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801730e:	f1c7 0320 	rsb	r3, r7, #32
 8017312:	4363      	muls	r3, r4
 8017314:	2401      	movs	r4, #1
 8017316:	940d      	str	r4, [sp, #52]	; 0x34
 8017318:	2420      	movs	r4, #32
 801731a:	940c      	str	r4, [sp, #48]	; 0x30
 801731c:	fb93 f4f1 	sdiv	r4, r3, r1
 8017320:	fb01 3b14 	mls	fp, r1, r4, r3
 8017324:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017326:	f1bb 0f00 	cmp.w	fp, #0
 801732a:	bfb8      	it	lt
 801732c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8017330:	441f      	add	r7, r3
 8017332:	fb04 e707 	mla	r7, r4, r7, lr
 8017336:	44a4      	add	ip, r4
 8017338:	f8a5 c004 	strh.w	ip, [r5, #4]
 801733c:	80ef      	strh	r7, [r5, #6]
 801733e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8017342:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017344:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8017348:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801734c:	bfb8      	it	lt
 801734e:	448b      	addlt	fp, r1
 8017350:	eb08 0503 	add.w	r5, r8, r3
 8017354:	ea5e 0307 	orrs.w	r3, lr, r7
 8017358:	d011      	beq.n	801737e <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801735a:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 801735e:	f1be 0f00 	cmp.w	lr, #0
 8017362:	db0c      	blt.n	801737e <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8017364:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8017366:	45be      	cmp	lr, r7
 8017368:	da09      	bge.n	801737e <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801736a:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 801736e:	45be      	cmp	lr, r7
 8017370:	bf3c      	itt	cc
 8017372:	f10c 0708 	addcc.w	r7, ip, #8
 8017376:	6107      	strcc	r7, [r0, #16]
 8017378:	f10e 0701 	add.w	r7, lr, #1
 801737c:	6087      	str	r7, [r0, #8]
 801737e:	6907      	ldr	r7, [r0, #16]
 8017380:	b213      	sxth	r3, r2
 8017382:	9310      	str	r3, [sp, #64]	; 0x40
 8017384:	807b      	strh	r3, [r7, #2]
 8017386:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017388:	803d      	strh	r5, [r7, #0]
 801738a:	4555      	cmp	r5, sl
 801738c:	80be      	strh	r6, [r7, #4]
 801738e:	80fe      	strh	r6, [r7, #6]
 8017390:	eb04 0c03 	add.w	ip, r4, r3
 8017394:	d051      	beq.n	801743a <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8017396:	9b01      	ldr	r3, [sp, #4]
 8017398:	eba3 070c 	sub.w	r7, r3, ip
 801739c:	443c      	add	r4, r7
 801739e:	0164      	lsls	r4, r4, #5
 80173a0:	fb94 f8f1 	sdiv	r8, r4, r1
 80173a4:	fb01 4418 	mls	r4, r1, r8, r4
 80173a8:	2c00      	cmp	r4, #0
 80173aa:	bfb8      	it	lt
 80173ac:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80173b0:	ebab 0301 	sub.w	r3, fp, r1
 80173b4:	f108 0701 	add.w	r7, r8, #1
 80173b8:	bfb8      	it	lt
 80173ba:	1864      	addlt	r4, r4, r1
 80173bc:	9309      	str	r3, [sp, #36]	; 0x24
 80173be:	9711      	str	r7, [sp, #68]	; 0x44
 80173c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80173c2:	f8d0 e010 	ldr.w	lr, [r0, #16]
 80173c6:	191b      	adds	r3, r3, r4
 80173c8:	bf58      	it	pl
 80173ca:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 80173cc:	f8be b004 	ldrh.w	fp, [lr, #4]
 80173d0:	9309      	str	r3, [sp, #36]	; 0x24
 80173d2:	bf48      	it	mi
 80173d4:	4647      	movmi	r7, r8
 80173d6:	44bb      	add	fp, r7
 80173d8:	f8ae b004 	strh.w	fp, [lr, #4]
 80173dc:	f8be b006 	ldrh.w	fp, [lr, #6]
 80173e0:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80173e4:	f8ae b006 	strh.w	fp, [lr, #6]
 80173e8:	f8d0 e010 	ldr.w	lr, [r0, #16]
 80173ec:	44bc      	add	ip, r7
 80173ee:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80173f0:	f8be b006 	ldrh.w	fp, [lr, #6]
 80173f4:	443d      	add	r5, r7
 80173f6:	f8be 7004 	ldrh.w	r7, [lr, #4]
 80173fa:	bf5c      	itt	pl
 80173fc:	1a5b      	subpl	r3, r3, r1
 80173fe:	9309      	strpl	r3, [sp, #36]	; 0x24
 8017400:	ea5b 0307 	orrs.w	r3, fp, r7
 8017404:	d011      	beq.n	801742a <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8017406:	f9be b002 	ldrsh.w	fp, [lr, #2]
 801740a:	f1bb 0f00 	cmp.w	fp, #0
 801740e:	db0c      	blt.n	801742a <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8017410:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8017412:	45bb      	cmp	fp, r7
 8017414:	da09      	bge.n	801742a <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8017416:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801741a:	45bb      	cmp	fp, r7
 801741c:	bf3c      	itt	cc
 801741e:	f10e 0708 	addcc.w	r7, lr, #8
 8017422:	6107      	strcc	r7, [r0, #16]
 8017424:	f10b 0701 	add.w	r7, fp, #1
 8017428:	6087      	str	r7, [r0, #8]
 801742a:	6907      	ldr	r7, [r0, #16]
 801742c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801742e:	803d      	strh	r5, [r7, #0]
 8017430:	4555      	cmp	r5, sl
 8017432:	807b      	strh	r3, [r7, #2]
 8017434:	80be      	strh	r6, [r7, #4]
 8017436:	80fe      	strh	r6, [r7, #6]
 8017438:	d1c2      	bne.n	80173c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 801743a:	9b01      	ldr	r3, [sp, #4]
 801743c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801743e:	eba3 0c0c 	sub.w	ip, r3, ip
 8017442:	6903      	ldr	r3, [r0, #16]
 8017444:	8899      	ldrh	r1, [r3, #4]
 8017446:	4461      	add	r1, ip
 8017448:	8099      	strh	r1, [r3, #4]
 801744a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801744c:	3720      	adds	r7, #32
 801744e:	1a7f      	subs	r7, r7, r1
 8017450:	88d9      	ldrh	r1, [r3, #6]
 8017452:	fb0c 1c07 	mla	ip, ip, r7, r1
 8017456:	f8a3 c006 	strh.w	ip, [r3, #6]
 801745a:	e60e      	b.n	801707a <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801745c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801745e:	f04f 34ff 	mov.w	r4, #4294967295
 8017462:	940d      	str	r4, [sp, #52]	; 0x34
 8017464:	437b      	muls	r3, r7
 8017466:	4249      	negs	r1, r1
 8017468:	2400      	movs	r4, #0
 801746a:	e756      	b.n	801731a <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 801746c:	9905      	ldr	r1, [sp, #20]
 801746e:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8017472:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8017476:	f001 011f 	and.w	r1, r1, #31
 801747a:	ea4f 1b69 	mov.w	fp, r9, asr #5
 801747e:	9102      	str	r1, [sp, #8]
 8017480:	9904      	ldr	r1, [sp, #16]
 8017482:	45f3      	cmp	fp, lr
 8017484:	f009 0c1f 	and.w	ip, r9, #31
 8017488:	eba1 0406 	sub.w	r4, r1, r6
 801748c:	d108      	bne.n	80174a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 801748e:	9b02      	ldr	r3, [sp, #8]
 8017490:	449c      	add	ip, r3
 8017492:	44a0      	add	r8, r4
 8017494:	fb04 a40c 	mla	r4, r4, ip, sl
 8017498:	f8a7 8004 	strh.w	r8, [r7, #4]
 801749c:	80fc      	strh	r4, [r7, #6]
 801749e:	e458      	b.n	8016d52 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80174a0:	9905      	ldr	r1, [sp, #20]
 80174a2:	ebb1 0109 	subs.w	r1, r1, r9
 80174a6:	bf5b      	ittet	pl
 80174a8:	f1cc 0520 	rsbpl	r5, ip, #32
 80174ac:	436c      	mulpl	r4, r5
 80174ae:	2500      	movmi	r5, #0
 80174b0:	2520      	movpl	r5, #32
 80174b2:	bf44      	itt	mi
 80174b4:	fb04 f40c 	mulmi.w	r4, r4, ip
 80174b8:	4249      	negmi	r1, r1
 80174ba:	9501      	str	r5, [sp, #4]
 80174bc:	9b01      	ldr	r3, [sp, #4]
 80174be:	fb94 f5f1 	sdiv	r5, r4, r1
 80174c2:	fb01 4415 	mls	r4, r1, r5, r4
 80174c6:	bf54      	ite	pl
 80174c8:	f04f 0901 	movpl.w	r9, #1
 80174cc:	f04f 39ff 	movmi.w	r9, #4294967295
 80174d0:	2c00      	cmp	r4, #0
 80174d2:	bfb8      	it	lt
 80174d4:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80174d8:	449c      	add	ip, r3
 80174da:	44a8      	add	r8, r5
 80174dc:	fb05 ac0c 	mla	ip, r5, ip, sl
 80174e0:	f8a7 8004 	strh.w	r8, [r7, #4]
 80174e4:	f8a7 c006 	strh.w	ip, [r7, #6]
 80174e8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80174ec:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80174f0:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80174f4:	bfb8      	it	lt
 80174f6:	1864      	addlt	r4, r4, r1
 80174f8:	ea58 0707 	orrs.w	r7, r8, r7
 80174fc:	eb0b 0309 	add.w	r3, fp, r9
 8017500:	d011      	beq.n	8017526 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8017502:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8017506:	f1b8 0f00 	cmp.w	r8, #0
 801750a:	db0c      	blt.n	8017526 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801750c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801750e:	45b8      	cmp	r8, r7
 8017510:	da09      	bge.n	8017526 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8017512:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8017516:	45b8      	cmp	r8, r7
 8017518:	bf3c      	itt	cc
 801751a:	f10c 0708 	addcc.w	r7, ip, #8
 801751e:	6107      	strcc	r7, [r0, #16]
 8017520:	f108 0701 	add.w	r7, r8, #1
 8017524:	6087      	str	r7, [r0, #8]
 8017526:	6907      	ldr	r7, [r0, #16]
 8017528:	f04f 0c00 	mov.w	ip, #0
 801752c:	b212      	sxth	r2, r2
 801752e:	459e      	cmp	lr, r3
 8017530:	803b      	strh	r3, [r7, #0]
 8017532:	807a      	strh	r2, [r7, #2]
 8017534:	f8a7 c004 	strh.w	ip, [r7, #4]
 8017538:	f8a7 c006 	strh.w	ip, [r7, #6]
 801753c:	442e      	add	r6, r5
 801753e:	d04d      	beq.n	80175dc <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8017540:	9f04      	ldr	r7, [sp, #16]
 8017542:	1bbf      	subs	r7, r7, r6
 8017544:	443d      	add	r5, r7
 8017546:	016d      	lsls	r5, r5, #5
 8017548:	fb95 f8f1 	sdiv	r8, r5, r1
 801754c:	fb01 5518 	mls	r5, r1, r8, r5
 8017550:	4565      	cmp	r5, ip
 8017552:	bfb8      	it	lt
 8017554:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8017558:	f108 0701 	add.w	r7, r8, #1
 801755c:	bfb8      	it	lt
 801755e:	186d      	addlt	r5, r5, r1
 8017560:	1a64      	subs	r4, r4, r1
 8017562:	9703      	str	r7, [sp, #12]
 8017564:	f04f 0a00 	mov.w	sl, #0
 8017568:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801756c:	1964      	adds	r4, r4, r5
 801756e:	bf58      	it	pl
 8017570:	9f03      	ldrpl	r7, [sp, #12]
 8017572:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8017576:	bf48      	it	mi
 8017578:	4647      	movmi	r7, r8
 801757a:	44bb      	add	fp, r7
 801757c:	f8ac b004 	strh.w	fp, [ip, #4]
 8017580:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8017584:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8017588:	f8ac b006 	strh.w	fp, [ip, #6]
 801758c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8017590:	443e      	add	r6, r7
 8017592:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8017596:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801759a:	bf58      	it	pl
 801759c:	1a64      	subpl	r4, r4, r1
 801759e:	ea5b 0707 	orrs.w	r7, fp, r7
 80175a2:	444b      	add	r3, r9
 80175a4:	d011      	beq.n	80175ca <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80175a6:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80175aa:	f1bb 0f00 	cmp.w	fp, #0
 80175ae:	db0c      	blt.n	80175ca <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80175b0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80175b2:	45bb      	cmp	fp, r7
 80175b4:	da09      	bge.n	80175ca <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80175b6:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80175ba:	45bb      	cmp	fp, r7
 80175bc:	bf3c      	itt	cc
 80175be:	f10c 0708 	addcc.w	r7, ip, #8
 80175c2:	6107      	strcc	r7, [r0, #16]
 80175c4:	f10b 0701 	add.w	r7, fp, #1
 80175c8:	6087      	str	r7, [r0, #8]
 80175ca:	6907      	ldr	r7, [r0, #16]
 80175cc:	459e      	cmp	lr, r3
 80175ce:	803b      	strh	r3, [r7, #0]
 80175d0:	807a      	strh	r2, [r7, #2]
 80175d2:	f8a7 a004 	strh.w	sl, [r7, #4]
 80175d6:	f8a7 a006 	strh.w	sl, [r7, #6]
 80175da:	d1c5      	bne.n	8017568 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 80175dc:	9b04      	ldr	r3, [sp, #16]
 80175de:	1b9e      	subs	r6, r3, r6
 80175e0:	6903      	ldr	r3, [r0, #16]
 80175e2:	889a      	ldrh	r2, [r3, #4]
 80175e4:	4432      	add	r2, r6
 80175e6:	809a      	strh	r2, [r3, #4]
 80175e8:	9a02      	ldr	r2, [sp, #8]
 80175ea:	f102 0c20 	add.w	ip, r2, #32
 80175ee:	9a01      	ldr	r2, [sp, #4]
 80175f0:	ebac 0c02 	sub.w	ip, ip, r2
 80175f4:	88da      	ldrh	r2, [r3, #6]
 80175f6:	fb06 260c 	mla	r6, r6, ip, r2
 80175fa:	80de      	strh	r6, [r3, #6]
 80175fc:	f7ff bba9 	b.w	8016d52 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08017600 <_ZN8touchgfx7Outline6lineToEii>:
 8017600:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8017602:	079b      	lsls	r3, r3, #30
 8017604:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8017606:	460e      	mov	r6, r1
 8017608:	4615      	mov	r5, r2
 801760a:	d511      	bpl.n	8017630 <_ZN8touchgfx7Outline6lineToEii+0x30>
 801760c:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8017610:	ea86 0701 	eor.w	r7, r6, r1
 8017614:	ea85 0302 	eor.w	r3, r5, r2
 8017618:	433b      	orrs	r3, r7
 801761a:	d009      	beq.n	8017630 <_ZN8touchgfx7Outline6lineToEii+0x30>
 801761c:	4633      	mov	r3, r6
 801761e:	9500      	str	r5, [sp, #0]
 8017620:	f7ff fb3e 	bl	8016ca0 <_ZN8touchgfx7Outline10renderLineEiiii>
 8017624:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8017626:	e9c0 6505 	strd	r6, r5, [r0, #20]
 801762a:	f043 0301 	orr.w	r3, r3, #1
 801762e:	6243      	str	r3, [r0, #36]	; 0x24
 8017630:	b003      	add	sp, #12
 8017632:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017634 <_ZN8touchgfx7Outline6moveToEii>:
 8017634:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017636:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8017638:	4615      	mov	r5, r2
 801763a:	079a      	lsls	r2, r3, #30
 801763c:	4604      	mov	r4, r0
 801763e:	460e      	mov	r6, r1
 8017640:	d401      	bmi.n	8017646 <_ZN8touchgfx7Outline6moveToEii+0x12>
 8017642:	f7ff faf9 	bl	8016c38 <_ZN8touchgfx7Outline5resetEv>
 8017646:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8017648:	07db      	lsls	r3, r3, #31
 801764a:	d504      	bpl.n	8017656 <_ZN8touchgfx7Outline6moveToEii+0x22>
 801764c:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8017650:	4620      	mov	r0, r4
 8017652:	f7ff ffd5 	bl	8017600 <_ZN8touchgfx7Outline6lineToEii>
 8017656:	6923      	ldr	r3, [r4, #16]
 8017658:	f9b3 2000 	ldrsh.w	r2, [r3]
 801765c:	1170      	asrs	r0, r6, #5
 801765e:	4290      	cmp	r0, r2
 8017660:	ea4f 1165 	mov.w	r1, r5, asr #5
 8017664:	d103      	bne.n	801766e <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8017666:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801766a:	4291      	cmp	r1, r2
 801766c:	d01a      	beq.n	80176a4 <_ZN8touchgfx7Outline6moveToEii+0x70>
 801766e:	88df      	ldrh	r7, [r3, #6]
 8017670:	889a      	ldrh	r2, [r3, #4]
 8017672:	433a      	orrs	r2, r7
 8017674:	d010      	beq.n	8017698 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8017676:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801767a:	2a00      	cmp	r2, #0
 801767c:	db0c      	blt.n	8017698 <_ZN8touchgfx7Outline6moveToEii+0x64>
 801767e:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8017680:	42ba      	cmp	r2, r7
 8017682:	da09      	bge.n	8017698 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8017684:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8017688:	42ba      	cmp	r2, r7
 801768a:	bf38      	it	cc
 801768c:	3308      	addcc	r3, #8
 801768e:	f102 0201 	add.w	r2, r2, #1
 8017692:	bf38      	it	cc
 8017694:	6123      	strcc	r3, [r4, #16]
 8017696:	60a2      	str	r2, [r4, #8]
 8017698:	6923      	ldr	r3, [r4, #16]
 801769a:	2200      	movs	r2, #0
 801769c:	8018      	strh	r0, [r3, #0]
 801769e:	8059      	strh	r1, [r3, #2]
 80176a0:	809a      	strh	r2, [r3, #4]
 80176a2:	80da      	strh	r2, [r3, #6]
 80176a4:	6166      	str	r6, [r4, #20]
 80176a6:	e9c4 5606 	strd	r5, r6, [r4, #24]
 80176aa:	6225      	str	r5, [r4, #32]
 80176ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080176ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 80176ae:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80176b2:	b0d0      	sub	sp, #320	; 0x140
 80176b4:	466c      	mov	r4, sp
 80176b6:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80176ba:	4627      	mov	r7, r4
 80176bc:	1a0d      	subs	r5, r1, r0
 80176be:	2d48      	cmp	r5, #72	; 0x48
 80176c0:	f100 0308 	add.w	r3, r0, #8
 80176c4:	f340 80d5 	ble.w	8017872 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80176c8:	112d      	asrs	r5, r5, #4
 80176ca:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 80176ce:	f9b0 9000 	ldrsh.w	r9, [r0]
 80176d2:	6816      	ldr	r6, [r2, #0]
 80176d4:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 80176d8:	6006      	str	r6, [r0, #0]
 80176da:	6856      	ldr	r6, [r2, #4]
 80176dc:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80176e0:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80176e4:	6046      	str	r6, [r0, #4]
 80176e6:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80176ea:	f8a2 8002 	strh.w	r8, [r2, #2]
 80176ee:	f8a2 e004 	strh.w	lr, [r2, #4]
 80176f2:	f8a2 c006 	strh.w	ip, [r2, #6]
 80176f6:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80176fa:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 80176fe:	4565      	cmp	r5, ip
 8017700:	f1a1 0208 	sub.w	r2, r1, #8
 8017704:	db06      	blt.n	8017714 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8017706:	d119      	bne.n	801773c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8017708:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 801770c:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8017710:	42ae      	cmp	r6, r5
 8017712:	dd13      	ble.n	801773c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8017714:	460e      	mov	r6, r1
 8017716:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801771a:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 801771e:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8017722:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8017726:	601d      	str	r5, [r3, #0]
 8017728:	6875      	ldr	r5, [r6, #4]
 801772a:	605d      	str	r5, [r3, #4]
 801772c:	f821 9c08 	strh.w	r9, [r1, #-8]
 8017730:	f821 cc06 	strh.w	ip, [r1, #-6]
 8017734:	f821 8c04 	strh.w	r8, [r1, #-4]
 8017738:	f821 ec02 	strh.w	lr, [r1, #-2]
 801773c:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8017740:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8017744:	42ae      	cmp	r6, r5
 8017746:	db06      	blt.n	8017756 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8017748:	d116      	bne.n	8017778 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801774a:	f9b0 c000 	ldrsh.w	ip, [r0]
 801774e:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8017752:	45ac      	cmp	ip, r5
 8017754:	da10      	bge.n	8017778 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8017756:	681d      	ldr	r5, [r3, #0]
 8017758:	f9b0 8000 	ldrsh.w	r8, [r0]
 801775c:	6005      	str	r5, [r0, #0]
 801775e:	685d      	ldr	r5, [r3, #4]
 8017760:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8017764:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8017768:	f8a0 8008 	strh.w	r8, [r0, #8]
 801776c:	6045      	str	r5, [r0, #4]
 801776e:	8146      	strh	r6, [r0, #10]
 8017770:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8017774:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8017778:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801777c:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8017780:	4565      	cmp	r5, ip
 8017782:	db06      	blt.n	8017792 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8017784:	d119      	bne.n	80177ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8017786:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 801778a:	f9b0 5000 	ldrsh.w	r5, [r0]
 801778e:	42ae      	cmp	r6, r5
 8017790:	da13      	bge.n	80177ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8017792:	460e      	mov	r6, r1
 8017794:	f9b0 9000 	ldrsh.w	r9, [r0]
 8017798:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 801779c:	6005      	str	r5, [r0, #0]
 801779e:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80177a2:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 80177a6:	6875      	ldr	r5, [r6, #4]
 80177a8:	6045      	str	r5, [r0, #4]
 80177aa:	f821 9c08 	strh.w	r9, [r1, #-8]
 80177ae:	f821 cc06 	strh.w	ip, [r1, #-6]
 80177b2:	f821 8c04 	strh.w	r8, [r1, #-4]
 80177b6:	f821 ec02 	strh.w	lr, [r1, #-2]
 80177ba:	3308      	adds	r3, #8
 80177bc:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80177c0:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80177c4:	45e6      	cmp	lr, ip
 80177c6:	dbf8      	blt.n	80177ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80177c8:	d105      	bne.n	80177d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80177ca:	f9b3 6000 	ldrsh.w	r6, [r3]
 80177ce:	f9b0 5000 	ldrsh.w	r5, [r0]
 80177d2:	42ae      	cmp	r6, r5
 80177d4:	dbf1      	blt.n	80177ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80177d6:	4615      	mov	r5, r2
 80177d8:	3a08      	subs	r2, #8
 80177da:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 80177de:	45b4      	cmp	ip, r6
 80177e0:	dbf9      	blt.n	80177d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80177e2:	d105      	bne.n	80177f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 80177e4:	f9b0 8000 	ldrsh.w	r8, [r0]
 80177e8:	f9b2 6000 	ldrsh.w	r6, [r2]
 80177ec:	45b0      	cmp	r8, r6
 80177ee:	dbf2      	blt.n	80177d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80177f0:	4293      	cmp	r3, r2
 80177f2:	f1a5 0608 	sub.w	r6, r5, #8
 80177f6:	d816      	bhi.n	8017826 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 80177f8:	f8d6 c000 	ldr.w	ip, [r6]
 80177fc:	f9b3 a000 	ldrsh.w	sl, [r3]
 8017800:	f8c3 c000 	str.w	ip, [r3]
 8017804:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8017808:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 801780c:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8017810:	f8c3 c004 	str.w	ip, [r3, #4]
 8017814:	f825 ac08 	strh.w	sl, [r5, #-8]
 8017818:	f825 ec06 	strh.w	lr, [r5, #-6]
 801781c:	f825 9c04 	strh.w	r9, [r5, #-4]
 8017820:	f825 8c02 	strh.w	r8, [r5, #-2]
 8017824:	e7c9      	b.n	80177ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8017826:	f8d6 e000 	ldr.w	lr, [r6]
 801782a:	f9b0 a000 	ldrsh.w	sl, [r0]
 801782e:	f8c0 e000 	str.w	lr, [r0]
 8017832:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8017836:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801783a:	f8d6 e004 	ldr.w	lr, [r6, #4]
 801783e:	f8c0 e004 	str.w	lr, [r0, #4]
 8017842:	f825 ac08 	strh.w	sl, [r5, #-8]
 8017846:	f825 cc06 	strh.w	ip, [r5, #-6]
 801784a:	f825 9c04 	strh.w	r9, [r5, #-4]
 801784e:	f825 8c02 	strh.w	r8, [r5, #-2]
 8017852:	1acd      	subs	r5, r1, r3
 8017854:	1a16      	subs	r6, r2, r0
 8017856:	10ed      	asrs	r5, r5, #3
 8017858:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 801785c:	bfb5      	itete	lt
 801785e:	e9c4 0200 	strdlt	r0, r2, [r4]
 8017862:	e9c4 3100 	strdge	r3, r1, [r4]
 8017866:	460a      	movlt	r2, r1
 8017868:	4603      	movge	r3, r0
 801786a:	3408      	adds	r4, #8
 801786c:	4618      	mov	r0, r3
 801786e:	4611      	mov	r1, r2
 8017870:	e724      	b.n	80176bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8017872:	4299      	cmp	r1, r3
 8017874:	d928      	bls.n	80178c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8017876:	f1a3 0210 	sub.w	r2, r3, #16
 801787a:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 801787e:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8017882:	45ac      	cmp	ip, r5
 8017884:	db06      	blt.n	8017894 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8017886:	d11d      	bne.n	80178c4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8017888:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 801788c:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8017890:	42ae      	cmp	r6, r5
 8017892:	da17      	bge.n	80178c4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8017894:	4615      	mov	r5, r2
 8017896:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 801789a:	f855 6f08 	ldr.w	r6, [r5, #8]!
 801789e:	6116      	str	r6, [r2, #16]
 80178a0:	686e      	ldr	r6, [r5, #4]
 80178a2:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80178a6:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 80178aa:	f8a2 9008 	strh.w	r9, [r2, #8]
 80178ae:	42a8      	cmp	r0, r5
 80178b0:	6156      	str	r6, [r2, #20]
 80178b2:	f8a2 c00a 	strh.w	ip, [r2, #10]
 80178b6:	f8a2 800c 	strh.w	r8, [r2, #12]
 80178ba:	f8a2 e00e 	strh.w	lr, [r2, #14]
 80178be:	f1a2 0208 	sub.w	r2, r2, #8
 80178c2:	d1da      	bne.n	801787a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 80178c4:	3308      	adds	r3, #8
 80178c6:	e7d4      	b.n	8017872 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80178c8:	42bc      	cmp	r4, r7
 80178ca:	d903      	bls.n	80178d4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 80178cc:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 80178d0:	3c08      	subs	r4, #8
 80178d2:	e6f3      	b.n	80176bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80178d4:	b050      	add	sp, #320	; 0x140
 80178d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080178da <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 80178da:	b510      	push	{r4, lr}
 80178dc:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80178de:	07da      	lsls	r2, r3, #31
 80178e0:	4604      	mov	r4, r0
 80178e2:	d507      	bpl.n	80178f4 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 80178e4:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 80178e8:	f7ff fe8a 	bl	8017600 <_ZN8touchgfx7Outline6lineToEii>
 80178ec:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80178ee:	f023 0301 	bic.w	r3, r3, #1
 80178f2:	6243      	str	r3, [r0, #36]	; 0x24
 80178f4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80178f6:	079b      	lsls	r3, r3, #30
 80178f8:	d521      	bpl.n	801793e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 80178fa:	6923      	ldr	r3, [r4, #16]
 80178fc:	88d9      	ldrh	r1, [r3, #6]
 80178fe:	889a      	ldrh	r2, [r3, #4]
 8017900:	430a      	orrs	r2, r1
 8017902:	d010      	beq.n	8017926 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8017904:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8017908:	2a00      	cmp	r2, #0
 801790a:	db0c      	blt.n	8017926 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 801790c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 801790e:	428a      	cmp	r2, r1
 8017910:	da09      	bge.n	8017926 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8017912:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8017916:	4291      	cmp	r1, r2
 8017918:	bf88      	it	hi
 801791a:	3308      	addhi	r3, #8
 801791c:	f102 0201 	add.w	r2, r2, #1
 8017920:	bf88      	it	hi
 8017922:	6123      	strhi	r3, [r4, #16]
 8017924:	60a2      	str	r2, [r4, #8]
 8017926:	68a1      	ldr	r1, [r4, #8]
 8017928:	b129      	cbz	r1, 8017936 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801792a:	6863      	ldr	r3, [r4, #4]
 801792c:	4299      	cmp	r1, r3
 801792e:	d802      	bhi.n	8017936 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8017930:	68e0      	ldr	r0, [r4, #12]
 8017932:	f7ff febc 	bl	80176ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8017936:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8017938:	f023 0302 	bic.w	r3, r3, #2
 801793c:	6263      	str	r3, [r4, #36]	; 0x24
 801793e:	68e0      	ldr	r0, [r4, #12]
 8017940:	bd10      	pop	{r4, pc}
	...

08017944 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8017944:	4b01      	ldr	r3, [pc, #4]	; (801794c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8017946:	6818      	ldr	r0, [r3, #0]
 8017948:	4770      	bx	lr
 801794a:	bf00      	nop
 801794c:	20002254 	.word	0x20002254

08017950 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8017950:	4b01      	ldr	r3, [pc, #4]	; (8017958 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8017952:	6818      	ldr	r0, [r3, #0]
 8017954:	4770      	bx	lr
 8017956:	bf00      	nop
 8017958:	20002258 	.word	0x20002258

0801795c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 801795c:	b510      	push	{r4, lr}
 801795e:	6803      	ldr	r3, [r0, #0]
 8017960:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017962:	460c      	mov	r4, r1
 8017964:	4798      	blx	r3
 8017966:	1b03      	subs	r3, r0, r4
 8017968:	4258      	negs	r0, r3
 801796a:	4158      	adcs	r0, r3
 801796c:	bd10      	pop	{r4, pc}
	...

08017970 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8017970:	4b01      	ldr	r3, [pc, #4]	; (8017978 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8017972:	6019      	str	r1, [r3, #0]
 8017974:	4770      	bx	lr
 8017976:	bf00      	nop
 8017978:	2000225c 	.word	0x2000225c

0801797c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801797c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017980:	4696      	mov	lr, r2
 8017982:	4605      	mov	r5, r0
 8017984:	4614      	mov	r4, r2
 8017986:	460e      	mov	r6, r1
 8017988:	461f      	mov	r7, r3
 801798a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801798e:	b097      	sub	sp, #92	; 0x5c
 8017990:	f10d 0c1c 	add.w	ip, sp, #28
 8017994:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017998:	f8de 3000 	ldr.w	r3, [lr]
 801799c:	f8cc 3000 	str.w	r3, [ip]
 80179a0:	f104 0e14 	add.w	lr, r4, #20
 80179a4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80179a8:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80179ac:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80179b0:	f8de 3000 	ldr.w	r3, [lr]
 80179b4:	f8cc 3000 	str.w	r3, [ip]
 80179b8:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80179bc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80179c0:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80179c4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80179c8:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 80179cc:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 80179d0:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 80179d4:	f8de 3000 	ldr.w	r3, [lr]
 80179d8:	f8cc 3000 	str.w	r3, [ip]
 80179dc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80179de:	682b      	ldr	r3, [r5, #0]
 80179e0:	9201      	str	r2, [sp, #4]
 80179e2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80179e6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80179e8:	9200      	str	r2, [sp, #0]
 80179ea:	f8cd 8008 	str.w	r8, [sp, #8]
 80179ee:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 80179f2:	aa07      	add	r2, sp, #28
 80179f4:	463b      	mov	r3, r7
 80179f6:	4631      	mov	r1, r6
 80179f8:	4628      	mov	r0, r5
 80179fa:	47d8      	blx	fp
 80179fc:	46a6      	mov	lr, r4
 80179fe:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017a02:	f10d 0c1c 	add.w	ip, sp, #28
 8017a06:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017a0a:	f8de 3000 	ldr.w	r3, [lr]
 8017a0e:	f8cc 3000 	str.w	r3, [ip]
 8017a12:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8017a16:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017a1a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8017a1e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017a22:	343c      	adds	r4, #60	; 0x3c
 8017a24:	f8de 3000 	ldr.w	r3, [lr]
 8017a28:	f8cc 3000 	str.w	r3, [ip]
 8017a2c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017a2e:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8017a32:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017a36:	6823      	ldr	r3, [r4, #0]
 8017a38:	f8cc 3000 	str.w	r3, [ip]
 8017a3c:	682b      	ldr	r3, [r5, #0]
 8017a3e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8017a42:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8017a44:	9201      	str	r2, [sp, #4]
 8017a46:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017a48:	9200      	str	r2, [sp, #0]
 8017a4a:	f8cd 8008 	str.w	r8, [sp, #8]
 8017a4e:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8017a50:	aa07      	add	r2, sp, #28
 8017a52:	463b      	mov	r3, r7
 8017a54:	4631      	mov	r1, r6
 8017a56:	4628      	mov	r0, r5
 8017a58:	47a0      	blx	r4
 8017a5a:	b017      	add	sp, #92	; 0x5c
 8017a5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017a60 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8017a60:	2000      	movs	r0, #0
 8017a62:	4770      	bx	lr

08017a64 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8017a64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a68:	b08d      	sub	sp, #52	; 0x34
 8017a6a:	4688      	mov	r8, r1
 8017a6c:	9916      	ldr	r1, [sp, #88]	; 0x58
 8017a6e:	f8d3 c000 	ldr.w	ip, [r3]
 8017a72:	680f      	ldr	r7, [r1, #0]
 8017a74:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8017a78:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8017a7c:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8017a80:	edd3 6a07 	vldr	s13, [r3, #28]
 8017a84:	9918      	ldr	r1, [sp, #96]	; 0x60
 8017a86:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8017a8a:	f9b1 9000 	ldrsh.w	r9, [r1]
 8017a8e:	f9ba 1000 	ldrsh.w	r1, [sl]
 8017a92:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8017a96:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8017a9a:	eba7 070c 	sub.w	r7, r7, ip
 8017a9e:	42bc      	cmp	r4, r7
 8017aa0:	bfa8      	it	ge
 8017aa2:	463c      	movge	r4, r7
 8017aa4:	ee07 4a90 	vmov	s15, r4
 8017aa8:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8017aac:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8017ab0:	ee25 4a04 	vmul.f32	s8, s10, s8
 8017ab4:	ee65 4a24 	vmul.f32	s9, s10, s9
 8017ab8:	ee25 5a27 	vmul.f32	s10, s10, s15
 8017abc:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8017ac0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8017ac4:	eb09 0e0c 	add.w	lr, r9, ip
 8017ac8:	4571      	cmp	r1, lr
 8017aca:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8017ace:	ee32 1a05 	vadd.f32	s2, s4, s10
 8017ad2:	ee36 0a84 	vadd.f32	s0, s13, s8
 8017ad6:	ee61 1a87 	vmul.f32	s3, s3, s14
 8017ada:	ee22 2a07 	vmul.f32	s4, s4, s14
 8017ade:	f340 808d 	ble.w	8017bfc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8017ae2:	eba1 060e 	sub.w	r6, r1, lr
 8017ae6:	fb96 f5f4 	sdiv	r5, r6, r4
 8017aea:	ee07 5a10 	vmov	s14, r5
 8017aee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017af2:	2d00      	cmp	r5, #0
 8017af4:	fb04 6615 	mls	r6, r4, r5, r6
 8017af8:	eea7 0a04 	vfma.f32	s0, s14, s8
 8017afc:	eee7 0a24 	vfma.f32	s1, s14, s9
 8017b00:	eea7 1a05 	vfma.f32	s2, s14, s10
 8017b04:	dd13      	ble.n	8017b2e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8017b06:	ee70 6a44 	vsub.f32	s13, s0, s8
 8017b0a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8017b0e:	eef5 6a40 	vcmp.f32	s13, #0.0
 8017b12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b16:	bf18      	it	ne
 8017b18:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8017b1c:	ee31 2a45 	vsub.f32	s4, s2, s10
 8017b20:	bf08      	it	eq
 8017b22:	eeb0 7a67 	vmoveq.f32	s14, s15
 8017b26:	ee61 1a87 	vmul.f32	s3, s3, s14
 8017b2a:	ee22 2a07 	vmul.f32	s4, s4, s14
 8017b2e:	fb05 f204 	mul.w	r2, r5, r4
 8017b32:	1abf      	subs	r7, r7, r2
 8017b34:	4494      	add	ip, r2
 8017b36:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8017b3a:	4411      	add	r1, r2
 8017b3c:	eb09 020c 	add.w	r2, r9, ip
 8017b40:	443a      	add	r2, r7
 8017b42:	b209      	sxth	r1, r1
 8017b44:	428a      	cmp	r2, r1
 8017b46:	bfc4      	itt	gt
 8017b48:	eba1 0209 	subgt.w	r2, r1, r9
 8017b4c:	eba2 070c 	subgt.w	r7, r2, ip
 8017b50:	2f00      	cmp	r7, #0
 8017b52:	dd50      	ble.n	8017bf6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8017b54:	fb97 f1f4 	sdiv	r1, r7, r4
 8017b58:	fb04 7211 	mls	r2, r4, r1, r7
 8017b5c:	b90a      	cbnz	r2, 8017b62 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8017b5e:	3901      	subs	r1, #1
 8017b60:	4622      	mov	r2, r4
 8017b62:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8017b66:	6840      	ldr	r0, [r0, #4]
 8017b68:	900b      	str	r0, [sp, #44]	; 0x2c
 8017b6a:	f8d0 a000 	ldr.w	sl, [r0]
 8017b6e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8017b70:	9008      	str	r0, [sp, #32]
 8017b72:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8017b76:	9818      	ldr	r0, [sp, #96]	; 0x60
 8017b78:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8017b7c:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8017b80:	695b      	ldr	r3, [r3, #20]
 8017b82:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017b84:	445b      	add	r3, fp
 8017b86:	eef0 6a42 	vmov.f32	s13, s4
 8017b8a:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8017b8e:	ee21 3a23 	vmul.f32	s6, s2, s7
 8017b92:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8017b96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017b9a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8017b9e:	9307      	str	r3, [sp, #28]
 8017ba0:	ee17 7a90 	vmov	r7, s15
 8017ba4:	ee73 7a42 	vsub.f32	s15, s6, s4
 8017ba8:	eeb0 7a61 	vmov.f32	s14, s3
 8017bac:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8017bb0:	ee16 3a90 	vmov	r3, s13
 8017bb4:	fb97 f7f4 	sdiv	r7, r7, r4
 8017bb8:	ee17 ca90 	vmov	ip, s15
 8017bbc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8017bc0:	fb9c fcf4 	sdiv	ip, ip, r4
 8017bc4:	fb0c 3306 	mla	r3, ip, r6, r3
 8017bc8:	9302      	str	r3, [sp, #8]
 8017bca:	ee17 3a10 	vmov	r3, s14
 8017bce:	44b6      	add	lr, r6
 8017bd0:	fb04 e505 	mla	r5, r4, r5, lr
 8017bd4:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8017bd8:	fb07 3706 	mla	r7, r7, r6, r3
 8017bdc:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8017be0:	e9cd 4700 	strd	r4, r7, [sp]
 8017be4:	2900      	cmp	r1, #0
 8017be6:	bfcc      	ite	gt
 8017be8:	46a1      	movgt	r9, r4
 8017bea:	4691      	movle	r9, r2
 8017bec:	eba9 0306 	sub.w	r3, r9, r6
 8017bf0:	f8da 4008 	ldr.w	r4, [sl, #8]
 8017bf4:	47a0      	blx	r4
 8017bf6:	b00d      	add	sp, #52	; 0x34
 8017bf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017bfc:	2500      	movs	r5, #0
 8017bfe:	462e      	mov	r6, r5
 8017c00:	e799      	b.n	8017b36 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08017c04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8017c04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c08:	b0db      	sub	sp, #364	; 0x16c
 8017c0a:	461d      	mov	r5, r3
 8017c0c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8017c10:	930a      	str	r3, [sp, #40]	; 0x28
 8017c12:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8017c16:	930b      	str	r3, [sp, #44]	; 0x2c
 8017c18:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8017c1c:	9310      	str	r3, [sp, #64]	; 0x40
 8017c1e:	6803      	ldr	r3, [r0, #0]
 8017c20:	910f      	str	r1, [sp, #60]	; 0x3c
 8017c22:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8017c24:	9009      	str	r0, [sp, #36]	; 0x24
 8017c26:	4614      	mov	r4, r2
 8017c28:	4629      	mov	r1, r5
 8017c2a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8017c2e:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8017c32:	47b8      	blx	r7
 8017c34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017c36:	6058      	str	r0, [r3, #4]
 8017c38:	2800      	cmp	r0, #0
 8017c3a:	f000 83a1 	beq.w	8018380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017c3e:	682b      	ldr	r3, [r5, #0]
 8017c40:	9314      	str	r3, [sp, #80]	; 0x50
 8017c42:	686b      	ldr	r3, [r5, #4]
 8017c44:	9315      	str	r3, [sp, #84]	; 0x54
 8017c46:	4bc4      	ldr	r3, [pc, #784]	; (8017f58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8017c48:	ed94 7a02 	vldr	s14, [r4, #8]
 8017c4c:	7819      	ldrb	r1, [r3, #0]
 8017c4e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8017c52:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8017c56:	2900      	cmp	r1, #0
 8017c58:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017c5c:	bf16      	itet	ne
 8017c5e:	4619      	movne	r1, r3
 8017c60:	4611      	moveq	r1, r2
 8017c62:	4613      	movne	r3, r2
 8017c64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017c68:	9116      	str	r1, [sp, #88]	; 0x58
 8017c6a:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8017c6e:	f240 8387 	bls.w	8018380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017c72:	ed94 7a07 	vldr	s14, [r4, #28]
 8017c76:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017c7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017c7e:	f240 837f 	bls.w	8018380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017c82:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8017c86:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017c8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017c8e:	f240 8377 	bls.w	8018380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017c92:	6822      	ldr	r2, [r4, #0]
 8017c94:	4bb1      	ldr	r3, [pc, #708]	; (8017f5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8017c96:	429a      	cmp	r2, r3
 8017c98:	f2c0 8372 	blt.w	8018380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017c9c:	49b0      	ldr	r1, [pc, #704]	; (8017f60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8017c9e:	6963      	ldr	r3, [r4, #20]
 8017ca0:	428a      	cmp	r2, r1
 8017ca2:	f300 836d 	bgt.w	8018380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017ca6:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8017caa:	48ae      	ldr	r0, [pc, #696]	; (8017f64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8017cac:	33ff      	adds	r3, #255	; 0xff
 8017cae:	4283      	cmp	r3, r0
 8017cb0:	f200 8366 	bhi.w	8018380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017cb4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8017cb6:	4dac      	ldr	r5, [pc, #688]	; (8017f68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8017cb8:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8017cbc:	33ff      	adds	r3, #255	; 0xff
 8017cbe:	42ab      	cmp	r3, r5
 8017cc0:	f200 835e 	bhi.w	8018380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017cc4:	6862      	ldr	r2, [r4, #4]
 8017cc6:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8017cca:	33ff      	adds	r3, #255	; 0xff
 8017ccc:	4283      	cmp	r3, r0
 8017cce:	f200 8357 	bhi.w	8018380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017cd2:	69a1      	ldr	r1, [r4, #24]
 8017cd4:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8017cd8:	33ff      	adds	r3, #255	; 0xff
 8017cda:	4283      	cmp	r3, r0
 8017cdc:	f200 8350 	bhi.w	8018380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017ce0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8017ce2:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8017ce6:	30ff      	adds	r0, #255	; 0xff
 8017ce8:	42a8      	cmp	r0, r5
 8017cea:	f200 8349 	bhi.w	8018380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017cee:	428a      	cmp	r2, r1
 8017cf0:	f280 8110 	bge.w	8017f14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8017cf4:	429a      	cmp	r2, r3
 8017cf6:	f300 8119 	bgt.w	8017f2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8017cfa:	4299      	cmp	r1, r3
 8017cfc:	f280 811d 	bge.w	8017f3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8017d00:	2502      	movs	r5, #2
 8017d02:	2701      	movs	r7, #1
 8017d04:	46a9      	mov	r9, r5
 8017d06:	46b8      	mov	r8, r7
 8017d08:	f04f 0a00 	mov.w	sl, #0
 8017d0c:	4621      	mov	r1, r4
 8017d0e:	a849      	add	r0, sp, #292	; 0x124
 8017d10:	f003 ffc6 	bl	801bca0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8017d14:	4622      	mov	r2, r4
 8017d16:	4653      	mov	r3, sl
 8017d18:	a949      	add	r1, sp, #292	; 0x124
 8017d1a:	f8cd 9000 	str.w	r9, [sp]
 8017d1e:	a819      	add	r0, sp, #100	; 0x64
 8017d20:	f004 f8ee 	bl	801bf00 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8017d24:	4622      	mov	r2, r4
 8017d26:	4653      	mov	r3, sl
 8017d28:	a949      	add	r1, sp, #292	; 0x124
 8017d2a:	f8cd 8000 	str.w	r8, [sp]
 8017d2e:	a829      	add	r0, sp, #164	; 0xa4
 8017d30:	f004 f8e6 	bl	801bf00 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8017d34:	4643      	mov	r3, r8
 8017d36:	4622      	mov	r2, r4
 8017d38:	a949      	add	r1, sp, #292	; 0x124
 8017d3a:	f8cd 9000 	str.w	r9, [sp]
 8017d3e:	a839      	add	r0, sp, #228	; 0xe4
 8017d40:	f004 f8de 	bl	801bf00 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8017d44:	42af      	cmp	r7, r5
 8017d46:	bfb5      	itete	lt
 8017d48:	2300      	movlt	r3, #0
 8017d4a:	2301      	movge	r3, #1
 8017d4c:	930e      	strlt	r3, [sp, #56]	; 0x38
 8017d4e:	930e      	strge	r3, [sp, #56]	; 0x38
 8017d50:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017d52:	e893 0003 	ldmia.w	r3, {r0, r1}
 8017d56:	af12      	add	r7, sp, #72	; 0x48
 8017d58:	bfb9      	ittee	lt
 8017d5a:	ad29      	addlt	r5, sp, #164	; 0xa4
 8017d5c:	ac19      	addlt	r4, sp, #100	; 0x64
 8017d5e:	ad19      	addge	r5, sp, #100	; 0x64
 8017d60:	ac29      	addge	r4, sp, #164	; 0xa4
 8017d62:	e887 0003 	stmia.w	r7, {r0, r1}
 8017d66:	b928      	cbnz	r0, 8017d74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8017d68:	4b80      	ldr	r3, [pc, #512]	; (8017f6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8017d6a:	6818      	ldr	r0, [r3, #0]
 8017d6c:	6803      	ldr	r3, [r0, #0]
 8017d6e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017d70:	4798      	blx	r3
 8017d72:	6038      	str	r0, [r7, #0]
 8017d74:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017d76:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8017d7a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8017d7e:	930c      	str	r3, [sp, #48]	; 0x30
 8017d80:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017d82:	6963      	ldr	r3, [r4, #20]
 8017d84:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8017d86:	440b      	add	r3, r1
 8017d88:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8017d8c:	4408      	add	r0, r1
 8017d8e:	b200      	sxth	r0, r0
 8017d90:	4283      	cmp	r3, r0
 8017d92:	900d      	str	r0, [sp, #52]	; 0x34
 8017d94:	f280 80dd 	bge.w	8017f52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8017d98:	428b      	cmp	r3, r1
 8017d9a:	da08      	bge.n	8017dae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8017d9c:	2a00      	cmp	r2, #0
 8017d9e:	dd06      	ble.n	8017dae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8017da0:	1acb      	subs	r3, r1, r3
 8017da2:	429a      	cmp	r2, r3
 8017da4:	f2c0 80e4 	blt.w	8017f70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8017da8:	2b00      	cmp	r3, #0
 8017daa:	f300 80e2 	bgt.w	8017f72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8017dae:	6967      	ldr	r7, [r4, #20]
 8017db0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017db2:	443b      	add	r3, r7
 8017db4:	461f      	mov	r7, r3
 8017db6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017db8:	1bdf      	subs	r7, r3, r7
 8017dba:	4297      	cmp	r7, r2
 8017dbc:	bfa8      	it	ge
 8017dbe:	4617      	movge	r7, r2
 8017dc0:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8017dc4:	2f00      	cmp	r7, #0
 8017dc6:	f340 8166 	ble.w	8018096 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8017dca:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017dcc:	6829      	ldr	r1, [r5, #0]
 8017dce:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017dd2:	f9bb 3000 	ldrsh.w	r3, [fp]
 8017dd6:	6820      	ldr	r0, [r4, #0]
 8017dd8:	4411      	add	r1, r2
 8017dda:	4299      	cmp	r1, r3
 8017ddc:	dd1a      	ble.n	8017e14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8017dde:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8017de2:	440b      	add	r3, r1
 8017de4:	4402      	add	r2, r0
 8017de6:	b21b      	sxth	r3, r3
 8017de8:	429a      	cmp	r2, r3
 8017dea:	dc13      	bgt.n	8017e14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8017dec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017dee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017df0:	681b      	ldr	r3, [r3, #0]
 8017df2:	9206      	str	r2, [sp, #24]
 8017df4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017df6:	9205      	str	r2, [sp, #20]
 8017df8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017dfa:	9500      	str	r5, [sp, #0]
 8017dfc:	e9cd b203 	strd	fp, r2, [sp, #12]
 8017e00:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8017e02:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017e04:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8017e08:	a912      	add	r1, sp, #72	; 0x48
 8017e0a:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8017e0e:	aa49      	add	r2, sp, #292	; 0x124
 8017e10:	4623      	mov	r3, r4
 8017e12:	47c8      	blx	r9
 8017e14:	e9d4 2300 	ldrd	r2, r3, [r4]
 8017e18:	441a      	add	r2, r3
 8017e1a:	6963      	ldr	r3, [r4, #20]
 8017e1c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8017e20:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8017e24:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8017e28:	68a1      	ldr	r1, [r4, #8]
 8017e2a:	ed94 6a08 	vldr	s12, [r4, #32]
 8017e2e:	6022      	str	r2, [r4, #0]
 8017e30:	3301      	adds	r3, #1
 8017e32:	6163      	str	r3, [r4, #20]
 8017e34:	69a3      	ldr	r3, [r4, #24]
 8017e36:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017e3a:	3b01      	subs	r3, #1
 8017e3c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8017e40:	61a3      	str	r3, [r4, #24]
 8017e42:	6923      	ldr	r3, [r4, #16]
 8017e44:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8017e48:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017e4c:	edd4 6a07 	vldr	s13, [r4, #28]
 8017e50:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8017e54:	440b      	add	r3, r1
 8017e56:	68e1      	ldr	r1, [r4, #12]
 8017e58:	6123      	str	r3, [r4, #16]
 8017e5a:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017e5e:	428b      	cmp	r3, r1
 8017e60:	edc4 6a07 	vstr	s13, [r4, #28]
 8017e64:	db15      	blt.n	8017e92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8017e66:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8017e6a:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017e6e:	3201      	adds	r2, #1
 8017e70:	edc4 6a07 	vstr	s13, [r4, #28]
 8017e74:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8017e78:	6022      	str	r2, [r4, #0]
 8017e7a:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017e7e:	1a5b      	subs	r3, r3, r1
 8017e80:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8017e84:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8017e88:	6123      	str	r3, [r4, #16]
 8017e8a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017e8e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8017e92:	e9d5 2300 	ldrd	r2, r3, [r5]
 8017e96:	441a      	add	r2, r3
 8017e98:	696b      	ldr	r3, [r5, #20]
 8017e9a:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8017e9e:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8017ea2:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8017ea6:	68a9      	ldr	r1, [r5, #8]
 8017ea8:	ed95 6a08 	vldr	s12, [r5, #32]
 8017eac:	602a      	str	r2, [r5, #0]
 8017eae:	3301      	adds	r3, #1
 8017eb0:	616b      	str	r3, [r5, #20]
 8017eb2:	69ab      	ldr	r3, [r5, #24]
 8017eb4:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017eb8:	3b01      	subs	r3, #1
 8017eba:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8017ebe:	61ab      	str	r3, [r5, #24]
 8017ec0:	692b      	ldr	r3, [r5, #16]
 8017ec2:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8017ec6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017eca:	edd5 6a07 	vldr	s13, [r5, #28]
 8017ece:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017ed2:	440b      	add	r3, r1
 8017ed4:	68e9      	ldr	r1, [r5, #12]
 8017ed6:	612b      	str	r3, [r5, #16]
 8017ed8:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017edc:	428b      	cmp	r3, r1
 8017ede:	edc5 6a07 	vstr	s13, [r5, #28]
 8017ee2:	db15      	blt.n	8017f10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8017ee4:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8017ee8:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017eec:	3201      	adds	r2, #1
 8017eee:	edc5 6a07 	vstr	s13, [r5, #28]
 8017ef2:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8017ef6:	602a      	str	r2, [r5, #0]
 8017ef8:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017efc:	1a5b      	subs	r3, r3, r1
 8017efe:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8017f02:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8017f06:	612b      	str	r3, [r5, #16]
 8017f08:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017f0c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017f10:	3f01      	subs	r7, #1
 8017f12:	e757      	b.n	8017dc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8017f14:	4299      	cmp	r1, r3
 8017f16:	dc13      	bgt.n	8017f40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8017f18:	429a      	cmp	r2, r3
 8017f1a:	da14      	bge.n	8017f46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8017f1c:	2502      	movs	r5, #2
 8017f1e:	2703      	movs	r7, #3
 8017f20:	46a9      	mov	r9, r5
 8017f22:	f04f 0800 	mov.w	r8, #0
 8017f26:	f04f 0a01 	mov.w	sl, #1
 8017f2a:	e6ef      	b.n	8017d0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8017f2c:	2501      	movs	r5, #1
 8017f2e:	2700      	movs	r7, #0
 8017f30:	46a9      	mov	r9, r5
 8017f32:	46b8      	mov	r8, r7
 8017f34:	f04f 0a02 	mov.w	sl, #2
 8017f38:	e6e8      	b.n	8017d0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8017f3a:	2501      	movs	r5, #1
 8017f3c:	2702      	movs	r7, #2
 8017f3e:	e6e1      	b.n	8017d04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8017f40:	2500      	movs	r5, #0
 8017f42:	2701      	movs	r7, #1
 8017f44:	e7f4      	b.n	8017f30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8017f46:	2702      	movs	r7, #2
 8017f48:	2503      	movs	r5, #3
 8017f4a:	f04f 0900 	mov.w	r9, #0
 8017f4e:	46b8      	mov	r8, r7
 8017f50:	e7e9      	b.n	8017f26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8017f52:	4613      	mov	r3, r2
 8017f54:	e728      	b.n	8017da8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8017f56:	bf00      	nop
 8017f58:	20002244 	.word	0x20002244
 8017f5c:	fffd8f01 	.word	0xfffd8f01
 8017f60:	00027100 	.word	0x00027100
 8017f64:	0004e1ff 	.word	0x0004e1ff
 8017f68:	0004e1fe 	.word	0x0004e1fe
 8017f6c:	2000224c 	.word	0x2000224c
 8017f70:	4613      	mov	r3, r2
 8017f72:	992b      	ldr	r1, [sp, #172]	; 0xac
 8017f74:	9111      	str	r1, [sp, #68]	; 0x44
 8017f76:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8017f7a:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8017f7e:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8017f80:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8017f84:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8017f88:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8017f8c:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8017f90:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8017f94:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8017f98:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8017f9c:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8017fa0:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8017fa4:	469e      	mov	lr, r3
 8017fa6:	469c      	mov	ip, r3
 8017fa8:	f04f 0900 	mov.w	r9, #0
 8017fac:	f1bc 0f00 	cmp.w	ip, #0
 8017fb0:	d147      	bne.n	8018042 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8017fb2:	eb03 0c07 	add.w	ip, r3, r7
 8017fb6:	1ad7      	subs	r7, r2, r3
 8017fb8:	f1b9 0f00 	cmp.w	r9, #0
 8017fbc:	d009      	beq.n	8017fd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8017fbe:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8017fc2:	9029      	str	r0, [sp, #164]	; 0xa4
 8017fc4:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8017fc8:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8017fcc:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8017fd0:	912d      	str	r1, [sp, #180]	; 0xb4
 8017fd2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8017fd4:	9111      	str	r1, [sp, #68]	; 0x44
 8017fd6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8017fda:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8017fde:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8017fe2:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8017fe6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8017fea:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8017fee:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8017ff2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8017ff6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8017ffa:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8017ffe:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8018002:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8018006:	f04f 0800 	mov.w	r8, #0
 801800a:	f1be 0f00 	cmp.w	lr, #0
 801800e:	d031      	beq.n	8018074 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8018010:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8018012:	4431      	add	r1, r6
 8018014:	4549      	cmp	r1, r9
 8018016:	4450      	add	r0, sl
 8018018:	ee76 6aa4 	vadd.f32	s13, s13, s9
 801801c:	ee37 7a04 	vadd.f32	s14, s14, s8
 8018020:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8018024:	db08      	blt.n	8018038 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8018026:	ee77 7a85 	vadd.f32	s15, s15, s10
 801802a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801802e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8018032:	3001      	adds	r0, #1
 8018034:	eba1 0109 	sub.w	r1, r1, r9
 8018038:	f10e 3eff 	add.w	lr, lr, #4294967295
 801803c:	f04f 0801 	mov.w	r8, #1
 8018040:	e7e3      	b.n	801800a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8018042:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8018044:	4431      	add	r1, r6
 8018046:	4541      	cmp	r1, r8
 8018048:	4450      	add	r0, sl
 801804a:	ee37 7a24 	vadd.f32	s14, s14, s9
 801804e:	ee77 7a84 	vadd.f32	s15, s15, s8
 8018052:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8018056:	db08      	blt.n	801806a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8018058:	ee76 6a85 	vadd.f32	s13, s13, s10
 801805c:	ee37 7a25 	vadd.f32	s14, s14, s11
 8018060:	ee77 7a86 	vadd.f32	s15, s15, s12
 8018064:	3001      	adds	r0, #1
 8018066:	eba1 0108 	sub.w	r1, r1, r8
 801806a:	f10c 3cff 	add.w	ip, ip, #4294967295
 801806e:	f04f 0901 	mov.w	r9, #1
 8018072:	e79b      	b.n	8017fac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8018074:	449c      	add	ip, r3
 8018076:	1aff      	subs	r7, r7, r3
 8018078:	f1b8 0f00 	cmp.w	r8, #0
 801807c:	d009      	beq.n	8018092 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 801807e:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8018082:	9019      	str	r0, [sp, #100]	; 0x64
 8018084:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8018088:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801808c:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8018090:	911d      	str	r1, [sp, #116]	; 0x74
 8018092:	1ad2      	subs	r2, r2, r3
 8018094:	e68b      	b.n	8017dae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8018096:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018098:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 801809a:	2b00      	cmp	r3, #0
 801809c:	f000 80d1 	beq.w	8018242 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80180a0:	ad19      	add	r5, sp, #100	; 0x64
 80180a2:	ac39      	add	r4, sp, #228	; 0xe4
 80180a4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80180a6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80180aa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80180ae:	930c      	str	r3, [sp, #48]	; 0x30
 80180b0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80180b2:	6963      	ldr	r3, [r4, #20]
 80180b4:	440b      	add	r3, r1
 80180b6:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80180ba:	4408      	add	r0, r1
 80180bc:	b200      	sxth	r0, r0
 80180be:	4283      	cmp	r3, r0
 80180c0:	900d      	str	r0, [sp, #52]	; 0x34
 80180c2:	f280 80c1 	bge.w	8018248 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80180c6:	428b      	cmp	r3, r1
 80180c8:	da08      	bge.n	80180dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80180ca:	2a00      	cmp	r2, #0
 80180cc:	dd06      	ble.n	80180dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80180ce:	1acb      	subs	r3, r1, r3
 80180d0:	429a      	cmp	r2, r3
 80180d2:	f2c0 80bb 	blt.w	801824c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80180d6:	2b00      	cmp	r3, #0
 80180d8:	f300 80b9 	bgt.w	801824e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80180dc:	6967      	ldr	r7, [r4, #20]
 80180de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80180e0:	443b      	add	r3, r7
 80180e2:	461f      	mov	r7, r3
 80180e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80180e6:	1bdf      	subs	r7, r3, r7
 80180e8:	4297      	cmp	r7, r2
 80180ea:	bfa8      	it	ge
 80180ec:	4617      	movge	r7, r2
 80180ee:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80180f2:	2f00      	cmp	r7, #0
 80180f4:	f340 813c 	ble.w	8018370 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 80180f8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80180fa:	6829      	ldr	r1, [r5, #0]
 80180fc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018100:	f9bb 3000 	ldrsh.w	r3, [fp]
 8018104:	6820      	ldr	r0, [r4, #0]
 8018106:	4411      	add	r1, r2
 8018108:	4299      	cmp	r1, r3
 801810a:	dd1a      	ble.n	8018142 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801810c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8018110:	440b      	add	r3, r1
 8018112:	4402      	add	r2, r0
 8018114:	b21b      	sxth	r3, r3
 8018116:	429a      	cmp	r2, r3
 8018118:	dc13      	bgt.n	8018142 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801811a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801811c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801811e:	681b      	ldr	r3, [r3, #0]
 8018120:	9206      	str	r2, [sp, #24]
 8018122:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018124:	9205      	str	r2, [sp, #20]
 8018126:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018128:	9500      	str	r5, [sp, #0]
 801812a:	e9cd b203 	strd	fp, r2, [sp, #12]
 801812e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8018130:	9809      	ldr	r0, [sp, #36]	; 0x24
 8018132:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8018136:	a912      	add	r1, sp, #72	; 0x48
 8018138:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 801813c:	aa49      	add	r2, sp, #292	; 0x124
 801813e:	4623      	mov	r3, r4
 8018140:	47c8      	blx	r9
 8018142:	e9d4 2300 	ldrd	r2, r3, [r4]
 8018146:	441a      	add	r2, r3
 8018148:	6963      	ldr	r3, [r4, #20]
 801814a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 801814e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8018152:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8018156:	68a1      	ldr	r1, [r4, #8]
 8018158:	ed94 6a08 	vldr	s12, [r4, #32]
 801815c:	6022      	str	r2, [r4, #0]
 801815e:	3301      	adds	r3, #1
 8018160:	6163      	str	r3, [r4, #20]
 8018162:	69a3      	ldr	r3, [r4, #24]
 8018164:	ee37 7a27 	vadd.f32	s14, s14, s15
 8018168:	3b01      	subs	r3, #1
 801816a:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801816e:	61a3      	str	r3, [r4, #24]
 8018170:	6923      	ldr	r3, [r4, #16]
 8018172:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8018176:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801817a:	edd4 6a07 	vldr	s13, [r4, #28]
 801817e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8018182:	440b      	add	r3, r1
 8018184:	68e1      	ldr	r1, [r4, #12]
 8018186:	6123      	str	r3, [r4, #16]
 8018188:	ee76 6a86 	vadd.f32	s13, s13, s12
 801818c:	428b      	cmp	r3, r1
 801818e:	edc4 6a07 	vstr	s13, [r4, #28]
 8018192:	db15      	blt.n	80181c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8018194:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8018198:	ee76 6a26 	vadd.f32	s13, s12, s13
 801819c:	3201      	adds	r2, #1
 801819e:	edc4 6a07 	vstr	s13, [r4, #28]
 80181a2:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80181a6:	6022      	str	r2, [r4, #0]
 80181a8:	ee36 7a87 	vadd.f32	s14, s13, s14
 80181ac:	1a5b      	subs	r3, r3, r1
 80181ae:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80181b2:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80181b6:	6123      	str	r3, [r4, #16]
 80181b8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80181bc:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80181c0:	e9d5 2300 	ldrd	r2, r3, [r5]
 80181c4:	441a      	add	r2, r3
 80181c6:	696b      	ldr	r3, [r5, #20]
 80181c8:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80181cc:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80181d0:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80181d4:	68a9      	ldr	r1, [r5, #8]
 80181d6:	ed95 6a08 	vldr	s12, [r5, #32]
 80181da:	602a      	str	r2, [r5, #0]
 80181dc:	3301      	adds	r3, #1
 80181de:	616b      	str	r3, [r5, #20]
 80181e0:	69ab      	ldr	r3, [r5, #24]
 80181e2:	ee37 7a27 	vadd.f32	s14, s14, s15
 80181e6:	3b01      	subs	r3, #1
 80181e8:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80181ec:	61ab      	str	r3, [r5, #24]
 80181ee:	692b      	ldr	r3, [r5, #16]
 80181f0:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80181f4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80181f8:	edd5 6a07 	vldr	s13, [r5, #28]
 80181fc:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8018200:	440b      	add	r3, r1
 8018202:	68e9      	ldr	r1, [r5, #12]
 8018204:	612b      	str	r3, [r5, #16]
 8018206:	ee76 6a86 	vadd.f32	s13, s13, s12
 801820a:	428b      	cmp	r3, r1
 801820c:	edc5 6a07 	vstr	s13, [r5, #28]
 8018210:	db15      	blt.n	801823e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8018212:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8018216:	ee76 6a26 	vadd.f32	s13, s12, s13
 801821a:	3201      	adds	r2, #1
 801821c:	edc5 6a07 	vstr	s13, [r5, #28]
 8018220:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8018224:	602a      	str	r2, [r5, #0]
 8018226:	ee36 7a87 	vadd.f32	s14, s13, s14
 801822a:	1a5b      	subs	r3, r3, r1
 801822c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8018230:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8018234:	612b      	str	r3, [r5, #16]
 8018236:	ee77 7a27 	vadd.f32	s15, s14, s15
 801823a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801823e:	3f01      	subs	r7, #1
 8018240:	e757      	b.n	80180f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8018242:	ad39      	add	r5, sp, #228	; 0xe4
 8018244:	ac19      	add	r4, sp, #100	; 0x64
 8018246:	e72d      	b.n	80180a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8018248:	4613      	mov	r3, r2
 801824a:	e744      	b.n	80180d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 801824c:	4613      	mov	r3, r2
 801824e:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8018252:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8018254:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8018258:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 801825c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8018260:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8018264:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8018268:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 801826c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8018270:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8018272:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8018276:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 801827a:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 801827e:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8018282:	960e      	str	r6, [sp, #56]	; 0x38
 8018284:	469e      	mov	lr, r3
 8018286:	461f      	mov	r7, r3
 8018288:	f04f 0900 	mov.w	r9, #0
 801828c:	2f00      	cmp	r7, #0
 801828e:	d146      	bne.n	801831e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8018290:	449c      	add	ip, r3
 8018292:	1ad7      	subs	r7, r2, r3
 8018294:	f1b9 0f00 	cmp.w	r9, #0
 8018298:	d009      	beq.n	80182ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 801829a:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 801829e:	9039      	str	r0, [sp, #228]	; 0xe4
 80182a0:	913d      	str	r1, [sp, #244]	; 0xf4
 80182a2:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 80182a6:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 80182aa:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 80182ae:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80182b0:	910e      	str	r1, [sp, #56]	; 0x38
 80182b2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80182b6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80182ba:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80182be:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80182c2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80182c6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80182ca:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80182ce:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80182d2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80182d6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80182da:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80182de:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80182e2:	f04f 0800 	mov.w	r8, #0
 80182e6:	f1be 0f00 	cmp.w	lr, #0
 80182ea:	d030      	beq.n	801834e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80182ec:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80182ee:	4431      	add	r1, r6
 80182f0:	4549      	cmp	r1, r9
 80182f2:	4450      	add	r0, sl
 80182f4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80182f8:	ee37 7a04 	vadd.f32	s14, s14, s8
 80182fc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8018300:	db08      	blt.n	8018314 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8018302:	ee77 7a85 	vadd.f32	s15, s15, s10
 8018306:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801830a:	ee37 7a06 	vadd.f32	s14, s14, s12
 801830e:	3001      	adds	r0, #1
 8018310:	eba1 0109 	sub.w	r1, r1, r9
 8018314:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018318:	f04f 0801 	mov.w	r8, #1
 801831c:	e7e3      	b.n	80182e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801831e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8018320:	4431      	add	r1, r6
 8018322:	4541      	cmp	r1, r8
 8018324:	4450      	add	r0, sl
 8018326:	ee37 7a24 	vadd.f32	s14, s14, s9
 801832a:	ee77 7a84 	vadd.f32	s15, s15, s8
 801832e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8018332:	db08      	blt.n	8018346 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8018334:	ee76 6a85 	vadd.f32	s13, s13, s10
 8018338:	ee37 7a25 	vadd.f32	s14, s14, s11
 801833c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8018340:	3001      	adds	r0, #1
 8018342:	eba1 0108 	sub.w	r1, r1, r8
 8018346:	3f01      	subs	r7, #1
 8018348:	f04f 0901 	mov.w	r9, #1
 801834c:	e79e      	b.n	801828c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801834e:	449c      	add	ip, r3
 8018350:	1aff      	subs	r7, r7, r3
 8018352:	f1b8 0f00 	cmp.w	r8, #0
 8018356:	d009      	beq.n	801836c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8018358:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801835c:	9019      	str	r0, [sp, #100]	; 0x64
 801835e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8018362:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8018366:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 801836a:	911d      	str	r1, [sp, #116]	; 0x74
 801836c:	1ad2      	subs	r2, r2, r3
 801836e:	e6b5      	b.n	80180dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8018370:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018372:	681b      	ldr	r3, [r3, #0]
 8018374:	b923      	cbnz	r3, 8018380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8018376:	4b04      	ldr	r3, [pc, #16]	; (8018388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8018378:	6818      	ldr	r0, [r3, #0]
 801837a:	6803      	ldr	r3, [r0, #0]
 801837c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801837e:	4798      	blx	r3
 8018380:	b05b      	add	sp, #364	; 0x16c
 8018382:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018386:	bf00      	nop
 8018388:	2000224c 	.word	0x2000224c

0801838c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 801838c:	b570      	push	{r4, r5, r6, lr}
 801838e:	4604      	mov	r4, r0
 8018390:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8018394:	9805      	ldr	r0, [sp, #20]
 8018396:	6061      	str	r1, [r4, #4]
 8018398:	2500      	movs	r5, #0
 801839a:	f89d 1010 	ldrb.w	r1, [sp, #16]
 801839e:	8263      	strh	r3, [r4, #18]
 80183a0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80183a4:	8025      	strh	r5, [r4, #0]
 80183a6:	7221      	strb	r1, [r4, #8]
 80183a8:	7266      	strb	r6, [r4, #9]
 80183aa:	60e0      	str	r0, [r4, #12]
 80183ac:	8222      	strh	r2, [r4, #16]
 80183ae:	82a3      	strh	r3, [r4, #20]
 80183b0:	82e5      	strh	r5, [r4, #22]
 80183b2:	8325      	strh	r5, [r4, #24]
 80183b4:	8365      	strh	r5, [r4, #26]
 80183b6:	83a5      	strh	r5, [r4, #28]
 80183b8:	83e5      	strh	r5, [r4, #30]
 80183ba:	8425      	strh	r5, [r4, #32]
 80183bc:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 80183c0:	b32e      	cbz	r6, 801840e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80183c2:	6803      	ldr	r3, [r0, #0]
 80183c4:	695b      	ldr	r3, [r3, #20]
 80183c6:	4798      	blx	r3
 80183c8:	4606      	mov	r6, r0
 80183ca:	b300      	cbz	r0, 801840e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80183cc:	68e0      	ldr	r0, [r4, #12]
 80183ce:	6803      	ldr	r3, [r0, #0]
 80183d0:	4631      	mov	r1, r6
 80183d2:	68db      	ldr	r3, [r3, #12]
 80183d4:	4798      	blx	r3
 80183d6:	4605      	mov	r5, r0
 80183d8:	b1c8      	cbz	r0, 801840e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80183da:	7b43      	ldrb	r3, [r0, #13]
 80183dc:	7a82      	ldrb	r2, [r0, #10]
 80183de:	005b      	lsls	r3, r3, #1
 80183e0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80183e4:	4313      	orrs	r3, r2
 80183e6:	8423      	strh	r3, [r4, #32]
 80183e8:	7a63      	ldrb	r3, [r4, #9]
 80183ea:	2b06      	cmp	r3, #6
 80183ec:	d10f      	bne.n	801840e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80183ee:	68e0      	ldr	r0, [r4, #12]
 80183f0:	6803      	ldr	r3, [r0, #0]
 80183f2:	462a      	mov	r2, r5
 80183f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80183f6:	4631      	mov	r1, r6
 80183f8:	4798      	blx	r3
 80183fa:	7b6b      	ldrb	r3, [r5, #13]
 80183fc:	005b      	lsls	r3, r3, #1
 80183fe:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018402:	7aab      	ldrb	r3, [r5, #10]
 8018404:	4313      	orrs	r3, r2
 8018406:	4418      	add	r0, r3
 8018408:	8c23      	ldrh	r3, [r4, #32]
 801840a:	4418      	add	r0, r3
 801840c:	8420      	strh	r0, [r4, #32]
 801840e:	4620      	mov	r0, r4
 8018410:	bd70      	pop	{r4, r5, r6, pc}

08018412 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8018412:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018416:	2400      	movs	r4, #0
 8018418:	b085      	sub	sp, #20
 801841a:	4681      	mov	r9, r0
 801841c:	4688      	mov	r8, r1
 801841e:	4692      	mov	sl, r2
 8018420:	469b      	mov	fp, r3
 8018422:	4627      	mov	r7, r4
 8018424:	4625      	mov	r5, r4
 8018426:	4626      	mov	r6, r4
 8018428:	4554      	cmp	r4, sl
 801842a:	da2a      	bge.n	8018482 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801842c:	2300      	movs	r3, #0
 801842e:	9303      	str	r3, [sp, #12]
 8018430:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8018434:	429d      	cmp	r5, r3
 8018436:	d004      	beq.n	8018442 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8018438:	f242 030b 	movw	r3, #8203	; 0x200b
 801843c:	429d      	cmp	r5, r3
 801843e:	bf18      	it	ne
 8018440:	462f      	movne	r7, r5
 8018442:	ab03      	add	r3, sp, #12
 8018444:	4642      	mov	r2, r8
 8018446:	4659      	mov	r1, fp
 8018448:	4648      	mov	r0, r9
 801844a:	f003 f8e9 	bl	801b620 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801844e:	4605      	mov	r5, r0
 8018450:	b1b8      	cbz	r0, 8018482 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8018452:	280a      	cmp	r0, #10
 8018454:	d015      	beq.n	8018482 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8018456:	9a03      	ldr	r2, [sp, #12]
 8018458:	b18a      	cbz	r2, 801847e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 801845a:	7b50      	ldrb	r0, [r2, #13]
 801845c:	7a93      	ldrb	r3, [r2, #10]
 801845e:	8895      	ldrh	r5, [r2, #4]
 8018460:	0040      	lsls	r0, r0, #1
 8018462:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8018466:	4303      	orrs	r3, r0
 8018468:	9301      	str	r3, [sp, #4]
 801846a:	f8d8 3000 	ldr.w	r3, [r8]
 801846e:	4639      	mov	r1, r7
 8018470:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018472:	4640      	mov	r0, r8
 8018474:	4798      	blx	r3
 8018476:	9b01      	ldr	r3, [sp, #4]
 8018478:	4418      	add	r0, r3
 801847a:	4406      	add	r6, r0
 801847c:	b2b6      	uxth	r6, r6
 801847e:	3401      	adds	r4, #1
 8018480:	e7d2      	b.n	8018428 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8018482:	4630      	mov	r0, r6
 8018484:	b005      	add	sp, #20
 8018486:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801848a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 801848a:	2a02      	cmp	r2, #2
 801848c:	b530      	push	{r4, r5, lr}
 801848e:	d011      	beq.n	80184b4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8018490:	2a03      	cmp	r2, #3
 8018492:	d01c      	beq.n	80184ce <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8018494:	2a01      	cmp	r2, #1
 8018496:	d10c      	bne.n	80184b2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8018498:	888b      	ldrh	r3, [r1, #4]
 801849a:	8801      	ldrh	r1, [r0, #0]
 801849c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80184a0:	8844      	ldrh	r4, [r0, #2]
 80184a2:	8004      	strh	r4, [r0, #0]
 80184a4:	1a5b      	subs	r3, r3, r1
 80184a6:	1a9b      	subs	r3, r3, r2
 80184a8:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80184ac:	8043      	strh	r3, [r0, #2]
 80184ae:	8081      	strh	r1, [r0, #4]
 80184b0:	80c2      	strh	r2, [r0, #6]
 80184b2:	bd30      	pop	{r4, r5, pc}
 80184b4:	88cb      	ldrh	r3, [r1, #6]
 80184b6:	8842      	ldrh	r2, [r0, #2]
 80184b8:	1a9b      	subs	r3, r3, r2
 80184ba:	88c2      	ldrh	r2, [r0, #6]
 80184bc:	1a9b      	subs	r3, r3, r2
 80184be:	888a      	ldrh	r2, [r1, #4]
 80184c0:	8801      	ldrh	r1, [r0, #0]
 80184c2:	8043      	strh	r3, [r0, #2]
 80184c4:	1a52      	subs	r2, r2, r1
 80184c6:	8881      	ldrh	r1, [r0, #4]
 80184c8:	1a52      	subs	r2, r2, r1
 80184ca:	8002      	strh	r2, [r0, #0]
 80184cc:	e7f1      	b.n	80184b2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80184ce:	88cb      	ldrh	r3, [r1, #6]
 80184d0:	8841      	ldrh	r1, [r0, #2]
 80184d2:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80184d6:	f9b0 5000 	ldrsh.w	r5, [r0]
 80184da:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80184de:	8045      	strh	r5, [r0, #2]
 80184e0:	1a5b      	subs	r3, r3, r1
 80184e2:	1a9b      	subs	r3, r3, r2
 80184e4:	8003      	strh	r3, [r0, #0]
 80184e6:	8082      	strh	r2, [r0, #4]
 80184e8:	80c4      	strh	r4, [r0, #6]
 80184ea:	e7e2      	b.n	80184b2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080184ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80184ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80184f0:	b09f      	sub	sp, #124	; 0x7c
 80184f2:	9116      	str	r1, [sp, #88]	; 0x58
 80184f4:	9317      	str	r3, [sp, #92]	; 0x5c
 80184f6:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80184f8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80184fa:	8809      	ldrh	r1, [r1, #0]
 80184fc:	889b      	ldrh	r3, [r3, #4]
 80184fe:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8018502:	9212      	str	r2, [sp, #72]	; 0x48
 8018504:	440b      	add	r3, r1
 8018506:	b21b      	sxth	r3, r3
 8018508:	9310      	str	r3, [sp, #64]	; 0x40
 801850a:	f8d8 3000 	ldr.w	r3, [r8]
 801850e:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8018512:	7b19      	ldrb	r1, [r3, #12]
 8018514:	7adb      	ldrb	r3, [r3, #11]
 8018516:	9011      	str	r0, [sp, #68]	; 0x44
 8018518:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 801851c:	9114      	str	r1, [sp, #80]	; 0x50
 801851e:	9315      	str	r3, [sp, #84]	; 0x54
 8018520:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8018524:	2a00      	cmp	r2, #0
 8018526:	d06a      	beq.n	80185fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8018528:	f898 3010 	ldrb.w	r3, [r8, #16]
 801852c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801852e:	2b06      	cmp	r3, #6
 8018530:	bf14      	ite	ne
 8018532:	2301      	movne	r3, #1
 8018534:	2302      	moveq	r3, #2
 8018536:	4413      	add	r3, r2
 8018538:	f04f 0900 	mov.w	r9, #0
 801853c:	930f      	str	r3, [sp, #60]	; 0x3c
 801853e:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8018542:	464c      	mov	r4, r9
 8018544:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8018548:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 801854c:	4293      	cmp	r3, r2
 801854e:	f280 808f 	bge.w	8018670 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8018552:	2300      	movs	r3, #0
 8018554:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8018558:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 801855c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8018560:	429c      	cmp	r4, r3
 8018562:	d006      	beq.n	8018572 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8018564:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018566:	f242 020b 	movw	r2, #8203	; 0x200b
 801856a:	4294      	cmp	r4, r2
 801856c:	bf18      	it	ne
 801856e:	4623      	movne	r3, r4
 8018570:	930d      	str	r3, [sp, #52]	; 0x34
 8018572:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018574:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8018576:	f8d8 2000 	ldr.w	r2, [r8]
 801857a:	428b      	cmp	r3, r1
 801857c:	db41      	blt.n	8018602 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801857e:	6813      	ldr	r3, [r2, #0]
 8018580:	4610      	mov	r0, r2
 8018582:	695b      	ldr	r3, [r3, #20]
 8018584:	4798      	blx	r3
 8018586:	4604      	mov	r4, r0
 8018588:	f8d8 0000 	ldr.w	r0, [r8]
 801858c:	6803      	ldr	r3, [r0, #0]
 801858e:	aa1d      	add	r2, sp, #116	; 0x74
 8018590:	689d      	ldr	r5, [r3, #8]
 8018592:	4621      	mov	r1, r4
 8018594:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8018598:	47a8      	blx	r5
 801859a:	901c      	str	r0, [sp, #112]	; 0x70
 801859c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80185a0:	429c      	cmp	r4, r3
 80185a2:	f000 80eb 	beq.w	801877c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80185a6:	f242 030b 	movw	r3, #8203	; 0x200b
 80185aa:	429c      	cmp	r4, r3
 80185ac:	f000 80e6 	beq.w	801877c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80185b0:	2c00      	cmp	r4, #0
 80185b2:	f000 80f8 	beq.w	80187a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80185b6:	2c0a      	cmp	r4, #10
 80185b8:	d060      	beq.n	801867c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80185ba:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80185bc:	b36a      	cbz	r2, 801861a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 80185be:	8894      	ldrh	r4, [r2, #4]
 80185c0:	f1bb 0f00 	cmp.w	fp, #0
 80185c4:	d03b      	beq.n	801863e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 80185c6:	f892 900d 	ldrb.w	r9, [r2, #13]
 80185ca:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80185ce:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80185d2:	f892 900a 	ldrb.w	r9, [r2, #10]
 80185d6:	f1bb 0f01 	cmp.w	fp, #1
 80185da:	ea49 0903 	orr.w	r9, r9, r3
 80185de:	d134      	bne.n	801864a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 80185e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80185e2:	eba6 0609 	sub.w	r6, r6, r9
 80185e6:	2b00      	cmp	r3, #0
 80185e8:	d14f      	bne.n	801868a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80185ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80185ec:	eb09 0306 	add.w	r3, r9, r6
 80185f0:	4413      	add	r3, r2
 80185f2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80185f4:	f9b2 2000 	ldrsh.w	r2, [r2]
 80185f8:	4293      	cmp	r3, r2
 80185fa:	da51      	bge.n	80186a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80185fc:	e038      	b.n	8018670 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80185fe:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018600:	e79a      	b.n	8018538 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8018602:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8018606:	9301      	str	r3, [sp, #4]
 8018608:	ab1d      	add	r3, sp, #116	; 0x74
 801860a:	9300      	str	r3, [sp, #0]
 801860c:	4659      	mov	r1, fp
 801860e:	ab1c      	add	r3, sp, #112	; 0x70
 8018610:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8018612:	f003 f84e 	bl	801b6b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8018616:	4604      	mov	r4, r0
 8018618:	e7c0      	b.n	801859c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 801861a:	f8d8 0000 	ldr.w	r0, [r8]
 801861e:	6803      	ldr	r3, [r0, #0]
 8018620:	691b      	ldr	r3, [r3, #16]
 8018622:	4798      	blx	r3
 8018624:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8018628:	4298      	cmp	r0, r3
 801862a:	f000 80a7 	beq.w	801877c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801862e:	f242 030b 	movw	r3, #8203	; 0x200b
 8018632:	4298      	cmp	r0, r3
 8018634:	f000 80a2 	beq.w	801877c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8018638:	f1bb 0f00 	cmp.w	fp, #0
 801863c:	d100      	bne.n	8018640 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 801863e:	444e      	add	r6, r9
 8018640:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8018642:	2a00      	cmp	r2, #0
 8018644:	d1bf      	bne.n	80185c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8018646:	4691      	mov	r9, r2
 8018648:	e098      	b.n	801877c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801864a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801864c:	2b00      	cmp	r3, #0
 801864e:	f000 80ac 	beq.w	80187aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8018652:	f1bb 0f00 	cmp.w	fp, #0
 8018656:	d118      	bne.n	801868a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8018658:	f8d8 0000 	ldr.w	r0, [r8]
 801865c:	990d      	ldr	r1, [sp, #52]	; 0x34
 801865e:	6803      	ldr	r3, [r0, #0]
 8018660:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018662:	4798      	blx	r3
 8018664:	4406      	add	r6, r0
 8018666:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8018668:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801866a:	1af3      	subs	r3, r6, r3
 801866c:	4293      	cmp	r3, r2
 801866e:	dd17      	ble.n	80186a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8018670:	2c00      	cmp	r4, #0
 8018672:	f000 8098 	beq.w	80187a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8018676:	2c0a      	cmp	r4, #10
 8018678:	f040 8086 	bne.w	8018788 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 801867c:	240a      	movs	r4, #10
 801867e:	fab4 f084 	clz	r0, r4
 8018682:	0940      	lsrs	r0, r0, #5
 8018684:	b01f      	add	sp, #124	; 0x7c
 8018686:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801868a:	f8d8 0000 	ldr.w	r0, [r8]
 801868e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8018690:	6803      	ldr	r3, [r0, #0]
 8018692:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018694:	4798      	blx	r3
 8018696:	f1bb 0f01 	cmp.w	fp, #1
 801869a:	eba6 0600 	sub.w	r6, r6, r0
 801869e:	d0a4      	beq.n	80185ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80186a0:	981c      	ldr	r0, [sp, #112]	; 0x70
 80186a2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80186a4:	f990 1009 	ldrsb.w	r1, [r0, #9]
 80186a8:	f9b3 7000 	ldrsh.w	r7, [r3]
 80186ac:	7b43      	ldrb	r3, [r0, #13]
 80186ae:	015b      	lsls	r3, r3, #5
 80186b0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80186b4:	7983      	ldrb	r3, [r0, #6]
 80186b6:	4431      	add	r1, r6
 80186b8:	4313      	orrs	r3, r2
 80186ba:	440b      	add	r3, r1
 80186bc:	42bb      	cmp	r3, r7
 80186be:	db5d      	blt.n	801877c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80186c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80186c2:	4299      	cmp	r1, r3
 80186c4:	da5a      	bge.n	801877c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80186c6:	f8d8 0000 	ldr.w	r0, [r8]
 80186ca:	6803      	ldr	r3, [r0, #0]
 80186cc:	42b7      	cmp	r7, r6
 80186ce:	bfc8      	it	gt
 80186d0:	1bbf      	subgt	r7, r7, r6
 80186d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80186d4:	bfcc      	ite	gt
 80186d6:	b2bf      	uxthgt	r7, r7
 80186d8:	2700      	movle	r7, #0
 80186da:	4798      	blx	r3
 80186dc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80186de:	7b5a      	ldrb	r2, [r3, #13]
 80186e0:	00d1      	lsls	r1, r2, #3
 80186e2:	f401 7580 	and.w	r5, r1, #256	; 0x100
 80186e6:	7a19      	ldrb	r1, [r3, #8]
 80186e8:	4329      	orrs	r1, r5
 80186ea:	0655      	lsls	r5, r2, #25
 80186ec:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 80186ee:	bf44      	itt	mi
 80186f0:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80186f4:	b209      	sxthmi	r1, r1
 80186f6:	1945      	adds	r5, r0, r5
 80186f8:	1a6d      	subs	r5, r5, r1
 80186fa:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80186fc:	b2ad      	uxth	r5, r5
 80186fe:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8018702:	fa0f fa85 	sxth.w	sl, r5
 8018706:	4551      	cmp	r1, sl
 8018708:	dd3c      	ble.n	8018784 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 801870a:	0112      	lsls	r2, r2, #4
 801870c:	79d8      	ldrb	r0, [r3, #7]
 801870e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018712:	4302      	orrs	r2, r0
 8018714:	4492      	add	sl, r2
 8018716:	4551      	cmp	r1, sl
 8018718:	dc30      	bgt.n	801877c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801871a:	1b4d      	subs	r5, r1, r5
 801871c:	b22d      	sxth	r5, r5
 801871e:	468a      	mov	sl, r1
 8018720:	9319      	str	r3, [sp, #100]	; 0x64
 8018722:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018724:	f8d8 0000 	ldr.w	r0, [r8]
 8018728:	681a      	ldr	r2, [r3, #0]
 801872a:	6801      	ldr	r1, [r0, #0]
 801872c:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 801872e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8018730:	9313      	str	r3, [sp, #76]	; 0x4c
 8018732:	9218      	str	r2, [sp, #96]	; 0x60
 8018734:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8018736:	4788      	blx	r1
 8018738:	f898 1006 	ldrb.w	r1, [r8, #6]
 801873c:	910b      	str	r1, [sp, #44]	; 0x2c
 801873e:	f898 100e 	ldrb.w	r1, [r8, #14]
 8018742:	910a      	str	r1, [sp, #40]	; 0x28
 8018744:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8018748:	9109      	str	r1, [sp, #36]	; 0x24
 801874a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 801874e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8018750:	9305      	str	r3, [sp, #20]
 8018752:	b2ad      	uxth	r5, r5
 8018754:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8018758:	e9cd 7502 	strd	r7, r5, [sp, #8]
 801875c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801875e:	9304      	str	r3, [sp, #16]
 8018760:	4437      	add	r7, r6
 8018762:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8018764:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018766:	9206      	str	r2, [sp, #24]
 8018768:	b23f      	sxth	r7, r7
 801876a:	f8cd a004 	str.w	sl, [sp, #4]
 801876e:	9700      	str	r7, [sp, #0]
 8018770:	681a      	ldr	r2, [r3, #0]
 8018772:	9916      	ldr	r1, [sp, #88]	; 0x58
 8018774:	685b      	ldr	r3, [r3, #4]
 8018776:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018778:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801877a:	47a8      	blx	r5
 801877c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801877e:	3301      	adds	r3, #1
 8018780:	930e      	str	r3, [sp, #56]	; 0x38
 8018782:	e6e1      	b.n	8018548 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8018784:	2500      	movs	r5, #0
 8018786:	e7cb      	b.n	8018720 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8018788:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801878a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801878c:	3501      	adds	r5, #1
 801878e:	429d      	cmp	r5, r3
 8018790:	f6bf af75 	bge.w	801867e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8018794:	4659      	mov	r1, fp
 8018796:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8018798:	f7f7 fb84 	bl	800fea4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801879c:	4604      	mov	r4, r0
 801879e:	b110      	cbz	r0, 80187a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80187a0:	280a      	cmp	r0, #10
 80187a2:	d1f2      	bne.n	801878a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 80187a4:	e76a      	b.n	801867c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80187a6:	2400      	movs	r4, #0
 80187a8:	e769      	b.n	801867e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80187aa:	f1bb 0f00 	cmp.w	fp, #0
 80187ae:	f43f af5a 	beq.w	8018666 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 80187b2:	e775      	b.n	80186a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

080187b4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80187b4:	b530      	push	{r4, r5, lr}
 80187b6:	8ac4      	ldrh	r4, [r0, #22]
 80187b8:	8b45      	ldrh	r5, [r0, #26]
 80187ba:	8343      	strh	r3, [r0, #26]
 80187bc:	442c      	add	r4, r5
 80187be:	1ae4      	subs	r4, r4, r3
 80187c0:	82c4      	strh	r4, [r0, #22]
 80187c2:	8b83      	ldrh	r3, [r0, #28]
 80187c4:	8b04      	ldrh	r4, [r0, #24]
 80187c6:	4422      	add	r2, r4
 80187c8:	440c      	add	r4, r1
 80187ca:	1a59      	subs	r1, r3, r1
 80187cc:	83c2      	strh	r2, [r0, #30]
 80187ce:	8304      	strh	r4, [r0, #24]
 80187d0:	8381      	strh	r1, [r0, #28]
 80187d2:	bd30      	pop	{r4, r5, pc}

080187d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 80187d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80187d8:	4604      	mov	r4, r0
 80187da:	8a47      	ldrh	r7, [r0, #18]
 80187dc:	68c0      	ldr	r0, [r0, #12]
 80187de:	6803      	ldr	r3, [r0, #0]
 80187e0:	b085      	sub	sp, #20
 80187e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80187e4:	4798      	blx	r3
 80187e6:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 80187ea:	7a63      	ldrb	r3, [r4, #9]
 80187ec:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 80187f0:	42b7      	cmp	r7, r6
 80187f2:	f103 33ff 	add.w	r3, r3, #4294967295
 80187f6:	bfac      	ite	ge
 80187f8:	f04f 0900 	movge.w	r9, #0
 80187fc:	f04f 0901 	movlt.w	r9, #1
 8018800:	2b05      	cmp	r3, #5
 8018802:	d804      	bhi.n	801880e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8018804:	e8df f003 	tbb	[pc, r3]
 8018808:	470e0854 	.word	0x470e0854
 801880c:	4c4c      	.short	0x4c4c
 801880e:	2500      	movs	r5, #0
 8018810:	46a9      	mov	r9, r5
 8018812:	462e      	mov	r6, r5
 8018814:	462f      	mov	r7, r5
 8018816:	e00d      	b.n	8018834 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8018818:	42b7      	cmp	r7, r6
 801881a:	bfb4      	ite	lt
 801881c:	2600      	movlt	r6, #0
 801881e:	2601      	movge	r6, #1
 8018820:	2500      	movs	r5, #0
 8018822:	e7f7      	b.n	8018814 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8018824:	42b7      	cmp	r7, r6
 8018826:	464d      	mov	r5, r9
 8018828:	f04f 0900 	mov.w	r9, #0
 801882c:	bfb4      	ite	lt
 801882e:	2600      	movlt	r6, #0
 8018830:	2601      	movge	r6, #1
 8018832:	464f      	mov	r7, r9
 8018834:	f04f 0800 	mov.w	r8, #0
 8018838:	f8a4 8016 	strh.w	r8, [r4, #22]
 801883c:	f8a4 8018 	strh.w	r8, [r4, #24]
 8018840:	f8cd 8004 	str.w	r8, [sp, #4]
 8018844:	2300      	movs	r3, #0
 8018846:	9303      	str	r3, [sp, #12]
 8018848:	8823      	ldrh	r3, [r4, #0]
 801884a:	2b20      	cmp	r3, #32
 801884c:	d034      	beq.n	80188b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 801884e:	f242 010b 	movw	r1, #8203	; 0x200b
 8018852:	1a5a      	subs	r2, r3, r1
 8018854:	f1d2 0a00 	rsbs	sl, r2, #0
 8018858:	eb4a 0a02 	adc.w	sl, sl, r2
 801885c:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8018860:	4293      	cmp	r3, r2
 8018862:	d009      	beq.n	8018878 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8018864:	428b      	cmp	r3, r1
 8018866:	9a01      	ldr	r2, [sp, #4]
 8018868:	bf18      	it	ne
 801886a:	461a      	movne	r2, r3
 801886c:	9201      	str	r2, [sp, #4]
 801886e:	bf0c      	ite	eq
 8018870:	f04f 0a01 	moveq.w	sl, #1
 8018874:	f04f 0a00 	movne.w	sl, #0
 8018878:	ab03      	add	r3, sp, #12
 801887a:	68e2      	ldr	r2, [r4, #12]
 801887c:	7a21      	ldrb	r1, [r4, #8]
 801887e:	6860      	ldr	r0, [r4, #4]
 8018880:	f002 fece 	bl	801b620 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8018884:	8020      	strh	r0, [r4, #0]
 8018886:	b9d8      	cbnz	r0, 80188c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8018888:	8ba2      	ldrh	r2, [r4, #28]
 801888a:	2300      	movs	r3, #0
 801888c:	4611      	mov	r1, r2
 801888e:	4620      	mov	r0, r4
 8018890:	f7ff ff90 	bl	80187b4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8018894:	e06e      	b.n	8018974 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8018896:	2500      	movs	r5, #0
 8018898:	46a9      	mov	r9, r5
 801889a:	462e      	mov	r6, r5
 801889c:	2701      	movs	r7, #1
 801889e:	e7c9      	b.n	8018834 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80188a0:	42b7      	cmp	r7, r6
 80188a2:	f04f 0500 	mov.w	r5, #0
 80188a6:	bfb4      	ite	lt
 80188a8:	2700      	movlt	r7, #0
 80188aa:	2701      	movge	r7, #1
 80188ac:	462e      	mov	r6, r5
 80188ae:	e7c1      	b.n	8018834 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80188b0:	2500      	movs	r5, #0
 80188b2:	46a9      	mov	r9, r5
 80188b4:	2601      	movs	r6, #1
 80188b6:	e7ad      	b.n	8018814 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80188b8:	9301      	str	r3, [sp, #4]
 80188ba:	f04f 0a01 	mov.w	sl, #1
 80188be:	e7db      	b.n	8018878 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80188c0:	8b63      	ldrh	r3, [r4, #26]
 80188c2:	280a      	cmp	r0, #10
 80188c4:	f103 0301 	add.w	r3, r3, #1
 80188c8:	8363      	strh	r3, [r4, #26]
 80188ca:	d0dd      	beq.n	8018888 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 80188cc:	9a03      	ldr	r2, [sp, #12]
 80188ce:	bb62      	cbnz	r2, 801892a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 80188d0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80188d4:	4298      	cmp	r0, r3
 80188d6:	d003      	beq.n	80188e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80188d8:	f242 030b 	movw	r3, #8203	; 0x200b
 80188dc:	4298      	cmp	r0, r3
 80188de:	d1b1      	bne.n	8018844 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80188e0:	8823      	ldrh	r3, [r4, #0]
 80188e2:	8ba1      	ldrh	r1, [r4, #28]
 80188e4:	2b20      	cmp	r3, #32
 80188e6:	d003      	beq.n	80188f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 80188e8:	f242 000b 	movw	r0, #8203	; 0x200b
 80188ec:	4283      	cmp	r3, r0
 80188ee:	d131      	bne.n	8018954 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 80188f0:	f1ba 0f00 	cmp.w	sl, #0
 80188f4:	bf0a      	itet	eq
 80188f6:	4688      	moveq	r8, r1
 80188f8:	4650      	movne	r0, sl
 80188fa:	2001      	moveq	r0, #1
 80188fc:	440a      	add	r2, r1
 80188fe:	8b23      	ldrh	r3, [r4, #24]
 8018900:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8018904:	b292      	uxth	r2, r2
 8018906:	83a2      	strh	r2, [r4, #28]
 8018908:	4413      	add	r3, r2
 801890a:	f1b9 0f00 	cmp.w	r9, #0
 801890e:	d102      	bne.n	8018916 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8018910:	2d00      	cmp	r5, #0
 8018912:	d042      	beq.n	801899a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8018914:	b300      	cbz	r0, 8018958 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8018916:	8c21      	ldrh	r1, [r4, #32]
 8018918:	4419      	add	r1, r3
 801891a:	458c      	cmp	ip, r1
 801891c:	da37      	bge.n	801898e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801891e:	8ae1      	ldrh	r1, [r4, #22]
 8018920:	2900      	cmp	r1, #0
 8018922:	d034      	beq.n	801898e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8018924:	4563      	cmp	r3, ip
 8018926:	dd8d      	ble.n	8018844 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018928:	e01d      	b.n	8018966 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 801892a:	8893      	ldrh	r3, [r2, #4]
 801892c:	8023      	strh	r3, [r4, #0]
 801892e:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8018932:	9901      	ldr	r1, [sp, #4]
 8018934:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8018938:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 801893c:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8018940:	ea4b 0b00 	orr.w	fp, fp, r0
 8018944:	68e0      	ldr	r0, [r4, #12]
 8018946:	6803      	ldr	r3, [r0, #0]
 8018948:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801894a:	4798      	blx	r3
 801894c:	eb0b 0200 	add.w	r2, fp, r0
 8018950:	b292      	uxth	r2, r2
 8018952:	e7c5      	b.n	80188e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8018954:	2000      	movs	r0, #0
 8018956:	e7d1      	b.n	80188fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8018958:	4563      	cmp	r3, ip
 801895a:	f77f af73 	ble.w	8018844 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801895e:	8ae3      	ldrh	r3, [r4, #22]
 8018960:	2b00      	cmp	r3, #0
 8018962:	f43f af6f 	beq.w	8018844 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018966:	2301      	movs	r3, #1
 8018968:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 801896c:	8c22      	ldrh	r2, [r4, #32]
 801896e:	8be3      	ldrh	r3, [r4, #30]
 8018970:	4413      	add	r3, r2
 8018972:	83e3      	strh	r3, [r4, #30]
 8018974:	68e0      	ldr	r0, [r4, #12]
 8018976:	6803      	ldr	r3, [r0, #0]
 8018978:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801897a:	4798      	blx	r3
 801897c:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8018980:	4418      	add	r0, r3
 8018982:	8a63      	ldrh	r3, [r4, #18]
 8018984:	1a18      	subs	r0, r3, r0
 8018986:	8260      	strh	r0, [r4, #18]
 8018988:	b005      	add	sp, #20
 801898a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801898e:	2300      	movs	r3, #0
 8018990:	4611      	mov	r1, r2
 8018992:	4620      	mov	r0, r4
 8018994:	f7ff ff0e 	bl	80187b4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8018998:	e754      	b.n	8018844 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801899a:	4563      	cmp	r3, ip
 801899c:	dd14      	ble.n	80189c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 801899e:	b117      	cbz	r7, 80189a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 80189a0:	2301      	movs	r3, #1
 80189a2:	460a      	mov	r2, r1
 80189a4:	e772      	b.n	801888c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 80189a6:	2e00      	cmp	r6, #0
 80189a8:	f43f af4c 	beq.w	8018844 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80189ac:	2800      	cmp	r0, #0
 80189ae:	f47f af49 	bne.w	8018844 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80189b2:	f1ba 0f00 	cmp.w	sl, #0
 80189b6:	d002      	beq.n	80189be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 80189b8:	2301      	movs	r3, #1
 80189ba:	4642      	mov	r2, r8
 80189bc:	e767      	b.n	801888e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 80189be:	8ae3      	ldrh	r3, [r4, #22]
 80189c0:	2b00      	cmp	r3, #0
 80189c2:	f43f af3f 	beq.w	8018844 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80189c6:	e7d5      	b.n	8018974 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80189c8:	2800      	cmp	r0, #0
 80189ca:	f47f af3b 	bne.w	8018844 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80189ce:	f1ba 0f00 	cmp.w	sl, #0
 80189d2:	f43f af37 	beq.w	8018844 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80189d6:	2301      	movs	r3, #1
 80189d8:	4642      	mov	r2, r8
 80189da:	e7da      	b.n	8018992 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

080189dc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80189dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80189de:	4605      	mov	r5, r0
 80189e0:	b08f      	sub	sp, #60	; 0x3c
 80189e2:	4617      	mov	r7, r2
 80189e4:	461c      	mov	r4, r3
 80189e6:	460e      	mov	r6, r1
 80189e8:	b1d1      	cbz	r1, 8018a20 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 80189ea:	681b      	ldr	r3, [r3, #0]
 80189ec:	4620      	mov	r0, r4
 80189ee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80189f0:	4798      	blx	r3
 80189f2:	4240      	negs	r0, r0
 80189f4:	b200      	sxth	r0, r0
 80189f6:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80189fa:	9603      	str	r6, [sp, #12]
 80189fc:	9700      	str	r7, [sp, #0]
 80189fe:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8018a02:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8018a06:	4629      	mov	r1, r5
 8018a08:	a805      	add	r0, sp, #20
 8018a0a:	f7ff fcbf 	bl	801838c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8018a0e:	2401      	movs	r4, #1
 8018a10:	a805      	add	r0, sp, #20
 8018a12:	f7ff fedf 	bl	80187d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8018a16:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8018a1a:	b163      	cbz	r3, 8018a36 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8018a1c:	3401      	adds	r4, #1
 8018a1e:	e7f7      	b.n	8018a10 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8018a20:	f002 fecc 	bl	801b7bc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8018a24:	2401      	movs	r4, #1
 8018a26:	280a      	cmp	r0, #10
 8018a28:	4628      	mov	r0, r5
 8018a2a:	bf08      	it	eq
 8018a2c:	3401      	addeq	r4, #1
 8018a2e:	f002 fec5 	bl	801b7bc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8018a32:	2800      	cmp	r0, #0
 8018a34:	d1f7      	bne.n	8018a26 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8018a36:	b2a0      	uxth	r0, r4
 8018a38:	b00f      	add	sp, #60	; 0x3c
 8018a3a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018a3c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8018a3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a40:	b0e3      	sub	sp, #396	; 0x18c
 8018a42:	461c      	mov	r4, r3
 8018a44:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8018a46:	4683      	mov	fp, r0
 8018a48:	4688      	mov	r8, r1
 8018a4a:	2b00      	cmp	r3, #0
 8018a4c:	f000 8112 	beq.w	8018c74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018a50:	6823      	ldr	r3, [r4, #0]
 8018a52:	2b00      	cmp	r3, #0
 8018a54:	f000 810e 	beq.w	8018c74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018a58:	7ba3      	ldrb	r3, [r4, #14]
 8018a5a:	2b00      	cmp	r3, #0
 8018a5c:	f000 810a 	beq.w	8018c74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018a60:	6810      	ldr	r0, [r2, #0]
 8018a62:	6851      	ldr	r1, [r2, #4]
 8018a64:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8018a68:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8018a6c:	ad0a      	add	r5, sp, #40	; 0x28
 8018a6e:	462b      	mov	r3, r5
 8018a70:	c303      	stmia	r3!, {r0, r1}
 8018a72:	2100      	movs	r1, #0
 8018a74:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8018a78:	910c      	str	r1, [sp, #48]	; 0x30
 8018a7a:	79a2      	ldrb	r2, [r4, #6]
 8018a7c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8018a80:	a90c      	add	r1, sp, #48	; 0x30
 8018a82:	4628      	mov	r0, r5
 8018a84:	f7ff fd01 	bl	801848a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8018a88:	a90c      	add	r1, sp, #48	; 0x30
 8018a8a:	4608      	mov	r0, r1
 8018a8c:	79a2      	ldrb	r2, [r4, #6]
 8018a8e:	f7ff fcfc 	bl	801848a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8018a92:	a817      	add	r0, sp, #92	; 0x5c
 8018a94:	f002 fa66 	bl	801af64 <_ZN8touchgfx12TextProviderC1Ev>
 8018a98:	6820      	ldr	r0, [r4, #0]
 8018a9a:	6803      	ldr	r3, [r0, #0]
 8018a9c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018a9e:	4798      	blx	r3
 8018aa0:	4606      	mov	r6, r0
 8018aa2:	6820      	ldr	r0, [r4, #0]
 8018aa4:	6803      	ldr	r3, [r0, #0]
 8018aa6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8018aa8:	4798      	blx	r3
 8018aaa:	4633      	mov	r3, r6
 8018aac:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8018aae:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8018ab0:	9000      	str	r0, [sp, #0]
 8018ab2:	a817      	add	r0, sp, #92	; 0x5c
 8018ab4:	f002 fab1 	bl	801b01a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018ab8:	6820      	ldr	r0, [r4, #0]
 8018aba:	f894 a004 	ldrb.w	sl, [r4, #4]
 8018abe:	6803      	ldr	r3, [r0, #0]
 8018ac0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018ac2:	4798      	blx	r3
 8018ac4:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8018ac8:	6823      	ldr	r3, [r4, #0]
 8018aca:	4607      	mov	r7, r0
 8018acc:	4406      	add	r6, r0
 8018ace:	a830      	add	r0, sp, #192	; 0xc0
 8018ad0:	f893 9009 	ldrb.w	r9, [r3, #9]
 8018ad4:	f002 fa46 	bl	801af64 <_ZN8touchgfx12TextProviderC1Ev>
 8018ad8:	7c23      	ldrb	r3, [r4, #16]
 8018ada:	b17b      	cbz	r3, 8018afc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8018adc:	6820      	ldr	r0, [r4, #0]
 8018ade:	6803      	ldr	r3, [r0, #0]
 8018ae0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018ae2:	4798      	blx	r3
 8018ae4:	9009      	str	r0, [sp, #36]	; 0x24
 8018ae6:	6820      	ldr	r0, [r4, #0]
 8018ae8:	6802      	ldr	r2, [r0, #0]
 8018aea:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8018aec:	4790      	blx	r2
 8018aee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018af0:	9000      	str	r0, [sp, #0]
 8018af2:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8018af4:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8018af6:	a830      	add	r0, sp, #192	; 0xc0
 8018af8:	f002 fa8f 	bl	801b01a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018afc:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8018b00:	7be2      	ldrb	r2, [r4, #15]
 8018b02:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8018b06:	1a8a      	subs	r2, r1, r2
 8018b08:	7c21      	ldrb	r1, [r4, #16]
 8018b0a:	9103      	str	r1, [sp, #12]
 8018b0c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8018b10:	9102      	str	r1, [sp, #8]
 8018b12:	6821      	ldr	r1, [r4, #0]
 8018b14:	9101      	str	r1, [sp, #4]
 8018b16:	7961      	ldrb	r1, [r4, #5]
 8018b18:	9100      	str	r1, [sp, #0]
 8018b1a:	b292      	uxth	r2, r2
 8018b1c:	a930      	add	r1, sp, #192	; 0xc0
 8018b1e:	a80e      	add	r0, sp, #56	; 0x38
 8018b20:	f7ff fc34 	bl	801838c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8018b24:	2e00      	cmp	r6, #0
 8018b26:	dc5b      	bgt.n	8018be0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8018b28:	af17      	add	r7, sp, #92	; 0x5c
 8018b2a:	f04f 0900 	mov.w	r9, #0
 8018b2e:	7c23      	ldrb	r3, [r4, #16]
 8018b30:	2b00      	cmp	r3, #0
 8018b32:	f000 80b1 	beq.w	8018c98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8018b36:	a80e      	add	r0, sp, #56	; 0x38
 8018b38:	f7ff fe4c 	bl	80187d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8018b3c:	f1ba 0f00 	cmp.w	sl, #0
 8018b40:	f000 80a5 	beq.w	8018c8e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8018b44:	7c23      	ldrb	r3, [r4, #16]
 8018b46:	9309      	str	r3, [sp, #36]	; 0x24
 8018b48:	2264      	movs	r2, #100	; 0x64
 8018b4a:	4639      	mov	r1, r7
 8018b4c:	a849      	add	r0, sp, #292	; 0x124
 8018b4e:	f012 ff0c 	bl	802b96a <memcpy>
 8018b52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018b54:	2b00      	cmp	r3, #0
 8018b56:	f000 80a7 	beq.w	8018ca8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8018b5a:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8018b5e:	7922      	ldrb	r2, [r4, #4]
 8018b60:	2a01      	cmp	r2, #1
 8018b62:	f040 808a 	bne.w	8018c7a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8018b66:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8018b6a:	1ac0      	subs	r0, r0, r3
 8018b6c:	2302      	movs	r3, #2
 8018b6e:	fb90 f0f3 	sdiv	r0, r0, r3
 8018b72:	b200      	sxth	r0, r0
 8018b74:	7c23      	ldrb	r3, [r4, #16]
 8018b76:	2b00      	cmp	r3, #0
 8018b78:	f000 808b 	beq.w	8018c92 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8018b7c:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8018b80:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8018b84:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018b88:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8018b8c:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8018b90:	4410      	add	r0, r2
 8018b92:	b200      	sxth	r0, r0
 8018b94:	9000      	str	r0, [sp, #0]
 8018b96:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8018b9a:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8018b9e:	4642      	mov	r2, r8
 8018ba0:	2100      	movs	r1, #0
 8018ba2:	4658      	mov	r0, fp
 8018ba4:	f7ff fca2 	bl	80184ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8018ba8:	2800      	cmp	r0, #0
 8018baa:	d163      	bne.n	8018c74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018bac:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8018bb0:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8018bb4:	b2b2      	uxth	r2, r6
 8018bb6:	4413      	add	r3, r2
 8018bb8:	1a8a      	subs	r2, r1, r2
 8018bba:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8018bbe:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8018bc2:	b21b      	sxth	r3, r3
 8018bc4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018bc8:	2a00      	cmp	r2, #0
 8018bca:	d153      	bne.n	8018c74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018bcc:	6822      	ldr	r2, [r4, #0]
 8018bce:	8869      	ldrh	r1, [r5, #2]
 8018bd0:	7a12      	ldrb	r2, [r2, #8]
 8018bd2:	1a9b      	subs	r3, r3, r2
 8018bd4:	88ea      	ldrh	r2, [r5, #6]
 8018bd6:	440a      	add	r2, r1
 8018bd8:	b212      	sxth	r2, r2
 8018bda:	4293      	cmp	r3, r2
 8018bdc:	dda7      	ble.n	8018b2e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8018bde:	e049      	b.n	8018c74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018be0:	7c23      	ldrb	r3, [r4, #16]
 8018be2:	444f      	add	r7, r9
 8018be4:	b1c3      	cbz	r3, 8018c18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8018be6:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8018bea:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018bee:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8018bf2:	443b      	add	r3, r7
 8018bf4:	4293      	cmp	r3, r2
 8018bf6:	da97      	bge.n	8018b28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8018bf8:	a80e      	add	r0, sp, #56	; 0x38
 8018bfa:	f7ff fdeb 	bl	80187d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8018bfe:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8018c02:	3b01      	subs	r3, #1
 8018c04:	b29b      	uxth	r3, r3
 8018c06:	454b      	cmp	r3, r9
 8018c08:	9309      	str	r3, [sp, #36]	; 0x24
 8018c0a:	d021      	beq.n	8018c50 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8018c0c:	7961      	ldrb	r1, [r4, #5]
 8018c0e:	a817      	add	r0, sp, #92	; 0x5c
 8018c10:	f7f7 f948 	bl	800fea4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018c14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018c16:	e7f4      	b.n	8018c02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8018c18:	fa1f f986 	uxth.w	r9, r6
 8018c1c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018c20:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8018c24:	443b      	add	r3, r7
 8018c26:	4293      	cmp	r3, r2
 8018c28:	f6bf af7e 	bge.w	8018b28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8018c2c:	a817      	add	r0, sp, #92	; 0x5c
 8018c2e:	f002 fdc5 	bl	801b7bc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8018c32:	b1f8      	cbz	r0, 8018c74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018c34:	280a      	cmp	r0, #10
 8018c36:	d1f1      	bne.n	8018c1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8018c38:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8018c3c:	444b      	add	r3, r9
 8018c3e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018c42:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8018c46:	eba3 0309 	sub.w	r3, r3, r9
 8018c4a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8018c4e:	e7e5      	b.n	8018c1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8018c50:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8018c54:	b2b3      	uxth	r3, r6
 8018c56:	441a      	add	r2, r3
 8018c58:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8018c5c:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8018c60:	1ad3      	subs	r3, r2, r3
 8018c62:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8018c66:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8018c6a:	b11b      	cbz	r3, 8018c74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018c6c:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8018c70:	2b00      	cmp	r3, #0
 8018c72:	d0ba      	beq.n	8018bea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8018c74:	b063      	add	sp, #396	; 0x18c
 8018c76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c7a:	2a02      	cmp	r2, #2
 8018c7c:	d105      	bne.n	8018c8a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8018c7e:	7be2      	ldrb	r2, [r4, #15]
 8018c80:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8018c84:	1a80      	subs	r0, r0, r2
 8018c86:	1ac0      	subs	r0, r0, r3
 8018c88:	e773      	b.n	8018b72 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8018c8a:	2000      	movs	r0, #0
 8018c8c:	e772      	b.n	8018b74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8018c8e:	7be0      	ldrb	r0, [r4, #15]
 8018c90:	e770      	b.n	8018b74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8018c92:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8018c96:	e773      	b.n	8018b80 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8018c98:	f1ba 0f00 	cmp.w	sl, #0
 8018c9c:	d0f7      	beq.n	8018c8e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8018c9e:	2264      	movs	r2, #100	; 0x64
 8018ca0:	4639      	mov	r1, r7
 8018ca2:	a849      	add	r0, sp, #292	; 0x124
 8018ca4:	f012 fe61 	bl	802b96a <memcpy>
 8018ca8:	2300      	movs	r3, #0
 8018caa:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8018cae:	6821      	ldr	r1, [r4, #0]
 8018cb0:	a849      	add	r0, sp, #292	; 0x124
 8018cb2:	f7ff fbae 	bl	8018412 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8018cb6:	b203      	sxth	r3, r0
 8018cb8:	e751      	b.n	8018b5e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08018cba <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8018cba:	2b03      	cmp	r3, #3
 8018cbc:	d818      	bhi.n	8018cf0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8018cbe:	e8df f003 	tbb	[pc, r3]
 8018cc2:	0602      	.short	0x0602
 8018cc4:	130d      	.short	0x130d
 8018cc6:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018cca:	1850      	adds	r0, r2, r1
 8018ccc:	4770      	bx	lr
 8018cce:	8803      	ldrh	r3, [r0, #0]
 8018cd0:	8880      	ldrh	r0, [r0, #4]
 8018cd2:	4418      	add	r0, r3
 8018cd4:	b200      	sxth	r0, r0
 8018cd6:	1a80      	subs	r0, r0, r2
 8018cd8:	3801      	subs	r0, #1
 8018cda:	4770      	bx	lr
 8018cdc:	8803      	ldrh	r3, [r0, #0]
 8018cde:	8880      	ldrh	r0, [r0, #4]
 8018ce0:	4418      	add	r0, r3
 8018ce2:	b200      	sxth	r0, r0
 8018ce4:	1a40      	subs	r0, r0, r1
 8018ce6:	e7f7      	b.n	8018cd8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8018ce8:	f9b0 0000 	ldrsh.w	r0, [r0]
 8018cec:	4410      	add	r0, r2
 8018cee:	4770      	bx	lr
 8018cf0:	2000      	movs	r0, #0
 8018cf2:	4770      	bx	lr

08018cf4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8018cf4:	2b03      	cmp	r3, #3
 8018cf6:	d817      	bhi.n	8018d28 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8018cf8:	e8df f003 	tbb	[pc, r3]
 8018cfc:	10090602 	.word	0x10090602
 8018d00:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8018d04:	1850      	adds	r0, r2, r1
 8018d06:	4770      	bx	lr
 8018d08:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8018d0c:	e7fa      	b.n	8018d04 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8018d0e:	8843      	ldrh	r3, [r0, #2]
 8018d10:	88c0      	ldrh	r0, [r0, #6]
 8018d12:	4418      	add	r0, r3
 8018d14:	b200      	sxth	r0, r0
 8018d16:	1a80      	subs	r0, r0, r2
 8018d18:	3801      	subs	r0, #1
 8018d1a:	4770      	bx	lr
 8018d1c:	8843      	ldrh	r3, [r0, #2]
 8018d1e:	88c0      	ldrh	r0, [r0, #6]
 8018d20:	4418      	add	r0, r3
 8018d22:	b200      	sxth	r0, r0
 8018d24:	1a40      	subs	r0, r0, r1
 8018d26:	e7f7      	b.n	8018d18 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8018d28:	2000      	movs	r0, #0
 8018d2a:	4770      	bx	lr

08018d2c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8018d2c:	4b01      	ldr	r3, [pc, #4]	; (8018d34 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8018d2e:	2200      	movs	r2, #0
 8018d30:	601a      	str	r2, [r3, #0]
 8018d32:	4770      	bx	lr
 8018d34:	2000225c 	.word	0x2000225c

08018d38 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8018d38:	4603      	mov	r3, r0
 8018d3a:	b1c8      	cbz	r0, 8018d70 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8018d3c:	0c02      	lsrs	r2, r0, #16
 8018d3e:	0412      	lsls	r2, r2, #16
 8018d40:	b9a2      	cbnz	r2, 8018d6c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8018d42:	0403      	lsls	r3, r0, #16
 8018d44:	2010      	movs	r0, #16
 8018d46:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8018d4a:	bf04      	itt	eq
 8018d4c:	021b      	lsleq	r3, r3, #8
 8018d4e:	3008      	addeq	r0, #8
 8018d50:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8018d54:	bf04      	itt	eq
 8018d56:	011b      	lsleq	r3, r3, #4
 8018d58:	3004      	addeq	r0, #4
 8018d5a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8018d5e:	bf04      	itt	eq
 8018d60:	009b      	lsleq	r3, r3, #2
 8018d62:	3002      	addeq	r0, #2
 8018d64:	2b00      	cmp	r3, #0
 8018d66:	db04      	blt.n	8018d72 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8018d68:	3001      	adds	r0, #1
 8018d6a:	4770      	bx	lr
 8018d6c:	2000      	movs	r0, #0
 8018d6e:	e7ea      	b.n	8018d46 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8018d70:	2020      	movs	r0, #32
 8018d72:	4770      	bx	lr

08018d74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8018d74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d78:	b087      	sub	sp, #28
 8018d7a:	460d      	mov	r5, r1
 8018d7c:	4616      	mov	r6, r2
 8018d7e:	4698      	mov	r8, r3
 8018d80:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8018d84:	4601      	mov	r1, r0
 8018d86:	b120      	cbz	r0, 8018d92 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8018d88:	b11a      	cbz	r2, 8018d92 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8018d8a:	2d1f      	cmp	r5, #31
 8018d8c:	d801      	bhi.n	8018d92 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8018d8e:	2b1f      	cmp	r3, #31
 8018d90:	d904      	bls.n	8018d9c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8018d92:	2000      	movs	r0, #0
 8018d94:	6038      	str	r0, [r7, #0]
 8018d96:	b007      	add	sp, #28
 8018d98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018d9c:	b97d      	cbnz	r5, 8018dbe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8018d9e:	b143      	cbz	r3, 8018db2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8018da0:	4602      	mov	r2, r0
 8018da2:	e9cd 4700 	strd	r4, r7, [sp]
 8018da6:	462b      	mov	r3, r5
 8018da8:	4641      	mov	r1, r8
 8018daa:	4630      	mov	r0, r6
 8018dac:	f7ff ffe2 	bl	8018d74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018db0:	e7f1      	b.n	8018d96 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8018db2:	f04f 33ff 	mov.w	r3, #4294967295
 8018db6:	603b      	str	r3, [r7, #0]
 8018db8:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8018dbc:	e7eb      	b.n	8018d96 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8018dbe:	fa32 fa05 	lsrs.w	sl, r2, r5
 8018dc2:	d106      	bne.n	8018dd2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8018dc4:	4346      	muls	r6, r0
 8018dc6:	fbb6 f0f4 	udiv	r0, r6, r4
 8018dca:	fb04 6610 	mls	r6, r4, r0, r6
 8018dce:	603e      	str	r6, [r7, #0]
 8018dd0:	e7e1      	b.n	8018d96 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8018dd2:	2201      	movs	r2, #1
 8018dd4:	40aa      	lsls	r2, r5
 8018dd6:	3a01      	subs	r2, #1
 8018dd8:	4016      	ands	r6, r2
 8018dda:	fa00 fb05 	lsl.w	fp, r0, r5
 8018dde:	4630      	mov	r0, r6
 8018de0:	fbbb f9f4 	udiv	r9, fp, r4
 8018de4:	fb0a f309 	mul.w	r3, sl, r9
 8018de8:	9303      	str	r3, [sp, #12]
 8018dea:	f7ff ffa5 	bl	8018d38 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018dee:	462b      	mov	r3, r5
 8018df0:	460a      	mov	r2, r1
 8018df2:	e9cd 4700 	strd	r4, r7, [sp]
 8018df6:	4601      	mov	r1, r0
 8018df8:	4630      	mov	r0, r6
 8018dfa:	f7ff ffbb 	bl	8018d74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018dfe:	fb04 b919 	mls	r9, r4, r9, fp
 8018e02:	4606      	mov	r6, r0
 8018e04:	4648      	mov	r0, r9
 8018e06:	eb05 0108 	add.w	r1, r5, r8
 8018e0a:	f7ff ff95 	bl	8018d38 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018e0e:	ab05      	add	r3, sp, #20
 8018e10:	e9cd 4300 	strd	r4, r3, [sp]
 8018e14:	464a      	mov	r2, r9
 8018e16:	4603      	mov	r3, r0
 8018e18:	4650      	mov	r0, sl
 8018e1a:	f7ff ffab 	bl	8018d74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018e1e:	6839      	ldr	r1, [r7, #0]
 8018e20:	9a05      	ldr	r2, [sp, #20]
 8018e22:	9b03      	ldr	r3, [sp, #12]
 8018e24:	4411      	add	r1, r2
 8018e26:	fbb1 f2f4 	udiv	r2, r1, r4
 8018e2a:	18d3      	adds	r3, r2, r3
 8018e2c:	441e      	add	r6, r3
 8018e2e:	fb04 1412 	mls	r4, r4, r2, r1
 8018e32:	4430      	add	r0, r6
 8018e34:	603c      	str	r4, [r7, #0]
 8018e36:	e7ae      	b.n	8018d96 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08018e38 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8018e38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018e3c:	b085      	sub	sp, #20
 8018e3e:	f1b0 0900 	subs.w	r9, r0, #0
 8018e42:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018e44:	461d      	mov	r5, r3
 8018e46:	bfbf      	itttt	lt
 8018e48:	6823      	ldrlt	r3, [r4, #0]
 8018e4a:	425b      	neglt	r3, r3
 8018e4c:	f1c9 0900 	rsblt	r9, r9, #0
 8018e50:	6023      	strlt	r3, [r4, #0]
 8018e52:	bfb4      	ite	lt
 8018e54:	f04f 36ff 	movlt.w	r6, #4294967295
 8018e58:	2601      	movge	r6, #1
 8018e5a:	2a00      	cmp	r2, #0
 8018e5c:	4617      	mov	r7, r2
 8018e5e:	da04      	bge.n	8018e6a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8018e60:	6823      	ldr	r3, [r4, #0]
 8018e62:	425b      	negs	r3, r3
 8018e64:	4257      	negs	r7, r2
 8018e66:	4276      	negs	r6, r6
 8018e68:	6023      	str	r3, [r4, #0]
 8018e6a:	2d00      	cmp	r5, #0
 8018e6c:	4638      	mov	r0, r7
 8018e6e:	bfba      	itte	lt
 8018e70:	426d      	neglt	r5, r5
 8018e72:	f04f 38ff 	movlt.w	r8, #4294967295
 8018e76:	f04f 0801 	movge.w	r8, #1
 8018e7a:	f7ff ff5d 	bl	8018d38 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018e7e:	ab03      	add	r3, sp, #12
 8018e80:	e9cd 5300 	strd	r5, r3, [sp]
 8018e84:	463a      	mov	r2, r7
 8018e86:	4603      	mov	r3, r0
 8018e88:	4648      	mov	r0, r9
 8018e8a:	f7ff ff73 	bl	8018d74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018e8e:	6823      	ldr	r3, [r4, #0]
 8018e90:	9a03      	ldr	r2, [sp, #12]
 8018e92:	4546      	cmp	r6, r8
 8018e94:	441a      	add	r2, r3
 8018e96:	fb92 f3f5 	sdiv	r3, r2, r5
 8018e9a:	4418      	add	r0, r3
 8018e9c:	bf18      	it	ne
 8018e9e:	4240      	negne	r0, r0
 8018ea0:	fb05 2313 	mls	r3, r5, r3, r2
 8018ea4:	1c72      	adds	r2, r6, #1
 8018ea6:	6023      	str	r3, [r4, #0]
 8018ea8:	d105      	bne.n	8018eb6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8018eaa:	2b00      	cmp	r3, #0
 8018eac:	f1c3 0200 	rsb	r2, r3, #0
 8018eb0:	db0b      	blt.n	8018eca <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8018eb2:	6022      	str	r2, [r4, #0]
 8018eb4:	e006      	b.n	8018ec4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018eb6:	2e01      	cmp	r6, #1
 8018eb8:	d104      	bne.n	8018ec4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018eba:	2b00      	cmp	r3, #0
 8018ebc:	da02      	bge.n	8018ec4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018ebe:	442b      	add	r3, r5
 8018ec0:	3801      	subs	r0, #1
 8018ec2:	6023      	str	r3, [r4, #0]
 8018ec4:	b005      	add	sp, #20
 8018ec6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018eca:	3801      	subs	r0, #1
 8018ecc:	1b52      	subs	r2, r2, r5
 8018ece:	e7f0      	b.n	8018eb2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08018ed0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8018ed0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8018ed4:	4c1c      	ldr	r4, [pc, #112]	; (8018f48 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8018ed6:	6807      	ldr	r7, [r0, #0]
 8018ed8:	69a3      	ldr	r3, [r4, #24]
 8018eda:	4605      	mov	r5, r0
 8018edc:	b92b      	cbnz	r3, 8018eea <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8018ede:	6840      	ldr	r0, [r0, #4]
 8018ee0:	e9c5 7000 	strd	r7, r0, [r5]
 8018ee4:	b004      	add	sp, #16
 8018ee6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018eea:	68a2      	ldr	r2, [r4, #8]
 8018eec:	6820      	ldr	r0, [r4, #0]
 8018eee:	ae04      	add	r6, sp, #16
 8018ef0:	f04f 0802 	mov.w	r8, #2
 8018ef4:	fb93 f1f8 	sdiv	r1, r3, r8
 8018ef8:	440a      	add	r2, r1
 8018efa:	f846 2d04 	str.w	r2, [r6, #-4]!
 8018efe:	69e1      	ldr	r1, [r4, #28]
 8018f00:	9600      	str	r6, [sp, #0]
 8018f02:	463a      	mov	r2, r7
 8018f04:	f7ff ff98 	bl	8018e38 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018f08:	69a3      	ldr	r3, [r4, #24]
 8018f0a:	686a      	ldr	r2, [r5, #4]
 8018f0c:	6a21      	ldr	r1, [r4, #32]
 8018f0e:	9600      	str	r6, [sp, #0]
 8018f10:	4607      	mov	r7, r0
 8018f12:	6860      	ldr	r0, [r4, #4]
 8018f14:	f7ff ff90 	bl	8018e38 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018f18:	6962      	ldr	r2, [r4, #20]
 8018f1a:	69a3      	ldr	r3, [r4, #24]
 8018f1c:	fb93 f8f8 	sdiv	r8, r3, r8
 8018f20:	4442      	add	r2, r8
 8018f22:	9203      	str	r2, [sp, #12]
 8018f24:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8018f26:	682a      	ldr	r2, [r5, #0]
 8018f28:	9600      	str	r6, [sp, #0]
 8018f2a:	4407      	add	r7, r0
 8018f2c:	68e0      	ldr	r0, [r4, #12]
 8018f2e:	f7ff ff83 	bl	8018e38 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018f32:	9600      	str	r6, [sp, #0]
 8018f34:	4680      	mov	r8, r0
 8018f36:	69a3      	ldr	r3, [r4, #24]
 8018f38:	686a      	ldr	r2, [r5, #4]
 8018f3a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8018f3c:	6920      	ldr	r0, [r4, #16]
 8018f3e:	f7ff ff7b 	bl	8018e38 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018f42:	4440      	add	r0, r8
 8018f44:	e7cc      	b.n	8018ee0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8018f46:	bf00      	nop
 8018f48:	20002260 	.word	0x20002260

08018f4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8018f4c:	4b07      	ldr	r3, [pc, #28]	; (8018f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8018f4e:	781b      	ldrb	r3, [r3, #0]
 8018f50:	2b01      	cmp	r3, #1
 8018f52:	d109      	bne.n	8018f68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8018f54:	f9b1 3000 	ldrsh.w	r3, [r1]
 8018f58:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018f5c:	8003      	strh	r3, [r0, #0]
 8018f5e:	4b04      	ldr	r3, [pc, #16]	; (8018f70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8018f60:	881b      	ldrh	r3, [r3, #0]
 8018f62:	3b01      	subs	r3, #1
 8018f64:	1a9b      	subs	r3, r3, r2
 8018f66:	800b      	strh	r3, [r1, #0]
 8018f68:	4770      	bx	lr
 8018f6a:	bf00      	nop
 8018f6c:	20002244 	.word	0x20002244
 8018f70:	20002240 	.word	0x20002240

08018f74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8018f74:	b510      	push	{r4, lr}
 8018f76:	4b07      	ldr	r3, [pc, #28]	; (8018f94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8018f78:	781b      	ldrb	r3, [r3, #0]
 8018f7a:	2b01      	cmp	r3, #1
 8018f7c:	d108      	bne.n	8018f90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8018f7e:	4b06      	ldr	r3, [pc, #24]	; (8018f98 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8018f80:	880c      	ldrh	r4, [r1, #0]
 8018f82:	881b      	ldrh	r3, [r3, #0]
 8018f84:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018f88:	3b01      	subs	r3, #1
 8018f8a:	1b1b      	subs	r3, r3, r4
 8018f8c:	8003      	strh	r3, [r0, #0]
 8018f8e:	800a      	strh	r2, [r1, #0]
 8018f90:	bd10      	pop	{r4, pc}
 8018f92:	bf00      	nop
 8018f94:	20002244 	.word	0x20002244
 8018f98:	20002240 	.word	0x20002240

08018f9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8018f9c:	b510      	push	{r4, lr}
 8018f9e:	4b0a      	ldr	r3, [pc, #40]	; (8018fc8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8018fa0:	781b      	ldrb	r3, [r3, #0]
 8018fa2:	2b01      	cmp	r3, #1
 8018fa4:	d10e      	bne.n	8018fc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8018fa6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8018faa:	8843      	ldrh	r3, [r0, #2]
 8018fac:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018fb0:	8044      	strh	r4, [r0, #2]
 8018fb2:	18ca      	adds	r2, r1, r3
 8018fb4:	4b05      	ldr	r3, [pc, #20]	; (8018fcc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8018fb6:	881b      	ldrh	r3, [r3, #0]
 8018fb8:	1a9b      	subs	r3, r3, r2
 8018fba:	8003      	strh	r3, [r0, #0]
 8018fbc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018fc0:	80c3      	strh	r3, [r0, #6]
 8018fc2:	8081      	strh	r1, [r0, #4]
 8018fc4:	bd10      	pop	{r4, pc}
 8018fc6:	bf00      	nop
 8018fc8:	20002244 	.word	0x20002244
 8018fcc:	20002240 	.word	0x20002240

08018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8018fd0:	4b08      	ldr	r3, [pc, #32]	; (8018ff4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8018fd2:	781b      	ldrb	r3, [r3, #0]
 8018fd4:	2b01      	cmp	r3, #1
 8018fd6:	d10c      	bne.n	8018ff2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8018fd8:	8803      	ldrh	r3, [r0, #0]
 8018fda:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8018fde:	8842      	ldrh	r2, [r0, #2]
 8018fe0:	8002      	strh	r2, [r0, #0]
 8018fe2:	185a      	adds	r2, r3, r1
 8018fe4:	4b04      	ldr	r3, [pc, #16]	; (8018ff8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8018fe6:	881b      	ldrh	r3, [r3, #0]
 8018fe8:	1a9b      	subs	r3, r3, r2
 8018fea:	8043      	strh	r3, [r0, #2]
 8018fec:	88c3      	ldrh	r3, [r0, #6]
 8018fee:	8083      	strh	r3, [r0, #4]
 8018ff0:	80c1      	strh	r1, [r0, #6]
 8018ff2:	4770      	bx	lr
 8018ff4:	20002244 	.word	0x20002244
 8018ff8:	20002240 	.word	0x20002240

08018ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8018ffc:	b510      	push	{r4, lr}
 8018ffe:	4b07      	ldr	r3, [pc, #28]	; (801901c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8019000:	781b      	ldrb	r3, [r3, #0]
 8019002:	2b01      	cmp	r3, #1
 8019004:	d108      	bne.n	8019018 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8019006:	f9b1 3000 	ldrsh.w	r3, [r1]
 801900a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801900e:	8003      	strh	r3, [r0, #0]
 8019010:	8893      	ldrh	r3, [r2, #4]
 8019012:	3b01      	subs	r3, #1
 8019014:	1b1b      	subs	r3, r3, r4
 8019016:	800b      	strh	r3, [r1, #0]
 8019018:	bd10      	pop	{r4, pc}
 801901a:	bf00      	nop
 801901c:	20002244 	.word	0x20002244

08019020 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8019020:	4b0b      	ldr	r3, [pc, #44]	; (8019050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8019022:	781b      	ldrb	r3, [r3, #0]
 8019024:	2b01      	cmp	r3, #1
 8019026:	d111      	bne.n	801904c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8019028:	680b      	ldr	r3, [r1, #0]
 801902a:	ed90 7a00 	vldr	s14, [r0]
 801902e:	6003      	str	r3, [r0, #0]
 8019030:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8019034:	eddf 6a07 	vldr	s13, [pc, #28]	; 8019054 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8019038:	ee07 3a90 	vmov	s15, r3
 801903c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019040:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8019044:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8019048:	edc1 7a00 	vstr	s15, [r1]
 801904c:	4770      	bx	lr
 801904e:	bf00      	nop
 8019050:	20002244 	.word	0x20002244
 8019054:	38d1b717 	.word	0x38d1b717

08019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8019058:	b510      	push	{r4, lr}
 801905a:	4b0a      	ldr	r3, [pc, #40]	; (8019084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 801905c:	781b      	ldrb	r3, [r3, #0]
 801905e:	2b01      	cmp	r3, #1
 8019060:	460a      	mov	r2, r1
 8019062:	d10d      	bne.n	8019080 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8019064:	8881      	ldrh	r1, [r0, #4]
 8019066:	8803      	ldrh	r3, [r0, #0]
 8019068:	440b      	add	r3, r1
 801906a:	4601      	mov	r1, r0
 801906c:	3b01      	subs	r3, #1
 801906e:	f821 3b02 	strh.w	r3, [r1], #2
 8019072:	f7ff ffc3 	bl	8018ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8019076:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801907a:	88c2      	ldrh	r2, [r0, #6]
 801907c:	8082      	strh	r2, [r0, #4]
 801907e:	80c3      	strh	r3, [r0, #6]
 8019080:	bd10      	pop	{r4, pc}
 8019082:	bf00      	nop
 8019084:	20002244 	.word	0x20002244

08019088 <_ZN8touchgfx11Application13requestRedrawEv>:
 8019088:	4b06      	ldr	r3, [pc, #24]	; (80190a4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 801908a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801908e:	4b06      	ldr	r3, [pc, #24]	; (80190a8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8019090:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8019094:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019098:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 801909c:	2100      	movs	r1, #0
 801909e:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 80190a2:	4770      	bx	lr
 80190a4:	20002240 	.word	0x20002240
 80190a8:	20002242 	.word	0x20002242

080190ac <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80190ac:	4b03      	ldr	r3, [pc, #12]	; (80190bc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80190ae:	6818      	ldr	r0, [r3, #0]
 80190b0:	b110      	cbz	r0, 80190b8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80190b2:	6803      	ldr	r3, [r0, #0]
 80190b4:	699b      	ldr	r3, [r3, #24]
 80190b6:	4718      	bx	r3
 80190b8:	4770      	bx	lr
 80190ba:	bf00      	nop
 80190bc:	20002290 	.word	0x20002290

080190c0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80190c0:	4770      	bx	lr
	...

080190c4 <_ZN8touchgfx11Application4drawEv>:
 80190c4:	b507      	push	{r0, r1, r2, lr}
 80190c6:	4b09      	ldr	r3, [pc, #36]	; (80190ec <_ZN8touchgfx11Application4drawEv+0x28>)
 80190c8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80190cc:	4b08      	ldr	r3, [pc, #32]	; (80190f0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 80190ce:	f8ad 2004 	strh.w	r2, [sp, #4]
 80190d2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80190d6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80190da:	6803      	ldr	r3, [r0, #0]
 80190dc:	2100      	movs	r1, #0
 80190de:	9100      	str	r1, [sp, #0]
 80190e0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80190e2:	4669      	mov	r1, sp
 80190e4:	4798      	blx	r3
 80190e6:	b003      	add	sp, #12
 80190e8:	f85d fb04 	ldr.w	pc, [sp], #4
 80190ec:	20002240 	.word	0x20002240
 80190f0:	20002242 	.word	0x20002242

080190f4 <_ZN8touchgfx11Application10invalidateEv>:
 80190f4:	4b09      	ldr	r3, [pc, #36]	; (801911c <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80190f6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80190fa:	4b09      	ldr	r3, [pc, #36]	; (8019120 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80190fc:	b082      	sub	sp, #8
 80190fe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019102:	f8ad 2004 	strh.w	r2, [sp, #4]
 8019106:	2100      	movs	r1, #0
 8019108:	f8ad 3006 	strh.w	r3, [sp, #6]
 801910c:	9100      	str	r1, [sp, #0]
 801910e:	6803      	ldr	r3, [r0, #0]
 8019110:	aa02      	add	r2, sp, #8
 8019112:	e912 0006 	ldmdb	r2, {r1, r2}
 8019116:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019118:	b002      	add	sp, #8
 801911a:	4718      	bx	r3
 801911c:	20002240 	.word	0x20002240
 8019120:	20002242 	.word	0x20002242

08019124 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8019124:	4b03      	ldr	r3, [pc, #12]	; (8019134 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8019126:	6818      	ldr	r0, [r3, #0]
 8019128:	b110      	cbz	r0, 8019130 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 801912a:	6803      	ldr	r3, [r0, #0]
 801912c:	69db      	ldr	r3, [r3, #28]
 801912e:	4718      	bx	r3
 8019130:	4770      	bx	lr
 8019132:	bf00      	nop
 8019134:	20002290 	.word	0x20002290

08019138 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8019138:	4b03      	ldr	r3, [pc, #12]	; (8019148 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801913a:	6818      	ldr	r0, [r3, #0]
 801913c:	b110      	cbz	r0, 8019144 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801913e:	6803      	ldr	r3, [r0, #0]
 8019140:	6a1b      	ldr	r3, [r3, #32]
 8019142:	4718      	bx	r3
 8019144:	4770      	bx	lr
 8019146:	bf00      	nop
 8019148:	20002290 	.word	0x20002290

0801914c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 801914c:	2300      	movs	r3, #0
 801914e:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8019152:	4770      	bx	lr

08019154 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8019154:	4b03      	ldr	r3, [pc, #12]	; (8019164 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8019156:	6818      	ldr	r0, [r3, #0]
 8019158:	b110      	cbz	r0, 8019160 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 801915a:	6803      	ldr	r3, [r0, #0]
 801915c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801915e:	4718      	bx	r3
 8019160:	4770      	bx	lr
 8019162:	bf00      	nop
 8019164:	20002290 	.word	0x20002290

08019168 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8019168:	b510      	push	{r4, lr}
 801916a:	f9b1 4000 	ldrsh.w	r4, [r1]
 801916e:	888a      	ldrh	r2, [r1, #4]
 8019170:	f9b0 3000 	ldrsh.w	r3, [r0]
 8019174:	4422      	add	r2, r4
 8019176:	b212      	sxth	r2, r2
 8019178:	4293      	cmp	r3, r2
 801917a:	da15      	bge.n	80191a8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801917c:	8882      	ldrh	r2, [r0, #4]
 801917e:	4413      	add	r3, r2
 8019180:	b21b      	sxth	r3, r3
 8019182:	429c      	cmp	r4, r3
 8019184:	da10      	bge.n	80191a8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8019186:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801918a:	88c9      	ldrh	r1, [r1, #6]
 801918c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8019190:	4419      	add	r1, r3
 8019192:	b209      	sxth	r1, r1
 8019194:	428a      	cmp	r2, r1
 8019196:	da07      	bge.n	80191a8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8019198:	88c0      	ldrh	r0, [r0, #6]
 801919a:	4410      	add	r0, r2
 801919c:	b200      	sxth	r0, r0
 801919e:	4283      	cmp	r3, r0
 80191a0:	bfac      	ite	ge
 80191a2:	2000      	movge	r0, #0
 80191a4:	2001      	movlt	r0, #1
 80191a6:	bd10      	pop	{r4, pc}
 80191a8:	2000      	movs	r0, #0
 80191aa:	e7fc      	b.n	80191a6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080191ac <_ZN8touchgfx4Rect10restrictToEss>:
 80191ac:	f9b0 3000 	ldrsh.w	r3, [r0]
 80191b0:	2b00      	cmp	r3, #0
 80191b2:	b510      	push	{r4, lr}
 80191b4:	da04      	bge.n	80191c0 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80191b6:	8884      	ldrh	r4, [r0, #4]
 80191b8:	4423      	add	r3, r4
 80191ba:	8083      	strh	r3, [r0, #4]
 80191bc:	2300      	movs	r3, #0
 80191be:	8003      	strh	r3, [r0, #0]
 80191c0:	f9b0 4000 	ldrsh.w	r4, [r0]
 80191c4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80191c8:	1b09      	subs	r1, r1, r4
 80191ca:	428b      	cmp	r3, r1
 80191cc:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80191d0:	bfc8      	it	gt
 80191d2:	8081      	strhgt	r1, [r0, #4]
 80191d4:	2b00      	cmp	r3, #0
 80191d6:	da04      	bge.n	80191e2 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80191d8:	88c1      	ldrh	r1, [r0, #6]
 80191da:	440b      	add	r3, r1
 80191dc:	80c3      	strh	r3, [r0, #6]
 80191de:	2300      	movs	r3, #0
 80191e0:	8043      	strh	r3, [r0, #2]
 80191e2:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80191e6:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80191ea:	1a52      	subs	r2, r2, r1
 80191ec:	4293      	cmp	r3, r2
 80191ee:	bfc8      	it	gt
 80191f0:	80c2      	strhgt	r2, [r0, #6]
 80191f2:	bd10      	pop	{r4, pc}

080191f4 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80191f4:	b510      	push	{r4, lr}
 80191f6:	4b10      	ldr	r3, [pc, #64]	; (8019238 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80191f8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80191fc:	4b0f      	ldr	r3, [pc, #60]	; (801923c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80191fe:	460c      	mov	r4, r1
 8019200:	4620      	mov	r0, r4
 8019202:	f9b3 1000 	ldrsh.w	r1, [r3]
 8019206:	f7ff ffd1 	bl	80191ac <_ZN8touchgfx4Rect10restrictToEss>
 801920a:	4b0d      	ldr	r3, [pc, #52]	; (8019240 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 801920c:	6818      	ldr	r0, [r3, #0]
 801920e:	b190      	cbz	r0, 8019236 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8019210:	6803      	ldr	r3, [r0, #0]
 8019212:	4621      	mov	r1, r4
 8019214:	689b      	ldr	r3, [r3, #8]
 8019216:	4798      	blx	r3
 8019218:	4b0a      	ldr	r3, [pc, #40]	; (8019244 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801921a:	6818      	ldr	r0, [r3, #0]
 801921c:	b118      	cbz	r0, 8019226 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801921e:	6803      	ldr	r3, [r0, #0]
 8019220:	4621      	mov	r1, r4
 8019222:	689b      	ldr	r3, [r3, #8]
 8019224:	4798      	blx	r3
 8019226:	4b08      	ldr	r3, [pc, #32]	; (8019248 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8019228:	6818      	ldr	r0, [r3, #0]
 801922a:	6803      	ldr	r3, [r0, #0]
 801922c:	4621      	mov	r1, r4
 801922e:	69db      	ldr	r3, [r3, #28]
 8019230:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019234:	4718      	bx	r3
 8019236:	bd10      	pop	{r4, pc}
 8019238:	20002242 	.word	0x20002242
 801923c:	20002240 	.word	0x20002240
 8019240:	20002290 	.word	0x20002290
 8019244:	2000228c 	.word	0x2000228c
 8019248:	2000224c 	.word	0x2000224c

0801924c <_ZNK8touchgfx4Rect8includesERKS0_>:
 801924c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801924e:	4606      	mov	r6, r0
 8019250:	4608      	mov	r0, r1
 8019252:	460f      	mov	r7, r1
 8019254:	f7fa f8af 	bl	80133b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019258:	b9e8      	cbnz	r0, 8019296 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801925a:	f9b7 5000 	ldrsh.w	r5, [r7]
 801925e:	f9b6 4000 	ldrsh.w	r4, [r6]
 8019262:	42a5      	cmp	r5, r4
 8019264:	db17      	blt.n	8019296 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8019266:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801926a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801926e:	429a      	cmp	r2, r3
 8019270:	db11      	blt.n	8019296 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8019272:	88b9      	ldrh	r1, [r7, #4]
 8019274:	440d      	add	r5, r1
 8019276:	88b1      	ldrh	r1, [r6, #4]
 8019278:	440c      	add	r4, r1
 801927a:	b22d      	sxth	r5, r5
 801927c:	b224      	sxth	r4, r4
 801927e:	42a5      	cmp	r5, r4
 8019280:	dc09      	bgt.n	8019296 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8019282:	88f8      	ldrh	r0, [r7, #6]
 8019284:	4410      	add	r0, r2
 8019286:	88f2      	ldrh	r2, [r6, #6]
 8019288:	4413      	add	r3, r2
 801928a:	b200      	sxth	r0, r0
 801928c:	b21b      	sxth	r3, r3
 801928e:	4298      	cmp	r0, r3
 8019290:	bfcc      	ite	gt
 8019292:	2000      	movgt	r0, #0
 8019294:	2001      	movle	r0, #1
 8019296:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08019298 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8019298:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801929a:	4604      	mov	r4, r0
 801929c:	4608      	mov	r0, r1
 801929e:	460d      	mov	r5, r1
 80192a0:	f7fa f889 	bl	80133b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80192a4:	b978      	cbnz	r0, 80192c6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 80192a6:	4620      	mov	r0, r4
 80192a8:	f7fa f885 	bl	80133b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80192ac:	f9b5 6000 	ldrsh.w	r6, [r5]
 80192b0:	b150      	cbz	r0, 80192c8 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80192b2:	8026      	strh	r6, [r4, #0]
 80192b4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80192b8:	8063      	strh	r3, [r4, #2]
 80192ba:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80192be:	80a3      	strh	r3, [r4, #4]
 80192c0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80192c4:	80e3      	strh	r3, [r4, #6]
 80192c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80192c8:	f9b4 1000 	ldrsh.w	r1, [r4]
 80192cc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80192d0:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80192d4:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 80192d8:	88ed      	ldrh	r5, [r5, #6]
 80192da:	42b1      	cmp	r1, r6
 80192dc:	460f      	mov	r7, r1
 80192de:	bfa8      	it	ge
 80192e0:	4637      	movge	r7, r6
 80192e2:	4293      	cmp	r3, r2
 80192e4:	4618      	mov	r0, r3
 80192e6:	4466      	add	r6, ip
 80192e8:	bfa8      	it	ge
 80192ea:	4610      	movge	r0, r2
 80192ec:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80192f0:	8027      	strh	r7, [r4, #0]
 80192f2:	442a      	add	r2, r5
 80192f4:	88e5      	ldrh	r5, [r4, #6]
 80192f6:	8060      	strh	r0, [r4, #2]
 80192f8:	4461      	add	r1, ip
 80192fa:	442b      	add	r3, r5
 80192fc:	b236      	sxth	r6, r6
 80192fe:	b209      	sxth	r1, r1
 8019300:	b212      	sxth	r2, r2
 8019302:	b21b      	sxth	r3, r3
 8019304:	428e      	cmp	r6, r1
 8019306:	bfac      	ite	ge
 8019308:	ebc7 0106 	rsbge	r1, r7, r6
 801930c:	ebc7 0101 	rsblt	r1, r7, r1
 8019310:	429a      	cmp	r2, r3
 8019312:	bfac      	ite	ge
 8019314:	ebc0 0202 	rsbge	r2, r0, r2
 8019318:	ebc0 0203 	rsblt	r2, r0, r3
 801931c:	80a1      	strh	r1, [r4, #4]
 801931e:	80e2      	strh	r2, [r4, #6]
 8019320:	e7d1      	b.n	80192c6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08019324 <_ZN8touchgfx11Application11getInstanceEv>:
 8019324:	4b01      	ldr	r3, [pc, #4]	; (801932c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8019326:	6818      	ldr	r0, [r3, #0]
 8019328:	4770      	bx	lr
 801932a:	bf00      	nop
 801932c:	200022a0 	.word	0x200022a0

08019330 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8019330:	b510      	push	{r4, lr}
 8019332:	2300      	movs	r3, #0
 8019334:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8019338:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 801933c:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8019340:	4604      	mov	r4, r0
 8019342:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8019346:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 801934a:	429a      	cmp	r2, r3
 801934c:	d90e      	bls.n	801936c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 801934e:	18e2      	adds	r2, r4, r3
 8019350:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8019354:	b122      	cbz	r2, 8019360 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8019356:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 801935a:	6803      	ldr	r3, [r0, #0]
 801935c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801935e:	4798      	blx	r3
 8019360:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8019364:	3301      	adds	r3, #1
 8019366:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 801936a:	e7ea      	b.n	8019342 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 801936c:	bd10      	pop	{r4, pc}

0801936e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 801936e:	b530      	push	{r4, r5, lr}
 8019370:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8019374:	2200      	movs	r2, #0
 8019376:	b293      	uxth	r3, r2
 8019378:	429d      	cmp	r5, r3
 801937a:	d90e      	bls.n	801939a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 801937c:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8019380:	428b      	cmp	r3, r1
 8019382:	d10b      	bne.n	801939c <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8019384:	1884      	adds	r4, r0, r2
 8019386:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 801938a:	b13b      	cbz	r3, 801939c <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 801938c:	3b01      	subs	r3, #1
 801938e:	b2db      	uxtb	r3, r3
 8019390:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8019394:	b90b      	cbnz	r3, 801939a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8019396:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 801939a:	bd30      	pop	{r4, r5, pc}
 801939c:	3201      	adds	r2, #1
 801939e:	e7ea      	b.n	8019376 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

080193a0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80193a0:	2300      	movs	r3, #0
 80193a2:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80193a6:	f100 0284 	add.w	r2, r0, #132	; 0x84
 80193aa:	30a4      	adds	r0, #164	; 0xa4
 80193ac:	f802 3b01 	strb.w	r3, [r2], #1
 80193b0:	4282      	cmp	r2, r0
 80193b2:	d1fb      	bne.n	80193ac <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80193b4:	4770      	bx	lr
	...

080193b8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80193b8:	b570      	push	{r4, r5, r6, lr}
 80193ba:	4c0b      	ldr	r4, [pc, #44]	; (80193e8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80193bc:	4605      	mov	r5, r0
 80193be:	6820      	ldr	r0, [r4, #0]
 80193c0:	460e      	mov	r6, r1
 80193c2:	b110      	cbz	r0, 80193ca <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80193c4:	6803      	ldr	r3, [r0, #0]
 80193c6:	695b      	ldr	r3, [r3, #20]
 80193c8:	4798      	blx	r3
 80193ca:	1d28      	adds	r0, r5, #4
 80193cc:	f7ff ffe8 	bl	80193a0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80193d0:	6026      	str	r6, [r4, #0]
 80193d2:	6833      	ldr	r3, [r6, #0]
 80193d4:	4630      	mov	r0, r6
 80193d6:	68db      	ldr	r3, [r3, #12]
 80193d8:	4798      	blx	r3
 80193da:	682b      	ldr	r3, [r5, #0]
 80193dc:	4628      	mov	r0, r5
 80193de:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80193e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80193e4:	4718      	bx	r3
 80193e6:	bf00      	nop
 80193e8:	20002290 	.word	0x20002290

080193ec <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 80193ec:	2300      	movs	r3, #0
 80193ee:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 80193f2:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 80193f6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80193f8:	461a      	mov	r2, r3
 80193fa:	461c      	mov	r4, r3
 80193fc:	461d      	mov	r5, r3
 80193fe:	459c      	cmp	ip, r3
 8019400:	dd1a      	ble.n	8019438 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8019402:	18c6      	adds	r6, r0, r3
 8019404:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8019408:	b16e      	cbz	r6, 8019426 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 801940a:	429a      	cmp	r2, r3
 801940c:	d008      	beq.n	8019420 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801940e:	fa1f fe82 	uxth.w	lr, r2
 8019412:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8019416:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 801941a:	1887      	adds	r7, r0, r2
 801941c:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8019420:	3201      	adds	r2, #1
 8019422:	3301      	adds	r3, #1
 8019424:	e7eb      	b.n	80193fe <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8019426:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 801942a:	4299      	cmp	r1, r3
 801942c:	bfa8      	it	ge
 801942e:	3501      	addge	r5, #1
 8019430:	429e      	cmp	r6, r3
 8019432:	bfc8      	it	gt
 8019434:	3401      	addgt	r4, #1
 8019436:	e7f4      	b.n	8019422 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8019438:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 801943c:	1b49      	subs	r1, r1, r5
 801943e:	1b1b      	subs	r3, r3, r4
 8019440:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8019444:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8019448:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 801944c:	4293      	cmp	r3, r2
 801944e:	dd03      	ble.n	8019458 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8019450:	3b01      	subs	r3, #1
 8019452:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8019456:	e7f7      	b.n	8019448 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8019458:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0801945c <_ZN8touchgfx11Application15handleTickEventEv>:
 801945c:	b570      	push	{r4, r5, r6, lr}
 801945e:	4d16      	ldr	r5, [pc, #88]	; (80194b8 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8019460:	4604      	mov	r4, r0
 8019462:	6828      	ldr	r0, [r5, #0]
 8019464:	b140      	cbz	r0, 8019478 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8019466:	7a03      	ldrb	r3, [r0, #8]
 8019468:	b933      	cbnz	r3, 8019478 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801946a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801946e:	6803      	ldr	r3, [r0, #0]
 8019470:	689b      	ldr	r3, [r3, #8]
 8019472:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019476:	4718      	bx	r3
 8019478:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 801947c:	4e0f      	ldr	r6, [pc, #60]	; (80194bc <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801947e:	b973      	cbnz	r3, 801949e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8019480:	b168      	cbz	r0, 801949e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8019482:	7a03      	ldrb	r3, [r0, #8]
 8019484:	b15b      	cbz	r3, 801949e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8019486:	6830      	ldr	r0, [r6, #0]
 8019488:	b110      	cbz	r0, 8019490 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 801948a:	6803      	ldr	r3, [r0, #0]
 801948c:	691b      	ldr	r3, [r3, #16]
 801948e:	4798      	blx	r3
 8019490:	6828      	ldr	r0, [r5, #0]
 8019492:	6803      	ldr	r3, [r0, #0]
 8019494:	68db      	ldr	r3, [r3, #12]
 8019496:	4798      	blx	r3
 8019498:	2301      	movs	r3, #1
 801949a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801949e:	3404      	adds	r4, #4
 80194a0:	4620      	mov	r0, r4
 80194a2:	f7ff ff45 	bl	8019330 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80194a6:	4620      	mov	r0, r4
 80194a8:	f7ff ffa0 	bl	80193ec <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80194ac:	6830      	ldr	r0, [r6, #0]
 80194ae:	b110      	cbz	r0, 80194b6 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80194b0:	6803      	ldr	r3, [r0, #0]
 80194b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80194b4:	e7dd      	b.n	8019472 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80194b6:	bd70      	pop	{r4, r5, r6, pc}
 80194b8:	20002294 	.word	0x20002294
 80194bc:	20002290 	.word	0x20002290

080194c0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 80194c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80194c2:	2300      	movs	r3, #0
 80194c4:	4604      	mov	r4, r0
 80194c6:	460d      	mov	r5, r1
 80194c8:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 80194cc:	4618      	mov	r0, r3
 80194ce:	b29a      	uxth	r2, r3
 80194d0:	4291      	cmp	r1, r2
 80194d2:	d911      	bls.n	80194f8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 80194d4:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 80194d8:	18e6      	adds	r6, r4, r3
 80194da:	42af      	cmp	r7, r5
 80194dc:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 80194e0:	d105      	bne.n	80194ee <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 80194e2:	2aff      	cmp	r2, #255	; 0xff
 80194e4:	d002      	beq.n	80194ec <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 80194e6:	3201      	adds	r2, #1
 80194e8:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 80194ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80194ee:	2a00      	cmp	r2, #0
 80194f0:	bf08      	it	eq
 80194f2:	2001      	moveq	r0, #1
 80194f4:	3301      	adds	r3, #1
 80194f6:	e7ea      	b.n	80194ce <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 80194f8:	b120      	cbz	r0, 8019504 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 80194fa:	2920      	cmp	r1, #32
 80194fc:	d102      	bne.n	8019504 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 80194fe:	4620      	mov	r0, r4
 8019500:	f7ff ff74 	bl	80193ec <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8019504:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8019508:	2b1f      	cmp	r3, #31
 801950a:	d8ef      	bhi.n	80194ec <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 801950c:	18e2      	adds	r2, r4, r3
 801950e:	2101      	movs	r1, #1
 8019510:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8019514:	185a      	adds	r2, r3, r1
 8019516:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 801951a:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801951e:	e7e5      	b.n	80194ec <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08019520 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8019520:	4603      	mov	r3, r0
 8019522:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8019526:	2200      	movs	r2, #0
 8019528:	801a      	strh	r2, [r3, #0]
 801952a:	805a      	strh	r2, [r3, #2]
 801952c:	809a      	strh	r2, [r3, #4]
 801952e:	80da      	strh	r2, [r3, #6]
 8019530:	3308      	adds	r3, #8
 8019532:	428b      	cmp	r3, r1
 8019534:	d1f8      	bne.n	8019528 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8019536:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 801953a:	4770      	bx	lr

0801953c <_ZN8touchgfx11ApplicationC1Ev>:
 801953c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801953e:	4606      	mov	r6, r0
 8019540:	4b1c      	ldr	r3, [pc, #112]	; (80195b4 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8019542:	f846 3b04 	str.w	r3, [r6], #4
 8019546:	4604      	mov	r4, r0
 8019548:	2500      	movs	r5, #0
 801954a:	22a8      	movs	r2, #168	; 0xa8
 801954c:	2100      	movs	r1, #0
 801954e:	4630      	mov	r0, r6
 8019550:	f012 f93b 	bl	802b7ca <memset>
 8019554:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8019558:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 801955c:	f7ff ffe0 	bl	8019520 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8019560:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8019564:	f7ff ffdc 	bl	8019520 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8019568:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 801956c:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8019570:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8019574:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8019578:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 801957c:	490e      	ldr	r1, [pc, #56]	; (80195b8 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801957e:	480f      	ldr	r0, [pc, #60]	; (80195bc <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8019580:	4f0f      	ldr	r7, [pc, #60]	; (80195c0 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8019582:	f010 fcf9 	bl	8029f78 <CRC_Lock>
 8019586:	4b0f      	ldr	r3, [pc, #60]	; (80195c4 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8019588:	b158      	cbz	r0, 80195a2 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 801958a:	801d      	strh	r5, [r3, #0]
 801958c:	4a0e      	ldr	r2, [pc, #56]	; (80195c8 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801958e:	2300      	movs	r3, #0
 8019590:	6013      	str	r3, [r2, #0]
 8019592:	4a0e      	ldr	r2, [pc, #56]	; (80195cc <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8019594:	603b      	str	r3, [r7, #0]
 8019596:	4630      	mov	r0, r6
 8019598:	6013      	str	r3, [r2, #0]
 801959a:	f7ff ff01 	bl	80193a0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801959e:	4620      	mov	r0, r4
 80195a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80195a2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80195a6:	2002      	movs	r0, #2
 80195a8:	801a      	strh	r2, [r3, #0]
 80195aa:	6038      	str	r0, [r7, #0]
 80195ac:	f001 fb00 	bl	801abb0 <_ZN8touchgfx6Screen4drawEv>
 80195b0:	e7ec      	b.n	801958c <_ZN8touchgfx11ApplicationC1Ev+0x50>
 80195b2:	bf00      	nop
 80195b4:	0802f9e4 	.word	0x0802f9e4
 80195b8:	b5e8b5cd 	.word	0xb5e8b5cd
 80195bc:	f407a5c2 	.word	0xf407a5c2
 80195c0:	20002290 	.word	0x20002290
 80195c4:	2000001c 	.word	0x2000001c
 80195c8:	200022a0 	.word	0x200022a0
 80195cc:	20002294 	.word	0x20002294

080195d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80195d0:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 80195d4:	3b01      	subs	r3, #1
 80195d6:	b29b      	uxth	r3, r3
 80195d8:	428b      	cmp	r3, r1
 80195da:	b510      	push	{r4, lr}
 80195dc:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 80195e0:	d908      	bls.n	80195f4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 80195e2:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80195e6:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80195ea:	681a      	ldr	r2, [r3, #0]
 80195ec:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 80195f0:	685a      	ldr	r2, [r3, #4]
 80195f2:	6062      	str	r2, [r4, #4]
 80195f4:	bd10      	pop	{r4, pc}
	...

080195f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80195f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80195fc:	4b8f      	ldr	r3, [pc, #572]	; (801983c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80195fe:	b08f      	sub	sp, #60	; 0x3c
 8019600:	ac0a      	add	r4, sp, #40	; 0x28
 8019602:	e884 0006 	stmia.w	r4, {r1, r2}
 8019606:	f9b3 2000 	ldrsh.w	r2, [r3]
 801960a:	4b8d      	ldr	r3, [pc, #564]	; (8019840 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 801960c:	4683      	mov	fp, r0
 801960e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8019612:	4620      	mov	r0, r4
 8019614:	f7ff fdca 	bl	80191ac <_ZN8touchgfx4Rect10restrictToEss>
 8019618:	4620      	mov	r0, r4
 801961a:	f7f9 fecc 	bl	80133b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801961e:	2800      	cmp	r0, #0
 8019620:	d16a      	bne.n	80196f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8019622:	9403      	str	r4, [sp, #12]
 8019624:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8019628:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 801962c:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8019630:	35a4      	adds	r5, #164	; 0xa4
 8019632:	9301      	str	r3, [sp, #4]
 8019634:	b15c      	cbz	r4, 801964e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8019636:	4629      	mov	r1, r5
 8019638:	9803      	ldr	r0, [sp, #12]
 801963a:	f7ff fe07 	bl	801924c <_ZNK8touchgfx4Rect8includesERKS0_>
 801963e:	3c01      	subs	r4, #1
 8019640:	b118      	cbz	r0, 801964a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8019642:	b2a1      	uxth	r1, r4
 8019644:	9801      	ldr	r0, [sp, #4]
 8019646:	f7ff ffc3 	bl	80195d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801964a:	3d08      	subs	r5, #8
 801964c:	e7f2      	b.n	8019634 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801964e:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8019652:	f8cd a010 	str.w	sl, [sp, #16]
 8019656:	f10a 33ff 	add.w	r3, sl, #4294967295
 801965a:	9302      	str	r3, [sp, #8]
 801965c:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8019660:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8019664:	9306      	str	r3, [sp, #24]
 8019666:	445c      	add	r4, fp
 8019668:	2500      	movs	r5, #0
 801966a:	4626      	mov	r6, r4
 801966c:	f8cd a014 	str.w	sl, [sp, #20]
 8019670:	462f      	mov	r7, r5
 8019672:	9b05      	ldr	r3, [sp, #20]
 8019674:	2b00      	cmp	r3, #0
 8019676:	d073      	beq.n	8019760 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8019678:	9903      	ldr	r1, [sp, #12]
 801967a:	4630      	mov	r0, r6
 801967c:	f7ff fd74 	bl	8019168 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8019680:	b350      	cbz	r0, 80196d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8019682:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8019686:	f9b6 c000 	ldrsh.w	ip, [r6]
 801968a:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801968e:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8019692:	45e6      	cmp	lr, ip
 8019694:	db33      	blt.n	80196fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8019696:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801969a:	88b3      	ldrh	r3, [r6, #4]
 801969c:	4472      	add	r2, lr
 801969e:	4463      	add	r3, ip
 80196a0:	b212      	sxth	r2, r2
 80196a2:	b21b      	sxth	r3, r3
 80196a4:	429a      	cmp	r2, r3
 80196a6:	dc2a      	bgt.n	80196fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80196a8:	88f3      	ldrh	r3, [r6, #6]
 80196aa:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80196ae:	fa1f f289 	uxth.w	r2, r9
 80196b2:	4413      	add	r3, r2
 80196b4:	b29b      	uxth	r3, r3
 80196b6:	45c8      	cmp	r8, r9
 80196b8:	fa1f fc88 	uxth.w	ip, r8
 80196bc:	fa0f fe83 	sxth.w	lr, r3
 80196c0:	db0f      	blt.n	80196e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80196c2:	eba3 030c 	sub.w	r3, r3, ip
 80196c6:	1ac9      	subs	r1, r1, r3
 80196c8:	b209      	sxth	r1, r1
 80196ca:	2900      	cmp	r1, #0
 80196cc:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80196d0:	dd12      	ble.n	80196f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80196d2:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 80196d6:	4605      	mov	r5, r0
 80196d8:	9b05      	ldr	r3, [sp, #20]
 80196da:	3b01      	subs	r3, #1
 80196dc:	9305      	str	r3, [sp, #20]
 80196de:	3e08      	subs	r6, #8
 80196e0:	e7c7      	b.n	8019672 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 80196e2:	4461      	add	r1, ip
 80196e4:	b209      	sxth	r1, r1
 80196e6:	4571      	cmp	r1, lr
 80196e8:	dc38      	bgt.n	801975c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80196ea:	eba2 020c 	sub.w	r2, r2, ip
 80196ee:	b212      	sxth	r2, r2
 80196f0:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80196f4:	2a00      	cmp	r2, #0
 80196f6:	dcee      	bgt.n	80196d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80196f8:	b00f      	add	sp, #60	; 0x3c
 80196fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80196fe:	45c8      	cmp	r8, r9
 8019700:	db2c      	blt.n	801975c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8019702:	88f3      	ldrh	r3, [r6, #6]
 8019704:	4499      	add	r9, r3
 8019706:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 801970a:	4498      	add	r8, r3
 801970c:	fa0f f989 	sxth.w	r9, r9
 8019710:	fa0f f888 	sxth.w	r8, r8
 8019714:	45c1      	cmp	r9, r8
 8019716:	db21      	blt.n	801975c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8019718:	88b3      	ldrh	r3, [r6, #4]
 801971a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801971e:	fa1f f28c 	uxth.w	r2, ip
 8019722:	4413      	add	r3, r2
 8019724:	b29b      	uxth	r3, r3
 8019726:	45e6      	cmp	lr, ip
 8019728:	fa1f f88e 	uxth.w	r8, lr
 801972c:	fa0f f983 	sxth.w	r9, r3
 8019730:	db0a      	blt.n	8019748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8019732:	eba3 0308 	sub.w	r3, r3, r8
 8019736:	1ac9      	subs	r1, r1, r3
 8019738:	b209      	sxth	r1, r1
 801973a:	2900      	cmp	r1, #0
 801973c:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8019740:	ddda      	ble.n	80196f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8019742:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8019746:	e7c6      	b.n	80196d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8019748:	4441      	add	r1, r8
 801974a:	b209      	sxth	r1, r1
 801974c:	4549      	cmp	r1, r9
 801974e:	dc05      	bgt.n	801975c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8019750:	eba2 0208 	sub.w	r2, r2, r8
 8019754:	b212      	sxth	r2, r2
 8019756:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801975a:	e7cb      	b.n	80196f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 801975c:	4607      	mov	r7, r0
 801975e:	e7bb      	b.n	80196d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8019760:	2d00      	cmp	r5, #0
 8019762:	d181      	bne.n	8019668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8019764:	2f00      	cmp	r7, #0
 8019766:	f000 81dd 	beq.w	8019b24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801976a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801976e:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8019772:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8019776:	b2b3      	uxth	r3, r6
 8019778:	9305      	str	r3, [sp, #20]
 801977a:	9a05      	ldr	r2, [sp, #20]
 801977c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8019780:	4413      	add	r3, r2
 8019782:	b2ba      	uxth	r2, r7
 8019784:	4492      	add	sl, r2
 8019786:	b29b      	uxth	r3, r3
 8019788:	fa1f fa8a 	uxth.w	sl, sl
 801978c:	fa0f f883 	sxth.w	r8, r3
 8019790:	fa0f f98a 	sxth.w	r9, sl
 8019794:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8019798:	9b04      	ldr	r3, [sp, #16]
 801979a:	2b00      	cmp	r3, #0
 801979c:	d052      	beq.n	8019844 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801979e:	9903      	ldr	r1, [sp, #12]
 80197a0:	4620      	mov	r0, r4
 80197a2:	f7ff fce1 	bl	8019168 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80197a6:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80197aa:	b1c0      	cbz	r0, 80197de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80197ac:	f9b4 e000 	ldrsh.w	lr, [r4]
 80197b0:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80197b4:	4576      	cmp	r6, lr
 80197b6:	dc22      	bgt.n	80197fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80197b8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80197bc:	44f4      	add	ip, lr
 80197be:	fa0f fc8c 	sxth.w	ip, ip
 80197c2:	45e0      	cmp	r8, ip
 80197c4:	db1b      	blt.n	80197fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80197c6:	428f      	cmp	r7, r1
 80197c8:	fa1f fc81 	uxth.w	ip, r1
 80197cc:	88e1      	ldrh	r1, [r4, #6]
 80197ce:	dc0d      	bgt.n	80197ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80197d0:	ebaa 0c0c 	sub.w	ip, sl, ip
 80197d4:	eba1 010c 	sub.w	r1, r1, ip
 80197d8:	f8a4 9002 	strh.w	r9, [r4, #2]
 80197dc:	80e1      	strh	r1, [r4, #6]
 80197de:	4628      	mov	r0, r5
 80197e0:	9904      	ldr	r1, [sp, #16]
 80197e2:	3901      	subs	r1, #1
 80197e4:	9104      	str	r1, [sp, #16]
 80197e6:	3c08      	subs	r4, #8
 80197e8:	4605      	mov	r5, r0
 80197ea:	e7d3      	b.n	8019794 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 80197ec:	4461      	add	r1, ip
 80197ee:	b209      	sxth	r1, r1
 80197f0:	4549      	cmp	r1, r9
 80197f2:	dcf5      	bgt.n	80197e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80197f4:	eba2 0c0c 	sub.w	ip, r2, ip
 80197f8:	f8a4 c006 	strh.w	ip, [r4, #6]
 80197fc:	e7ef      	b.n	80197de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80197fe:	428f      	cmp	r7, r1
 8019800:	dcee      	bgt.n	80197e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8019802:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8019806:	4461      	add	r1, ip
 8019808:	b209      	sxth	r1, r1
 801980a:	4589      	cmp	r9, r1
 801980c:	dbe8      	blt.n	80197e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801980e:	4576      	cmp	r6, lr
 8019810:	fa1f fc8e 	uxth.w	ip, lr
 8019814:	88a1      	ldrh	r1, [r4, #4]
 8019816:	dc07      	bgt.n	8019828 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8019818:	eba3 0c0c 	sub.w	ip, r3, ip
 801981c:	eba1 010c 	sub.w	r1, r1, ip
 8019820:	f8a4 8000 	strh.w	r8, [r4]
 8019824:	80a1      	strh	r1, [r4, #4]
 8019826:	e7da      	b.n	80197de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8019828:	4461      	add	r1, ip
 801982a:	b209      	sxth	r1, r1
 801982c:	4588      	cmp	r8, r1
 801982e:	dbd7      	blt.n	80197e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8019830:	9905      	ldr	r1, [sp, #20]
 8019832:	eba1 0c0c 	sub.w	ip, r1, ip
 8019836:	f8a4 c004 	strh.w	ip, [r4, #4]
 801983a:	e7d0      	b.n	80197de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801983c:	20002242 	.word	0x20002242
 8019840:	20002240 	.word	0x20002240
 8019844:	2d00      	cmp	r5, #0
 8019846:	f000 816d 	beq.w	8019b24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801984a:	9b06      	ldr	r3, [sp, #24]
 801984c:	445b      	add	r3, fp
 801984e:	461c      	mov	r4, r3
 8019850:	9b02      	ldr	r3, [sp, #8]
 8019852:	3301      	adds	r3, #1
 8019854:	f000 8166 	beq.w	8019b24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8019858:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 801985c:	4629      	mov	r1, r5
 801985e:	9803      	ldr	r0, [sp, #12]
 8019860:	f7ff fcf4 	bl	801924c <_ZNK8touchgfx4Rect8includesERKS0_>
 8019864:	b120      	cbz	r0, 8019870 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8019866:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801986a:	9801      	ldr	r0, [sp, #4]
 801986c:	f7ff feb0 	bl	80195d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019870:	9903      	ldr	r1, [sp, #12]
 8019872:	4628      	mov	r0, r5
 8019874:	f7ff fc78 	bl	8019168 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8019878:	2800      	cmp	r0, #0
 801987a:	f000 809c 	beq.w	80199b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801987e:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8019882:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8019886:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801988a:	9309      	str	r3, [sp, #36]	; 0x24
 801988c:	fa1f f189 	uxth.w	r1, r9
 8019890:	eb01 0c03 	add.w	ip, r1, r3
 8019894:	fa1f fa8c 	uxth.w	sl, ip
 8019898:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801989c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80198a0:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 80198a4:	b283      	uxth	r3, r0
 80198a6:	eb03 050c 	add.w	r5, r3, ip
 80198aa:	b2ad      	uxth	r5, r5
 80198ac:	9505      	str	r5, [sp, #20]
 80198ae:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 80198b2:	9504      	str	r5, [sp, #16]
 80198b4:	4548      	cmp	r0, r9
 80198b6:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 80198ba:	f340 8099 	ble.w	80199f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 80198be:	1a5b      	subs	r3, r3, r1
 80198c0:	b29b      	uxth	r3, r3
 80198c2:	4596      	cmp	lr, r2
 80198c4:	fa0f f08a 	sxth.w	r0, sl
 80198c8:	b21e      	sxth	r6, r3
 80198ca:	dd2e      	ble.n	801992a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 80198cc:	9f02      	ldr	r7, [sp, #8]
 80198ce:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80198d2:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80198d6:	9f04      	ldr	r7, [sp, #16]
 80198d8:	1a3f      	subs	r7, r7, r0
 80198da:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 80198de:	fa1f fe8e 	uxth.w	lr, lr
 80198e2:	b292      	uxth	r2, r2
 80198e4:	ebae 0102 	sub.w	r1, lr, r2
 80198e8:	44a6      	add	lr, r4
 80198ea:	4402      	add	r2, r0
 80198ec:	b289      	uxth	r1, r1
 80198ee:	fa0f fe8e 	sxth.w	lr, lr
 80198f2:	b212      	sxth	r2, r2
 80198f4:	b20d      	sxth	r5, r1
 80198f6:	ebae 0202 	sub.w	r2, lr, r2
 80198fa:	436f      	muls	r7, r5
 80198fc:	4372      	muls	r2, r6
 80198fe:	4297      	cmp	r7, r2
 8019900:	db09      	blt.n	8019916 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8019902:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8019906:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 801990a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801990e:	449c      	add	ip, r3
 8019910:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8019914:	e686      	b.n	8019624 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019916:	4421      	add	r1, r4
 8019918:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 801991c:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8019920:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8019924:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8019928:	e67c      	b.n	8019624 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801992a:	9f04      	ldr	r7, [sp, #16]
 801992c:	42b8      	cmp	r0, r7
 801992e:	da27      	bge.n	8019980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8019930:	9902      	ldr	r1, [sp, #8]
 8019932:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8019936:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 801993a:	eb05 010e 	add.w	r1, r5, lr
 801993e:	fa1f f881 	uxth.w	r8, r1
 8019942:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8019946:	4411      	add	r1, r2
 8019948:	eba1 0108 	sub.w	r1, r1, r8
 801994c:	b289      	uxth	r1, r1
 801994e:	fa0f f988 	sxth.w	r9, r8
 8019952:	eba2 020e 	sub.w	r2, r2, lr
 8019956:	fa0f f881 	sxth.w	r8, r1
 801995a:	1a3f      	subs	r7, r7, r0
 801995c:	4372      	muls	r2, r6
 801995e:	fb08 f707 	mul.w	r7, r8, r7
 8019962:	42ba      	cmp	r2, r7
 8019964:	dc06      	bgt.n	8019974 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8019966:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 801996a:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801996e:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8019972:	e7ca      	b.n	801990a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8019974:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8019978:	4429      	add	r1, r5
 801997a:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801997e:	e651      	b.n	8019624 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019980:	9805      	ldr	r0, [sp, #20]
 8019982:	ebaa 0000 	sub.w	r0, sl, r0
 8019986:	b280      	uxth	r0, r0
 8019988:	2d06      	cmp	r5, #6
 801998a:	fa0f fe80 	sxth.w	lr, r0
 801998e:	d817      	bhi.n	80199c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8019990:	9b04      	ldr	r3, [sp, #16]
 8019992:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8019996:	1c6b      	adds	r3, r5, #1
 8019998:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 801999c:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 80199a0:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80199a4:	9b01      	ldr	r3, [sp, #4]
 80199a6:	9801      	ldr	r0, [sp, #4]
 80199a8:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80199ac:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80199b0:	805a      	strh	r2, [r3, #2]
 80199b2:	809e      	strh	r6, [r3, #4]
 80199b4:	80d9      	strh	r1, [r3, #6]
 80199b6:	9b02      	ldr	r3, [sp, #8]
 80199b8:	3b01      	subs	r3, #1
 80199ba:	9302      	str	r3, [sp, #8]
 80199bc:	3c08      	subs	r4, #8
 80199be:	e747      	b.n	8019850 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 80199c0:	9a02      	ldr	r2, [sp, #8]
 80199c2:	45b6      	cmp	lr, r6
 80199c4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80199c8:	db0d      	blt.n	80199e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 80199ca:	449c      	add	ip, r3
 80199cc:	fa1f fc8c 	uxth.w	ip, ip
 80199d0:	445a      	add	r2, fp
 80199d2:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80199d6:	448c      	add	ip, r1
 80199d8:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80199dc:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 80199e0:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 80199e4:	e61e      	b.n	8019624 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80199e6:	445a      	add	r2, fp
 80199e8:	4484      	add	ip, r0
 80199ea:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 80199ee:	e78f      	b.n	8019910 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80199f0:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80199f4:	fa1f f18e 	uxth.w	r1, lr
 80199f8:	eb01 0806 	add.w	r8, r1, r6
 80199fc:	b293      	uxth	r3, r2
 80199fe:	fa1f f888 	uxth.w	r8, r8
 8019a02:	9306      	str	r3, [sp, #24]
 8019a04:	fa0f f388 	sxth.w	r3, r8
 8019a08:	9307      	str	r3, [sp, #28]
 8019a0a:	9f06      	ldr	r7, [sp, #24]
 8019a0c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8019a10:	443b      	add	r3, r7
 8019a12:	b29b      	uxth	r3, r3
 8019a14:	4596      	cmp	lr, r2
 8019a16:	9308      	str	r3, [sp, #32]
 8019a18:	da24      	bge.n	8019a64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8019a1a:	9905      	ldr	r1, [sp, #20]
 8019a1c:	eba3 0308 	sub.w	r3, r3, r8
 8019a20:	ebaa 0401 	sub.w	r4, sl, r1
 8019a24:	b2a4      	uxth	r4, r4
 8019a26:	b29b      	uxth	r3, r3
 8019a28:	b225      	sxth	r5, r4
 8019a2a:	b219      	sxth	r1, r3
 8019a2c:	eba2 020e 	sub.w	r2, r2, lr
 8019a30:	eba9 0000 	sub.w	r0, r9, r0
 8019a34:	436a      	muls	r2, r5
 8019a36:	4348      	muls	r0, r1
 8019a38:	4282      	cmp	r2, r0
 8019a3a:	9a02      	ldr	r2, [sp, #8]
 8019a3c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8019a40:	445a      	add	r2, fp
 8019a42:	dc06      	bgt.n	8019a52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8019a44:	9b07      	ldr	r3, [sp, #28]
 8019a46:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8019a4a:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8019a4e:	44a4      	add	ip, r4
 8019a50:	e75e      	b.n	8019910 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8019a52:	9904      	ldr	r1, [sp, #16]
 8019a54:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8019a58:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8019a5c:	4433      	add	r3, r6
 8019a5e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8019a62:	e5df      	b.n	8019624 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019a64:	9f06      	ldr	r7, [sp, #24]
 8019a66:	9b04      	ldr	r3, [sp, #16]
 8019a68:	1bc9      	subs	r1, r1, r7
 8019a6a:	fa0f f78a 	sxth.w	r7, sl
 8019a6e:	b289      	uxth	r1, r1
 8019a70:	429f      	cmp	r7, r3
 8019a72:	fa0f fe81 	sxth.w	lr, r1
 8019a76:	dd23      	ble.n	8019ac0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8019a78:	9a05      	ldr	r2, [sp, #20]
 8019a7a:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8019a7e:	9d07      	ldr	r5, [sp, #28]
 8019a80:	ebaa 0202 	sub.w	r2, sl, r2
 8019a84:	b292      	uxth	r2, r2
 8019a86:	eba5 0a03 	sub.w	sl, r5, r3
 8019a8a:	b214      	sxth	r4, r2
 8019a8c:	eba9 0000 	sub.w	r0, r9, r0
 8019a90:	9b02      	ldr	r3, [sp, #8]
 8019a92:	fb0e f000 	mul.w	r0, lr, r0
 8019a96:	fb04 fa0a 	mul.w	sl, r4, sl
 8019a9a:	00db      	lsls	r3, r3, #3
 8019a9c:	4550      	cmp	r0, sl
 8019a9e:	445b      	add	r3, fp
 8019aa0:	db03      	blt.n	8019aaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8019aa2:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8019aa6:	4494      	add	ip, r2
 8019aa8:	e732      	b.n	8019910 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8019aaa:	9a04      	ldr	r2, [sp, #16]
 8019aac:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8019ab0:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8019ab4:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8019ab8:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8019abc:	4431      	add	r1, r6
 8019abe:	e75c      	b.n	801997a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8019ac0:	9b08      	ldr	r3, [sp, #32]
 8019ac2:	eba3 0308 	sub.w	r3, r3, r8
 8019ac6:	b29b      	uxth	r3, r3
 8019ac8:	2d06      	cmp	r5, #6
 8019aca:	b218      	sxth	r0, r3
 8019acc:	d813      	bhi.n	8019af6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8019ace:	9b07      	ldr	r3, [sp, #28]
 8019ad0:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8019ad4:	1c6b      	adds	r3, r5, #1
 8019ad6:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8019ada:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8019ade:	9b01      	ldr	r3, [sp, #4]
 8019ae0:	9901      	ldr	r1, [sp, #4]
 8019ae2:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8019ae6:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8019aea:	805a      	strh	r2, [r3, #2]
 8019aec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019aee:	809a      	strh	r2, [r3, #4]
 8019af0:	f8a3 e006 	strh.w	lr, [r3, #6]
 8019af4:	e75f      	b.n	80199b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8019af6:	9c02      	ldr	r4, [sp, #8]
 8019af8:	4570      	cmp	r0, lr
 8019afa:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8019afe:	db0d      	blt.n	8019b1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8019b00:	4431      	add	r1, r6
 8019b02:	9b06      	ldr	r3, [sp, #24]
 8019b04:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8019b08:	b289      	uxth	r1, r1
 8019b0a:	445c      	add	r4, fp
 8019b0c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8019b10:	4419      	add	r1, r3
 8019b12:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8019b16:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8019b1a:	e583      	b.n	8019624 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019b1c:	445c      	add	r4, fp
 8019b1e:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8019b22:	e79b      	b.n	8019a5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8019b24:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8019b28:	1e65      	subs	r5, r4, #1
 8019b2a:	b2ad      	uxth	r5, r5
 8019b2c:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8019b30:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8019b34:	42b5      	cmp	r5, r6
 8019b36:	d044      	beq.n	8019bc2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8019b38:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8019b3c:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8019b40:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8019b44:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8019b48:	4282      	cmp	r2, r0
 8019b4a:	d11f      	bne.n	8019b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8019b4c:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8019b50:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8019b54:	459c      	cmp	ip, r3
 8019b56:	d119      	bne.n	8019b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8019b58:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8019b5c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8019b60:	19d8      	adds	r0, r3, r7
 8019b62:	b200      	sxth	r0, r0
 8019b64:	4288      	cmp	r0, r1
 8019b66:	d109      	bne.n	8019b7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8019b68:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8019b6c:	4413      	add	r3, r2
 8019b6e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8019b72:	4629      	mov	r1, r5
 8019b74:	9801      	ldr	r0, [sp, #4]
 8019b76:	f7ff fd2b 	bl	80195d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019b7a:	e003      	b.n	8019b84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8019b7c:	4411      	add	r1, r2
 8019b7e:	b209      	sxth	r1, r1
 8019b80:	42b9      	cmp	r1, r7
 8019b82:	d0f3      	beq.n	8019b6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8019b84:	3d01      	subs	r5, #1
 8019b86:	b2ad      	uxth	r5, r5
 8019b88:	3c08      	subs	r4, #8
 8019b8a:	e7d3      	b.n	8019b34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8019b8c:	42b9      	cmp	r1, r7
 8019b8e:	d1f9      	bne.n	8019b84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8019b90:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8019b94:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8019b98:	4299      	cmp	r1, r3
 8019b9a:	d1f3      	bne.n	8019b84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8019b9c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8019ba0:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8019ba4:	181f      	adds	r7, r3, r0
 8019ba6:	b23f      	sxth	r7, r7
 8019ba8:	42ba      	cmp	r2, r7
 8019baa:	d105      	bne.n	8019bb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8019bac:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8019bb0:	440b      	add	r3, r1
 8019bb2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8019bb6:	e7dc      	b.n	8019b72 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8019bb8:	440a      	add	r2, r1
 8019bba:	b212      	sxth	r2, r2
 8019bbc:	4290      	cmp	r0, r2
 8019bbe:	d1e1      	bne.n	8019b84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8019bc0:	e7f6      	b.n	8019bb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8019bc2:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8019bc6:	2e07      	cmp	r6, #7
 8019bc8:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8019bcc:	d812      	bhi.n	8019bf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8019bce:	1c75      	adds	r5, r6, #1
 8019bd0:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8019bd4:	9d01      	ldr	r5, [sp, #4]
 8019bd6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8019bda:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8019bde:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8019be2:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8019be6:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8019bea:	442c      	add	r4, r5
 8019bec:	8061      	strh	r1, [r4, #2]
 8019bee:	80a2      	strh	r2, [r4, #4]
 8019bf0:	80e3      	strh	r3, [r4, #6]
 8019bf2:	e581      	b.n	80196f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8019bf4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8019bf8:	3e01      	subs	r6, #1
 8019bfa:	445c      	add	r4, fp
 8019bfc:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8019c00:	f04f 37ff 	mov.w	r7, #4294967295
 8019c04:	2500      	movs	r5, #0
 8019c06:	9305      	str	r3, [sp, #20]
 8019c08:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8019c0c:	9302      	str	r3, [sp, #8]
 8019c0e:	1e72      	subs	r2, r6, #1
 8019c10:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8019c14:	9304      	str	r3, [sp, #16]
 8019c16:	4691      	mov	r9, r2
 8019c18:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8019c1c:	f1b9 3fff 	cmp.w	r9, #4294967295
 8019c20:	bf14      	ite	ne
 8019c22:	9905      	ldrne	r1, [sp, #20]
 8019c24:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8019c28:	6818      	ldr	r0, [r3, #0]
 8019c2a:	9207      	str	r2, [sp, #28]
 8019c2c:	bf18      	it	ne
 8019c2e:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8019c32:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8019c36:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8019c3a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8019c3e:	9306      	str	r3, [sp, #24]
 8019c40:	fb18 f801 	smulbb	r8, r8, r1
 8019c44:	6859      	ldr	r1, [r3, #4]
 8019c46:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8019c4a:	4671      	mov	r1, lr
 8019c4c:	a80c      	add	r0, sp, #48	; 0x30
 8019c4e:	f7ff fb23 	bl	8019298 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8019c52:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8019c56:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8019c5a:	9b04      	ldr	r3, [sp, #16]
 8019c5c:	9a02      	ldr	r2, [sp, #8]
 8019c5e:	fb10 f001 	smulbb	r0, r0, r1
 8019c62:	fb02 8803 	mla	r8, r2, r3, r8
 8019c66:	eba0 0108 	sub.w	r1, r0, r8
 8019c6a:	f04f 0c08 	mov.w	ip, #8
 8019c6e:	fb90 f0fc 	sdiv	r0, r0, ip
 8019c72:	4288      	cmp	r0, r1
 8019c74:	dc20      	bgt.n	8019cb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8019c76:	4551      	cmp	r1, sl
 8019c78:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8019c7c:	da03      	bge.n	8019c86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8019c7e:	b1d9      	cbz	r1, 8019cb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8019c80:	468a      	mov	sl, r1
 8019c82:	464f      	mov	r7, r9
 8019c84:	4635      	mov	r5, r6
 8019c86:	f109 39ff 	add.w	r9, r9, #4294967295
 8019c8a:	f119 0f02 	cmn.w	r9, #2
 8019c8e:	d1c5      	bne.n	8019c1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8019c90:	4616      	mov	r6, r2
 8019c92:	3201      	adds	r2, #1
 8019c94:	f1a4 0408 	sub.w	r4, r4, #8
 8019c98:	d1b6      	bne.n	8019c08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8019c9a:	9b01      	ldr	r3, [sp, #4]
 8019c9c:	b2ac      	uxth	r4, r5
 8019c9e:	00ed      	lsls	r5, r5, #3
 8019ca0:	1958      	adds	r0, r3, r5
 8019ca2:	1c7b      	adds	r3, r7, #1
 8019ca4:	d10b      	bne.n	8019cbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8019ca6:	4601      	mov	r1, r0
 8019ca8:	9803      	ldr	r0, [sp, #12]
 8019caa:	f7ff faf5 	bl	8019298 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8019cae:	4621      	mov	r1, r4
 8019cb0:	9801      	ldr	r0, [sp, #4]
 8019cb2:	f7ff fc8d 	bl	80195d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019cb6:	e4b5      	b.n	8019624 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019cb8:	464f      	mov	r7, r9
 8019cba:	4635      	mov	r5, r6
 8019cbc:	e7ed      	b.n	8019c9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8019cbe:	9b01      	ldr	r3, [sp, #4]
 8019cc0:	00ff      	lsls	r7, r7, #3
 8019cc2:	19d9      	adds	r1, r3, r7
 8019cc4:	f7ff fae8 	bl	8019298 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8019cc8:	9b03      	ldr	r3, [sp, #12]
 8019cca:	cb03      	ldmia	r3!, {r0, r1}
 8019ccc:	445f      	add	r7, fp
 8019cce:	445d      	add	r5, fp
 8019cd0:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8019cd4:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8019cd8:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8019cdc:	9b03      	ldr	r3, [sp, #12]
 8019cde:	6869      	ldr	r1, [r5, #4]
 8019ce0:	c303      	stmia	r3!, {r0, r1}
 8019ce2:	e7e4      	b.n	8019cae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08019ce4 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8019ce4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ce8:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8019cec:	b09b      	sub	sp, #108	; 0x6c
 8019cee:	4604      	mov	r4, r0
 8019cf0:	4630      	mov	r0, r6
 8019cf2:	f7f9 fb60 	bl	80133b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019cf6:	4605      	mov	r5, r0
 8019cf8:	b948      	cbnz	r0, 8019d0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8019cfa:	6823      	ldr	r3, [r4, #0]
 8019cfc:	e896 0006 	ldmia.w	r6, {r1, r2}
 8019d00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019d02:	4620      	mov	r0, r4
 8019d04:	4798      	blx	r3
 8019d06:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8019d0a:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8019d0e:	4bc6      	ldr	r3, [pc, #792]	; (801a028 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8019d10:	681b      	ldr	r3, [r3, #0]
 8019d12:	2b00      	cmp	r3, #0
 8019d14:	d03f      	beq.n	8019d96 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8019d16:	4dc5      	ldr	r5, [pc, #788]	; (801a02c <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8019d18:	4628      	mov	r0, r5
 8019d1a:	f7f9 fb4c 	bl	80133b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019d1e:	4606      	mov	r6, r0
 8019d20:	2800      	cmp	r0, #0
 8019d22:	d138      	bne.n	8019d96 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8019d24:	4628      	mov	r0, r5
 8019d26:	f7ff f939 	bl	8018f9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8019d2a:	6823      	ldr	r3, [r4, #0]
 8019d2c:	6829      	ldr	r1, [r5, #0]
 8019d2e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019d30:	686a      	ldr	r2, [r5, #4]
 8019d32:	4620      	mov	r0, r4
 8019d34:	4798      	blx	r3
 8019d36:	802e      	strh	r6, [r5, #0]
 8019d38:	806e      	strh	r6, [r5, #2]
 8019d3a:	80ae      	strh	r6, [r5, #4]
 8019d3c:	80ee      	strh	r6, [r5, #6]
 8019d3e:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8019d42:	4dbb      	ldr	r5, [pc, #748]	; (801a030 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8019d44:	4640      	mov	r0, r8
 8019d46:	f7ff fbeb 	bl	8019520 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8019d4a:	882e      	ldrh	r6, [r5, #0]
 8019d4c:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8019d50:	4633      	mov	r3, r6
 8019d52:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8019d56:	42bb      	cmp	r3, r7
 8019d58:	d224      	bcs.n	8019da4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8019d5a:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8019d5e:	2907      	cmp	r1, #7
 8019d60:	d816      	bhi.n	8019d90 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8019d62:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8019d66:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8019d6a:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8019d6e:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8019d72:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8019d76:	1c4a      	adds	r2, r1, #1
 8019d78:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8019d7c:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8019d80:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8019d84:	f8a2 a002 	strh.w	sl, [r2, #2]
 8019d88:	f8a2 e004 	strh.w	lr, [r2, #4]
 8019d8c:	f8a2 c006 	strh.w	ip, [r2, #6]
 8019d90:	3301      	adds	r3, #1
 8019d92:	b29b      	uxth	r3, r3
 8019d94:	e7df      	b.n	8019d56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8019d96:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8019d9a:	2b00      	cmp	r3, #0
 8019d9c:	d1cf      	bne.n	8019d3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8019d9e:	b01b      	add	sp, #108	; 0x6c
 8019da0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019da4:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8019da8:	42b3      	cmp	r3, r6
 8019daa:	d90c      	bls.n	8019dc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8019dac:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8019db0:	6822      	ldr	r2, [r4, #0]
 8019db2:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8019db6:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8019db8:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8019dbc:	4620      	mov	r0, r4
 8019dbe:	3601      	adds	r6, #1
 8019dc0:	47b8      	blx	r7
 8019dc2:	b2b6      	uxth	r6, r6
 8019dc4:	e7ee      	b.n	8019da4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8019dc6:	4a9b      	ldr	r2, [pc, #620]	; (801a034 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8019dc8:	6813      	ldr	r3, [r2, #0]
 8019dca:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8019dce:	2b01      	cmp	r3, #1
 8019dd0:	4691      	mov	r9, r2
 8019dd2:	f040 80e2 	bne.w	8019f9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8019dd6:	8829      	ldrh	r1, [r5, #0]
 8019dd8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8019ddc:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8019de0:	33ae      	adds	r3, #174	; 0xae
 8019de2:	2600      	movs	r6, #0
 8019de4:	428f      	cmp	r7, r1
 8019de6:	f103 0308 	add.w	r3, r3, #8
 8019dea:	dd0a      	ble.n	8019e02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8019dec:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8019df0:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8019df4:	4402      	add	r2, r0
 8019df6:	b212      	sxth	r2, r2
 8019df8:	4296      	cmp	r6, r2
 8019dfa:	bfb8      	it	lt
 8019dfc:	4616      	movlt	r6, r2
 8019dfe:	3101      	adds	r1, #1
 8019e00:	e7f0      	b.n	8019de4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8019e02:	4b8d      	ldr	r3, [pc, #564]	; (801a038 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8019e04:	f8df 922c 	ldr.w	r9, [pc, #556]	; 801a034 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8019e08:	881b      	ldrh	r3, [r3, #0]
 8019e0a:	2b0f      	cmp	r3, #15
 8019e0c:	bf88      	it	hi
 8019e0e:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8019e12:	f04f 0300 	mov.w	r3, #0
 8019e16:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8019e1a:	bf98      	it	ls
 8019e1c:	f04f 0b01 	movls.w	fp, #1
 8019e20:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8019e24:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8019e28:	4b82      	ldr	r3, [pc, #520]	; (801a034 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8019e2a:	4438      	add	r0, r7
 8019e2c:	b207      	sxth	r7, r0
 8019e2e:	6818      	ldr	r0, [r3, #0]
 8019e30:	42b7      	cmp	r7, r6
 8019e32:	6803      	ldr	r3, [r0, #0]
 8019e34:	f280 8083 	bge.w	8019f3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8019e38:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8019e3c:	4798      	blx	r3
 8019e3e:	eb07 030b 	add.w	r3, r7, fp
 8019e42:	4298      	cmp	r0, r3
 8019e44:	da07      	bge.n	8019e56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8019e46:	42b0      	cmp	r0, r6
 8019e48:	da05      	bge.n	8019e56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8019e4a:	4287      	cmp	r7, r0
 8019e4c:	dd6c      	ble.n	8019f28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8019e4e:	2f00      	cmp	r7, #0
 8019e50:	dd6a      	ble.n	8019f28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8019e52:	4630      	mov	r0, r6
 8019e54:	e004      	b.n	8019e60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8019e56:	4287      	cmp	r7, r0
 8019e58:	dcfb      	bgt.n	8019e52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8019e5a:	42b0      	cmp	r0, r6
 8019e5c:	bfa8      	it	ge
 8019e5e:	4630      	movge	r0, r6
 8019e60:	4b76      	ldr	r3, [pc, #472]	; (801a03c <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8019e62:	f8ad 7016 	strh.w	r7, [sp, #22]
 8019e66:	1bc0      	subs	r0, r0, r7
 8019e68:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019e6c:	882f      	ldrh	r7, [r5, #0]
 8019e6e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8019e72:	2200      	movs	r2, #0
 8019e74:	f8ad 2014 	strh.w	r2, [sp, #20]
 8019e78:	f8ad 001a 	strh.w	r0, [sp, #26]
 8019e7c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8019e80:	42bb      	cmp	r3, r7
 8019e82:	d9cd      	bls.n	8019e20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8019e84:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8019e88:	ab07      	add	r3, sp, #28
 8019e8a:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8019e8e:	6851      	ldr	r1, [r2, #4]
 8019e90:	c303      	stmia	r3!, {r0, r1}
 8019e92:	a905      	add	r1, sp, #20
 8019e94:	a807      	add	r0, sp, #28
 8019e96:	f7ff f967 	bl	8019168 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8019e9a:	2800      	cmp	r0, #0
 8019e9c:	d04c      	beq.n	8019f38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8019e9e:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8019ea2:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8019ea6:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8019eaa:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8019eae:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8019eb2:	9302      	str	r3, [sp, #8]
 8019eb4:	4686      	mov	lr, r0
 8019eb6:	4290      	cmp	r0, r2
 8019eb8:	4450      	add	r0, sl
 8019eba:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8019ebe:	bfb8      	it	lt
 8019ec0:	4696      	movlt	lr, r2
 8019ec2:	4452      	add	r2, sl
 8019ec4:	4299      	cmp	r1, r3
 8019ec6:	b280      	uxth	r0, r0
 8019ec8:	b292      	uxth	r2, r2
 8019eca:	468c      	mov	ip, r1
 8019ecc:	fa0f fa82 	sxth.w	sl, r2
 8019ed0:	bfb8      	it	lt
 8019ed2:	469c      	movlt	ip, r3
 8019ed4:	b203      	sxth	r3, r0
 8019ed6:	4553      	cmp	r3, sl
 8019ed8:	bfb8      	it	lt
 8019eda:	4602      	movlt	r2, r0
 8019edc:	eba2 020e 	sub.w	r2, r2, lr
 8019ee0:	f8ad 2020 	strh.w	r2, [sp, #32]
 8019ee4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8019ee8:	9b02      	ldr	r3, [sp, #8]
 8019eea:	f8ad e01c 	strh.w	lr, [sp, #28]
 8019eee:	4411      	add	r1, r2
 8019ef0:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8019ef4:	f8ad c01e 	strh.w	ip, [sp, #30]
 8019ef8:	4413      	add	r3, r2
 8019efa:	b289      	uxth	r1, r1
 8019efc:	b29b      	uxth	r3, r3
 8019efe:	b208      	sxth	r0, r1
 8019f00:	b21a      	sxth	r2, r3
 8019f02:	4290      	cmp	r0, r2
 8019f04:	bfb8      	it	lt
 8019f06:	460b      	movlt	r3, r1
 8019f08:	eba3 030c 	sub.w	r3, r3, ip
 8019f0c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8019f10:	a807      	add	r0, sp, #28
 8019f12:	f7f9 fa50 	bl	80133b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019f16:	b920      	cbnz	r0, 8019f22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8019f18:	6823      	ldr	r3, [r4, #0]
 8019f1a:	a907      	add	r1, sp, #28
 8019f1c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8019f1e:	4620      	mov	r0, r4
 8019f20:	4798      	blx	r3
 8019f22:	3701      	adds	r7, #1
 8019f24:	b2bf      	uxth	r7, r7
 8019f26:	e7a9      	b.n	8019e7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8019f28:	f8d9 0000 	ldr.w	r0, [r9]
 8019f2c:	6803      	ldr	r3, [r0, #0]
 8019f2e:	2101      	movs	r1, #1
 8019f30:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8019f34:	4798      	blx	r3
 8019f36:	e773      	b.n	8019e20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8019f38:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8019f3c:	e7e8      	b.n	8019f10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8019f3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8019f40:	4798      	blx	r3
 8019f42:	4b3f      	ldr	r3, [pc, #252]	; (801a040 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8019f44:	781b      	ldrb	r3, [r3, #0]
 8019f46:	2b00      	cmp	r3, #0
 8019f48:	f43f af29 	beq.w	8019d9e <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8019f4c:	2300      	movs	r3, #0
 8019f4e:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8019f52:	882b      	ldrh	r3, [r5, #0]
 8019f54:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8019f58:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8019f5c:	42ab      	cmp	r3, r5
 8019f5e:	f4bf af1e 	bcs.w	8019d9e <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8019f62:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8019f66:	2907      	cmp	r1, #7
 8019f68:	d814      	bhi.n	8019f94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8019f6a:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8019f6e:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8019f72:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8019f76:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8019f7a:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8019f7e:	1c4a      	adds	r2, r1, #1
 8019f80:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8019f84:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8019f88:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8019f8c:	f8a2 c002 	strh.w	ip, [r2, #2]
 8019f90:	8097      	strh	r7, [r2, #4]
 8019f92:	80d6      	strh	r6, [r2, #6]
 8019f94:	3301      	adds	r3, #1
 8019f96:	b29b      	uxth	r3, r3
 8019f98:	e7e0      	b.n	8019f5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8019f9a:	2b02      	cmp	r3, #2
 8019f9c:	f040 8133 	bne.w	801a206 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8019fa0:	4b28      	ldr	r3, [pc, #160]	; (801a044 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8019fa2:	781b      	ldrb	r3, [r3, #0]
 8019fa4:	2b01      	cmp	r3, #1
 8019fa6:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8019faa:	f000 8098 	beq.w	801a0de <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8019fae:	882a      	ldrh	r2, [r5, #0]
 8019fb0:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8019fb4:	3201      	adds	r2, #1
 8019fb6:	b292      	uxth	r2, r2
 8019fb8:	2900      	cmp	r1, #0
 8019fba:	d0c2      	beq.n	8019f42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8019fbc:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8019fc0:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8019fc4:	441e      	add	r6, r3
 8019fc6:	b236      	sxth	r6, r6
 8019fc8:	4694      	mov	ip, r2
 8019fca:	f04f 0900 	mov.w	r9, #0
 8019fce:	fa1f f38c 	uxth.w	r3, ip
 8019fd2:	4299      	cmp	r1, r3
 8019fd4:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8019fd8:	f240 80bf 	bls.w	801a15a <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8019fdc:	4427      	add	r7, r4
 8019fde:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8019fe2:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8019fe6:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8019fea:	4283      	cmp	r3, r0
 8019fec:	f340 80a1 	ble.w	801a132 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8019ff0:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8019ff4:	4406      	add	r6, r0
 8019ff6:	b236      	sxth	r6, r6
 8019ff8:	429e      	cmp	r6, r3
 8019ffa:	bfa8      	it	ge
 8019ffc:	461e      	movge	r6, r3
 8019ffe:	46e1      	mov	r9, ip
 801a000:	f10c 0c01 	add.w	ip, ip, #1
 801a004:	e7e3      	b.n	8019fce <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 801a006:	d10a      	bne.n	801a01e <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 801a008:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 801a00c:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 801a010:	4562      	cmp	r2, ip
 801a012:	bfb8      	it	lt
 801a014:	4662      	movlt	r2, ip
 801a016:	4288      	cmp	r0, r1
 801a018:	bfb8      	it	lt
 801a01a:	461f      	movlt	r7, r3
 801a01c:	e087      	b.n	801a12e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801a01e:	428a      	cmp	r2, r1
 801a020:	bfb8      	it	lt
 801a022:	460a      	movlt	r2, r1
 801a024:	e083      	b.n	801a12e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801a026:	bf00      	nop
 801a028:	2000228c 	.word	0x2000228c
 801a02c:	20002298 	.word	0x20002298
 801a030:	2000001c 	.word	0x2000001c
 801a034:	2000224c 	.word	0x2000224c
 801a038:	20002242 	.word	0x20002242
 801a03c:	20002240 	.word	0x20002240
 801a040:	2000224a 	.word	0x2000224a
 801a044:	20002244 	.word	0x20002244
 801a048:	19a1      	adds	r1, r4, r6
 801a04a:	ab07      	add	r3, sp, #28
 801a04c:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801a050:	6849      	ldr	r1, [r1, #4]
 801a052:	c303      	stmia	r3!, {r0, r1}
 801a054:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801a058:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801a05c:	2b13      	cmp	r3, #19
 801a05e:	bfd8      	it	le
 801a060:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 801a064:	f8ad 201c 	strh.w	r2, [sp, #28]
 801a068:	440b      	add	r3, r1
 801a06a:	1a9b      	subs	r3, r3, r2
 801a06c:	a807      	add	r0, sp, #28
 801a06e:	f8ad 3020 	strh.w	r3, [sp, #32]
 801a072:	f7fe ffad 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a076:	a807      	add	r0, sp, #28
 801a078:	f7f9 f99d 	bl	80133b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801a07c:	bb78      	cbnz	r0, 801a0de <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801a07e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801a082:	f8d9 0000 	ldr.w	r0, [r9]
 801a086:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801a08a:	f8d0 e000 	ldr.w	lr, [r0]
 801a08e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801a092:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801a096:	f1bc 0f14 	cmp.w	ip, #20
 801a09a:	bfa8      	it	ge
 801a09c:	f04f 0c14 	movge.w	ip, #20
 801a0a0:	fa1f fc8c 	uxth.w	ip, ip
 801a0a4:	f8cd c000 	str.w	ip, [sp]
 801a0a8:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 801a0ac:	47d8      	blx	fp
 801a0ae:	4683      	mov	fp, r0
 801a0b0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801a0b4:	a807      	add	r0, sp, #28
 801a0b6:	f7fe ff71 	bl	8018f9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801a0ba:	6823      	ldr	r3, [r4, #0]
 801a0bc:	4426      	add	r6, r4
 801a0be:	4620      	mov	r0, r4
 801a0c0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a0c2:	a907      	add	r1, sp, #28
 801a0c4:	4798      	blx	r3
 801a0c6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801a0ca:	eba0 000b 	sub.w	r0, r0, fp
 801a0ce:	b200      	sxth	r0, r0
 801a0d0:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 801a0d4:	b918      	cbnz	r0, 801a0de <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801a0d6:	b2b9      	uxth	r1, r7
 801a0d8:	4650      	mov	r0, sl
 801a0da:	f7ff fa79 	bl	80195d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801a0de:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 801a0e2:	f1bb 0f00 	cmp.w	fp, #0
 801a0e6:	f43f af2c 	beq.w	8019f42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801a0ea:	882b      	ldrh	r3, [r5, #0]
 801a0ec:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 801a0f0:	3301      	adds	r3, #1
 801a0f2:	b29b      	uxth	r3, r3
 801a0f4:	2700      	movs	r7, #0
 801a0f6:	b299      	uxth	r1, r3
 801a0f8:	458b      	cmp	fp, r1
 801a0fa:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 801a0fe:	d9a3      	bls.n	801a048 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 801a100:	4426      	add	r6, r4
 801a102:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 801a106:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 801a10a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801a10e:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 801a112:	4408      	add	r0, r1
 801a114:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 801a118:	4461      	add	r1, ip
 801a11a:	b200      	sxth	r0, r0
 801a11c:	b209      	sxth	r1, r1
 801a11e:	4288      	cmp	r0, r1
 801a120:	f6bf af71 	bge.w	801a006 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 801a124:	4584      	cmp	ip, r0
 801a126:	4662      	mov	r2, ip
 801a128:	461f      	mov	r7, r3
 801a12a:	bfb8      	it	lt
 801a12c:	4602      	movlt	r2, r0
 801a12e:	3301      	adds	r3, #1
 801a130:	e7e1      	b.n	801a0f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 801a132:	d10e      	bne.n	801a152 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 801a134:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 801a138:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 801a13c:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 801a140:	4473      	add	r3, lr
 801a142:	b21b      	sxth	r3, r3
 801a144:	429e      	cmp	r6, r3
 801a146:	bfa8      	it	ge
 801a148:	461e      	movge	r6, r3
 801a14a:	4287      	cmp	r7, r0
 801a14c:	bfb8      	it	lt
 801a14e:	46e1      	movlt	r9, ip
 801a150:	e756      	b.n	801a000 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801a152:	4286      	cmp	r6, r0
 801a154:	bfa8      	it	ge
 801a156:	4606      	movge	r6, r0
 801a158:	e752      	b.n	801a000 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801a15a:	eb0a 0007 	add.w	r0, sl, r7
 801a15e:	4427      	add	r7, r4
 801a160:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801a164:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 801a168:	f1bb 0f13 	cmp.w	fp, #19
 801a16c:	bfde      	ittt	le
 801a16e:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 801a172:	445e      	addle	r6, fp
 801a174:	b236      	sxthle	r6, r6
 801a176:	f7f9 f91e 	bl	80133b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801a17a:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801a17e:	2800      	cmp	r0, #0
 801a180:	f47f af1a 	bne.w	8019fb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 801a184:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 801a188:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801a18c:	482a      	ldr	r0, [pc, #168]	; (801a238 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801a18e:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801a192:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 801a196:	6800      	ldr	r0, [r0, #0]
 801a198:	f8ad 101c 	strh.w	r1, [sp, #28]
 801a19c:	1ab6      	subs	r6, r6, r2
 801a19e:	2e14      	cmp	r6, #20
 801a1a0:	f8ad 201e 	strh.w	r2, [sp, #30]
 801a1a4:	f8ad 3020 	strh.w	r3, [sp, #32]
 801a1a8:	bfa8      	it	ge
 801a1aa:	2614      	movge	r6, #20
 801a1ac:	f8d0 c000 	ldr.w	ip, [r0]
 801a1b0:	b2b6      	uxth	r6, r6
 801a1b2:	fa1f fb8b 	uxth.w	fp, fp
 801a1b6:	455e      	cmp	r6, fp
 801a1b8:	bf94      	ite	ls
 801a1ba:	9600      	strls	r6, [sp, #0]
 801a1bc:	f8cd b000 	strhi.w	fp, [sp]
 801a1c0:	b292      	uxth	r2, r2
 801a1c2:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 801a1c6:	b29b      	uxth	r3, r3
 801a1c8:	b289      	uxth	r1, r1
 801a1ca:	47b0      	blx	r6
 801a1cc:	6823      	ldr	r3, [r4, #0]
 801a1ce:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801a1d2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a1d4:	a907      	add	r1, sp, #28
 801a1d6:	4620      	mov	r0, r4
 801a1d8:	4798      	blx	r3
 801a1da:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801a1de:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 801a1e2:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 801a1e6:	1a5b      	subs	r3, r3, r1
 801a1e8:	440a      	add	r2, r1
 801a1ea:	b21b      	sxth	r3, r3
 801a1ec:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 801a1f0:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 801a1f4:	2b00      	cmp	r3, #0
 801a1f6:	f47f aeda 	bne.w	8019fae <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 801a1fa:	fa1f f189 	uxth.w	r1, r9
 801a1fe:	4650      	mov	r0, sl
 801a200:	f7ff f9e6 	bl	80195d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801a204:	e6d3      	b.n	8019fae <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 801a206:	882e      	ldrh	r6, [r5, #0]
 801a208:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801a20c:	42b3      	cmp	r3, r6
 801a20e:	f67f ae98 	bls.w	8019f42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801a212:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 801a216:	ab07      	add	r3, sp, #28
 801a218:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801a21c:	6851      	ldr	r1, [r2, #4]
 801a21e:	c303      	stmia	r3!, {r0, r1}
 801a220:	a807      	add	r0, sp, #28
 801a222:	f7f9 f8c8 	bl	80133b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801a226:	b920      	cbnz	r0, 801a232 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 801a228:	6823      	ldr	r3, [r4, #0]
 801a22a:	a907      	add	r1, sp, #28
 801a22c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a22e:	4620      	mov	r0, r4
 801a230:	4798      	blx	r3
 801a232:	3601      	adds	r6, #1
 801a234:	b2b6      	uxth	r6, r6
 801a236:	e7e7      	b.n	801a208 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 801a238:	2000224c 	.word	0x2000224c

0801a23c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 801a23c:	4b03      	ldr	r3, [pc, #12]	; (801a24c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801a23e:	2200      	movs	r2, #0
 801a240:	801a      	strh	r2, [r3, #0]
 801a242:	805a      	strh	r2, [r3, #2]
 801a244:	809a      	strh	r2, [r3, #4]
 801a246:	80da      	strh	r2, [r3, #6]
 801a248:	4770      	bx	lr
 801a24a:	bf00      	nop
 801a24c:	20002298 	.word	0x20002298

0801a250 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801a250:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a254:	4606      	mov	r6, r0
 801a256:	b09d      	sub	sp, #116	; 0x74
 801a258:	a803      	add	r0, sp, #12
 801a25a:	4614      	mov	r4, r2
 801a25c:	468a      	mov	sl, r1
 801a25e:	461d      	mov	r5, r3
 801a260:	f000 fe80 	bl	801af64 <_ZN8touchgfx12TextProviderC1Ev>
 801a264:	6833      	ldr	r3, [r6, #0]
 801a266:	4630      	mov	r0, r6
 801a268:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a26a:	4798      	blx	r3
 801a26c:	6833      	ldr	r3, [r6, #0]
 801a26e:	4607      	mov	r7, r0
 801a270:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801a272:	4630      	mov	r0, r6
 801a274:	4798      	blx	r3
 801a276:	462a      	mov	r2, r5
 801a278:	9000      	str	r0, [sp, #0]
 801a27a:	4621      	mov	r1, r4
 801a27c:	463b      	mov	r3, r7
 801a27e:	a803      	add	r0, sp, #12
 801a280:	f000 fecb 	bl	801b01a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a284:	2500      	movs	r5, #0
 801a286:	462c      	mov	r4, r5
 801a288:	46a9      	mov	r9, r5
 801a28a:	46a8      	mov	r8, r5
 801a28c:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801a290:	2300      	movs	r3, #0
 801a292:	9302      	str	r3, [sp, #8]
 801a294:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801a298:	429c      	cmp	r4, r3
 801a29a:	d002      	beq.n	801a2a2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 801a29c:	455c      	cmp	r4, fp
 801a29e:	bf18      	it	ne
 801a2a0:	4625      	movne	r5, r4
 801a2a2:	ab02      	add	r3, sp, #8
 801a2a4:	4632      	mov	r2, r6
 801a2a6:	4651      	mov	r1, sl
 801a2a8:	a803      	add	r0, sp, #12
 801a2aa:	f001 f9b9 	bl	801b620 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a2ae:	4604      	mov	r4, r0
 801a2b0:	b108      	cbz	r0, 801a2b6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801a2b2:	280a      	cmp	r0, #10
 801a2b4:	d10a      	bne.n	801a2cc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801a2b6:	45c1      	cmp	r9, r8
 801a2b8:	bf38      	it	cc
 801a2ba:	46c1      	movcc	r9, r8
 801a2bc:	f04f 0800 	mov.w	r8, #0
 801a2c0:	2c00      	cmp	r4, #0
 801a2c2:	d1e5      	bne.n	801a290 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801a2c4:	4648      	mov	r0, r9
 801a2c6:	b01d      	add	sp, #116	; 0x74
 801a2c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a2cc:	9a02      	ldr	r2, [sp, #8]
 801a2ce:	2a00      	cmp	r2, #0
 801a2d0:	d0de      	beq.n	801a290 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801a2d2:	7b57      	ldrb	r7, [r2, #13]
 801a2d4:	6833      	ldr	r3, [r6, #0]
 801a2d6:	8894      	ldrh	r4, [r2, #4]
 801a2d8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a2da:	007f      	lsls	r7, r7, #1
 801a2dc:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801a2e0:	7a97      	ldrb	r7, [r2, #10]
 801a2e2:	4629      	mov	r1, r5
 801a2e4:	4307      	orrs	r7, r0
 801a2e6:	4630      	mov	r0, r6
 801a2e8:	4798      	blx	r3
 801a2ea:	4438      	add	r0, r7
 801a2ec:	4480      	add	r8, r0
 801a2ee:	fa1f f888 	uxth.w	r8, r8
 801a2f2:	e7e5      	b.n	801a2c0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0801a2f4 <_ZNK8touchgfx4Font12getCharWidthEt>:
 801a2f4:	b508      	push	{r3, lr}
 801a2f6:	6803      	ldr	r3, [r0, #0]
 801a2f8:	68db      	ldr	r3, [r3, #12]
 801a2fa:	4798      	blx	r3
 801a2fc:	b128      	cbz	r0, 801a30a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801a2fe:	7b43      	ldrb	r3, [r0, #13]
 801a300:	7a80      	ldrb	r0, [r0, #10]
 801a302:	005b      	lsls	r3, r3, #1
 801a304:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801a308:	4318      	orrs	r0, r3
 801a30a:	bd08      	pop	{r3, pc}

0801a30c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 801a30c:	b40e      	push	{r1, r2, r3}
 801a30e:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a310:	b09e      	sub	sp, #120	; 0x78
 801a312:	ab23      	add	r3, sp, #140	; 0x8c
 801a314:	4605      	mov	r5, r0
 801a316:	f853 4b04 	ldr.w	r4, [r3], #4
 801a31a:	9303      	str	r3, [sp, #12]
 801a31c:	a805      	add	r0, sp, #20
 801a31e:	f000 fe21 	bl	801af64 <_ZN8touchgfx12TextProviderC1Ev>
 801a322:	682b      	ldr	r3, [r5, #0]
 801a324:	4628      	mov	r0, r5
 801a326:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a328:	4798      	blx	r3
 801a32a:	682b      	ldr	r3, [r5, #0]
 801a32c:	4606      	mov	r6, r0
 801a32e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801a330:	4628      	mov	r0, r5
 801a332:	4798      	blx	r3
 801a334:	4633      	mov	r3, r6
 801a336:	ae1e      	add	r6, sp, #120	; 0x78
 801a338:	4621      	mov	r1, r4
 801a33a:	9000      	str	r0, [sp, #0]
 801a33c:	9a03      	ldr	r2, [sp, #12]
 801a33e:	2400      	movs	r4, #0
 801a340:	a805      	add	r0, sp, #20
 801a342:	f000 fe6a 	bl	801b01a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a346:	f846 4d68 	str.w	r4, [r6, #-104]!
 801a34a:	462a      	mov	r2, r5
 801a34c:	4633      	mov	r3, r6
 801a34e:	4621      	mov	r1, r4
 801a350:	a805      	add	r0, sp, #20
 801a352:	f001 f965 	bl	801b620 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a356:	b1f0      	cbz	r0, 801a396 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 801a358:	280a      	cmp	r0, #10
 801a35a:	d018      	beq.n	801a38e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801a35c:	9f04      	ldr	r7, [sp, #16]
 801a35e:	b1b7      	cbz	r7, 801a38e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801a360:	7b78      	ldrb	r0, [r7, #13]
 801a362:	7a3b      	ldrb	r3, [r7, #8]
 801a364:	88ea      	ldrh	r2, [r5, #6]
 801a366:	00c1      	lsls	r1, r0, #3
 801a368:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801a36c:	4319      	orrs	r1, r3
 801a36e:	0643      	lsls	r3, r0, #25
 801a370:	bf44      	itt	mi
 801a372:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 801a376:	b219      	sxthmi	r1, r3
 801a378:	0100      	lsls	r0, r0, #4
 801a37a:	79fb      	ldrb	r3, [r7, #7]
 801a37c:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801a380:	4303      	orrs	r3, r0
 801a382:	4413      	add	r3, r2
 801a384:	1a5b      	subs	r3, r3, r1
 801a386:	b21b      	sxth	r3, r3
 801a388:	429c      	cmp	r4, r3
 801a38a:	bfb8      	it	lt
 801a38c:	461c      	movlt	r4, r3
 801a38e:	4633      	mov	r3, r6
 801a390:	462a      	mov	r2, r5
 801a392:	2100      	movs	r1, #0
 801a394:	e7dc      	b.n	801a350 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 801a396:	b2a0      	uxth	r0, r4
 801a398:	b01e      	add	sp, #120	; 0x78
 801a39a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801a39e:	b003      	add	sp, #12
 801a3a0:	4770      	bx	lr

0801a3a2 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801a3a2:	7a43      	ldrb	r3, [r0, #9]
 801a3a4:	8880      	ldrh	r0, [r0, #4]
 801a3a6:	4418      	add	r0, r3
 801a3a8:	b280      	uxth	r0, r0
 801a3aa:	4770      	bx	lr

0801a3ac <_ZNK8touchgfx4Font13getFontHeightEv>:
 801a3ac:	6803      	ldr	r3, [r0, #0]
 801a3ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801a3b0:	4718      	bx	r3

0801a3b2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801a3b2:	b40e      	push	{r1, r2, r3}
 801a3b4:	b570      	push	{r4, r5, r6, lr}
 801a3b6:	b09d      	sub	sp, #116	; 0x74
 801a3b8:	ab21      	add	r3, sp, #132	; 0x84
 801a3ba:	4604      	mov	r4, r0
 801a3bc:	f853 5b04 	ldr.w	r5, [r3], #4
 801a3c0:	9302      	str	r3, [sp, #8]
 801a3c2:	a803      	add	r0, sp, #12
 801a3c4:	f000 fdce 	bl	801af64 <_ZN8touchgfx12TextProviderC1Ev>
 801a3c8:	6823      	ldr	r3, [r4, #0]
 801a3ca:	4620      	mov	r0, r4
 801a3cc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a3ce:	4798      	blx	r3
 801a3d0:	6823      	ldr	r3, [r4, #0]
 801a3d2:	4606      	mov	r6, r0
 801a3d4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801a3d6:	4620      	mov	r0, r4
 801a3d8:	4798      	blx	r3
 801a3da:	4633      	mov	r3, r6
 801a3dc:	9000      	str	r0, [sp, #0]
 801a3de:	9a02      	ldr	r2, [sp, #8]
 801a3e0:	4629      	mov	r1, r5
 801a3e2:	a803      	add	r0, sp, #12
 801a3e4:	f000 fe19 	bl	801b01a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a3e8:	a803      	add	r0, sp, #12
 801a3ea:	f001 f9e7 	bl	801b7bc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801a3ee:	2401      	movs	r4, #1
 801a3f0:	b2a3      	uxth	r3, r4
 801a3f2:	b140      	cbz	r0, 801a406 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 801a3f4:	280a      	cmp	r0, #10
 801a3f6:	bf08      	it	eq
 801a3f8:	3301      	addeq	r3, #1
 801a3fa:	a803      	add	r0, sp, #12
 801a3fc:	bf08      	it	eq
 801a3fe:	b21c      	sxtheq	r4, r3
 801a400:	f001 f9dc 	bl	801b7bc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801a404:	e7f4      	b.n	801a3f0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801a406:	4618      	mov	r0, r3
 801a408:	b01d      	add	sp, #116	; 0x74
 801a40a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a40e:	b003      	add	sp, #12
 801a410:	4770      	bx	lr

0801a412 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801a412:	b40e      	push	{r1, r2, r3}
 801a414:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a416:	b09e      	sub	sp, #120	; 0x78
 801a418:	ab23      	add	r3, sp, #140	; 0x8c
 801a41a:	4604      	mov	r4, r0
 801a41c:	f853 5b04 	ldr.w	r5, [r3], #4
 801a420:	9303      	str	r3, [sp, #12]
 801a422:	a805      	add	r0, sp, #20
 801a424:	f000 fd9e 	bl	801af64 <_ZN8touchgfx12TextProviderC1Ev>
 801a428:	6823      	ldr	r3, [r4, #0]
 801a42a:	4620      	mov	r0, r4
 801a42c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a42e:	4798      	blx	r3
 801a430:	6823      	ldr	r3, [r4, #0]
 801a432:	4606      	mov	r6, r0
 801a434:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801a436:	4620      	mov	r0, r4
 801a438:	4798      	blx	r3
 801a43a:	4633      	mov	r3, r6
 801a43c:	4629      	mov	r1, r5
 801a43e:	9000      	str	r0, [sp, #0]
 801a440:	9a03      	ldr	r2, [sp, #12]
 801a442:	a805      	add	r0, sp, #20
 801a444:	ad1e      	add	r5, sp, #120	; 0x78
 801a446:	f000 fde8 	bl	801b01a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a44a:	2100      	movs	r1, #0
 801a44c:	f845 1d68 	str.w	r1, [r5, #-104]!
 801a450:	4622      	mov	r2, r4
 801a452:	462b      	mov	r3, r5
 801a454:	a805      	add	r0, sp, #20
 801a456:	f001 f8e3 	bl	801b620 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a45a:	f647 76ff 	movw	r6, #32767	; 0x7fff
 801a45e:	b1d8      	cbz	r0, 801a498 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 801a460:	280a      	cmp	r0, #10
 801a462:	d012      	beq.n	801a48a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801a464:	9804      	ldr	r0, [sp, #16]
 801a466:	b180      	cbz	r0, 801a48a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801a468:	7b47      	ldrb	r7, [r0, #13]
 801a46a:	88e2      	ldrh	r2, [r4, #6]
 801a46c:	00fb      	lsls	r3, r7, #3
 801a46e:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801a472:	7a03      	ldrb	r3, [r0, #8]
 801a474:	430b      	orrs	r3, r1
 801a476:	0679      	lsls	r1, r7, #25
 801a478:	bf44      	itt	mi
 801a47a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801a47e:	b21b      	sxthmi	r3, r3
 801a480:	1ad3      	subs	r3, r2, r3
 801a482:	b21b      	sxth	r3, r3
 801a484:	429e      	cmp	r6, r3
 801a486:	bfa8      	it	ge
 801a488:	461e      	movge	r6, r3
 801a48a:	462b      	mov	r3, r5
 801a48c:	4622      	mov	r2, r4
 801a48e:	2100      	movs	r1, #0
 801a490:	a805      	add	r0, sp, #20
 801a492:	f001 f8c5 	bl	801b620 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a496:	e7e2      	b.n	801a45e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 801a498:	4630      	mov	r0, r6
 801a49a:	b01e      	add	sp, #120	; 0x78
 801a49c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801a4a0:	b003      	add	sp, #12
 801a4a2:	4770      	bx	lr

0801a4a4 <_ZNK8touchgfx8Drawable10invalidateEv>:
 801a4a4:	b513      	push	{r0, r1, r4, lr}
 801a4a6:	6803      	ldr	r3, [r0, #0]
 801a4a8:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801a4ac:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a4b0:	f8ad 1004 	strh.w	r1, [sp, #4]
 801a4b4:	2400      	movs	r4, #0
 801a4b6:	9400      	str	r4, [sp, #0]
 801a4b8:	f8ad 2006 	strh.w	r2, [sp, #6]
 801a4bc:	691b      	ldr	r3, [r3, #16]
 801a4be:	4669      	mov	r1, sp
 801a4c0:	4798      	blx	r3
 801a4c2:	b002      	add	sp, #8
 801a4c4:	bd10      	pop	{r4, pc}

0801a4c6 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801a4c6:	b538      	push	{r3, r4, r5, lr}
 801a4c8:	680b      	ldr	r3, [r1, #0]
 801a4ca:	460c      	mov	r4, r1
 801a4cc:	68db      	ldr	r3, [r3, #12]
 801a4ce:	4605      	mov	r5, r0
 801a4d0:	4798      	blx	r3
 801a4d2:	6823      	ldr	r3, [r4, #0]
 801a4d4:	4620      	mov	r0, r4
 801a4d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a4d8:	4629      	mov	r1, r5
 801a4da:	4798      	blx	r3
 801a4dc:	4628      	mov	r0, r5
 801a4de:	bd38      	pop	{r3, r4, r5, pc}

0801a4e0 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801a4e0:	b410      	push	{r4}
 801a4e2:	880a      	ldrh	r2, [r1, #0]
 801a4e4:	8884      	ldrh	r4, [r0, #4]
 801a4e6:	4422      	add	r2, r4
 801a4e8:	800a      	strh	r2, [r1, #0]
 801a4ea:	88c4      	ldrh	r4, [r0, #6]
 801a4ec:	884a      	ldrh	r2, [r1, #2]
 801a4ee:	4422      	add	r2, r4
 801a4f0:	804a      	strh	r2, [r1, #2]
 801a4f2:	6940      	ldr	r0, [r0, #20]
 801a4f4:	b120      	cbz	r0, 801a500 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801a4f6:	6803      	ldr	r3, [r0, #0]
 801a4f8:	f85d 4b04 	ldr.w	r4, [sp], #4
 801a4fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a4fe:	4718      	bx	r3
 801a500:	f85d 4b04 	ldr.w	r4, [sp], #4
 801a504:	4770      	bx	lr

0801a506 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801a506:	b570      	push	{r4, r5, r6, lr}
 801a508:	8882      	ldrh	r2, [r0, #4]
 801a50a:	880b      	ldrh	r3, [r1, #0]
 801a50c:	4413      	add	r3, r2
 801a50e:	800b      	strh	r3, [r1, #0]
 801a510:	88c2      	ldrh	r2, [r0, #6]
 801a512:	884b      	ldrh	r3, [r1, #2]
 801a514:	460c      	mov	r4, r1
 801a516:	4413      	add	r3, r2
 801a518:	804b      	strh	r3, [r1, #2]
 801a51a:	4605      	mov	r5, r0
 801a51c:	1d01      	adds	r1, r0, #4
 801a51e:	4620      	mov	r0, r4
 801a520:	f7f8 ff06 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 801a524:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801a528:	2b00      	cmp	r3, #0
 801a52a:	dd0b      	ble.n	801a544 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801a52c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a530:	2b00      	cmp	r3, #0
 801a532:	dd07      	ble.n	801a544 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801a534:	6968      	ldr	r0, [r5, #20]
 801a536:	b128      	cbz	r0, 801a544 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801a538:	6803      	ldr	r3, [r0, #0]
 801a53a:	4621      	mov	r1, r4
 801a53c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a53e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a542:	4718      	bx	r3
 801a544:	bd70      	pop	{r4, r5, r6, pc}
	...

0801a548 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801a548:	b570      	push	{r4, r5, r6, lr}
 801a54a:	8882      	ldrh	r2, [r0, #4]
 801a54c:	880b      	ldrh	r3, [r1, #0]
 801a54e:	4413      	add	r3, r2
 801a550:	800b      	strh	r3, [r1, #0]
 801a552:	88c2      	ldrh	r2, [r0, #6]
 801a554:	884b      	ldrh	r3, [r1, #2]
 801a556:	460c      	mov	r4, r1
 801a558:	4413      	add	r3, r2
 801a55a:	804b      	strh	r3, [r1, #2]
 801a55c:	4605      	mov	r5, r0
 801a55e:	1d01      	adds	r1, r0, #4
 801a560:	4620      	mov	r0, r4
 801a562:	f7f8 fee5 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 801a566:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801a56a:	2b00      	cmp	r3, #0
 801a56c:	dd19      	ble.n	801a5a2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801a56e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a572:	2b00      	cmp	r3, #0
 801a574:	dd15      	ble.n	801a5a2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801a576:	6968      	ldr	r0, [r5, #20]
 801a578:	b128      	cbz	r0, 801a586 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801a57a:	6803      	ldr	r3, [r0, #0]
 801a57c:	4621      	mov	r1, r4
 801a57e:	691b      	ldr	r3, [r3, #16]
 801a580:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a584:	4718      	bx	r3
 801a586:	4b07      	ldr	r3, [pc, #28]	; (801a5a4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 801a588:	681b      	ldr	r3, [r3, #0]
 801a58a:	3304      	adds	r3, #4
 801a58c:	429d      	cmp	r5, r3
 801a58e:	d108      	bne.n	801a5a2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801a590:	f7fe fec8 	bl	8019324 <_ZN8touchgfx11Application11getInstanceEv>
 801a594:	6803      	ldr	r3, [r0, #0]
 801a596:	6821      	ldr	r1, [r4, #0]
 801a598:	6862      	ldr	r2, [r4, #4]
 801a59a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801a59c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a5a0:	4718      	bx	r3
 801a5a2:	bd70      	pop	{r4, r5, r6, pc}
 801a5a4:	20002290 	.word	0x20002290

0801a5a8 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 801a5a8:	b570      	push	{r4, r5, r6, lr}
 801a5aa:	4604      	mov	r4, r0
 801a5ac:	4616      	mov	r6, r2
 801a5ae:	460d      	mov	r5, r1
 801a5b0:	b901      	cbnz	r1, 801a5b4 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801a5b2:	b192      	cbz	r2, 801a5da <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801a5b4:	6823      	ldr	r3, [r4, #0]
 801a5b6:	4620      	mov	r0, r4
 801a5b8:	699b      	ldr	r3, [r3, #24]
 801a5ba:	4798      	blx	r3
 801a5bc:	88e2      	ldrh	r2, [r4, #6]
 801a5be:	88a1      	ldrh	r1, [r4, #4]
 801a5c0:	4432      	add	r2, r6
 801a5c2:	4429      	add	r1, r5
 801a5c4:	4620      	mov	r0, r4
 801a5c6:	b212      	sxth	r2, r2
 801a5c8:	b209      	sxth	r1, r1
 801a5ca:	f7ef fc4c 	bl	8009e66 <_ZN8touchgfx8Drawable5setXYEss>
 801a5ce:	6823      	ldr	r3, [r4, #0]
 801a5d0:	4620      	mov	r0, r4
 801a5d2:	699b      	ldr	r3, [r3, #24]
 801a5d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a5d8:	4718      	bx	r3
 801a5da:	bd70      	pop	{r4, r5, r6, pc}

0801a5dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 801a5dc:	b510      	push	{r4, lr}
 801a5de:	4604      	mov	r4, r0
 801a5e0:	4608      	mov	r0, r1
 801a5e2:	2300      	movs	r3, #0
 801a5e4:	8023      	strh	r3, [r4, #0]
 801a5e6:	8063      	strh	r3, [r4, #2]
 801a5e8:	6803      	ldr	r3, [r0, #0]
 801a5ea:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a5ee:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801a5f2:	80a1      	strh	r1, [r4, #4]
 801a5f4:	80e2      	strh	r2, [r4, #6]
 801a5f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a5f8:	4621      	mov	r1, r4
 801a5fa:	4798      	blx	r3
 801a5fc:	4620      	mov	r0, r4
 801a5fe:	bd10      	pop	{r4, pc}

0801a600 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801a600:	b530      	push	{r4, r5, lr}
 801a602:	8083      	strh	r3, [r0, #4]
 801a604:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 801a608:	80c3      	strh	r3, [r0, #6]
 801a60a:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801a60e:	7203      	strb	r3, [r0, #8]
 801a610:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801a614:	f89d 5018 	ldrb.w	r5, [sp, #24]
 801a618:	7243      	strb	r3, [r0, #9]
 801a61a:	7a83      	ldrb	r3, [r0, #10]
 801a61c:	6141      	str	r1, [r0, #20]
 801a61e:	f365 0306 	bfi	r3, r5, #0, #7
 801a622:	f89d 501c 	ldrb.w	r5, [sp, #28]
 801a626:	8302      	strh	r2, [r0, #24]
 801a628:	f365 13c7 	bfi	r3, r5, #7, #1
 801a62c:	7283      	strb	r3, [r0, #10]
 801a62e:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801a632:	72c3      	strb	r3, [r0, #11]
 801a634:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 801a638:	7303      	strb	r3, [r0, #12]
 801a63a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801a63e:	81c3      	strh	r3, [r0, #14]
 801a640:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801a644:	8203      	strh	r3, [r0, #16]
 801a646:	4b01      	ldr	r3, [pc, #4]	; (801a64c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 801a648:	6003      	str	r3, [r0, #0]
 801a64a:	bd30      	pop	{r4, r5, pc}
 801a64c:	0802faa0 	.word	0x0802faa0

0801a650 <_ZNK8touchgfx9ConstFont4findEt>:
 801a650:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a652:	6944      	ldr	r4, [r0, #20]
 801a654:	b3bc      	cbz	r4, 801a6c6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a656:	88a3      	ldrh	r3, [r4, #4]
 801a658:	8b02      	ldrh	r2, [r0, #24]
 801a65a:	1acb      	subs	r3, r1, r3
 801a65c:	f102 32ff 	add.w	r2, r2, #4294967295
 801a660:	d431      	bmi.n	801a6c6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a662:	4293      	cmp	r3, r2
 801a664:	dd0c      	ble.n	801a680 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801a666:	230e      	movs	r3, #14
 801a668:	fb03 4302 	mla	r3, r3, r2, r4
 801a66c:	889b      	ldrh	r3, [r3, #4]
 801a66e:	1a5b      	subs	r3, r3, r1
 801a670:	1ad3      	subs	r3, r2, r3
 801a672:	429a      	cmp	r2, r3
 801a674:	db27      	blt.n	801a6c6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a676:	2b00      	cmp	r3, #0
 801a678:	bfbc      	itt	lt
 801a67a:	2302      	movlt	r3, #2
 801a67c:	fb92 f3f3 	sdivlt	r3, r2, r3
 801a680:	2500      	movs	r5, #0
 801a682:	260e      	movs	r6, #14
 801a684:	4295      	cmp	r5, r2
 801a686:	dc1e      	bgt.n	801a6c6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a688:	fb06 4003 	mla	r0, r6, r3, r4
 801a68c:	8887      	ldrh	r7, [r0, #4]
 801a68e:	42b9      	cmp	r1, r7
 801a690:	d01a      	beq.n	801a6c8 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801a692:	d20d      	bcs.n	801a6b0 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801a694:	1e5a      	subs	r2, r3, #1
 801a696:	4295      	cmp	r5, r2
 801a698:	dc15      	bgt.n	801a6c6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a69a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801a69e:	1a5b      	subs	r3, r3, r1
 801a6a0:	1ad3      	subs	r3, r2, r3
 801a6a2:	429a      	cmp	r2, r3
 801a6a4:	db0f      	blt.n	801a6c6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a6a6:	429d      	cmp	r5, r3
 801a6a8:	ddec      	ble.n	801a684 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801a6aa:	1953      	adds	r3, r2, r5
 801a6ac:	105b      	asrs	r3, r3, #1
 801a6ae:	e7e9      	b.n	801a684 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801a6b0:	1c5d      	adds	r5, r3, #1
 801a6b2:	42aa      	cmp	r2, r5
 801a6b4:	db07      	blt.n	801a6c6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a6b6:	8a43      	ldrh	r3, [r0, #18]
 801a6b8:	1acb      	subs	r3, r1, r3
 801a6ba:	442b      	add	r3, r5
 801a6bc:	429d      	cmp	r5, r3
 801a6be:	dc02      	bgt.n	801a6c6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a6c0:	429a      	cmp	r2, r3
 801a6c2:	dadf      	bge.n	801a684 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801a6c4:	e7f1      	b.n	801a6aa <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801a6c6:	2000      	movs	r0, #0
 801a6c8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a6ca <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801a6ca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a6cc:	4604      	mov	r4, r0
 801a6ce:	4617      	mov	r7, r2
 801a6d0:	461e      	mov	r6, r3
 801a6d2:	b911      	cbnz	r1, 801a6da <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 801a6d4:	2500      	movs	r5, #0
 801a6d6:	4628      	mov	r0, r5
 801a6d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801a6da:	290a      	cmp	r1, #10
 801a6dc:	d0fa      	beq.n	801a6d4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a6de:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801a6e2:	4291      	cmp	r1, r2
 801a6e4:	d0f6      	beq.n	801a6d4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a6e6:	f242 020b 	movw	r2, #8203	; 0x200b
 801a6ea:	4291      	cmp	r1, r2
 801a6ec:	d0f2      	beq.n	801a6d4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a6ee:	f7ff ffaf 	bl	801a650 <_ZNK8touchgfx9ConstFont4findEt>
 801a6f2:	4605      	mov	r5, r0
 801a6f4:	b950      	cbnz	r0, 801a70c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801a6f6:	6823      	ldr	r3, [r4, #0]
 801a6f8:	4620      	mov	r0, r4
 801a6fa:	691b      	ldr	r3, [r3, #16]
 801a6fc:	4798      	blx	r3
 801a6fe:	4601      	mov	r1, r0
 801a700:	4620      	mov	r0, r4
 801a702:	f7ff ffa5 	bl	801a650 <_ZNK8touchgfx9ConstFont4findEt>
 801a706:	4605      	mov	r5, r0
 801a708:	2800      	cmp	r0, #0
 801a70a:	d0e3      	beq.n	801a6d4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a70c:	6823      	ldr	r3, [r4, #0]
 801a70e:	4629      	mov	r1, r5
 801a710:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801a712:	4620      	mov	r0, r4
 801a714:	4798      	blx	r3
 801a716:	6038      	str	r0, [r7, #0]
 801a718:	6823      	ldr	r3, [r4, #0]
 801a71a:	4620      	mov	r0, r4
 801a71c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801a71e:	4798      	blx	r3
 801a720:	7030      	strb	r0, [r6, #0]
 801a722:	e7d8      	b.n	801a6d6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801a724 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 801a724:	b538      	push	{r3, r4, r5, lr}
 801a726:	4605      	mov	r5, r0
 801a728:	f002 fa6e 	bl	801cc08 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801a72c:	4604      	mov	r4, r0
 801a72e:	4628      	mov	r0, r5
 801a730:	f002 f9ae 	bl	801ca90 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801a734:	2800      	cmp	r0, #0
 801a736:	bf14      	ite	ne
 801a738:	2002      	movne	r0, #2
 801a73a:	2000      	moveq	r0, #0
 801a73c:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801a740:	b280      	uxth	r0, r0
 801a742:	bd38      	pop	{r3, r4, r5, pc}

0801a744 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 801a744:	b538      	push	{r3, r4, r5, lr}
 801a746:	4605      	mov	r5, r0
 801a748:	f002 fa5e 	bl	801cc08 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801a74c:	4604      	mov	r4, r0
 801a74e:	4628      	mov	r0, r5
 801a750:	f002 f99e 	bl	801ca90 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801a754:	2800      	cmp	r0, #0
 801a756:	bf14      	ite	ne
 801a758:	2002      	movne	r0, #2
 801a75a:	2000      	moveq	r0, #0
 801a75c:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801a760:	f040 0001 	orr.w	r0, r0, #1
 801a764:	b280      	uxth	r0, r0
 801a766:	bd38      	pop	{r3, r4, r5, pc}

0801a768 <_ZN8touchgfx4clzuEm>:
 801a768:	4603      	mov	r3, r0
 801a76a:	b1c8      	cbz	r0, 801a7a0 <_ZN8touchgfx4clzuEm+0x38>
 801a76c:	0c02      	lsrs	r2, r0, #16
 801a76e:	0412      	lsls	r2, r2, #16
 801a770:	b9a2      	cbnz	r2, 801a79c <_ZN8touchgfx4clzuEm+0x34>
 801a772:	0403      	lsls	r3, r0, #16
 801a774:	2010      	movs	r0, #16
 801a776:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801a77a:	bf04      	itt	eq
 801a77c:	021b      	lsleq	r3, r3, #8
 801a77e:	3008      	addeq	r0, #8
 801a780:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801a784:	bf04      	itt	eq
 801a786:	011b      	lsleq	r3, r3, #4
 801a788:	3004      	addeq	r0, #4
 801a78a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801a78e:	bf04      	itt	eq
 801a790:	009b      	lsleq	r3, r3, #2
 801a792:	3002      	addeq	r0, #2
 801a794:	2b00      	cmp	r3, #0
 801a796:	db04      	blt.n	801a7a2 <_ZN8touchgfx4clzuEm+0x3a>
 801a798:	3001      	adds	r0, #1
 801a79a:	4770      	bx	lr
 801a79c:	2000      	movs	r0, #0
 801a79e:	e7ea      	b.n	801a776 <_ZN8touchgfx4clzuEm+0xe>
 801a7a0:	2020      	movs	r0, #32
 801a7a2:	4770      	bx	lr

0801a7a4 <_ZN8touchgfx7muldivuEmmmRm>:
 801a7a4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801a7a8:	460f      	mov	r7, r1
 801a7aa:	4615      	mov	r5, r2
 801a7ac:	461e      	mov	r6, r3
 801a7ae:	4601      	mov	r1, r0
 801a7b0:	b100      	cbz	r0, 801a7b4 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801a7b2:	b927      	cbnz	r7, 801a7be <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 801a7b4:	2000      	movs	r0, #0
 801a7b6:	6030      	str	r0, [r6, #0]
 801a7b8:	b002      	add	sp, #8
 801a7ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a7be:	f7ff ffd3 	bl	801a768 <_ZN8touchgfx4clzuEm>
 801a7c2:	b980      	cbnz	r0, 801a7e6 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 801a7c4:	4638      	mov	r0, r7
 801a7c6:	f7ff ffcf 	bl	801a768 <_ZN8touchgfx4clzuEm>
 801a7ca:	2800      	cmp	r0, #0
 801a7cc:	dd05      	ble.n	801a7da <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801a7ce:	4633      	mov	r3, r6
 801a7d0:	462a      	mov	r2, r5
 801a7d2:	4638      	mov	r0, r7
 801a7d4:	f7ff ffe6 	bl	801a7a4 <_ZN8touchgfx7muldivuEmmmRm>
 801a7d8:	e7ee      	b.n	801a7b8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801a7da:	f04f 33ff 	mov.w	r3, #4294967295
 801a7de:	6033      	str	r3, [r6, #0]
 801a7e0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801a7e4:	e7e8      	b.n	801a7b8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801a7e6:	fa37 f800 	lsrs.w	r8, r7, r0
 801a7ea:	fb07 f301 	mul.w	r3, r7, r1
 801a7ee:	d105      	bne.n	801a7fc <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801a7f0:	fbb3 f0f5 	udiv	r0, r3, r5
 801a7f4:	fb05 3510 	mls	r5, r5, r0, r3
 801a7f8:	6035      	str	r5, [r6, #0]
 801a7fa:	e7dd      	b.n	801a7b8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801a7fc:	2301      	movs	r3, #1
 801a7fe:	fa01 fa00 	lsl.w	sl, r1, r0
 801a802:	fa03 f000 	lsl.w	r0, r3, r0
 801a806:	3801      	subs	r0, #1
 801a808:	462a      	mov	r2, r5
 801a80a:	4633      	mov	r3, r6
 801a80c:	4038      	ands	r0, r7
 801a80e:	f7ff ffc9 	bl	801a7a4 <_ZN8touchgfx7muldivuEmmmRm>
 801a812:	fbba f9f5 	udiv	r9, sl, r5
 801a816:	462a      	mov	r2, r5
 801a818:	4607      	mov	r7, r0
 801a81a:	ab01      	add	r3, sp, #4
 801a81c:	fb05 a119 	mls	r1, r5, r9, sl
 801a820:	4640      	mov	r0, r8
 801a822:	f7ff ffbf 	bl	801a7a4 <_ZN8touchgfx7muldivuEmmmRm>
 801a826:	9b01      	ldr	r3, [sp, #4]
 801a828:	6832      	ldr	r2, [r6, #0]
 801a82a:	fb08 f409 	mul.w	r4, r8, r9
 801a82e:	441a      	add	r2, r3
 801a830:	fbb2 f3f5 	udiv	r3, r2, r5
 801a834:	441c      	add	r4, r3
 801a836:	443c      	add	r4, r7
 801a838:	4420      	add	r0, r4
 801a83a:	fb05 2513 	mls	r5, r5, r3, r2
 801a83e:	e7db      	b.n	801a7f8 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801a840 <_ZN8touchgfx6muldivElllRl>:
 801a840:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801a842:	2800      	cmp	r0, #0
 801a844:	bfba      	itte	lt
 801a846:	4240      	neglt	r0, r0
 801a848:	f04f 34ff 	movlt.w	r4, #4294967295
 801a84c:	2401      	movge	r4, #1
 801a84e:	2900      	cmp	r1, #0
 801a850:	bfbc      	itt	lt
 801a852:	4249      	neglt	r1, r1
 801a854:	4264      	neglt	r4, r4
 801a856:	2a00      	cmp	r2, #0
 801a858:	bfb6      	itet	lt
 801a85a:	4265      	neglt	r5, r4
 801a85c:	4625      	movge	r5, r4
 801a85e:	4252      	neglt	r2, r2
 801a860:	4288      	cmp	r0, r1
 801a862:	461e      	mov	r6, r3
 801a864:	bfc2      	ittt	gt
 801a866:	4603      	movgt	r3, r0
 801a868:	4608      	movgt	r0, r1
 801a86a:	4619      	movgt	r1, r3
 801a86c:	ab01      	add	r3, sp, #4
 801a86e:	f7ff ff99 	bl	801a7a4 <_ZN8touchgfx7muldivuEmmmRm>
 801a872:	9b01      	ldr	r3, [sp, #4]
 801a874:	4368      	muls	r0, r5
 801a876:	435c      	muls	r4, r3
 801a878:	6034      	str	r4, [r6, #0]
 801a87a:	b002      	add	sp, #8
 801a87c:	bd70      	pop	{r4, r5, r6, pc}

0801a87e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801a87e:	2000      	movs	r0, #0
 801a880:	4770      	bx	lr

0801a882 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 801a882:	2001      	movs	r0, #1
 801a884:	4770      	bx	lr

0801a886 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801a886:	2002      	movs	r0, #2
 801a888:	4770      	bx	lr

0801a88a <_ZN8touchgfx12GestureEventD1Ev>:
 801a88a:	4770      	bx	lr

0801a88c <_ZN8touchgfx9DragEventD1Ev>:
 801a88c:	4770      	bx	lr

0801a88e <_ZN8touchgfx10ClickEventD1Ev>:
 801a88e:	4770      	bx	lr

0801a890 <_ZN8touchgfx10ClickEventD0Ev>:
 801a890:	b510      	push	{r4, lr}
 801a892:	210c      	movs	r1, #12
 801a894:	4604      	mov	r4, r0
 801a896:	f00f ffa2 	bl	802a7de <_ZdlPvj>
 801a89a:	4620      	mov	r0, r4
 801a89c:	bd10      	pop	{r4, pc}

0801a89e <_ZN8touchgfx9DragEventD0Ev>:
 801a89e:	b510      	push	{r4, lr}
 801a8a0:	2110      	movs	r1, #16
 801a8a2:	4604      	mov	r4, r0
 801a8a4:	f00f ff9b 	bl	802a7de <_ZdlPvj>
 801a8a8:	4620      	mov	r0, r4
 801a8aa:	bd10      	pop	{r4, pc}

0801a8ac <_ZN8touchgfx12GestureEventD0Ev>:
 801a8ac:	b510      	push	{r4, lr}
 801a8ae:	210c      	movs	r1, #12
 801a8b0:	4604      	mov	r4, r0
 801a8b2:	f00f ff94 	bl	802a7de <_ZdlPvj>
 801a8b6:	4620      	mov	r0, r4
 801a8b8:	bd10      	pop	{r4, pc}
	...

0801a8bc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801a8bc:	b530      	push	{r4, r5, lr}
 801a8be:	460d      	mov	r5, r1
 801a8c0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a8c2:	b087      	sub	sp, #28
 801a8c4:	4604      	mov	r4, r0
 801a8c6:	b301      	cbz	r1, 801a90a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801a8c8:	a801      	add	r0, sp, #4
 801a8ca:	f7ff fe87 	bl	801a5dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a8ce:	892a      	ldrh	r2, [r5, #8]
 801a8d0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801a8d4:	7928      	ldrb	r0, [r5, #4]
 801a8d6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801a8da:	f88d 0010 	strb.w	r0, [sp, #16]
 801a8de:	1ad2      	subs	r2, r2, r3
 801a8e0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801a8e2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a8e4:	f8ad 1012 	strh.w	r1, [sp, #18]
 801a8e8:	441a      	add	r2, r3
 801a8ea:	896b      	ldrh	r3, [r5, #10]
 801a8ec:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801a8f0:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a8f4:	1b5b      	subs	r3, r3, r5
 801a8f6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801a8f8:	442b      	add	r3, r5
 801a8fa:	4d05      	ldr	r5, [pc, #20]	; (801a910 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801a8fc:	9503      	str	r5, [sp, #12]
 801a8fe:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a902:	6803      	ldr	r3, [r0, #0]
 801a904:	a903      	add	r1, sp, #12
 801a906:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a908:	4798      	blx	r3
 801a90a:	b007      	add	sp, #28
 801a90c:	bd30      	pop	{r4, r5, pc}
 801a90e:	bf00      	nop
 801a910:	0802fb28 	.word	0x0802fb28

0801a914 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801a914:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a918:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801a91a:	b08a      	sub	sp, #40	; 0x28
 801a91c:	4604      	mov	r4, r0
 801a91e:	460d      	mov	r5, r1
 801a920:	b113      	cbz	r3, 801a928 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801a922:	790b      	ldrb	r3, [r1, #4]
 801a924:	2b00      	cmp	r3, #0
 801a926:	d044      	beq.n	801a9b2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a928:	f104 0804 	add.w	r8, r4, #4
 801a92c:	4641      	mov	r1, r8
 801a92e:	a803      	add	r0, sp, #12
 801a930:	f7ff fe54 	bl	801a5dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a934:	792b      	ldrb	r3, [r5, #4]
 801a936:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801a93a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801a93e:	b983      	cbnz	r3, 801a962 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801a940:	892a      	ldrh	r2, [r5, #8]
 801a942:	88e9      	ldrh	r1, [r5, #6]
 801a944:	f104 0336 	add.w	r3, r4, #54	; 0x36
 801a948:	1b92      	subs	r2, r2, r6
 801a94a:	1bc9      	subs	r1, r1, r7
 801a94c:	9301      	str	r3, [sp, #4]
 801a94e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 801a952:	9300      	str	r3, [sp, #0]
 801a954:	b212      	sxth	r2, r2
 801a956:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801a95a:	b209      	sxth	r1, r1
 801a95c:	4640      	mov	r0, r8
 801a95e:	f7f8 fc03 	bl	8013168 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801a962:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801a964:	b329      	cbz	r1, 801a9b2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a966:	a805      	add	r0, sp, #20
 801a968:	f7ff fe38 	bl	801a5dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a96c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801a970:	792b      	ldrb	r3, [r5, #4]
 801a972:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a974:	f88d 3020 	strb.w	r3, [sp, #32]
 801a978:	1abf      	subs	r7, r7, r2
 801a97a:	88ea      	ldrh	r2, [r5, #6]
 801a97c:	4417      	add	r7, r2
 801a97e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 801a980:	4417      	add	r7, r2
 801a982:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801a986:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801a98a:	1ab6      	subs	r6, r6, r2
 801a98c:	892a      	ldrh	r2, [r5, #8]
 801a98e:	4416      	add	r6, r2
 801a990:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801a992:	4416      	add	r6, r2
 801a994:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 801a998:	4a07      	ldr	r2, [pc, #28]	; (801a9b8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801a99a:	9207      	str	r2, [sp, #28]
 801a99c:	2600      	movs	r6, #0
 801a99e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 801a9a2:	6803      	ldr	r3, [r0, #0]
 801a9a4:	a907      	add	r1, sp, #28
 801a9a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a9a8:	4798      	blx	r3
 801a9aa:	792b      	ldrb	r3, [r5, #4]
 801a9ac:	b10b      	cbz	r3, 801a9b2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a9ae:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801a9b2:	b00a      	add	sp, #40	; 0x28
 801a9b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a9b8:	0802fb00 	.word	0x0802fb00

0801a9bc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801a9bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a9c0:	460c      	mov	r4, r1
 801a9c2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a9c4:	b088      	sub	sp, #32
 801a9c6:	4605      	mov	r5, r0
 801a9c8:	2900      	cmp	r1, #0
 801a9ca:	d06d      	beq.n	801aaa8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801a9cc:	4668      	mov	r0, sp
 801a9ce:	f7ff fe05 	bl	801a5dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a9d2:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 801a9d4:	88e3      	ldrh	r3, [r4, #6]
 801a9d6:	f9bd 8000 	ldrsh.w	r8, [sp]
 801a9da:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801a9de:	440b      	add	r3, r1
 801a9e0:	b21b      	sxth	r3, r3
 801a9e2:	4543      	cmp	r3, r8
 801a9e4:	db31      	blt.n	801aa4a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a9e6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801a9ea:	44c4      	add	ip, r8
 801a9ec:	fa0f fc8c 	sxth.w	ip, ip
 801a9f0:	4563      	cmp	r3, ip
 801a9f2:	da2a      	bge.n	801aa4a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a9f4:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801a9f6:	8926      	ldrh	r6, [r4, #8]
 801a9f8:	4416      	add	r6, r2
 801a9fa:	b236      	sxth	r6, r6
 801a9fc:	42be      	cmp	r6, r7
 801a9fe:	db24      	blt.n	801aa4a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801aa00:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801aa04:	4438      	add	r0, r7
 801aa06:	b200      	sxth	r0, r0
 801aa08:	4286      	cmp	r6, r0
 801aa0a:	da1e      	bge.n	801aa4a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801aa0c:	8963      	ldrh	r3, [r4, #10]
 801aa0e:	4419      	add	r1, r3
 801aa10:	b209      	sxth	r1, r1
 801aa12:	4541      	cmp	r1, r8
 801aa14:	db08      	blt.n	801aa28 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801aa16:	4561      	cmp	r1, ip
 801aa18:	da06      	bge.n	801aa28 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801aa1a:	89a3      	ldrh	r3, [r4, #12]
 801aa1c:	441a      	add	r2, r3
 801aa1e:	b212      	sxth	r2, r2
 801aa20:	42ba      	cmp	r2, r7
 801aa22:	db01      	blt.n	801aa28 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801aa24:	4282      	cmp	r2, r0
 801aa26:	db10      	blt.n	801aa4a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801aa28:	4b21      	ldr	r3, [pc, #132]	; (801aab0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801aa2a:	9304      	str	r3, [sp, #16]
 801aa2c:	2302      	movs	r3, #2
 801aa2e:	f88d 3014 	strb.w	r3, [sp, #20]
 801aa32:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801aa34:	2300      	movs	r3, #0
 801aa36:	f8ad 3016 	strh.w	r3, [sp, #22]
 801aa3a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801aa3e:	f8ad 301a 	strh.w	r3, [sp, #26]
 801aa42:	6803      	ldr	r3, [r0, #0]
 801aa44:	a904      	add	r1, sp, #16
 801aa46:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801aa48:	4798      	blx	r3
 801aa4a:	1d29      	adds	r1, r5, #4
 801aa4c:	a802      	add	r0, sp, #8
 801aa4e:	f7ff fdc5 	bl	801a5dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801aa52:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801aa56:	88e0      	ldrh	r0, [r4, #6]
 801aa58:	7921      	ldrb	r1, [r4, #4]
 801aa5a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801aa5e:	8922      	ldrh	r2, [r4, #8]
 801aa60:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801aa62:	f88d 1014 	strb.w	r1, [sp, #20]
 801aa66:	eba3 0808 	sub.w	r8, r3, r8
 801aa6a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801aa6e:	1bdf      	subs	r7, r3, r7
 801aa70:	b2bb      	uxth	r3, r7
 801aa72:	fa1f f888 	uxth.w	r8, r8
 801aa76:	8967      	ldrh	r7, [r4, #10]
 801aa78:	89a4      	ldrh	r4, [r4, #12]
 801aa7a:	4440      	add	r0, r8
 801aa7c:	4460      	add	r0, ip
 801aa7e:	441a      	add	r2, r3
 801aa80:	44b8      	add	r8, r7
 801aa82:	4423      	add	r3, r4
 801aa84:	f8ad 0016 	strh.w	r0, [sp, #22]
 801aa88:	4433      	add	r3, r6
 801aa8a:	4432      	add	r2, r6
 801aa8c:	44e0      	add	r8, ip
 801aa8e:	4c09      	ldr	r4, [pc, #36]	; (801aab4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801aa90:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801aa92:	9404      	str	r4, [sp, #16]
 801aa94:	f8ad 2018 	strh.w	r2, [sp, #24]
 801aa98:	f8ad 801a 	strh.w	r8, [sp, #26]
 801aa9c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801aaa0:	6803      	ldr	r3, [r0, #0]
 801aaa2:	a904      	add	r1, sp, #16
 801aaa4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801aaa6:	4798      	blx	r3
 801aaa8:	b008      	add	sp, #32
 801aaaa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801aaae:	bf00      	nop
 801aab0:	0802fb00 	.word	0x0802fb00
 801aab4:	0802fb14 	.word	0x0802fb14

0801aab8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801aab8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801aaba:	4604      	mov	r4, r0
 801aabc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801aac0:	3201      	adds	r2, #1
 801aac2:	d112      	bne.n	801aaea <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801aac4:	6803      	ldr	r3, [r0, #0]
 801aac6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801aaca:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801aace:	f8ad 1004 	strh.w	r1, [sp, #4]
 801aad2:	2500      	movs	r5, #0
 801aad4:	9500      	str	r5, [sp, #0]
 801aad6:	466d      	mov	r5, sp
 801aad8:	4629      	mov	r1, r5
 801aada:	f8ad 2006 	strh.w	r2, [sp, #6]
 801aade:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801aae0:	4798      	blx	r3
 801aae2:	e895 0003 	ldmia.w	r5, {r0, r1}
 801aae6:	e884 0003 	stmia.w	r4, {r0, r1}
 801aaea:	4620      	mov	r0, r4
 801aaec:	b003      	add	sp, #12
 801aaee:	bd30      	pop	{r4, r5, pc}

0801aaf0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801aaf0:	b513      	push	{r0, r1, r4, lr}
 801aaf2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801aaf6:	3301      	adds	r3, #1
 801aaf8:	4604      	mov	r4, r0
 801aafa:	d109      	bne.n	801ab10 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801aafc:	4601      	mov	r1, r0
 801aafe:	4668      	mov	r0, sp
 801ab00:	f7ff fd6c 	bl	801a5dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801ab04:	f8bd 3000 	ldrh.w	r3, [sp]
 801ab08:	8423      	strh	r3, [r4, #32]
 801ab0a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801ab0e:	8463      	strh	r3, [r4, #34]	; 0x22
 801ab10:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801ab14:	b002      	add	sp, #8
 801ab16:	bd10      	pop	{r4, pc}

0801ab18 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801ab18:	b513      	push	{r0, r1, r4, lr}
 801ab1a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801ab1e:	3301      	adds	r3, #1
 801ab20:	4604      	mov	r4, r0
 801ab22:	d109      	bne.n	801ab38 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801ab24:	4601      	mov	r1, r0
 801ab26:	4668      	mov	r0, sp
 801ab28:	f7ff fd58 	bl	801a5dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801ab2c:	f8bd 3000 	ldrh.w	r3, [sp]
 801ab30:	8423      	strh	r3, [r4, #32]
 801ab32:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801ab36:	8463      	strh	r3, [r4, #34]	; 0x22
 801ab38:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801ab3c:	b002      	add	sp, #8
 801ab3e:	bd10      	pop	{r4, pc}

0801ab40 <_ZN8touchgfx6ScreenC1Ev>:
 801ab40:	b570      	push	{r4, r5, r6, lr}
 801ab42:	4605      	mov	r5, r0
 801ab44:	4b16      	ldr	r3, [pc, #88]	; (801aba0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801ab46:	f845 3b04 	str.w	r3, [r5], #4
 801ab4a:	2300      	movs	r3, #0
 801ab4c:	8103      	strh	r3, [r0, #8]
 801ab4e:	8143      	strh	r3, [r0, #10]
 801ab50:	8183      	strh	r3, [r0, #12]
 801ab52:	81c3      	strh	r3, [r0, #14]
 801ab54:	8203      	strh	r3, [r0, #16]
 801ab56:	8243      	strh	r3, [r0, #18]
 801ab58:	8283      	strh	r3, [r0, #20]
 801ab5a:	82c3      	strh	r3, [r0, #22]
 801ab5c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801ab60:	6203      	str	r3, [r0, #32]
 801ab62:	8483      	strh	r3, [r0, #36]	; 0x24
 801ab64:	84c3      	strh	r3, [r0, #38]	; 0x26
 801ab66:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801ab6a:	4a0e      	ldr	r2, [pc, #56]	; (801aba4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801ab6c:	6343      	str	r3, [r0, #52]	; 0x34
 801ab6e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801ab72:	4b0d      	ldr	r3, [pc, #52]	; (801aba8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801ab74:	6042      	str	r2, [r0, #4]
 801ab76:	f9b3 6000 	ldrsh.w	r6, [r3]
 801ab7a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801ab7c:	4a0b      	ldr	r2, [pc, #44]	; (801abac <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801ab7e:	4604      	mov	r4, r0
 801ab80:	2101      	movs	r1, #1
 801ab82:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801ab86:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801ab8a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801ab8e:	4628      	mov	r0, r5
 801ab90:	4798      	blx	r3
 801ab92:	6863      	ldr	r3, [r4, #4]
 801ab94:	4628      	mov	r0, r5
 801ab96:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801ab98:	4631      	mov	r1, r6
 801ab9a:	4798      	blx	r3
 801ab9c:	4620      	mov	r0, r4
 801ab9e:	bd70      	pop	{r4, r5, r6, pc}
 801aba0:	0802fb3c 	.word	0x0802fb3c
 801aba4:	0802efc8 	.word	0x0802efc8
 801aba8:	20002242 	.word	0x20002242
 801abac:	20002240 	.word	0x20002240

0801abb0 <_ZN8touchgfx6Screen4drawEv>:
 801abb0:	b507      	push	{r0, r1, r2, lr}
 801abb2:	4b09      	ldr	r3, [pc, #36]	; (801abd8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801abb4:	f9b3 2000 	ldrsh.w	r2, [r3]
 801abb8:	4b08      	ldr	r3, [pc, #32]	; (801abdc <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801abba:	f8ad 2004 	strh.w	r2, [sp, #4]
 801abbe:	f9b3 3000 	ldrsh.w	r3, [r3]
 801abc2:	f8ad 3006 	strh.w	r3, [sp, #6]
 801abc6:	6803      	ldr	r3, [r0, #0]
 801abc8:	2100      	movs	r1, #0
 801abca:	9100      	str	r1, [sp, #0]
 801abcc:	689b      	ldr	r3, [r3, #8]
 801abce:	4669      	mov	r1, sp
 801abd0:	4798      	blx	r3
 801abd2:	b003      	add	sp, #12
 801abd4:	f85d fb04 	ldr.w	pc, [sp], #4
 801abd8:	20002240 	.word	0x20002240
 801abdc:	20002242 	.word	0x20002242

0801abe0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801abe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801abe4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801abe8:	2b00      	cmp	r3, #0
 801abea:	b089      	sub	sp, #36	; 0x24
 801abec:	4680      	mov	r8, r0
 801abee:	460c      	mov	r4, r1
 801abf0:	4615      	mov	r5, r2
 801abf2:	dd0e      	ble.n	801ac12 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801abf4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801abf8:	2b00      	cmp	r3, #0
 801abfa:	dd0a      	ble.n	801ac12 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801abfc:	4628      	mov	r0, r5
 801abfe:	f7ff ff5b 	bl	801aab8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801ac02:	4621      	mov	r1, r4
 801ac04:	f7fe fab0 	bl	8019168 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801ac08:	69eb      	ldr	r3, [r5, #28]
 801ac0a:	b928      	cbnz	r0, 801ac18 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801ac0c:	461d      	mov	r5, r3
 801ac0e:	2b00      	cmp	r3, #0
 801ac10:	d1f4      	bne.n	801abfc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801ac12:	b009      	add	sp, #36	; 0x24
 801ac14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac18:	ae04      	add	r6, sp, #16
 801ac1a:	2b00      	cmp	r3, #0
 801ac1c:	f000 80b5 	beq.w	801ad8a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801ac20:	682b      	ldr	r3, [r5, #0]
 801ac22:	4629      	mov	r1, r5
 801ac24:	68db      	ldr	r3, [r3, #12]
 801ac26:	a802      	add	r0, sp, #8
 801ac28:	4798      	blx	r3
 801ac2a:	4628      	mov	r0, r5
 801ac2c:	f7ff ff60 	bl	801aaf0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801ac30:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801ac34:	4407      	add	r7, r0
 801ac36:	4628      	mov	r0, r5
 801ac38:	f7ff ff6e 	bl	801ab18 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801ac3c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801ac40:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801ac44:	f8ad 2014 	strh.w	r2, [sp, #20]
 801ac48:	4418      	add	r0, r3
 801ac4a:	4621      	mov	r1, r4
 801ac4c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801ac50:	f8ad 0012 	strh.w	r0, [sp, #18]
 801ac54:	b23f      	sxth	r7, r7
 801ac56:	4630      	mov	r0, r6
 801ac58:	f8ad 3016 	strh.w	r3, [sp, #22]
 801ac5c:	f8ad 7010 	strh.w	r7, [sp, #16]
 801ac60:	f7f8 fb66 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 801ac64:	4628      	mov	r0, r5
 801ac66:	f7ff ff27 	bl	801aab8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801ac6a:	4602      	mov	r2, r0
 801ac6c:	e896 0003 	ldmia.w	r6, {r0, r1}
 801ac70:	ab06      	add	r3, sp, #24
 801ac72:	e883 0003 	stmia.w	r3, {r0, r1}
 801ac76:	4611      	mov	r1, r2
 801ac78:	4618      	mov	r0, r3
 801ac7a:	f7f8 fb59 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 801ac7e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801ac82:	f9b4 1000 	ldrsh.w	r1, [r4]
 801ac86:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801ac8a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801ac8e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801ac92:	4299      	cmp	r1, r3
 801ac94:	d10b      	bne.n	801acae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801ac96:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801ac9a:	4552      	cmp	r2, sl
 801ac9c:	d107      	bne.n	801acae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801ac9e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801aca2:	455a      	cmp	r2, fp
 801aca4:	d103      	bne.n	801acae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801aca6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801acaa:	454a      	cmp	r2, r9
 801acac:	d06d      	beq.n	801ad8a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801acae:	f1bb 0f00 	cmp.w	fp, #0
 801acb2:	dd65      	ble.n	801ad80 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801acb4:	f1b9 0f00 	cmp.w	r9, #0
 801acb8:	dd62      	ble.n	801ad80 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801acba:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801acbe:	fa1f f08a 	uxth.w	r0, sl
 801acc2:	4552      	cmp	r2, sl
 801acc4:	9000      	str	r0, [sp, #0]
 801acc6:	da12      	bge.n	801acee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801acc8:	9301      	str	r3, [sp, #4]
 801acca:	9b00      	ldr	r3, [sp, #0]
 801accc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801acd0:	f8ad 2012 	strh.w	r2, [sp, #18]
 801acd4:	1a9a      	subs	r2, r3, r2
 801acd6:	f8ad 1010 	strh.w	r1, [sp, #16]
 801acda:	f8ad 0014 	strh.w	r0, [sp, #20]
 801acde:	f8ad 2016 	strh.w	r2, [sp, #22]
 801ace2:	69ea      	ldr	r2, [r5, #28]
 801ace4:	4631      	mov	r1, r6
 801ace6:	4640      	mov	r0, r8
 801ace8:	f7ff ff7a 	bl	801abe0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801acec:	9b01      	ldr	r3, [sp, #4]
 801acee:	f9b4 2000 	ldrsh.w	r2, [r4]
 801acf2:	429a      	cmp	r2, r3
 801acf4:	b29f      	uxth	r7, r3
 801acf6:	da0d      	bge.n	801ad14 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801acf8:	f8ad 2010 	strh.w	r2, [sp, #16]
 801acfc:	1aba      	subs	r2, r7, r2
 801acfe:	f8ad a012 	strh.w	sl, [sp, #18]
 801ad02:	f8ad 2014 	strh.w	r2, [sp, #20]
 801ad06:	f8ad 9016 	strh.w	r9, [sp, #22]
 801ad0a:	69ea      	ldr	r2, [r5, #28]
 801ad0c:	4631      	mov	r1, r6
 801ad0e:	4640      	mov	r0, r8
 801ad10:	f7ff ff66 	bl	801abe0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ad14:	8822      	ldrh	r2, [r4, #0]
 801ad16:	88a3      	ldrh	r3, [r4, #4]
 801ad18:	445f      	add	r7, fp
 801ad1a:	4413      	add	r3, r2
 801ad1c:	b29b      	uxth	r3, r3
 801ad1e:	b2bf      	uxth	r7, r7
 801ad20:	b23a      	sxth	r2, r7
 801ad22:	b219      	sxth	r1, r3
 801ad24:	4291      	cmp	r1, r2
 801ad26:	dd0d      	ble.n	801ad44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801ad28:	1bdb      	subs	r3, r3, r7
 801ad2a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ad2e:	f8ad a012 	strh.w	sl, [sp, #18]
 801ad32:	f8ad 3014 	strh.w	r3, [sp, #20]
 801ad36:	f8ad 9016 	strh.w	r9, [sp, #22]
 801ad3a:	69ea      	ldr	r2, [r5, #28]
 801ad3c:	4631      	mov	r1, r6
 801ad3e:	4640      	mov	r0, r8
 801ad40:	f7ff ff4e 	bl	801abe0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ad44:	88e2      	ldrh	r2, [r4, #6]
 801ad46:	8863      	ldrh	r3, [r4, #2]
 801ad48:	4413      	add	r3, r2
 801ad4a:	9a00      	ldr	r2, [sp, #0]
 801ad4c:	444a      	add	r2, r9
 801ad4e:	b29b      	uxth	r3, r3
 801ad50:	fa1f f982 	uxth.w	r9, r2
 801ad54:	fa0f f289 	sxth.w	r2, r9
 801ad58:	b219      	sxth	r1, r3
 801ad5a:	428a      	cmp	r2, r1
 801ad5c:	da15      	bge.n	801ad8a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801ad5e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ad62:	f9b4 0000 	ldrsh.w	r0, [r4]
 801ad66:	f8ad 1014 	strh.w	r1, [sp, #20]
 801ad6a:	eba3 0309 	sub.w	r3, r3, r9
 801ad6e:	f8ad 0010 	strh.w	r0, [sp, #16]
 801ad72:	f8ad 2012 	strh.w	r2, [sp, #18]
 801ad76:	f8ad 3016 	strh.w	r3, [sp, #22]
 801ad7a:	69ea      	ldr	r2, [r5, #28]
 801ad7c:	4631      	mov	r1, r6
 801ad7e:	e001      	b.n	801ad84 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801ad80:	69ea      	ldr	r2, [r5, #28]
 801ad82:	4621      	mov	r1, r4
 801ad84:	4640      	mov	r0, r8
 801ad86:	f7ff ff2b 	bl	801abe0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ad8a:	4628      	mov	r0, r5
 801ad8c:	f7ff fe94 	bl	801aab8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801ad90:	6861      	ldr	r1, [r4, #4]
 801ad92:	4602      	mov	r2, r0
 801ad94:	6820      	ldr	r0, [r4, #0]
 801ad96:	4633      	mov	r3, r6
 801ad98:	c303      	stmia	r3!, {r0, r1}
 801ad9a:	4611      	mov	r1, r2
 801ad9c:	4630      	mov	r0, r6
 801ad9e:	f7f8 fac7 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 801ada2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801ada6:	2b00      	cmp	r3, #0
 801ada8:	f77f af33 	ble.w	801ac12 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801adac:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801adb0:	2b00      	cmp	r3, #0
 801adb2:	f77f af2e 	ble.w	801ac12 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801adb6:	4628      	mov	r0, r5
 801adb8:	f7ff fe9a 	bl	801aaf0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801adbc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801adc0:	1a18      	subs	r0, r3, r0
 801adc2:	f8ad 0010 	strh.w	r0, [sp, #16]
 801adc6:	4628      	mov	r0, r5
 801adc8:	f7ff fea6 	bl	801ab18 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801adcc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801add0:	1a18      	subs	r0, r3, r0
 801add2:	f8ad 0012 	strh.w	r0, [sp, #18]
 801add6:	682b      	ldr	r3, [r5, #0]
 801add8:	4631      	mov	r1, r6
 801adda:	689b      	ldr	r3, [r3, #8]
 801addc:	4628      	mov	r0, r5
 801adde:	4798      	blx	r3
 801ade0:	e717      	b.n	801ac12 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801ade2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801ade2:	b570      	push	{r4, r5, r6, lr}
 801ade4:	460c      	mov	r4, r1
 801ade6:	b086      	sub	sp, #24
 801ade8:	1d06      	adds	r6, r0, #4
 801adea:	2300      	movs	r3, #0
 801adec:	4631      	mov	r1, r6
 801adee:	4605      	mov	r5, r0
 801adf0:	a802      	add	r0, sp, #8
 801adf2:	9301      	str	r3, [sp, #4]
 801adf4:	f7ff fbf2 	bl	801a5dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801adf8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801adfc:	8822      	ldrh	r2, [r4, #0]
 801adfe:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801ae02:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ae06:	f8ad 0014 	strh.w	r0, [sp, #20]
 801ae0a:	1ad2      	subs	r2, r2, r3
 801ae0c:	8863      	ldrh	r3, [r4, #2]
 801ae0e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ae12:	1a5b      	subs	r3, r3, r1
 801ae14:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801ae18:	f8ad 1016 	strh.w	r1, [sp, #22]
 801ae1c:	aa01      	add	r2, sp, #4
 801ae1e:	a904      	add	r1, sp, #16
 801ae20:	4630      	mov	r0, r6
 801ae22:	f8ad 3012 	strh.w	r3, [sp, #18]
 801ae26:	f7f8 fb5b 	bl	80134e0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801ae2a:	9a01      	ldr	r2, [sp, #4]
 801ae2c:	b11a      	cbz	r2, 801ae36 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801ae2e:	4621      	mov	r1, r4
 801ae30:	4628      	mov	r0, r5
 801ae32:	f7ff fed5 	bl	801abe0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ae36:	b006      	add	sp, #24
 801ae38:	bd70      	pop	{r4, r5, r6, pc}

0801ae3a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801ae3a:	b530      	push	{r4, r5, lr}
 801ae3c:	4602      	mov	r2, r0
 801ae3e:	4604      	mov	r4, r0
 801ae40:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801ae44:	b085      	sub	sp, #20
 801ae46:	460d      	mov	r5, r1
 801ae48:	6851      	ldr	r1, [r2, #4]
 801ae4a:	466b      	mov	r3, sp
 801ae4c:	c303      	stmia	r3!, {r0, r1}
 801ae4e:	4629      	mov	r1, r5
 801ae50:	4668      	mov	r0, sp
 801ae52:	f7f8 fa6d 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 801ae56:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801ae5a:	b12b      	cbz	r3, 801ae68 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801ae5c:	4669      	mov	r1, sp
 801ae5e:	4620      	mov	r0, r4
 801ae60:	f7ff ffbf 	bl	801ade2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801ae64:	b005      	add	sp, #20
 801ae66:	bd30      	pop	{r4, r5, pc}
 801ae68:	3404      	adds	r4, #4
 801ae6a:	4621      	mov	r1, r4
 801ae6c:	a802      	add	r0, sp, #8
 801ae6e:	f7ff fbb5 	bl	801a5dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801ae72:	f8bd 3000 	ldrh.w	r3, [sp]
 801ae76:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801ae7a:	1a9b      	subs	r3, r3, r2
 801ae7c:	f8ad 3000 	strh.w	r3, [sp]
 801ae80:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ae84:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801ae88:	4669      	mov	r1, sp
 801ae8a:	1a9b      	subs	r3, r3, r2
 801ae8c:	4620      	mov	r0, r4
 801ae8e:	f8ad 3002 	strh.w	r3, [sp, #2]
 801ae92:	f7f8 faec 	bl	801346e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801ae96:	e7e5      	b.n	801ae64 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801ae98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801ae98:	680a      	ldr	r2, [r1, #0]
 801ae9a:	460b      	mov	r3, r1
 801ae9c:	6992      	ldr	r2, [r2, #24]
 801ae9e:	1d01      	adds	r1, r0, #4
 801aea0:	4618      	mov	r0, r3
 801aea2:	4710      	bx	r2

0801aea4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 801aea4:	4298      	cmp	r0, r3
 801aea6:	d200      	bcs.n	801aeaa <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 801aea8:	b913      	cbnz	r3, 801aeb0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801aeaa:	440a      	add	r2, r1
 801aeac:	b210      	sxth	r0, r2
 801aeae:	4770      	bx	lr
 801aeb0:	ee07 0a90 	vmov	s15, r0
 801aeb4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801aeb8:	ee07 3a90 	vmov	s15, r3
 801aebc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801aec0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801aec4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801aec8:	ee37 7a66 	vsub.f32	s14, s14, s13
 801aecc:	ee07 2a90 	vmov	s15, r2
 801aed0:	ee67 5a07 	vmul.f32	s11, s14, s14
 801aed4:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801aed8:	eee5 6a87 	vfma.f32	s13, s11, s14
 801aedc:	ee07 1a90 	vmov	s15, r1
 801aee0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801aee4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801aee8:	eee6 7a26 	vfma.f32	s15, s12, s13
 801aeec:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801aef0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aef4:	bfcc      	ite	gt
 801aef6:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801aefa:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801aefe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801af02:	ee17 3a90 	vmov	r3, s15
 801af06:	b218      	sxth	r0, r3
 801af08:	4770      	bx	lr

0801af0a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801af0a:	4298      	cmp	r0, r3
 801af0c:	d200      	bcs.n	801af10 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801af0e:	b913      	cbnz	r3, 801af16 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 801af10:	440a      	add	r2, r1
 801af12:	b210      	sxth	r0, r2
 801af14:	4770      	bx	lr
 801af16:	ee07 2a90 	vmov	s15, r2
 801af1a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801af1e:	ee07 0a90 	vmov	s15, r0
 801af22:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801af26:	ee67 7a27 	vmul.f32	s15, s14, s15
 801af2a:	ee07 3a10 	vmov	s14, r3
 801af2e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801af32:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801af36:	ee07 1a90 	vmov	s15, r1
 801af3a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801af3e:	ee77 7a27 	vadd.f32	s15, s14, s15
 801af42:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801af46:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801af4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801af4e:	bfcc      	ite	gt
 801af50:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801af54:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801af58:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801af5c:	ee17 3a90 	vmov	r3, s15
 801af60:	b218      	sxth	r0, r3
 801af62:	4770      	bx	lr

0801af64 <_ZN8touchgfx12TextProviderC1Ev>:
 801af64:	b538      	push	{r3, r4, r5, lr}
 801af66:	2500      	movs	r5, #0
 801af68:	2302      	movs	r3, #2
 801af6a:	4604      	mov	r4, r0
 801af6c:	e9c0 5500 	strd	r5, r5, [r0]
 801af70:	7403      	strb	r3, [r0, #16]
 801af72:	6145      	str	r5, [r0, #20]
 801af74:	7605      	strb	r5, [r0, #24]
 801af76:	83c5      	strh	r5, [r0, #30]
 801af78:	8405      	strh	r5, [r0, #32]
 801af7a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801af7c:	8705      	strh	r5, [r0, #56]	; 0x38
 801af7e:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801af80:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801af84:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801af88:	220e      	movs	r2, #14
 801af8a:	4629      	mov	r1, r5
 801af8c:	304c      	adds	r0, #76	; 0x4c
 801af8e:	f010 fc1c 	bl	802b7ca <memset>
 801af92:	2301      	movs	r3, #1
 801af94:	4620      	mov	r0, r4
 801af96:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801af9a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801af9e:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801afa2:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801afa6:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801afaa:	f7f5 f821 	bl	800fff0 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801afae:	4620      	mov	r0, r4
 801afb0:	bd38      	pop	{r3, r4, r5, pc}

0801afb2 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801afb2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801afb4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801afb8:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801afba:	fab0 f080 	clz	r0, r0
 801afbe:	0940      	lsrs	r0, r0, #5
 801afc0:	4770      	bx	lr

0801afc2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801afc2:	b530      	push	{r4, r5, lr}
 801afc4:	2500      	movs	r5, #0
 801afc6:	2401      	movs	r4, #1
 801afc8:	6843      	ldr	r3, [r0, #4]
 801afca:	b913      	cbnz	r3, 801afd2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801afcc:	6803      	ldr	r3, [r0, #0]
 801afce:	b313      	cbz	r3, 801b016 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801afd0:	6043      	str	r3, [r0, #4]
 801afd2:	7e03      	ldrb	r3, [r0, #24]
 801afd4:	b143      	cbz	r3, 801afe8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801afd6:	6943      	ldr	r3, [r0, #20]
 801afd8:	b12b      	cbz	r3, 801afe6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801afda:	881a      	ldrh	r2, [r3, #0]
 801afdc:	b11a      	cbz	r2, 801afe6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801afde:	1c9a      	adds	r2, r3, #2
 801afe0:	6142      	str	r2, [r0, #20]
 801afe2:	8818      	ldrh	r0, [r3, #0]
 801afe4:	bd30      	pop	{r4, r5, pc}
 801afe6:	7605      	strb	r5, [r0, #24]
 801afe8:	6843      	ldr	r3, [r0, #4]
 801afea:	8819      	ldrh	r1, [r3, #0]
 801afec:	b199      	cbz	r1, 801b016 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801afee:	1c9a      	adds	r2, r3, #2
 801aff0:	2902      	cmp	r1, #2
 801aff2:	6042      	str	r2, [r0, #4]
 801aff4:	d1f5      	bne.n	801afe2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801aff6:	7c03      	ldrb	r3, [r0, #16]
 801aff8:	2b01      	cmp	r3, #1
 801affa:	d8e5      	bhi.n	801afc8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801affc:	1c5a      	adds	r2, r3, #1
 801affe:	3302      	adds	r3, #2
 801b000:	7402      	strb	r2, [r0, #16]
 801b002:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801b006:	6143      	str	r3, [r0, #20]
 801b008:	2b00      	cmp	r3, #0
 801b00a:	d0dd      	beq.n	801afc8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801b00c:	881b      	ldrh	r3, [r3, #0]
 801b00e:	2b00      	cmp	r3, #0
 801b010:	d0da      	beq.n	801afc8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801b012:	7604      	strb	r4, [r0, #24]
 801b014:	e7d8      	b.n	801afc8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801b016:	2000      	movs	r0, #0
 801b018:	e7e4      	b.n	801afe4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801b01a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801b01a:	b430      	push	{r4, r5}
 801b01c:	6001      	str	r1, [r0, #0]
 801b01e:	2100      	movs	r1, #0
 801b020:	6041      	str	r1, [r0, #4]
 801b022:	6815      	ldr	r5, [r2, #0]
 801b024:	6085      	str	r5, [r0, #8]
 801b026:	6852      	ldr	r2, [r2, #4]
 801b028:	6443      	str	r3, [r0, #68]	; 0x44
 801b02a:	9b02      	ldr	r3, [sp, #8]
 801b02c:	60c2      	str	r2, [r0, #12]
 801b02e:	7401      	strb	r1, [r0, #16]
 801b030:	6141      	str	r1, [r0, #20]
 801b032:	7601      	strb	r1, [r0, #24]
 801b034:	8701      	strh	r1, [r0, #56]	; 0x38
 801b036:	8401      	strh	r1, [r0, #32]
 801b038:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801b03c:	6483      	str	r3, [r0, #72]	; 0x48
 801b03e:	bc30      	pop	{r4, r5}
 801b040:	f7f4 bfd6 	b.w	800fff0 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801b044 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801b044:	b408      	push	{r3}
 801b046:	b510      	push	{r4, lr}
 801b048:	b085      	sub	sp, #20
 801b04a:	ac07      	add	r4, sp, #28
 801b04c:	f854 3b04 	ldr.w	r3, [r4], #4
 801b050:	9300      	str	r3, [sp, #0]
 801b052:	4613      	mov	r3, r2
 801b054:	4622      	mov	r2, r4
 801b056:	9403      	str	r4, [sp, #12]
 801b058:	f7ff ffdf 	bl	801b01a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801b05c:	b005      	add	sp, #20
 801b05e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b062:	b001      	add	sp, #4
 801b064:	4770      	bx	lr

0801b066 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801b066:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b068:	4605      	mov	r5, r0
 801b06a:	4608      	mov	r0, r1
 801b06c:	b1e9      	cbz	r1, 801b0aa <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801b06e:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801b072:	460b      	mov	r3, r1
 801b074:	f101 0708 	add.w	r7, r1, #8
 801b078:	4622      	mov	r2, r4
 801b07a:	6818      	ldr	r0, [r3, #0]
 801b07c:	6859      	ldr	r1, [r3, #4]
 801b07e:	4626      	mov	r6, r4
 801b080:	c603      	stmia	r6!, {r0, r1}
 801b082:	3308      	adds	r3, #8
 801b084:	42bb      	cmp	r3, r7
 801b086:	4634      	mov	r4, r6
 801b088:	d1f7      	bne.n	801b07a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801b08a:	6818      	ldr	r0, [r3, #0]
 801b08c:	6030      	str	r0, [r6, #0]
 801b08e:	889b      	ldrh	r3, [r3, #4]
 801b090:	80b3      	strh	r3, [r6, #4]
 801b092:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801b096:	015b      	lsls	r3, r3, #5
 801b098:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801b09c:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801b0a0:	430b      	orrs	r3, r1
 801b0a2:	425b      	negs	r3, r3
 801b0a4:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801b0a8:	4610      	mov	r0, r2
 801b0aa:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801b0ac <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801b0ac:	b538      	push	{r3, r4, r5, lr}
 801b0ae:	460c      	mov	r4, r1
 801b0b0:	6811      	ldr	r1, [r2, #0]
 801b0b2:	4610      	mov	r0, r2
 801b0b4:	68cd      	ldr	r5, [r1, #12]
 801b0b6:	4619      	mov	r1, r3
 801b0b8:	47a8      	blx	r5
 801b0ba:	2800      	cmp	r0, #0
 801b0bc:	bf08      	it	eq
 801b0be:	4620      	moveq	r0, r4
 801b0c0:	bd38      	pop	{r3, r4, r5, pc}
	...

0801b0c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801b0c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b0c6:	4604      	mov	r4, r0
 801b0c8:	4615      	mov	r5, r2
 801b0ca:	4608      	mov	r0, r1
 801b0cc:	b93a      	cbnz	r2, 801b0de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801b0ce:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801b0d2:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801b0d6:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801b0da:	4628      	mov	r0, r5
 801b0dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b0de:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801b0e2:	8893      	ldrh	r3, [r2, #4]
 801b0e4:	ea4f 160c 	mov.w	r6, ip, lsl #4
 801b0e8:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801b0ec:	79ee      	ldrb	r6, [r5, #7]
 801b0ee:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801b0f2:	4316      	orrs	r6, r2
 801b0f4:	19da      	adds	r2, r3, r7
 801b0f6:	b291      	uxth	r1, r2
 801b0f8:	291d      	cmp	r1, #29
 801b0fa:	b2b7      	uxth	r7, r6
 801b0fc:	d87a      	bhi.n	801b1f4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801b0fe:	2201      	movs	r2, #1
 801b100:	408a      	lsls	r2, r1
 801b102:	4975      	ldr	r1, [pc, #468]	; (801b2d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 801b104:	420a      	tst	r2, r1
 801b106:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801b10a:	d12d      	bne.n	801b168 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801b10c:	f412 7f60 	tst.w	r2, #896	; 0x380
 801b110:	d070      	beq.n	801b1f4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801b112:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801b116:	462b      	mov	r3, r5
 801b118:	f105 0e08 	add.w	lr, r5, #8
 801b11c:	4615      	mov	r5, r2
 801b11e:	6818      	ldr	r0, [r3, #0]
 801b120:	6859      	ldr	r1, [r3, #4]
 801b122:	4694      	mov	ip, r2
 801b124:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801b128:	3308      	adds	r3, #8
 801b12a:	4573      	cmp	r3, lr
 801b12c:	4662      	mov	r2, ip
 801b12e:	d1f6      	bne.n	801b11e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801b130:	6818      	ldr	r0, [r3, #0]
 801b132:	f8cc 0000 	str.w	r0, [ip]
 801b136:	889b      	ldrh	r3, [r3, #4]
 801b138:	f8ac 3004 	strh.w	r3, [ip, #4]
 801b13c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801b140:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801b144:	b2b3      	uxth	r3, r6
 801b146:	1aca      	subs	r2, r1, r3
 801b148:	b292      	uxth	r2, r2
 801b14a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801b14e:	10d2      	asrs	r2, r2, #3
 801b150:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801b154:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801b158:	4302      	orrs	r2, r0
 801b15a:	1bcf      	subs	r7, r1, r7
 801b15c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801b160:	1afb      	subs	r3, r7, r3
 801b162:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801b166:	e7b8      	b.n	801b0da <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801b168:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801b16a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b16e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801b170:	f640 6333 	movw	r3, #3635	; 0xe33
 801b174:	4299      	cmp	r1, r3
 801b176:	d110      	bne.n	801b19a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 801b178:	6803      	ldr	r3, [r0, #0]
 801b17a:	68db      	ldr	r3, [r3, #12]
 801b17c:	4798      	blx	r3
 801b17e:	7b41      	ldrb	r1, [r0, #13]
 801b180:	00cb      	lsls	r3, r1, #3
 801b182:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b186:	7a03      	ldrb	r3, [r0, #8]
 801b188:	0648      	lsls	r0, r1, #25
 801b18a:	ea43 0302 	orr.w	r3, r3, r2
 801b18e:	bf44      	itt	mi
 801b190:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b194:	b21b      	sxthmi	r3, r3
 801b196:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b19a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801b19e:	443b      	add	r3, r7
 801b1a0:	4433      	add	r3, r6
 801b1a2:	b29b      	uxth	r3, r3
 801b1a4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 801b1a8:	462a      	mov	r2, r5
 801b1aa:	f105 0c08 	add.w	ip, r5, #8
 801b1ae:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b1b2:	4635      	mov	r5, r6
 801b1b4:	6810      	ldr	r0, [r2, #0]
 801b1b6:	6851      	ldr	r1, [r2, #4]
 801b1b8:	4637      	mov	r7, r6
 801b1ba:	c703      	stmia	r7!, {r0, r1}
 801b1bc:	3208      	adds	r2, #8
 801b1be:	4562      	cmp	r2, ip
 801b1c0:	463e      	mov	r6, r7
 801b1c2:	d1f7      	bne.n	801b1b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 801b1c4:	6810      	ldr	r0, [r2, #0]
 801b1c6:	6038      	str	r0, [r7, #0]
 801b1c8:	8892      	ldrh	r2, [r2, #4]
 801b1ca:	80ba      	strh	r2, [r7, #4]
 801b1cc:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801b1d0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801b1d4:	10db      	asrs	r3, r3, #3
 801b1d6:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801b1da:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801b1de:	4313      	orrs	r3, r2
 801b1e0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801b1e4:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801b1e8:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801b1ec:	1a9b      	subs	r3, r3, r2
 801b1ee:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801b1f2:	e772      	b.n	801b0da <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801b1f4:	f023 0204 	bic.w	r2, r3, #4
 801b1f8:	f640 611b 	movw	r1, #3611	; 0xe1b
 801b1fc:	428a      	cmp	r2, r1
 801b1fe:	d003      	beq.n	801b208 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 801b200:	f640 621d 	movw	r2, #3613	; 0xe1d
 801b204:	4293      	cmp	r3, r2
 801b206:	d120      	bne.n	801b24a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 801b208:	3b01      	subs	r3, #1
 801b20a:	4602      	mov	r2, r0
 801b20c:	b29b      	uxth	r3, r3
 801b20e:	4629      	mov	r1, r5
 801b210:	4620      	mov	r0, r4
 801b212:	f7ff ff4b 	bl	801b0ac <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801b216:	7b41      	ldrb	r1, [r0, #13]
 801b218:	00cb      	lsls	r3, r1, #3
 801b21a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b21e:	7a03      	ldrb	r3, [r0, #8]
 801b220:	0649      	lsls	r1, r1, #25
 801b222:	ea43 0302 	orr.w	r3, r3, r2
 801b226:	bf44      	itt	mi
 801b228:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b22c:	b21b      	sxthmi	r3, r3
 801b22e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b232:	7b6b      	ldrb	r3, [r5, #13]
 801b234:	7aaa      	ldrb	r2, [r5, #10]
 801b236:	005b      	lsls	r3, r3, #1
 801b238:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801b23c:	4313      	orrs	r3, r2
 801b23e:	115a      	asrs	r2, r3, #5
 801b240:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801b244:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801b248:	e036      	b.n	801b2b8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801b24a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801b24e:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801b252:	7a2a      	ldrb	r2, [r5, #8]
 801b254:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801b258:	ea42 0201 	orr.w	r2, r2, r1
 801b25c:	bf1c      	itt	ne
 801b25e:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801b262:	b212      	sxthne	r2, r2
 801b264:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801b268:	f640 6109 	movw	r1, #3593	; 0xe09
 801b26c:	f023 0210 	bic.w	r2, r3, #16
 801b270:	428a      	cmp	r2, r1
 801b272:	d003      	beq.n	801b27c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 801b274:	f640 6213 	movw	r2, #3603	; 0xe13
 801b278:	4293      	cmp	r3, r2
 801b27a:	d12a      	bne.n	801b2d2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801b27c:	7b6e      	ldrb	r6, [r5, #13]
 801b27e:	0076      	lsls	r6, r6, #1
 801b280:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801b284:	7aae      	ldrb	r6, [r5, #10]
 801b286:	4316      	orrs	r6, r2
 801b288:	f640 6213 	movw	r2, #3603	; 0xe13
 801b28c:	4293      	cmp	r3, r2
 801b28e:	bf18      	it	ne
 801b290:	f103 33ff 	addne.w	r3, r3, #4294967295
 801b294:	4602      	mov	r2, r0
 801b296:	bf14      	ite	ne
 801b298:	b29b      	uxthne	r3, r3
 801b29a:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801b29e:	4629      	mov	r1, r5
 801b2a0:	4620      	mov	r0, r4
 801b2a2:	f7ff ff03 	bl	801b0ac <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801b2a6:	7b43      	ldrb	r3, [r0, #13]
 801b2a8:	7a82      	ldrb	r2, [r0, #10]
 801b2aa:	005b      	lsls	r3, r3, #1
 801b2ac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801b2b0:	4313      	orrs	r3, r2
 801b2b2:	1af6      	subs	r6, r6, r3
 801b2b4:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 801b2b8:	7b69      	ldrb	r1, [r5, #13]
 801b2ba:	00cb      	lsls	r3, r1, #3
 801b2bc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b2c0:	7a2b      	ldrb	r3, [r5, #8]
 801b2c2:	4313      	orrs	r3, r2
 801b2c4:	064a      	lsls	r2, r1, #25
 801b2c6:	bf44      	itt	mi
 801b2c8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b2cc:	b21b      	sxthmi	r3, r3
 801b2ce:	1bdb      	subs	r3, r3, r7
 801b2d0:	e747      	b.n	801b162 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801b2d2:	2300      	movs	r3, #0
 801b2d4:	e7b6      	b.n	801b244 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 801b2d6:	bf00      	nop
 801b2d8:	3fc00079 	.word	0x3fc00079

0801b2dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801b2dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b2e0:	4604      	mov	r4, r0
 801b2e2:	b942      	cbnz	r2, 801b2f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801b2e4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b2e8:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801b2ec:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 801b2f0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801b2f4:	e047      	b.n	801b386 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801b2f6:	7b51      	ldrb	r1, [r2, #13]
 801b2f8:	8893      	ldrh	r3, [r2, #4]
 801b2fa:	010d      	lsls	r5, r1, #4
 801b2fc:	f405 7080 	and.w	r0, r5, #256	; 0x100
 801b300:	79d5      	ldrb	r5, [r2, #7]
 801b302:	4305      	orrs	r5, r0
 801b304:	2d04      	cmp	r5, #4
 801b306:	bfcc      	ite	gt
 801b308:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801b30c:	f04f 0e01 	movle.w	lr, #1
 801b310:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801b314:	f200 80ab 	bhi.w	801b46e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801b318:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801b31c:	4283      	cmp	r3, r0
 801b31e:	d216      	bcs.n	801b34e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b320:	f240 605b 	movw	r0, #1627	; 0x65b
 801b324:	4283      	cmp	r3, r0
 801b326:	d859      	bhi.n	801b3dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801b328:	f240 6057 	movw	r0, #1623	; 0x657
 801b32c:	4283      	cmp	r3, r0
 801b32e:	d20e      	bcs.n	801b34e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b330:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801b334:	d24a      	bcs.n	801b3cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801b336:	f240 604e 	movw	r0, #1614	; 0x64e
 801b33a:	4283      	cmp	r3, r0
 801b33c:	d207      	bcs.n	801b34e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b33e:	f240 601a 	movw	r0, #1562	; 0x61a
 801b342:	4283      	cmp	r3, r0
 801b344:	d02a      	beq.n	801b39c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b346:	d821      	bhi.n	801b38c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801b348:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801b34c:	d35b      	bcc.n	801b406 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801b34e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801b352:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801b356:	f040 80d0 	bne.w	801b4fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801b35a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801b35e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801b362:	f040 80ca 	bne.w	801b4fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801b366:	00cb      	lsls	r3, r1, #3
 801b368:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801b36c:	7a13      	ldrb	r3, [r2, #8]
 801b36e:	0649      	lsls	r1, r1, #25
 801b370:	ea43 0300 	orr.w	r3, r3, r0
 801b374:	bf44      	itt	mi
 801b376:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b37a:	b21b      	sxthmi	r3, r3
 801b37c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b380:	1b5d      	subs	r5, r3, r5
 801b382:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801b386:	4610      	mov	r0, r2
 801b388:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801b38c:	f240 604b 	movw	r0, #1611	; 0x64b
 801b390:	4283      	cmp	r3, r0
 801b392:	d338      	bcc.n	801b406 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801b394:	f240 604c 	movw	r0, #1612	; 0x64c
 801b398:	4283      	cmp	r3, r0
 801b39a:	d9d8      	bls.n	801b34e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b39c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 801b3a0:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 801b3a4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801b3a8:	f040 80f2 	bne.w	801b590 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801b3ac:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801b3b0:	f040 80ee 	bne.w	801b590 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801b3b4:	00cb      	lsls	r3, r1, #3
 801b3b6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801b3ba:	7a13      	ldrb	r3, [r2, #8]
 801b3bc:	064e      	lsls	r6, r1, #25
 801b3be:	ea43 0300 	orr.w	r3, r3, r0
 801b3c2:	bf44      	itt	mi
 801b3c4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b3c8:	b21b      	sxthmi	r3, r3
 801b3ca:	e7d9      	b.n	801b380 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801b3cc:	f240 6054 	movw	r0, #1620	; 0x654
 801b3d0:	4283      	cmp	r3, r0
 801b3d2:	d8e3      	bhi.n	801b39c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b3d4:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801b3d8:	d9e0      	bls.n	801b39c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b3da:	e7b8      	b.n	801b34e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b3dc:	f240 6074 	movw	r0, #1652	; 0x674
 801b3e0:	4283      	cmp	r3, r0
 801b3e2:	d0b4      	beq.n	801b34e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b3e4:	d82d      	bhi.n	801b442 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801b3e6:	f240 605e 	movw	r0, #1630	; 0x65e
 801b3ea:	4283      	cmp	r3, r0
 801b3ec:	d804      	bhi.n	801b3f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801b3ee:	f240 605d 	movw	r0, #1629	; 0x65d
 801b3f2:	4283      	cmp	r3, r0
 801b3f4:	d3d2      	bcc.n	801b39c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b3f6:	e7aa      	b.n	801b34e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b3f8:	f240 605f 	movw	r0, #1631	; 0x65f
 801b3fc:	4283      	cmp	r3, r0
 801b3fe:	d0cd      	beq.n	801b39c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b400:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801b404:	d0a3      	beq.n	801b34e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b406:	00cb      	lsls	r3, r1, #3
 801b408:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801b40c:	7a13      	ldrb	r3, [r2, #8]
 801b40e:	0649      	lsls	r1, r1, #25
 801b410:	ea43 0300 	orr.w	r3, r3, r0
 801b414:	bf44      	itt	mi
 801b416:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b41a:	b21b      	sxthmi	r3, r3
 801b41c:	1b5d      	subs	r5, r3, r5
 801b41e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b422:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801b426:	7b53      	ldrb	r3, [r2, #13]
 801b428:	015b      	lsls	r3, r3, #5
 801b42a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801b42e:	7993      	ldrb	r3, [r2, #6]
 801b430:	430b      	orrs	r3, r1
 801b432:	005b      	lsls	r3, r3, #1
 801b434:	2105      	movs	r1, #5
 801b436:	fb93 f3f1 	sdiv	r3, r3, r1
 801b43a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801b43e:	440b      	add	r3, r1
 801b440:	e756      	b.n	801b2f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801b442:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801b446:	4283      	cmp	r3, r0
 801b448:	d809      	bhi.n	801b45e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801b44a:	f240 60df 	movw	r0, #1759	; 0x6df
 801b44e:	4283      	cmp	r3, r0
 801b450:	f4bf af7d 	bcs.w	801b34e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b454:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801b458:	2b05      	cmp	r3, #5
 801b45a:	d8d4      	bhi.n	801b406 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801b45c:	e777      	b.n	801b34e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b45e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801b462:	4283      	cmp	r3, r0
 801b464:	d09a      	beq.n	801b39c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b466:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801b46a:	4283      	cmp	r3, r0
 801b46c:	e7ca      	b.n	801b404 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801b46e:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801b472:	d22b      	bcs.n	801b4cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801b474:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801b478:	4283      	cmp	r3, r0
 801b47a:	d28f      	bcs.n	801b39c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b47c:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801b480:	4283      	cmp	r3, r0
 801b482:	d816      	bhi.n	801b4b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801b484:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801b488:	4283      	cmp	r3, r0
 801b48a:	f4bf af60 	bcs.w	801b34e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b48e:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801b492:	4283      	cmp	r3, r0
 801b494:	d80a      	bhi.n	801b4ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801b496:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801b49a:	4283      	cmp	r3, r0
 801b49c:	f4bf af57 	bcs.w	801b34e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b4a0:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801b4a4:	4283      	cmp	r3, r0
 801b4a6:	f43f af79 	beq.w	801b39c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b4aa:	e7ac      	b.n	801b406 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801b4ac:	f240 60ed 	movw	r0, #1773	; 0x6ed
 801b4b0:	e7f8      	b.n	801b4a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801b4b2:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801b4b6:	4283      	cmp	r3, r0
 801b4b8:	d802      	bhi.n	801b4c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801b4ba:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801b4be:	e798      	b.n	801b3f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 801b4c0:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801b4c4:	4283      	cmp	r3, r0
 801b4c6:	f47f af42 	bne.w	801b34e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b4ca:	e767      	b.n	801b39c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b4cc:	f640 00f6 	movw	r0, #2294	; 0x8f6
 801b4d0:	4283      	cmp	r3, r0
 801b4d2:	f43f af63 	beq.w	801b39c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b4d6:	d802      	bhi.n	801b4de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801b4d8:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801b4dc:	e7f2      	b.n	801b4c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801b4de:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801b4e2:	4283      	cmp	r3, r0
 801b4e4:	d805      	bhi.n	801b4f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801b4e6:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801b4ea:	4283      	cmp	r3, r0
 801b4ec:	f4ff af2f 	bcc.w	801b34e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b4f0:	e754      	b.n	801b39c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b4f2:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801b4f6:	4283      	cmp	r3, r0
 801b4f8:	e7af      	b.n	801b45a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801b4fa:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801b4fe:	4617      	mov	r7, r2
 801b500:	f102 0808 	add.w	r8, r2, #8
 801b504:	4666      	mov	r6, ip
 801b506:	6838      	ldr	r0, [r7, #0]
 801b508:	6879      	ldr	r1, [r7, #4]
 801b50a:	46e6      	mov	lr, ip
 801b50c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801b510:	3708      	adds	r7, #8
 801b512:	4547      	cmp	r7, r8
 801b514:	46f4      	mov	ip, lr
 801b516:	d1f6      	bne.n	801b506 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801b518:	6838      	ldr	r0, [r7, #0]
 801b51a:	f8ce 0000 	str.w	r0, [lr]
 801b51e:	88b9      	ldrh	r1, [r7, #4]
 801b520:	f8ae 1004 	strh.w	r1, [lr, #4]
 801b524:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801b528:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801b52c:	d009      	beq.n	801b542 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801b52e:	7b51      	ldrb	r1, [r2, #13]
 801b530:	7992      	ldrb	r2, [r2, #6]
 801b532:	0149      	lsls	r1, r1, #5
 801b534:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801b538:	4311      	orrs	r1, r2
 801b53a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801b53e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801b542:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801b546:	b2ad      	uxth	r5, r5
 801b548:	d00d      	beq.n	801b566 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801b54a:	442b      	add	r3, r5
 801b54c:	b29b      	uxth	r3, r3
 801b54e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801b552:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801b556:	10db      	asrs	r3, r3, #3
 801b558:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801b55c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801b560:	4313      	orrs	r3, r2
 801b562:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801b566:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801b56a:	00cb      	lsls	r3, r1, #3
 801b56c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b570:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801b574:	064f      	lsls	r7, r1, #25
 801b576:	ea43 0302 	orr.w	r3, r3, r2
 801b57a:	bf44      	itt	mi
 801b57c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b580:	b21b      	sxthmi	r3, r3
 801b582:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b586:	1b5b      	subs	r3, r3, r5
 801b588:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801b58c:	4632      	mov	r2, r6
 801b58e:	e6fa      	b.n	801b386 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801b590:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801b594:	4617      	mov	r7, r2
 801b596:	f102 0908 	add.w	r9, r2, #8
 801b59a:	4666      	mov	r6, ip
 801b59c:	6838      	ldr	r0, [r7, #0]
 801b59e:	6879      	ldr	r1, [r7, #4]
 801b5a0:	46e0      	mov	r8, ip
 801b5a2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801b5a6:	3708      	adds	r7, #8
 801b5a8:	454f      	cmp	r7, r9
 801b5aa:	46c4      	mov	ip, r8
 801b5ac:	d1f6      	bne.n	801b59c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801b5ae:	6838      	ldr	r0, [r7, #0]
 801b5b0:	f8c8 0000 	str.w	r0, [r8]
 801b5b4:	88b9      	ldrh	r1, [r7, #4]
 801b5b6:	f8a8 1004 	strh.w	r1, [r8, #4]
 801b5ba:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801b5be:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801b5c2:	d009      	beq.n	801b5d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801b5c4:	7b51      	ldrb	r1, [r2, #13]
 801b5c6:	7992      	ldrb	r2, [r2, #6]
 801b5c8:	0149      	lsls	r1, r1, #5
 801b5ca:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801b5ce:	4311      	orrs	r1, r2
 801b5d0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801b5d4:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801b5d8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801b5dc:	d00e      	beq.n	801b5fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801b5de:	eba3 030e 	sub.w	r3, r3, lr
 801b5e2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801b5e6:	b29b      	uxth	r3, r3
 801b5e8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801b5ec:	10db      	asrs	r3, r3, #3
 801b5ee:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801b5f2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801b5f6:	4313      	orrs	r3, r2
 801b5f8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801b5fc:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801b600:	00cb      	lsls	r3, r1, #3
 801b602:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b606:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801b60a:	0648      	lsls	r0, r1, #25
 801b60c:	ea43 0302 	orr.w	r3, r3, r2
 801b610:	bf44      	itt	mi
 801b612:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b616:	b21b      	sxthmi	r3, r3
 801b618:	1b5d      	subs	r5, r3, r5
 801b61a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801b61e:	e7b5      	b.n	801b58c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801b620 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801b620:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b624:	461e      	mov	r6, r3
 801b626:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b628:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b62c:	4604      	mov	r4, r0
 801b62e:	4617      	mov	r7, r2
 801b630:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b634:	f7f4 fc36 	bl	800fea4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801b638:	4605      	mov	r5, r0
 801b63a:	b918      	cbnz	r0, 801b644 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801b63c:	6030      	str	r0, [r6, #0]
 801b63e:	4628      	mov	r0, r5
 801b640:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b644:	683b      	ldr	r3, [r7, #0]
 801b646:	4601      	mov	r1, r0
 801b648:	68db      	ldr	r3, [r3, #12]
 801b64a:	4638      	mov	r0, r7
 801b64c:	4798      	blx	r3
 801b64e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801b652:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801b656:	4602      	mov	r2, r0
 801b658:	6030      	str	r0, [r6, #0]
 801b65a:	d213      	bcs.n	801b684 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801b65c:	4643      	mov	r3, r8
 801b65e:	4639      	mov	r1, r7
 801b660:	4620      	mov	r0, r4
 801b662:	f7ff fe3b 	bl	801b2dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801b666:	6030      	str	r0, [r6, #0]
 801b668:	6833      	ldr	r3, [r6, #0]
 801b66a:	b143      	cbz	r3, 801b67e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801b66c:	7b5a      	ldrb	r2, [r3, #13]
 801b66e:	7a9b      	ldrb	r3, [r3, #10]
 801b670:	0052      	lsls	r2, r2, #1
 801b672:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801b676:	4313      	orrs	r3, r2
 801b678:	bf0c      	ite	eq
 801b67a:	2301      	moveq	r3, #1
 801b67c:	2300      	movne	r3, #0
 801b67e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801b682:	e7dc      	b.n	801b63e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801b684:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801b688:	b29b      	uxth	r3, r3
 801b68a:	2b7f      	cmp	r3, #127	; 0x7f
 801b68c:	d804      	bhi.n	801b698 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801b68e:	4639      	mov	r1, r7
 801b690:	4620      	mov	r0, r4
 801b692:	f7ff fd17 	bl	801b0c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801b696:	e7e6      	b.n	801b666 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801b698:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801b69c:	2b00      	cmp	r3, #0
 801b69e:	d0e3      	beq.n	801b668 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801b6a0:	f640 1302 	movw	r3, #2306	; 0x902
 801b6a4:	429d      	cmp	r5, r3
 801b6a6:	d1df      	bne.n	801b668 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801b6a8:	4601      	mov	r1, r0
 801b6aa:	4620      	mov	r0, r4
 801b6ac:	f7ff fcdb 	bl	801b066 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801b6b0:	e7d9      	b.n	801b666 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801b6b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801b6b2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b6b6:	461e      	mov	r6, r3
 801b6b8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b6ba:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b6be:	4604      	mov	r4, r0
 801b6c0:	4617      	mov	r7, r2
 801b6c2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b6c6:	f7f4 fbed 	bl	800fea4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801b6ca:	4605      	mov	r5, r0
 801b6cc:	b918      	cbnz	r0, 801b6d6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801b6ce:	6030      	str	r0, [r6, #0]
 801b6d0:	4628      	mov	r0, r5
 801b6d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b6d6:	683b      	ldr	r3, [r7, #0]
 801b6d8:	4601      	mov	r1, r0
 801b6da:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801b6de:	4638      	mov	r0, r7
 801b6e0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801b6e4:	47c8      	blx	r9
 801b6e6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801b6ea:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801b6ee:	4602      	mov	r2, r0
 801b6f0:	6030      	str	r0, [r6, #0]
 801b6f2:	d213      	bcs.n	801b71c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801b6f4:	4643      	mov	r3, r8
 801b6f6:	4639      	mov	r1, r7
 801b6f8:	4620      	mov	r0, r4
 801b6fa:	f7ff fdef 	bl	801b2dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801b6fe:	6030      	str	r0, [r6, #0]
 801b700:	6833      	ldr	r3, [r6, #0]
 801b702:	b143      	cbz	r3, 801b716 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801b704:	7b5a      	ldrb	r2, [r3, #13]
 801b706:	7a9b      	ldrb	r3, [r3, #10]
 801b708:	0052      	lsls	r2, r2, #1
 801b70a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801b70e:	4313      	orrs	r3, r2
 801b710:	bf0c      	ite	eq
 801b712:	2301      	moveq	r3, #1
 801b714:	2300      	movne	r3, #0
 801b716:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801b71a:	e7d9      	b.n	801b6d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801b71c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801b720:	b29b      	uxth	r3, r3
 801b722:	2b7f      	cmp	r3, #127	; 0x7f
 801b724:	d804      	bhi.n	801b730 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801b726:	4639      	mov	r1, r7
 801b728:	4620      	mov	r0, r4
 801b72a:	f7ff fccb 	bl	801b0c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801b72e:	e7e6      	b.n	801b6fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801b730:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801b734:	2b00      	cmp	r3, #0
 801b736:	d0e3      	beq.n	801b700 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801b738:	f640 1302 	movw	r3, #2306	; 0x902
 801b73c:	429d      	cmp	r5, r3
 801b73e:	d1df      	bne.n	801b700 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801b740:	4601      	mov	r1, r0
 801b742:	4620      	mov	r0, r4
 801b744:	f7ff fc8f 	bl	801b066 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801b748:	e7d9      	b.n	801b6fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801b74a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801b74a:	b510      	push	{r4, lr}
 801b74c:	4604      	mov	r4, r0
 801b74e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801b752:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b754:	b1f1      	cbz	r1, 801b794 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801b756:	2b0a      	cmp	r3, #10
 801b758:	d02f      	beq.n	801b7ba <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801b75a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801b75c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801b760:	3901      	subs	r1, #1
 801b762:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801b764:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801b768:	1c51      	adds	r1, r2, #1
 801b76a:	b289      	uxth	r1, r1
 801b76c:	2901      	cmp	r1, #1
 801b76e:	bf84      	itt	hi
 801b770:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801b774:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801b776:	f103 0201 	add.w	r2, r3, #1
 801b77a:	8722      	strh	r2, [r4, #56]	; 0x38
 801b77c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801b77e:	bf98      	it	ls
 801b780:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801b782:	4413      	add	r3, r2
 801b784:	b29b      	uxth	r3, r3
 801b786:	2b09      	cmp	r3, #9
 801b788:	bf88      	it	hi
 801b78a:	3b0a      	subhi	r3, #10
 801b78c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b790:	8458      	strh	r0, [r3, #34]	; 0x22
 801b792:	e7dc      	b.n	801b74e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801b794:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b796:	2b0a      	cmp	r3, #10
 801b798:	d00f      	beq.n	801b7ba <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801b79a:	4620      	mov	r0, r4
 801b79c:	f7ff fc11 	bl	801afc2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801b7a0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b7a2:	1c5a      	adds	r2, r3, #1
 801b7a4:	8722      	strh	r2, [r4, #56]	; 0x38
 801b7a6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801b7a8:	4413      	add	r3, r2
 801b7aa:	b29b      	uxth	r3, r3
 801b7ac:	2b09      	cmp	r3, #9
 801b7ae:	bf88      	it	hi
 801b7b0:	3b0a      	subhi	r3, #10
 801b7b2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b7b6:	8458      	strh	r0, [r3, #34]	; 0x22
 801b7b8:	e7ec      	b.n	801b794 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801b7ba:	bd10      	pop	{r4, pc}

0801b7bc <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801b7bc:	b538      	push	{r3, r4, r5, lr}
 801b7be:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b7c0:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801b7c4:	4604      	mov	r4, r0
 801b7c6:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 801b7c8:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801b7ca:	3a01      	subs	r2, #1
 801b7cc:	8702      	strh	r2, [r0, #56]	; 0x38
 801b7ce:	1c5a      	adds	r2, r3, #1
 801b7d0:	b292      	uxth	r2, r2
 801b7d2:	2a09      	cmp	r2, #9
 801b7d4:	bf86      	itte	hi
 801b7d6:	3b09      	subhi	r3, #9
 801b7d8:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801b7da:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801b7dc:	f7ff ffb5 	bl	801b74a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801b7e0:	8c23      	ldrh	r3, [r4, #32]
 801b7e2:	2b01      	cmp	r3, #1
 801b7e4:	bf9c      	itt	ls
 801b7e6:	3301      	addls	r3, #1
 801b7e8:	8423      	strhls	r3, [r4, #32]
 801b7ea:	8be3      	ldrh	r3, [r4, #30]
 801b7ec:	b90b      	cbnz	r3, 801b7f2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801b7ee:	2302      	movs	r3, #2
 801b7f0:	83e3      	strh	r3, [r4, #30]
 801b7f2:	8be3      	ldrh	r3, [r4, #30]
 801b7f4:	3b01      	subs	r3, #1
 801b7f6:	b29b      	uxth	r3, r3
 801b7f8:	83e3      	strh	r3, [r4, #30]
 801b7fa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b7fe:	4628      	mov	r0, r5
 801b800:	8365      	strh	r5, [r4, #26]
 801b802:	bd38      	pop	{r3, r4, r5, pc}

0801b804 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801b804:	428a      	cmp	r2, r1
 801b806:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b80a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801b80c:	d931      	bls.n	801b872 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801b80e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 801b810:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801b814:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 801b818:	19ee      	adds	r6, r5, r7
 801b81a:	1a54      	subs	r4, r2, r1
 801b81c:	3e01      	subs	r6, #1
 801b81e:	fa1f fe84 	uxth.w	lr, r4
 801b822:	b2b4      	uxth	r4, r6
 801b824:	eba4 090e 	sub.w	r9, r4, lr
 801b828:	fa1f f989 	uxth.w	r9, r9
 801b82c:	2c09      	cmp	r4, #9
 801b82e:	4626      	mov	r6, r4
 801b830:	bf88      	it	hi
 801b832:	f1a4 060a 	subhi.w	r6, r4, #10
 801b836:	f1bc 0f00 	cmp.w	ip, #0
 801b83a:	bf08      	it	eq
 801b83c:	f04f 0c02 	moveq.w	ip, #2
 801b840:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b844:	f10c 3cff 	add.w	ip, ip, #4294967295
 801b848:	fa1f fc8c 	uxth.w	ip, ip
 801b84c:	3c01      	subs	r4, #1
 801b84e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801b852:	b2a4      	uxth	r4, r4
 801b854:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801b858:	454c      	cmp	r4, r9
 801b85a:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801b85e:	d1e5      	bne.n	801b82c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801b860:	eba5 050e 	sub.w	r5, r5, lr
 801b864:	eb0e 0408 	add.w	r4, lr, r8
 801b868:	8705      	strh	r5, [r0, #56]	; 0x38
 801b86a:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801b86e:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801b872:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801b874:	1a64      	subs	r4, r4, r1
 801b876:	4439      	add	r1, r7
 801b878:	b289      	uxth	r1, r1
 801b87a:	2909      	cmp	r1, #9
 801b87c:	bf88      	it	hi
 801b87e:	390a      	subhi	r1, #10
 801b880:	8704      	strh	r4, [r0, #56]	; 0x38
 801b882:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b884:	250a      	movs	r5, #10
 801b886:	b18a      	cbz	r2, 801b8ac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801b888:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801b88a:	3a01      	subs	r2, #1
 801b88c:	b292      	uxth	r2, r2
 801b88e:	3101      	adds	r1, #1
 801b890:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801b894:	8701      	strh	r1, [r0, #56]	; 0x38
 801b896:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b898:	b901      	cbnz	r1, 801b89c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801b89a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801b89c:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b89e:	3901      	subs	r1, #1
 801b8a0:	b289      	uxth	r1, r1
 801b8a2:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b8a4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801b8a8:	844c      	strh	r4, [r1, #34]	; 0x22
 801b8aa:	e7ec      	b.n	801b886 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801b8ac:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b8b0:	f7ff bf4b 	b.w	801b74a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801b8b4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801b8b4:	b570      	push	{r4, r5, r6, lr}
 801b8b6:	2500      	movs	r5, #0
 801b8b8:	4295      	cmp	r5, r2
 801b8ba:	d011      	beq.n	801b8e0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801b8bc:	8bc4      	ldrh	r4, [r0, #30]
 801b8be:	f831 6b02 	ldrh.w	r6, [r1], #2
 801b8c2:	4414      	add	r4, r2
 801b8c4:	3c01      	subs	r4, #1
 801b8c6:	1b64      	subs	r4, r4, r5
 801b8c8:	b2a4      	uxth	r4, r4
 801b8ca:	2c01      	cmp	r4, #1
 801b8cc:	bf88      	it	hi
 801b8ce:	3c02      	subhi	r4, #2
 801b8d0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b8d4:	8b64      	ldrh	r4, [r4, #26]
 801b8d6:	42b4      	cmp	r4, r6
 801b8d8:	d117      	bne.n	801b90a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801b8da:	3501      	adds	r5, #1
 801b8dc:	b2ad      	uxth	r5, r5
 801b8de:	e7eb      	b.n	801b8b8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801b8e0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b8e4:	2400      	movs	r4, #0
 801b8e6:	4413      	add	r3, r2
 801b8e8:	b2a2      	uxth	r2, r4
 801b8ea:	429a      	cmp	r2, r3
 801b8ec:	da0f      	bge.n	801b90e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801b8ee:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 801b8f0:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801b8f4:	4432      	add	r2, r6
 801b8f6:	b292      	uxth	r2, r2
 801b8f8:	2a09      	cmp	r2, #9
 801b8fa:	bf88      	it	hi
 801b8fc:	3a0a      	subhi	r2, #10
 801b8fe:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801b902:	3401      	adds	r4, #1
 801b904:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801b906:	42aa      	cmp	r2, r5
 801b908:	d0ee      	beq.n	801b8e8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801b90a:	2000      	movs	r0, #0
 801b90c:	bd70      	pop	{r4, r5, r6, pc}
 801b90e:	2001      	movs	r0, #1
 801b910:	e7fc      	b.n	801b90c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801b912 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801b912:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b916:	4605      	mov	r5, r0
 801b918:	4616      	mov	r6, r2
 801b91a:	1c8c      	adds	r4, r1, #2
 801b91c:	8809      	ldrh	r1, [r1, #0]
 801b91e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801b922:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801b926:	42b3      	cmp	r3, r6
 801b928:	d124      	bne.n	801b974 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801b92a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801b92e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801b932:	f001 070f 	and.w	r7, r1, #15
 801b936:	f8cd 8000 	str.w	r8, [sp]
 801b93a:	464b      	mov	r3, r9
 801b93c:	4652      	mov	r2, sl
 801b93e:	4621      	mov	r1, r4
 801b940:	4628      	mov	r0, r5
 801b942:	f7ff ffb7 	bl	801b8b4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801b946:	4683      	mov	fp, r0
 801b948:	b168      	cbz	r0, 801b966 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801b94a:	eb0a 0109 	add.w	r1, sl, r9
 801b94e:	4441      	add	r1, r8
 801b950:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801b954:	463a      	mov	r2, r7
 801b956:	4649      	mov	r1, r9
 801b958:	4628      	mov	r0, r5
 801b95a:	f7ff ff53 	bl	801b804 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801b95e:	4658      	mov	r0, fp
 801b960:	b003      	add	sp, #12
 801b962:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b966:	eb07 010a 	add.w	r1, r7, sl
 801b96a:	4449      	add	r1, r9
 801b96c:	4441      	add	r1, r8
 801b96e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801b972:	e7d2      	b.n	801b91a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801b974:	f04f 0b00 	mov.w	fp, #0
 801b978:	e7f1      	b.n	801b95e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801b97a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801b97a:	b570      	push	{r4, r5, r6, lr}
 801b97c:	8810      	ldrh	r0, [r2, #0]
 801b97e:	4298      	cmp	r0, r3
 801b980:	d817      	bhi.n	801b9b2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b982:	1e48      	subs	r0, r1, #1
 801b984:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801b988:	4298      	cmp	r0, r3
 801b98a:	d312      	bcc.n	801b9b2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b98c:	2400      	movs	r4, #0
 801b98e:	428c      	cmp	r4, r1
 801b990:	d20f      	bcs.n	801b9b2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b992:	1860      	adds	r0, r4, r1
 801b994:	1040      	asrs	r0, r0, #1
 801b996:	0085      	lsls	r5, r0, #2
 801b998:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801b99c:	42b3      	cmp	r3, r6
 801b99e:	d902      	bls.n	801b9a6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801b9a0:	3001      	adds	r0, #1
 801b9a2:	b284      	uxth	r4, r0
 801b9a4:	e7f3      	b.n	801b98e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b9a6:	d201      	bcs.n	801b9ac <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801b9a8:	b281      	uxth	r1, r0
 801b9aa:	e7f0      	b.n	801b98e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b9ac:	442a      	add	r2, r5
 801b9ae:	8850      	ldrh	r0, [r2, #2]
 801b9b0:	bd70      	pop	{r4, r5, r6, pc}
 801b9b2:	2000      	movs	r0, #0
 801b9b4:	e7fc      	b.n	801b9b0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801b9b6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801b9b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b9ba:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801b9bc:	886f      	ldrh	r7, [r5, #2]
 801b9be:	4604      	mov	r4, r0
 801b9c0:	087f      	lsrs	r7, r7, #1
 801b9c2:	260b      	movs	r6, #11
 801b9c4:	3e01      	subs	r6, #1
 801b9c6:	d013      	beq.n	801b9f0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b9c8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801b9ca:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b9ce:	462a      	mov	r2, r5
 801b9d0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b9d4:	4639      	mov	r1, r7
 801b9d6:	4643      	mov	r3, r8
 801b9d8:	4620      	mov	r0, r4
 801b9da:	f7ff ffce 	bl	801b97a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801b9de:	b138      	cbz	r0, 801b9f0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b9e0:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801b9e4:	4642      	mov	r2, r8
 801b9e6:	4620      	mov	r0, r4
 801b9e8:	f7ff ff93 	bl	801b912 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801b9ec:	2800      	cmp	r0, #0
 801b9ee:	d1e9      	bne.n	801b9c4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801b9f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801b9f4 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 801b9f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b9f6:	b08d      	sub	sp, #52	; 0x34
 801b9f8:	2300      	movs	r3, #0
 801b9fa:	9304      	str	r3, [sp, #16]
 801b9fc:	9305      	str	r3, [sp, #20]
 801b9fe:	9306      	str	r3, [sp, #24]
 801ba00:	aa04      	add	r2, sp, #16
 801ba02:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 801ba06:	9307      	str	r3, [sp, #28]
 801ba08:	f100 0640 	add.w	r6, r0, #64	; 0x40
 801ba0c:	4613      	mov	r3, r2
 801ba0e:	f101 0710 	add.w	r7, r1, #16
 801ba12:	eddf 7a0f 	vldr	s15, [pc, #60]	; 801ba50 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 801ba16:	460c      	mov	r4, r1
 801ba18:	4605      	mov	r5, r0
 801ba1a:	ecb4 7a01 	vldmia	r4!, {s14}
 801ba1e:	ecf5 6a01 	vldmia	r5!, {s13}
 801ba22:	42bc      	cmp	r4, r7
 801ba24:	eee6 7a87 	vfma.f32	s15, s13, s14
 801ba28:	d1f7      	bne.n	801ba1a <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 801ba2a:	3010      	adds	r0, #16
 801ba2c:	42b0      	cmp	r0, r6
 801ba2e:	ece2 7a01 	vstmia	r2!, {s15}
 801ba32:	d1ee      	bne.n	801ba12 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 801ba34:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801ba36:	ac0c      	add	r4, sp, #48	; 0x30
 801ba38:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 801ba3c:	ed9d 0a08 	vldr	s0, [sp, #32]
 801ba40:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 801ba44:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 801ba48:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 801ba4c:	b00d      	add	sp, #52	; 0x34
 801ba4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ba50:	00000000 	.word	0x00000000

0801ba54 <_ZN8touchgfx9Matrix4x4C1Ev>:
 801ba54:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 801ba84 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 801ba58:	2300      	movs	r3, #0
 801ba5a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801ba5e:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 801ba62:	2200      	movs	r2, #0
 801ba64:	4293      	cmp	r3, r2
 801ba66:	f102 0201 	add.w	r2, r2, #1
 801ba6a:	bf14      	ite	ne
 801ba6c:	eef0 6a47 	vmovne.f32	s13, s14
 801ba70:	eef0 6a67 	vmoveq.f32	s13, s15
 801ba74:	2a04      	cmp	r2, #4
 801ba76:	ece1 6a01 	vstmia	r1!, {s13}
 801ba7a:	d1f3      	bne.n	801ba64 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 801ba7c:	3301      	adds	r3, #1
 801ba7e:	2b04      	cmp	r3, #4
 801ba80:	d1ed      	bne.n	801ba5e <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 801ba82:	4770      	bx	lr
 801ba84:	00000000 	.word	0x00000000

0801ba88 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 801ba88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ba8c:	460c      	mov	r4, r1
 801ba8e:	4605      	mov	r5, r0
 801ba90:	4690      	mov	r8, r2
 801ba92:	f7ff ffdf 	bl	801ba54 <_ZN8touchgfx9Matrix4x4C1Ev>
 801ba96:	4628      	mov	r0, r5
 801ba98:	4621      	mov	r1, r4
 801ba9a:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 801ba9e:	2300      	movs	r3, #0
 801baa0:	eddf 7a0f 	vldr	s15, [pc, #60]	; 801bae0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 801baa4:	eb08 0603 	add.w	r6, r8, r3
 801baa8:	460f      	mov	r7, r1
 801baaa:	2400      	movs	r4, #0
 801baac:	4632      	mov	r2, r6
 801baae:	ecf7 6a01 	vldmia	r7!, {s13}
 801bab2:	ed92 7a00 	vldr	s14, [r2]
 801bab6:	3401      	adds	r4, #1
 801bab8:	2c04      	cmp	r4, #4
 801baba:	f106 0610 	add.w	r6, r6, #16
 801babe:	eee6 7a87 	vfma.f32	s15, s13, s14
 801bac2:	d1f3      	bne.n	801baac <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 801bac4:	18c2      	adds	r2, r0, r3
 801bac6:	3304      	adds	r3, #4
 801bac8:	2b10      	cmp	r3, #16
 801baca:	edc2 7a00 	vstr	s15, [r2]
 801bace:	d1e7      	bne.n	801baa0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 801bad0:	3110      	adds	r1, #16
 801bad2:	4561      	cmp	r1, ip
 801bad4:	f100 0010 	add.w	r0, r0, #16
 801bad8:	d1e1      	bne.n	801ba9e <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 801bada:	4628      	mov	r0, r5
 801badc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801bae0:	00000000 	.word	0x00000000

0801bae4 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 801bae4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801bae8:	ee87 0a80 	vdiv.f32	s0, s15, s0
 801baec:	f100 0320 	add.w	r3, r0, #32
 801baf0:	3030      	adds	r0, #48	; 0x30
 801baf2:	ecf3 7a01 	vldmia	r3!, {s15}
 801baf6:	ee60 7a27 	vmul.f32	s15, s0, s15
 801bafa:	4283      	cmp	r3, r0
 801bafc:	edc3 7a03 	vstr	s15, [r3, #12]
 801bb00:	d1f7      	bne.n	801baf2 <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 801bb02:	4770      	bx	lr

0801bb04 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 801bb04:	b510      	push	{r4, lr}
 801bb06:	ed2d 8b02 	vpush	{d8}
 801bb0a:	4604      	mov	r4, r0
 801bb0c:	eef0 8a40 	vmov.f32	s17, s0
 801bb10:	f00e fed2 	bl	802a8b8 <sinf>
 801bb14:	eeb0 8a40 	vmov.f32	s16, s0
 801bb18:	eeb0 0a68 	vmov.f32	s0, s17
 801bb1c:	f00e fe88 	bl	802a830 <cosf>
 801bb20:	f104 0310 	add.w	r3, r4, #16
 801bb24:	f104 0220 	add.w	r2, r4, #32
 801bb28:	eeb1 6a48 	vneg.f32	s12, s16
 801bb2c:	edd3 7a04 	vldr	s15, [r3, #16]
 801bb30:	edd3 6a00 	vldr	s13, [r3]
 801bb34:	ee26 7a27 	vmul.f32	s14, s12, s15
 801bb38:	ee67 7a80 	vmul.f32	s15, s15, s0
 801bb3c:	eea6 7a80 	vfma.f32	s14, s13, s0
 801bb40:	eee6 7a88 	vfma.f32	s15, s13, s16
 801bb44:	eca3 7a01 	vstmia	r3!, {s14}
 801bb48:	429a      	cmp	r2, r3
 801bb4a:	edc3 7a03 	vstr	s15, [r3, #12]
 801bb4e:	d1ed      	bne.n	801bb2c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 801bb50:	ecbd 8b02 	vpop	{d8}
 801bb54:	4620      	mov	r0, r4
 801bb56:	bd10      	pop	{r4, pc}

0801bb58 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 801bb58:	b510      	push	{r4, lr}
 801bb5a:	ed2d 8b02 	vpush	{d8}
 801bb5e:	4604      	mov	r4, r0
 801bb60:	eef0 8a40 	vmov.f32	s17, s0
 801bb64:	f00e fea8 	bl	802a8b8 <sinf>
 801bb68:	eeb0 8a40 	vmov.f32	s16, s0
 801bb6c:	eeb0 0a68 	vmov.f32	s0, s17
 801bb70:	f00e fe5e 	bl	802a830 <cosf>
 801bb74:	4623      	mov	r3, r4
 801bb76:	f104 0210 	add.w	r2, r4, #16
 801bb7a:	eeb1 6a48 	vneg.f32	s12, s16
 801bb7e:	edd3 7a08 	vldr	s15, [r3, #32]
 801bb82:	edd3 6a00 	vldr	s13, [r3]
 801bb86:	ee27 7a88 	vmul.f32	s14, s15, s16
 801bb8a:	ee67 7a80 	vmul.f32	s15, s15, s0
 801bb8e:	eea6 7a80 	vfma.f32	s14, s13, s0
 801bb92:	eee6 7a26 	vfma.f32	s15, s12, s13
 801bb96:	eca3 7a01 	vstmia	r3!, {s14}
 801bb9a:	429a      	cmp	r2, r3
 801bb9c:	edc3 7a07 	vstr	s15, [r3, #28]
 801bba0:	d1ed      	bne.n	801bb7e <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 801bba2:	ecbd 8b02 	vpop	{d8}
 801bba6:	4620      	mov	r0, r4
 801bba8:	bd10      	pop	{r4, pc}

0801bbaa <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 801bbaa:	b510      	push	{r4, lr}
 801bbac:	ed2d 8b02 	vpush	{d8}
 801bbb0:	4604      	mov	r4, r0
 801bbb2:	eef0 8a40 	vmov.f32	s17, s0
 801bbb6:	f00e fe7f 	bl	802a8b8 <sinf>
 801bbba:	eeb0 8a40 	vmov.f32	s16, s0
 801bbbe:	eeb0 0a68 	vmov.f32	s0, s17
 801bbc2:	f00e fe35 	bl	802a830 <cosf>
 801bbc6:	4623      	mov	r3, r4
 801bbc8:	f104 0210 	add.w	r2, r4, #16
 801bbcc:	eeb1 6a48 	vneg.f32	s12, s16
 801bbd0:	edd3 7a04 	vldr	s15, [r3, #16]
 801bbd4:	edd3 6a00 	vldr	s13, [r3]
 801bbd8:	ee26 7a27 	vmul.f32	s14, s12, s15
 801bbdc:	ee67 7a80 	vmul.f32	s15, s15, s0
 801bbe0:	eea6 7a80 	vfma.f32	s14, s13, s0
 801bbe4:	eee6 7a88 	vfma.f32	s15, s13, s16
 801bbe8:	eca3 7a01 	vstmia	r3!, {s14}
 801bbec:	429a      	cmp	r2, r3
 801bbee:	edc3 7a03 	vstr	s15, [r3, #12]
 801bbf2:	d1ed      	bne.n	801bbd0 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 801bbf4:	ecbd 8b02 	vpop	{d8}
 801bbf8:	4620      	mov	r0, r4
 801bbfa:	bd10      	pop	{r4, pc}

0801bbfc <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 801bbfc:	4603      	mov	r3, r0
 801bbfe:	f100 0210 	add.w	r2, r0, #16
 801bc02:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 801bc06:	edd3 7a00 	vldr	s15, [r3]
 801bc0a:	eee7 7a00 	vfma.f32	s15, s14, s0
 801bc0e:	ece3 7a01 	vstmia	r3!, {s15}
 801bc12:	4293      	cmp	r3, r2
 801bc14:	d1f5      	bne.n	801bc02 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 801bc16:	4770      	bx	lr

0801bc18 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 801bc18:	f100 0310 	add.w	r3, r0, #16
 801bc1c:	f100 0220 	add.w	r2, r0, #32
 801bc20:	ed93 7a08 	vldr	s14, [r3, #32]
 801bc24:	edd3 7a00 	vldr	s15, [r3]
 801bc28:	eee7 7a00 	vfma.f32	s15, s14, s0
 801bc2c:	ece3 7a01 	vstmia	r3!, {s15}
 801bc30:	4293      	cmp	r3, r2
 801bc32:	d1f5      	bne.n	801bc20 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 801bc34:	4770      	bx	lr

0801bc36 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 801bc36:	f100 0320 	add.w	r3, r0, #32
 801bc3a:	f100 0230 	add.w	r2, r0, #48	; 0x30
 801bc3e:	ed93 7a04 	vldr	s14, [r3, #16]
 801bc42:	edd3 7a00 	vldr	s15, [r3]
 801bc46:	eee7 7a00 	vfma.f32	s15, s14, s0
 801bc4a:	ece3 7a01 	vstmia	r3!, {s15}
 801bc4e:	4293      	cmp	r3, r2
 801bc50:	d1f5      	bne.n	801bc3e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 801bc52:	4770      	bx	lr

0801bc54 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 801bc54:	4603      	mov	r3, r0
 801bc56:	f100 0210 	add.w	r2, r0, #16
 801bc5a:	edd3 7a00 	vldr	s15, [r3]
 801bc5e:	ee67 7a80 	vmul.f32	s15, s15, s0
 801bc62:	ece3 7a01 	vstmia	r3!, {s15}
 801bc66:	4293      	cmp	r3, r2
 801bc68:	d1f7      	bne.n	801bc5a <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 801bc6a:	4770      	bx	lr

0801bc6c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 801bc6c:	f100 0310 	add.w	r3, r0, #16
 801bc70:	f100 0220 	add.w	r2, r0, #32
 801bc74:	edd3 7a00 	vldr	s15, [r3]
 801bc78:	ee67 7a80 	vmul.f32	s15, s15, s0
 801bc7c:	ece3 7a01 	vstmia	r3!, {s15}
 801bc80:	4293      	cmp	r3, r2
 801bc82:	d1f7      	bne.n	801bc74 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 801bc84:	4770      	bx	lr

0801bc86 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 801bc86:	f100 0320 	add.w	r3, r0, #32
 801bc8a:	f100 0230 	add.w	r2, r0, #48	; 0x30
 801bc8e:	edd3 7a00 	vldr	s15, [r3]
 801bc92:	ee67 7a80 	vmul.f32	s15, s15, s0
 801bc96:	ece3 7a01 	vstmia	r3!, {s15}
 801bc9a:	4293      	cmp	r3, r2
 801bc9c:	d1f7      	bne.n	801bc8e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 801bc9e:	4770      	bx	lr

0801bca0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801bca0:	b570      	push	{r4, r5, r6, lr}
 801bca2:	694a      	ldr	r2, [r1, #20]
 801bca4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801bca6:	684b      	ldr	r3, [r1, #4]
 801bca8:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801bcaa:	1b54      	subs	r4, r2, r5
 801bcac:	f000 8106 	beq.w	801bebc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801bcb0:	1b9b      	subs	r3, r3, r6
 801bcb2:	d003      	beq.n	801bcbc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801bcb4:	4363      	muls	r3, r4
 801bcb6:	2210      	movs	r2, #16
 801bcb8:	fb93 f3f2 	sdiv	r3, r3, r2
 801bcbc:	680c      	ldr	r4, [r1, #0]
 801bcbe:	698a      	ldr	r2, [r1, #24]
 801bcc0:	1b65      	subs	r5, r4, r5
 801bcc2:	f000 80fd 	beq.w	801bec0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801bcc6:	1b92      	subs	r2, r2, r6
 801bcc8:	d003      	beq.n	801bcd2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801bcca:	436a      	muls	r2, r5
 801bccc:	2410      	movs	r4, #16
 801bcce:	fb92 f2f4 	sdiv	r2, r2, r4
 801bcd2:	1a9b      	subs	r3, r3, r2
 801bcd4:	ee07 3a90 	vmov	s15, r3
 801bcd8:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801befc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801bcdc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801bce0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bce4:	ee67 7a84 	vmul.f32	s15, s15, s8
 801bce8:	460a      	mov	r2, r1
 801bcea:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801bcee:	4603      	mov	r3, r0
 801bcf0:	f100 040c 	add.w	r4, r0, #12
 801bcf4:	eeb1 6a43 	vneg.f32	s12, s6
 801bcf8:	edd2 7a02 	vldr	s15, [r2, #8]
 801bcfc:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801bd00:	3214      	adds	r2, #20
 801bd02:	ece3 6a01 	vstmia	r3!, {s13}
 801bd06:	ed52 7a02 	vldr	s15, [r2, #-8]
 801bd0a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bd0e:	429c      	cmp	r4, r3
 801bd10:	edc3 7a02 	vstr	s15, [r3, #8]
 801bd14:	ed52 7a01 	vldr	s15, [r2, #-4]
 801bd18:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bd1c:	edc3 7a05 	vstr	s15, [r3, #20]
 801bd20:	d1ea      	bne.n	801bcf8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801bd22:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801bd24:	698b      	ldr	r3, [r1, #24]
 801bd26:	edd0 4a02 	vldr	s9, [r0, #8]
 801bd2a:	edd0 3a00 	vldr	s7, [r0]
 801bd2e:	edd0 6a01 	vldr	s13, [r0, #4]
 801bd32:	ed90 5a05 	vldr	s10, [r0, #20]
 801bd36:	ed90 2a03 	vldr	s4, [r0, #12]
 801bd3a:	edd0 5a04 	vldr	s11, [r0, #16]
 801bd3e:	ed90 1a07 	vldr	s2, [r0, #28]
 801bd42:	edd0 2a06 	vldr	s5, [r0, #24]
 801bd46:	1a9b      	subs	r3, r3, r2
 801bd48:	ee07 3a90 	vmov	s15, r3
 801bd4c:	684b      	ldr	r3, [r1, #4]
 801bd4e:	1a9b      	subs	r3, r3, r2
 801bd50:	ee07 3a10 	vmov	s14, r3
 801bd54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801bd58:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801bd5c:	ee67 7a84 	vmul.f32	s15, s15, s8
 801bd60:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801bd64:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bd68:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801bd6c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bd70:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801bd74:	eee6 7a87 	vfma.f32	s15, s13, s14
 801bd78:	ee32 5a45 	vsub.f32	s10, s4, s10
 801bd7c:	ee67 7a83 	vmul.f32	s15, s15, s6
 801bd80:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801bd84:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801bd86:	694a      	ldr	r2, [r1, #20]
 801bd88:	1b13      	subs	r3, r2, r4
 801bd8a:	ee07 3a10 	vmov	s14, r3
 801bd8e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bd92:	680b      	ldr	r3, [r1, #0]
 801bd94:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bd98:	1b1b      	subs	r3, r3, r4
 801bd9a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801bd9e:	ee07 3a10 	vmov	s14, r3
 801bda2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bda6:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bdaa:	eee6 4a87 	vfma.f32	s9, s13, s14
 801bdae:	ee64 4a86 	vmul.f32	s9, s9, s12
 801bdb2:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801bdb6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801bdb8:	698b      	ldr	r3, [r1, #24]
 801bdba:	1a9b      	subs	r3, r3, r2
 801bdbc:	ee06 3a90 	vmov	s13, r3
 801bdc0:	684b      	ldr	r3, [r1, #4]
 801bdc2:	1a9b      	subs	r3, r3, r2
 801bdc4:	ee07 3a10 	vmov	s14, r3
 801bdc8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801bdcc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bdd0:	ee66 6a84 	vmul.f32	s13, s13, s8
 801bdd4:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bdd8:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801bddc:	eee5 6a87 	vfma.f32	s13, s11, s14
 801bde0:	ee66 6a83 	vmul.f32	s13, s13, s6
 801bde4:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801bde8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801bdea:	694a      	ldr	r2, [r1, #20]
 801bdec:	1b13      	subs	r3, r2, r4
 801bdee:	ee07 3a10 	vmov	s14, r3
 801bdf2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bdf6:	680b      	ldr	r3, [r1, #0]
 801bdf8:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bdfc:	1b1b      	subs	r3, r3, r4
 801bdfe:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801be02:	ee07 3a10 	vmov	s14, r3
 801be06:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801be0a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801be0e:	eea5 5a87 	vfma.f32	s10, s11, s14
 801be12:	edd0 5a08 	vldr	s11, [r0, #32]
 801be16:	ee25 5a06 	vmul.f32	s10, s10, s12
 801be1a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801be1e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801be22:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801be24:	698b      	ldr	r3, [r1, #24]
 801be26:	1a9b      	subs	r3, r3, r2
 801be28:	ee07 3a10 	vmov	s14, r3
 801be2c:	684b      	ldr	r3, [r1, #4]
 801be2e:	1a9b      	subs	r3, r3, r2
 801be30:	ee01 3a90 	vmov	s3, r3
 801be34:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801be38:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801be3c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801be40:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801be44:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801be48:	ee61 1a84 	vmul.f32	s3, s3, s8
 801be4c:	eea1 7a21 	vfma.f32	s14, s2, s3
 801be50:	ee27 7a03 	vmul.f32	s14, s14, s6
 801be54:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801be58:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801be5a:	694a      	ldr	r2, [r1, #20]
 801be5c:	1b13      	subs	r3, r2, r4
 801be5e:	ee03 3a10 	vmov	s6, r3
 801be62:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801be66:	680b      	ldr	r3, [r1, #0]
 801be68:	ee23 3a04 	vmul.f32	s6, s6, s8
 801be6c:	1b1b      	subs	r3, r3, r4
 801be6e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801be72:	ee03 3a10 	vmov	s6, r3
 801be76:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801be7a:	ee23 4a04 	vmul.f32	s8, s6, s8
 801be7e:	eee1 5a04 	vfma.f32	s11, s2, s8
 801be82:	ee25 6a86 	vmul.f32	s12, s11, s12
 801be86:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801be8a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801be8e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801be92:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801be96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be9a:	dd13      	ble.n	801bec4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801be9c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801bea0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801bea4:	63c3      	str	r3, [r0, #60]	; 0x3c
 801bea6:	eee3 7a87 	vfma.f32	s15, s7, s14
 801beaa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801beae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801beb2:	dd15      	ble.n	801bee0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801beb4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801beb8:	6403      	str	r3, [r0, #64]	; 0x40
 801beba:	bd70      	pop	{r4, r5, r6, pc}
 801bebc:	4623      	mov	r3, r4
 801bebe:	e6fd      	b.n	801bcbc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801bec0:	462a      	mov	r2, r5
 801bec2:	e706      	b.n	801bcd2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801bec4:	d502      	bpl.n	801becc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801bec6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801beca:	e7e9      	b.n	801bea0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801becc:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801bed0:	eea3 2a85 	vfma.f32	s4, s7, s10
 801bed4:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801bed8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bedc:	dade      	bge.n	801be9c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801bede:	e7f2      	b.n	801bec6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801bee0:	d502      	bpl.n	801bee8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801bee2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801bee6:	e7e7      	b.n	801beb8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801bee8:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801beec:	eee3 4a86 	vfma.f32	s9, s7, s12
 801bef0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801bef4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bef8:	dadc      	bge.n	801beb4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801befa:	e7f2      	b.n	801bee2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801befc:	3d800000 	.word	0x3d800000

0801bf00 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801bf00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bf04:	2714      	movs	r7, #20
 801bf06:	435f      	muls	r7, r3
 801bf08:	eb02 0c07 	add.w	ip, r2, r7
 801bf0c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801bf10:	f115 0e0f 	adds.w	lr, r5, #15
 801bf14:	f100 80a2 	bmi.w	801c05c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801bf18:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801bf1c:	9c08      	ldr	r4, [sp, #32]
 801bf1e:	f8c0 e014 	str.w	lr, [r0, #20]
 801bf22:	2614      	movs	r6, #20
 801bf24:	4366      	muls	r6, r4
 801bf26:	eb02 0806 	add.w	r8, r2, r6
 801bf2a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801bf2e:	f115 040f 	adds.w	r4, r5, #15
 801bf32:	f100 809f 	bmi.w	801c074 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801bf36:	1124      	asrs	r4, r4, #4
 801bf38:	eba4 040e 	sub.w	r4, r4, lr
 801bf3c:	6184      	str	r4, [r0, #24]
 801bf3e:	2c00      	cmp	r4, #0
 801bf40:	f000 808a 	beq.w	801c058 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801bf44:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801bf48:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801bf4c:	5995      	ldr	r5, [r2, r6]
 801bf4e:	eba4 0809 	sub.w	r8, r4, r9
 801bf52:	59d4      	ldr	r4, [r2, r7]
 801bf54:	eba5 0a04 	sub.w	sl, r5, r4
 801bf58:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801bf5c:	fb0e fe05 	mul.w	lr, lr, r5
 801bf60:	fb0a ee19 	mls	lr, sl, r9, lr
 801bf64:	fb08 e404 	mla	r4, r8, r4, lr
 801bf68:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801bf6c:	3c01      	subs	r4, #1
 801bf6e:	19a4      	adds	r4, r4, r6
 801bf70:	f100 808c 	bmi.w	801c08c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801bf74:	fb94 fef6 	sdiv	lr, r4, r6
 801bf78:	f8c0 e000 	str.w	lr, [r0]
 801bf7c:	fb06 441e 	mls	r4, r6, lr, r4
 801bf80:	6104      	str	r4, [r0, #16]
 801bf82:	2d00      	cmp	r5, #0
 801bf84:	f2c0 8095 	blt.w	801c0b2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801bf88:	fb95 f4f6 	sdiv	r4, r5, r6
 801bf8c:	6044      	str	r4, [r0, #4]
 801bf8e:	fb06 5514 	mls	r5, r6, r4, r5
 801bf92:	6085      	str	r5, [r0, #8]
 801bf94:	60c6      	str	r6, [r0, #12]
 801bf96:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801bf9a:	6945      	ldr	r5, [r0, #20]
 801bf9c:	59d2      	ldr	r2, [r2, r7]
 801bf9e:	eddf 6a4d 	vldr	s13, [pc, #308]	; 801c0d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801bfa2:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801bfa6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801bfaa:	ee07 4a10 	vmov	s14, r4
 801bfae:	6804      	ldr	r4, [r0, #0]
 801bfb0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801bfb4:	ee07 2a90 	vmov	s15, r2
 801bfb8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bfbc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801bfc0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801bfc4:	ee27 7a26 	vmul.f32	s14, s14, s13
 801bfc8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bfcc:	edd3 6a00 	vldr	s13, [r3]
 801bfd0:	eee6 6a07 	vfma.f32	s13, s12, s14
 801bfd4:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801bfd8:	eee6 6a27 	vfma.f32	s13, s12, s15
 801bfdc:	edc0 6a07 	vstr	s13, [r0, #28]
 801bfe0:	edd0 6a01 	vldr	s13, [r0, #4]
 801bfe4:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801bfe8:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801bfec:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801bff0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801bff4:	ed80 6a08 	vstr	s12, [r0, #32]
 801bff8:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801bffa:	6242      	str	r2, [r0, #36]	; 0x24
 801bffc:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801c000:	ed93 6a03 	vldr	s12, [r3, #12]
 801c004:	eea5 6a87 	vfma.f32	s12, s11, s14
 801c008:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801c00c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801c010:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801c014:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801c018:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801c01c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801c020:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801c024:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801c026:	6302      	str	r2, [r0, #48]	; 0x30
 801c028:	ed93 6a06 	vldr	s12, [r3, #24]
 801c02c:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801c030:	eea5 6a87 	vfma.f32	s12, s11, s14
 801c034:	eeb0 7a46 	vmov.f32	s14, s12
 801c038:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801c03c:	eea6 7a27 	vfma.f32	s14, s12, s15
 801c040:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801c044:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801c048:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801c04c:	eee6 7a87 	vfma.f32	s15, s13, s14
 801c050:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801c054:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801c056:	63c3      	str	r3, [r0, #60]	; 0x3c
 801c058:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c05c:	f1c5 0501 	rsb	r5, r5, #1
 801c060:	f015 050f 	ands.w	r5, r5, #15
 801c064:	bf18      	it	ne
 801c066:	2501      	movne	r5, #1
 801c068:	2410      	movs	r4, #16
 801c06a:	fb9e fef4 	sdiv	lr, lr, r4
 801c06e:	ebae 0e05 	sub.w	lr, lr, r5
 801c072:	e753      	b.n	801bf1c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801c074:	f1c5 0501 	rsb	r5, r5, #1
 801c078:	f015 050f 	ands.w	r5, r5, #15
 801c07c:	bf18      	it	ne
 801c07e:	2501      	movne	r5, #1
 801c080:	f04f 0910 	mov.w	r9, #16
 801c084:	fb94 f4f9 	sdiv	r4, r4, r9
 801c088:	1b64      	subs	r4, r4, r5
 801c08a:	e755      	b.n	801bf38 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801c08c:	4264      	negs	r4, r4
 801c08e:	fb94 fef6 	sdiv	lr, r4, r6
 801c092:	f1ce 0800 	rsb	r8, lr, #0
 801c096:	fb06 441e 	mls	r4, r6, lr, r4
 801c09a:	f8c0 8000 	str.w	r8, [r0]
 801c09e:	6104      	str	r4, [r0, #16]
 801c0a0:	2c00      	cmp	r4, #0
 801c0a2:	f43f af6e 	beq.w	801bf82 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801c0a6:	ea6f 0e0e 	mvn.w	lr, lr
 801c0aa:	f8c0 e000 	str.w	lr, [r0]
 801c0ae:	1b34      	subs	r4, r6, r4
 801c0b0:	e766      	b.n	801bf80 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801c0b2:	426d      	negs	r5, r5
 801c0b4:	fb95 f4f6 	sdiv	r4, r5, r6
 801c0b8:	f1c4 0e00 	rsb	lr, r4, #0
 801c0bc:	fb06 5514 	mls	r5, r6, r4, r5
 801c0c0:	f8c0 e004 	str.w	lr, [r0, #4]
 801c0c4:	6085      	str	r5, [r0, #8]
 801c0c6:	2d00      	cmp	r5, #0
 801c0c8:	f43f af64 	beq.w	801bf94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801c0cc:	43e4      	mvns	r4, r4
 801c0ce:	6044      	str	r4, [r0, #4]
 801c0d0:	1b75      	subs	r5, r6, r5
 801c0d2:	e75e      	b.n	801bf92 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801c0d4:	3d800000 	.word	0x3d800000

0801c0d8 <_ZN8touchgfx7Unicode6strlenEPKt>:
 801c0d8:	4602      	mov	r2, r0
 801c0da:	b148      	cbz	r0, 801c0f0 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801c0dc:	2300      	movs	r3, #0
 801c0de:	b298      	uxth	r0, r3
 801c0e0:	3301      	adds	r3, #1
 801c0e2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801c0e6:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801c0ea:	2900      	cmp	r1, #0
 801c0ec:	d1f7      	bne.n	801c0de <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801c0ee:	4770      	bx	lr
 801c0f0:	4770      	bx	lr

0801c0f2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801c0f2:	b530      	push	{r4, r5, lr}
 801c0f4:	4604      	mov	r4, r0
 801c0f6:	b159      	cbz	r1, 801c110 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801c0f8:	b148      	cbz	r0, 801c10e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801c0fa:	2300      	movs	r3, #0
 801c0fc:	b298      	uxth	r0, r3
 801c0fe:	4282      	cmp	r2, r0
 801c100:	d905      	bls.n	801c10e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801c102:	5ccd      	ldrb	r5, [r1, r3]
 801c104:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801c108:	3301      	adds	r3, #1
 801c10a:	2d00      	cmp	r5, #0
 801c10c:	d1f6      	bne.n	801c0fc <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801c10e:	bd30      	pop	{r4, r5, pc}
 801c110:	4608      	mov	r0, r1
 801c112:	e7fc      	b.n	801c10e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801c114 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 801c114:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c116:	b08b      	sub	sp, #44	; 0x2c
 801c118:	468c      	mov	ip, r1
 801c11a:	2100      	movs	r1, #0
 801c11c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801c120:	4604      	mov	r4, r0
 801c122:	261f      	movs	r6, #31
 801c124:	af01      	add	r7, sp, #4
 801c126:	fb94 fef3 	sdiv	lr, r4, r3
 801c12a:	fb03 441e 	mls	r4, r3, lr, r4
 801c12e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801c132:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801c136:	b2ec      	uxtb	r4, r5
 801c138:	2d09      	cmp	r5, #9
 801c13a:	bfd4      	ite	le
 801c13c:	3430      	addle	r4, #48	; 0x30
 801c13e:	3457      	addgt	r4, #87	; 0x57
 801c140:	b2e4      	uxtb	r4, r4
 801c142:	55bc      	strb	r4, [r7, r6]
 801c144:	4674      	mov	r4, lr
 801c146:	1e71      	subs	r1, r6, #1
 801c148:	b974      	cbnz	r4, 801c168 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801c14a:	2800      	cmp	r0, #0
 801c14c:	da05      	bge.n	801c15a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801c14e:	ab0a      	add	r3, sp, #40	; 0x28
 801c150:	4419      	add	r1, r3
 801c152:	232d      	movs	r3, #45	; 0x2d
 801c154:	f801 3c24 	strb.w	r3, [r1, #-36]
 801c158:	1eb1      	subs	r1, r6, #2
 801c15a:	3101      	adds	r1, #1
 801c15c:	4439      	add	r1, r7
 801c15e:	4660      	mov	r0, ip
 801c160:	f7ff ffc7 	bl	801c0f2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801c164:	b00b      	add	sp, #44	; 0x2c
 801c166:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c168:	460e      	mov	r6, r1
 801c16a:	e7dc      	b.n	801c126 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801c16c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801c16c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c16e:	b08b      	sub	sp, #44	; 0x2c
 801c170:	468c      	mov	ip, r1
 801c172:	2100      	movs	r1, #0
 801c174:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801c178:	ae01      	add	r6, sp, #4
 801c17a:	211f      	movs	r1, #31
 801c17c:	fbb0 f7f3 	udiv	r7, r0, r3
 801c180:	fb03 0517 	mls	r5, r3, r7, r0
 801c184:	b2ec      	uxtb	r4, r5
 801c186:	2d09      	cmp	r5, #9
 801c188:	bfd4      	ite	le
 801c18a:	3430      	addle	r4, #48	; 0x30
 801c18c:	3457      	addgt	r4, #87	; 0x57
 801c18e:	b2e4      	uxtb	r4, r4
 801c190:	558c      	strb	r4, [r1, r6]
 801c192:	4638      	mov	r0, r7
 801c194:	1e4c      	subs	r4, r1, #1
 801c196:	b92f      	cbnz	r7, 801c1a4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801c198:	4431      	add	r1, r6
 801c19a:	4660      	mov	r0, ip
 801c19c:	f7ff ffa9 	bl	801c0f2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801c1a0:	b00b      	add	sp, #44	; 0x2c
 801c1a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c1a4:	4621      	mov	r1, r4
 801c1a6:	e7e9      	b.n	801c17c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801c1a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801c1a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c1ac:	4691      	mov	r9, r2
 801c1ae:	b085      	sub	sp, #20
 801c1b0:	6802      	ldr	r2, [r0, #0]
 801c1b2:	9201      	str	r2, [sp, #4]
 801c1b4:	4688      	mov	r8, r1
 801c1b6:	4683      	mov	fp, r0
 801c1b8:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 801c1bc:	9103      	str	r1, [sp, #12]
 801c1be:	4610      	mov	r0, r2
 801c1c0:	461c      	mov	r4, r3
 801c1c2:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801c1c6:	9302      	str	r3, [sp, #8]
 801c1c8:	f7ff ff86 	bl	801c0d8 <_ZN8touchgfx7Unicode6strlenEPKt>
 801c1cc:	f1b8 0f00 	cmp.w	r8, #0
 801c1d0:	bf0c      	ite	eq
 801c1d2:	4684      	moveq	ip, r0
 801c1d4:	f100 0c01 	addne.w	ip, r0, #1
 801c1d8:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 801c1dc:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801c1e0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c1e2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c1e4:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801c1e8:	9903      	ldr	r1, [sp, #12]
 801c1ea:	fa1f fc8c 	uxth.w	ip, ip
 801c1ee:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801c1f2:	d041      	beq.n	801c278 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801c1f4:	d834      	bhi.n	801c260 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801c1f6:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801c1fa:	d059      	beq.n	801c2b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801c1fc:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801c200:	d03a      	beq.n	801c278 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801c202:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801c206:	d034      	beq.n	801c272 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801c208:	2400      	movs	r4, #0
 801c20a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801c20e:	3a01      	subs	r2, #1
 801c210:	b169      	cbz	r1, 801c22e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801c212:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c214:	458c      	cmp	ip, r1
 801c216:	da09      	bge.n	801c22c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801c218:	eba1 010c 	sub.w	r1, r1, ip
 801c21c:	b289      	uxth	r1, r1
 801c21e:	b933      	cbnz	r3, 801c22e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801c220:	2e00      	cmp	r6, #0
 801c222:	d051      	beq.n	801c2c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801c224:	2800      	cmp	r0, #0
 801c226:	d04f      	beq.n	801c2c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801c228:	440c      	add	r4, r1
 801c22a:	b2a4      	uxth	r4, r4
 801c22c:	2100      	movs	r1, #0
 801c22e:	682b      	ldr	r3, [r5, #0]
 801c230:	4293      	cmp	r3, r2
 801c232:	da07      	bge.n	801c244 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801c234:	f1b8 0f00 	cmp.w	r8, #0
 801c238:	d004      	beq.n	801c244 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801c23a:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801c23e:	682b      	ldr	r3, [r5, #0]
 801c240:	3301      	adds	r3, #1
 801c242:	602b      	str	r3, [r5, #0]
 801c244:	2730      	movs	r7, #48	; 0x30
 801c246:	2c00      	cmp	r4, #0
 801c248:	d04e      	beq.n	801c2e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801c24a:	682e      	ldr	r6, [r5, #0]
 801c24c:	3c01      	subs	r4, #1
 801c24e:	42b2      	cmp	r2, r6
 801c250:	b2a4      	uxth	r4, r4
 801c252:	dd49      	ble.n	801c2e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801c254:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801c258:	682b      	ldr	r3, [r5, #0]
 801c25a:	3301      	adds	r3, #1
 801c25c:	602b      	str	r3, [r5, #0]
 801c25e:	e7f2      	b.n	801c246 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801c260:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801c264:	d01d      	beq.n	801c2a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801c266:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801c26a:	d002      	beq.n	801c272 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801c26c:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801c270:	e7c9      	b.n	801c206 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801c272:	4684      	mov	ip, r0
 801c274:	f04f 0800 	mov.w	r8, #0
 801c278:	2c00      	cmp	r4, #0
 801c27a:	d0c6      	beq.n	801c20a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801c27c:	b947      	cbnz	r7, 801c290 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801c27e:	2801      	cmp	r0, #1
 801c280:	d106      	bne.n	801c290 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801c282:	8814      	ldrh	r4, [r2, #0]
 801c284:	2c30      	cmp	r4, #48	; 0x30
 801c286:	bf02      	ittt	eq
 801c288:	3202      	addeq	r2, #2
 801c28a:	f8cb 2000 	streq.w	r2, [fp]
 801c28e:	4638      	moveq	r0, r7
 801c290:	45bc      	cmp	ip, r7
 801c292:	da14      	bge.n	801c2be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801c294:	b2bf      	uxth	r7, r7
 801c296:	eba7 040c 	sub.w	r4, r7, ip
 801c29a:	b2a4      	uxth	r4, r4
 801c29c:	46bc      	mov	ip, r7
 801c29e:	2600      	movs	r6, #0
 801c2a0:	e7b3      	b.n	801c20a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801c2a2:	4684      	mov	ip, r0
 801c2a4:	b16c      	cbz	r4, 801c2c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801c2a6:	42b8      	cmp	r0, r7
 801c2a8:	dd00      	ble.n	801c2ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801c2aa:	b2b8      	uxth	r0, r7
 801c2ac:	2400      	movs	r4, #0
 801c2ae:	e003      	b.n	801c2b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801c2b0:	f04f 0c01 	mov.w	ip, #1
 801c2b4:	2400      	movs	r4, #0
 801c2b6:	4660      	mov	r0, ip
 801c2b8:	4626      	mov	r6, r4
 801c2ba:	46a0      	mov	r8, r4
 801c2bc:	e7a5      	b.n	801c20a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801c2be:	2400      	movs	r4, #0
 801c2c0:	e7ed      	b.n	801c29e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801c2c2:	4626      	mov	r6, r4
 801c2c4:	46a0      	mov	r8, r4
 801c2c6:	e7a0      	b.n	801c20a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801c2c8:	2900      	cmp	r1, #0
 801c2ca:	d0b0      	beq.n	801c22e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801c2cc:	2720      	movs	r7, #32
 801c2ce:	682e      	ldr	r6, [r5, #0]
 801c2d0:	2900      	cmp	r1, #0
 801c2d2:	d0ac      	beq.n	801c22e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801c2d4:	3901      	subs	r1, #1
 801c2d6:	4296      	cmp	r6, r2
 801c2d8:	b289      	uxth	r1, r1
 801c2da:	daa7      	bge.n	801c22c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801c2dc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801c2e0:	682b      	ldr	r3, [r5, #0]
 801c2e2:	3301      	adds	r3, #1
 801c2e4:	602b      	str	r3, [r5, #0]
 801c2e6:	e7f2      	b.n	801c2ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801c2e8:	b188      	cbz	r0, 801c30e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801c2ea:	682b      	ldr	r3, [r5, #0]
 801c2ec:	3801      	subs	r0, #1
 801c2ee:	429a      	cmp	r2, r3
 801c2f0:	b280      	uxth	r0, r0
 801c2f2:	dd0c      	ble.n	801c30e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801c2f4:	f8db 3000 	ldr.w	r3, [fp]
 801c2f8:	1c9c      	adds	r4, r3, #2
 801c2fa:	f8cb 4000 	str.w	r4, [fp]
 801c2fe:	881c      	ldrh	r4, [r3, #0]
 801c300:	682b      	ldr	r3, [r5, #0]
 801c302:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801c306:	682b      	ldr	r3, [r5, #0]
 801c308:	3301      	adds	r3, #1
 801c30a:	602b      	str	r3, [r5, #0]
 801c30c:	e7ec      	b.n	801c2e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801c30e:	2620      	movs	r6, #32
 801c310:	b151      	cbz	r1, 801c328 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801c312:	6828      	ldr	r0, [r5, #0]
 801c314:	3901      	subs	r1, #1
 801c316:	4282      	cmp	r2, r0
 801c318:	b289      	uxth	r1, r1
 801c31a:	dd05      	ble.n	801c328 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801c31c:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801c320:	682b      	ldr	r3, [r5, #0]
 801c322:	3301      	adds	r3, #1
 801c324:	602b      	str	r3, [r5, #0]
 801c326:	e7f3      	b.n	801c310 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801c328:	b005      	add	sp, #20
 801c32a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c32e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801c32e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801c332:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801c336:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801c33a:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801c33e:	2400      	movs	r4, #0
 801c340:	8014      	strh	r4, [r2, #0]
 801c342:	701c      	strb	r4, [r3, #0]
 801c344:	f888 4000 	strb.w	r4, [r8]
 801c348:	f88c 4000 	strb.w	r4, [ip]
 801c34c:	f88e 4000 	strb.w	r4, [lr]
 801c350:	703c      	strb	r4, [r7, #0]
 801c352:	6804      	ldr	r4, [r0, #0]
 801c354:	b1a4      	cbz	r4, 801c380 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801c356:	8824      	ldrh	r4, [r4, #0]
 801c358:	f04f 0901 	mov.w	r9, #1
 801c35c:	b314      	cbz	r4, 801c3a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801c35e:	2c2b      	cmp	r4, #43	; 0x2b
 801c360:	d001      	beq.n	801c366 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801c362:	2c20      	cmp	r4, #32
 801c364:	d110      	bne.n	801c388 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801c366:	8014      	strh	r4, [r2, #0]
 801c368:	6804      	ldr	r4, [r0, #0]
 801c36a:	b10c      	cbz	r4, 801c370 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801c36c:	3402      	adds	r4, #2
 801c36e:	6004      	str	r4, [r0, #0]
 801c370:	680c      	ldr	r4, [r1, #0]
 801c372:	b10c      	cbz	r4, 801c378 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801c374:	3401      	adds	r4, #1
 801c376:	600c      	str	r4, [r1, #0]
 801c378:	6804      	ldr	r4, [r0, #0]
 801c37a:	b17c      	cbz	r4, 801c39c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801c37c:	8824      	ldrh	r4, [r4, #0]
 801c37e:	e7ed      	b.n	801c35c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801c380:	680c      	ldr	r4, [r1, #0]
 801c382:	b17c      	cbz	r4, 801c3a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801c384:	7824      	ldrb	r4, [r4, #0]
 801c386:	e7e7      	b.n	801c358 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801c388:	2c2d      	cmp	r4, #45	; 0x2d
 801c38a:	d102      	bne.n	801c392 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801c38c:	f883 9000 	strb.w	r9, [r3]
 801c390:	e7ea      	b.n	801c368 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801c392:	2c23      	cmp	r4, #35	; 0x23
 801c394:	d107      	bne.n	801c3a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801c396:	f888 9000 	strb.w	r9, [r8]
 801c39a:	e7e5      	b.n	801c368 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801c39c:	680c      	ldr	r4, [r1, #0]
 801c39e:	b10c      	cbz	r4, 801c3a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801c3a0:	7824      	ldrb	r4, [r4, #0]
 801c3a2:	e7db      	b.n	801c35c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801c3a4:	2400      	movs	r4, #0
 801c3a6:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801c3aa:	2b09      	cmp	r3, #9
 801c3ac:	d901      	bls.n	801c3b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801c3ae:	2c2a      	cmp	r4, #42	; 0x2a
 801c3b0:	d122      	bne.n	801c3f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801c3b2:	2301      	movs	r3, #1
 801c3b4:	2c30      	cmp	r4, #48	; 0x30
 801c3b6:	f88e 3000 	strb.w	r3, [lr]
 801c3ba:	d10d      	bne.n	801c3d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801c3bc:	f88c 3000 	strb.w	r3, [ip]
 801c3c0:	6803      	ldr	r3, [r0, #0]
 801c3c2:	b10b      	cbz	r3, 801c3c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801c3c4:	3302      	adds	r3, #2
 801c3c6:	6003      	str	r3, [r0, #0]
 801c3c8:	680b      	ldr	r3, [r1, #0]
 801c3ca:	b10b      	cbz	r3, 801c3d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801c3cc:	3301      	adds	r3, #1
 801c3ce:	600b      	str	r3, [r1, #0]
 801c3d0:	6803      	ldr	r3, [r0, #0]
 801c3d2:	2b00      	cmp	r3, #0
 801c3d4:	d02f      	beq.n	801c436 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801c3d6:	881c      	ldrh	r4, [r3, #0]
 801c3d8:	2c2a      	cmp	r4, #42	; 0x2a
 801c3da:	d135      	bne.n	801c448 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801c3dc:	f04f 33ff 	mov.w	r3, #4294967295
 801c3e0:	6033      	str	r3, [r6, #0]
 801c3e2:	6803      	ldr	r3, [r0, #0]
 801c3e4:	b10b      	cbz	r3, 801c3ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801c3e6:	3302      	adds	r3, #2
 801c3e8:	6003      	str	r3, [r0, #0]
 801c3ea:	680b      	ldr	r3, [r1, #0]
 801c3ec:	b10b      	cbz	r3, 801c3f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801c3ee:	3301      	adds	r3, #1
 801c3f0:	600b      	str	r3, [r1, #0]
 801c3f2:	6803      	ldr	r3, [r0, #0]
 801c3f4:	b31b      	cbz	r3, 801c43e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801c3f6:	881c      	ldrh	r4, [r3, #0]
 801c3f8:	2c2e      	cmp	r4, #46	; 0x2e
 801c3fa:	d11a      	bne.n	801c432 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801c3fc:	2301      	movs	r3, #1
 801c3fe:	703b      	strb	r3, [r7, #0]
 801c400:	6803      	ldr	r3, [r0, #0]
 801c402:	b10b      	cbz	r3, 801c408 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801c404:	3302      	adds	r3, #2
 801c406:	6003      	str	r3, [r0, #0]
 801c408:	680b      	ldr	r3, [r1, #0]
 801c40a:	b10b      	cbz	r3, 801c410 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801c40c:	3301      	adds	r3, #1
 801c40e:	600b      	str	r3, [r1, #0]
 801c410:	6803      	ldr	r3, [r0, #0]
 801c412:	2b00      	cmp	r3, #0
 801c414:	d036      	beq.n	801c484 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801c416:	881b      	ldrh	r3, [r3, #0]
 801c418:	2b2a      	cmp	r3, #42	; 0x2a
 801c41a:	d137      	bne.n	801c48c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801c41c:	f04f 33ff 	mov.w	r3, #4294967295
 801c420:	602b      	str	r3, [r5, #0]
 801c422:	6803      	ldr	r3, [r0, #0]
 801c424:	b10b      	cbz	r3, 801c42a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801c426:	3302      	adds	r3, #2
 801c428:	6003      	str	r3, [r0, #0]
 801c42a:	680b      	ldr	r3, [r1, #0]
 801c42c:	b10b      	cbz	r3, 801c432 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801c42e:	3301      	adds	r3, #1
 801c430:	600b      	str	r3, [r1, #0]
 801c432:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801c436:	680c      	ldr	r4, [r1, #0]
 801c438:	b134      	cbz	r4, 801c448 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801c43a:	7824      	ldrb	r4, [r4, #0]
 801c43c:	e7cc      	b.n	801c3d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801c43e:	680b      	ldr	r3, [r1, #0]
 801c440:	2b00      	cmp	r3, #0
 801c442:	d0f6      	beq.n	801c432 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801c444:	781c      	ldrb	r4, [r3, #0]
 801c446:	e7d7      	b.n	801c3f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801c448:	2300      	movs	r3, #0
 801c44a:	6033      	str	r3, [r6, #0]
 801c44c:	220a      	movs	r2, #10
 801c44e:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801c452:	fa1f f38c 	uxth.w	r3, ip
 801c456:	2b09      	cmp	r3, #9
 801c458:	d8ce      	bhi.n	801c3f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801c45a:	6833      	ldr	r3, [r6, #0]
 801c45c:	fb02 c303 	mla	r3, r2, r3, ip
 801c460:	6033      	str	r3, [r6, #0]
 801c462:	6803      	ldr	r3, [r0, #0]
 801c464:	b10b      	cbz	r3, 801c46a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801c466:	3302      	adds	r3, #2
 801c468:	6003      	str	r3, [r0, #0]
 801c46a:	680b      	ldr	r3, [r1, #0]
 801c46c:	b10b      	cbz	r3, 801c472 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801c46e:	3301      	adds	r3, #1
 801c470:	600b      	str	r3, [r1, #0]
 801c472:	6803      	ldr	r3, [r0, #0]
 801c474:	b10b      	cbz	r3, 801c47a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801c476:	881c      	ldrh	r4, [r3, #0]
 801c478:	e7e9      	b.n	801c44e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801c47a:	680c      	ldr	r4, [r1, #0]
 801c47c:	2c00      	cmp	r4, #0
 801c47e:	d0e6      	beq.n	801c44e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801c480:	7824      	ldrb	r4, [r4, #0]
 801c482:	e7e4      	b.n	801c44e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801c484:	680b      	ldr	r3, [r1, #0]
 801c486:	b10b      	cbz	r3, 801c48c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801c488:	781b      	ldrb	r3, [r3, #0]
 801c48a:	e7c5      	b.n	801c418 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801c48c:	2200      	movs	r2, #0
 801c48e:	602a      	str	r2, [r5, #0]
 801c490:	240a      	movs	r4, #10
 801c492:	3b30      	subs	r3, #48	; 0x30
 801c494:	b29e      	uxth	r6, r3
 801c496:	2e09      	cmp	r6, #9
 801c498:	682a      	ldr	r2, [r5, #0]
 801c49a:	d813      	bhi.n	801c4c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801c49c:	fb04 3302 	mla	r3, r4, r2, r3
 801c4a0:	602b      	str	r3, [r5, #0]
 801c4a2:	6803      	ldr	r3, [r0, #0]
 801c4a4:	b10b      	cbz	r3, 801c4aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801c4a6:	3302      	adds	r3, #2
 801c4a8:	6003      	str	r3, [r0, #0]
 801c4aa:	680b      	ldr	r3, [r1, #0]
 801c4ac:	b10b      	cbz	r3, 801c4b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801c4ae:	3301      	adds	r3, #1
 801c4b0:	600b      	str	r3, [r1, #0]
 801c4b2:	6803      	ldr	r3, [r0, #0]
 801c4b4:	b10b      	cbz	r3, 801c4ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801c4b6:	881b      	ldrh	r3, [r3, #0]
 801c4b8:	e7eb      	b.n	801c492 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801c4ba:	680b      	ldr	r3, [r1, #0]
 801c4bc:	2b00      	cmp	r3, #0
 801c4be:	d0e8      	beq.n	801c492 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801c4c0:	781b      	ldrb	r3, [r3, #0]
 801c4c2:	e7e6      	b.n	801c492 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801c4c4:	2a06      	cmp	r2, #6
 801c4c6:	bfa8      	it	ge
 801c4c8:	2206      	movge	r2, #6
 801c4ca:	602a      	str	r2, [r5, #0]
 801c4cc:	e7b1      	b.n	801c432 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801c4ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801c4ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c4d2:	b0a3      	sub	sp, #140	; 0x8c
 801c4d4:	2600      	movs	r6, #0
 801c4d6:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801c4da:	4607      	mov	r7, r0
 801c4dc:	4688      	mov	r8, r1
 801c4de:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801c4e2:	4631      	mov	r1, r6
 801c4e4:	2242      	movs	r2, #66	; 0x42
 801c4e6:	4648      	mov	r0, r9
 801c4e8:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801c4ea:	960d      	str	r6, [sp, #52]	; 0x34
 801c4ec:	f00f f96d 	bl	802b7ca <memset>
 801c4f0:	b15f      	cbz	r7, 801c50a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801c4f2:	f108 3aff 	add.w	sl, r8, #4294967295
 801c4f6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c4f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c4fa:	b152      	cbz	r2, 801c512 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801c4fc:	8812      	ldrh	r2, [r2, #0]
 801c4fe:	b10a      	cbz	r2, 801c504 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801c500:	459a      	cmp	sl, r3
 801c502:	dc2e      	bgt.n	801c562 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801c504:	2200      	movs	r2, #0
 801c506:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801c50a:	4638      	mov	r0, r7
 801c50c:	b023      	add	sp, #140	; 0x8c
 801c50e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c512:	9a08      	ldr	r2, [sp, #32]
 801c514:	2a00      	cmp	r2, #0
 801c516:	d0f5      	beq.n	801c504 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801c518:	7812      	ldrb	r2, [r2, #0]
 801c51a:	e7f0      	b.n	801c4fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801c51c:	2d00      	cmp	r5, #0
 801c51e:	d0ea      	beq.n	801c4f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c520:	782a      	ldrb	r2, [r5, #0]
 801c522:	b142      	cbz	r2, 801c536 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801c524:	2a25      	cmp	r2, #37	; 0x25
 801c526:	d001      	beq.n	801c52c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801c528:	459a      	cmp	sl, r3
 801c52a:	dc08      	bgt.n	801c53e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801c52c:	f1bb 0f00 	cmp.w	fp, #0
 801c530:	d121      	bne.n	801c576 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801c532:	2d00      	cmp	r5, #0
 801c534:	d0df      	beq.n	801c4f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c536:	782a      	ldrb	r2, [r5, #0]
 801c538:	f04f 0b00 	mov.w	fp, #0
 801c53c:	e01d      	b.n	801c57a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801c53e:	f1bb 0f00 	cmp.w	fp, #0
 801c542:	d078      	beq.n	801c636 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801c544:	f8bb 2000 	ldrh.w	r2, [fp]
 801c548:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801c54c:	f1bb 0f00 	cmp.w	fp, #0
 801c550:	d002      	beq.n	801c558 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801c552:	f10b 0202 	add.w	r2, fp, #2
 801c556:	9209      	str	r2, [sp, #36]	; 0x24
 801c558:	b10d      	cbz	r5, 801c55e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801c55a:	3501      	adds	r5, #1
 801c55c:	9508      	str	r5, [sp, #32]
 801c55e:	3301      	adds	r3, #1
 801c560:	930d      	str	r3, [sp, #52]	; 0x34
 801c562:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801c566:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c568:	f1bb 0f00 	cmp.w	fp, #0
 801c56c:	d0d6      	beq.n	801c51c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801c56e:	f8bb 2000 	ldrh.w	r2, [fp]
 801c572:	2a00      	cmp	r2, #0
 801c574:	d1d6      	bne.n	801c524 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801c576:	f8bb 2000 	ldrh.w	r2, [fp]
 801c57a:	2a00      	cmp	r2, #0
 801c57c:	d0bb      	beq.n	801c4f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c57e:	459a      	cmp	sl, r3
 801c580:	ddb9      	ble.n	801c4f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c582:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801c586:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801c58a:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801c58e:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801c592:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801c596:	960e      	str	r6, [sp, #56]	; 0x38
 801c598:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801c59c:	960f      	str	r6, [sp, #60]	; 0x3c
 801c59e:	f1bb 0f00 	cmp.w	fp, #0
 801c5a2:	d002      	beq.n	801c5aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801c5a4:	f10b 0302 	add.w	r3, fp, #2
 801c5a8:	9309      	str	r3, [sp, #36]	; 0x24
 801c5aa:	b10d      	cbz	r5, 801c5b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801c5ac:	1c6b      	adds	r3, r5, #1
 801c5ae:	9308      	str	r3, [sp, #32]
 801c5b0:	ab0f      	add	r3, sp, #60	; 0x3c
 801c5b2:	9305      	str	r3, [sp, #20]
 801c5b4:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801c5b8:	9304      	str	r3, [sp, #16]
 801c5ba:	ab0e      	add	r3, sp, #56	; 0x38
 801c5bc:	9303      	str	r3, [sp, #12]
 801c5be:	ab0c      	add	r3, sp, #48	; 0x30
 801c5c0:	9302      	str	r3, [sp, #8]
 801c5c2:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801c5c6:	9301      	str	r3, [sp, #4]
 801c5c8:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801c5cc:	9300      	str	r3, [sp, #0]
 801c5ce:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801c5d2:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801c5d6:	a908      	add	r1, sp, #32
 801c5d8:	a809      	add	r0, sp, #36	; 0x24
 801c5da:	f7ff fea8 	bl	801c32e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801c5de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c5e0:	2b00      	cmp	r3, #0
 801c5e2:	bfbe      	ittt	lt
 801c5e4:	6823      	ldrlt	r3, [r4, #0]
 801c5e6:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801c5ea:	930e      	strlt	r3, [sp, #56]	; 0x38
 801c5ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c5ee:	bfb8      	it	lt
 801c5f0:	3404      	addlt	r4, #4
 801c5f2:	2b00      	cmp	r3, #0
 801c5f4:	bfb8      	it	lt
 801c5f6:	6823      	ldrlt	r3, [r4, #0]
 801c5f8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c5fc:	bfbe      	ittt	lt
 801c5fe:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801c602:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801c604:	3404      	addlt	r4, #4
 801c606:	b1d9      	cbz	r1, 801c640 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801c608:	880b      	ldrh	r3, [r1, #0]
 801c60a:	2b69      	cmp	r3, #105	; 0x69
 801c60c:	d01f      	beq.n	801c64e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c60e:	d82f      	bhi.n	801c670 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801c610:	2b58      	cmp	r3, #88	; 0x58
 801c612:	d01c      	beq.n	801c64e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c614:	d818      	bhi.n	801c648 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801c616:	2b25      	cmp	r3, #37	; 0x25
 801c618:	d034      	beq.n	801c684 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801c61a:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801c61e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c620:	f1bb 0f00 	cmp.w	fp, #0
 801c624:	f000 80b8 	beq.w	801c798 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801c628:	f8bb 5000 	ldrh.w	r5, [fp]
 801c62c:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801c630:	3301      	adds	r3, #1
 801c632:	930d      	str	r3, [sp, #52]	; 0x34
 801c634:	e029      	b.n	801c68a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801c636:	b10d      	cbz	r5, 801c63c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801c638:	782a      	ldrb	r2, [r5, #0]
 801c63a:	e785      	b.n	801c548 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801c63c:	462a      	mov	r2, r5
 801c63e:	e783      	b.n	801c548 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801c640:	2a00      	cmp	r2, #0
 801c642:	d0ea      	beq.n	801c61a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801c644:	7813      	ldrb	r3, [r2, #0]
 801c646:	e7e0      	b.n	801c60a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801c648:	3b63      	subs	r3, #99	; 0x63
 801c64a:	2b01      	cmp	r3, #1
 801c64c:	d8e5      	bhi.n	801c61a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801c64e:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801c652:	b329      	cbz	r1, 801c6a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801c654:	880b      	ldrh	r3, [r1, #0]
 801c656:	2b69      	cmp	r3, #105	; 0x69
 801c658:	d063      	beq.n	801c722 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801c65a:	d825      	bhi.n	801c6a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801c65c:	2b63      	cmp	r3, #99	; 0x63
 801c65e:	d038      	beq.n	801c6d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801c660:	2b64      	cmp	r3, #100	; 0x64
 801c662:	d05e      	beq.n	801c722 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801c664:	2b58      	cmp	r3, #88	; 0x58
 801c666:	d07b      	beq.n	801c760 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801c668:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801c66c:	4625      	mov	r5, r4
 801c66e:	e036      	b.n	801c6de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c670:	2b73      	cmp	r3, #115	; 0x73
 801c672:	d0ec      	beq.n	801c64e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c674:	d802      	bhi.n	801c67c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801c676:	2b6f      	cmp	r3, #111	; 0x6f
 801c678:	d1cf      	bne.n	801c61a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801c67a:	e7e8      	b.n	801c64e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c67c:	2b75      	cmp	r3, #117	; 0x75
 801c67e:	d0e6      	beq.n	801c64e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c680:	2b78      	cmp	r3, #120	; 0x78
 801c682:	e7f9      	b.n	801c678 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801c684:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c686:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801c68a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c68c:	b10b      	cbz	r3, 801c692 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801c68e:	3302      	adds	r3, #2
 801c690:	9309      	str	r3, [sp, #36]	; 0x24
 801c692:	9b08      	ldr	r3, [sp, #32]
 801c694:	2b00      	cmp	r3, #0
 801c696:	f43f af2e 	beq.w	801c4f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c69a:	3301      	adds	r3, #1
 801c69c:	9308      	str	r3, [sp, #32]
 801c69e:	e72a      	b.n	801c4f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c6a0:	2a00      	cmp	r2, #0
 801c6a2:	d0e1      	beq.n	801c668 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801c6a4:	7813      	ldrb	r3, [r2, #0]
 801c6a6:	e7d6      	b.n	801c656 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801c6a8:	2b73      	cmp	r3, #115	; 0x73
 801c6aa:	d036      	beq.n	801c71a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801c6ac:	d807      	bhi.n	801c6be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801c6ae:	2b6f      	cmp	r3, #111	; 0x6f
 801c6b0:	d1da      	bne.n	801c668 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801c6b2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c6b4:	1d25      	adds	r5, r4, #4
 801c6b6:	eba8 0202 	sub.w	r2, r8, r2
 801c6ba:	2308      	movs	r3, #8
 801c6bc:	e04a      	b.n	801c754 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801c6be:	2b75      	cmp	r3, #117	; 0x75
 801c6c0:	d043      	beq.n	801c74a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801c6c2:	2b78      	cmp	r3, #120	; 0x78
 801c6c4:	d1d0      	bne.n	801c668 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801c6c6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c6c8:	1d25      	adds	r5, r4, #4
 801c6ca:	eba8 0202 	sub.w	r2, r8, r2
 801c6ce:	2310      	movs	r3, #16
 801c6d0:	e040      	b.n	801c754 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801c6d2:	6823      	ldr	r3, [r4, #0]
 801c6d4:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801c6d8:	1d25      	adds	r5, r4, #4
 801c6da:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801c6de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c6e0:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801c6e4:	2b00      	cmp	r3, #0
 801c6e6:	d052      	beq.n	801c78e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801c6e8:	881a      	ldrh	r2, [r3, #0]
 801c6ea:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801c6ee:	a80d      	add	r0, sp, #52	; 0x34
 801c6f0:	9005      	str	r0, [sp, #20]
 801c6f2:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801c6f6:	9004      	str	r0, [sp, #16]
 801c6f8:	980e      	ldr	r0, [sp, #56]	; 0x38
 801c6fa:	9003      	str	r0, [sp, #12]
 801c6fc:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801c700:	9002      	str	r0, [sp, #8]
 801c702:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c704:	9001      	str	r0, [sp, #4]
 801c706:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801c70a:	9000      	str	r0, [sp, #0]
 801c70c:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801c710:	a810      	add	r0, sp, #64	; 0x40
 801c712:	f7ff fd49 	bl	801c1a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801c716:	462c      	mov	r4, r5
 801c718:	e7b7      	b.n	801c68a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801c71a:	6823      	ldr	r3, [r4, #0]
 801c71c:	1d25      	adds	r5, r4, #4
 801c71e:	9310      	str	r3, [sp, #64]	; 0x40
 801c720:	e7dd      	b.n	801c6de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c722:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c724:	6820      	ldr	r0, [r4, #0]
 801c726:	eba8 0202 	sub.w	r2, r8, r2
 801c72a:	230a      	movs	r3, #10
 801c72c:	b292      	uxth	r2, r2
 801c72e:	4649      	mov	r1, r9
 801c730:	f7ff fcf0 	bl	801c114 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801c734:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801c738:	2b2d      	cmp	r3, #45	; 0x2d
 801c73a:	f104 0504 	add.w	r5, r4, #4
 801c73e:	d1ce      	bne.n	801c6de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c740:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c744:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c746:	3302      	adds	r3, #2
 801c748:	e7e9      	b.n	801c71e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801c74a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c74c:	1d25      	adds	r5, r4, #4
 801c74e:	eba8 0202 	sub.w	r2, r8, r2
 801c752:	230a      	movs	r3, #10
 801c754:	b292      	uxth	r2, r2
 801c756:	4649      	mov	r1, r9
 801c758:	6820      	ldr	r0, [r4, #0]
 801c75a:	f7ff fd07 	bl	801c16c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801c75e:	e7be      	b.n	801c6de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c760:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c762:	6820      	ldr	r0, [r4, #0]
 801c764:	eba8 0202 	sub.w	r2, r8, r2
 801c768:	b292      	uxth	r2, r2
 801c76a:	2310      	movs	r3, #16
 801c76c:	4649      	mov	r1, r9
 801c76e:	f7ff fcfd 	bl	801c16c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801c772:	1d25      	adds	r5, r4, #4
 801c774:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801c778:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801c77c:	2b00      	cmp	r3, #0
 801c77e:	d0ae      	beq.n	801c6de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c780:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801c784:	2919      	cmp	r1, #25
 801c786:	d8f7      	bhi.n	801c778 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801c788:	3b20      	subs	r3, #32
 801c78a:	8013      	strh	r3, [r2, #0]
 801c78c:	e7f4      	b.n	801c778 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801c78e:	9a08      	ldr	r2, [sp, #32]
 801c790:	2a00      	cmp	r2, #0
 801c792:	d0aa      	beq.n	801c6ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801c794:	7812      	ldrb	r2, [r2, #0]
 801c796:	e7a8      	b.n	801c6ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801c798:	2d00      	cmp	r5, #0
 801c79a:	f43f af47 	beq.w	801c62c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801c79e:	782d      	ldrb	r5, [r5, #0]
 801c7a0:	e744      	b.n	801c62c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801c7a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801c7a2:	b507      	push	{r0, r1, r2, lr}
 801c7a4:	9300      	str	r3, [sp, #0]
 801c7a6:	4613      	mov	r3, r2
 801c7a8:	2200      	movs	r2, #0
 801c7aa:	f7ff fe90 	bl	801c4ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801c7ae:	b003      	add	sp, #12
 801c7b0:	f85d fb04 	ldr.w	pc, [sp], #4

0801c7b4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801c7b4:	b40c      	push	{r2, r3}
 801c7b6:	b507      	push	{r0, r1, r2, lr}
 801c7b8:	ab04      	add	r3, sp, #16
 801c7ba:	f853 2b04 	ldr.w	r2, [r3], #4
 801c7be:	9301      	str	r3, [sp, #4]
 801c7c0:	f7ff ffef 	bl	801c7a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801c7c4:	b003      	add	sp, #12
 801c7c6:	f85d eb04 	ldr.w	lr, [sp], #4
 801c7ca:	b002      	add	sp, #8
 801c7cc:	4770      	bx	lr
	...

0801c7d0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801c7d0:	4b01      	ldr	r3, [pc, #4]	; (801c7d8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801c7d2:	6018      	str	r0, [r3, #0]
 801c7d4:	4770      	bx	lr
 801c7d6:	bf00      	nop
 801c7d8:	200022b4 	.word	0x200022b4

0801c7dc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801c7dc:	4b06      	ldr	r3, [pc, #24]	; (801c7f8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801c7de:	881a      	ldrh	r2, [r3, #0]
 801c7e0:	4282      	cmp	r2, r0
 801c7e2:	d807      	bhi.n	801c7f4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801c7e4:	4b05      	ldr	r3, [pc, #20]	; (801c7fc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801c7e6:	881b      	ldrh	r3, [r3, #0]
 801c7e8:	4413      	add	r3, r2
 801c7ea:	4298      	cmp	r0, r3
 801c7ec:	bfac      	ite	ge
 801c7ee:	2000      	movge	r0, #0
 801c7f0:	2001      	movlt	r0, #1
 801c7f2:	4770      	bx	lr
 801c7f4:	2000      	movs	r0, #0
 801c7f6:	4770      	bx	lr
 801c7f8:	200022d4 	.word	0x200022d4
 801c7fc:	200022d8 	.word	0x200022d8

0801c800 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801c800:	b508      	push	{r3, lr}
 801c802:	4601      	mov	r1, r0
 801c804:	f7ff ffea 	bl	801c7dc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801c808:	b118      	cbz	r0, 801c812 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801c80a:	4b02      	ldr	r3, [pc, #8]	; (801c814 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801c80c:	681b      	ldr	r3, [r3, #0]
 801c80e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801c812:	bd08      	pop	{r3, pc}
 801c814:	200022b8 	.word	0x200022b8

0801c818 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801c818:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c81a:	4c24      	ldr	r4, [pc, #144]	; (801c8ac <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801c81c:	6823      	ldr	r3, [r4, #0]
 801c81e:	2b00      	cmp	r3, #0
 801c820:	d042      	beq.n	801c8a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c822:	4a23      	ldr	r2, [pc, #140]	; (801c8b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801c824:	4d23      	ldr	r5, [pc, #140]	; (801c8b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801c826:	8811      	ldrh	r1, [r2, #0]
 801c828:	f8b5 c000 	ldrh.w	ip, [r5]
 801c82c:	4822      	ldr	r0, [pc, #136]	; (801c8b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801c82e:	4461      	add	r1, ip
 801c830:	1c4a      	adds	r2, r1, #1
 801c832:	f022 0201 	bic.w	r2, r2, #1
 801c836:	008f      	lsls	r7, r1, #2
 801c838:	0412      	lsls	r2, r2, #16
 801c83a:	19de      	adds	r6, r3, r7
 801c83c:	0c12      	lsrs	r2, r2, #16
 801c83e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801c842:	6006      	str	r6, [r0, #0]
 801c844:	4e1d      	ldr	r6, [pc, #116]	; (801c8bc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801c846:	19da      	adds	r2, r3, r7
 801c848:	6032      	str	r2, [r6, #0]
 801c84a:	220e      	movs	r2, #14
 801c84c:	fb02 f20c 	mul.w	r2, r2, ip
 801c850:	3203      	adds	r2, #3
 801c852:	f022 0203 	bic.w	r2, r2, #3
 801c856:	443a      	add	r2, r7
 801c858:	4f19      	ldr	r7, [pc, #100]	; (801c8c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801c85a:	4413      	add	r3, r2
 801c85c:	603b      	str	r3, [r7, #0]
 801c85e:	4f19      	ldr	r7, [pc, #100]	; (801c8c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801c860:	2300      	movs	r3, #0
 801c862:	803b      	strh	r3, [r7, #0]
 801c864:	4f18      	ldr	r7, [pc, #96]	; (801c8c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801c866:	683f      	ldr	r7, [r7, #0]
 801c868:	1aba      	subs	r2, r7, r2
 801c86a:	4f18      	ldr	r7, [pc, #96]	; (801c8cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801c86c:	603a      	str	r2, [r7, #0]
 801c86e:	4a18      	ldr	r2, [pc, #96]	; (801c8d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801c870:	469c      	mov	ip, r3
 801c872:	8013      	strh	r3, [r2, #0]
 801c874:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801c878:	428b      	cmp	r3, r1
 801c87a:	d10d      	bne.n	801c898 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801c87c:	882d      	ldrh	r5, [r5, #0]
 801c87e:	6830      	ldr	r0, [r6, #0]
 801c880:	2300      	movs	r3, #0
 801c882:	240e      	movs	r4, #14
 801c884:	429d      	cmp	r5, r3
 801c886:	d90f      	bls.n	801c8a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c888:	fb04 0203 	mla	r2, r4, r3, r0
 801c88c:	3301      	adds	r3, #1
 801c88e:	7b11      	ldrb	r1, [r2, #12]
 801c890:	f36f 1145 	bfc	r1, #5, #1
 801c894:	7311      	strb	r1, [r2, #12]
 801c896:	e7f5      	b.n	801c884 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801c898:	6822      	ldr	r2, [r4, #0]
 801c89a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801c89e:	6802      	ldr	r2, [r0, #0]
 801c8a0:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801c8a4:	3301      	adds	r3, #1
 801c8a6:	e7e7      	b.n	801c878 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801c8a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c8aa:	bf00      	nop
 801c8ac:	200022b8 	.word	0x200022b8
 801c8b0:	200022d4 	.word	0x200022d4
 801c8b4:	200022d8 	.word	0x200022d8
 801c8b8:	200022cc 	.word	0x200022cc
 801c8bc:	200022bc 	.word	0x200022bc
 801c8c0:	200022c4 	.word	0x200022c4
 801c8c4:	200022d6 	.word	0x200022d6
 801c8c8:	200022c0 	.word	0x200022c0
 801c8cc:	200022d0 	.word	0x200022d0
 801c8d0:	200022c8 	.word	0x200022c8

0801c8d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801c8d4:	4b06      	ldr	r3, [pc, #24]	; (801c8f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801c8d6:	681b      	ldr	r3, [r3, #0]
 801c8d8:	b943      	cbnz	r3, 801c8ec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c8da:	b139      	cbz	r1, 801c8ec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c8dc:	4b05      	ldr	r3, [pc, #20]	; (801c8f4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801c8de:	801a      	strh	r2, [r3, #0]
 801c8e0:	4b05      	ldr	r3, [pc, #20]	; (801c8f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801c8e2:	6019      	str	r1, [r3, #0]
 801c8e4:	4b05      	ldr	r3, [pc, #20]	; (801c8fc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801c8e6:	6018      	str	r0, [r3, #0]
 801c8e8:	f7ff bf96 	b.w	801c818 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801c8ec:	4770      	bx	lr
 801c8ee:	bf00      	nop
 801c8f0:	200022c4 	.word	0x200022c4
 801c8f4:	200022d8 	.word	0x200022d8
 801c8f8:	200022c0 	.word	0x200022c0
 801c8fc:	200022b8 	.word	0x200022b8

0801c900 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801c900:	b470      	push	{r4, r5, r6}
 801c902:	4c07      	ldr	r4, [pc, #28]	; (801c920 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801c904:	6826      	ldr	r6, [r4, #0]
 801c906:	4605      	mov	r5, r0
 801c908:	4610      	mov	r0, r2
 801c90a:	9a03      	ldr	r2, [sp, #12]
 801c90c:	b936      	cbnz	r6, 801c91c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801c90e:	6025      	str	r5, [r4, #0]
 801c910:	4c04      	ldr	r4, [pc, #16]	; (801c924 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801c912:	8021      	strh	r1, [r4, #0]
 801c914:	bc70      	pop	{r4, r5, r6}
 801c916:	4619      	mov	r1, r3
 801c918:	f7ff bfdc 	b.w	801c8d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801c91c:	bc70      	pop	{r4, r5, r6}
 801c91e:	4770      	bx	lr
 801c920:	200022dc 	.word	0x200022dc
 801c924:	200022d4 	.word	0x200022d4

0801c928 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801c928:	4a12      	ldr	r2, [pc, #72]	; (801c974 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801c92a:	8803      	ldrh	r3, [r0, #0]
 801c92c:	8812      	ldrh	r2, [r2, #0]
 801c92e:	4293      	cmp	r3, r2
 801c930:	d207      	bcs.n	801c942 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801c932:	4a11      	ldr	r2, [pc, #68]	; (801c978 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801c934:	6812      	ldr	r2, [r2, #0]
 801c936:	2114      	movs	r1, #20
 801c938:	fb01 2303 	mla	r3, r1, r3, r2
 801c93c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801c940:	4770      	bx	lr
 801c942:	490e      	ldr	r1, [pc, #56]	; (801c97c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801c944:	8809      	ldrh	r1, [r1, #0]
 801c946:	4411      	add	r1, r2
 801c948:	428b      	cmp	r3, r1
 801c94a:	da04      	bge.n	801c956 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801c94c:	1a9b      	subs	r3, r3, r2
 801c94e:	4a0c      	ldr	r2, [pc, #48]	; (801c980 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801c950:	210e      	movs	r1, #14
 801c952:	6812      	ldr	r2, [r2, #0]
 801c954:	e7f0      	b.n	801c938 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801c956:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c95a:	4293      	cmp	r3, r2
 801c95c:	d108      	bne.n	801c970 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801c95e:	4b09      	ldr	r3, [pc, #36]	; (801c984 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801c960:	781b      	ldrb	r3, [r3, #0]
 801c962:	b91b      	cbnz	r3, 801c96c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801c964:	4b08      	ldr	r3, [pc, #32]	; (801c988 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801c966:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c96a:	4770      	bx	lr
 801c96c:	4b07      	ldr	r3, [pc, #28]	; (801c98c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801c96e:	e7fa      	b.n	801c966 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801c970:	2000      	movs	r0, #0
 801c972:	4770      	bx	lr
 801c974:	200022d4 	.word	0x200022d4
 801c978:	200022dc 	.word	0x200022dc
 801c97c:	200022d8 	.word	0x200022d8
 801c980:	200022bc 	.word	0x200022bc
 801c984:	20002244 	.word	0x20002244
 801c988:	20002246 	.word	0x20002246
 801c98c:	20002248 	.word	0x20002248

0801c990 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801c990:	4a12      	ldr	r2, [pc, #72]	; (801c9dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801c992:	8803      	ldrh	r3, [r0, #0]
 801c994:	8812      	ldrh	r2, [r2, #0]
 801c996:	4293      	cmp	r3, r2
 801c998:	d207      	bcs.n	801c9aa <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801c99a:	4a11      	ldr	r2, [pc, #68]	; (801c9e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801c99c:	6812      	ldr	r2, [r2, #0]
 801c99e:	2114      	movs	r1, #20
 801c9a0:	fb01 2303 	mla	r3, r1, r3, r2
 801c9a4:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801c9a8:	4770      	bx	lr
 801c9aa:	490e      	ldr	r1, [pc, #56]	; (801c9e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801c9ac:	8809      	ldrh	r1, [r1, #0]
 801c9ae:	4411      	add	r1, r2
 801c9b0:	428b      	cmp	r3, r1
 801c9b2:	da04      	bge.n	801c9be <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801c9b4:	1a9b      	subs	r3, r3, r2
 801c9b6:	4a0c      	ldr	r2, [pc, #48]	; (801c9e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801c9b8:	210e      	movs	r1, #14
 801c9ba:	6812      	ldr	r2, [r2, #0]
 801c9bc:	e7f0      	b.n	801c9a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801c9be:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c9c2:	4293      	cmp	r3, r2
 801c9c4:	d108      	bne.n	801c9d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801c9c6:	4b09      	ldr	r3, [pc, #36]	; (801c9ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801c9c8:	781b      	ldrb	r3, [r3, #0]
 801c9ca:	b91b      	cbnz	r3, 801c9d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801c9cc:	4b08      	ldr	r3, [pc, #32]	; (801c9f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801c9ce:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c9d2:	4770      	bx	lr
 801c9d4:	4b07      	ldr	r3, [pc, #28]	; (801c9f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801c9d6:	e7fa      	b.n	801c9ce <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801c9d8:	2000      	movs	r0, #0
 801c9da:	4770      	bx	lr
 801c9dc:	200022d4 	.word	0x200022d4
 801c9e0:	200022dc 	.word	0x200022dc
 801c9e4:	200022d8 	.word	0x200022d8
 801c9e8:	200022bc 	.word	0x200022bc
 801c9ec:	20002244 	.word	0x20002244
 801c9f0:	20002248 	.word	0x20002248
 801c9f4:	20002246 	.word	0x20002246

0801c9f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801c9f8:	b510      	push	{r4, lr}
 801c9fa:	4a1f      	ldr	r2, [pc, #124]	; (801ca78 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801c9fc:	880b      	ldrh	r3, [r1, #0]
 801c9fe:	8812      	ldrh	r2, [r2, #0]
 801ca00:	4293      	cmp	r3, r2
 801ca02:	d213      	bcs.n	801ca2c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801ca04:	4a1d      	ldr	r2, [pc, #116]	; (801ca7c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801ca06:	6812      	ldr	r2, [r2, #0]
 801ca08:	2114      	movs	r1, #20
 801ca0a:	fb01 2303 	mla	r3, r1, r3, r2
 801ca0e:	8a1a      	ldrh	r2, [r3, #16]
 801ca10:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801ca14:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801ca18:	8a5b      	ldrh	r3, [r3, #18]
 801ca1a:	8004      	strh	r4, [r0, #0]
 801ca1c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801ca20:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801ca24:	8041      	strh	r1, [r0, #2]
 801ca26:	8082      	strh	r2, [r0, #4]
 801ca28:	80c3      	strh	r3, [r0, #6]
 801ca2a:	e00e      	b.n	801ca4a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801ca2c:	4914      	ldr	r1, [pc, #80]	; (801ca80 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801ca2e:	8809      	ldrh	r1, [r1, #0]
 801ca30:	4411      	add	r1, r2
 801ca32:	428b      	cmp	r3, r1
 801ca34:	da0a      	bge.n	801ca4c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801ca36:	1a9b      	subs	r3, r3, r2
 801ca38:	4a12      	ldr	r2, [pc, #72]	; (801ca84 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801ca3a:	6812      	ldr	r2, [r2, #0]
 801ca3c:	210e      	movs	r1, #14
 801ca3e:	fb01 2303 	mla	r3, r1, r3, r2
 801ca42:	681a      	ldr	r2, [r3, #0]
 801ca44:	6002      	str	r2, [r0, #0]
 801ca46:	685a      	ldr	r2, [r3, #4]
 801ca48:	6042      	str	r2, [r0, #4]
 801ca4a:	bd10      	pop	{r4, pc}
 801ca4c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801ca50:	4293      	cmp	r3, r2
 801ca52:	d10b      	bne.n	801ca6c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801ca54:	4b0c      	ldr	r3, [pc, #48]	; (801ca88 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801ca56:	f9b3 1000 	ldrsh.w	r1, [r3]
 801ca5a:	4b0c      	ldr	r3, [pc, #48]	; (801ca8c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801ca5c:	8081      	strh	r1, [r0, #4]
 801ca5e:	f9b3 2000 	ldrsh.w	r2, [r3]
 801ca62:	80c2      	strh	r2, [r0, #6]
 801ca64:	2300      	movs	r3, #0
 801ca66:	8003      	strh	r3, [r0, #0]
 801ca68:	8043      	strh	r3, [r0, #2]
 801ca6a:	e7ee      	b.n	801ca4a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801ca6c:	2300      	movs	r3, #0
 801ca6e:	8003      	strh	r3, [r0, #0]
 801ca70:	8043      	strh	r3, [r0, #2]
 801ca72:	8083      	strh	r3, [r0, #4]
 801ca74:	e7d8      	b.n	801ca28 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801ca76:	bf00      	nop
 801ca78:	200022d4 	.word	0x200022d4
 801ca7c:	200022dc 	.word	0x200022dc
 801ca80:	200022d8 	.word	0x200022d8
 801ca84:	200022bc 	.word	0x200022bc
 801ca88:	20002240 	.word	0x20002240
 801ca8c:	20002242 	.word	0x20002242

0801ca90 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801ca90:	4a17      	ldr	r2, [pc, #92]	; (801caf0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801ca92:	8803      	ldrh	r3, [r0, #0]
 801ca94:	8812      	ldrh	r2, [r2, #0]
 801ca96:	4293      	cmp	r3, r2
 801ca98:	d213      	bcs.n	801cac2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801ca9a:	4a16      	ldr	r2, [pc, #88]	; (801caf4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801ca9c:	6812      	ldr	r2, [r2, #0]
 801ca9e:	2114      	movs	r1, #20
 801caa0:	fb01 2303 	mla	r3, r1, r3, r2
 801caa4:	8a1a      	ldrh	r2, [r3, #16]
 801caa6:	8919      	ldrh	r1, [r3, #8]
 801caa8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801caac:	428a      	cmp	r2, r1
 801caae:	db1d      	blt.n	801caec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801cab0:	8a58      	ldrh	r0, [r3, #18]
 801cab2:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801cab6:	895b      	ldrh	r3, [r3, #10]
 801cab8:	4298      	cmp	r0, r3
 801caba:	bfac      	ite	ge
 801cabc:	2000      	movge	r0, #0
 801cabe:	2001      	movlt	r0, #1
 801cac0:	4770      	bx	lr
 801cac2:	490d      	ldr	r1, [pc, #52]	; (801caf8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801cac4:	8809      	ldrh	r1, [r1, #0]
 801cac6:	4411      	add	r1, r2
 801cac8:	428b      	cmp	r3, r1
 801caca:	da0d      	bge.n	801cae8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801cacc:	1a9b      	subs	r3, r3, r2
 801cace:	4a0b      	ldr	r2, [pc, #44]	; (801cafc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801cad0:	6812      	ldr	r2, [r2, #0]
 801cad2:	210e      	movs	r1, #14
 801cad4:	fb01 2303 	mla	r3, r1, r3, r2
 801cad8:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801cadc:	891a      	ldrh	r2, [r3, #8]
 801cade:	4291      	cmp	r1, r2
 801cae0:	db04      	blt.n	801caec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801cae2:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801cae6:	e7e6      	b.n	801cab6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801cae8:	2000      	movs	r0, #0
 801caea:	4770      	bx	lr
 801caec:	2001      	movs	r0, #1
 801caee:	4770      	bx	lr
 801caf0:	200022d4 	.word	0x200022d4
 801caf4:	200022dc 	.word	0x200022dc
 801caf8:	200022d8 	.word	0x200022d8
 801cafc:	200022bc 	.word	0x200022bc

0801cb00 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801cb00:	4a12      	ldr	r2, [pc, #72]	; (801cb4c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801cb02:	8803      	ldrh	r3, [r0, #0]
 801cb04:	8811      	ldrh	r1, [r2, #0]
 801cb06:	428b      	cmp	r3, r1
 801cb08:	d20b      	bcs.n	801cb22 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801cb0a:	4a11      	ldr	r2, [pc, #68]	; (801cb50 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801cb0c:	6812      	ldr	r2, [r2, #0]
 801cb0e:	b112      	cbz	r2, 801cb16 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801cb10:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801cb14:	b9c0      	cbnz	r0, 801cb48 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801cb16:	4a0f      	ldr	r2, [pc, #60]	; (801cb54 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801cb18:	6811      	ldr	r1, [r2, #0]
 801cb1a:	2214      	movs	r2, #20
 801cb1c:	4353      	muls	r3, r2
 801cb1e:	58c8      	ldr	r0, [r1, r3]
 801cb20:	4770      	bx	lr
 801cb22:	4a0d      	ldr	r2, [pc, #52]	; (801cb58 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801cb24:	8812      	ldrh	r2, [r2, #0]
 801cb26:	440a      	add	r2, r1
 801cb28:	4293      	cmp	r3, r2
 801cb2a:	da04      	bge.n	801cb36 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801cb2c:	4a08      	ldr	r2, [pc, #32]	; (801cb50 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801cb2e:	6812      	ldr	r2, [r2, #0]
 801cb30:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801cb34:	4770      	bx	lr
 801cb36:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801cb3a:	4293      	cmp	r3, r2
 801cb3c:	d103      	bne.n	801cb46 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801cb3e:	4b07      	ldr	r3, [pc, #28]	; (801cb5c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801cb40:	681b      	ldr	r3, [r3, #0]
 801cb42:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801cb44:	4770      	bx	lr
 801cb46:	2000      	movs	r0, #0
 801cb48:	4770      	bx	lr
 801cb4a:	bf00      	nop
 801cb4c:	200022d4 	.word	0x200022d4
 801cb50:	200022b8 	.word	0x200022b8
 801cb54:	200022dc 	.word	0x200022dc
 801cb58:	200022d8 	.word	0x200022d8
 801cb5c:	2000224c 	.word	0x2000224c

0801cb60 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801cb60:	4b24      	ldr	r3, [pc, #144]	; (801cbf4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801cb62:	8802      	ldrh	r2, [r0, #0]
 801cb64:	8818      	ldrh	r0, [r3, #0]
 801cb66:	4282      	cmp	r2, r0
 801cb68:	d221      	bcs.n	801cbae <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801cb6a:	4b23      	ldr	r3, [pc, #140]	; (801cbf8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801cb6c:	6819      	ldr	r1, [r3, #0]
 801cb6e:	2314      	movs	r3, #20
 801cb70:	fb03 1302 	mla	r3, r3, r2, r1
 801cb74:	6858      	ldr	r0, [r3, #4]
 801cb76:	2800      	cmp	r0, #0
 801cb78:	d03a      	beq.n	801cbf0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801cb7a:	4920      	ldr	r1, [pc, #128]	; (801cbfc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801cb7c:	6809      	ldr	r1, [r1, #0]
 801cb7e:	2900      	cmp	r1, #0
 801cb80:	d036      	beq.n	801cbf0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801cb82:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801cb86:	2900      	cmp	r1, #0
 801cb88:	d032      	beq.n	801cbf0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801cb8a:	891a      	ldrh	r2, [r3, #8]
 801cb8c:	8958      	ldrh	r0, [r3, #10]
 801cb8e:	4350      	muls	r0, r2
 801cb90:	7c5a      	ldrb	r2, [r3, #17]
 801cb92:	7cdb      	ldrb	r3, [r3, #19]
 801cb94:	0952      	lsrs	r2, r2, #5
 801cb96:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801cb9a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801cb9e:	2b0b      	cmp	r3, #11
 801cba0:	bf18      	it	ne
 801cba2:	0040      	lslne	r0, r0, #1
 801cba4:	3003      	adds	r0, #3
 801cba6:	f020 0003 	bic.w	r0, r0, #3
 801cbaa:	4408      	add	r0, r1
 801cbac:	4770      	bx	lr
 801cbae:	4b14      	ldr	r3, [pc, #80]	; (801cc00 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801cbb0:	881b      	ldrh	r3, [r3, #0]
 801cbb2:	4403      	add	r3, r0
 801cbb4:	429a      	cmp	r2, r3
 801cbb6:	da1a      	bge.n	801cbee <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801cbb8:	4b12      	ldr	r3, [pc, #72]	; (801cc04 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801cbba:	681b      	ldr	r3, [r3, #0]
 801cbbc:	1a10      	subs	r0, r2, r0
 801cbbe:	210e      	movs	r1, #14
 801cbc0:	fb01 3000 	mla	r0, r1, r0, r3
 801cbc4:	7b03      	ldrb	r3, [r0, #12]
 801cbc6:	f003 031f 	and.w	r3, r3, #31
 801cbca:	2b0b      	cmp	r3, #11
 801cbcc:	d10b      	bne.n	801cbe6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801cbce:	8903      	ldrh	r3, [r0, #8]
 801cbd0:	8940      	ldrh	r0, [r0, #10]
 801cbd2:	4358      	muls	r0, r3
 801cbd4:	4b09      	ldr	r3, [pc, #36]	; (801cbfc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801cbd6:	6819      	ldr	r1, [r3, #0]
 801cbd8:	3003      	adds	r0, #3
 801cbda:	f020 0303 	bic.w	r3, r0, #3
 801cbde:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801cbe2:	4418      	add	r0, r3
 801cbe4:	4770      	bx	lr
 801cbe6:	2b0d      	cmp	r3, #13
 801cbe8:	d101      	bne.n	801cbee <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801cbea:	300d      	adds	r0, #13
 801cbec:	4770      	bx	lr
 801cbee:	2000      	movs	r0, #0
 801cbf0:	4770      	bx	lr
 801cbf2:	bf00      	nop
 801cbf4:	200022d4 	.word	0x200022d4
 801cbf8:	200022dc 	.word	0x200022dc
 801cbfc:	200022b8 	.word	0x200022b8
 801cc00:	200022d8 	.word	0x200022d8
 801cc04:	200022bc 	.word	0x200022bc

0801cc08 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801cc08:	b510      	push	{r4, lr}
 801cc0a:	4a17      	ldr	r2, [pc, #92]	; (801cc68 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801cc0c:	8803      	ldrh	r3, [r0, #0]
 801cc0e:	8812      	ldrh	r2, [r2, #0]
 801cc10:	4293      	cmp	r3, r2
 801cc12:	d20c      	bcs.n	801cc2e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801cc14:	4a15      	ldr	r2, [pc, #84]	; (801cc6c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801cc16:	6812      	ldr	r2, [r2, #0]
 801cc18:	2114      	movs	r1, #20
 801cc1a:	fb01 2303 	mla	r3, r1, r3, r2
 801cc1e:	7c58      	ldrb	r0, [r3, #17]
 801cc20:	0942      	lsrs	r2, r0, #5
 801cc22:	7cd8      	ldrb	r0, [r3, #19]
 801cc24:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801cc28:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801cc2c:	bd10      	pop	{r4, pc}
 801cc2e:	4910      	ldr	r1, [pc, #64]	; (801cc70 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801cc30:	8809      	ldrh	r1, [r1, #0]
 801cc32:	4411      	add	r1, r2
 801cc34:	428b      	cmp	r3, r1
 801cc36:	da09      	bge.n	801cc4c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801cc38:	1a9b      	subs	r3, r3, r2
 801cc3a:	4a0e      	ldr	r2, [pc, #56]	; (801cc74 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801cc3c:	6812      	ldr	r2, [r2, #0]
 801cc3e:	210e      	movs	r1, #14
 801cc40:	fb01 2303 	mla	r3, r1, r3, r2
 801cc44:	7b18      	ldrb	r0, [r3, #12]
 801cc46:	f000 001f 	and.w	r0, r0, #31
 801cc4a:	e7ef      	b.n	801cc2c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801cc4c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801cc50:	4293      	cmp	r3, r2
 801cc52:	d106      	bne.n	801cc62 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801cc54:	f7ee f9d4 	bl	800b000 <_ZN8touchgfx3HAL3lcdEv>
 801cc58:	6803      	ldr	r3, [r0, #0]
 801cc5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cc5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cc60:	4718      	bx	r3
 801cc62:	2000      	movs	r0, #0
 801cc64:	e7e2      	b.n	801cc2c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801cc66:	bf00      	nop
 801cc68:	200022d4 	.word	0x200022d4
 801cc6c:	200022dc 	.word	0x200022dc
 801cc70:	200022d8 	.word	0x200022d8
 801cc74:	200022bc 	.word	0x200022bc

0801cc78 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801cc78:	2010      	movs	r0, #16
 801cc7a:	4770      	bx	lr

0801cc7c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801cc7c:	2000      	movs	r0, #0
 801cc7e:	4770      	bx	lr

0801cc80 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801cc80:	4b02      	ldr	r3, [pc, #8]	; (801cc8c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801cc82:	8818      	ldrh	r0, [r3, #0]
 801cc84:	0040      	lsls	r0, r0, #1
 801cc86:	b280      	uxth	r0, r0
 801cc88:	4770      	bx	lr
 801cc8a:	bf00      	nop
 801cc8c:	20002246 	.word	0x20002246

0801cc90 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801cc90:	2bff      	cmp	r3, #255	; 0xff
 801cc92:	d050      	beq.n	801cd36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801cc94:	2a0b      	cmp	r2, #11
 801cc96:	d04a      	beq.n	801cd2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801cc98:	d80e      	bhi.n	801ccb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801cc9a:	2a03      	cmp	r2, #3
 801cc9c:	d03f      	beq.n	801cd1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801cc9e:	d804      	bhi.n	801ccaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801cca0:	2a01      	cmp	r2, #1
 801cca2:	d03e      	beq.n	801cd22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801cca4:	d93f      	bls.n	801cd26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801cca6:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801cca8:	4770      	bx	lr
 801ccaa:	2a09      	cmp	r2, #9
 801ccac:	d03f      	beq.n	801cd2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801ccae:	d83c      	bhi.n	801cd2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801ccb0:	2a08      	cmp	r2, #8
 801ccb2:	d03a      	beq.n	801cd2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801ccb4:	2000      	movs	r0, #0
 801ccb6:	4770      	bx	lr
 801ccb8:	2a2f      	cmp	r2, #47	; 0x2f
 801ccba:	d024      	beq.n	801cd06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801ccbc:	d80d      	bhi.n	801ccda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801ccbe:	2a2d      	cmp	r2, #45	; 0x2d
 801ccc0:	d014      	beq.n	801ccec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801ccc2:	d826      	bhi.n	801cd12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801ccc4:	2a2c      	cmp	r2, #44	; 0x2c
 801ccc6:	d1f5      	bne.n	801ccb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ccc8:	684b      	ldr	r3, [r1, #4]
 801ccca:	781b      	ldrb	r3, [r3, #0]
 801cccc:	2b01      	cmp	r3, #1
 801ccce:	d018      	beq.n	801cd02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801ccd0:	d323      	bcc.n	801cd1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801ccd2:	2b02      	cmp	r3, #2
 801ccd4:	d1ee      	bne.n	801ccb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ccd6:	6880      	ldr	r0, [r0, #8]
 801ccd8:	4770      	bx	lr
 801ccda:	2a31      	cmp	r2, #49	; 0x31
 801ccdc:	d004      	beq.n	801cce8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801ccde:	d328      	bcc.n	801cd32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801cce0:	2a32      	cmp	r2, #50	; 0x32
 801cce2:	d026      	beq.n	801cd32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801cce4:	2a33      	cmp	r2, #51	; 0x33
 801cce6:	d1e5      	bne.n	801ccb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cce8:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801ccea:	4770      	bx	lr
 801ccec:	684b      	ldr	r3, [r1, #4]
 801ccee:	781b      	ldrb	r3, [r3, #0]
 801ccf0:	2b01      	cmp	r3, #1
 801ccf2:	d004      	beq.n	801ccfe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801ccf4:	d30b      	bcc.n	801cd0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ccf6:	2b02      	cmp	r3, #2
 801ccf8:	d1dc      	bne.n	801ccb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ccfa:	6900      	ldr	r0, [r0, #16]
 801ccfc:	4770      	bx	lr
 801ccfe:	6a00      	ldr	r0, [r0, #32]
 801cd00:	4770      	bx	lr
 801cd02:	6980      	ldr	r0, [r0, #24]
 801cd04:	4770      	bx	lr
 801cd06:	684b      	ldr	r3, [r1, #4]
 801cd08:	781b      	ldrb	r3, [r3, #0]
 801cd0a:	2b00      	cmp	r3, #0
 801cd0c:	d1d2      	bne.n	801ccb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cd0e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801cd10:	4770      	bx	lr
 801cd12:	684b      	ldr	r3, [r1, #4]
 801cd14:	781b      	ldrb	r3, [r3, #0]
 801cd16:	2b00      	cmp	r3, #0
 801cd18:	d1cc      	bne.n	801ccb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cd1a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801cd1c:	4770      	bx	lr
 801cd1e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801cd20:	4770      	bx	lr
 801cd22:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801cd24:	4770      	bx	lr
 801cd26:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801cd28:	4770      	bx	lr
 801cd2a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801cd2c:	4770      	bx	lr
 801cd2e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801cd30:	4770      	bx	lr
 801cd32:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801cd34:	4770      	bx	lr
 801cd36:	2a0b      	cmp	r2, #11
 801cd38:	d049      	beq.n	801cdce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801cd3a:	d80e      	bhi.n	801cd5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801cd3c:	2a03      	cmp	r2, #3
 801cd3e:	d040      	beq.n	801cdc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801cd40:	d804      	bhi.n	801cd4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801cd42:	2a01      	cmp	r2, #1
 801cd44:	d03f      	beq.n	801cdc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801cd46:	d940      	bls.n	801cdca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801cd48:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801cd4a:	4770      	bx	lr
 801cd4c:	2a09      	cmp	r2, #9
 801cd4e:	d03e      	beq.n	801cdce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801cd50:	d801      	bhi.n	801cd56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801cd52:	2a08      	cmp	r2, #8
 801cd54:	d1ae      	bne.n	801ccb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cd56:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801cd58:	4770      	bx	lr
 801cd5a:	2a2f      	cmp	r2, #47	; 0x2f
 801cd5c:	d024      	beq.n	801cda8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801cd5e:	d80d      	bhi.n	801cd7c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801cd60:	2a2d      	cmp	r2, #45	; 0x2d
 801cd62:	d014      	beq.n	801cd8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801cd64:	d826      	bhi.n	801cdb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801cd66:	2a2c      	cmp	r2, #44	; 0x2c
 801cd68:	d1a4      	bne.n	801ccb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cd6a:	684b      	ldr	r3, [r1, #4]
 801cd6c:	781b      	ldrb	r3, [r3, #0]
 801cd6e:	2b01      	cmp	r3, #1
 801cd70:	d018      	beq.n	801cda4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801cd72:	d324      	bcc.n	801cdbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801cd74:	2b02      	cmp	r3, #2
 801cd76:	d19d      	bne.n	801ccb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cd78:	68c0      	ldr	r0, [r0, #12]
 801cd7a:	4770      	bx	lr
 801cd7c:	2a31      	cmp	r2, #49	; 0x31
 801cd7e:	d004      	beq.n	801cd8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801cd80:	d327      	bcc.n	801cdd2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801cd82:	2a32      	cmp	r2, #50	; 0x32
 801cd84:	d025      	beq.n	801cdd2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801cd86:	2a33      	cmp	r2, #51	; 0x33
 801cd88:	d194      	bne.n	801ccb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cd8a:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801cd8c:	4770      	bx	lr
 801cd8e:	684b      	ldr	r3, [r1, #4]
 801cd90:	781b      	ldrb	r3, [r3, #0]
 801cd92:	2b01      	cmp	r3, #1
 801cd94:	d004      	beq.n	801cda0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801cd96:	d30b      	bcc.n	801cdb0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801cd98:	2b02      	cmp	r3, #2
 801cd9a:	d18b      	bne.n	801ccb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cd9c:	6940      	ldr	r0, [r0, #20]
 801cd9e:	4770      	bx	lr
 801cda0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801cda2:	4770      	bx	lr
 801cda4:	69c0      	ldr	r0, [r0, #28]
 801cda6:	4770      	bx	lr
 801cda8:	684b      	ldr	r3, [r1, #4]
 801cdaa:	781b      	ldrb	r3, [r3, #0]
 801cdac:	2b00      	cmp	r3, #0
 801cdae:	d181      	bne.n	801ccb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cdb0:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801cdb2:	4770      	bx	lr
 801cdb4:	684b      	ldr	r3, [r1, #4]
 801cdb6:	781b      	ldrb	r3, [r3, #0]
 801cdb8:	2b00      	cmp	r3, #0
 801cdba:	f47f af7b 	bne.w	801ccb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cdbe:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801cdc0:	4770      	bx	lr
 801cdc2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801cdc4:	4770      	bx	lr
 801cdc6:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801cdc8:	4770      	bx	lr
 801cdca:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801cdcc:	4770      	bx	lr
 801cdce:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801cdd0:	4770      	bx	lr
 801cdd2:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801cdd4:	4770      	bx	lr

0801cdd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cdd6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cdda:	b087      	sub	sp, #28
 801cddc:	9815      	ldr	r0, [sp, #84]	; 0x54
 801cdde:	9205      	str	r2, [sp, #20]
 801cde0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cde4:	9202      	str	r2, [sp, #8]
 801cde6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801cdea:	9101      	str	r1, [sp, #4]
 801cdec:	6841      	ldr	r1, [r0, #4]
 801cdee:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801cdf2:	fb01 2404 	mla	r4, r1, r4, r2
 801cdf6:	6802      	ldr	r2, [r0, #0]
 801cdf8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cdfc:	f8de 2000 	ldr.w	r2, [lr]
 801ce00:	9203      	str	r2, [sp, #12]
 801ce02:	f8de 2004 	ldr.w	r2, [lr, #4]
 801ce06:	3204      	adds	r2, #4
 801ce08:	9204      	str	r2, [sp, #16]
 801ce0a:	9a02      	ldr	r2, [sp, #8]
 801ce0c:	43d6      	mvns	r6, r2
 801ce0e:	b2f6      	uxtb	r6, r6
 801ce10:	9a01      	ldr	r2, [sp, #4]
 801ce12:	2a00      	cmp	r2, #0
 801ce14:	dc03      	bgt.n	801ce1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ce16:	9a05      	ldr	r2, [sp, #20]
 801ce18:	2a00      	cmp	r2, #0
 801ce1a:	f340 8129 	ble.w	801d070 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801ce1e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ce20:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801ce24:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801ce28:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ce2c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ce2e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ce32:	2b00      	cmp	r3, #0
 801ce34:	dd0e      	ble.n	801ce54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ce36:	1408      	asrs	r0, r1, #16
 801ce38:	d405      	bmi.n	801ce46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ce3a:	4560      	cmp	r0, ip
 801ce3c:	da03      	bge.n	801ce46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ce3e:	1410      	asrs	r0, r2, #16
 801ce40:	d401      	bmi.n	801ce46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ce42:	42b8      	cmp	r0, r7
 801ce44:	db07      	blt.n	801ce56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ce46:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ce48:	4401      	add	r1, r0
 801ce4a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ce4c:	3b01      	subs	r3, #1
 801ce4e:	4402      	add	r2, r0
 801ce50:	3402      	adds	r4, #2
 801ce52:	e7ee      	b.n	801ce32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801ce54:	d071      	beq.n	801cf3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ce56:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ce58:	1e58      	subs	r0, r3, #1
 801ce5a:	fb05 1500 	mla	r5, r5, r0, r1
 801ce5e:	142d      	asrs	r5, r5, #16
 801ce60:	d45f      	bmi.n	801cf22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ce62:	4565      	cmp	r5, ip
 801ce64:	da5d      	bge.n	801cf22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ce66:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ce68:	fb05 2000 	mla	r0, r5, r0, r2
 801ce6c:	1400      	asrs	r0, r0, #16
 801ce6e:	d458      	bmi.n	801cf22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ce70:	42b8      	cmp	r0, r7
 801ce72:	da56      	bge.n	801cf22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ce74:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801ce78:	4699      	mov	r9, r3
 801ce7a:	46a2      	mov	sl, r4
 801ce7c:	f1b9 0f00 	cmp.w	r9, #0
 801ce80:	dd57      	ble.n	801cf32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801ce82:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801ce86:	9803      	ldr	r0, [sp, #12]
 801ce88:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801ce8c:	140d      	asrs	r5, r1, #16
 801ce8e:	fb07 000c 	mla	r0, r7, ip, r0
 801ce92:	f109 39ff 	add.w	r9, r9, #4294967295
 801ce96:	5d40      	ldrb	r0, [r0, r5]
 801ce98:	9d04      	ldr	r5, [sp, #16]
 801ce9a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ce9e:	f8ba 5000 	ldrh.w	r5, [sl]
 801cea2:	122f      	asrs	r7, r5, #8
 801cea4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801cea8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ceac:	fb17 f706 	smulbb	r7, r7, r6
 801ceb0:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801ceb4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ceb8:	00ed      	lsls	r5, r5, #3
 801ceba:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801cebe:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801cec2:	10c7      	asrs	r7, r0, #3
 801cec4:	b2ed      	uxtb	r5, r5
 801cec6:	00c0      	lsls	r0, r0, #3
 801cec8:	fb18 f806 	smulbb	r8, r8, r6
 801cecc:	fb15 f506 	smulbb	r5, r5, r6
 801ced0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ced4:	b2c0      	uxtb	r0, r0
 801ced6:	fa1f fc8c 	uxth.w	ip, ip
 801ceda:	fb07 870b 	mla	r7, r7, fp, r8
 801cede:	fb00 500b 	mla	r0, r0, fp, r5
 801cee2:	b280      	uxth	r0, r0
 801cee4:	b2bf      	uxth	r7, r7
 801cee6:	f10c 0501 	add.w	r5, ip, #1
 801ceea:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ceee:	f107 0801 	add.w	r8, r7, #1
 801cef2:	1c45      	adds	r5, r0, #1
 801cef4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801cef8:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801cefc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cefe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801cf02:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801cf06:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801cf0a:	ea45 0c0c 	orr.w	ip, r5, ip
 801cf0e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801cf12:	4401      	add	r1, r0
 801cf14:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cf16:	ea4c 0c08 	orr.w	ip, ip, r8
 801cf1a:	f82a cb02 	strh.w	ip, [sl], #2
 801cf1e:	4402      	add	r2, r0
 801cf20:	e7ac      	b.n	801ce7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801cf22:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801cf26:	f04f 0800 	mov.w	r8, #0
 801cf2a:	eb03 0008 	add.w	r0, r3, r8
 801cf2e:	2800      	cmp	r0, #0
 801cf30:	dc41      	bgt.n	801cfb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801cf32:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cf36:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cf3a:	9b01      	ldr	r3, [sp, #4]
 801cf3c:	2b00      	cmp	r3, #0
 801cf3e:	f340 8097 	ble.w	801d070 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801cf42:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cf46:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cf4a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cf4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cf50:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cf54:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cf58:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cf5c:	eef0 6a62 	vmov.f32	s13, s5
 801cf60:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cf64:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cf68:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cf6c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801cf70:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cf74:	eef0 6a43 	vmov.f32	s13, s6
 801cf78:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cf7c:	ee12 2a90 	vmov	r2, s5
 801cf80:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cf84:	fb92 f3f3 	sdiv	r3, r2, r3
 801cf88:	ee13 2a10 	vmov	r2, s6
 801cf8c:	9313      	str	r3, [sp, #76]	; 0x4c
 801cf8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cf90:	fb92 f3f3 	sdiv	r3, r2, r3
 801cf94:	9314      	str	r3, [sp, #80]	; 0x50
 801cf96:	9b01      	ldr	r3, [sp, #4]
 801cf98:	9a05      	ldr	r2, [sp, #20]
 801cf9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cf9e:	3b01      	subs	r3, #1
 801cfa0:	9301      	str	r3, [sp, #4]
 801cfa2:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801cfa6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cfa8:	eeb0 3a67 	vmov.f32	s6, s15
 801cfac:	bf08      	it	eq
 801cfae:	4613      	moveq	r3, r2
 801cfb0:	eef0 2a47 	vmov.f32	s5, s14
 801cfb4:	e72c      	b.n	801ce10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cfb6:	140f      	asrs	r7, r1, #16
 801cfb8:	d453      	bmi.n	801d062 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cfba:	f8de 5008 	ldr.w	r5, [lr, #8]
 801cfbe:	42bd      	cmp	r5, r7
 801cfc0:	dd4f      	ble.n	801d062 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cfc2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801cfc6:	d44c      	bmi.n	801d062 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cfc8:	f8de 000c 	ldr.w	r0, [lr, #12]
 801cfcc:	4560      	cmp	r0, ip
 801cfce:	dd48      	ble.n	801d062 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cfd0:	9803      	ldr	r0, [sp, #12]
 801cfd2:	b22d      	sxth	r5, r5
 801cfd4:	fb0c 0505 	mla	r5, ip, r5, r0
 801cfd8:	5de8      	ldrb	r0, [r5, r7]
 801cfda:	9d04      	ldr	r5, [sp, #16]
 801cfdc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801cfe0:	f06f 0501 	mvn.w	r5, #1
 801cfe4:	fb05 fb08 	mul.w	fp, r5, r8
 801cfe8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801cfec:	f834 500b 	ldrh.w	r5, [r4, fp]
 801cff0:	122f      	asrs	r7, r5, #8
 801cff2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cff6:	fb17 f706 	smulbb	r7, r7, r6
 801cffa:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801cffe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d002:	00ed      	lsls	r5, r5, #3
 801d004:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801d008:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d00c:	10c7      	asrs	r7, r0, #3
 801d00e:	b2ed      	uxtb	r5, r5
 801d010:	00c0      	lsls	r0, r0, #3
 801d012:	fb19 f906 	smulbb	r9, r9, r6
 801d016:	fb15 f506 	smulbb	r5, r5, r6
 801d01a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d01e:	b2c0      	uxtb	r0, r0
 801d020:	fa1f fc8c 	uxth.w	ip, ip
 801d024:	fb07 970a 	mla	r7, r7, sl, r9
 801d028:	fb00 500a 	mla	r0, r0, sl, r5
 801d02c:	b2bf      	uxth	r7, r7
 801d02e:	b280      	uxth	r0, r0
 801d030:	f10c 0501 	add.w	r5, ip, #1
 801d034:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801d038:	f107 0901 	add.w	r9, r7, #1
 801d03c:	1c45      	adds	r5, r0, #1
 801d03e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801d042:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801d046:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d04a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801d04e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d052:	ea45 0c0c 	orr.w	ip, r5, ip
 801d056:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d05a:	ea4c 0c09 	orr.w	ip, ip, r9
 801d05e:	f824 c00b 	strh.w	ip, [r4, fp]
 801d062:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d064:	4401      	add	r1, r0
 801d066:	9814      	ldr	r0, [sp, #80]	; 0x50
 801d068:	f108 38ff 	add.w	r8, r8, #4294967295
 801d06c:	4402      	add	r2, r0
 801d06e:	e75c      	b.n	801cf2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801d070:	b007      	add	sp, #28
 801d072:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d076 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d076:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d07a:	b085      	sub	sp, #20
 801d07c:	4693      	mov	fp, r2
 801d07e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d080:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d082:	6870      	ldr	r0, [r6, #4]
 801d084:	9100      	str	r1, [sp, #0]
 801d086:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d08a:	fb00 2404 	mla	r4, r0, r4, r2
 801d08e:	6832      	ldr	r2, [r6, #0]
 801d090:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d094:	682a      	ldr	r2, [r5, #0]
 801d096:	9201      	str	r2, [sp, #4]
 801d098:	686a      	ldr	r2, [r5, #4]
 801d09a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801d09e:	3204      	adds	r2, #4
 801d0a0:	9202      	str	r2, [sp, #8]
 801d0a2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d0a6:	9a00      	ldr	r2, [sp, #0]
 801d0a8:	2a00      	cmp	r2, #0
 801d0aa:	dc03      	bgt.n	801d0b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801d0ac:	f1bb 0f00 	cmp.w	fp, #0
 801d0b0:	f340 80a0 	ble.w	801d1f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801d0b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d0b6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801d0ba:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801d0be:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d0c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d0c4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d0c8:	2b00      	cmp	r3, #0
 801d0ca:	dd0c      	ble.n	801d0e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801d0cc:	1406      	asrs	r6, r0, #16
 801d0ce:	d405      	bmi.n	801d0dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d0d0:	454e      	cmp	r6, r9
 801d0d2:	da03      	bge.n	801d0dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d0d4:	1416      	asrs	r6, r2, #16
 801d0d6:	d401      	bmi.n	801d0dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d0d8:	4546      	cmp	r6, r8
 801d0da:	db05      	blt.n	801d0e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d0dc:	4470      	add	r0, lr
 801d0de:	4462      	add	r2, ip
 801d0e0:	3b01      	subs	r3, #1
 801d0e2:	3402      	adds	r4, #2
 801d0e4:	e7f0      	b.n	801d0c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801d0e6:	d00f      	beq.n	801d108 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d0e8:	1e5e      	subs	r6, r3, #1
 801d0ea:	fb0e 0706 	mla	r7, lr, r6, r0
 801d0ee:	143f      	asrs	r7, r7, #16
 801d0f0:	d541      	bpl.n	801d176 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801d0f2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801d0f6:	4698      	mov	r8, r3
 801d0f8:	9603      	str	r6, [sp, #12]
 801d0fa:	f1b8 0f00 	cmp.w	r8, #0
 801d0fe:	dc59      	bgt.n	801d1b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801d100:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d104:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d108:	9b00      	ldr	r3, [sp, #0]
 801d10a:	2b00      	cmp	r3, #0
 801d10c:	dd72      	ble.n	801d1f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801d10e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d112:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d116:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d11a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d11c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d120:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d124:	eeb0 6a62 	vmov.f32	s12, s5
 801d128:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d12c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d130:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d134:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d138:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d13c:	eeb0 6a43 	vmov.f32	s12, s6
 801d140:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d144:	ee12 2a90 	vmov	r2, s5
 801d148:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d14c:	fb92 fef3 	sdiv	lr, r2, r3
 801d150:	ee13 2a10 	vmov	r2, s6
 801d154:	fb92 fcf3 	sdiv	ip, r2, r3
 801d158:	9b00      	ldr	r3, [sp, #0]
 801d15a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d15e:	3b01      	subs	r3, #1
 801d160:	9300      	str	r3, [sp, #0]
 801d162:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d166:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d168:	eeb0 3a67 	vmov.f32	s6, s15
 801d16c:	bf08      	it	eq
 801d16e:	465b      	moveq	r3, fp
 801d170:	eef0 2a47 	vmov.f32	s5, s14
 801d174:	e797      	b.n	801d0a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801d176:	454f      	cmp	r7, r9
 801d178:	dabb      	bge.n	801d0f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d17a:	fb0c 2606 	mla	r6, ip, r6, r2
 801d17e:	1436      	asrs	r6, r6, #16
 801d180:	d4b7      	bmi.n	801d0f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d182:	4546      	cmp	r6, r8
 801d184:	dab5      	bge.n	801d0f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d186:	461e      	mov	r6, r3
 801d188:	46a0      	mov	r8, r4
 801d18a:	2e00      	cmp	r6, #0
 801d18c:	ddb8      	ble.n	801d100 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801d18e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801d192:	9901      	ldr	r1, [sp, #4]
 801d194:	1417      	asrs	r7, r2, #16
 801d196:	ea4f 4920 	mov.w	r9, r0, asr #16
 801d19a:	fb0a 1707 	mla	r7, sl, r7, r1
 801d19e:	9902      	ldr	r1, [sp, #8]
 801d1a0:	f817 7009 	ldrb.w	r7, [r7, r9]
 801d1a4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801d1a8:	f828 7b02 	strh.w	r7, [r8], #2
 801d1ac:	4470      	add	r0, lr
 801d1ae:	4462      	add	r2, ip
 801d1b0:	3e01      	subs	r6, #1
 801d1b2:	e7ea      	b.n	801d18a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801d1b4:	ea5f 4920 	movs.w	r9, r0, asr #16
 801d1b8:	d417      	bmi.n	801d1ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801d1ba:	68ae      	ldr	r6, [r5, #8]
 801d1bc:	454e      	cmp	r6, r9
 801d1be:	dd14      	ble.n	801d1ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801d1c0:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801d1c4:	d411      	bmi.n	801d1ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801d1c6:	68ef      	ldr	r7, [r5, #12]
 801d1c8:	4557      	cmp	r7, sl
 801d1ca:	dd0e      	ble.n	801d1ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801d1cc:	9f01      	ldr	r7, [sp, #4]
 801d1ce:	b236      	sxth	r6, r6
 801d1d0:	fb0a 7606 	mla	r6, sl, r6, r7
 801d1d4:	9f02      	ldr	r7, [sp, #8]
 801d1d6:	f816 6009 	ldrb.w	r6, [r6, r9]
 801d1da:	f06f 0101 	mvn.w	r1, #1
 801d1de:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801d1e2:	fb01 f608 	mul.w	r6, r1, r8
 801d1e6:	9903      	ldr	r1, [sp, #12]
 801d1e8:	538f      	strh	r7, [r1, r6]
 801d1ea:	4470      	add	r0, lr
 801d1ec:	4462      	add	r2, ip
 801d1ee:	f108 38ff 	add.w	r8, r8, #4294967295
 801d1f2:	e782      	b.n	801d0fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d1f4:	b005      	add	sp, #20
 801d1f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d1fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d1fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d1fe:	b087      	sub	sp, #28
 801d200:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d202:	9205      	str	r2, [sp, #20]
 801d204:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d208:	9203      	str	r2, [sp, #12]
 801d20a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801d20e:	9102      	str	r1, [sp, #8]
 801d210:	6861      	ldr	r1, [r4, #4]
 801d212:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801d216:	fb01 2000 	mla	r0, r1, r0, r2
 801d21a:	6822      	ldr	r2, [r4, #0]
 801d21c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801d220:	9200      	str	r2, [sp, #0]
 801d222:	f8dc 2000 	ldr.w	r2, [ip]
 801d226:	9204      	str	r2, [sp, #16]
 801d228:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801d22c:	3204      	adds	r2, #4
 801d22e:	9201      	str	r2, [sp, #4]
 801d230:	9a03      	ldr	r2, [sp, #12]
 801d232:	43d5      	mvns	r5, r2
 801d234:	b2ed      	uxtb	r5, r5
 801d236:	9a02      	ldr	r2, [sp, #8]
 801d238:	2a00      	cmp	r2, #0
 801d23a:	dc03      	bgt.n	801d244 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d23c:	9a05      	ldr	r2, [sp, #20]
 801d23e:	2a00      	cmp	r2, #0
 801d240:	f340 812c 	ble.w	801d49c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801d244:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d246:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801d24a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801d24e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d252:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d254:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d258:	2b00      	cmp	r3, #0
 801d25a:	dd10      	ble.n	801d27e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d25c:	140c      	asrs	r4, r1, #16
 801d25e:	d405      	bmi.n	801d26c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d260:	4574      	cmp	r4, lr
 801d262:	da03      	bge.n	801d26c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d264:	1414      	asrs	r4, r2, #16
 801d266:	d401      	bmi.n	801d26c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d268:	42bc      	cmp	r4, r7
 801d26a:	db09      	blt.n	801d280 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d26c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d26e:	9800      	ldr	r0, [sp, #0]
 801d270:	4421      	add	r1, r4
 801d272:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d274:	3002      	adds	r0, #2
 801d276:	4422      	add	r2, r4
 801d278:	3b01      	subs	r3, #1
 801d27a:	9000      	str	r0, [sp, #0]
 801d27c:	e7ec      	b.n	801d258 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801d27e:	d071      	beq.n	801d364 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801d280:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d282:	1e5c      	subs	r4, r3, #1
 801d284:	fb06 1604 	mla	r6, r6, r4, r1
 801d288:	1436      	asrs	r6, r6, #16
 801d28a:	d45d      	bmi.n	801d348 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801d28c:	4576      	cmp	r6, lr
 801d28e:	da5b      	bge.n	801d348 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801d290:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801d292:	fb06 2404 	mla	r4, r6, r4, r2
 801d296:	1424      	asrs	r4, r4, #16
 801d298:	d456      	bmi.n	801d348 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801d29a:	42bc      	cmp	r4, r7
 801d29c:	da54      	bge.n	801d348 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801d29e:	f8dd 9000 	ldr.w	r9, [sp]
 801d2a2:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801d2a6:	4698      	mov	r8, r3
 801d2a8:	f1b8 0f00 	cmp.w	r8, #0
 801d2ac:	dd54      	ble.n	801d358 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801d2ae:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801d2b2:	9804      	ldr	r0, [sp, #16]
 801d2b4:	1414      	asrs	r4, r2, #16
 801d2b6:	fb07 0404 	mla	r4, r7, r4, r0
 801d2ba:	140e      	asrs	r6, r1, #16
 801d2bc:	9801      	ldr	r0, [sp, #4]
 801d2be:	f814 e006 	ldrb.w	lr, [r4, r6]
 801d2c2:	f8b9 4000 	ldrh.w	r4, [r9]
 801d2c6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d2ca:	eb00 0b0e 	add.w	fp, r0, lr
 801d2ce:	1227      	asrs	r7, r4, #8
 801d2d0:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801d2d4:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d2d8:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801d2dc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d2de:	fb16 f60a 	smulbb	r6, r6, sl
 801d2e2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d2e6:	fb07 6705 	mla	r7, r7, r5, r6
 801d2ea:	10e6      	asrs	r6, r4, #3
 801d2ec:	00e4      	lsls	r4, r4, #3
 801d2ee:	b2e4      	uxtb	r4, r4
 801d2f0:	fb1b fb0a 	smulbb	fp, fp, sl
 801d2f4:	fb14 f405 	smulbb	r4, r4, r5
 801d2f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d2fc:	b2bf      	uxth	r7, r7
 801d2fe:	fb06 b605 	mla	r6, r6, r5, fp
 801d302:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801d306:	b2b6      	uxth	r6, r6
 801d308:	fa1f fe8e 	uxth.w	lr, lr
 801d30c:	1c7c      	adds	r4, r7, #1
 801d30e:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801d312:	f106 0b01 	add.w	fp, r6, #1
 801d316:	f10e 0401 	add.w	r4, lr, #1
 801d31a:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801d31e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801d322:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d326:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801d32a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801d32e:	4327      	orrs	r7, r4
 801d330:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d334:	4401      	add	r1, r0
 801d336:	9814      	ldr	r0, [sp, #80]	; 0x50
 801d338:	ea47 070b 	orr.w	r7, r7, fp
 801d33c:	f829 7b02 	strh.w	r7, [r9], #2
 801d340:	4402      	add	r2, r0
 801d342:	f108 38ff 	add.w	r8, r8, #4294967295
 801d346:	e7af      	b.n	801d2a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801d348:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801d34c:	f04f 0e00 	mov.w	lr, #0
 801d350:	eb03 040e 	add.w	r4, r3, lr
 801d354:	2c00      	cmp	r4, #0
 801d356:	dc43      	bgt.n	801d3e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801d358:	9a00      	ldr	r2, [sp, #0]
 801d35a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d35e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d362:	9300      	str	r3, [sp, #0]
 801d364:	9b02      	ldr	r3, [sp, #8]
 801d366:	2b00      	cmp	r3, #0
 801d368:	f340 8098 	ble.w	801d49c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801d36c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d370:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d374:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d378:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d37a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d37e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d382:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d386:	eef0 6a62 	vmov.f32	s13, s5
 801d38a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d38e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d392:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d396:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801d39a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d39e:	eef0 6a43 	vmov.f32	s13, s6
 801d3a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d3a6:	ee12 2a90 	vmov	r2, s5
 801d3aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d3ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801d3b2:	ee13 2a10 	vmov	r2, s6
 801d3b6:	9313      	str	r3, [sp, #76]	; 0x4c
 801d3b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d3ba:	fb92 f3f3 	sdiv	r3, r2, r3
 801d3be:	9314      	str	r3, [sp, #80]	; 0x50
 801d3c0:	9b02      	ldr	r3, [sp, #8]
 801d3c2:	9a05      	ldr	r2, [sp, #20]
 801d3c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d3c8:	3b01      	subs	r3, #1
 801d3ca:	9302      	str	r3, [sp, #8]
 801d3cc:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801d3d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d3d2:	eeb0 3a67 	vmov.f32	s6, s15
 801d3d6:	bf08      	it	eq
 801d3d8:	4613      	moveq	r3, r2
 801d3da:	eef0 2a47 	vmov.f32	s5, s14
 801d3de:	e72a      	b.n	801d236 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d3e0:	140f      	asrs	r7, r1, #16
 801d3e2:	d454      	bmi.n	801d48e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801d3e4:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801d3e8:	42be      	cmp	r6, r7
 801d3ea:	dd50      	ble.n	801d48e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801d3ec:	ea5f 4822 	movs.w	r8, r2, asr #16
 801d3f0:	d44d      	bmi.n	801d48e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801d3f2:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801d3f6:	4544      	cmp	r4, r8
 801d3f8:	dd49      	ble.n	801d48e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801d3fa:	9c04      	ldr	r4, [sp, #16]
 801d3fc:	b236      	sxth	r6, r6
 801d3fe:	fb08 4606 	mla	r6, r8, r6, r4
 801d402:	f06f 0001 	mvn.w	r0, #1
 801d406:	f816 8007 	ldrb.w	r8, [r6, r7]
 801d40a:	9c01      	ldr	r4, [sp, #4]
 801d40c:	fb00 fa0e 	mul.w	sl, r0, lr
 801d410:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801d414:	9800      	ldr	r0, [sp, #0]
 801d416:	eb04 0b08 	add.w	fp, r4, r8
 801d41a:	f830 400a 	ldrh.w	r4, [r0, sl]
 801d41e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801d422:	9801      	ldr	r0, [sp, #4]
 801d424:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d428:	f810 8008 	ldrb.w	r8, [r0, r8]
 801d42c:	9800      	ldr	r0, [sp, #0]
 801d42e:	1227      	asrs	r7, r4, #8
 801d430:	fb16 f609 	smulbb	r6, r6, r9
 801d434:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d438:	fb07 6705 	mla	r7, r7, r5, r6
 801d43c:	10e6      	asrs	r6, r4, #3
 801d43e:	00e4      	lsls	r4, r4, #3
 801d440:	b2e4      	uxtb	r4, r4
 801d442:	fb1b fb09 	smulbb	fp, fp, r9
 801d446:	fb14 f405 	smulbb	r4, r4, r5
 801d44a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d44e:	b2bf      	uxth	r7, r7
 801d450:	fb06 b605 	mla	r6, r6, r5, fp
 801d454:	fb08 4809 	mla	r8, r8, r9, r4
 801d458:	b2b6      	uxth	r6, r6
 801d45a:	fa1f f888 	uxth.w	r8, r8
 801d45e:	1c7c      	adds	r4, r7, #1
 801d460:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801d464:	f106 0b01 	add.w	fp, r6, #1
 801d468:	f108 0401 	add.w	r4, r8, #1
 801d46c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801d470:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801d474:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d478:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801d47c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801d480:	4327      	orrs	r7, r4
 801d482:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d486:	ea47 070b 	orr.w	r7, r7, fp
 801d48a:	f820 700a 	strh.w	r7, [r0, sl]
 801d48e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d490:	4401      	add	r1, r0
 801d492:	9814      	ldr	r0, [sp, #80]	; 0x50
 801d494:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d498:	4402      	add	r2, r0
 801d49a:	e759      	b.n	801d350 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801d49c:	b007      	add	sp, #28
 801d49e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801d4a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d4a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d4a8:	b085      	sub	sp, #20
 801d4aa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d4ae:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d4b0:	9203      	str	r2, [sp, #12]
 801d4b2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d4b6:	6870      	ldr	r0, [r6, #4]
 801d4b8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d4ba:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801d4be:	686f      	ldr	r7, [r5, #4]
 801d4c0:	9101      	str	r1, [sp, #4]
 801d4c2:	fb00 2404 	mla	r4, r0, r4, r2
 801d4c6:	6832      	ldr	r2, [r6, #0]
 801d4c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d4cc:	682a      	ldr	r2, [r5, #0]
 801d4ce:	9202      	str	r2, [sp, #8]
 801d4d0:	3704      	adds	r7, #4
 801d4d2:	9a01      	ldr	r2, [sp, #4]
 801d4d4:	2a00      	cmp	r2, #0
 801d4d6:	dc03      	bgt.n	801d4e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d4d8:	9a03      	ldr	r2, [sp, #12]
 801d4da:	2a00      	cmp	r2, #0
 801d4dc:	f340 80cc 	ble.w	801d678 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801d4e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d4e2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801d4e6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801d4ea:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d4ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d4f0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d4f4:	2b00      	cmp	r3, #0
 801d4f6:	dd0d      	ble.n	801d514 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801d4f8:	1406      	asrs	r6, r0, #16
 801d4fa:	d405      	bmi.n	801d508 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801d4fc:	454e      	cmp	r6, r9
 801d4fe:	da03      	bge.n	801d508 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801d500:	1416      	asrs	r6, r2, #16
 801d502:	d401      	bmi.n	801d508 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801d504:	4546      	cmp	r6, r8
 801d506:	db06      	blt.n	801d516 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d508:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801d50a:	4460      	add	r0, ip
 801d50c:	4432      	add	r2, r6
 801d50e:	3b01      	subs	r3, #1
 801d510:	3402      	adds	r4, #2
 801d512:	e7ef      	b.n	801d4f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801d514:	d00f      	beq.n	801d536 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d516:	1e5e      	subs	r6, r3, #1
 801d518:	fb0c 0e06 	mla	lr, ip, r6, r0
 801d51c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801d520:	d543      	bpl.n	801d5aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801d522:	4698      	mov	r8, r3
 801d524:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801d528:	f1b8 0f00 	cmp.w	r8, #0
 801d52c:	dc71      	bgt.n	801d612 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801d52e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d532:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d536:	9b01      	ldr	r3, [sp, #4]
 801d538:	2b00      	cmp	r3, #0
 801d53a:	f340 809d 	ble.w	801d678 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801d53e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d542:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d546:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d54a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d54c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d550:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d554:	eeb0 6a62 	vmov.f32	s12, s5
 801d558:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d55c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d560:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d564:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d568:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d56c:	eeb0 6a43 	vmov.f32	s12, s6
 801d570:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d574:	ee12 2a90 	vmov	r2, s5
 801d578:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d57c:	fb92 fcf3 	sdiv	ip, r2, r3
 801d580:	ee13 2a10 	vmov	r2, s6
 801d584:	fb92 f3f3 	sdiv	r3, r2, r3
 801d588:	9312      	str	r3, [sp, #72]	; 0x48
 801d58a:	9b01      	ldr	r3, [sp, #4]
 801d58c:	9a03      	ldr	r2, [sp, #12]
 801d58e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d592:	3b01      	subs	r3, #1
 801d594:	9301      	str	r3, [sp, #4]
 801d596:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d59a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d59c:	eeb0 3a67 	vmov.f32	s6, s15
 801d5a0:	bf08      	it	eq
 801d5a2:	4613      	moveq	r3, r2
 801d5a4:	eef0 2a47 	vmov.f32	s5, s14
 801d5a8:	e793      	b.n	801d4d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d5aa:	45ce      	cmp	lr, r9
 801d5ac:	dab9      	bge.n	801d522 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d5ae:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d5b0:	fb01 2606 	mla	r6, r1, r6, r2
 801d5b4:	1436      	asrs	r6, r6, #16
 801d5b6:	d4b4      	bmi.n	801d522 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d5b8:	4546      	cmp	r6, r8
 801d5ba:	dab2      	bge.n	801d522 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d5bc:	4698      	mov	r8, r3
 801d5be:	46a2      	mov	sl, r4
 801d5c0:	f1b8 0f00 	cmp.w	r8, #0
 801d5c4:	ddb3      	ble.n	801d52e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801d5c6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801d5ca:	9902      	ldr	r1, [sp, #8]
 801d5cc:	1416      	asrs	r6, r2, #16
 801d5ce:	fb09 1606 	mla	r6, r9, r6, r1
 801d5d2:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801d5d6:	492a      	ldr	r1, [pc, #168]	; (801d680 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801d5d8:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801d5dc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d5e0:	eb07 0b0e 	add.w	fp, r7, lr
 801d5e4:	4460      	add	r0, ip
 801d5e6:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801d5ea:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801d5ee:	00f6      	lsls	r6, r6, #3
 801d5f0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801d5f4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d5f8:	ea49 0606 	orr.w	r6, r9, r6
 801d5fc:	f817 900e 	ldrb.w	r9, [r7, lr]
 801d600:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d602:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801d606:	f82a 6b02 	strh.w	r6, [sl], #2
 801d60a:	440a      	add	r2, r1
 801d60c:	f108 38ff 	add.w	r8, r8, #4294967295
 801d610:	e7d6      	b.n	801d5c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d612:	ea5f 4920 	movs.w	r9, r0, asr #16
 801d616:	d429      	bmi.n	801d66c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d618:	68ae      	ldr	r6, [r5, #8]
 801d61a:	454e      	cmp	r6, r9
 801d61c:	dd26      	ble.n	801d66c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d61e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801d622:	d423      	bmi.n	801d66c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d624:	68e9      	ldr	r1, [r5, #12]
 801d626:	4559      	cmp	r1, fp
 801d628:	dd20      	ble.n	801d66c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d62a:	9902      	ldr	r1, [sp, #8]
 801d62c:	fa0f fe86 	sxth.w	lr, r6
 801d630:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801d634:	f06f 0101 	mvn.w	r1, #1
 801d638:	f81e e009 	ldrb.w	lr, [lr, r9]
 801d63c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d640:	eb07 060e 	add.w	r6, r7, lr
 801d644:	fb01 f908 	mul.w	r9, r1, r8
 801d648:	f896 b002 	ldrb.w	fp, [r6, #2]
 801d64c:	7876      	ldrb	r6, [r6, #1]
 801d64e:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801d652:	00f6      	lsls	r6, r6, #3
 801d654:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801d658:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d65c:	ea4b 0606 	orr.w	r6, fp, r6
 801d660:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801d664:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801d668:	f82a 6009 	strh.w	r6, [sl, r9]
 801d66c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d66e:	4460      	add	r0, ip
 801d670:	440a      	add	r2, r1
 801d672:	f108 38ff 	add.w	r8, r8, #4294967295
 801d676:	e757      	b.n	801d528 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d678:	b005      	add	sp, #20
 801d67a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d67e:	bf00      	nop
 801d680:	fffff800 	.word	0xfffff800

0801d684 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d688:	b087      	sub	sp, #28
 801d68a:	468b      	mov	fp, r1
 801d68c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801d68e:	9204      	str	r2, [sp, #16]
 801d690:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d694:	9205      	str	r2, [sp, #20]
 801d696:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801d69a:	6841      	ldr	r1, [r0, #4]
 801d69c:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801d6a0:	fb01 2404 	mla	r4, r1, r4, r2
 801d6a4:	6802      	ldr	r2, [r0, #0]
 801d6a6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d6aa:	f8dc 2000 	ldr.w	r2, [ip]
 801d6ae:	9201      	str	r2, [sp, #4]
 801d6b0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801d6b4:	3204      	adds	r2, #4
 801d6b6:	9202      	str	r2, [sp, #8]
 801d6b8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d6bc:	f1bb 0f00 	cmp.w	fp, #0
 801d6c0:	dc03      	bgt.n	801d6ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801d6c2:	9a04      	ldr	r2, [sp, #16]
 801d6c4:	2a00      	cmp	r2, #0
 801d6c6:	f340 8138 	ble.w	801d93a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d6ca:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d6cc:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801d6d0:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801d6d4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d6d8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d6da:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d6de:	2b00      	cmp	r3, #0
 801d6e0:	dd0e      	ble.n	801d700 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d6e2:	1402      	asrs	r2, r0, #16
 801d6e4:	d405      	bmi.n	801d6f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d6e6:	42ba      	cmp	r2, r7
 801d6e8:	da03      	bge.n	801d6f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d6ea:	140a      	asrs	r2, r1, #16
 801d6ec:	d401      	bmi.n	801d6f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d6ee:	42b2      	cmp	r2, r6
 801d6f0:	db07      	blt.n	801d702 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d6f2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d6f4:	4410      	add	r0, r2
 801d6f6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d6f8:	3b01      	subs	r3, #1
 801d6fa:	4411      	add	r1, r2
 801d6fc:	3402      	adds	r4, #2
 801d6fe:	e7ee      	b.n	801d6de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801d700:	d019      	beq.n	801d736 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d702:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d704:	1e5a      	subs	r2, r3, #1
 801d706:	fb05 0502 	mla	r5, r5, r2, r0
 801d70a:	142d      	asrs	r5, r5, #16
 801d70c:	d409      	bmi.n	801d722 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d70e:	42bd      	cmp	r5, r7
 801d710:	da07      	bge.n	801d722 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d712:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d714:	fb05 1202 	mla	r2, r5, r2, r1
 801d718:	1412      	asrs	r2, r2, #16
 801d71a:	d402      	bmi.n	801d722 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d71c:	42b2      	cmp	r2, r6
 801d71e:	f2c0 80ac 	blt.w	801d87a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801d722:	f04f 0e00 	mov.w	lr, #0
 801d726:	eb03 020e 	add.w	r2, r3, lr
 801d72a:	2a00      	cmp	r2, #0
 801d72c:	dc3e      	bgt.n	801d7ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801d72e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d732:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d736:	f1bb 0f00 	cmp.w	fp, #0
 801d73a:	f340 80fe 	ble.w	801d93a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d73e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d742:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d746:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d74a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d74c:	f1bb 0b01 	subs.w	fp, fp, #1
 801d750:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d754:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d758:	eeb0 6a62 	vmov.f32	s12, s5
 801d75c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d760:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d764:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d768:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d76c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d770:	eeb0 6a43 	vmov.f32	s12, s6
 801d774:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d778:	ee12 2a90 	vmov	r2, s5
 801d77c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d780:	fb92 f3f3 	sdiv	r3, r2, r3
 801d784:	ee13 2a10 	vmov	r2, s6
 801d788:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d78c:	9313      	str	r3, [sp, #76]	; 0x4c
 801d78e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d790:	fb92 f3f3 	sdiv	r3, r2, r3
 801d794:	9a04      	ldr	r2, [sp, #16]
 801d796:	9314      	str	r3, [sp, #80]	; 0x50
 801d798:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d79c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d79e:	eeb0 3a67 	vmov.f32	s6, s15
 801d7a2:	bf08      	it	eq
 801d7a4:	4613      	moveq	r3, r2
 801d7a6:	eef0 2a47 	vmov.f32	s5, s14
 801d7aa:	e787      	b.n	801d6bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d7ac:	1406      	asrs	r6, r0, #16
 801d7ae:	d45d      	bmi.n	801d86c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d7b0:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801d7b4:	42b5      	cmp	r5, r6
 801d7b6:	dd59      	ble.n	801d86c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d7b8:	140f      	asrs	r7, r1, #16
 801d7ba:	d457      	bmi.n	801d86c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d7bc:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801d7c0:	42ba      	cmp	r2, r7
 801d7c2:	dd53      	ble.n	801d86c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d7c4:	9a01      	ldr	r2, [sp, #4]
 801d7c6:	b22d      	sxth	r5, r5
 801d7c8:	fb07 2505 	mla	r5, r7, r5, r2
 801d7cc:	5daa      	ldrb	r2, [r5, r6]
 801d7ce:	9d02      	ldr	r5, [sp, #8]
 801d7d0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d7d4:	0e2e      	lsrs	r6, r5, #24
 801d7d6:	d049      	beq.n	801d86c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d7d8:	f06f 0201 	mvn.w	r2, #1
 801d7dc:	fb02 f20e 	mul.w	r2, r2, lr
 801d7e0:	9203      	str	r2, [sp, #12]
 801d7e2:	f834 8002 	ldrh.w	r8, [r4, r2]
 801d7e6:	9a05      	ldr	r2, [sp, #20]
 801d7e8:	4356      	muls	r6, r2
 801d7ea:	1c72      	adds	r2, r6, #1
 801d7ec:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d7f0:	1212      	asrs	r2, r2, #8
 801d7f2:	fa1f f982 	uxth.w	r9, r2
 801d7f6:	ea4f 2728 	mov.w	r7, r8, asr #8
 801d7fa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d7fe:	43d2      	mvns	r2, r2
 801d800:	b2d2      	uxtb	r2, r2
 801d802:	fb16 f609 	smulbb	r6, r6, r9
 801d806:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d80a:	fb07 6702 	mla	r7, r7, r2, r6
 801d80e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d812:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d816:	b2ed      	uxtb	r5, r5
 801d818:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d81c:	fa5f f888 	uxtb.w	r8, r8
 801d820:	fb15 f509 	smulbb	r5, r5, r9
 801d824:	fb08 5502 	mla	r5, r8, r2, r5
 801d828:	b2bf      	uxth	r7, r7
 801d82a:	fb1a fa09 	smulbb	sl, sl, r9
 801d82e:	b2ad      	uxth	r5, r5
 801d830:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d834:	fb06 a602 	mla	r6, r6, r2, sl
 801d838:	1c7a      	adds	r2, r7, #1
 801d83a:	f105 0a01 	add.w	sl, r5, #1
 801d83e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d842:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d846:	b2b6      	uxth	r6, r6
 801d848:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d84c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d850:	ea4a 0707 	orr.w	r7, sl, r7
 801d854:	f106 0a01 	add.w	sl, r6, #1
 801d858:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d85c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d860:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d864:	9a03      	ldr	r2, [sp, #12]
 801d866:	ea47 070a 	orr.w	r7, r7, sl
 801d86a:	52a7      	strh	r7, [r4, r2]
 801d86c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d86e:	4410      	add	r0, r2
 801d870:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d872:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d876:	4411      	add	r1, r2
 801d878:	e755      	b.n	801d726 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d87a:	f04f 0800 	mov.w	r8, #0
 801d87e:	eba3 0208 	sub.w	r2, r3, r8
 801d882:	2a00      	cmp	r2, #0
 801d884:	f77f af53 	ble.w	801d72e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801d888:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801d88c:	9f01      	ldr	r7, [sp, #4]
 801d88e:	140a      	asrs	r2, r1, #16
 801d890:	1405      	asrs	r5, r0, #16
 801d892:	fb06 7202 	mla	r2, r6, r2, r7
 801d896:	5d52      	ldrb	r2, [r2, r5]
 801d898:	9d02      	ldr	r5, [sp, #8]
 801d89a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d89e:	0e2e      	lsrs	r6, r5, #24
 801d8a0:	d044      	beq.n	801d92c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801d8a2:	9a05      	ldr	r2, [sp, #20]
 801d8a4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801d8a8:	4356      	muls	r6, r2
 801d8aa:	1c72      	adds	r2, r6, #1
 801d8ac:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d8b0:	1212      	asrs	r2, r2, #8
 801d8b2:	fa1f f982 	uxth.w	r9, r2
 801d8b6:	ea4f 272e 	mov.w	r7, lr, asr #8
 801d8ba:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d8be:	43d2      	mvns	r2, r2
 801d8c0:	b2d2      	uxtb	r2, r2
 801d8c2:	fb16 f609 	smulbb	r6, r6, r9
 801d8c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d8ca:	fb07 6702 	mla	r7, r7, r2, r6
 801d8ce:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d8d2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d8d6:	b2ed      	uxtb	r5, r5
 801d8d8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d8dc:	fa5f fe8e 	uxtb.w	lr, lr
 801d8e0:	fb15 f509 	smulbb	r5, r5, r9
 801d8e4:	fb0e 5502 	mla	r5, lr, r2, r5
 801d8e8:	b2bf      	uxth	r7, r7
 801d8ea:	fb1a fa09 	smulbb	sl, sl, r9
 801d8ee:	b2ad      	uxth	r5, r5
 801d8f0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d8f4:	fb06 a602 	mla	r6, r6, r2, sl
 801d8f8:	1c7a      	adds	r2, r7, #1
 801d8fa:	f105 0a01 	add.w	sl, r5, #1
 801d8fe:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d902:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d906:	b2b6      	uxth	r6, r6
 801d908:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d90c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d910:	ea4a 0707 	orr.w	r7, sl, r7
 801d914:	f106 0a01 	add.w	sl, r6, #1
 801d918:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d91c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d920:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d924:	ea47 070a 	orr.w	r7, r7, sl
 801d928:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d92c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d92e:	4410      	add	r0, r2
 801d930:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d932:	f108 0801 	add.w	r8, r8, #1
 801d936:	4411      	add	r1, r2
 801d938:	e7a1      	b.n	801d87e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801d93a:	b007      	add	sp, #28
 801d93c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d940 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d944:	b085      	sub	sp, #20
 801d946:	468b      	mov	fp, r1
 801d948:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d94a:	9203      	str	r2, [sp, #12]
 801d94c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d950:	6841      	ldr	r1, [r0, #4]
 801d952:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801d956:	fb01 2404 	mla	r4, r1, r4, r2
 801d95a:	6802      	ldr	r2, [r0, #0]
 801d95c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d960:	f8de 2000 	ldr.w	r2, [lr]
 801d964:	9200      	str	r2, [sp, #0]
 801d966:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d96a:	3204      	adds	r2, #4
 801d96c:	9201      	str	r2, [sp, #4]
 801d96e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d972:	f1bb 0f00 	cmp.w	fp, #0
 801d976:	dc03      	bgt.n	801d980 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801d978:	9a03      	ldr	r2, [sp, #12]
 801d97a:	2a00      	cmp	r2, #0
 801d97c:	f340 8153 	ble.w	801dc26 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d980:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d982:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d986:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d98a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d98e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d990:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d994:	2b00      	cmp	r3, #0
 801d996:	dd0e      	ble.n	801d9b6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d998:	1408      	asrs	r0, r1, #16
 801d99a:	d405      	bmi.n	801d9a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d99c:	42b8      	cmp	r0, r7
 801d99e:	da03      	bge.n	801d9a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d9a0:	1410      	asrs	r0, r2, #16
 801d9a2:	d401      	bmi.n	801d9a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d9a4:	42b0      	cmp	r0, r6
 801d9a6:	db07      	blt.n	801d9b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d9a8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d9aa:	4401      	add	r1, r0
 801d9ac:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d9ae:	3b01      	subs	r3, #1
 801d9b0:	4402      	add	r2, r0
 801d9b2:	3402      	adds	r4, #2
 801d9b4:	e7ee      	b.n	801d994 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801d9b6:	d017      	beq.n	801d9e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d9b8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d9ba:	1e58      	subs	r0, r3, #1
 801d9bc:	fb05 1500 	mla	r5, r5, r0, r1
 801d9c0:	142d      	asrs	r5, r5, #16
 801d9c2:	d409      	bmi.n	801d9d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d9c4:	42bd      	cmp	r5, r7
 801d9c6:	da07      	bge.n	801d9d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d9c8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d9ca:	fb05 2000 	mla	r0, r5, r0, r2
 801d9ce:	1400      	asrs	r0, r0, #16
 801d9d0:	d402      	bmi.n	801d9d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d9d2:	42b0      	cmp	r0, r6
 801d9d4:	f2c0 80bc 	blt.w	801db50 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801d9d8:	2600      	movs	r6, #0
 801d9da:	1998      	adds	r0, r3, r6
 801d9dc:	2800      	cmp	r0, #0
 801d9de:	dc3e      	bgt.n	801da5e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801d9e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d9e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d9e8:	f1bb 0f00 	cmp.w	fp, #0
 801d9ec:	f340 811b 	ble.w	801dc26 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d9f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d9f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d9f8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d9fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d9fe:	f1bb 0b01 	subs.w	fp, fp, #1
 801da02:	ee31 1a05 	vadd.f32	s2, s2, s10
 801da06:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801da0a:	eeb0 6a62 	vmov.f32	s12, s5
 801da0e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801da12:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801da16:	ee77 2a62 	vsub.f32	s5, s14, s5
 801da1a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801da1e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801da22:	eeb0 6a43 	vmov.f32	s12, s6
 801da26:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801da2a:	ee12 2a90 	vmov	r2, s5
 801da2e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801da32:	fb92 f3f3 	sdiv	r3, r2, r3
 801da36:	ee13 2a10 	vmov	r2, s6
 801da3a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801da3e:	9311      	str	r3, [sp, #68]	; 0x44
 801da40:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801da42:	fb92 f3f3 	sdiv	r3, r2, r3
 801da46:	9a03      	ldr	r2, [sp, #12]
 801da48:	9312      	str	r3, [sp, #72]	; 0x48
 801da4a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801da4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801da50:	eeb0 3a67 	vmov.f32	s6, s15
 801da54:	bf08      	it	eq
 801da56:	4613      	moveq	r3, r2
 801da58:	eef0 2a47 	vmov.f32	s5, s14
 801da5c:	e789      	b.n	801d972 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801da5e:	140f      	asrs	r7, r1, #16
 801da60:	d426      	bmi.n	801dab0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801da62:	f8de 5008 	ldr.w	r5, [lr, #8]
 801da66:	42bd      	cmp	r5, r7
 801da68:	dd22      	ble.n	801dab0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801da6a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801da6e:	d41f      	bmi.n	801dab0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801da70:	f8de 000c 	ldr.w	r0, [lr, #12]
 801da74:	4560      	cmp	r0, ip
 801da76:	dd1b      	ble.n	801dab0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801da78:	9800      	ldr	r0, [sp, #0]
 801da7a:	b22d      	sxth	r5, r5
 801da7c:	fb0c 0505 	mla	r5, ip, r5, r0
 801da80:	5de8      	ldrb	r0, [r5, r7]
 801da82:	9d01      	ldr	r5, [sp, #4]
 801da84:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801da88:	0e07      	lsrs	r7, r0, #24
 801da8a:	2fff      	cmp	r7, #255	; 0xff
 801da8c:	d116      	bne.n	801dabc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801da8e:	f06f 0501 	mvn.w	r5, #1
 801da92:	fb05 f706 	mul.w	r7, r5, r6
 801da96:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801da9a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801da9e:	0945      	lsrs	r5, r0, #5
 801daa0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801daa4:	ea4c 0505 	orr.w	r5, ip, r5
 801daa8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801daac:	4305      	orrs	r5, r0
 801daae:	53e5      	strh	r5, [r4, r7]
 801dab0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dab2:	4401      	add	r1, r0
 801dab4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dab6:	3e01      	subs	r6, #1
 801dab8:	4402      	add	r2, r0
 801daba:	e78e      	b.n	801d9da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801dabc:	b2fd      	uxtb	r5, r7
 801dabe:	2f00      	cmp	r7, #0
 801dac0:	d0f6      	beq.n	801dab0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801dac2:	f06f 0701 	mvn.w	r7, #1
 801dac6:	4377      	muls	r7, r6
 801dac8:	fa1f f985 	uxth.w	r9, r5
 801dacc:	f834 8007 	ldrh.w	r8, [r4, r7]
 801dad0:	9702      	str	r7, [sp, #8]
 801dad2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801dad6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801dada:	43ed      	mvns	r5, r5
 801dadc:	b2ed      	uxtb	r5, r5
 801dade:	fb17 f709 	smulbb	r7, r7, r9
 801dae2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dae6:	fb0c 7c05 	mla	ip, ip, r5, r7
 801daea:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801daee:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801daf2:	b2c0      	uxtb	r0, r0
 801daf4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801daf8:	fa5f f888 	uxtb.w	r8, r8
 801dafc:	fb10 f009 	smulbb	r0, r0, r9
 801db00:	fb08 0005 	mla	r0, r8, r5, r0
 801db04:	b280      	uxth	r0, r0
 801db06:	fa1f fc8c 	uxth.w	ip, ip
 801db0a:	fb1a fa09 	smulbb	sl, sl, r9
 801db0e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801db12:	fb07 a705 	mla	r7, r7, r5, sl
 801db16:	f100 0a01 	add.w	sl, r0, #1
 801db1a:	f10c 0501 	add.w	r5, ip, #1
 801db1e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801db22:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801db26:	b2bf      	uxth	r7, r7
 801db28:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801db2c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801db30:	ea4a 0c0c 	orr.w	ip, sl, ip
 801db34:	f107 0a01 	add.w	sl, r7, #1
 801db38:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801db3c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801db40:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801db44:	9802      	ldr	r0, [sp, #8]
 801db46:	ea4c 0c0a 	orr.w	ip, ip, sl
 801db4a:	f824 c000 	strh.w	ip, [r4, r0]
 801db4e:	e7af      	b.n	801dab0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801db50:	f04f 0800 	mov.w	r8, #0
 801db54:	eba3 0008 	sub.w	r0, r3, r8
 801db58:	2800      	cmp	r0, #0
 801db5a:	f77f af41 	ble.w	801d9e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801db5e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801db62:	9f00      	ldr	r7, [sp, #0]
 801db64:	1410      	asrs	r0, r2, #16
 801db66:	140d      	asrs	r5, r1, #16
 801db68:	fb06 7000 	mla	r0, r6, r0, r7
 801db6c:	5d40      	ldrb	r0, [r0, r5]
 801db6e:	9d01      	ldr	r5, [sp, #4]
 801db70:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801db74:	0e2e      	lsrs	r6, r5, #24
 801db76:	2eff      	cmp	r6, #255	; 0xff
 801db78:	d112      	bne.n	801dba0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801db7a:	482c      	ldr	r0, [pc, #176]	; (801dc2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801db7c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801db80:	0968      	lsrs	r0, r5, #5
 801db82:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801db86:	4330      	orrs	r0, r6
 801db88:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801db8c:	4328      	orrs	r0, r5
 801db8e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801db92:	9811      	ldr	r0, [sp, #68]	; 0x44
 801db94:	4401      	add	r1, r0
 801db96:	9812      	ldr	r0, [sp, #72]	; 0x48
 801db98:	f108 0801 	add.w	r8, r8, #1
 801db9c:	4402      	add	r2, r0
 801db9e:	e7d9      	b.n	801db54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801dba0:	b2f0      	uxtb	r0, r6
 801dba2:	2e00      	cmp	r6, #0
 801dba4:	d0f5      	beq.n	801db92 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801dba6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801dbaa:	fa1f f980 	uxth.w	r9, r0
 801dbae:	ea4f 272c 	mov.w	r7, ip, asr #8
 801dbb2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801dbb6:	43c0      	mvns	r0, r0
 801dbb8:	b2c0      	uxtb	r0, r0
 801dbba:	fb16 f609 	smulbb	r6, r6, r9
 801dbbe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dbc2:	fb07 6700 	mla	r7, r7, r0, r6
 801dbc6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801dbca:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801dbce:	b2ed      	uxtb	r5, r5
 801dbd0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801dbd4:	fa5f fc8c 	uxtb.w	ip, ip
 801dbd8:	fb15 f509 	smulbb	r5, r5, r9
 801dbdc:	fb0c 5500 	mla	r5, ip, r0, r5
 801dbe0:	b2bf      	uxth	r7, r7
 801dbe2:	fb1a fa09 	smulbb	sl, sl, r9
 801dbe6:	b2ad      	uxth	r5, r5
 801dbe8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801dbec:	fb06 a600 	mla	r6, r6, r0, sl
 801dbf0:	1c78      	adds	r0, r7, #1
 801dbf2:	f105 0a01 	add.w	sl, r5, #1
 801dbf6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801dbfa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801dbfe:	b2b6      	uxth	r6, r6
 801dc00:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801dc04:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801dc08:	ea4a 0707 	orr.w	r7, sl, r7
 801dc0c:	f106 0a01 	add.w	sl, r6, #1
 801dc10:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801dc14:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dc18:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dc1c:	ea47 070a 	orr.w	r7, r7, sl
 801dc20:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801dc24:	e7b5      	b.n	801db92 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801dc26:	b005      	add	sp, #20
 801dc28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dc2c:	fffff800 	.word	0xfffff800

0801dc30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dc30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc34:	b087      	sub	sp, #28
 801dc36:	468b      	mov	fp, r1
 801dc38:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801dc3a:	9204      	str	r2, [sp, #16]
 801dc3c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801dc40:	9205      	str	r2, [sp, #20]
 801dc42:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801dc46:	6861      	ldr	r1, [r4, #4]
 801dc48:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801dc4c:	fb01 2000 	mla	r0, r1, r0, r2
 801dc50:	6822      	ldr	r2, [r4, #0]
 801dc52:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801dc56:	f8de 2000 	ldr.w	r2, [lr]
 801dc5a:	9201      	str	r2, [sp, #4]
 801dc5c:	f8de 2004 	ldr.w	r2, [lr, #4]
 801dc60:	9202      	str	r2, [sp, #8]
 801dc62:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801dc66:	f1bb 0f00 	cmp.w	fp, #0
 801dc6a:	dc03      	bgt.n	801dc74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801dc6c:	9a04      	ldr	r2, [sp, #16]
 801dc6e:	2a00      	cmp	r2, #0
 801dc70:	f340 8142 	ble.w	801def8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801dc74:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801dc76:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801dc7a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801dc7e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801dc82:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801dc84:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801dc88:	2b00      	cmp	r3, #0
 801dc8a:	dd0e      	ble.n	801dcaa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801dc8c:	140c      	asrs	r4, r1, #16
 801dc8e:	d405      	bmi.n	801dc9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dc90:	42bc      	cmp	r4, r7
 801dc92:	da03      	bge.n	801dc9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dc94:	1414      	asrs	r4, r2, #16
 801dc96:	d401      	bmi.n	801dc9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dc98:	42b4      	cmp	r4, r6
 801dc9a:	db07      	blt.n	801dcac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dc9c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801dc9e:	4421      	add	r1, r4
 801dca0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801dca2:	3b01      	subs	r3, #1
 801dca4:	4422      	add	r2, r4
 801dca6:	3002      	adds	r0, #2
 801dca8:	e7ee      	b.n	801dc88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801dcaa:	d019      	beq.n	801dce0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801dcac:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801dcae:	1e5c      	subs	r4, r3, #1
 801dcb0:	fb05 1504 	mla	r5, r5, r4, r1
 801dcb4:	142d      	asrs	r5, r5, #16
 801dcb6:	d409      	bmi.n	801dccc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801dcb8:	42bd      	cmp	r5, r7
 801dcba:	da07      	bge.n	801dccc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801dcbc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dcbe:	fb05 2404 	mla	r4, r5, r4, r2
 801dcc2:	1424      	asrs	r4, r4, #16
 801dcc4:	d402      	bmi.n	801dccc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801dcc6:	42b4      	cmp	r4, r6
 801dcc8:	f2c0 80b1 	blt.w	801de2e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801dccc:	f04f 0800 	mov.w	r8, #0
 801dcd0:	eb03 0408 	add.w	r4, r3, r8
 801dcd4:	2c00      	cmp	r4, #0
 801dcd6:	dc3e      	bgt.n	801dd56 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801dcd8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dcdc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dce0:	f1bb 0f00 	cmp.w	fp, #0
 801dce4:	f340 8108 	ble.w	801def8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801dce8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dcec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dcf0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801dcf4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dcf6:	f1bb 0b01 	subs.w	fp, fp, #1
 801dcfa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dcfe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dd02:	eeb0 6a62 	vmov.f32	s12, s5
 801dd06:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dd0a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dd0e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dd12:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801dd16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dd1a:	eeb0 6a43 	vmov.f32	s12, s6
 801dd1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dd22:	ee12 2a90 	vmov	r2, s5
 801dd26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dd2a:	fb92 f3f3 	sdiv	r3, r2, r3
 801dd2e:	ee13 2a10 	vmov	r2, s6
 801dd32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dd36:	9313      	str	r3, [sp, #76]	; 0x4c
 801dd38:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dd3a:	fb92 f3f3 	sdiv	r3, r2, r3
 801dd3e:	9a04      	ldr	r2, [sp, #16]
 801dd40:	9314      	str	r3, [sp, #80]	; 0x50
 801dd42:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801dd46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dd48:	eeb0 3a67 	vmov.f32	s6, s15
 801dd4c:	bf08      	it	eq
 801dd4e:	4613      	moveq	r3, r2
 801dd50:	eef0 2a47 	vmov.f32	s5, s14
 801dd54:	e787      	b.n	801dc66 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801dd56:	140e      	asrs	r6, r1, #16
 801dd58:	d462      	bmi.n	801de20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801dd5a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801dd5e:	42b5      	cmp	r5, r6
 801dd60:	dd5e      	ble.n	801de20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801dd62:	1417      	asrs	r7, r2, #16
 801dd64:	d45c      	bmi.n	801de20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801dd66:	f8de 400c 	ldr.w	r4, [lr, #12]
 801dd6a:	42bc      	cmp	r4, r7
 801dd6c:	dd58      	ble.n	801de20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801dd6e:	b22d      	sxth	r5, r5
 801dd70:	fb07 6505 	mla	r5, r7, r5, r6
 801dd74:	9c02      	ldr	r4, [sp, #8]
 801dd76:	5d66      	ldrb	r6, [r4, r5]
 801dd78:	2e00      	cmp	r6, #0
 801dd7a:	d051      	beq.n	801de20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801dd7c:	9c01      	ldr	r4, [sp, #4]
 801dd7e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801dd82:	f06f 0401 	mvn.w	r4, #1
 801dd86:	fb04 f408 	mul.w	r4, r4, r8
 801dd8a:	9403      	str	r4, [sp, #12]
 801dd8c:	5b05      	ldrh	r5, [r0, r4]
 801dd8e:	9c05      	ldr	r4, [sp, #20]
 801dd90:	4366      	muls	r6, r4
 801dd92:	1c74      	adds	r4, r6, #1
 801dd94:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801dd98:	1224      	asrs	r4, r4, #8
 801dd9a:	b2a7      	uxth	r7, r4
 801dd9c:	122e      	asrs	r6, r5, #8
 801dd9e:	43e4      	mvns	r4, r4
 801dda0:	b2e4      	uxtb	r4, r4
 801dda2:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801dda6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ddaa:	fb16 f604 	smulbb	r6, r6, r4
 801ddae:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ddb2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ddb6:	00ed      	lsls	r5, r5, #3
 801ddb8:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ddbc:	b2ed      	uxtb	r5, r5
 801ddbe:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801ddc2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801ddc6:	fb15 f504 	smulbb	r5, r5, r4
 801ddca:	fa5f f989 	uxtb.w	r9, r9
 801ddce:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ddd2:	fb09 5507 	mla	r5, r9, r7, r5
 801ddd6:	fb1a fa04 	smulbb	sl, sl, r4
 801ddda:	fa1f fc8c 	uxth.w	ip, ip
 801ddde:	b2ad      	uxth	r5, r5
 801dde0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801dde4:	fb06 a607 	mla	r6, r6, r7, sl
 801dde8:	f10c 0401 	add.w	r4, ip, #1
 801ddec:	f105 0a01 	add.w	sl, r5, #1
 801ddf0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ddf4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ddf8:	b2b6      	uxth	r6, r6
 801ddfa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ddfe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801de02:	ea4a 0c0c 	orr.w	ip, sl, ip
 801de06:	f106 0a01 	add.w	sl, r6, #1
 801de0a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801de0e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801de12:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801de16:	9c03      	ldr	r4, [sp, #12]
 801de18:	ea4c 0c0a 	orr.w	ip, ip, sl
 801de1c:	f820 c004 	strh.w	ip, [r0, r4]
 801de20:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801de22:	4421      	add	r1, r4
 801de24:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801de26:	f108 38ff 	add.w	r8, r8, #4294967295
 801de2a:	4422      	add	r2, r4
 801de2c:	e750      	b.n	801dcd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801de2e:	f04f 0900 	mov.w	r9, #0
 801de32:	eba3 0409 	sub.w	r4, r3, r9
 801de36:	2c00      	cmp	r4, #0
 801de38:	f77f af4e 	ble.w	801dcd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801de3c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801de40:	140d      	asrs	r5, r1, #16
 801de42:	1414      	asrs	r4, r2, #16
 801de44:	fb06 5404 	mla	r4, r6, r4, r5
 801de48:	9d02      	ldr	r5, [sp, #8]
 801de4a:	5d2e      	ldrb	r6, [r5, r4]
 801de4c:	2e00      	cmp	r6, #0
 801de4e:	d04c      	beq.n	801deea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801de50:	9d01      	ldr	r5, [sp, #4]
 801de52:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801de56:	9c05      	ldr	r4, [sp, #20]
 801de58:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801de5c:	4366      	muls	r6, r4
 801de5e:	1c74      	adds	r4, r6, #1
 801de60:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801de64:	1224      	asrs	r4, r4, #8
 801de66:	b2a7      	uxth	r7, r4
 801de68:	122e      	asrs	r6, r5, #8
 801de6a:	43e4      	mvns	r4, r4
 801de6c:	b2e4      	uxtb	r4, r4
 801de6e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801de72:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801de76:	fb16 f604 	smulbb	r6, r6, r4
 801de7a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801de7e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801de82:	00ed      	lsls	r5, r5, #3
 801de84:	fb0c 6c07 	mla	ip, ip, r7, r6
 801de88:	b2ed      	uxtb	r5, r5
 801de8a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801de8e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801de92:	fb15 f504 	smulbb	r5, r5, r4
 801de96:	fa5f f888 	uxtb.w	r8, r8
 801de9a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801de9e:	fb08 5507 	mla	r5, r8, r7, r5
 801dea2:	fb1a fa04 	smulbb	sl, sl, r4
 801dea6:	fa1f fc8c 	uxth.w	ip, ip
 801deaa:	b2ad      	uxth	r5, r5
 801deac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801deb0:	fb06 a607 	mla	r6, r6, r7, sl
 801deb4:	f10c 0401 	add.w	r4, ip, #1
 801deb8:	f105 0a01 	add.w	sl, r5, #1
 801debc:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801dec0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801dec4:	b2b6      	uxth	r6, r6
 801dec6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801deca:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dece:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ded2:	f106 0a01 	add.w	sl, r6, #1
 801ded6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801deda:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dede:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dee2:	ea4c 0c0a 	orr.w	ip, ip, sl
 801dee6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801deea:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801deec:	4421      	add	r1, r4
 801deee:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801def0:	f109 0901 	add.w	r9, r9, #1
 801def4:	4422      	add	r2, r4
 801def6:	e79c      	b.n	801de32 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801def8:	b007      	add	sp, #28
 801defa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801defe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801defe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801df02:	b085      	sub	sp, #20
 801df04:	468b      	mov	fp, r1
 801df06:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801df08:	9203      	str	r2, [sp, #12]
 801df0a:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801df0e:	6861      	ldr	r1, [r4, #4]
 801df10:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801df14:	fb01 2000 	mla	r0, r1, r0, r2
 801df18:	6822      	ldr	r2, [r4, #0]
 801df1a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801df1e:	f8d8 2000 	ldr.w	r2, [r8]
 801df22:	9200      	str	r2, [sp, #0]
 801df24:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801df28:	9201      	str	r2, [sp, #4]
 801df2a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801df2e:	f1bb 0f00 	cmp.w	fp, #0
 801df32:	dc03      	bgt.n	801df3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801df34:	9a03      	ldr	r2, [sp, #12]
 801df36:	2a00      	cmp	r2, #0
 801df38:	f340 8146 	ble.w	801e1c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801df3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801df3e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801df42:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801df46:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801df4a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801df4c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801df50:	2b00      	cmp	r3, #0
 801df52:	dd0e      	ble.n	801df72 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801df54:	140c      	asrs	r4, r1, #16
 801df56:	d405      	bmi.n	801df64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801df58:	42bc      	cmp	r4, r7
 801df5a:	da03      	bge.n	801df64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801df5c:	1414      	asrs	r4, r2, #16
 801df5e:	d401      	bmi.n	801df64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801df60:	42b4      	cmp	r4, r6
 801df62:	db07      	blt.n	801df74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801df64:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801df66:	4421      	add	r1, r4
 801df68:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801df6a:	3b01      	subs	r3, #1
 801df6c:	4422      	add	r2, r4
 801df6e:	3002      	adds	r0, #2
 801df70:	e7ee      	b.n	801df50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801df72:	d017      	beq.n	801dfa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801df74:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801df76:	1e5c      	subs	r4, r3, #1
 801df78:	fb05 1504 	mla	r5, r5, r4, r1
 801df7c:	142d      	asrs	r5, r5, #16
 801df7e:	d409      	bmi.n	801df94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801df80:	42bd      	cmp	r5, r7
 801df82:	da07      	bge.n	801df94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801df84:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801df86:	fb05 2404 	mla	r4, r5, r4, r2
 801df8a:	1424      	asrs	r4, r4, #16
 801df8c:	d402      	bmi.n	801df94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801df8e:	42b4      	cmp	r4, r6
 801df90:	f2c0 80b3 	blt.w	801e0fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801df94:	2600      	movs	r6, #0
 801df96:	199c      	adds	r4, r3, r6
 801df98:	2c00      	cmp	r4, #0
 801df9a:	dc3e      	bgt.n	801e01a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801df9c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dfa0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dfa4:	f1bb 0f00 	cmp.w	fp, #0
 801dfa8:	f340 810e 	ble.w	801e1c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801dfac:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dfb0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dfb4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801dfb8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dfba:	f1bb 0b01 	subs.w	fp, fp, #1
 801dfbe:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dfc2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dfc6:	eeb0 6a62 	vmov.f32	s12, s5
 801dfca:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dfce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dfd2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dfd6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801dfda:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dfde:	eeb0 6a43 	vmov.f32	s12, s6
 801dfe2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dfe6:	ee12 2a90 	vmov	r2, s5
 801dfea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dfee:	fb92 f3f3 	sdiv	r3, r2, r3
 801dff2:	ee13 2a10 	vmov	r2, s6
 801dff6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dffa:	9311      	str	r3, [sp, #68]	; 0x44
 801dffc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dffe:	fb92 f3f3 	sdiv	r3, r2, r3
 801e002:	9a03      	ldr	r2, [sp, #12]
 801e004:	9312      	str	r3, [sp, #72]	; 0x48
 801e006:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801e00a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e00c:	eeb0 3a67 	vmov.f32	s6, s15
 801e010:	bf08      	it	eq
 801e012:	4613      	moveq	r3, r2
 801e014:	eef0 2a47 	vmov.f32	s5, s14
 801e018:	e789      	b.n	801df2e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801e01a:	140f      	asrs	r7, r1, #16
 801e01c:	d418      	bmi.n	801e050 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801e01e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801e022:	42bd      	cmp	r5, r7
 801e024:	dd14      	ble.n	801e050 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801e026:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801e02a:	d411      	bmi.n	801e050 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801e02c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801e030:	4564      	cmp	r4, ip
 801e032:	dd0d      	ble.n	801e050 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801e034:	b22d      	sxth	r5, r5
 801e036:	fb0c 7505 	mla	r5, ip, r5, r7
 801e03a:	9c01      	ldr	r4, [sp, #4]
 801e03c:	5d64      	ldrb	r4, [r4, r5]
 801e03e:	2cff      	cmp	r4, #255	; 0xff
 801e040:	d10c      	bne.n	801e05c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801e042:	9c00      	ldr	r4, [sp, #0]
 801e044:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801e048:	f06f 0401 	mvn.w	r4, #1
 801e04c:	4374      	muls	r4, r6
 801e04e:	5305      	strh	r5, [r0, r4]
 801e050:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801e052:	4421      	add	r1, r4
 801e054:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e056:	3e01      	subs	r6, #1
 801e058:	4422      	add	r2, r4
 801e05a:	e79c      	b.n	801df96 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e05c:	2c00      	cmp	r4, #0
 801e05e:	d0f7      	beq.n	801e050 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801e060:	9f00      	ldr	r7, [sp, #0]
 801e062:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801e066:	f06f 0501 	mvn.w	r5, #1
 801e06a:	4375      	muls	r5, r6
 801e06c:	9502      	str	r5, [sp, #8]
 801e06e:	5b45      	ldrh	r5, [r0, r5]
 801e070:	fa1f fc84 	uxth.w	ip, r4
 801e074:	122f      	asrs	r7, r5, #8
 801e076:	43e4      	mvns	r4, r4
 801e078:	b2e4      	uxtb	r4, r4
 801e07a:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801e07e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e082:	fb17 f704 	smulbb	r7, r7, r4
 801e086:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801e08a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e08e:	00ed      	lsls	r5, r5, #3
 801e090:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801e094:	b2ed      	uxtb	r5, r5
 801e096:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801e09a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801e09e:	fb15 f504 	smulbb	r5, r5, r4
 801e0a2:	fa5f f989 	uxtb.w	r9, r9
 801e0a6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801e0aa:	fb09 550c 	mla	r5, r9, ip, r5
 801e0ae:	fb1a fa04 	smulbb	sl, sl, r4
 801e0b2:	fa1f fe8e 	uxth.w	lr, lr
 801e0b6:	b2ad      	uxth	r5, r5
 801e0b8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e0bc:	fb07 a70c 	mla	r7, r7, ip, sl
 801e0c0:	f10e 0401 	add.w	r4, lr, #1
 801e0c4:	f105 0a01 	add.w	sl, r5, #1
 801e0c8:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801e0cc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e0d0:	b2bf      	uxth	r7, r7
 801e0d2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e0d6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e0da:	ea4a 0e0e 	orr.w	lr, sl, lr
 801e0de:	f107 0a01 	add.w	sl, r7, #1
 801e0e2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801e0e6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e0ea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e0ee:	9c02      	ldr	r4, [sp, #8]
 801e0f0:	ea4e 0e0a 	orr.w	lr, lr, sl
 801e0f4:	f820 e004 	strh.w	lr, [r0, r4]
 801e0f8:	e7aa      	b.n	801e050 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801e0fa:	f04f 0900 	mov.w	r9, #0
 801e0fe:	eba3 0409 	sub.w	r4, r3, r9
 801e102:	2c00      	cmp	r4, #0
 801e104:	f77f af4a 	ble.w	801df9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e108:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801e10c:	1414      	asrs	r4, r2, #16
 801e10e:	140d      	asrs	r5, r1, #16
 801e110:	fb06 5504 	mla	r5, r6, r4, r5
 801e114:	9c01      	ldr	r4, [sp, #4]
 801e116:	5d64      	ldrb	r4, [r4, r5]
 801e118:	2cff      	cmp	r4, #255	; 0xff
 801e11a:	d10b      	bne.n	801e134 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801e11c:	9c00      	ldr	r4, [sp, #0]
 801e11e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801e122:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801e126:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801e128:	4421      	add	r1, r4
 801e12a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e12c:	f109 0901 	add.w	r9, r9, #1
 801e130:	4422      	add	r2, r4
 801e132:	e7e4      	b.n	801e0fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e134:	2c00      	cmp	r4, #0
 801e136:	d0f6      	beq.n	801e126 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e138:	9e00      	ldr	r6, [sp, #0]
 801e13a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801e13e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801e142:	b2a7      	uxth	r7, r4
 801e144:	122e      	asrs	r6, r5, #8
 801e146:	43e4      	mvns	r4, r4
 801e148:	b2e4      	uxtb	r4, r4
 801e14a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e14e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e152:	fb16 f604 	smulbb	r6, r6, r4
 801e156:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801e15a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e15e:	00ed      	lsls	r5, r5, #3
 801e160:	fb0c 6c07 	mla	ip, ip, r7, r6
 801e164:	b2ed      	uxtb	r5, r5
 801e166:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801e16a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e16e:	fb15 f504 	smulbb	r5, r5, r4
 801e172:	fa5f fe8e 	uxtb.w	lr, lr
 801e176:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801e17a:	fb0e 5507 	mla	r5, lr, r7, r5
 801e17e:	fb1a fa04 	smulbb	sl, sl, r4
 801e182:	fa1f fc8c 	uxth.w	ip, ip
 801e186:	b2ad      	uxth	r5, r5
 801e188:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e18c:	fb06 a607 	mla	r6, r6, r7, sl
 801e190:	f10c 0401 	add.w	r4, ip, #1
 801e194:	f105 0a01 	add.w	sl, r5, #1
 801e198:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801e19c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e1a0:	b2b6      	uxth	r6, r6
 801e1a2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e1a6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e1aa:	ea4a 0c0c 	orr.w	ip, sl, ip
 801e1ae:	f106 0a01 	add.w	sl, r6, #1
 801e1b2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801e1b6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e1ba:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e1be:	ea4c 0c0a 	orr.w	ip, ip, sl
 801e1c2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801e1c6:	e7ae      	b.n	801e126 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e1c8:	b005      	add	sp, #20
 801e1ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e1ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e1ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e1d2:	b085      	sub	sp, #20
 801e1d4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e1d6:	9203      	str	r2, [sp, #12]
 801e1d8:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801e1dc:	9201      	str	r2, [sp, #4]
 801e1de:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e1e2:	9100      	str	r1, [sp, #0]
 801e1e4:	6841      	ldr	r1, [r0, #4]
 801e1e6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801e1ea:	fb01 2404 	mla	r4, r1, r4, r2
 801e1ee:	6802      	ldr	r2, [r0, #0]
 801e1f0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e1f4:	f8de 2000 	ldr.w	r2, [lr]
 801e1f8:	9202      	str	r2, [sp, #8]
 801e1fa:	9a01      	ldr	r2, [sp, #4]
 801e1fc:	43d6      	mvns	r6, r2
 801e1fe:	b2f6      	uxtb	r6, r6
 801e200:	9a00      	ldr	r2, [sp, #0]
 801e202:	2a00      	cmp	r2, #0
 801e204:	dc03      	bgt.n	801e20e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801e206:	9a03      	ldr	r2, [sp, #12]
 801e208:	2a00      	cmp	r2, #0
 801e20a:	f340 8124 	ble.w	801e456 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801e20e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e210:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801e214:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801e218:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e21c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e21e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e222:	2b00      	cmp	r3, #0
 801e224:	dd0e      	ble.n	801e244 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e226:	1408      	asrs	r0, r1, #16
 801e228:	d405      	bmi.n	801e236 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e22a:	4560      	cmp	r0, ip
 801e22c:	da03      	bge.n	801e236 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e22e:	1410      	asrs	r0, r2, #16
 801e230:	d401      	bmi.n	801e236 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e232:	42b8      	cmp	r0, r7
 801e234:	db07      	blt.n	801e246 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e236:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e238:	4401      	add	r1, r0
 801e23a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e23c:	3b01      	subs	r3, #1
 801e23e:	4402      	add	r2, r0
 801e240:	3402      	adds	r4, #2
 801e242:	e7ee      	b.n	801e222 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e244:	d06e      	beq.n	801e324 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801e246:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e248:	1e58      	subs	r0, r3, #1
 801e24a:	fb05 1500 	mla	r5, r5, r0, r1
 801e24e:	142d      	asrs	r5, r5, #16
 801e250:	d45c      	bmi.n	801e30c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e252:	4565      	cmp	r5, ip
 801e254:	da5a      	bge.n	801e30c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e256:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e258:	fb05 2000 	mla	r0, r5, r0, r2
 801e25c:	1400      	asrs	r0, r0, #16
 801e25e:	d455      	bmi.n	801e30c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e260:	42b8      	cmp	r0, r7
 801e262:	da53      	bge.n	801e30c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e264:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801e268:	4699      	mov	r9, r3
 801e26a:	46a2      	mov	sl, r4
 801e26c:	f1b9 0f00 	cmp.w	r9, #0
 801e270:	dd54      	ble.n	801e31c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801e272:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801e276:	140d      	asrs	r5, r1, #16
 801e278:	1410      	asrs	r0, r2, #16
 801e27a:	fb07 5000 	mla	r0, r7, r0, r5
 801e27e:	9d02      	ldr	r5, [sp, #8]
 801e280:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801e284:	f8ba 5000 	ldrh.w	r5, [sl]
 801e288:	122f      	asrs	r7, r5, #8
 801e28a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801e28e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e292:	fb17 f706 	smulbb	r7, r7, r6
 801e296:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801e29a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e29e:	00ed      	lsls	r5, r5, #3
 801e2a0:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801e2a4:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801e2a8:	10c7      	asrs	r7, r0, #3
 801e2aa:	b2ed      	uxtb	r5, r5
 801e2ac:	00c0      	lsls	r0, r0, #3
 801e2ae:	fb18 f806 	smulbb	r8, r8, r6
 801e2b2:	fb15 f506 	smulbb	r5, r5, r6
 801e2b6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e2ba:	b2c0      	uxtb	r0, r0
 801e2bc:	fa1f fc8c 	uxth.w	ip, ip
 801e2c0:	fb07 870b 	mla	r7, r7, fp, r8
 801e2c4:	fb00 500b 	mla	r0, r0, fp, r5
 801e2c8:	b280      	uxth	r0, r0
 801e2ca:	b2bf      	uxth	r7, r7
 801e2cc:	f10c 0501 	add.w	r5, ip, #1
 801e2d0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e2d4:	f107 0801 	add.w	r8, r7, #1
 801e2d8:	1c45      	adds	r5, r0, #1
 801e2da:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801e2de:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801e2e2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e2e4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e2e8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e2ec:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801e2f0:	ea45 0c0c 	orr.w	ip, r5, ip
 801e2f4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801e2f8:	4401      	add	r1, r0
 801e2fa:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e2fc:	ea4c 0c08 	orr.w	ip, ip, r8
 801e300:	f82a cb02 	strh.w	ip, [sl], #2
 801e304:	4402      	add	r2, r0
 801e306:	f109 39ff 	add.w	r9, r9, #4294967295
 801e30a:	e7af      	b.n	801e26c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e30c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801e310:	f04f 0800 	mov.w	r8, #0
 801e314:	eb03 0008 	add.w	r0, r3, r8
 801e318:	2800      	cmp	r0, #0
 801e31a:	dc41      	bgt.n	801e3a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801e31c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e320:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e324:	9b00      	ldr	r3, [sp, #0]
 801e326:	2b00      	cmp	r3, #0
 801e328:	f340 8095 	ble.w	801e456 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801e32c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e330:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e334:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e338:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e33a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e33e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e342:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e346:	eef0 6a62 	vmov.f32	s13, s5
 801e34a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e34e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e352:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e356:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801e35a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e35e:	eef0 6a43 	vmov.f32	s13, s6
 801e362:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e366:	ee12 2a90 	vmov	r2, s5
 801e36a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e36e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e372:	ee13 2a10 	vmov	r2, s6
 801e376:	9311      	str	r3, [sp, #68]	; 0x44
 801e378:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e37a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e37e:	9312      	str	r3, [sp, #72]	; 0x48
 801e380:	9b00      	ldr	r3, [sp, #0]
 801e382:	9a03      	ldr	r2, [sp, #12]
 801e384:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e388:	3b01      	subs	r3, #1
 801e38a:	9300      	str	r3, [sp, #0]
 801e38c:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801e390:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e392:	eeb0 3a67 	vmov.f32	s6, s15
 801e396:	bf08      	it	eq
 801e398:	4613      	moveq	r3, r2
 801e39a:	eef0 2a47 	vmov.f32	s5, s14
 801e39e:	e72f      	b.n	801e200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801e3a0:	140f      	asrs	r7, r1, #16
 801e3a2:	d451      	bmi.n	801e448 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801e3a4:	f8de 5008 	ldr.w	r5, [lr, #8]
 801e3a8:	42bd      	cmp	r5, r7
 801e3aa:	dd4d      	ble.n	801e448 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801e3ac:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801e3b0:	d44a      	bmi.n	801e448 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801e3b2:	f8de 000c 	ldr.w	r0, [lr, #12]
 801e3b6:	4560      	cmp	r0, ip
 801e3b8:	dd46      	ble.n	801e448 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801e3ba:	b22d      	sxth	r5, r5
 801e3bc:	fb0c 7505 	mla	r5, ip, r5, r7
 801e3c0:	9802      	ldr	r0, [sp, #8]
 801e3c2:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801e3c6:	f06f 0501 	mvn.w	r5, #1
 801e3ca:	fb05 fb08 	mul.w	fp, r5, r8
 801e3ce:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801e3d2:	f834 500b 	ldrh.w	r5, [r4, fp]
 801e3d6:	122f      	asrs	r7, r5, #8
 801e3d8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e3dc:	fb17 f706 	smulbb	r7, r7, r6
 801e3e0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801e3e4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e3e8:	00ed      	lsls	r5, r5, #3
 801e3ea:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801e3ee:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801e3f2:	10c7      	asrs	r7, r0, #3
 801e3f4:	b2ed      	uxtb	r5, r5
 801e3f6:	00c0      	lsls	r0, r0, #3
 801e3f8:	fb19 f906 	smulbb	r9, r9, r6
 801e3fc:	fb15 f506 	smulbb	r5, r5, r6
 801e400:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e404:	b2c0      	uxtb	r0, r0
 801e406:	fa1f fc8c 	uxth.w	ip, ip
 801e40a:	fb07 970a 	mla	r7, r7, sl, r9
 801e40e:	fb00 500a 	mla	r0, r0, sl, r5
 801e412:	b2bf      	uxth	r7, r7
 801e414:	b280      	uxth	r0, r0
 801e416:	f10c 0501 	add.w	r5, ip, #1
 801e41a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e41e:	f107 0901 	add.w	r9, r7, #1
 801e422:	1c45      	adds	r5, r0, #1
 801e424:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801e428:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801e42c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e430:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e434:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e438:	ea45 0c0c 	orr.w	ip, r5, ip
 801e43c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e440:	ea4c 0c09 	orr.w	ip, ip, r9
 801e444:	f824 c00b 	strh.w	ip, [r4, fp]
 801e448:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e44a:	4401      	add	r1, r0
 801e44c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e44e:	f108 38ff 	add.w	r8, r8, #4294967295
 801e452:	4402      	add	r2, r0
 801e454:	e75e      	b.n	801e314 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801e456:	b005      	add	sp, #20
 801e458:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e45c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e45c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e460:	b085      	sub	sp, #20
 801e462:	4693      	mov	fp, r2
 801e464:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801e466:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e468:	6870      	ldr	r0, [r6, #4]
 801e46a:	9101      	str	r1, [sp, #4]
 801e46c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e470:	fb00 2404 	mla	r4, r0, r4, r2
 801e474:	6832      	ldr	r2, [r6, #0]
 801e476:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801e47a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e47e:	682a      	ldr	r2, [r5, #0]
 801e480:	9202      	str	r2, [sp, #8]
 801e482:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e486:	9a01      	ldr	r2, [sp, #4]
 801e488:	2a00      	cmp	r2, #0
 801e48a:	dc03      	bgt.n	801e494 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e48c:	f1bb 0f00 	cmp.w	fp, #0
 801e490:	f340 809a 	ble.w	801e5c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801e494:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e496:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801e49a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801e49e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e4a2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e4a4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e4a8:	2b00      	cmp	r3, #0
 801e4aa:	dd0c      	ble.n	801e4c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801e4ac:	1406      	asrs	r6, r0, #16
 801e4ae:	d405      	bmi.n	801e4bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e4b0:	454e      	cmp	r6, r9
 801e4b2:	da03      	bge.n	801e4bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e4b4:	1416      	asrs	r6, r2, #16
 801e4b6:	d401      	bmi.n	801e4bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e4b8:	4546      	cmp	r6, r8
 801e4ba:	db05      	blt.n	801e4c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e4bc:	4470      	add	r0, lr
 801e4be:	4462      	add	r2, ip
 801e4c0:	3b01      	subs	r3, #1
 801e4c2:	3402      	adds	r4, #2
 801e4c4:	e7f0      	b.n	801e4a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e4c6:	d00f      	beq.n	801e4e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801e4c8:	1e5e      	subs	r6, r3, #1
 801e4ca:	fb0e 0706 	mla	r7, lr, r6, r0
 801e4ce:	143f      	asrs	r7, r7, #16
 801e4d0:	d541      	bpl.n	801e556 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801e4d2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801e4d6:	4698      	mov	r8, r3
 801e4d8:	9603      	str	r6, [sp, #12]
 801e4da:	f1b8 0f00 	cmp.w	r8, #0
 801e4de:	dc56      	bgt.n	801e58e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801e4e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e4e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e4e8:	9b01      	ldr	r3, [sp, #4]
 801e4ea:	2b00      	cmp	r3, #0
 801e4ec:	dd6c      	ble.n	801e5c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801e4ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e4f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e4f6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e4fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e4fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e500:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e504:	eeb0 6a62 	vmov.f32	s12, s5
 801e508:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e50c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e510:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e514:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801e518:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e51c:	eeb0 6a43 	vmov.f32	s12, s6
 801e520:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e524:	ee12 2a90 	vmov	r2, s5
 801e528:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e52c:	fb92 fef3 	sdiv	lr, r2, r3
 801e530:	ee13 2a10 	vmov	r2, s6
 801e534:	fb92 fcf3 	sdiv	ip, r2, r3
 801e538:	9b01      	ldr	r3, [sp, #4]
 801e53a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e53e:	3b01      	subs	r3, #1
 801e540:	9301      	str	r3, [sp, #4]
 801e542:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801e546:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e548:	eeb0 3a67 	vmov.f32	s6, s15
 801e54c:	bf08      	it	eq
 801e54e:	465b      	moveq	r3, fp
 801e550:	eef0 2a47 	vmov.f32	s5, s14
 801e554:	e797      	b.n	801e486 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e556:	454f      	cmp	r7, r9
 801e558:	dabb      	bge.n	801e4d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e55a:	fb0c 2606 	mla	r6, ip, r6, r2
 801e55e:	1436      	asrs	r6, r6, #16
 801e560:	d4b7      	bmi.n	801e4d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e562:	4546      	cmp	r6, r8
 801e564:	dab5      	bge.n	801e4d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e566:	461e      	mov	r6, r3
 801e568:	46a0      	mov	r8, r4
 801e56a:	2e00      	cmp	r6, #0
 801e56c:	ddb8      	ble.n	801e4e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e56e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801e572:	9902      	ldr	r1, [sp, #8]
 801e574:	1417      	asrs	r7, r2, #16
 801e576:	ea4f 4920 	mov.w	r9, r0, asr #16
 801e57a:	fb0a 9707 	mla	r7, sl, r7, r9
 801e57e:	4470      	add	r0, lr
 801e580:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801e584:	f828 7b02 	strh.w	r7, [r8], #2
 801e588:	4462      	add	r2, ip
 801e58a:	3e01      	subs	r6, #1
 801e58c:	e7ed      	b.n	801e56a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801e58e:	ea5f 4920 	movs.w	r9, r0, asr #16
 801e592:	d414      	bmi.n	801e5be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e594:	68ae      	ldr	r6, [r5, #8]
 801e596:	454e      	cmp	r6, r9
 801e598:	dd11      	ble.n	801e5be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e59a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801e59e:	d40e      	bmi.n	801e5be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e5a0:	68ef      	ldr	r7, [r5, #12]
 801e5a2:	4557      	cmp	r7, sl
 801e5a4:	dd0b      	ble.n	801e5be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e5a6:	b236      	sxth	r6, r6
 801e5a8:	fb0a 9606 	mla	r6, sl, r6, r9
 801e5ac:	9f02      	ldr	r7, [sp, #8]
 801e5ae:	f06f 0101 	mvn.w	r1, #1
 801e5b2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801e5b6:	fb01 f608 	mul.w	r6, r1, r8
 801e5ba:	9903      	ldr	r1, [sp, #12]
 801e5bc:	538f      	strh	r7, [r1, r6]
 801e5be:	4470      	add	r0, lr
 801e5c0:	4462      	add	r2, ip
 801e5c2:	f108 38ff 	add.w	r8, r8, #4294967295
 801e5c6:	e788      	b.n	801e4da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801e5c8:	b005      	add	sp, #20
 801e5ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e5ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e5ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e5d2:	b087      	sub	sp, #28
 801e5d4:	468b      	mov	fp, r1
 801e5d6:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e5d8:	9203      	str	r2, [sp, #12]
 801e5da:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e5de:	9204      	str	r2, [sp, #16]
 801e5e0:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801e5e4:	6841      	ldr	r1, [r0, #4]
 801e5e6:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801e5ea:	fb01 2505 	mla	r5, r1, r5, r2
 801e5ee:	6802      	ldr	r2, [r0, #0]
 801e5f0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801e5f4:	f8d9 2000 	ldr.w	r2, [r9]
 801e5f8:	9201      	str	r2, [sp, #4]
 801e5fa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e5fe:	f1bb 0f00 	cmp.w	fp, #0
 801e602:	dc03      	bgt.n	801e60c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e604:	9a03      	ldr	r2, [sp, #12]
 801e606:	2a00      	cmp	r2, #0
 801e608:	f340 8159 	ble.w	801e8be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e60c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e60e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801e612:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801e616:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e61a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e61c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e620:	2b00      	cmp	r3, #0
 801e622:	dd0e      	ble.n	801e642 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e624:	1402      	asrs	r2, r0, #16
 801e626:	d405      	bmi.n	801e634 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e628:	42ba      	cmp	r2, r7
 801e62a:	da03      	bge.n	801e634 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e62c:	140a      	asrs	r2, r1, #16
 801e62e:	d401      	bmi.n	801e634 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e630:	42b2      	cmp	r2, r6
 801e632:	db07      	blt.n	801e644 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e634:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e636:	4410      	add	r0, r2
 801e638:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e63a:	3b01      	subs	r3, #1
 801e63c:	4411      	add	r1, r2
 801e63e:	3502      	adds	r5, #2
 801e640:	e7ee      	b.n	801e620 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801e642:	d017      	beq.n	801e674 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801e644:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e646:	1e5a      	subs	r2, r3, #1
 801e648:	fb04 0402 	mla	r4, r4, r2, r0
 801e64c:	1424      	asrs	r4, r4, #16
 801e64e:	d409      	bmi.n	801e664 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e650:	42bc      	cmp	r4, r7
 801e652:	da07      	bge.n	801e664 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e654:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e656:	fb04 1202 	mla	r2, r4, r2, r1
 801e65a:	1412      	asrs	r2, r2, #16
 801e65c:	d402      	bmi.n	801e664 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e65e:	42b2      	cmp	r2, r6
 801e660:	f2c0 80bf 	blt.w	801e7e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e664:	2700      	movs	r7, #0
 801e666:	19da      	adds	r2, r3, r7
 801e668:	2a00      	cmp	r2, #0
 801e66a:	dc3e      	bgt.n	801e6ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e66c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e670:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801e674:	f1bb 0f00 	cmp.w	fp, #0
 801e678:	f340 8121 	ble.w	801e8be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e67c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e680:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e684:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e688:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e68a:	f1bb 0b01 	subs.w	fp, fp, #1
 801e68e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e692:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e696:	eeb0 6a62 	vmov.f32	s12, s5
 801e69a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e69e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e6a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e6a6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e6aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e6ae:	eeb0 6a43 	vmov.f32	s12, s6
 801e6b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e6b6:	ee12 2a90 	vmov	r2, s5
 801e6ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e6be:	fb92 f3f3 	sdiv	r3, r2, r3
 801e6c2:	ee13 2a10 	vmov	r2, s6
 801e6c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e6ca:	9313      	str	r3, [sp, #76]	; 0x4c
 801e6cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e6ce:	fb92 f3f3 	sdiv	r3, r2, r3
 801e6d2:	9a03      	ldr	r2, [sp, #12]
 801e6d4:	9314      	str	r3, [sp, #80]	; 0x50
 801e6d6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e6da:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e6dc:	eeb0 3a67 	vmov.f32	s6, s15
 801e6e0:	bf08      	it	eq
 801e6e2:	4613      	moveq	r3, r2
 801e6e4:	eef0 2a47 	vmov.f32	s5, s14
 801e6e8:	e789      	b.n	801e5fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801e6ea:	1406      	asrs	r6, r0, #16
 801e6ec:	d42d      	bmi.n	801e74a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e6ee:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801e6f2:	42b4      	cmp	r4, r6
 801e6f4:	dd29      	ble.n	801e74a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e6f6:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801e6fa:	d426      	bmi.n	801e74a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e6fc:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e700:	4562      	cmp	r2, ip
 801e702:	dd22      	ble.n	801e74a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e704:	b224      	sxth	r4, r4
 801e706:	9a01      	ldr	r2, [sp, #4]
 801e708:	fb0c 6404 	mla	r4, ip, r4, r6
 801e70c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801e710:	0e22      	lsrs	r2, r4, #24
 801e712:	d01a      	beq.n	801e74a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e714:	9e04      	ldr	r6, [sp, #16]
 801e716:	4372      	muls	r2, r6
 801e718:	1c56      	adds	r6, r2, #1
 801e71a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e71e:	1212      	asrs	r2, r2, #8
 801e720:	0a26      	lsrs	r6, r4, #8
 801e722:	2aff      	cmp	r2, #255	; 0xff
 801e724:	9605      	str	r6, [sp, #20]
 801e726:	d116      	bne.n	801e756 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801e728:	f06f 0201 	mvn.w	r2, #1
 801e72c:	fb02 fc07 	mul.w	ip, r2, r7
 801e730:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e734:	0962      	lsrs	r2, r4, #5
 801e736:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e73a:	f026 0607 	bic.w	r6, r6, #7
 801e73e:	4316      	orrs	r6, r2
 801e740:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e744:	4326      	orrs	r6, r4
 801e746:	f825 600c 	strh.w	r6, [r5, ip]
 801e74a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e74c:	4410      	add	r0, r2
 801e74e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e750:	3f01      	subs	r7, #1
 801e752:	4411      	add	r1, r2
 801e754:	e787      	b.n	801e666 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e756:	f06f 0601 	mvn.w	r6, #1
 801e75a:	437e      	muls	r6, r7
 801e75c:	fa1f fa82 	uxth.w	sl, r2
 801e760:	f835 8006 	ldrh.w	r8, [r5, r6]
 801e764:	9602      	str	r6, [sp, #8]
 801e766:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e76a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801e76e:	43d2      	mvns	r2, r2
 801e770:	b2d2      	uxtb	r2, r2
 801e772:	fb1c fc0a 	smulbb	ip, ip, sl
 801e776:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e77a:	fb0e ce02 	mla	lr, lr, r2, ip
 801e77e:	b2e4      	uxtb	r4, r4
 801e780:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e784:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e788:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e78c:	fa5f f888 	uxtb.w	r8, r8
 801e790:	fb14 f40a 	smulbb	r4, r4, sl
 801e794:	fb08 4402 	mla	r4, r8, r2, r4
 801e798:	fa1f fe8e 	uxth.w	lr, lr
 801e79c:	fb16 f60a 	smulbb	r6, r6, sl
 801e7a0:	b2a4      	uxth	r4, r4
 801e7a2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e7a6:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e7aa:	f10e 0201 	add.w	r2, lr, #1
 801e7ae:	1c66      	adds	r6, r4, #1
 801e7b0:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e7b4:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e7b8:	fa1f fc8c 	uxth.w	ip, ip
 801e7bc:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e7c0:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e7c4:	ea46 0e0e 	orr.w	lr, r6, lr
 801e7c8:	f10c 0601 	add.w	r6, ip, #1
 801e7cc:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e7d0:	0976      	lsrs	r6, r6, #5
 801e7d2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e7d6:	9a02      	ldr	r2, [sp, #8]
 801e7d8:	ea4e 0e06 	orr.w	lr, lr, r6
 801e7dc:	f825 e002 	strh.w	lr, [r5, r2]
 801e7e0:	e7b3      	b.n	801e74a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e7e2:	f04f 0800 	mov.w	r8, #0
 801e7e6:	eba3 0208 	sub.w	r2, r3, r8
 801e7ea:	2a00      	cmp	r2, #0
 801e7ec:	f77f af3e 	ble.w	801e66c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e7f0:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801e7f4:	1404      	asrs	r4, r0, #16
 801e7f6:	140a      	asrs	r2, r1, #16
 801e7f8:	fb06 4202 	mla	r2, r6, r2, r4
 801e7fc:	9c01      	ldr	r4, [sp, #4]
 801e7fe:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801e802:	0e22      	lsrs	r2, r4, #24
 801e804:	d016      	beq.n	801e834 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e806:	9e04      	ldr	r6, [sp, #16]
 801e808:	4372      	muls	r2, r6
 801e80a:	1c56      	adds	r6, r2, #1
 801e80c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e810:	1212      	asrs	r2, r2, #8
 801e812:	2aff      	cmp	r2, #255	; 0xff
 801e814:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801e818:	d113      	bne.n	801e842 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801e81a:	0962      	lsrs	r2, r4, #5
 801e81c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e820:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e824:	f026 0607 	bic.w	r6, r6, #7
 801e828:	4316      	orrs	r6, r2
 801e82a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e82e:	4326      	orrs	r6, r4
 801e830:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801e834:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e836:	4410      	add	r0, r2
 801e838:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e83a:	f108 0801 	add.w	r8, r8, #1
 801e83e:	4411      	add	r1, r2
 801e840:	e7d1      	b.n	801e7e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801e842:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801e846:	fa1f fa82 	uxth.w	sl, r2
 801e84a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e84e:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801e852:	43d2      	mvns	r2, r2
 801e854:	b2d2      	uxtb	r2, r2
 801e856:	fb17 f70a 	smulbb	r7, r7, sl
 801e85a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e85e:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e862:	b2e4      	uxtb	r4, r4
 801e864:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e868:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e86c:	fa5f fe8e 	uxtb.w	lr, lr
 801e870:	fb14 f40a 	smulbb	r4, r4, sl
 801e874:	fb0e 4402 	mla	r4, lr, r2, r4
 801e878:	b2f6      	uxtb	r6, r6
 801e87a:	fa1f fc8c 	uxth.w	ip, ip
 801e87e:	fb16 f60a 	smulbb	r6, r6, sl
 801e882:	b2a4      	uxth	r4, r4
 801e884:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e888:	fb07 6702 	mla	r7, r7, r2, r6
 801e88c:	f10c 0201 	add.w	r2, ip, #1
 801e890:	1c66      	adds	r6, r4, #1
 801e892:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e896:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e89a:	b2bf      	uxth	r7, r7
 801e89c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e8a0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e8a4:	ea46 0c0c 	orr.w	ip, r6, ip
 801e8a8:	1c7e      	adds	r6, r7, #1
 801e8aa:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e8ae:	0976      	lsrs	r6, r6, #5
 801e8b0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e8b4:	ea4c 0c06 	orr.w	ip, ip, r6
 801e8b8:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801e8bc:	e7ba      	b.n	801e834 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e8be:	b007      	add	sp, #28
 801e8c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e8c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e8c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e8c8:	b085      	sub	sp, #20
 801e8ca:	468b      	mov	fp, r1
 801e8cc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e8ce:	9203      	str	r2, [sp, #12]
 801e8d0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e8d4:	6841      	ldr	r1, [r0, #4]
 801e8d6:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801e8da:	fb01 2404 	mla	r4, r1, r4, r2
 801e8de:	6802      	ldr	r2, [r0, #0]
 801e8e0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e8e4:	f8d8 2000 	ldr.w	r2, [r8]
 801e8e8:	9201      	str	r2, [sp, #4]
 801e8ea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e8ee:	f1bb 0f00 	cmp.w	fp, #0
 801e8f2:	dc03      	bgt.n	801e8fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e8f4:	9a03      	ldr	r2, [sp, #12]
 801e8f6:	2a00      	cmp	r2, #0
 801e8f8:	f340 814f 	ble.w	801eb9a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e8fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e8fe:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801e902:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801e906:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e90a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e90c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e910:	2b00      	cmp	r3, #0
 801e912:	dd0e      	ble.n	801e932 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e914:	1408      	asrs	r0, r1, #16
 801e916:	d405      	bmi.n	801e924 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e918:	42b8      	cmp	r0, r7
 801e91a:	da03      	bge.n	801e924 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e91c:	1410      	asrs	r0, r2, #16
 801e91e:	d401      	bmi.n	801e924 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e920:	42b0      	cmp	r0, r6
 801e922:	db07      	blt.n	801e934 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e924:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e926:	4401      	add	r1, r0
 801e928:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e92a:	3b01      	subs	r3, #1
 801e92c:	4402      	add	r2, r0
 801e92e:	3402      	adds	r4, #2
 801e930:	e7ee      	b.n	801e910 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e932:	d017      	beq.n	801e964 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e934:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e936:	1e58      	subs	r0, r3, #1
 801e938:	fb05 1500 	mla	r5, r5, r0, r1
 801e93c:	142d      	asrs	r5, r5, #16
 801e93e:	d409      	bmi.n	801e954 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e940:	42bd      	cmp	r5, r7
 801e942:	da07      	bge.n	801e954 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e944:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e946:	fb05 2000 	mla	r0, r5, r0, r2
 801e94a:	1400      	asrs	r0, r0, #16
 801e94c:	d402      	bmi.n	801e954 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e94e:	42b0      	cmp	r0, r6
 801e950:	f2c0 80ba 	blt.w	801eac8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e954:	2600      	movs	r6, #0
 801e956:	1998      	adds	r0, r3, r6
 801e958:	2800      	cmp	r0, #0
 801e95a:	dc3e      	bgt.n	801e9da <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e95c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e960:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e964:	f1bb 0f00 	cmp.w	fp, #0
 801e968:	f340 8117 	ble.w	801eb9a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e96c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e970:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e974:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e978:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e97a:	f1bb 0b01 	subs.w	fp, fp, #1
 801e97e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e982:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e986:	eeb0 6a62 	vmov.f32	s12, s5
 801e98a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e98e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e992:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e996:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801e99a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e99e:	eeb0 6a43 	vmov.f32	s12, s6
 801e9a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e9a6:	ee12 2a90 	vmov	r2, s5
 801e9aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e9ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801e9b2:	ee13 2a10 	vmov	r2, s6
 801e9b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e9ba:	9311      	str	r3, [sp, #68]	; 0x44
 801e9bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e9be:	fb92 f3f3 	sdiv	r3, r2, r3
 801e9c2:	9a03      	ldr	r2, [sp, #12]
 801e9c4:	9312      	str	r3, [sp, #72]	; 0x48
 801e9c6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801e9ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e9cc:	eeb0 3a67 	vmov.f32	s6, s15
 801e9d0:	bf08      	it	eq
 801e9d2:	4613      	moveq	r3, r2
 801e9d4:	eef0 2a47 	vmov.f32	s5, s14
 801e9d8:	e789      	b.n	801e8ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e9da:	140f      	asrs	r7, r1, #16
 801e9dc:	d424      	bmi.n	801ea28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e9de:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801e9e2:	42bd      	cmp	r5, r7
 801e9e4:	dd20      	ble.n	801ea28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e9e6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801e9ea:	d41d      	bmi.n	801ea28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e9ec:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801e9f0:	4560      	cmp	r0, ip
 801e9f2:	dd19      	ble.n	801ea28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e9f4:	b22d      	sxth	r5, r5
 801e9f6:	fb0c 7505 	mla	r5, ip, r5, r7
 801e9fa:	9801      	ldr	r0, [sp, #4]
 801e9fc:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801ea00:	0e07      	lsrs	r7, r0, #24
 801ea02:	2fff      	cmp	r7, #255	; 0xff
 801ea04:	d116      	bne.n	801ea34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801ea06:	f06f 0501 	mvn.w	r5, #1
 801ea0a:	fb05 f706 	mul.w	r7, r5, r6
 801ea0e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801ea12:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801ea16:	0945      	lsrs	r5, r0, #5
 801ea18:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ea1c:	ea4c 0505 	orr.w	r5, ip, r5
 801ea20:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801ea24:	4305      	orrs	r5, r0
 801ea26:	53e5      	strh	r5, [r4, r7]
 801ea28:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ea2a:	4401      	add	r1, r0
 801ea2c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ea2e:	3e01      	subs	r6, #1
 801ea30:	4402      	add	r2, r0
 801ea32:	e790      	b.n	801e956 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ea34:	b2fd      	uxtb	r5, r7
 801ea36:	2f00      	cmp	r7, #0
 801ea38:	d0f6      	beq.n	801ea28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ea3a:	f06f 0701 	mvn.w	r7, #1
 801ea3e:	4377      	muls	r7, r6
 801ea40:	fa1f f985 	uxth.w	r9, r5
 801ea44:	f834 e007 	ldrh.w	lr, [r4, r7]
 801ea48:	9702      	str	r7, [sp, #8]
 801ea4a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ea4e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801ea52:	43ed      	mvns	r5, r5
 801ea54:	b2ed      	uxtb	r5, r5
 801ea56:	fb17 f709 	smulbb	r7, r7, r9
 801ea5a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ea5e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801ea62:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801ea66:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801ea6a:	b2c0      	uxtb	r0, r0
 801ea6c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ea70:	fa5f fe8e 	uxtb.w	lr, lr
 801ea74:	fb10 f009 	smulbb	r0, r0, r9
 801ea78:	fb0e 0005 	mla	r0, lr, r5, r0
 801ea7c:	b280      	uxth	r0, r0
 801ea7e:	fa1f fc8c 	uxth.w	ip, ip
 801ea82:	fb1a fa09 	smulbb	sl, sl, r9
 801ea86:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ea8a:	fb07 a705 	mla	r7, r7, r5, sl
 801ea8e:	f100 0a01 	add.w	sl, r0, #1
 801ea92:	f10c 0501 	add.w	r5, ip, #1
 801ea96:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801ea9a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ea9e:	b2bf      	uxth	r7, r7
 801eaa0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801eaa4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801eaa8:	ea4a 0c0c 	orr.w	ip, sl, ip
 801eaac:	f107 0a01 	add.w	sl, r7, #1
 801eab0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801eab4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801eab8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801eabc:	9802      	ldr	r0, [sp, #8]
 801eabe:	ea4c 0c0a 	orr.w	ip, ip, sl
 801eac2:	f824 c000 	strh.w	ip, [r4, r0]
 801eac6:	e7af      	b.n	801ea28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801eac8:	f04f 0e00 	mov.w	lr, #0
 801eacc:	eba3 000e 	sub.w	r0, r3, lr
 801ead0:	2800      	cmp	r0, #0
 801ead2:	f77f af43 	ble.w	801e95c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ead6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801eada:	140d      	asrs	r5, r1, #16
 801eadc:	1410      	asrs	r0, r2, #16
 801eade:	fb06 5000 	mla	r0, r6, r0, r5
 801eae2:	9d01      	ldr	r5, [sp, #4]
 801eae4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801eae8:	0e2e      	lsrs	r6, r5, #24
 801eaea:	2eff      	cmp	r6, #255	; 0xff
 801eaec:	d112      	bne.n	801eb14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801eaee:	482c      	ldr	r0, [pc, #176]	; (801eba0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801eaf0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801eaf4:	0968      	lsrs	r0, r5, #5
 801eaf6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801eafa:	4330      	orrs	r0, r6
 801eafc:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801eb00:	4328      	orrs	r0, r5
 801eb02:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801eb06:	9811      	ldr	r0, [sp, #68]	; 0x44
 801eb08:	4401      	add	r1, r0
 801eb0a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801eb0c:	f10e 0e01 	add.w	lr, lr, #1
 801eb10:	4402      	add	r2, r0
 801eb12:	e7db      	b.n	801eacc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801eb14:	b2f0      	uxtb	r0, r6
 801eb16:	2e00      	cmp	r6, #0
 801eb18:	d0f5      	beq.n	801eb06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801eb1a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801eb1e:	fa1f f980 	uxth.w	r9, r0
 801eb22:	ea4f 272c 	mov.w	r7, ip, asr #8
 801eb26:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801eb2a:	43c0      	mvns	r0, r0
 801eb2c:	b2c0      	uxtb	r0, r0
 801eb2e:	fb16 f609 	smulbb	r6, r6, r9
 801eb32:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801eb36:	fb07 6700 	mla	r7, r7, r0, r6
 801eb3a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801eb3e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801eb42:	b2ed      	uxtb	r5, r5
 801eb44:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801eb48:	fa5f fc8c 	uxtb.w	ip, ip
 801eb4c:	fb15 f509 	smulbb	r5, r5, r9
 801eb50:	fb0c 5500 	mla	r5, ip, r0, r5
 801eb54:	b2bf      	uxth	r7, r7
 801eb56:	fb1a fa09 	smulbb	sl, sl, r9
 801eb5a:	b2ad      	uxth	r5, r5
 801eb5c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801eb60:	fb06 a600 	mla	r6, r6, r0, sl
 801eb64:	1c78      	adds	r0, r7, #1
 801eb66:	f105 0a01 	add.w	sl, r5, #1
 801eb6a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801eb6e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801eb72:	b2b6      	uxth	r6, r6
 801eb74:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801eb78:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801eb7c:	ea4a 0707 	orr.w	r7, sl, r7
 801eb80:	f106 0a01 	add.w	sl, r6, #1
 801eb84:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801eb88:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801eb8c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801eb90:	ea47 070a 	orr.w	r7, r7, sl
 801eb94:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801eb98:	e7b5      	b.n	801eb06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801eb9a:	b005      	add	sp, #20
 801eb9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eba0:	fffff800 	.word	0xfffff800

0801eba4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801eba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eba8:	b087      	sub	sp, #28
 801ebaa:	468b      	mov	fp, r1
 801ebac:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ebae:	9203      	str	r2, [sp, #12]
 801ebb0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801ebb4:	9204      	str	r2, [sp, #16]
 801ebb6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801ebba:	6841      	ldr	r1, [r0, #4]
 801ebbc:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801ebc0:	fb01 2404 	mla	r4, r1, r4, r2
 801ebc4:	6802      	ldr	r2, [r0, #0]
 801ebc6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ebca:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801ebce:	3201      	adds	r2, #1
 801ebd0:	f022 0201 	bic.w	r2, r2, #1
 801ebd4:	9200      	str	r2, [sp, #0]
 801ebd6:	f8d9 2000 	ldr.w	r2, [r9]
 801ebda:	9201      	str	r2, [sp, #4]
 801ebdc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ebe0:	f1bb 0f00 	cmp.w	fp, #0
 801ebe4:	dc03      	bgt.n	801ebee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ebe6:	9a03      	ldr	r2, [sp, #12]
 801ebe8:	2a00      	cmp	r2, #0
 801ebea:	f340 8169 	ble.w	801eec0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ebee:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ebf0:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801ebf4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801ebf8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ebfc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ebfe:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ec02:	2b00      	cmp	r3, #0
 801ec04:	dd0e      	ble.n	801ec24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ec06:	1402      	asrs	r2, r0, #16
 801ec08:	d405      	bmi.n	801ec16 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ec0a:	42ba      	cmp	r2, r7
 801ec0c:	da03      	bge.n	801ec16 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ec0e:	140a      	asrs	r2, r1, #16
 801ec10:	d401      	bmi.n	801ec16 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ec12:	42b2      	cmp	r2, r6
 801ec14:	db07      	blt.n	801ec26 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ec16:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ec18:	4410      	add	r0, r2
 801ec1a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ec1c:	3b01      	subs	r3, #1
 801ec1e:	4411      	add	r1, r2
 801ec20:	3402      	adds	r4, #2
 801ec22:	e7ee      	b.n	801ec02 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801ec24:	d017      	beq.n	801ec56 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801ec26:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ec28:	1e5a      	subs	r2, r3, #1
 801ec2a:	fb05 0502 	mla	r5, r5, r2, r0
 801ec2e:	142d      	asrs	r5, r5, #16
 801ec30:	d409      	bmi.n	801ec46 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ec32:	42bd      	cmp	r5, r7
 801ec34:	da07      	bge.n	801ec46 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ec36:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ec38:	fb05 1202 	mla	r2, r5, r2, r1
 801ec3c:	1412      	asrs	r2, r2, #16
 801ec3e:	d402      	bmi.n	801ec46 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ec40:	42b2      	cmp	r2, r6
 801ec42:	f2c0 80c7 	blt.w	801edd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801ec46:	2700      	movs	r7, #0
 801ec48:	19da      	adds	r2, r3, r7
 801ec4a:	2a00      	cmp	r2, #0
 801ec4c:	dc3e      	bgt.n	801eccc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ec4e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ec52:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ec56:	f1bb 0f00 	cmp.w	fp, #0
 801ec5a:	f340 8131 	ble.w	801eec0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ec5e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ec62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ec66:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ec6a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ec6c:	f1bb 0b01 	subs.w	fp, fp, #1
 801ec70:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ec74:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ec78:	eeb0 6a62 	vmov.f32	s12, s5
 801ec7c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ec80:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ec84:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ec88:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ec8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ec90:	eeb0 6a43 	vmov.f32	s12, s6
 801ec94:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ec98:	ee12 2a90 	vmov	r2, s5
 801ec9c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eca0:	fb92 f3f3 	sdiv	r3, r2, r3
 801eca4:	ee13 2a10 	vmov	r2, s6
 801eca8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ecac:	9313      	str	r3, [sp, #76]	; 0x4c
 801ecae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ecb0:	fb92 f3f3 	sdiv	r3, r2, r3
 801ecb4:	9a03      	ldr	r2, [sp, #12]
 801ecb6:	9314      	str	r3, [sp, #80]	; 0x50
 801ecb8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ecbc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ecbe:	eeb0 3a67 	vmov.f32	s6, s15
 801ecc2:	bf08      	it	eq
 801ecc4:	4613      	moveq	r3, r2
 801ecc6:	eef0 2a47 	vmov.f32	s5, s14
 801ecca:	e789      	b.n	801ebe0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801eccc:	1405      	asrs	r5, r0, #16
 801ecce:	d435      	bmi.n	801ed3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ecd0:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801ecd4:	42aa      	cmp	r2, r5
 801ecd6:	dd31      	ble.n	801ed3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ecd8:	140e      	asrs	r6, r1, #16
 801ecda:	d42f      	bmi.n	801ed3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ecdc:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801ece0:	42b2      	cmp	r2, r6
 801ece2:	dd2b      	ble.n	801ed3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ece4:	9a00      	ldr	r2, [sp, #0]
 801ece6:	fb06 5502 	mla	r5, r6, r2, r5
 801ecea:	086a      	lsrs	r2, r5, #1
 801ecec:	9e01      	ldr	r6, [sp, #4]
 801ecee:	5cb2      	ldrb	r2, [r6, r2]
 801ecf0:	07ee      	lsls	r6, r5, #31
 801ecf2:	bf54      	ite	pl
 801ecf4:	f002 020f 	andpl.w	r2, r2, #15
 801ecf8:	1112      	asrmi	r2, r2, #4
 801ecfa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ecfe:	b2d2      	uxtb	r2, r2
 801ed00:	b1e2      	cbz	r2, 801ed3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ed02:	9d04      	ldr	r5, [sp, #16]
 801ed04:	436a      	muls	r2, r5
 801ed06:	1c55      	adds	r5, r2, #1
 801ed08:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801ed0c:	4d6e      	ldr	r5, [pc, #440]	; (801eec8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801ed0e:	682d      	ldr	r5, [r5, #0]
 801ed10:	1212      	asrs	r2, r2, #8
 801ed12:	0a2e      	lsrs	r6, r5, #8
 801ed14:	2aff      	cmp	r2, #255	; 0xff
 801ed16:	9605      	str	r6, [sp, #20]
 801ed18:	d116      	bne.n	801ed48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ed1a:	f06f 0201 	mvn.w	r2, #1
 801ed1e:	fb02 fc07 	mul.w	ip, r2, r7
 801ed22:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801ed26:	096a      	lsrs	r2, r5, #5
 801ed28:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ed2c:	f026 0607 	bic.w	r6, r6, #7
 801ed30:	4316      	orrs	r6, r2
 801ed32:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ed36:	432e      	orrs	r6, r5
 801ed38:	f824 600c 	strh.w	r6, [r4, ip]
 801ed3c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ed3e:	4410      	add	r0, r2
 801ed40:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ed42:	3f01      	subs	r7, #1
 801ed44:	4411      	add	r1, r2
 801ed46:	e77f      	b.n	801ec48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801ed48:	f06f 0601 	mvn.w	r6, #1
 801ed4c:	437e      	muls	r6, r7
 801ed4e:	fa1f fa82 	uxth.w	sl, r2
 801ed52:	f834 8006 	ldrh.w	r8, [r4, r6]
 801ed56:	9602      	str	r6, [sp, #8]
 801ed58:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801ed5c:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801ed60:	43d2      	mvns	r2, r2
 801ed62:	b2d2      	uxtb	r2, r2
 801ed64:	fb1c fc0a 	smulbb	ip, ip, sl
 801ed68:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ed6c:	fb0e ce02 	mla	lr, lr, r2, ip
 801ed70:	b2ed      	uxtb	r5, r5
 801ed72:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801ed76:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ed7a:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801ed7e:	fa5f f888 	uxtb.w	r8, r8
 801ed82:	fb15 f50a 	smulbb	r5, r5, sl
 801ed86:	fb08 5502 	mla	r5, r8, r2, r5
 801ed8a:	fa1f fe8e 	uxth.w	lr, lr
 801ed8e:	fb16 f60a 	smulbb	r6, r6, sl
 801ed92:	b2ad      	uxth	r5, r5
 801ed94:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801ed98:	fb0c 6c02 	mla	ip, ip, r2, r6
 801ed9c:	f10e 0201 	add.w	r2, lr, #1
 801eda0:	1c6e      	adds	r6, r5, #1
 801eda2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801eda6:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801edaa:	fa1f fc8c 	uxth.w	ip, ip
 801edae:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801edb2:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801edb6:	ea46 0e0e 	orr.w	lr, r6, lr
 801edba:	f10c 0601 	add.w	r6, ip, #1
 801edbe:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801edc2:	0976      	lsrs	r6, r6, #5
 801edc4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801edc8:	9a02      	ldr	r2, [sp, #8]
 801edca:	ea4e 0e06 	orr.w	lr, lr, r6
 801edce:	f824 e002 	strh.w	lr, [r4, r2]
 801edd2:	e7b3      	b.n	801ed3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801edd4:	f04f 0800 	mov.w	r8, #0
 801edd8:	eba3 0208 	sub.w	r2, r3, r8
 801eddc:	2a00      	cmp	r2, #0
 801edde:	f77f af36 	ble.w	801ec4e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ede2:	9e00      	ldr	r6, [sp, #0]
 801ede4:	1402      	asrs	r2, r0, #16
 801ede6:	140d      	asrs	r5, r1, #16
 801ede8:	fb06 2505 	mla	r5, r6, r5, r2
 801edec:	086a      	lsrs	r2, r5, #1
 801edee:	9e01      	ldr	r6, [sp, #4]
 801edf0:	5cb2      	ldrb	r2, [r6, r2]
 801edf2:	07ed      	lsls	r5, r5, #31
 801edf4:	bf54      	ite	pl
 801edf6:	f002 020f 	andpl.w	r2, r2, #15
 801edfa:	1112      	asrmi	r2, r2, #4
 801edfc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ee00:	b2d2      	uxtb	r2, r2
 801ee02:	b1c2      	cbz	r2, 801ee36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ee04:	9d04      	ldr	r5, [sp, #16]
 801ee06:	436a      	muls	r2, r5
 801ee08:	1c55      	adds	r5, r2, #1
 801ee0a:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801ee0e:	4d2e      	ldr	r5, [pc, #184]	; (801eec8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801ee10:	1212      	asrs	r2, r2, #8
 801ee12:	682e      	ldr	r6, [r5, #0]
 801ee14:	2aff      	cmp	r2, #255	; 0xff
 801ee16:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801ee1a:	d113      	bne.n	801ee44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801ee1c:	0972      	lsrs	r2, r6, #5
 801ee1e:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801ee22:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ee26:	f025 0507 	bic.w	r5, r5, #7
 801ee2a:	4315      	orrs	r5, r2
 801ee2c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ee30:	4335      	orrs	r5, r6
 801ee32:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801ee36:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ee38:	4410      	add	r0, r2
 801ee3a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ee3c:	f108 0801 	add.w	r8, r8, #1
 801ee40:	4411      	add	r1, r2
 801ee42:	e7c9      	b.n	801edd8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ee44:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801ee48:	fa1f fa82 	uxth.w	sl, r2
 801ee4c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ee50:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801ee54:	43d2      	mvns	r2, r2
 801ee56:	b2d2      	uxtb	r2, r2
 801ee58:	fb17 f70a 	smulbb	r7, r7, sl
 801ee5c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ee60:	fb0c 7c02 	mla	ip, ip, r2, r7
 801ee64:	b2f6      	uxtb	r6, r6
 801ee66:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801ee6a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ee6e:	fa5f fe8e 	uxtb.w	lr, lr
 801ee72:	fb16 f60a 	smulbb	r6, r6, sl
 801ee76:	fb0e 6602 	mla	r6, lr, r2, r6
 801ee7a:	b2ed      	uxtb	r5, r5
 801ee7c:	fa1f fc8c 	uxth.w	ip, ip
 801ee80:	fb15 f50a 	smulbb	r5, r5, sl
 801ee84:	b2b6      	uxth	r6, r6
 801ee86:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ee8a:	fb07 5702 	mla	r7, r7, r2, r5
 801ee8e:	f10c 0201 	add.w	r2, ip, #1
 801ee92:	1c75      	adds	r5, r6, #1
 801ee94:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801ee98:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801ee9c:	b2bf      	uxth	r7, r7
 801ee9e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801eea2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801eea6:	ea45 0c0c 	orr.w	ip, r5, ip
 801eeaa:	1c7d      	adds	r5, r7, #1
 801eeac:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801eeb0:	096d      	lsrs	r5, r5, #5
 801eeb2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801eeb6:	ea4c 0c05 	orr.w	ip, ip, r5
 801eeba:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801eebe:	e7ba      	b.n	801ee36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801eec0:	b007      	add	sp, #28
 801eec2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eec6:	bf00      	nop
 801eec8:	2000225c 	.word	0x2000225c

0801eecc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801eecc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eed0:	b087      	sub	sp, #28
 801eed2:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801f1e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801eed6:	9815      	ldr	r0, [sp, #84]	; 0x54
 801eed8:	9205      	str	r2, [sp, #20]
 801eeda:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801eede:	9101      	str	r1, [sp, #4]
 801eee0:	6841      	ldr	r1, [r0, #4]
 801eee2:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801eee6:	fb01 2404 	mla	r4, r1, r4, r2
 801eeea:	6802      	ldr	r2, [r0, #0]
 801eeec:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801eef0:	f8db 2008 	ldr.w	r2, [fp, #8]
 801eef4:	3201      	adds	r2, #1
 801eef6:	f022 0201 	bic.w	r2, r2, #1
 801eefa:	9202      	str	r2, [sp, #8]
 801eefc:	f8db 2000 	ldr.w	r2, [fp]
 801ef00:	9203      	str	r2, [sp, #12]
 801ef02:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ef06:	9a01      	ldr	r2, [sp, #4]
 801ef08:	2a00      	cmp	r2, #0
 801ef0a:	dc03      	bgt.n	801ef14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ef0c:	9a05      	ldr	r2, [sp, #20]
 801ef0e:	2a00      	cmp	r2, #0
 801ef10:	f340 8162 	ble.w	801f1d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ef14:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ef16:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801ef1a:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801ef1e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ef22:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ef24:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ef28:	2b00      	cmp	r3, #0
 801ef2a:	dd0e      	ble.n	801ef4a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ef2c:	1402      	asrs	r2, r0, #16
 801ef2e:	d405      	bmi.n	801ef3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ef30:	42ba      	cmp	r2, r7
 801ef32:	da03      	bge.n	801ef3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ef34:	140a      	asrs	r2, r1, #16
 801ef36:	d401      	bmi.n	801ef3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ef38:	42b2      	cmp	r2, r6
 801ef3a:	db07      	blt.n	801ef4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ef3c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ef3e:	4410      	add	r0, r2
 801ef40:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ef42:	3b01      	subs	r3, #1
 801ef44:	4411      	add	r1, r2
 801ef46:	3402      	adds	r4, #2
 801ef48:	e7ee      	b.n	801ef28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801ef4a:	d017      	beq.n	801ef7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801ef4c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ef4e:	1e5a      	subs	r2, r3, #1
 801ef50:	fb05 0502 	mla	r5, r5, r2, r0
 801ef54:	142d      	asrs	r5, r5, #16
 801ef56:	d409      	bmi.n	801ef6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ef58:	42bd      	cmp	r5, r7
 801ef5a:	da07      	bge.n	801ef6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ef5c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ef5e:	fb05 1202 	mla	r2, r5, r2, r1
 801ef62:	1412      	asrs	r2, r2, #16
 801ef64:	d402      	bmi.n	801ef6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ef66:	42b2      	cmp	r2, r6
 801ef68:	f2c0 80c3 	blt.w	801f0f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801ef6c:	2500      	movs	r5, #0
 801ef6e:	195a      	adds	r2, r3, r5
 801ef70:	2a00      	cmp	r2, #0
 801ef72:	dc3f      	bgt.n	801eff4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ef74:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ef78:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ef7c:	9b01      	ldr	r3, [sp, #4]
 801ef7e:	2b00      	cmp	r3, #0
 801ef80:	f340 812a 	ble.w	801f1d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ef84:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ef88:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ef8c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ef90:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ef92:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ef96:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ef9a:	eeb0 6a62 	vmov.f32	s12, s5
 801ef9e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801efa2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801efa6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801efaa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801efae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801efb2:	eeb0 6a43 	vmov.f32	s12, s6
 801efb6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801efba:	ee12 2a90 	vmov	r2, s5
 801efbe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801efc2:	fb92 f3f3 	sdiv	r3, r2, r3
 801efc6:	ee13 2a10 	vmov	r2, s6
 801efca:	9313      	str	r3, [sp, #76]	; 0x4c
 801efcc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801efce:	fb92 f3f3 	sdiv	r3, r2, r3
 801efd2:	9314      	str	r3, [sp, #80]	; 0x50
 801efd4:	9b01      	ldr	r3, [sp, #4]
 801efd6:	9a05      	ldr	r2, [sp, #20]
 801efd8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801efdc:	3b01      	subs	r3, #1
 801efde:	9301      	str	r3, [sp, #4]
 801efe0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801efe4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801efe6:	eeb0 3a67 	vmov.f32	s6, s15
 801efea:	bf08      	it	eq
 801efec:	4613      	moveq	r3, r2
 801efee:	eef0 2a47 	vmov.f32	s5, s14
 801eff2:	e788      	b.n	801ef06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801eff4:	1406      	asrs	r6, r0, #16
 801eff6:	d42c      	bmi.n	801f052 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801eff8:	f8db 2008 	ldr.w	r2, [fp, #8]
 801effc:	42b2      	cmp	r2, r6
 801effe:	dd28      	ble.n	801f052 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f000:	140f      	asrs	r7, r1, #16
 801f002:	d426      	bmi.n	801f052 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f004:	f8db 200c 	ldr.w	r2, [fp, #12]
 801f008:	42ba      	cmp	r2, r7
 801f00a:	dd22      	ble.n	801f052 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f00c:	9a02      	ldr	r2, [sp, #8]
 801f00e:	fb07 6602 	mla	r6, r7, r2, r6
 801f012:	0872      	lsrs	r2, r6, #1
 801f014:	9f03      	ldr	r7, [sp, #12]
 801f016:	5cba      	ldrb	r2, [r7, r2]
 801f018:	07f6      	lsls	r6, r6, #31
 801f01a:	bf54      	ite	pl
 801f01c:	f002 020f 	andpl.w	r2, r2, #15
 801f020:	1112      	asrmi	r2, r2, #4
 801f022:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f026:	b2d2      	uxtb	r2, r2
 801f028:	2aff      	cmp	r2, #255	; 0xff
 801f02a:	d118      	bne.n	801f05e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801f02c:	f8d8 2000 	ldr.w	r2, [r8]
 801f030:	f06f 0601 	mvn.w	r6, #1
 801f034:	fb06 f705 	mul.w	r7, r6, r5
 801f038:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801f03c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801f040:	0956      	lsrs	r6, r2, #5
 801f042:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801f046:	ea4c 0606 	orr.w	r6, ip, r6
 801f04a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f04e:	4316      	orrs	r6, r2
 801f050:	53e6      	strh	r6, [r4, r7]
 801f052:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f054:	4410      	add	r0, r2
 801f056:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f058:	3d01      	subs	r5, #1
 801f05a:	4411      	add	r1, r2
 801f05c:	e787      	b.n	801ef6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801f05e:	2a00      	cmp	r2, #0
 801f060:	d0f7      	beq.n	801f052 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f062:	f06f 0601 	mvn.w	r6, #1
 801f066:	436e      	muls	r6, r5
 801f068:	f8d8 c000 	ldr.w	ip, [r8]
 801f06c:	f834 e006 	ldrh.w	lr, [r4, r6]
 801f070:	9604      	str	r6, [sp, #16]
 801f072:	fa1f f982 	uxth.w	r9, r2
 801f076:	ea4f 272e 	mov.w	r7, lr, asr #8
 801f07a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801f07e:	43d2      	mvns	r2, r2
 801f080:	b2d2      	uxtb	r2, r2
 801f082:	fb16 f609 	smulbb	r6, r6, r9
 801f086:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f08a:	fb07 6702 	mla	r7, r7, r2, r6
 801f08e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801f092:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801f096:	fa5f fc8c 	uxtb.w	ip, ip
 801f09a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f09e:	fa5f fe8e 	uxtb.w	lr, lr
 801f0a2:	fb1c fc09 	smulbb	ip, ip, r9
 801f0a6:	fb0e cc02 	mla	ip, lr, r2, ip
 801f0aa:	b2bf      	uxth	r7, r7
 801f0ac:	fb1a fa09 	smulbb	sl, sl, r9
 801f0b0:	fa1f fc8c 	uxth.w	ip, ip
 801f0b4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f0b8:	fb06 a602 	mla	r6, r6, r2, sl
 801f0bc:	1c7a      	adds	r2, r7, #1
 801f0be:	f10c 0a01 	add.w	sl, ip, #1
 801f0c2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801f0c6:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801f0ca:	b2b6      	uxth	r6, r6
 801f0cc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f0d0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801f0d4:	ea4a 0707 	orr.w	r7, sl, r7
 801f0d8:	f106 0a01 	add.w	sl, r6, #1
 801f0dc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801f0e0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f0e4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801f0e8:	9a04      	ldr	r2, [sp, #16]
 801f0ea:	ea47 070a 	orr.w	r7, r7, sl
 801f0ee:	52a7      	strh	r7, [r4, r2]
 801f0f0:	e7af      	b.n	801f052 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f0f2:	f04f 0e00 	mov.w	lr, #0
 801f0f6:	eba3 020e 	sub.w	r2, r3, lr
 801f0fa:	2a00      	cmp	r2, #0
 801f0fc:	f77f af3a 	ble.w	801ef74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801f100:	9e02      	ldr	r6, [sp, #8]
 801f102:	1402      	asrs	r2, r0, #16
 801f104:	140d      	asrs	r5, r1, #16
 801f106:	fb06 2505 	mla	r5, r6, r5, r2
 801f10a:	086a      	lsrs	r2, r5, #1
 801f10c:	9e03      	ldr	r6, [sp, #12]
 801f10e:	5cb2      	ldrb	r2, [r6, r2]
 801f110:	07ed      	lsls	r5, r5, #31
 801f112:	bf54      	ite	pl
 801f114:	f002 020f 	andpl.w	r2, r2, #15
 801f118:	1112      	asrmi	r2, r2, #4
 801f11a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f11e:	b2d2      	uxtb	r2, r2
 801f120:	2aff      	cmp	r2, #255	; 0xff
 801f122:	d115      	bne.n	801f150 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801f124:	f8d8 5000 	ldr.w	r5, [r8]
 801f128:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801f12c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801f130:	096a      	lsrs	r2, r5, #5
 801f132:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f136:	4332      	orrs	r2, r6
 801f138:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801f13c:	432a      	orrs	r2, r5
 801f13e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801f142:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f144:	4410      	add	r0, r2
 801f146:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f148:	f10e 0e01 	add.w	lr, lr, #1
 801f14c:	4411      	add	r1, r2
 801f14e:	e7d2      	b.n	801f0f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f150:	2a00      	cmp	r2, #0
 801f152:	d0f6      	beq.n	801f142 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801f154:	f8d8 7000 	ldr.w	r7, [r8]
 801f158:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801f15c:	fa1f f982 	uxth.w	r9, r2
 801f160:	ea4f 262c 	mov.w	r6, ip, asr #8
 801f164:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801f168:	43d2      	mvns	r2, r2
 801f16a:	b2d2      	uxtb	r2, r2
 801f16c:	fb15 f509 	smulbb	r5, r5, r9
 801f170:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f174:	fb06 5602 	mla	r6, r6, r2, r5
 801f178:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801f17c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801f180:	b2ff      	uxtb	r7, r7
 801f182:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f186:	fa5f fc8c 	uxtb.w	ip, ip
 801f18a:	fb17 f709 	smulbb	r7, r7, r9
 801f18e:	fb0c 7702 	mla	r7, ip, r2, r7
 801f192:	b2b6      	uxth	r6, r6
 801f194:	fb1a fa09 	smulbb	sl, sl, r9
 801f198:	b2bf      	uxth	r7, r7
 801f19a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f19e:	fb05 a502 	mla	r5, r5, r2, sl
 801f1a2:	1c72      	adds	r2, r6, #1
 801f1a4:	f107 0a01 	add.w	sl, r7, #1
 801f1a8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801f1ac:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801f1b0:	b2ad      	uxth	r5, r5
 801f1b2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f1b6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f1ba:	ea4a 0606 	orr.w	r6, sl, r6
 801f1be:	f105 0a01 	add.w	sl, r5, #1
 801f1c2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801f1c6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f1ca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801f1ce:	ea46 060a 	orr.w	r6, r6, sl
 801f1d2:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801f1d6:	e7b4      	b.n	801f142 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801f1d8:	b007      	add	sp, #28
 801f1da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f1de:	bf00      	nop
 801f1e0:	2000225c 	.word	0x2000225c

0801f1e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801f1e4:	4770      	bx	lr

0801f1e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801f1e6:	4770      	bx	lr

0801f1e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801f1e8:	4770      	bx	lr

0801f1ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801f1ea:	4770      	bx	lr

0801f1ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801f1ec:	4770      	bx	lr

0801f1ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801f1ee:	4770      	bx	lr

0801f1f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801f1f0:	4770      	bx	lr

0801f1f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801f1f2:	4770      	bx	lr

0801f1f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801f1f4:	4770      	bx	lr

0801f1f6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801f1f6:	4770      	bx	lr

0801f1f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801f1f8:	4770      	bx	lr

0801f1fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801f1fa:	4770      	bx	lr

0801f1fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801f1fc:	4770      	bx	lr

0801f1fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801f1fe:	4770      	bx	lr

0801f200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801f200:	4770      	bx	lr

0801f202 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801f202:	4770      	bx	lr

0801f204 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801f204:	4770      	bx	lr

0801f206 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801f206:	4770      	bx	lr

0801f208 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801f208:	4770      	bx	lr

0801f20a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801f20a:	4770      	bx	lr

0801f20c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801f20c:	4770      	bx	lr

0801f20e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801f20e:	4770      	bx	lr

0801f210 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801f210:	4770      	bx	lr

0801f212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801f212:	4770      	bx	lr

0801f214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801f214:	4770      	bx	lr

0801f216 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801f216:	4770      	bx	lr

0801f218 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801f218:	4770      	bx	lr

0801f21a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801f21a:	4770      	bx	lr

0801f21c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801f21c:	4770      	bx	lr

0801f21e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801f21e:	4770      	bx	lr

0801f220 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801f220:	4770      	bx	lr

0801f222 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801f222:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f226:	b088      	sub	sp, #32
 801f228:	ac08      	add	r4, sp, #32
 801f22a:	4606      	mov	r6, r0
 801f22c:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801f230:	4620      	mov	r0, r4
 801f232:	4688      	mov	r8, r1
 801f234:	4691      	mov	r9, r2
 801f236:	f7fd fc63 	bl	801cb00 <_ZNK8touchgfx6Bitmap7getDataEv>
 801f23a:	6833      	ldr	r3, [r6, #0]
 801f23c:	4605      	mov	r5, r0
 801f23e:	4620      	mov	r0, r4
 801f240:	699f      	ldr	r7, [r3, #24]
 801f242:	f7fd fb71 	bl	801c928 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801f246:	4682      	mov	sl, r0
 801f248:	4620      	mov	r0, r4
 801f24a:	f7fd fba1 	bl	801c990 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801f24e:	9500      	str	r5, [sp, #0]
 801f250:	e9cd a001 	strd	sl, r0, [sp, #4]
 801f254:	464b      	mov	r3, r9
 801f256:	a806      	add	r0, sp, #24
 801f258:	4642      	mov	r2, r8
 801f25a:	4631      	mov	r1, r6
 801f25c:	47b8      	blx	r7
 801f25e:	4628      	mov	r0, r5
 801f260:	b008      	add	sp, #32
 801f262:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0801f268 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801f268:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801f26c:	2300      	movs	r3, #0
 801f26e:	9300      	str	r3, [sp, #0]
 801f270:	4b3d      	ldr	r3, [pc, #244]	; (801f368 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801f272:	781b      	ldrb	r3, [r3, #0]
 801f274:	2b00      	cmp	r3, #0
 801f276:	d137      	bne.n	801f2e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801f278:	4a3c      	ldr	r2, [pc, #240]	; (801f36c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801f27a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801f27e:	f8ad 2004 	strh.w	r2, [sp, #4]
 801f282:	2b00      	cmp	r3, #0
 801f284:	d132      	bne.n	801f2ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801f286:	4b3a      	ldr	r3, [pc, #232]	; (801f370 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801f288:	f9b3 3000 	ldrsh.w	r3, [r3]
 801f28c:	6808      	ldr	r0, [r1, #0]
 801f28e:	6849      	ldr	r1, [r1, #4]
 801f290:	f8ad 3006 	strh.w	r3, [sp, #6]
 801f294:	ac02      	add	r4, sp, #8
 801f296:	ab02      	add	r3, sp, #8
 801f298:	c303      	stmia	r3!, {r0, r1}
 801f29a:	4669      	mov	r1, sp
 801f29c:	4620      	mov	r0, r4
 801f29e:	f7f9 fedb 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f2a2:	4668      	mov	r0, sp
 801f2a4:	f7f9 fe94 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f2a8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801f2ac:	f8bd 2000 	ldrh.w	r2, [sp]
 801f2b0:	4d30      	ldr	r5, [pc, #192]	; (801f374 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801f2b2:	4413      	add	r3, r2
 801f2b4:	f8ad 3008 	strh.w	r3, [sp, #8]
 801f2b8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801f2bc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801f2c0:	6828      	ldr	r0, [r5, #0]
 801f2c2:	4413      	add	r3, r2
 801f2c4:	f8ad 300a 	strh.w	r3, [sp, #10]
 801f2c8:	6803      	ldr	r3, [r0, #0]
 801f2ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f2cc:	4798      	blx	r3
 801f2ce:	f010 0f01 	tst.w	r0, #1
 801f2d2:	462f      	mov	r7, r5
 801f2d4:	d00c      	beq.n	801f2f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801f2d6:	6828      	ldr	r0, [r5, #0]
 801f2d8:	6803      	ldr	r3, [r0, #0]
 801f2da:	e894 0006 	ldmia.w	r4, {r1, r2}
 801f2de:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801f2e0:	4798      	blx	r3
 801f2e2:	b004      	add	sp, #16
 801f2e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f2e8:	4a21      	ldr	r2, [pc, #132]	; (801f370 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801f2ea:	e7c6      	b.n	801f27a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801f2ec:	4b1f      	ldr	r3, [pc, #124]	; (801f36c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801f2ee:	e7cb      	b.n	801f288 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801f2f0:	6838      	ldr	r0, [r7, #0]
 801f2f2:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801f2f6:	6803      	ldr	r3, [r0, #0]
 801f2f8:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801f2fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801f2fe:	4798      	blx	r3
 801f300:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801f304:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f308:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801f30c:	fb16 3602 	smlabb	r6, r6, r2, r3
 801f310:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801f314:	6838      	ldr	r0, [r7, #0]
 801f316:	6803      	ldr	r3, [r0, #0]
 801f318:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f31a:	4798      	blx	r3
 801f31c:	4a13      	ldr	r2, [pc, #76]	; (801f36c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801f31e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801f322:	8813      	ldrh	r3, [r2, #0]
 801f324:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801f328:	fb03 1404 	mla	r4, r3, r4, r1
 801f32c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801f330:	435d      	muls	r5, r3
 801f332:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801f336:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801f33a:	4691      	mov	r9, r2
 801f33c:	6838      	ldr	r0, [r7, #0]
 801f33e:	42ac      	cmp	r4, r5
 801f340:	6803      	ldr	r3, [r0, #0]
 801f342:	d20e      	bcs.n	801f362 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801f344:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801f348:	4632      	mov	r2, r6
 801f34a:	4643      	mov	r3, r8
 801f34c:	4621      	mov	r1, r4
 801f34e:	47d0      	blx	sl
 801f350:	f8b9 3000 	ldrh.w	r3, [r9]
 801f354:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f358:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801f35c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801f360:	e7ec      	b.n	801f33c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801f362:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f364:	4798      	blx	r3
 801f366:	e7bc      	b.n	801f2e2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801f368:	20002244 	.word	0x20002244
 801f36c:	20002246 	.word	0x20002246
 801f370:	20002248 	.word	0x20002248
 801f374:	2000224c 	.word	0x2000224c

0801f378 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801f378:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f37c:	b08b      	sub	sp, #44	; 0x2c
 801f37e:	460f      	mov	r7, r1
 801f380:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801f384:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801f388:	4616      	mov	r6, r2
 801f38a:	f1bb 0f00 	cmp.w	fp, #0
 801f38e:	d04a      	beq.n	801f426 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801f390:	6810      	ldr	r0, [r2, #0]
 801f392:	6851      	ldr	r1, [r2, #4]
 801f394:	ad06      	add	r5, sp, #24
 801f396:	c503      	stmia	r5!, {r0, r1}
 801f398:	6818      	ldr	r0, [r3, #0]
 801f39a:	6859      	ldr	r1, [r3, #4]
 801f39c:	ad08      	add	r5, sp, #32
 801f39e:	c503      	stmia	r5!, {r0, r1}
 801f3a0:	a806      	add	r0, sp, #24
 801f3a2:	f7f9 fe15 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f3a6:	4631      	mov	r1, r6
 801f3a8:	a808      	add	r0, sp, #32
 801f3aa:	f7f9 fe55 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f3ae:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801f3b2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801f3b6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801f3ba:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801f3be:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801f3c2:	fb16 2103 	smlabb	r1, r6, r3, r2
 801f3c6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801f3ca:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801f3ce:	4f5f      	ldr	r7, [pc, #380]	; (801f54c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801f3d0:	440a      	add	r2, r1
 801f3d2:	f8ad 2020 	strh.w	r2, [sp, #32]
 801f3d6:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801f3da:	6838      	ldr	r0, [r7, #0]
 801f3dc:	4413      	add	r3, r2
 801f3de:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801f3e2:	6803      	ldr	r3, [r0, #0]
 801f3e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f3e6:	4798      	blx	r3
 801f3e8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801f3ec:	46b9      	mov	r9, r7
 801f3ee:	d11d      	bne.n	801f42c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801f3f0:	b9fc      	cbnz	r4, 801f432 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801f3f2:	f010 0f01 	tst.w	r0, #1
 801f3f6:	d01c      	beq.n	801f432 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801f3f8:	f8d9 0000 	ldr.w	r0, [r9]
 801f3fc:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801f400:	6801      	ldr	r1, [r0, #0]
 801f402:	f8cd b00c 	str.w	fp, [sp, #12]
 801f406:	2700      	movs	r7, #0
 801f408:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801f40c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801f410:	9402      	str	r4, [sp, #8]
 801f412:	b2ad      	uxth	r5, r5
 801f414:	fa1f f488 	uxth.w	r4, r8
 801f418:	9501      	str	r5, [sp, #4]
 801f41a:	9400      	str	r4, [sp, #0]
 801f41c:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801f41e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801f422:	4631      	mov	r1, r6
 801f424:	47a0      	blx	r4
 801f426:	b00b      	add	sp, #44	; 0x2c
 801f428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f42c:	f010 0f04 	tst.w	r0, #4
 801f430:	e7e1      	b.n	801f3f6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801f432:	f8d9 0000 	ldr.w	r0, [r9]
 801f436:	6803      	ldr	r3, [r0, #0]
 801f438:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f43a:	4798      	blx	r3
 801f43c:	4b44      	ldr	r3, [pc, #272]	; (801f550 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801f43e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801f442:	881a      	ldrh	r2, [r3, #0]
 801f444:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801f448:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801f44c:	fb02 1404 	mla	r4, r2, r4, r1
 801f450:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801f454:	469a      	mov	sl, r3
 801f456:	fb05 f502 	mul.w	r5, r5, r2
 801f45a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801f45e:	d059      	beq.n	801f514 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801f460:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801f464:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801f468:	fa1f f28b 	uxth.w	r2, fp
 801f46c:	fa1f f989 	uxth.w	r9, r9
 801f470:	469e      	mov	lr, r3
 801f472:	42ac      	cmp	r4, r5
 801f474:	d264      	bcs.n	801f540 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801f476:	eb04 0a07 	add.w	sl, r4, r7
 801f47a:	4554      	cmp	r4, sl
 801f47c:	d23d      	bcs.n	801f4fa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801f47e:	8821      	ldrh	r1, [r4, #0]
 801f480:	f836 3b02 	ldrh.w	r3, [r6], #2
 801f484:	1208      	asrs	r0, r1, #8
 801f486:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801f48a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f48e:	fb10 f009 	smulbb	r0, r0, r9
 801f492:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801f496:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f49a:	00c9      	lsls	r1, r1, #3
 801f49c:	fb0c 0c02 	mla	ip, ip, r2, r0
 801f4a0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f4a4:	10d8      	asrs	r0, r3, #3
 801f4a6:	b2c9      	uxtb	r1, r1
 801f4a8:	00db      	lsls	r3, r3, #3
 801f4aa:	fa1f fc8c 	uxth.w	ip, ip
 801f4ae:	fb1b fb09 	smulbb	fp, fp, r9
 801f4b2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f4b6:	b2db      	uxtb	r3, r3
 801f4b8:	fb11 f109 	smulbb	r1, r1, r9
 801f4bc:	fb00 b002 	mla	r0, r0, r2, fp
 801f4c0:	fb03 1302 	mla	r3, r3, r2, r1
 801f4c4:	f10c 0b01 	add.w	fp, ip, #1
 801f4c8:	b29b      	uxth	r3, r3
 801f4ca:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801f4ce:	b280      	uxth	r0, r0
 801f4d0:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801f4d4:	f103 0c01 	add.w	ip, r3, #1
 801f4d8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f4dc:	1c43      	adds	r3, r0, #1
 801f4de:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f4e2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f4e6:	0940      	lsrs	r0, r0, #5
 801f4e8:	ea4c 0c0b 	orr.w	ip, ip, fp
 801f4ec:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f4f0:	ea4c 0c00 	orr.w	ip, ip, r0
 801f4f4:	f824 cb02 	strh.w	ip, [r4], #2
 801f4f8:	e7bf      	b.n	801f47a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801f4fa:	f8be 3000 	ldrh.w	r3, [lr]
 801f4fe:	eba3 0308 	sub.w	r3, r3, r8
 801f502:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f506:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801f50a:	eba3 0308 	sub.w	r3, r3, r8
 801f50e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801f512:	e7ae      	b.n	801f472 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801f514:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801f518:	f8d9 0000 	ldr.w	r0, [r9]
 801f51c:	42ac      	cmp	r4, r5
 801f51e:	6803      	ldr	r3, [r0, #0]
 801f520:	d20e      	bcs.n	801f540 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801f522:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801f526:	4632      	mov	r2, r6
 801f528:	463b      	mov	r3, r7
 801f52a:	4621      	mov	r1, r4
 801f52c:	47c0      	blx	r8
 801f52e:	f8ba 3000 	ldrh.w	r3, [sl]
 801f532:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f536:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801f53a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801f53e:	e7eb      	b.n	801f518 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801f540:	4b02      	ldr	r3, [pc, #8]	; (801f54c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801f542:	6818      	ldr	r0, [r3, #0]
 801f544:	6803      	ldr	r3, [r0, #0]
 801f546:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f548:	4798      	blx	r3
 801f54a:	e76c      	b.n	801f426 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801f54c:	2000224c 	.word	0x2000224c
 801f550:	20002246 	.word	0x20002246

0801f554 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801f554:	b510      	push	{r4, lr}
 801f556:	2104      	movs	r1, #4
 801f558:	4604      	mov	r4, r0
 801f55a:	f00b f940 	bl	802a7de <_ZdlPvj>
 801f55e:	4620      	mov	r0, r4
 801f560:	bd10      	pop	{r4, pc}

0801f562 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801f562:	b510      	push	{r4, lr}
 801f564:	2104      	movs	r1, #4
 801f566:	4604      	mov	r4, r0
 801f568:	f00b f939 	bl	802a7de <_ZdlPvj>
 801f56c:	4620      	mov	r0, r4
 801f56e:	bd10      	pop	{r4, pc}

0801f570 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801f570:	b510      	push	{r4, lr}
 801f572:	f640 0144 	movw	r1, #2116	; 0x844
 801f576:	4604      	mov	r4, r0
 801f578:	f00b f931 	bl	802a7de <_ZdlPvj>
 801f57c:	4620      	mov	r0, r4
 801f57e:	bd10      	pop	{r4, pc}

0801f580 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f580:	b510      	push	{r4, lr}
 801f582:	2104      	movs	r1, #4
 801f584:	4604      	mov	r4, r0
 801f586:	f00b f92a 	bl	802a7de <_ZdlPvj>
 801f58a:	4620      	mov	r0, r4
 801f58c:	bd10      	pop	{r4, pc}

0801f58e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801f58e:	b510      	push	{r4, lr}
 801f590:	2104      	movs	r1, #4
 801f592:	4604      	mov	r4, r0
 801f594:	f00b f923 	bl	802a7de <_ZdlPvj>
 801f598:	4620      	mov	r0, r4
 801f59a:	bd10      	pop	{r4, pc}

0801f59c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f59c:	b510      	push	{r4, lr}
 801f59e:	2104      	movs	r1, #4
 801f5a0:	4604      	mov	r4, r0
 801f5a2:	f00b f91c 	bl	802a7de <_ZdlPvj>
 801f5a6:	4620      	mov	r0, r4
 801f5a8:	bd10      	pop	{r4, pc}

0801f5aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801f5aa:	b510      	push	{r4, lr}
 801f5ac:	2104      	movs	r1, #4
 801f5ae:	4604      	mov	r4, r0
 801f5b0:	f00b f915 	bl	802a7de <_ZdlPvj>
 801f5b4:	4620      	mov	r0, r4
 801f5b6:	bd10      	pop	{r4, pc}

0801f5b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f5b8:	b510      	push	{r4, lr}
 801f5ba:	2104      	movs	r1, #4
 801f5bc:	4604      	mov	r4, r0
 801f5be:	f00b f90e 	bl	802a7de <_ZdlPvj>
 801f5c2:	4620      	mov	r0, r4
 801f5c4:	bd10      	pop	{r4, pc}

0801f5c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801f5c6:	b510      	push	{r4, lr}
 801f5c8:	2104      	movs	r1, #4
 801f5ca:	4604      	mov	r4, r0
 801f5cc:	f00b f907 	bl	802a7de <_ZdlPvj>
 801f5d0:	4620      	mov	r0, r4
 801f5d2:	bd10      	pop	{r4, pc}

0801f5d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f5d4:	b510      	push	{r4, lr}
 801f5d6:	2104      	movs	r1, #4
 801f5d8:	4604      	mov	r4, r0
 801f5da:	f00b f900 	bl	802a7de <_ZdlPvj>
 801f5de:	4620      	mov	r0, r4
 801f5e0:	bd10      	pop	{r4, pc}

0801f5e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801f5e2:	b510      	push	{r4, lr}
 801f5e4:	2104      	movs	r1, #4
 801f5e6:	4604      	mov	r4, r0
 801f5e8:	f00b f8f9 	bl	802a7de <_ZdlPvj>
 801f5ec:	4620      	mov	r0, r4
 801f5ee:	bd10      	pop	{r4, pc}

0801f5f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f5f0:	b510      	push	{r4, lr}
 801f5f2:	2104      	movs	r1, #4
 801f5f4:	4604      	mov	r4, r0
 801f5f6:	f00b f8f2 	bl	802a7de <_ZdlPvj>
 801f5fa:	4620      	mov	r0, r4
 801f5fc:	bd10      	pop	{r4, pc}

0801f5fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f5fe:	b510      	push	{r4, lr}
 801f600:	2104      	movs	r1, #4
 801f602:	4604      	mov	r4, r0
 801f604:	f00b f8eb 	bl	802a7de <_ZdlPvj>
 801f608:	4620      	mov	r0, r4
 801f60a:	bd10      	pop	{r4, pc}

0801f60c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f60c:	b510      	push	{r4, lr}
 801f60e:	2104      	movs	r1, #4
 801f610:	4604      	mov	r4, r0
 801f612:	f00b f8e4 	bl	802a7de <_ZdlPvj>
 801f616:	4620      	mov	r0, r4
 801f618:	bd10      	pop	{r4, pc}

0801f61a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f61a:	b510      	push	{r4, lr}
 801f61c:	2104      	movs	r1, #4
 801f61e:	4604      	mov	r4, r0
 801f620:	f00b f8dd 	bl	802a7de <_ZdlPvj>
 801f624:	4620      	mov	r0, r4
 801f626:	bd10      	pop	{r4, pc}

0801f628 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f628:	b510      	push	{r4, lr}
 801f62a:	2104      	movs	r1, #4
 801f62c:	4604      	mov	r4, r0
 801f62e:	f00b f8d6 	bl	802a7de <_ZdlPvj>
 801f632:	4620      	mov	r0, r4
 801f634:	bd10      	pop	{r4, pc}

0801f636 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801f636:	b510      	push	{r4, lr}
 801f638:	2104      	movs	r1, #4
 801f63a:	4604      	mov	r4, r0
 801f63c:	f00b f8cf 	bl	802a7de <_ZdlPvj>
 801f640:	4620      	mov	r0, r4
 801f642:	bd10      	pop	{r4, pc}

0801f644 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f644:	b510      	push	{r4, lr}
 801f646:	2104      	movs	r1, #4
 801f648:	4604      	mov	r4, r0
 801f64a:	f00b f8c8 	bl	802a7de <_ZdlPvj>
 801f64e:	4620      	mov	r0, r4
 801f650:	bd10      	pop	{r4, pc}

0801f652 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f652:	b510      	push	{r4, lr}
 801f654:	2104      	movs	r1, #4
 801f656:	4604      	mov	r4, r0
 801f658:	f00b f8c1 	bl	802a7de <_ZdlPvj>
 801f65c:	4620      	mov	r0, r4
 801f65e:	bd10      	pop	{r4, pc}

0801f660 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f660:	b510      	push	{r4, lr}
 801f662:	2104      	movs	r1, #4
 801f664:	4604      	mov	r4, r0
 801f666:	f00b f8ba 	bl	802a7de <_ZdlPvj>
 801f66a:	4620      	mov	r0, r4
 801f66c:	bd10      	pop	{r4, pc}

0801f66e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801f66e:	b510      	push	{r4, lr}
 801f670:	2104      	movs	r1, #4
 801f672:	4604      	mov	r4, r0
 801f674:	f00b f8b3 	bl	802a7de <_ZdlPvj>
 801f678:	4620      	mov	r0, r4
 801f67a:	bd10      	pop	{r4, pc}

0801f67c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f67c:	b510      	push	{r4, lr}
 801f67e:	2104      	movs	r1, #4
 801f680:	4604      	mov	r4, r0
 801f682:	f00b f8ac 	bl	802a7de <_ZdlPvj>
 801f686:	4620      	mov	r0, r4
 801f688:	bd10      	pop	{r4, pc}

0801f68a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f68a:	b510      	push	{r4, lr}
 801f68c:	2104      	movs	r1, #4
 801f68e:	4604      	mov	r4, r0
 801f690:	f00b f8a5 	bl	802a7de <_ZdlPvj>
 801f694:	4620      	mov	r0, r4
 801f696:	bd10      	pop	{r4, pc}

0801f698 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f698:	b510      	push	{r4, lr}
 801f69a:	2104      	movs	r1, #4
 801f69c:	4604      	mov	r4, r0
 801f69e:	f00b f89e 	bl	802a7de <_ZdlPvj>
 801f6a2:	4620      	mov	r0, r4
 801f6a4:	bd10      	pop	{r4, pc}

0801f6a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f6a6:	b510      	push	{r4, lr}
 801f6a8:	2104      	movs	r1, #4
 801f6aa:	4604      	mov	r4, r0
 801f6ac:	f00b f897 	bl	802a7de <_ZdlPvj>
 801f6b0:	4620      	mov	r0, r4
 801f6b2:	bd10      	pop	{r4, pc}

0801f6b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f6b4:	b510      	push	{r4, lr}
 801f6b6:	2104      	movs	r1, #4
 801f6b8:	4604      	mov	r4, r0
 801f6ba:	f00b f890 	bl	802a7de <_ZdlPvj>
 801f6be:	4620      	mov	r0, r4
 801f6c0:	bd10      	pop	{r4, pc}

0801f6c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f6c2:	b510      	push	{r4, lr}
 801f6c4:	2104      	movs	r1, #4
 801f6c6:	4604      	mov	r4, r0
 801f6c8:	f00b f889 	bl	802a7de <_ZdlPvj>
 801f6cc:	4620      	mov	r0, r4
 801f6ce:	bd10      	pop	{r4, pc}

0801f6d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801f6d0:	b510      	push	{r4, lr}
 801f6d2:	2104      	movs	r1, #4
 801f6d4:	4604      	mov	r4, r0
 801f6d6:	f00b f882 	bl	802a7de <_ZdlPvj>
 801f6da:	4620      	mov	r0, r4
 801f6dc:	bd10      	pop	{r4, pc}

0801f6de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801f6de:	b510      	push	{r4, lr}
 801f6e0:	2104      	movs	r1, #4
 801f6e2:	4604      	mov	r4, r0
 801f6e4:	f00b f87b 	bl	802a7de <_ZdlPvj>
 801f6e8:	4620      	mov	r0, r4
 801f6ea:	bd10      	pop	{r4, pc}

0801f6ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801f6ec:	b510      	push	{r4, lr}
 801f6ee:	2104      	movs	r1, #4
 801f6f0:	4604      	mov	r4, r0
 801f6f2:	f00b f874 	bl	802a7de <_ZdlPvj>
 801f6f6:	4620      	mov	r0, r4
 801f6f8:	bd10      	pop	{r4, pc}

0801f6fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801f6fa:	b510      	push	{r4, lr}
 801f6fc:	2104      	movs	r1, #4
 801f6fe:	4604      	mov	r4, r0
 801f700:	f00b f86d 	bl	802a7de <_ZdlPvj>
 801f704:	4620      	mov	r0, r4
 801f706:	bd10      	pop	{r4, pc}

0801f708 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f70c:	b08f      	sub	sp, #60	; 0x3c
 801f70e:	461c      	mov	r4, r3
 801f710:	9205      	str	r2, [sp, #20]
 801f712:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f716:	9100      	str	r1, [sp, #0]
 801f718:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f71a:	9201      	str	r2, [sp, #4]
 801f71c:	2a00      	cmp	r2, #0
 801f71e:	f000 8115 	beq.w	801f94c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801f722:	6820      	ldr	r0, [r4, #0]
 801f724:	6861      	ldr	r1, [r4, #4]
 801f726:	aa0a      	add	r2, sp, #40	; 0x28
 801f728:	c203      	stmia	r2!, {r0, r1}
 801f72a:	6818      	ldr	r0, [r3, #0]
 801f72c:	6859      	ldr	r1, [r3, #4]
 801f72e:	aa0c      	add	r2, sp, #48	; 0x30
 801f730:	c203      	stmia	r2!, {r0, r1}
 801f732:	a80a      	add	r0, sp, #40	; 0x28
 801f734:	f7f9 fc4c 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f738:	4621      	mov	r1, r4
 801f73a:	a80c      	add	r0, sp, #48	; 0x30
 801f73c:	f7f9 fc8c 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f740:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f744:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801f748:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801f74c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f750:	bfde      	ittt	le
 801f752:	b2b3      	uxthle	r3, r6
 801f754:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f758:	fb92 f3f3 	sdivle	r3, r2, r3
 801f75c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f760:	bfc8      	it	gt
 801f762:	2301      	movgt	r3, #1
 801f764:	fb92 f1f3 	sdiv	r1, r2, r3
 801f768:	fa1f fc81 	uxth.w	ip, r1
 801f76c:	fb0c 2413 	mls	r4, ip, r3, r2
 801f770:	fb14 f406 	smulbb	r4, r4, r6
 801f774:	441d      	add	r5, r3
 801f776:	4404      	add	r4, r0
 801f778:	4661      	mov	r1, ip
 801f77a:	3d01      	subs	r5, #1
 801f77c:	b2a4      	uxth	r4, r4
 801f77e:	fb95 f5f3 	sdiv	r5, r5, r3
 801f782:	b131      	cbz	r1, 801f792 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801f784:	9b05      	ldr	r3, [sp, #20]
 801f786:	9900      	ldr	r1, [sp, #0]
 801f788:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f78c:	ba1b      	rev	r3, r3
 801f78e:	4419      	add	r1, r3
 801f790:	9100      	str	r1, [sp, #0]
 801f792:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f796:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801f79a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f79e:	4418      	add	r0, r3
 801f7a0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f7a4:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801f7a8:	441a      	add	r2, r3
 801f7aa:	4b6a      	ldr	r3, [pc, #424]	; (801f954 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f7ac:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801f7b0:	6818      	ldr	r0, [r3, #0]
 801f7b2:	6803      	ldr	r3, [r0, #0]
 801f7b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f7b6:	4798      	blx	r3
 801f7b8:	4967      	ldr	r1, [pc, #412]	; (801f958 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801f7ba:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f7be:	880b      	ldrh	r3, [r1, #0]
 801f7c0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801f7c4:	9109      	str	r1, [sp, #36]	; 0x24
 801f7c6:	fb03 c202 	mla	r2, r3, r2, ip
 801f7ca:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f7ce:	4373      	muls	r3, r6
 801f7d0:	b2ad      	uxth	r5, r5
 801f7d2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f7d6:	00ad      	lsls	r5, r5, #2
 801f7d8:	9306      	str	r3, [sp, #24]
 801f7da:	1d2b      	adds	r3, r5, #4
 801f7dc:	9307      	str	r3, [sp, #28]
 801f7de:	9b01      	ldr	r3, [sp, #4]
 801f7e0:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801f7e4:	9103      	str	r1, [sp, #12]
 801f7e6:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801f7ea:	2c00      	cmp	r4, #0
 801f7ec:	bf0c      	ite	eq
 801f7ee:	46c6      	moveq	lr, r8
 801f7f0:	f04f 0e00 	movne.w	lr, #0
 801f7f4:	2300      	movs	r3, #0
 801f7f6:	b292      	uxth	r2, r2
 801f7f8:	fa1f fe8e 	uxth.w	lr, lr
 801f7fc:	9302      	str	r3, [sp, #8]
 801f7fe:	9204      	str	r2, [sp, #16]
 801f800:	9a06      	ldr	r2, [sp, #24]
 801f802:	4282      	cmp	r2, r0
 801f804:	f240 809d 	bls.w	801f942 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801f808:	b963      	cbnz	r3, 801f824 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f80a:	9b00      	ldr	r3, [sp, #0]
 801f80c:	781a      	ldrb	r2, [r3, #0]
 801f80e:	0993      	lsrs	r3, r2, #6
 801f810:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f814:	9202      	str	r2, [sp, #8]
 801f816:	1e5a      	subs	r2, r3, #1
 801f818:	2a02      	cmp	r2, #2
 801f81a:	d815      	bhi.n	801f848 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801f81c:	9a00      	ldr	r2, [sp, #0]
 801f81e:	3201      	adds	r2, #1
 801f820:	9200      	str	r2, [sp, #0]
 801f822:	b29b      	uxth	r3, r3
 801f824:	b1b4      	cbz	r4, 801f854 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801f826:	429c      	cmp	r4, r3
 801f828:	bf95      	itete	ls
 801f82a:	1b1c      	subls	r4, r3, r4
 801f82c:	1ae4      	subhi	r4, r4, r3
 801f82e:	fa1f fa84 	uxthls.w	sl, r4
 801f832:	b2a4      	uxthhi	r4, r4
 801f834:	bf87      	ittee	hi
 801f836:	4671      	movhi	r1, lr
 801f838:	f04f 0a00 	movhi.w	sl, #0
 801f83c:	fa1f f188 	uxthls.w	r1, r8
 801f840:	2400      	movls	r4, #0
 801f842:	4653      	mov	r3, sl
 801f844:	468e      	mov	lr, r1
 801f846:	e7db      	b.n	801f800 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801f848:	9a00      	ldr	r2, [sp, #0]
 801f84a:	9b00      	ldr	r3, [sp, #0]
 801f84c:	3202      	adds	r2, #2
 801f84e:	785b      	ldrb	r3, [r3, #1]
 801f850:	9200      	str	r2, [sp, #0]
 801f852:	e7e7      	b.n	801f824 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f854:	2202      	movs	r2, #2
 801f856:	4615      	mov	r5, r2
 801f858:	9907      	ldr	r1, [sp, #28]
 801f85a:	9a02      	ldr	r2, [sp, #8]
 801f85c:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f860:	9905      	ldr	r1, [sp, #20]
 801f862:	4573      	cmp	r3, lr
 801f864:	f831 c002 	ldrh.w	ip, [r1, r2]
 801f868:	9a01      	ldr	r2, [sp, #4]
 801f86a:	bf2b      	itete	cs
 801f86c:	eba3 0a0e 	subcs.w	sl, r3, lr
 801f870:	ebae 0103 	subcc.w	r1, lr, r3
 801f874:	46f1      	movcs	r9, lr
 801f876:	4699      	movcc	r9, r3
 801f878:	bf27      	ittee	cs
 801f87a:	fa1f fa8a 	uxthcs.w	sl, sl
 801f87e:	4621      	movcs	r1, r4
 801f880:	b289      	uxthcc	r1, r1
 801f882:	46a2      	movcc	sl, r4
 801f884:	2aff      	cmp	r2, #255	; 0xff
 801f886:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f88a:	d105      	bne.n	801f898 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f88c:	4481      	add	r9, r0
 801f88e:	4581      	cmp	r9, r0
 801f890:	d045      	beq.n	801f91e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f892:	f820 cb02 	strh.w	ip, [r0], #2
 801f896:	e7fa      	b.n	801f88e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801f898:	9d03      	ldr	r5, [sp, #12]
 801f89a:	ea4f 222c 	mov.w	r2, ip, asr #8
 801f89e:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f8a2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f8a6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f8aa:	436a      	muls	r2, r5
 801f8ac:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f8b0:	fa5f fc8c 	uxtb.w	ip, ip
 801f8b4:	9208      	str	r2, [sp, #32]
 801f8b6:	fb0b fb05 	mul.w	fp, fp, r5
 801f8ba:	fb0c fc05 	mul.w	ip, ip, r5
 801f8be:	4481      	add	r9, r0
 801f8c0:	4581      	cmp	r9, r0
 801f8c2:	d02c      	beq.n	801f91e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f8c4:	8802      	ldrh	r2, [r0, #0]
 801f8c6:	9d04      	ldr	r5, [sp, #16]
 801f8c8:	9f04      	ldr	r7, [sp, #16]
 801f8ca:	1216      	asrs	r6, r2, #8
 801f8cc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f8d0:	fb16 f605 	smulbb	r6, r6, r5
 801f8d4:	9d08      	ldr	r5, [sp, #32]
 801f8d6:	442e      	add	r6, r5
 801f8d8:	10d5      	asrs	r5, r2, #3
 801f8da:	00d2      	lsls	r2, r2, #3
 801f8dc:	b2d2      	uxtb	r2, r2
 801f8de:	fb12 f207 	smulbb	r2, r2, r7
 801f8e2:	b2b6      	uxth	r6, r6
 801f8e4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f8e8:	4462      	add	r2, ip
 801f8ea:	fb15 f507 	smulbb	r5, r5, r7
 801f8ee:	b292      	uxth	r2, r2
 801f8f0:	1c77      	adds	r7, r6, #1
 801f8f2:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801f8f6:	1c57      	adds	r7, r2, #1
 801f8f8:	445d      	add	r5, fp
 801f8fa:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801f8fe:	b2ad      	uxth	r5, r5
 801f900:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f904:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f908:	4316      	orrs	r6, r2
 801f90a:	1c6a      	adds	r2, r5, #1
 801f90c:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f910:	096d      	lsrs	r5, r5, #5
 801f912:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f916:	432e      	orrs	r6, r5
 801f918:	f820 6b02 	strh.w	r6, [r0], #2
 801f91c:	e7d0      	b.n	801f8c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801f91e:	4573      	cmp	r3, lr
 801f920:	d38f      	bcc.n	801f842 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f922:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801f926:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f928:	fa1f f188 	uxth.w	r1, r8
 801f92c:	1a64      	subs	r4, r4, r1
 801f92e:	881b      	ldrh	r3, [r3, #0]
 801f930:	b2a4      	uxth	r4, r4
 801f932:	2c00      	cmp	r4, #0
 801f934:	eba3 0308 	sub.w	r3, r3, r8
 801f938:	bf18      	it	ne
 801f93a:	2100      	movne	r1, #0
 801f93c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f940:	e77f      	b.n	801f842 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f942:	4b04      	ldr	r3, [pc, #16]	; (801f954 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f944:	6818      	ldr	r0, [r3, #0]
 801f946:	6803      	ldr	r3, [r0, #0]
 801f948:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f94a:	4798      	blx	r3
 801f94c:	b00f      	add	sp, #60	; 0x3c
 801f94e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f952:	bf00      	nop
 801f954:	2000224c 	.word	0x2000224c
 801f958:	20002246 	.word	0x20002246

0801f95c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f95c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f960:	b09f      	sub	sp, #124	; 0x7c
 801f962:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801f966:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801f96a:	9209      	str	r2, [sp, #36]	; 0x24
 801f96c:	461d      	mov	r5, r3
 801f96e:	4604      	mov	r4, r0
 801f970:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f972:	2a00      	cmp	r2, #0
 801f974:	f000 81eb 	beq.w	801fd4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801f978:	6828      	ldr	r0, [r5, #0]
 801f97a:	6869      	ldr	r1, [r5, #4]
 801f97c:	aa1a      	add	r2, sp, #104	; 0x68
 801f97e:	c203      	stmia	r2!, {r0, r1}
 801f980:	6818      	ldr	r0, [r3, #0]
 801f982:	6859      	ldr	r1, [r3, #4]
 801f984:	aa1c      	add	r2, sp, #112	; 0x70
 801f986:	c203      	stmia	r2!, {r0, r1}
 801f988:	a81a      	add	r0, sp, #104	; 0x68
 801f98a:	f7f9 fb21 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f98e:	4629      	mov	r1, r5
 801f990:	a81c      	add	r0, sp, #112	; 0x70
 801f992:	f7f9 fb61 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f996:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801f99a:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801f99e:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801f9a2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801f9a6:	bfd7      	itett	le
 801f9a8:	b29a      	uxthle	r2, r3
 801f9aa:	2201      	movgt	r2, #1
 801f9ac:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801f9b0:	fb91 f2f2 	sdivle	r2, r1, r2
 801f9b4:	9202      	str	r2, [sp, #8]
 801f9b6:	9802      	ldr	r0, [sp, #8]
 801f9b8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801f9bc:	fb92 f0f0 	sdiv	r0, r2, r0
 801f9c0:	b280      	uxth	r0, r0
 801f9c2:	9010      	str	r0, [sp, #64]	; 0x40
 801f9c4:	9902      	ldr	r1, [sp, #8]
 801f9c6:	9802      	ldr	r0, [sp, #8]
 801f9c8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f9ca:	4488      	add	r8, r1
 801f9cc:	fb05 2510 	mls	r5, r5, r0, r2
 801f9d0:	fb15 f503 	smulbb	r5, r5, r3
 801f9d4:	f108 38ff 	add.w	r8, r8, #4294967295
 801f9d8:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801f9dc:	fb98 f8f1 	sdiv	r8, r8, r1
 801f9e0:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801f9e4:	440d      	add	r5, r1
 801f9e6:	4419      	add	r1, r3
 801f9e8:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801f9ec:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801f9f0:	441a      	add	r2, r3
 801f9f2:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801f9f6:	9304      	str	r3, [sp, #16]
 801f9f8:	4b95      	ldr	r3, [pc, #596]	; (801fc50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801f9fa:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801f9fe:	6818      	ldr	r0, [r3, #0]
 801fa00:	6803      	ldr	r3, [r0, #0]
 801fa02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fa04:	4798      	blx	r3
 801fa06:	4b93      	ldr	r3, [pc, #588]	; (801fc54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801fa08:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801fa0c:	881a      	ldrh	r2, [r3, #0]
 801fa0e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801fa12:	9318      	str	r3, [sp, #96]	; 0x60
 801fa14:	fb02 7101 	mla	r1, r2, r1, r7
 801fa18:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801fa1c:	4356      	muls	r6, r2
 801fa1e:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801fa22:	f108 0801 	add.w	r8, r8, #1
 801fa26:	920a      	str	r2, [sp, #40]	; 0x28
 801fa28:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801fa2a:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801fa2e:	930f      	str	r3, [sp, #60]	; 0x3c
 801fa30:	fa1f f888 	uxth.w	r8, r8
 801fa34:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801fa38:	f108 0204 	add.w	r2, r8, #4
 801fa3c:	9211      	str	r2, [sp, #68]	; 0x44
 801fa3e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801fa40:	4b85      	ldr	r3, [pc, #532]	; (801fc58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801fa42:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801fa46:	b2ad      	uxth	r5, r5
 801fa48:	9215      	str	r2, [sp, #84]	; 0x54
 801fa4a:	2d00      	cmp	r5, #0
 801fa4c:	9a04      	ldr	r2, [sp, #16]
 801fa4e:	f04f 0100 	mov.w	r1, #0
 801fa52:	bf18      	it	ne
 801fa54:	2200      	movne	r2, #0
 801fa56:	1b1b      	subs	r3, r3, r4
 801fa58:	b292      	uxth	r2, r2
 801fa5a:	910d      	str	r1, [sp, #52]	; 0x34
 801fa5c:	9319      	str	r3, [sp, #100]	; 0x64
 801fa5e:	9910      	ldr	r1, [sp, #64]	; 0x40
 801fa60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fa62:	fa11 f383 	uxtah	r3, r1, r3
 801fa66:	9914      	ldr	r1, [sp, #80]	; 0x50
 801fa68:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801fa6c:	3304      	adds	r3, #4
 801fa6e:	9306      	str	r3, [sp, #24]
 801fa70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fa72:	4283      	cmp	r3, r0
 801fa74:	f240 8166 	bls.w	801fd44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801fa78:	9902      	ldr	r1, [sp, #8]
 801fa7a:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801fa7e:	fbb5 f3f3 	udiv	r3, r5, r3
 801fa82:	1acb      	subs	r3, r1, r3
 801fa84:	b29b      	uxth	r3, r3
 801fa86:	9316      	str	r3, [sp, #88]	; 0x58
 801fa88:	9b06      	ldr	r3, [sp, #24]
 801fa8a:	9e06      	ldr	r6, [sp, #24]
 801fa8c:	7859      	ldrb	r1, [r3, #1]
 801fa8e:	789b      	ldrb	r3, [r3, #2]
 801fa90:	7836      	ldrb	r6, [r6, #0]
 801fa92:	9612      	str	r6, [sp, #72]	; 0x48
 801fa94:	021b      	lsls	r3, r3, #8
 801fa96:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801fa9a:	9906      	ldr	r1, [sp, #24]
 801fa9c:	78c9      	ldrb	r1, [r1, #3]
 801fa9e:	430b      	orrs	r3, r1
 801faa0:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801faa2:	3601      	adds	r6, #1
 801faa4:	4419      	add	r1, r3
 801faa6:	9605      	str	r6, [sp, #20]
 801faa8:	1c4e      	adds	r6, r1, #1
 801faaa:	9603      	str	r6, [sp, #12]
 801faac:	7849      	ldrb	r1, [r1, #1]
 801faae:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801fab0:	0209      	lsls	r1, r1, #8
 801fab2:	5cf3      	ldrb	r3, [r6, r3]
 801fab4:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801fab8:	4319      	orrs	r1, r3
 801faba:	b28b      	uxth	r3, r1
 801fabc:	930c      	str	r3, [sp, #48]	; 0x30
 801fabe:	2300      	movs	r3, #0
 801fac0:	f04f 0a01 	mov.w	sl, #1
 801fac4:	9307      	str	r3, [sp, #28]
 801fac6:	469c      	mov	ip, r3
 801fac8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801facc:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801fad0:	46d3      	mov	fp, sl
 801fad2:	4657      	mov	r7, sl
 801fad4:	930e      	str	r3, [sp, #56]	; 0x38
 801fad6:	2d00      	cmp	r5, #0
 801fad8:	d07e      	beq.n	801fbd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801fada:	42af      	cmp	r7, r5
 801fadc:	d26e      	bcs.n	801fbbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801fade:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fae0:	9201      	str	r2, [sp, #4]
 801fae2:	1bed      	subs	r5, r5, r7
 801fae4:	4283      	cmp	r3, r0
 801fae6:	b2ad      	uxth	r5, r5
 801fae8:	d802      	bhi.n	801faf0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801faea:	e073      	b.n	801fbd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801faec:	2b00      	cmp	r3, #0
 801faee:	d15f      	bne.n	801fbb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801faf0:	9b03      	ldr	r3, [sp, #12]
 801faf2:	785b      	ldrb	r3, [r3, #1]
 801faf4:	f1cb 0207 	rsb	r2, fp, #7
 801faf8:	4093      	lsls	r3, r2
 801fafa:	005b      	lsls	r3, r3, #1
 801fafc:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801fb00:	9b03      	ldr	r3, [sp, #12]
 801fb02:	781b      	ldrb	r3, [r3, #0]
 801fb04:	fa43 f30b 	asr.w	r3, r3, fp
 801fb08:	b2db      	uxtb	r3, r3
 801fb0a:	4313      	orrs	r3, r2
 801fb0c:	f10b 0201 	add.w	r2, fp, #1
 801fb10:	fa5f fb82 	uxtb.w	fp, r2
 801fb14:	9a03      	ldr	r2, [sp, #12]
 801fb16:	f1bb 0f08 	cmp.w	fp, #8
 801fb1a:	bf15      	itete	ne
 801fb1c:	3201      	addne	r2, #1
 801fb1e:	3202      	addeq	r2, #2
 801fb20:	9203      	strne	r2, [sp, #12]
 801fb22:	9203      	streq	r2, [sp, #12]
 801fb24:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801fb26:	b29f      	uxth	r7, r3
 801fb28:	bf08      	it	eq
 801fb2a:	f04f 0b00 	moveq.w	fp, #0
 801fb2e:	42ba      	cmp	r2, r7
 801fb30:	d309      	bcc.n	801fb46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801fb32:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801fb36:	2301      	movs	r3, #1
 801fb38:	9a05      	ldr	r2, [sp, #20]
 801fb3a:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801fb3e:	d30e      	bcc.n	801fb5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801fb40:	469a      	mov	sl, r3
 801fb42:	2600      	movs	r6, #0
 801fb44:	e035      	b.n	801fbb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801fb46:	9b05      	ldr	r3, [sp, #20]
 801fb48:	429f      	cmp	r7, r3
 801fb4a:	d318      	bcc.n	801fb7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801fb4c:	eb04 030a 	add.w	r3, r4, sl
 801fb50:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801fb54:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801fb58:	f10a 0301 	add.w	r3, sl, #1
 801fb5c:	b29b      	uxth	r3, r3
 801fb5e:	9a05      	ldr	r2, [sp, #20]
 801fb60:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801fb64:	990c      	ldr	r1, [sp, #48]	; 0x30
 801fb66:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801fb6a:	7116      	strb	r6, [r2, #4]
 801fb6c:	f10a 0601 	add.w	r6, sl, #1
 801fb70:	80d1      	strh	r1, [r2, #6]
 801fb72:	7156      	strb	r6, [r2, #5]
 801fb74:	9a05      	ldr	r2, [sp, #20]
 801fb76:	3201      	adds	r2, #1
 801fb78:	b292      	uxth	r2, r2
 801fb7a:	9205      	str	r2, [sp, #20]
 801fb7c:	e7e0      	b.n	801fb40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801fb7e:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801fb82:	463a      	mov	r2, r7
 801fb84:	795b      	ldrb	r3, [r3, #5]
 801fb86:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801fb8a:	4426      	add	r6, r4
 801fb8c:	9919      	ldr	r1, [sp, #100]	; 0x64
 801fb8e:	eb01 0c06 	add.w	ip, r1, r6
 801fb92:	f1bc 0f00 	cmp.w	ip, #0
 801fb96:	dd07      	ble.n	801fba8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801fb98:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801fb9c:	f892 c004 	ldrb.w	ip, [r2, #4]
 801fba0:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801fba4:	88d2      	ldrh	r2, [r2, #6]
 801fba6:	e7f1      	b.n	801fb8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801fba8:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801fbac:	b29b      	uxth	r3, r3
 801fbae:	e7c3      	b.n	801fb38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801fbb0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801fbb2:	970c      	str	r7, [sp, #48]	; 0x30
 801fbb4:	9a01      	ldr	r2, [sp, #4]
 801fbb6:	46b4      	mov	ip, r6
 801fbb8:	461f      	mov	r7, r3
 801fbba:	e78c      	b.n	801fad6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801fbbc:	1b7b      	subs	r3, r7, r5
 801fbbe:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801fbc2:	9201      	str	r2, [sp, #4]
 801fbc4:	eb0c 0605 	add.w	r6, ip, r5
 801fbc8:	b29b      	uxth	r3, r3
 801fbca:	b2b6      	uxth	r6, r6
 801fbcc:	2500      	movs	r5, #0
 801fbce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fbd0:	4282      	cmp	r2, r0
 801fbd2:	d88b      	bhi.n	801faec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801fbd4:	9a01      	ldr	r2, [sp, #4]
 801fbd6:	e74b      	b.n	801fa70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801fbd8:	4297      	cmp	r7, r2
 801fbda:	d332      	bcc.n	801fc42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801fbdc:	1abb      	subs	r3, r7, r2
 801fbde:	b29b      	uxth	r3, r3
 801fbe0:	9208      	str	r2, [sp, #32]
 801fbe2:	9501      	str	r5, [sp, #4]
 801fbe4:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fbe6:	29ff      	cmp	r1, #255	; 0xff
 801fbe8:	9908      	ldr	r1, [sp, #32]
 801fbea:	eb0c 0601 	add.w	r6, ip, r1
 801fbee:	d135      	bne.n	801fc5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801fbf0:	f1a0 0e02 	sub.w	lr, r0, #2
 801fbf4:	b2b6      	uxth	r6, r6
 801fbf6:	45b4      	cmp	ip, r6
 801fbf8:	f040 808c 	bne.w	801fd14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801fbfc:	9908      	ldr	r1, [sp, #32]
 801fbfe:	4297      	cmp	r7, r2
 801fc00:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801fc04:	d3e2      	bcc.n	801fbcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801fc06:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801fc08:	9904      	ldr	r1, [sp, #16]
 801fc0a:	8812      	ldrh	r2, [r2, #0]
 801fc0c:	1a52      	subs	r2, r2, r1
 801fc0e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fc12:	9a07      	ldr	r2, [sp, #28]
 801fc14:	9916      	ldr	r1, [sp, #88]	; 0x58
 801fc16:	3201      	adds	r2, #1
 801fc18:	428a      	cmp	r2, r1
 801fc1a:	9207      	str	r2, [sp, #28]
 801fc1c:	f040 8087 	bne.w	801fd2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801fc20:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801fc24:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801fc28:	9b04      	ldr	r3, [sp, #16]
 801fc2a:	1bed      	subs	r5, r5, r7
 801fc2c:	b2ad      	uxth	r5, r5
 801fc2e:	2d00      	cmp	r5, #0
 801fc30:	bf08      	it	eq
 801fc32:	461a      	moveq	r2, r3
 801fc34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fc36:	bf18      	it	ne
 801fc38:	2200      	movne	r2, #0
 801fc3a:	3301      	adds	r3, #1
 801fc3c:	930d      	str	r3, [sp, #52]	; 0x34
 801fc3e:	b292      	uxth	r2, r2
 801fc40:	e70d      	b.n	801fa5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801fc42:	1bd1      	subs	r1, r2, r7
 801fc44:	b28b      	uxth	r3, r1
 801fc46:	9301      	str	r3, [sp, #4]
 801fc48:	9708      	str	r7, [sp, #32]
 801fc4a:	462b      	mov	r3, r5
 801fc4c:	e7ca      	b.n	801fbe4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801fc4e:	bf00      	nop
 801fc50:	2000224c 	.word	0x2000224c
 801fc54:	20002246 	.word	0x20002246
 801fc58:	fffff7fb 	.word	0xfffff7fb
 801fc5c:	b2b6      	uxth	r6, r6
 801fc5e:	900b      	str	r0, [sp, #44]	; 0x2c
 801fc60:	45b4      	cmp	ip, r6
 801fc62:	d0cb      	beq.n	801fbfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801fc64:	f10c 0101 	add.w	r1, ip, #1
 801fc68:	44a4      	add	ip, r4
 801fc6a:	9117      	str	r1, [sp, #92]	; 0x5c
 801fc6c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801fc70:	9911      	ldr	r1, [sp, #68]	; 0x44
 801fc72:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801fc76:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801fc78:	f8b1 c000 	ldrh.w	ip, [r1]
 801fc7c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801fc7e:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801fc82:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801fc86:	fb1e fe01 	smulbb	lr, lr, r1
 801fc8a:	ea4f 2825 	mov.w	r8, r5, asr #8
 801fc8e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801fc90:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801fc94:	fb08 e801 	mla	r8, r8, r1, lr
 801fc98:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801fc9c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801fc9e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801fca2:	fb19 f901 	smulbb	r9, r9, r1
 801fca6:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801fcaa:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801fcac:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801fcb0:	fb0e 9e01 	mla	lr, lr, r1, r9
 801fcb4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fcb8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801fcba:	fa5f fc8c 	uxtb.w	ip, ip
 801fcbe:	fb1c fc01 	smulbb	ip, ip, r1
 801fcc2:	00ed      	lsls	r5, r5, #3
 801fcc4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801fcc6:	b2ed      	uxtb	r5, r5
 801fcc8:	fb05 c501 	mla	r5, r5, r1, ip
 801fccc:	fa1f f888 	uxth.w	r8, r8
 801fcd0:	fa1f fe8e 	uxth.w	lr, lr
 801fcd4:	b2ad      	uxth	r5, r5
 801fcd6:	f108 0c01 	add.w	ip, r8, #1
 801fcda:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801fcde:	f10e 0901 	add.w	r9, lr, #1
 801fce2:	f105 0c01 	add.w	ip, r5, #1
 801fce6:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801fcea:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801fcee:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801fcf2:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801fcf6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801fcfa:	ea4c 0808 	orr.w	r8, ip, r8
 801fcfe:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801fd00:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801fd04:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801fd08:	ea48 0809 	orr.w	r8, r8, r9
 801fd0c:	f821 8b02 	strh.w	r8, [r1], #2
 801fd10:	910b      	str	r1, [sp, #44]	; 0x2c
 801fd12:	e7a5      	b.n	801fc60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801fd14:	f10c 0801 	add.w	r8, ip, #1
 801fd18:	44a4      	add	ip, r4
 801fd1a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801fd1c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801fd20:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801fd24:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801fd28:	fa1f fc88 	uxth.w	ip, r8
 801fd2c:	e763      	b.n	801fbf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801fd2e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801fd32:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801fd36:	1aad      	subs	r5, r5, r2
 801fd38:	b2ad      	uxth	r5, r5
 801fd3a:	2d00      	cmp	r5, #0
 801fd3c:	bf18      	it	ne
 801fd3e:	2200      	movne	r2, #0
 801fd40:	9201      	str	r2, [sp, #4]
 801fd42:	e744      	b.n	801fbce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801fd44:	4b03      	ldr	r3, [pc, #12]	; (801fd54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801fd46:	6818      	ldr	r0, [r3, #0]
 801fd48:	6803      	ldr	r3, [r0, #0]
 801fd4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fd4c:	4798      	blx	r3
 801fd4e:	b01f      	add	sp, #124	; 0x7c
 801fd50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fd54:	2000224c 	.word	0x2000224c

0801fd58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801fd58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fd5c:	b08f      	sub	sp, #60	; 0x3c
 801fd5e:	461c      	mov	r4, r3
 801fd60:	9203      	str	r2, [sp, #12]
 801fd62:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801fd66:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fd68:	9202      	str	r2, [sp, #8]
 801fd6a:	460f      	mov	r7, r1
 801fd6c:	2a00      	cmp	r2, #0
 801fd6e:	f000 8128 	beq.w	801ffc2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801fd72:	6820      	ldr	r0, [r4, #0]
 801fd74:	6861      	ldr	r1, [r4, #4]
 801fd76:	aa0a      	add	r2, sp, #40	; 0x28
 801fd78:	c203      	stmia	r2!, {r0, r1}
 801fd7a:	6818      	ldr	r0, [r3, #0]
 801fd7c:	6859      	ldr	r1, [r3, #4]
 801fd7e:	aa0c      	add	r2, sp, #48	; 0x30
 801fd80:	c203      	stmia	r2!, {r0, r1}
 801fd82:	a80a      	add	r0, sp, #40	; 0x28
 801fd84:	f7f9 f924 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fd88:	4621      	mov	r1, r4
 801fd8a:	a80c      	add	r0, sp, #48	; 0x30
 801fd8c:	f7f9 f964 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fd90:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801fd94:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801fd98:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801fd9c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801fda0:	bfde      	ittt	le
 801fda2:	b2b3      	uxthle	r3, r6
 801fda4:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801fda8:	fb92 f3f3 	sdivle	r3, r2, r3
 801fdac:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801fdb0:	bfc8      	it	gt
 801fdb2:	2301      	movgt	r3, #1
 801fdb4:	fb92 f1f3 	sdiv	r1, r2, r3
 801fdb8:	fa1f fc81 	uxth.w	ip, r1
 801fdbc:	fb0c 2413 	mls	r4, ip, r3, r2
 801fdc0:	fb14 f406 	smulbb	r4, r4, r6
 801fdc4:	441d      	add	r5, r3
 801fdc6:	4404      	add	r4, r0
 801fdc8:	4661      	mov	r1, ip
 801fdca:	3d01      	subs	r5, #1
 801fdcc:	b2a4      	uxth	r4, r4
 801fdce:	fb95 f5f3 	sdiv	r5, r5, r3
 801fdd2:	b121      	cbz	r1, 801fdde <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801fdd4:	9b03      	ldr	r3, [sp, #12]
 801fdd6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801fdda:	ba1b      	rev	r3, r3
 801fddc:	441f      	add	r7, r3
 801fdde:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801fde2:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801fde6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801fdea:	4418      	add	r0, r3
 801fdec:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801fdf0:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801fdf4:	441a      	add	r2, r3
 801fdf6:	4b74      	ldr	r3, [pc, #464]	; (801ffc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801fdf8:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801fdfc:	6818      	ldr	r0, [r3, #0]
 801fdfe:	6803      	ldr	r3, [r0, #0]
 801fe00:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fe02:	4798      	blx	r3
 801fe04:	4a71      	ldr	r2, [pc, #452]	; (801ffcc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801fe06:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801fe0a:	8813      	ldrh	r3, [r2, #0]
 801fe0c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801fe10:	9209      	str	r2, [sp, #36]	; 0x24
 801fe12:	fb03 c101 	mla	r1, r3, r1, ip
 801fe16:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801fe1a:	4373      	muls	r3, r6
 801fe1c:	b2ad      	uxth	r5, r5
 801fe1e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801fe22:	00ad      	lsls	r5, r5, #2
 801fe24:	2c00      	cmp	r4, #0
 801fe26:	9304      	str	r3, [sp, #16]
 801fe28:	f105 0304 	add.w	r3, r5, #4
 801fe2c:	9305      	str	r3, [sp, #20]
 801fe2e:	bf0c      	ite	eq
 801fe30:	46c8      	moveq	r8, r9
 801fe32:	f04f 0800 	movne.w	r8, #0
 801fe36:	2300      	movs	r3, #0
 801fe38:	fa1f f888 	uxth.w	r8, r8
 801fe3c:	9301      	str	r3, [sp, #4]
 801fe3e:	9a04      	ldr	r2, [sp, #16]
 801fe40:	4282      	cmp	r2, r0
 801fe42:	f240 80b9 	bls.w	801ffb8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801fe46:	b95b      	cbnz	r3, 801fe60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801fe48:	783a      	ldrb	r2, [r7, #0]
 801fe4a:	0993      	lsrs	r3, r2, #6
 801fe4c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801fe50:	9201      	str	r2, [sp, #4]
 801fe52:	1e5a      	subs	r2, r3, #1
 801fe54:	2a02      	cmp	r2, #2
 801fe56:	bf8d      	iteet	hi
 801fe58:	787b      	ldrbhi	r3, [r7, #1]
 801fe5a:	3701      	addls	r7, #1
 801fe5c:	b29b      	uxthls	r3, r3
 801fe5e:	3702      	addhi	r7, #2
 801fe60:	b184      	cbz	r4, 801fe84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801fe62:	429c      	cmp	r4, r3
 801fe64:	bf95      	itete	ls
 801fe66:	1b1c      	subls	r4, r3, r4
 801fe68:	1ae4      	subhi	r4, r4, r3
 801fe6a:	fa1f fa84 	uxthls.w	sl, r4
 801fe6e:	b2a4      	uxthhi	r4, r4
 801fe70:	bf87      	ittee	hi
 801fe72:	46c4      	movhi	ip, r8
 801fe74:	f04f 0a00 	movhi.w	sl, #0
 801fe78:	fa1f fc89 	uxthls.w	ip, r9
 801fe7c:	2400      	movls	r4, #0
 801fe7e:	4653      	mov	r3, sl
 801fe80:	46e0      	mov	r8, ip
 801fe82:	e7dc      	b.n	801fe3e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801fe84:	2204      	movs	r2, #4
 801fe86:	4615      	mov	r5, r2
 801fe88:	9905      	ldr	r1, [sp, #20]
 801fe8a:	9a01      	ldr	r2, [sp, #4]
 801fe8c:	fb15 1202 	smlabb	r2, r5, r2, r1
 801fe90:	9903      	ldr	r1, [sp, #12]
 801fe92:	588a      	ldr	r2, [r1, r2]
 801fe94:	4543      	cmp	r3, r8
 801fe96:	bf27      	ittee	cs
 801fe98:	eba3 0a08 	subcs.w	sl, r3, r8
 801fe9c:	46c6      	movcs	lr, r8
 801fe9e:	eba8 0c03 	subcc.w	ip, r8, r3
 801fea2:	469e      	movcc	lr, r3
 801fea4:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801fea8:	bf27      	ittee	cs
 801feaa:	fa1f fa8a 	uxthcs.w	sl, sl
 801feae:	46a4      	movcs	ip, r4
 801feb0:	fa1f fc8c 	uxthcc.w	ip, ip
 801feb4:	46a2      	movcc	sl, r4
 801feb6:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801feba:	2900      	cmp	r1, #0
 801febc:	d066      	beq.n	801ff8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801febe:	29ff      	cmp	r1, #255	; 0xff
 801fec0:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801fec4:	d114      	bne.n	801fef0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801fec6:	9d02      	ldr	r5, [sp, #8]
 801fec8:	2dff      	cmp	r5, #255	; 0xff
 801feca:	d111      	bne.n	801fef0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801fecc:	0951      	lsrs	r1, r2, #5
 801fece:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801fed2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fed6:	f026 0607 	bic.w	r6, r6, #7
 801feda:	430e      	orrs	r6, r1
 801fedc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fee0:	4316      	orrs	r6, r2
 801fee2:	b2b6      	uxth	r6, r6
 801fee4:	4486      	add	lr, r0
 801fee6:	4586      	cmp	lr, r0
 801fee8:	d051      	beq.n	801ff8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801feea:	f820 6b02 	strh.w	r6, [r0], #2
 801feee:	e7fa      	b.n	801fee6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801fef0:	9d02      	ldr	r5, [sp, #8]
 801fef2:	4369      	muls	r1, r5
 801fef4:	1c4d      	adds	r5, r1, #1
 801fef6:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801fefa:	122d      	asrs	r5, r5, #8
 801fefc:	ea6f 0b05 	mvn.w	fp, r5
 801ff00:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801ff04:	b2ad      	uxth	r5, r5
 801ff06:	b2f6      	uxtb	r6, r6
 801ff08:	b2d2      	uxtb	r2, r2
 801ff0a:	fb11 f105 	smulbb	r1, r1, r5
 801ff0e:	fb16 f605 	smulbb	r6, r6, r5
 801ff12:	fb12 f205 	smulbb	r2, r2, r5
 801ff16:	b289      	uxth	r1, r1
 801ff18:	b2b6      	uxth	r6, r6
 801ff1a:	b292      	uxth	r2, r2
 801ff1c:	9106      	str	r1, [sp, #24]
 801ff1e:	9607      	str	r6, [sp, #28]
 801ff20:	9208      	str	r2, [sp, #32]
 801ff22:	4486      	add	lr, r0
 801ff24:	fa5f fb8b 	uxtb.w	fp, fp
 801ff28:	4586      	cmp	lr, r0
 801ff2a:	d030      	beq.n	801ff8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801ff2c:	8802      	ldrh	r2, [r0, #0]
 801ff2e:	9906      	ldr	r1, [sp, #24]
 801ff30:	1216      	asrs	r6, r2, #8
 801ff32:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ff36:	10d5      	asrs	r5, r2, #3
 801ff38:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ff3c:	fb06 160b 	mla	r6, r6, fp, r1
 801ff40:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ff44:	9907      	ldr	r1, [sp, #28]
 801ff46:	00d2      	lsls	r2, r2, #3
 801ff48:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ff4c:	fb05 150b 	mla	r5, r5, fp, r1
 801ff50:	b2d2      	uxtb	r2, r2
 801ff52:	9908      	ldr	r1, [sp, #32]
 801ff54:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ff58:	b2b6      	uxth	r6, r6
 801ff5a:	fb02 120b 	mla	r2, r2, fp, r1
 801ff5e:	b292      	uxth	r2, r2
 801ff60:	1c71      	adds	r1, r6, #1
 801ff62:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801ff66:	1c51      	adds	r1, r2, #1
 801ff68:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ff6c:	b2ad      	uxth	r5, r5
 801ff6e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ff72:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ff76:	4316      	orrs	r6, r2
 801ff78:	1c6a      	adds	r2, r5, #1
 801ff7a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801ff7e:	096d      	lsrs	r5, r5, #5
 801ff80:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ff84:	432e      	orrs	r6, r5
 801ff86:	f820 6b02 	strh.w	r6, [r0], #2
 801ff8a:	e7cd      	b.n	801ff28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801ff8c:	4470      	add	r0, lr
 801ff8e:	4543      	cmp	r3, r8
 801ff90:	f4ff af75 	bcc.w	801fe7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801ff94:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801ff98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff9a:	fa1f fc89 	uxth.w	ip, r9
 801ff9e:	eba4 040c 	sub.w	r4, r4, ip
 801ffa2:	881b      	ldrh	r3, [r3, #0]
 801ffa4:	b2a4      	uxth	r4, r4
 801ffa6:	2c00      	cmp	r4, #0
 801ffa8:	eba3 0309 	sub.w	r3, r3, r9
 801ffac:	bf18      	it	ne
 801ffae:	f04f 0c00 	movne.w	ip, #0
 801ffb2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ffb6:	e762      	b.n	801fe7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801ffb8:	4b03      	ldr	r3, [pc, #12]	; (801ffc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801ffba:	6818      	ldr	r0, [r3, #0]
 801ffbc:	6803      	ldr	r3, [r0, #0]
 801ffbe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ffc0:	4798      	blx	r3
 801ffc2:	b00f      	add	sp, #60	; 0x3c
 801ffc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ffc8:	2000224c 	.word	0x2000224c
 801ffcc:	20002246 	.word	0x20002246

0801ffd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801ffd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ffd4:	b093      	sub	sp, #76	; 0x4c
 801ffd6:	461c      	mov	r4, r3
 801ffd8:	9205      	str	r2, [sp, #20]
 801ffda:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801ffde:	9101      	str	r1, [sp, #4]
 801ffe0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ffe2:	9202      	str	r2, [sp, #8]
 801ffe4:	2a00      	cmp	r2, #0
 801ffe6:	f000 812c 	beq.w	8020242 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801ffea:	6820      	ldr	r0, [r4, #0]
 801ffec:	6861      	ldr	r1, [r4, #4]
 801ffee:	aa0e      	add	r2, sp, #56	; 0x38
 801fff0:	c203      	stmia	r2!, {r0, r1}
 801fff2:	6818      	ldr	r0, [r3, #0]
 801fff4:	6859      	ldr	r1, [r3, #4]
 801fff6:	aa10      	add	r2, sp, #64	; 0x40
 801fff8:	c203      	stmia	r2!, {r0, r1}
 801fffa:	a80e      	add	r0, sp, #56	; 0x38
 801fffc:	f7f8 ffe8 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020000:	4621      	mov	r1, r4
 8020002:	a810      	add	r0, sp, #64	; 0x40
 8020004:	f7f9 f828 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020008:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 802000c:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 8020010:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8020014:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8020018:	bfde      	ittt	le
 802001a:	b2b3      	uxthle	r3, r6
 802001c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8020020:	fb92 f3f3 	sdivle	r3, r2, r3
 8020024:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8020028:	bfc8      	it	gt
 802002a:	2301      	movgt	r3, #1
 802002c:	fb92 f1f3 	sdiv	r1, r2, r3
 8020030:	fa1f fc81 	uxth.w	ip, r1
 8020034:	fb0c 2413 	mls	r4, ip, r3, r2
 8020038:	fb14 f406 	smulbb	r4, r4, r6
 802003c:	441d      	add	r5, r3
 802003e:	4404      	add	r4, r0
 8020040:	4661      	mov	r1, ip
 8020042:	3d01      	subs	r5, #1
 8020044:	b2a4      	uxth	r4, r4
 8020046:	fb95 f5f3 	sdiv	r5, r5, r3
 802004a:	b131      	cbz	r1, 802005a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 802004c:	9b05      	ldr	r3, [sp, #20]
 802004e:	9901      	ldr	r1, [sp, #4]
 8020050:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8020054:	ba1b      	rev	r3, r3
 8020056:	4419      	add	r1, r3
 8020058:	9101      	str	r1, [sp, #4]
 802005a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 802005e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8020062:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 8020066:	4418      	add	r0, r3
 8020068:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 802006c:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 8020070:	441a      	add	r2, r3
 8020072:	4b75      	ldr	r3, [pc, #468]	; (8020248 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8020074:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8020078:	6818      	ldr	r0, [r3, #0]
 802007a:	6803      	ldr	r3, [r0, #0]
 802007c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802007e:	4798      	blx	r3
 8020080:	4972      	ldr	r1, [pc, #456]	; (802024c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8020082:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 8020086:	880b      	ldrh	r3, [r1, #0]
 8020088:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 802008c:	910d      	str	r1, [sp, #52]	; 0x34
 802008e:	fb03 c202 	mla	r2, r3, r2, ip
 8020092:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020096:	4373      	muls	r3, r6
 8020098:	b2ad      	uxth	r5, r5
 802009a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 802009e:	00ad      	lsls	r5, r5, #2
 80200a0:	9308      	str	r3, [sp, #32]
 80200a2:	1d2b      	adds	r3, r5, #4
 80200a4:	9309      	str	r3, [sp, #36]	; 0x24
 80200a6:	9b02      	ldr	r3, [sp, #8]
 80200a8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80200ac:	9106      	str	r1, [sp, #24]
 80200ae:	43da      	mvns	r2, r3
 80200b0:	2c00      	cmp	r4, #0
 80200b2:	bf0c      	ite	eq
 80200b4:	46dc      	moveq	ip, fp
 80200b6:	f04f 0c00 	movne.w	ip, #0
 80200ba:	2300      	movs	r3, #0
 80200bc:	b2d2      	uxtb	r2, r2
 80200be:	fa1f fc8c 	uxth.w	ip, ip
 80200c2:	9303      	str	r3, [sp, #12]
 80200c4:	9207      	str	r2, [sp, #28]
 80200c6:	9a08      	ldr	r2, [sp, #32]
 80200c8:	4282      	cmp	r2, r0
 80200ca:	f240 80b5 	bls.w	8020238 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 80200ce:	b963      	cbnz	r3, 80200ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 80200d0:	9b01      	ldr	r3, [sp, #4]
 80200d2:	781a      	ldrb	r2, [r3, #0]
 80200d4:	0993      	lsrs	r3, r2, #6
 80200d6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80200da:	9203      	str	r2, [sp, #12]
 80200dc:	1e5a      	subs	r2, r3, #1
 80200de:	2a02      	cmp	r2, #2
 80200e0:	d815      	bhi.n	802010e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 80200e2:	9a01      	ldr	r2, [sp, #4]
 80200e4:	3201      	adds	r2, #1
 80200e6:	9201      	str	r2, [sp, #4]
 80200e8:	b29b      	uxth	r3, r3
 80200ea:	b1b4      	cbz	r4, 802011a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 80200ec:	429c      	cmp	r4, r3
 80200ee:	bf95      	itete	ls
 80200f0:	1b1c      	subls	r4, r3, r4
 80200f2:	1ae4      	subhi	r4, r4, r3
 80200f4:	fa1f f884 	uxthls.w	r8, r4
 80200f8:	b2a4      	uxthhi	r4, r4
 80200fa:	bf87      	ittee	hi
 80200fc:	4666      	movhi	r6, ip
 80200fe:	f04f 0800 	movhi.w	r8, #0
 8020102:	fa1f f68b 	uxthls.w	r6, fp
 8020106:	2400      	movls	r4, #0
 8020108:	4643      	mov	r3, r8
 802010a:	46b4      	mov	ip, r6
 802010c:	e7db      	b.n	80200c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 802010e:	9a01      	ldr	r2, [sp, #4]
 8020110:	9b01      	ldr	r3, [sp, #4]
 8020112:	3202      	adds	r2, #2
 8020114:	785b      	ldrb	r3, [r3, #1]
 8020116:	9201      	str	r2, [sp, #4]
 8020118:	e7e7      	b.n	80200ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 802011a:	2203      	movs	r2, #3
 802011c:	4615      	mov	r5, r2
 802011e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8020120:	9a03      	ldr	r2, [sp, #12]
 8020122:	fb15 1202 	smlabb	r2, r5, r2, r1
 8020126:	9905      	ldr	r1, [sp, #20]
 8020128:	4563      	cmp	r3, ip
 802012a:	eb01 0502 	add.w	r5, r1, r2
 802012e:	9902      	ldr	r1, [sp, #8]
 8020130:	bf29      	itett	cs
 8020132:	eba3 080c 	subcs.w	r8, r3, ip
 8020136:	ebac 0603 	subcc.w	r6, ip, r3
 802013a:	fa1f f888 	uxthcs.w	r8, r8
 802013e:	46e1      	movcs	r9, ip
 8020140:	bf2f      	iteee	cs
 8020142:	4626      	movcs	r6, r4
 8020144:	b2b6      	uxthcc	r6, r6
 8020146:	4699      	movcc	r9, r3
 8020148:	46a0      	movcc	r8, r4
 802014a:	29ff      	cmp	r1, #255	; 0xff
 802014c:	d04a      	beq.n	80201e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 802014e:	9f06      	ldr	r7, [sp, #24]
 8020150:	78a9      	ldrb	r1, [r5, #2]
 8020152:	9004      	str	r0, [sp, #16]
 8020154:	4379      	muls	r1, r7
 8020156:	910a      	str	r1, [sp, #40]	; 0x28
 8020158:	7869      	ldrb	r1, [r5, #1]
 802015a:	4379      	muls	r1, r7
 802015c:	910b      	str	r1, [sp, #44]	; 0x2c
 802015e:	9905      	ldr	r1, [sp, #20]
 8020160:	5c8a      	ldrb	r2, [r1, r2]
 8020162:	437a      	muls	r2, r7
 8020164:	920c      	str	r2, [sp, #48]	; 0x30
 8020166:	46ca      	mov	sl, r9
 8020168:	f1ba 0f00 	cmp.w	sl, #0
 802016c:	d03d      	beq.n	80201ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 802016e:	9a04      	ldr	r2, [sp, #16]
 8020170:	9f07      	ldr	r7, [sp, #28]
 8020172:	8812      	ldrh	r2, [r2, #0]
 8020174:	1215      	asrs	r5, r2, #8
 8020176:	46be      	mov	lr, r7
 8020178:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802017c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802017e:	10d1      	asrs	r1, r2, #3
 8020180:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8020184:	fb05 750e 	mla	r5, r5, lr, r7
 8020188:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802018c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 802018e:	00d2      	lsls	r2, r2, #3
 8020190:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8020194:	fb01 710e 	mla	r1, r1, lr, r7
 8020198:	b2d2      	uxtb	r2, r2
 802019a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 802019c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80201a0:	b2ad      	uxth	r5, r5
 80201a2:	fb02 720e 	mla	r2, r2, lr, r7
 80201a6:	b292      	uxth	r2, r2
 80201a8:	f105 0e01 	add.w	lr, r5, #1
 80201ac:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80201b0:	f102 0e01 	add.w	lr, r2, #1
 80201b4:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 80201b8:	b289      	uxth	r1, r1
 80201ba:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80201be:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80201c2:	4315      	orrs	r5, r2
 80201c4:	1c4a      	adds	r2, r1, #1
 80201c6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80201ca:	0949      	lsrs	r1, r1, #5
 80201cc:	9a04      	ldr	r2, [sp, #16]
 80201ce:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80201d2:	430d      	orrs	r5, r1
 80201d4:	f822 5b02 	strh.w	r5, [r2], #2
 80201d8:	f10a 3aff 	add.w	sl, sl, #4294967295
 80201dc:	9204      	str	r2, [sp, #16]
 80201de:	fa1f fa8a 	uxth.w	sl, sl
 80201e2:	e7c1      	b.n	8020168 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 80201e4:	4649      	mov	r1, r9
 80201e6:	4686      	mov	lr, r0
 80201e8:	b999      	cbnz	r1, 8020212 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 80201ea:	4563      	cmp	r3, ip
 80201ec:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 80201f0:	d38a      	bcc.n	8020108 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 80201f2:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 80201f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80201f8:	fa1f f68b 	uxth.w	r6, fp
 80201fc:	1ba4      	subs	r4, r4, r6
 80201fe:	881b      	ldrh	r3, [r3, #0]
 8020200:	b2a4      	uxth	r4, r4
 8020202:	2c00      	cmp	r4, #0
 8020204:	eba3 030b 	sub.w	r3, r3, fp
 8020208:	bf18      	it	ne
 802020a:	2600      	movne	r6, #0
 802020c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020210:	e77a      	b.n	8020108 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8020212:	78aa      	ldrb	r2, [r5, #2]
 8020214:	4f0e      	ldr	r7, [pc, #56]	; (8020250 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8020216:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 802021a:	786a      	ldrb	r2, [r5, #1]
 802021c:	00d2      	lsls	r2, r2, #3
 802021e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020222:	ea4a 0202 	orr.w	r2, sl, r2
 8020226:	f895 a000 	ldrb.w	sl, [r5]
 802022a:	3901      	subs	r1, #1
 802022c:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8020230:	f82e 2b02 	strh.w	r2, [lr], #2
 8020234:	b289      	uxth	r1, r1
 8020236:	e7d7      	b.n	80201e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8020238:	4b03      	ldr	r3, [pc, #12]	; (8020248 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 802023a:	6818      	ldr	r0, [r3, #0]
 802023c:	6803      	ldr	r3, [r0, #0]
 802023e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020240:	4798      	blx	r3
 8020242:	b013      	add	sp, #76	; 0x4c
 8020244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020248:	2000224c 	.word	0x2000224c
 802024c:	20002246 	.word	0x20002246
 8020250:	fffff800 	.word	0xfffff800

08020254 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8020254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020258:	b09d      	sub	sp, #116	; 0x74
 802025a:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 802025e:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 8020262:	920e      	str	r2, [sp, #56]	; 0x38
 8020264:	461c      	mov	r4, r3
 8020266:	4683      	mov	fp, r0
 8020268:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802026a:	2a00      	cmp	r2, #0
 802026c:	f000 81e0 	beq.w	8020630 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8020270:	6820      	ldr	r0, [r4, #0]
 8020272:	6861      	ldr	r1, [r4, #4]
 8020274:	aa18      	add	r2, sp, #96	; 0x60
 8020276:	c203      	stmia	r2!, {r0, r1}
 8020278:	6818      	ldr	r0, [r3, #0]
 802027a:	6859      	ldr	r1, [r3, #4]
 802027c:	aa1a      	add	r2, sp, #104	; 0x68
 802027e:	c203      	stmia	r2!, {r0, r1}
 8020280:	a818      	add	r0, sp, #96	; 0x60
 8020282:	f7f8 fea5 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020286:	4621      	mov	r1, r4
 8020288:	a81a      	add	r0, sp, #104	; 0x68
 802028a:	f7f8 fee5 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802028e:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 8020292:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 8020296:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 802029a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 802029e:	bfd7      	itett	le
 80202a0:	b29a      	uxthle	r2, r3
 80202a2:	2201      	movgt	r2, #1
 80202a4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 80202a8:	fb91 f2f2 	sdivle	r2, r1, r2
 80202ac:	9202      	str	r2, [sp, #8]
 80202ae:	9802      	ldr	r0, [sp, #8]
 80202b0:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 80202b4:	fb92 f0f0 	sdiv	r0, r2, r0
 80202b8:	b280      	uxth	r0, r0
 80202ba:	900f      	str	r0, [sp, #60]	; 0x3c
 80202bc:	9902      	ldr	r1, [sp, #8]
 80202be:	9802      	ldr	r0, [sp, #8]
 80202c0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80202c2:	440c      	add	r4, r1
 80202c4:	fb05 2510 	mls	r5, r5, r0, r2
 80202c8:	fb15 f503 	smulbb	r5, r5, r3
 80202cc:	3c01      	subs	r4, #1
 80202ce:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 80202d2:	fb94 f4f1 	sdiv	r4, r4, r1
 80202d6:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 80202da:	440d      	add	r5, r1
 80202dc:	4419      	add	r1, r3
 80202de:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 80202e2:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 80202e6:	441a      	add	r2, r3
 80202e8:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 80202ec:	9306      	str	r3, [sp, #24]
 80202ee:	4bb3      	ldr	r3, [pc, #716]	; (80205bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 80202f0:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 80202f4:	6818      	ldr	r0, [r3, #0]
 80202f6:	6803      	ldr	r3, [r0, #0]
 80202f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80202fa:	4798      	blx	r3
 80202fc:	4bb0      	ldr	r3, [pc, #704]	; (80205c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 80202fe:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 8020302:	881a      	ldrh	r2, [r3, #0]
 8020304:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 8020308:	9316      	str	r3, [sp, #88]	; 0x58
 802030a:	fb02 7101 	mla	r1, r2, r1, r7
 802030e:	3401      	adds	r4, #1
 8020310:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8020314:	b2a4      	uxth	r4, r4
 8020316:	4356      	muls	r6, r2
 8020318:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 802031c:	00a4      	lsls	r4, r4, #2
 802031e:	920a      	str	r2, [sp, #40]	; 0x28
 8020320:	1d22      	adds	r2, r4, #4
 8020322:	b2ad      	uxth	r5, r5
 8020324:	9213      	str	r2, [sp, #76]	; 0x4c
 8020326:	4ba7      	ldr	r3, [pc, #668]	; (80205c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8020328:	9a06      	ldr	r2, [sp, #24]
 802032a:	2d00      	cmp	r5, #0
 802032c:	bf0c      	ite	eq
 802032e:	4611      	moveq	r1, r2
 8020330:	2100      	movne	r1, #0
 8020332:	2200      	movs	r2, #0
 8020334:	eba3 030b 	sub.w	r3, r3, fp
 8020338:	b289      	uxth	r1, r1
 802033a:	920d      	str	r2, [sp, #52]	; 0x34
 802033c:	9317      	str	r3, [sp, #92]	; 0x5c
 802033e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020340:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020342:	fa12 f383 	uxtah	r3, r2, r3
 8020346:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020348:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802034c:	3304      	adds	r3, #4
 802034e:	9308      	str	r3, [sp, #32]
 8020350:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020352:	4543      	cmp	r3, r8
 8020354:	f240 8167 	bls.w	8020626 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 8020358:	9a02      	ldr	r2, [sp, #8]
 802035a:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 802035e:	fbb5 f3f3 	udiv	r3, r5, r3
 8020362:	1ad3      	subs	r3, r2, r3
 8020364:	b29b      	uxth	r3, r3
 8020366:	9314      	str	r3, [sp, #80]	; 0x50
 8020368:	9b08      	ldr	r3, [sp, #32]
 802036a:	9808      	ldr	r0, [sp, #32]
 802036c:	785a      	ldrb	r2, [r3, #1]
 802036e:	789b      	ldrb	r3, [r3, #2]
 8020370:	7800      	ldrb	r0, [r0, #0]
 8020372:	9010      	str	r0, [sp, #64]	; 0x40
 8020374:	021b      	lsls	r3, r3, #8
 8020376:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802037a:	9a08      	ldr	r2, [sp, #32]
 802037c:	78d2      	ldrb	r2, [r2, #3]
 802037e:	4313      	orrs	r3, r2
 8020380:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8020382:	3001      	adds	r0, #1
 8020384:	441a      	add	r2, r3
 8020386:	9007      	str	r0, [sp, #28]
 8020388:	1c50      	adds	r0, r2, #1
 802038a:	9005      	str	r0, [sp, #20]
 802038c:	7852      	ldrb	r2, [r2, #1]
 802038e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8020390:	0212      	lsls	r2, r2, #8
 8020392:	5cc3      	ldrb	r3, [r0, r3]
 8020394:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 8020398:	431a      	orrs	r2, r3
 802039a:	b293      	uxth	r3, r2
 802039c:	930b      	str	r3, [sp, #44]	; 0x2c
 802039e:	2300      	movs	r3, #0
 80203a0:	9309      	str	r3, [sp, #36]	; 0x24
 80203a2:	2301      	movs	r3, #1
 80203a4:	9301      	str	r3, [sp, #4]
 80203a6:	9304      	str	r3, [sp, #16]
 80203a8:	2300      	movs	r3, #0
 80203aa:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 80203ae:	9303      	str	r3, [sp, #12]
 80203b0:	f04f 0e01 	mov.w	lr, #1
 80203b4:	2d00      	cmp	r5, #0
 80203b6:	d07c      	beq.n	80204b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 80203b8:	45ae      	cmp	lr, r5
 80203ba:	d26b      	bcs.n	8020494 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 80203bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80203be:	eba5 050e 	sub.w	r5, r5, lr
 80203c2:	4543      	cmp	r3, r8
 80203c4:	b2ad      	uxth	r5, r5
 80203c6:	460c      	mov	r4, r1
 80203c8:	d802      	bhi.n	80203d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 80203ca:	e070      	b.n	80204ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 80203cc:	2b00      	cmp	r3, #0
 80203ce:	d15c      	bne.n	802048a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80203d0:	9b05      	ldr	r3, [sp, #20]
 80203d2:	9a04      	ldr	r2, [sp, #16]
 80203d4:	785b      	ldrb	r3, [r3, #1]
 80203d6:	9904      	ldr	r1, [sp, #16]
 80203d8:	f1c2 0207 	rsb	r2, r2, #7
 80203dc:	4093      	lsls	r3, r2
 80203de:	005b      	lsls	r3, r3, #1
 80203e0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 80203e4:	9b05      	ldr	r3, [sp, #20]
 80203e6:	781b      	ldrb	r3, [r3, #0]
 80203e8:	410b      	asrs	r3, r1
 80203ea:	3101      	adds	r1, #1
 80203ec:	b2c9      	uxtb	r1, r1
 80203ee:	2908      	cmp	r1, #8
 80203f0:	9104      	str	r1, [sp, #16]
 80203f2:	9905      	ldr	r1, [sp, #20]
 80203f4:	bf0a      	itet	eq
 80203f6:	3102      	addeq	r1, #2
 80203f8:	3101      	addne	r1, #1
 80203fa:	9105      	streq	r1, [sp, #20]
 80203fc:	b2db      	uxtb	r3, r3
 80203fe:	bf0a      	itet	eq
 8020400:	2100      	moveq	r1, #0
 8020402:	9105      	strne	r1, [sp, #20]
 8020404:	9104      	streq	r1, [sp, #16]
 8020406:	4313      	orrs	r3, r2
 8020408:	9910      	ldr	r1, [sp, #64]	; 0x40
 802040a:	b29a      	uxth	r2, r3
 802040c:	4291      	cmp	r1, r2
 802040e:	d30a      	bcc.n	8020426 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8020410:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 8020414:	2301      	movs	r3, #1
 8020416:	9907      	ldr	r1, [sp, #28]
 8020418:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 802041c:	d30f      	bcc.n	802043e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 802041e:	2100      	movs	r1, #0
 8020420:	9301      	str	r3, [sp, #4]
 8020422:	9103      	str	r1, [sp, #12]
 8020424:	e032      	b.n	802048c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8020426:	9b07      	ldr	r3, [sp, #28]
 8020428:	429a      	cmp	r2, r3
 802042a:	d318      	bcc.n	802045e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 802042c:	9b01      	ldr	r3, [sp, #4]
 802042e:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 8020432:	445b      	add	r3, fp
 8020434:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8020438:	9b01      	ldr	r3, [sp, #4]
 802043a:	3301      	adds	r3, #1
 802043c:	b29b      	uxth	r3, r3
 802043e:	9907      	ldr	r1, [sp, #28]
 8020440:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 8020444:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8020448:	7108      	strb	r0, [r1, #4]
 802044a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 802044c:	80c8      	strh	r0, [r1, #6]
 802044e:	9801      	ldr	r0, [sp, #4]
 8020450:	3001      	adds	r0, #1
 8020452:	7148      	strb	r0, [r1, #5]
 8020454:	9907      	ldr	r1, [sp, #28]
 8020456:	3101      	adds	r1, #1
 8020458:	b289      	uxth	r1, r1
 802045a:	9107      	str	r1, [sp, #28]
 802045c:	e7df      	b.n	802041e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 802045e:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8020462:	4611      	mov	r1, r2
 8020464:	795b      	ldrb	r3, [r3, #5]
 8020466:	f603 0004 	addw	r0, r3, #2052	; 0x804
 802046a:	4458      	add	r0, fp
 802046c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 802046e:	4406      	add	r6, r0
 8020470:	2e00      	cmp	r6, #0
 8020472:	dd06      	ble.n	8020482 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8020474:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8020478:	790e      	ldrb	r6, [r1, #4]
 802047a:	f800 6d01 	strb.w	r6, [r0, #-1]!
 802047e:	88c9      	ldrh	r1, [r1, #6]
 8020480:	e7f4      	b.n	802046c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8020482:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 8020486:	b29b      	uxth	r3, r3
 8020488:	e7c5      	b.n	8020416 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 802048a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802048c:	920b      	str	r2, [sp, #44]	; 0x2c
 802048e:	4621      	mov	r1, r4
 8020490:	469e      	mov	lr, r3
 8020492:	e78f      	b.n	80203b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8020494:	9a03      	ldr	r2, [sp, #12]
 8020496:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 802049a:	442a      	add	r2, r5
 802049c:	ebae 0305 	sub.w	r3, lr, r5
 80204a0:	b292      	uxth	r2, r2
 80204a2:	b29b      	uxth	r3, r3
 80204a4:	9203      	str	r2, [sp, #12]
 80204a6:	2500      	movs	r5, #0
 80204a8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80204aa:	4542      	cmp	r2, r8
 80204ac:	d88e      	bhi.n	80203cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 80204ae:	4621      	mov	r1, r4
 80204b0:	e74e      	b.n	8020350 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 80204b2:	458e      	cmp	lr, r1
 80204b4:	bf29      	itett	cs
 80204b6:	ebae 0301 	subcs.w	r3, lr, r1
 80204ba:	eba1 040e 	subcc.w	r4, r1, lr
 80204be:	b29b      	uxthcs	r3, r3
 80204c0:	910c      	strcs	r1, [sp, #48]	; 0x30
 80204c2:	bf2f      	iteee	cs
 80204c4:	462c      	movcs	r4, r5
 80204c6:	b2a4      	uxthcc	r4, r4
 80204c8:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 80204cc:	462b      	movcc	r3, r5
 80204ce:	f04f 0900 	mov.w	r9, #0
 80204d2:	9a03      	ldr	r2, [sp, #12]
 80204d4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80204d6:	444a      	add	r2, r9
 80204d8:	4548      	cmp	r0, r9
 80204da:	b292      	uxth	r2, r2
 80204dc:	d074      	beq.n	80205c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 80204de:	445a      	add	r2, fp
 80204e0:	2004      	movs	r0, #4
 80204e2:	4605      	mov	r5, r0
 80204e4:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 80204e8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80204ea:	fb15 0202 	smlabb	r2, r5, r2, r0
 80204ee:	9812      	ldr	r0, [sp, #72]	; 0x48
 80204f0:	5880      	ldr	r0, [r0, r2]
 80204f2:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 80204f6:	d014      	beq.n	8020522 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 80204f8:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80204fc:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8020500:	d112      	bne.n	8020528 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8020502:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8020504:	2aff      	cmp	r2, #255	; 0xff
 8020506:	d10f      	bne.n	8020528 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8020508:	0942      	lsrs	r2, r0, #5
 802050a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 802050e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020512:	f025 0507 	bic.w	r5, r5, #7
 8020516:	4315      	orrs	r5, r2
 8020518:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 802051c:	4305      	orrs	r5, r0
 802051e:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8020522:	f109 0901 	add.w	r9, r9, #1
 8020526:	e7d4      	b.n	80204d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8020528:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 802052c:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8020530:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 8020534:	9215      	str	r2, [sp, #84]	; 0x54
 8020536:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8020538:	fb02 fa0a 	mul.w	sl, r2, sl
 802053c:	f10a 0201 	add.w	r2, sl, #1
 8020540:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8020544:	ea4f 272c 	mov.w	r7, ip, asr #8
 8020548:	1212      	asrs	r2, r2, #8
 802054a:	fa1f fa82 	uxth.w	sl, r2
 802054e:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8020552:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8020556:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802055a:	43d2      	mvns	r2, r2
 802055c:	b2d2      	uxtb	r2, r2
 802055e:	fb16 f60a 	smulbb	r6, r6, sl
 8020562:	fa5f fc8c 	uxtb.w	ip, ip
 8020566:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 802056a:	b2c0      	uxtb	r0, r0
 802056c:	fb07 6702 	mla	r7, r7, r2, r6
 8020570:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8020574:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8020576:	fb10 f00a 	smulbb	r0, r0, sl
 802057a:	fb0c 0002 	mla	r0, ip, r2, r0
 802057e:	b2ed      	uxtb	r5, r5
 8020580:	b2bf      	uxth	r7, r7
 8020582:	fb15 f50a 	smulbb	r5, r5, sl
 8020586:	b280      	uxth	r0, r0
 8020588:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802058c:	fb06 5602 	mla	r6, r6, r2, r5
 8020590:	1c7a      	adds	r2, r7, #1
 8020592:	1c45      	adds	r5, r0, #1
 8020594:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8020598:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 802059c:	b2b6      	uxth	r6, r6
 802059e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80205a2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80205a6:	432f      	orrs	r7, r5
 80205a8:	1c75      	adds	r5, r6, #1
 80205aa:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80205ae:	096d      	lsrs	r5, r5, #5
 80205b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80205b4:	432f      	orrs	r7, r5
 80205b6:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 80205ba:	e7b2      	b.n	8020522 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 80205bc:	2000224c 	.word	0x2000224c
 80205c0:	20002246 	.word	0x20002246
 80205c4:	fffff7fb 	.word	0xfffff7fb
 80205c8:	9203      	str	r2, [sp, #12]
 80205ca:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80205cc:	458e      	cmp	lr, r1
 80205ce:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80205d2:	f4ff af68 	bcc.w	80204a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 80205d6:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80205d8:	9906      	ldr	r1, [sp, #24]
 80205da:	8812      	ldrh	r2, [r2, #0]
 80205dc:	1a52      	subs	r2, r2, r1
 80205de:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80205e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80205e4:	9914      	ldr	r1, [sp, #80]	; 0x50
 80205e6:	3201      	adds	r2, #1
 80205e8:	428a      	cmp	r2, r1
 80205ea:	9209      	str	r2, [sp, #36]	; 0x24
 80205ec:	d111      	bne.n	8020612 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 80205ee:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 80205f2:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 80205f6:	9b06      	ldr	r3, [sp, #24]
 80205f8:	eba5 0509 	sub.w	r5, r5, r9
 80205fc:	b2ad      	uxth	r5, r5
 80205fe:	2d00      	cmp	r5, #0
 8020600:	bf08      	it	eq
 8020602:	4619      	moveq	r1, r3
 8020604:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020606:	bf18      	it	ne
 8020608:	2100      	movne	r1, #0
 802060a:	3301      	adds	r3, #1
 802060c:	930d      	str	r3, [sp, #52]	; 0x34
 802060e:	b289      	uxth	r1, r1
 8020610:	e695      	b.n	802033e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8020612:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8020616:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 802061a:	1b2d      	subs	r5, r5, r4
 802061c:	b2ad      	uxth	r5, r5
 802061e:	2d00      	cmp	r5, #0
 8020620:	bf18      	it	ne
 8020622:	2400      	movne	r4, #0
 8020624:	e740      	b.n	80204a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8020626:	4b04      	ldr	r3, [pc, #16]	; (8020638 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8020628:	6818      	ldr	r0, [r3, #0]
 802062a:	6803      	ldr	r3, [r0, #0]
 802062c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802062e:	4798      	blx	r3
 8020630:	b01d      	add	sp, #116	; 0x74
 8020632:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020636:	bf00      	nop
 8020638:	2000224c 	.word	0x2000224c

0802063c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 802063c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020640:	b09f      	sub	sp, #124	; 0x7c
 8020642:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8020646:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 802064a:	920a      	str	r2, [sp, #40]	; 0x28
 802064c:	461d      	mov	r5, r3
 802064e:	4604      	mov	r4, r0
 8020650:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020652:	2a00      	cmp	r2, #0
 8020654:	f000 81fa 	beq.w	8020a4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8020658:	6828      	ldr	r0, [r5, #0]
 802065a:	6869      	ldr	r1, [r5, #4]
 802065c:	aa1a      	add	r2, sp, #104	; 0x68
 802065e:	c203      	stmia	r2!, {r0, r1}
 8020660:	6818      	ldr	r0, [r3, #0]
 8020662:	6859      	ldr	r1, [r3, #4]
 8020664:	aa1c      	add	r2, sp, #112	; 0x70
 8020666:	c203      	stmia	r2!, {r0, r1}
 8020668:	a81a      	add	r0, sp, #104	; 0x68
 802066a:	f7f8 fcb1 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802066e:	4629      	mov	r1, r5
 8020670:	a81c      	add	r0, sp, #112	; 0x70
 8020672:	f7f8 fcf1 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020676:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 802067a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 802067e:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 8020682:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8020686:	bfd7      	itett	le
 8020688:	b29a      	uxthle	r2, r3
 802068a:	2201      	movgt	r2, #1
 802068c:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8020690:	fb91 f2f2 	sdivle	r2, r1, r2
 8020694:	9201      	str	r2, [sp, #4]
 8020696:	9801      	ldr	r0, [sp, #4]
 8020698:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 802069c:	fb92 f0f0 	sdiv	r0, r2, r0
 80206a0:	b280      	uxth	r0, r0
 80206a2:	9010      	str	r0, [sp, #64]	; 0x40
 80206a4:	9901      	ldr	r1, [sp, #4]
 80206a6:	9801      	ldr	r0, [sp, #4]
 80206a8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80206aa:	440e      	add	r6, r1
 80206ac:	fb05 2510 	mls	r5, r5, r0, r2
 80206b0:	fb15 f503 	smulbb	r5, r5, r3
 80206b4:	3e01      	subs	r6, #1
 80206b6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80206ba:	fb96 f6f1 	sdiv	r6, r6, r1
 80206be:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 80206c2:	440d      	add	r5, r1
 80206c4:	4419      	add	r1, r3
 80206c6:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 80206ca:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 80206ce:	441a      	add	r2, r3
 80206d0:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 80206d4:	9304      	str	r3, [sp, #16]
 80206d6:	4b96      	ldr	r3, [pc, #600]	; (8020930 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 80206d8:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 80206dc:	6818      	ldr	r0, [r3, #0]
 80206de:	6803      	ldr	r3, [r0, #0]
 80206e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80206e2:	4798      	blx	r3
 80206e4:	4b93      	ldr	r3, [pc, #588]	; (8020934 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 80206e6:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 80206ea:	881a      	ldrh	r2, [r3, #0]
 80206ec:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 80206f0:	9318      	str	r3, [sp, #96]	; 0x60
 80206f2:	fb02 c101 	mla	r1, r2, r1, ip
 80206f6:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 80206fa:	4357      	muls	r7, r2
 80206fc:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8020700:	3601      	adds	r6, #1
 8020702:	920b      	str	r2, [sp, #44]	; 0x2c
 8020704:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020706:	4b8c      	ldr	r3, [pc, #560]	; (8020938 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8020708:	b2b6      	uxth	r6, r6
 802070a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 802070e:	1d32      	adds	r2, r6, #4
 8020710:	9206      	str	r2, [sp, #24]
 8020712:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020714:	43d2      	mvns	r2, r2
 8020716:	b2d2      	uxtb	r2, r2
 8020718:	b2ad      	uxth	r5, r5
 802071a:	9215      	str	r2, [sp, #84]	; 0x54
 802071c:	9a04      	ldr	r2, [sp, #16]
 802071e:	2d00      	cmp	r5, #0
 8020720:	bf0c      	ite	eq
 8020722:	4611      	moveq	r1, r2
 8020724:	2100      	movne	r1, #0
 8020726:	2200      	movs	r2, #0
 8020728:	1b1b      	subs	r3, r3, r4
 802072a:	b289      	uxth	r1, r1
 802072c:	920d      	str	r2, [sp, #52]	; 0x34
 802072e:	9319      	str	r3, [sp, #100]	; 0x64
 8020730:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8020732:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020734:	fa12 f383 	uxtah	r3, r2, r3
 8020738:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802073a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802073e:	3304      	adds	r3, #4
 8020740:	9307      	str	r3, [sp, #28]
 8020742:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020744:	455b      	cmp	r3, fp
 8020746:	f240 817c 	bls.w	8020a42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 802074a:	9a01      	ldr	r2, [sp, #4]
 802074c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8020750:	fbb5 f3f3 	udiv	r3, r5, r3
 8020754:	1ad3      	subs	r3, r2, r3
 8020756:	b29b      	uxth	r3, r3
 8020758:	9316      	str	r3, [sp, #88]	; 0x58
 802075a:	9b07      	ldr	r3, [sp, #28]
 802075c:	9807      	ldr	r0, [sp, #28]
 802075e:	785a      	ldrb	r2, [r3, #1]
 8020760:	789b      	ldrb	r3, [r3, #2]
 8020762:	7800      	ldrb	r0, [r0, #0]
 8020764:	9011      	str	r0, [sp, #68]	; 0x44
 8020766:	021b      	lsls	r3, r3, #8
 8020768:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802076c:	9a07      	ldr	r2, [sp, #28]
 802076e:	78d2      	ldrb	r2, [r2, #3]
 8020770:	4313      	orrs	r3, r2
 8020772:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8020774:	3001      	adds	r0, #1
 8020776:	441a      	add	r2, r3
 8020778:	9005      	str	r0, [sp, #20]
 802077a:	1c50      	adds	r0, r2, #1
 802077c:	9003      	str	r0, [sp, #12]
 802077e:	7852      	ldrb	r2, [r2, #1]
 8020780:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8020782:	0212      	lsls	r2, r2, #8
 8020784:	5cc3      	ldrb	r3, [r0, r3]
 8020786:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 802078a:	431a      	orrs	r2, r3
 802078c:	b293      	uxth	r3, r2
 802078e:	930c      	str	r3, [sp, #48]	; 0x30
 8020790:	2300      	movs	r3, #0
 8020792:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 8020796:	9308      	str	r3, [sp, #32]
 8020798:	461a      	mov	r2, r3
 802079a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802079e:	930e      	str	r3, [sp, #56]	; 0x38
 80207a0:	f04f 0801 	mov.w	r8, #1
 80207a4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80207a8:	f8cd 8008 	str.w	r8, [sp, #8]
 80207ac:	46c4      	mov	ip, r8
 80207ae:	930f      	str	r3, [sp, #60]	; 0x3c
 80207b0:	2d00      	cmp	r5, #0
 80207b2:	d07c      	beq.n	80208ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80207b4:	45ac      	cmp	ip, r5
 80207b6:	d26c      	bcs.n	8020892 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 80207b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80207ba:	eba5 050c 	sub.w	r5, r5, ip
 80207be:	455b      	cmp	r3, fp
 80207c0:	b2ad      	uxth	r5, r5
 80207c2:	4608      	mov	r0, r1
 80207c4:	d802      	bhi.n	80207cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80207c6:	e070      	b.n	80208aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 80207c8:	2b00      	cmp	r3, #0
 80207ca:	d15c      	bne.n	8020886 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80207cc:	9b03      	ldr	r3, [sp, #12]
 80207ce:	9a02      	ldr	r2, [sp, #8]
 80207d0:	785b      	ldrb	r3, [r3, #1]
 80207d2:	9902      	ldr	r1, [sp, #8]
 80207d4:	f1c2 0207 	rsb	r2, r2, #7
 80207d8:	4093      	lsls	r3, r2
 80207da:	005b      	lsls	r3, r3, #1
 80207dc:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 80207e0:	9b03      	ldr	r3, [sp, #12]
 80207e2:	781b      	ldrb	r3, [r3, #0]
 80207e4:	410b      	asrs	r3, r1
 80207e6:	3101      	adds	r1, #1
 80207e8:	b2c9      	uxtb	r1, r1
 80207ea:	2908      	cmp	r1, #8
 80207ec:	9102      	str	r1, [sp, #8]
 80207ee:	9903      	ldr	r1, [sp, #12]
 80207f0:	bf0a      	itet	eq
 80207f2:	3102      	addeq	r1, #2
 80207f4:	3101      	addne	r1, #1
 80207f6:	9103      	streq	r1, [sp, #12]
 80207f8:	b2db      	uxtb	r3, r3
 80207fa:	bf0a      	itet	eq
 80207fc:	2100      	moveq	r1, #0
 80207fe:	9103      	strne	r1, [sp, #12]
 8020800:	9102      	streq	r1, [sp, #8]
 8020802:	4313      	orrs	r3, r2
 8020804:	9911      	ldr	r1, [sp, #68]	; 0x44
 8020806:	b29a      	uxth	r2, r3
 8020808:	4291      	cmp	r1, r2
 802080a:	d30a      	bcc.n	8020822 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 802080c:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8020810:	2301      	movs	r3, #1
 8020812:	9905      	ldr	r1, [sp, #20]
 8020814:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8020818:	d30f      	bcc.n	802083a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 802081a:	2100      	movs	r1, #0
 802081c:	4698      	mov	r8, r3
 802081e:	9100      	str	r1, [sp, #0]
 8020820:	e032      	b.n	8020888 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 8020822:	9b05      	ldr	r3, [sp, #20]
 8020824:	429a      	cmp	r2, r3
 8020826:	d318      	bcc.n	802085a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8020828:	eb04 0308 	add.w	r3, r4, r8
 802082c:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 8020830:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8020834:	f108 0301 	add.w	r3, r8, #1
 8020838:	b29b      	uxth	r3, r3
 802083a:	9905      	ldr	r1, [sp, #20]
 802083c:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8020840:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8020844:	710e      	strb	r6, [r1, #4]
 8020846:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020848:	80ce      	strh	r6, [r1, #6]
 802084a:	f108 0601 	add.w	r6, r8, #1
 802084e:	714e      	strb	r6, [r1, #5]
 8020850:	9905      	ldr	r1, [sp, #20]
 8020852:	3101      	adds	r1, #1
 8020854:	b289      	uxth	r1, r1
 8020856:	9105      	str	r1, [sp, #20]
 8020858:	e7df      	b.n	802081a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 802085a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 802085e:	4611      	mov	r1, r2
 8020860:	795b      	ldrb	r3, [r3, #5]
 8020862:	f603 0604 	addw	r6, r3, #2052	; 0x804
 8020866:	4426      	add	r6, r4
 8020868:	9f19      	ldr	r7, [sp, #100]	; 0x64
 802086a:	4437      	add	r7, r6
 802086c:	2f00      	cmp	r7, #0
 802086e:	dd06      	ble.n	802087e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8020870:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8020874:	790f      	ldrb	r7, [r1, #4]
 8020876:	f806 7d01 	strb.w	r7, [r6, #-1]!
 802087a:	88c9      	ldrh	r1, [r1, #6]
 802087c:	e7f4      	b.n	8020868 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 802087e:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8020882:	b29b      	uxth	r3, r3
 8020884:	e7c5      	b.n	8020812 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8020886:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020888:	920c      	str	r2, [sp, #48]	; 0x30
 802088a:	4601      	mov	r1, r0
 802088c:	9a00      	ldr	r2, [sp, #0]
 802088e:	469c      	mov	ip, r3
 8020890:	e78e      	b.n	80207b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8020892:	1957      	adds	r7, r2, r5
 8020894:	ebac 0305 	sub.w	r3, ip, r5
 8020898:	b2ba      	uxth	r2, r7
 802089a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 802089e:	9200      	str	r2, [sp, #0]
 80208a0:	b29b      	uxth	r3, r3
 80208a2:	2500      	movs	r5, #0
 80208a4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80208a6:	455a      	cmp	r2, fp
 80208a8:	d88e      	bhi.n	80207c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 80208aa:	4601      	mov	r1, r0
 80208ac:	e749      	b.n	8020742 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 80208ae:	458c      	cmp	ip, r1
 80208b0:	bf2c      	ite	cs
 80208b2:	4628      	movcs	r0, r5
 80208b4:	462b      	movcc	r3, r5
 80208b6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80208b8:	bf27      	ittee	cs
 80208ba:	9109      	strcs	r1, [sp, #36]	; 0x24
 80208bc:	ebac 0301 	subcs.w	r3, ip, r1
 80208c0:	eba1 000c 	subcc.w	r0, r1, ip
 80208c4:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 80208c8:	bf2c      	ite	cs
 80208ca:	b29b      	uxthcs	r3, r3
 80208cc:	b280      	uxthcc	r0, r0
 80208ce:	2dff      	cmp	r5, #255	; 0xff
 80208d0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80208d2:	eb02 0705 	add.w	r7, r2, r5
 80208d6:	b2bd      	uxth	r5, r7
 80208d8:	9500      	str	r5, [sp, #0]
 80208da:	d12f      	bne.n	802093c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 80208dc:	465e      	mov	r6, fp
 80208de:	9d00      	ldr	r5, [sp, #0]
 80208e0:	42aa      	cmp	r2, r5
 80208e2:	f040 8084 	bne.w	80209ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 80208e6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80208e8:	458c      	cmp	ip, r1
 80208ea:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80208ee:	d3d8      	bcc.n	80208a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 80208f0:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80208f2:	9904      	ldr	r1, [sp, #16]
 80208f4:	8812      	ldrh	r2, [r2, #0]
 80208f6:	1a52      	subs	r2, r2, r1
 80208f8:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80208fc:	9a08      	ldr	r2, [sp, #32]
 80208fe:	9916      	ldr	r1, [sp, #88]	; 0x58
 8020900:	3201      	adds	r2, #1
 8020902:	428a      	cmp	r2, r1
 8020904:	9208      	str	r2, [sp, #32]
 8020906:	f040 8092 	bne.w	8020a2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 802090a:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 802090e:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 8020912:	9b04      	ldr	r3, [sp, #16]
 8020914:	eba5 050c 	sub.w	r5, r5, ip
 8020918:	b2ad      	uxth	r5, r5
 802091a:	2d00      	cmp	r5, #0
 802091c:	bf08      	it	eq
 802091e:	4619      	moveq	r1, r3
 8020920:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020922:	bf18      	it	ne
 8020924:	2100      	movne	r1, #0
 8020926:	3301      	adds	r3, #1
 8020928:	930d      	str	r3, [sp, #52]	; 0x34
 802092a:	b289      	uxth	r1, r1
 802092c:	e700      	b.n	8020730 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802092e:	bf00      	nop
 8020930:	2000224c 	.word	0x2000224c
 8020934:	20002246 	.word	0x20002246
 8020938:	fffff7fb 	.word	0xfffff7fb
 802093c:	46d9      	mov	r9, fp
 802093e:	9d00      	ldr	r5, [sp, #0]
 8020940:	42aa      	cmp	r2, r5
 8020942:	d0d0      	beq.n	80208e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 8020944:	1c55      	adds	r5, r2, #1
 8020946:	4422      	add	r2, r4
 8020948:	9517      	str	r5, [sp, #92]	; 0x5c
 802094a:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 802094e:	9a06      	ldr	r2, [sp, #24]
 8020950:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8020954:	4472      	add	r2, lr
 8020956:	9212      	str	r2, [sp, #72]	; 0x48
 8020958:	9f12      	ldr	r7, [sp, #72]	; 0x48
 802095a:	f8b9 2000 	ldrh.w	r2, [r9]
 802095e:	f897 a002 	ldrb.w	sl, [r7, #2]
 8020962:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8020964:	1216      	asrs	r6, r2, #8
 8020966:	fb1a fa07 	smulbb	sl, sl, r7
 802096a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 802096e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8020970:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8020974:	fb06 a607 	mla	r6, r6, r7, sl
 8020978:	9f12      	ldr	r7, [sp, #72]	; 0x48
 802097a:	f897 a001 	ldrb.w	sl, [r7, #1]
 802097e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8020980:	10d5      	asrs	r5, r2, #3
 8020982:	fb1a fa07 	smulbb	sl, sl, r7
 8020986:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802098a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 802098c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020990:	fb05 a507 	mla	r5, r5, r7, sl
 8020994:	9f06      	ldr	r7, [sp, #24]
 8020996:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802099a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 802099c:	00d2      	lsls	r2, r2, #3
 802099e:	fb1e fe07 	smulbb	lr, lr, r7
 80209a2:	b2d2      	uxtb	r2, r2
 80209a4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80209a6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80209aa:	b2b6      	uxth	r6, r6
 80209ac:	fb02 e207 	mla	r2, r2, r7, lr
 80209b0:	b292      	uxth	r2, r2
 80209b2:	b2ad      	uxth	r5, r5
 80209b4:	f106 0a01 	add.w	sl, r6, #1
 80209b8:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80209bc:	f102 0e01 	add.w	lr, r2, #1
 80209c0:	f105 0a01 	add.w	sl, r5, #1
 80209c4:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 80209c8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80209cc:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80209d0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80209d4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80209d8:	ea4e 0606 	orr.w	r6, lr, r6
 80209dc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80209e0:	ea46 060a 	orr.w	r6, r6, sl
 80209e4:	f829 6b02 	strh.w	r6, [r9], #2
 80209e8:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 80209ec:	e7a7      	b.n	802093e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 80209ee:	f102 0e01 	add.w	lr, r2, #1
 80209f2:	4422      	add	r2, r4
 80209f4:	9f06      	ldr	r7, [sp, #24]
 80209f6:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 80209fa:	9a06      	ldr	r2, [sp, #24]
 80209fc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020a00:	eb02 0a05 	add.w	sl, r2, r5
 8020a04:	4a13      	ldr	r2, [pc, #76]	; (8020a54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 8020a06:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020a0a:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8020a0e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020a12:	00d2      	lsls	r2, r2, #3
 8020a14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020a18:	ea49 0202 	orr.w	r2, r9, r2
 8020a1c:	f817 9005 	ldrb.w	r9, [r7, r5]
 8020a20:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020a24:	f826 2b02 	strh.w	r2, [r6], #2
 8020a28:	fa1f f28e 	uxth.w	r2, lr
 8020a2c:	e757      	b.n	80208de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 8020a2e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8020a32:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 8020a36:	1a2d      	subs	r5, r5, r0
 8020a38:	b2ad      	uxth	r5, r5
 8020a3a:	2d00      	cmp	r5, #0
 8020a3c:	bf18      	it	ne
 8020a3e:	2000      	movne	r0, #0
 8020a40:	e730      	b.n	80208a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8020a42:	4b05      	ldr	r3, [pc, #20]	; (8020a58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 8020a44:	6818      	ldr	r0, [r3, #0]
 8020a46:	6803      	ldr	r3, [r0, #0]
 8020a48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020a4a:	4798      	blx	r3
 8020a4c:	b01f      	add	sp, #124	; 0x7c
 8020a4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020a52:	bf00      	nop
 8020a54:	fffff800 	.word	0xfffff800
 8020a58:	2000224c 	.word	0x2000224c

08020a5c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8020a5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a60:	b091      	sub	sp, #68	; 0x44
 8020a62:	469b      	mov	fp, r3
 8020a64:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8020a68:	4616      	mov	r6, r2
 8020a6a:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8020a6e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8020a72:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8020a76:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8020a7a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8020a7e:	4604      	mov	r4, r0
 8020a80:	460d      	mov	r5, r1
 8020a82:	4640      	mov	r0, r8
 8020a84:	4659      	mov	r1, fp
 8020a86:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8020a8a:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8020a8e:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8020a92:	f7f2 fc4d 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 8020a96:	4631      	mov	r1, r6
 8020a98:	4640      	mov	r0, r8
 8020a9a:	f7f2 fc49 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 8020a9e:	4b74      	ldr	r3, [pc, #464]	; (8020c70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8020aa0:	8818      	ldrh	r0, [r3, #0]
 8020aa2:	4b74      	ldr	r3, [pc, #464]	; (8020c74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8020aa4:	8819      	ldrh	r1, [r3, #0]
 8020aa6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8020aaa:	2b00      	cmp	r3, #0
 8020aac:	b202      	sxth	r2, r0
 8020aae:	b20e      	sxth	r6, r1
 8020ab0:	da07      	bge.n	8020ac2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8020ab2:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8020ab6:	4463      	add	r3, ip
 8020ab8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8020abc:	2300      	movs	r3, #0
 8020abe:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8020ac2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8020ac6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8020aca:	1ad2      	subs	r2, r2, r3
 8020acc:	4594      	cmp	ip, r2
 8020ace:	bfc4      	itt	gt
 8020ad0:	1ac2      	subgt	r2, r0, r3
 8020ad2:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 8020ad6:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020ada:	2a00      	cmp	r2, #0
 8020adc:	da07      	bge.n	8020aee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8020ade:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8020ae2:	4462      	add	r2, ip
 8020ae4:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8020ae8:	2200      	movs	r2, #0
 8020aea:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8020aee:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8020af2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8020af6:	eba6 060a 	sub.w	r6, r6, sl
 8020afa:	42b2      	cmp	r2, r6
 8020afc:	bfc4      	itt	gt
 8020afe:	eba1 020a 	subgt.w	r2, r1, sl
 8020b02:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 8020b06:	4a5c      	ldr	r2, [pc, #368]	; (8020c78 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8020b08:	7812      	ldrb	r2, [r2, #0]
 8020b0a:	b9a2      	cbnz	r2, 8020b36 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8020b0c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8020b10:	4286      	cmp	r6, r0
 8020b12:	4640      	mov	r0, r8
 8020b14:	9303      	str	r3, [sp, #12]
 8020b16:	bf14      	ite	ne
 8020b18:	2600      	movne	r6, #0
 8020b1a:	2601      	moveq	r6, #1
 8020b1c:	f7f2 fc4b 	bl	80133b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8020b20:	9b03      	ldr	r3, [sp, #12]
 8020b22:	b160      	cbz	r0, 8020b3e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8020b24:	2300      	movs	r3, #0
 8020b26:	8023      	strh	r3, [r4, #0]
 8020b28:	8063      	strh	r3, [r4, #2]
 8020b2a:	80a3      	strh	r3, [r4, #4]
 8020b2c:	4620      	mov	r0, r4
 8020b2e:	80e3      	strh	r3, [r4, #6]
 8020b30:	b011      	add	sp, #68	; 0x44
 8020b32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020b36:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8020b3a:	428e      	cmp	r6, r1
 8020b3c:	e7e9      	b.n	8020b12 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8020b3e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8020b42:	9205      	str	r2, [sp, #20]
 8020b44:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8020b48:	9206      	str	r2, [sp, #24]
 8020b4a:	f8bb 2000 	ldrh.w	r2, [fp]
 8020b4e:	900e      	str	r0, [sp, #56]	; 0x38
 8020b50:	1a9b      	subs	r3, r3, r2
 8020b52:	b21b      	sxth	r3, r3
 8020b54:	9303      	str	r3, [sp, #12]
 8020b56:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8020b5a:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8020b5e:	ebaa 0a03 	sub.w	sl, sl, r3
 8020b62:	fa0f f38a 	sxth.w	r3, sl
 8020b66:	9304      	str	r3, [sp, #16]
 8020b68:	9b03      	ldr	r3, [sp, #12]
 8020b6a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8020b6e:	9b04      	ldr	r3, [sp, #16]
 8020b70:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8020b74:	9b05      	ldr	r3, [sp, #20]
 8020b76:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8020b7a:	a90e      	add	r1, sp, #56	; 0x38
 8020b7c:	9b06      	ldr	r3, [sp, #24]
 8020b7e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8020b82:	a80c      	add	r0, sp, #48	; 0x30
 8020b84:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8020b88:	f7f8 fa66 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020b8c:	4640      	mov	r0, r8
 8020b8e:	f7f8 fa1f 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020b92:	a80e      	add	r0, sp, #56	; 0x38
 8020b94:	f7f8 fa1c 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020b98:	4b38      	ldr	r3, [pc, #224]	; (8020c7c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8020b9a:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8020b9e:	881b      	ldrh	r3, [r3, #0]
 8020ba0:	9307      	str	r3, [sp, #28]
 8020ba2:	682b      	ldr	r3, [r5, #0]
 8020ba4:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8020c80 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8020ba8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020baa:	4628      	mov	r0, r5
 8020bac:	4798      	blx	r3
 8020bae:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8020bb2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8020bb6:	4681      	mov	r9, r0
 8020bb8:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8020bbc:	f8db 0000 	ldr.w	r0, [fp]
 8020bc0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8020bc2:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8020bc6:	6803      	ldr	r3, [r0, #0]
 8020bc8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020bca:	4798      	blx	r3
 8020bcc:	4607      	mov	r7, r0
 8020bce:	f8db 0000 	ldr.w	r0, [fp]
 8020bd2:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8020bd6:	6803      	ldr	r3, [r0, #0]
 8020bd8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020bdc:	9109      	str	r1, [sp, #36]	; 0x24
 8020bde:	9208      	str	r2, [sp, #32]
 8020be0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020be2:	4798      	blx	r3
 8020be4:	f010 0f01 	tst.w	r0, #1
 8020be8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020bec:	d012      	beq.n	8020c14 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8020bee:	f8db 0000 	ldr.w	r0, [fp]
 8020bf2:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8020bf6:	6803      	ldr	r3, [r0, #0]
 8020bf8:	9200      	str	r2, [sp, #0]
 8020bfa:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8020bfc:	e898 0006 	ldmia.w	r8, {r1, r2}
 8020c00:	462b      	mov	r3, r5
 8020c02:	47b0      	blx	r6
 8020c04:	9b03      	ldr	r3, [sp, #12]
 8020c06:	8023      	strh	r3, [r4, #0]
 8020c08:	9b04      	ldr	r3, [sp, #16]
 8020c0a:	8063      	strh	r3, [r4, #2]
 8020c0c:	9b05      	ldr	r3, [sp, #20]
 8020c0e:	80a3      	strh	r3, [r4, #4]
 8020c10:	9b06      	ldr	r3, [sp, #24]
 8020c12:	e78b      	b.n	8020b2c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8020c14:	fb09 f202 	mul.w	r2, r9, r2
 8020c18:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8020c1c:	440f      	add	r7, r1
 8020c1e:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8020c22:	b166      	cbz	r6, 8020c3e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8020c24:	9a07      	ldr	r2, [sp, #28]
 8020c26:	4592      	cmp	sl, r2
 8020c28:	d109      	bne.n	8020c3e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8020c2a:	f8db 0000 	ldr.w	r0, [fp]
 8020c2e:	6802      	ldr	r2, [r0, #0]
 8020c30:	fb09 f303 	mul.w	r3, r9, r3
 8020c34:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8020c36:	4629      	mov	r1, r5
 8020c38:	463a      	mov	r2, r7
 8020c3a:	47b0      	blx	r6
 8020c3c:	e7e2      	b.n	8020c04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8020c3e:	fb0a f303 	mul.w	r3, sl, r3
 8020c42:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8020c80 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8020c46:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8020c4a:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8020c4e:	4545      	cmp	r5, r8
 8020c50:	d2d8      	bcs.n	8020c04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8020c52:	f8db 0000 	ldr.w	r0, [fp]
 8020c56:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8020c5a:	6802      	ldr	r2, [r0, #0]
 8020c5c:	4629      	mov	r1, r5
 8020c5e:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8020c62:	005b      	lsls	r3, r3, #1
 8020c64:	463a      	mov	r2, r7
 8020c66:	47d0      	blx	sl
 8020c68:	444f      	add	r7, r9
 8020c6a:	4435      	add	r5, r6
 8020c6c:	e7ef      	b.n	8020c4e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8020c6e:	bf00      	nop
 8020c70:	20002240 	.word	0x20002240
 8020c74:	20002242 	.word	0x20002242
 8020c78:	20002244 	.word	0x20002244
 8020c7c:	20002246 	.word	0x20002246
 8020c80:	2000224c 	.word	0x2000224c

08020c84 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8020c84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020c86:	4606      	mov	r6, r0
 8020c88:	b087      	sub	sp, #28
 8020c8a:	460c      	mov	r4, r1
 8020c8c:	4617      	mov	r7, r2
 8020c8e:	461d      	mov	r5, r3
 8020c90:	b333      	cbz	r3, 8020ce0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8020c92:	4608      	mov	r0, r1
 8020c94:	f7f2 fb8f 	bl	80133b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8020c98:	bb10      	cbnz	r0, 8020ce0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8020c9a:	6820      	ldr	r0, [r4, #0]
 8020c9c:	6861      	ldr	r1, [r4, #4]
 8020c9e:	4c1c      	ldr	r4, [pc, #112]	; (8020d10 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8020ca0:	ab04      	add	r3, sp, #16
 8020ca2:	c303      	stmia	r3!, {r0, r1}
 8020ca4:	a804      	add	r0, sp, #16
 8020ca6:	f7f8 f993 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020caa:	6820      	ldr	r0, [r4, #0]
 8020cac:	6803      	ldr	r3, [r0, #0]
 8020cae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020cb0:	4798      	blx	r3
 8020cb2:	2dff      	cmp	r5, #255	; 0xff
 8020cb4:	d016      	beq.n	8020ce4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8020cb6:	f010 0f08 	tst.w	r0, #8
 8020cba:	6820      	ldr	r0, [r4, #0]
 8020cbc:	d015      	beq.n	8020cea <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8020cbe:	2400      	movs	r4, #0
 8020cc0:	6801      	ldr	r1, [r0, #0]
 8020cc2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8020cc6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8020cca:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8020cce:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8020cd2:	9401      	str	r4, [sp, #4]
 8020cd4:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8020cd8:	9400      	str	r4, [sp, #0]
 8020cda:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8020cdc:	4639      	mov	r1, r7
 8020cde:	47a0      	blx	r4
 8020ce0:	b007      	add	sp, #28
 8020ce2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020ce4:	f010 0f02 	tst.w	r0, #2
 8020ce8:	e7e7      	b.n	8020cba <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8020cea:	6803      	ldr	r3, [r0, #0]
 8020cec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020cee:	4798      	blx	r3
 8020cf0:	4b08      	ldr	r3, [pc, #32]	; (8020d14 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8020cf2:	881a      	ldrh	r2, [r3, #0]
 8020cf4:	6833      	ldr	r3, [r6, #0]
 8020cf6:	e9cd 7500 	strd	r7, r5, [sp]
 8020cfa:	4601      	mov	r1, r0
 8020cfc:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8020cfe:	4630      	mov	r0, r6
 8020d00:	ab04      	add	r3, sp, #16
 8020d02:	47a8      	blx	r5
 8020d04:	6820      	ldr	r0, [r4, #0]
 8020d06:	6803      	ldr	r3, [r0, #0]
 8020d08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020d0a:	4798      	blx	r3
 8020d0c:	e7e8      	b.n	8020ce0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8020d0e:	bf00      	nop
 8020d10:	2000224c 	.word	0x2000224c
 8020d14:	20002246 	.word	0x20002246

08020d18 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8020d18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020d1c:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8020d20:	9e08      	ldr	r6, [sp, #32]
 8020d22:	4688      	mov	r8, r1
 8020d24:	4614      	mov	r4, r2
 8020d26:	461d      	mov	r5, r3
 8020d28:	2f00      	cmp	r7, #0
 8020d2a:	f000 80a9 	beq.w	8020e80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020d2e:	4618      	mov	r0, r3
 8020d30:	f7f2 fb41 	bl	80133b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8020d34:	2800      	cmp	r0, #0
 8020d36:	f040 80a3 	bne.w	8020e80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020d3a:	f9b5 1000 	ldrsh.w	r1, [r5]
 8020d3e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8020d42:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8020d46:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8020d4a:	fb04 1303 	mla	r3, r4, r3, r1
 8020d4e:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8020d52:	4365      	muls	r5, r4
 8020d54:	2fff      	cmp	r7, #255	; 0xff
 8020d56:	eba4 0200 	sub.w	r2, r4, r0
 8020d5a:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8020d5e:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8020d62:	d04a      	beq.n	8020dfa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8020d64:	b2bc      	uxth	r4, r7
 8020d66:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8020d6a:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8020d6e:	fa5f f788 	uxtb.w	r7, r8
 8020d72:	b2f3      	uxtb	r3, r6
 8020d74:	0040      	lsls	r0, r0, #1
 8020d76:	fb0e fe04 	mul.w	lr, lr, r4
 8020d7a:	4367      	muls	r7, r4
 8020d7c:	4363      	muls	r3, r4
 8020d7e:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8020d82:	fa1f fc8c 	uxth.w	ip, ip
 8020d86:	42a9      	cmp	r1, r5
 8020d88:	d27a      	bcs.n	8020e80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020d8a:	eb01 0900 	add.w	r9, r1, r0
 8020d8e:	4549      	cmp	r1, r9
 8020d90:	d231      	bcs.n	8020df6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8020d92:	880a      	ldrh	r2, [r1, #0]
 8020d94:	1214      	asrs	r4, r2, #8
 8020d96:	10d6      	asrs	r6, r2, #3
 8020d98:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8020d9c:	00d2      	lsls	r2, r2, #3
 8020d9e:	b2d2      	uxtb	r2, r2
 8020da0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020da4:	fb14 f40c 	smulbb	r4, r4, ip
 8020da8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020dac:	4474      	add	r4, lr
 8020dae:	fb12 f20c 	smulbb	r2, r2, ip
 8020db2:	b2a4      	uxth	r4, r4
 8020db4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8020db8:	441a      	add	r2, r3
 8020dba:	b292      	uxth	r2, r2
 8020dbc:	f104 0a01 	add.w	sl, r4, #1
 8020dc0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8020dc4:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8020dc8:	fb16 f60c 	smulbb	r6, r6, ip
 8020dcc:	f102 0a01 	add.w	sl, r2, #1
 8020dd0:	443e      	add	r6, r7
 8020dd2:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8020dd6:	b2b6      	uxth	r6, r6
 8020dd8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8020ddc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020de0:	4322      	orrs	r2, r4
 8020de2:	1c74      	adds	r4, r6, #1
 8020de4:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8020de8:	0976      	lsrs	r6, r6, #5
 8020dea:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8020dee:	4332      	orrs	r2, r6
 8020df0:	f821 2b02 	strh.w	r2, [r1], #2
 8020df4:	e7cb      	b.n	8020d8e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8020df6:	4441      	add	r1, r8
 8020df8:	e7c5      	b.n	8020d86 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8020dfa:	4f22      	ldr	r7, [pc, #136]	; (8020e84 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8020dfc:	0973      	lsrs	r3, r6, #5
 8020dfe:	ea08 0707 	and.w	r7, r8, r7
 8020e02:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020e06:	433b      	orrs	r3, r7
 8020e08:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8020e0c:	4333      	orrs	r3, r6
 8020e0e:	07e7      	lsls	r7, r4, #31
 8020e10:	b29b      	uxth	r3, r3
 8020e12:	d50b      	bpl.n	8020e2c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8020e14:	0040      	lsls	r0, r0, #1
 8020e16:	0052      	lsls	r2, r2, #1
 8020e18:	42a9      	cmp	r1, r5
 8020e1a:	d231      	bcs.n	8020e80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020e1c:	180c      	adds	r4, r1, r0
 8020e1e:	42a1      	cmp	r1, r4
 8020e20:	d202      	bcs.n	8020e28 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8020e22:	f821 3b02 	strh.w	r3, [r1], #2
 8020e26:	e7fa      	b.n	8020e1e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8020e28:	4411      	add	r1, r2
 8020e2a:	e7f5      	b.n	8020e18 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8020e2c:	078e      	lsls	r6, r1, #30
 8020e2e:	d008      	beq.n	8020e42 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8020e30:	0066      	lsls	r6, r4, #1
 8020e32:	460a      	mov	r2, r1
 8020e34:	42aa      	cmp	r2, r5
 8020e36:	d202      	bcs.n	8020e3e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8020e38:	8013      	strh	r3, [r2, #0]
 8020e3a:	4432      	add	r2, r6
 8020e3c:	e7fa      	b.n	8020e34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8020e3e:	3102      	adds	r1, #2
 8020e40:	3801      	subs	r0, #1
 8020e42:	07c2      	lsls	r2, r0, #31
 8020e44:	d50b      	bpl.n	8020e5e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8020e46:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8020e4a:	3a01      	subs	r2, #1
 8020e4c:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8020e50:	0066      	lsls	r6, r4, #1
 8020e52:	42aa      	cmp	r2, r5
 8020e54:	d202      	bcs.n	8020e5c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8020e56:	8013      	strh	r3, [r2, #0]
 8020e58:	4432      	add	r2, r6
 8020e5a:	e7fa      	b.n	8020e52 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8020e5c:	3801      	subs	r0, #1
 8020e5e:	b178      	cbz	r0, 8020e80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020e60:	1040      	asrs	r0, r0, #1
 8020e62:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8020e66:	0080      	lsls	r0, r0, #2
 8020e68:	0064      	lsls	r4, r4, #1
 8020e6a:	42a9      	cmp	r1, r5
 8020e6c:	d208      	bcs.n	8020e80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020e6e:	180e      	adds	r6, r1, r0
 8020e70:	460a      	mov	r2, r1
 8020e72:	42b2      	cmp	r2, r6
 8020e74:	d202      	bcs.n	8020e7c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8020e76:	f842 3b04 	str.w	r3, [r2], #4
 8020e7a:	e7fa      	b.n	8020e72 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8020e7c:	4421      	add	r1, r4
 8020e7e:	e7f4      	b.n	8020e6a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8020e80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020e84:	00fff800 	.word	0x00fff800

08020e88 <_ZN8touchgfx8LCD16bppC1Ev>:
 8020e88:	2200      	movs	r2, #0
 8020e8a:	4912      	ldr	r1, [pc, #72]	; (8020ed4 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8020e8c:	6042      	str	r2, [r0, #4]
 8020e8e:	6001      	str	r1, [r0, #0]
 8020e90:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8020e94:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8020e98:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8020e9c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8020ea0:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8020ea4:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8020ea8:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8020eac:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8020eb0:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8020eb4:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8020eb8:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8020ebc:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8020ec0:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8020ec4:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8020ec8:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 8020ecc:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8020ed0:	4770      	bx	lr
 8020ed2:	bf00      	nop
 8020ed4:	0802fdf4 	.word	0x0802fdf4

08020ed8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8020ed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020edc:	460d      	mov	r5, r1
 8020ede:	b08d      	sub	sp, #52	; 0x34
 8020ee0:	4604      	mov	r4, r0
 8020ee2:	6808      	ldr	r0, [r1, #0]
 8020ee4:	6849      	ldr	r1, [r1, #4]
 8020ee6:	4699      	mov	r9, r3
 8020ee8:	ab08      	add	r3, sp, #32
 8020eea:	c303      	stmia	r3!, {r0, r1}
 8020eec:	6810      	ldr	r0, [r2, #0]
 8020eee:	6851      	ldr	r1, [r2, #4]
 8020ef0:	ab0a      	add	r3, sp, #40	; 0x28
 8020ef2:	c303      	stmia	r3!, {r0, r1}
 8020ef4:	a808      	add	r0, sp, #32
 8020ef6:	f7f8 f86b 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020efa:	4629      	mov	r1, r5
 8020efc:	a80a      	add	r0, sp, #40	; 0x28
 8020efe:	f7f8 f8ab 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020f02:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8020f06:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8020f0a:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8020f0e:	4d63      	ldr	r5, [pc, #396]	; (802109c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8020f10:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8020f14:	6828      	ldr	r0, [r5, #0]
 8020f16:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8020f1a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020f1e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8020f22:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8020f26:	440a      	add	r2, r1
 8020f28:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8020f2c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8020f30:	4413      	add	r3, r2
 8020f32:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8020f36:	6803      	ldr	r3, [r0, #0]
 8020f38:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020f3a:	4798      	blx	r3
 8020f3c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020f40:	d119      	bne.n	8020f76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8020f42:	f010 0f20 	tst.w	r0, #32
 8020f46:	6828      	ldr	r0, [r5, #0]
 8020f48:	d018      	beq.n	8020f7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8020f4a:	2500      	movs	r5, #0
 8020f4c:	6801      	ldr	r1, [r0, #0]
 8020f4e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8020f52:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8020f56:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8020f5a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8020f5e:	9502      	str	r5, [sp, #8]
 8020f60:	b2b6      	uxth	r6, r6
 8020f62:	fa1f f588 	uxth.w	r5, r8
 8020f66:	9601      	str	r6, [sp, #4]
 8020f68:	9500      	str	r5, [sp, #0]
 8020f6a:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8020f6c:	4621      	mov	r1, r4
 8020f6e:	47a8      	blx	r5
 8020f70:	b00d      	add	sp, #52	; 0x34
 8020f72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020f76:	f010 0f40 	tst.w	r0, #64	; 0x40
 8020f7a:	e7e4      	b.n	8020f46 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8020f7c:	6803      	ldr	r3, [r0, #0]
 8020f7e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020f80:	4798      	blx	r3
 8020f82:	4947      	ldr	r1, [pc, #284]	; (80210a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8020f84:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020f88:	880b      	ldrh	r3, [r1, #0]
 8020f8a:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8020f8e:	fb03 5202 	mla	r2, r3, r2, r5
 8020f92:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020f96:	4373      	muls	r3, r6
 8020f98:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020f9c:	9307      	str	r3, [sp, #28]
 8020f9e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8020fa2:	9306      	str	r3, [sp, #24]
 8020fa4:	468a      	mov	sl, r1
 8020fa6:	9b07      	ldr	r3, [sp, #28]
 8020fa8:	4298      	cmp	r0, r3
 8020faa:	d270      	bcs.n	802108e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8020fac:	9b06      	ldr	r3, [sp, #24]
 8020fae:	4621      	mov	r1, r4
 8020fb0:	eb00 0b03 	add.w	fp, r0, r3
 8020fb4:	4558      	cmp	r0, fp
 8020fb6:	d25d      	bcs.n	8021074 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8020fb8:	f851 4b04 	ldr.w	r4, [r1], #4
 8020fbc:	0e23      	lsrs	r3, r4, #24
 8020fbe:	d014      	beq.n	8020fea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8020fc0:	2bff      	cmp	r3, #255	; 0xff
 8020fc2:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8020fc6:	d112      	bne.n	8020fee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8020fc8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020fcc:	d10f      	bne.n	8020fee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8020fce:	0963      	lsrs	r3, r4, #5
 8020fd0:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8020fd4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020fd8:	f02c 0c07 	bic.w	ip, ip, #7
 8020fdc:	ea43 0c0c 	orr.w	ip, r3, ip
 8020fe0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8020fe4:	ea4c 0404 	orr.w	r4, ip, r4
 8020fe8:	8004      	strh	r4, [r0, #0]
 8020fea:	3002      	adds	r0, #2
 8020fec:	e7e2      	b.n	8020fb4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8020fee:	fb09 f303 	mul.w	r3, r9, r3
 8020ff2:	8807      	ldrh	r7, [r0, #0]
 8020ff4:	1c5a      	adds	r2, r3, #1
 8020ff6:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8020ffa:	1212      	asrs	r2, r2, #8
 8020ffc:	123e      	asrs	r6, r7, #8
 8020ffe:	b293      	uxth	r3, r2
 8021000:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8021004:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8021008:	43d2      	mvns	r2, r2
 802100a:	b2d2      	uxtb	r2, r2
 802100c:	10fd      	asrs	r5, r7, #3
 802100e:	fb1e fe03 	smulbb	lr, lr, r3
 8021012:	00ff      	lsls	r7, r7, #3
 8021014:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8021018:	fb06 e602 	mla	r6, r6, r2, lr
 802101c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8021020:	b2ff      	uxtb	r7, r7
 8021022:	fa5f fc8c 	uxtb.w	ip, ip
 8021026:	b2e4      	uxtb	r4, r4
 8021028:	b2b6      	uxth	r6, r6
 802102a:	fb1c fc03 	smulbb	ip, ip, r3
 802102e:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8021032:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8021036:	fb14 f403 	smulbb	r4, r4, r3
 802103a:	fb05 c502 	mla	r5, r5, r2, ip
 802103e:	f106 0e01 	add.w	lr, r6, #1
 8021042:	fb07 4702 	mla	r7, r7, r2, r4
 8021046:	b2ad      	uxth	r5, r5
 8021048:	b2bf      	uxth	r7, r7
 802104a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 802104e:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8021052:	f105 0c01 	add.w	ip, r5, #1
 8021056:	1c7e      	adds	r6, r7, #1
 8021058:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 802105c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8021060:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8021064:	096d      	lsrs	r5, r5, #5
 8021066:	ea46 060e 	orr.w	r6, r6, lr
 802106a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802106e:	432e      	orrs	r6, r5
 8021070:	8006      	strh	r6, [r0, #0]
 8021072:	e7ba      	b.n	8020fea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8021074:	f8ba 3000 	ldrh.w	r3, [sl]
 8021078:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 802107c:	eba3 0308 	sub.w	r3, r3, r8
 8021080:	eba4 0408 	sub.w	r4, r4, r8
 8021084:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021088:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 802108c:	e78b      	b.n	8020fa6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 802108e:	4b03      	ldr	r3, [pc, #12]	; (802109c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8021090:	6818      	ldr	r0, [r3, #0]
 8021092:	6803      	ldr	r3, [r0, #0]
 8021094:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021096:	4798      	blx	r3
 8021098:	e76a      	b.n	8020f70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 802109a:	bf00      	nop
 802109c:	2000224c 	.word	0x2000224c
 80210a0:	20002246 	.word	0x20002246

080210a4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80210a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80210a8:	460c      	mov	r4, r1
 80210aa:	b085      	sub	sp, #20
 80210ac:	6810      	ldr	r0, [r2, #0]
 80210ae:	6851      	ldr	r1, [r2, #4]
 80210b0:	466d      	mov	r5, sp
 80210b2:	c503      	stmia	r5!, {r0, r1}
 80210b4:	6818      	ldr	r0, [r3, #0]
 80210b6:	6859      	ldr	r1, [r3, #4]
 80210b8:	4616      	mov	r6, r2
 80210ba:	c503      	stmia	r5!, {r0, r1}
 80210bc:	4668      	mov	r0, sp
 80210be:	f7f7 ff87 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80210c2:	4631      	mov	r1, r6
 80210c4:	a802      	add	r0, sp, #8
 80210c6:	f7f7 ffc7 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80210ca:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80210ce:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80210d2:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80210d6:	4d28      	ldr	r5, [pc, #160]	; (8021178 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80210d8:	4e28      	ldr	r6, [pc, #160]	; (802117c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80210da:	6828      	ldr	r0, [r5, #0]
 80210dc:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80210e0:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80210e4:	fb11 2103 	smlabb	r1, r1, r3, r2
 80210e8:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80210ec:	f8bd 1000 	ldrh.w	r1, [sp]
 80210f0:	440a      	add	r2, r1
 80210f2:	f8ad 2008 	strh.w	r2, [sp, #8]
 80210f6:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80210fa:	4413      	add	r3, r2
 80210fc:	f8ad 300a 	strh.w	r3, [sp, #10]
 8021100:	6803      	ldr	r3, [r0, #0]
 8021102:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021104:	4798      	blx	r3
 8021106:	8833      	ldrh	r3, [r6, #0]
 8021108:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 802110c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8021110:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8021180 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8021114:	fb03 1202 	mla	r2, r3, r2, r1
 8021118:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 802111c:	fb08 f303 	mul.w	r3, r8, r3
 8021120:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8021124:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8021128:	4298      	cmp	r0, r3
 802112a:	d21d      	bcs.n	8021168 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 802112c:	eb00 080c 	add.w	r8, r0, ip
 8021130:	4540      	cmp	r0, r8
 8021132:	d20f      	bcs.n	8021154 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8021134:	f854 1b04 	ldr.w	r1, [r4], #4
 8021138:	ea4f 1951 	mov.w	r9, r1, lsr #5
 802113c:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8021140:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021144:	ea42 0209 	orr.w	r2, r2, r9
 8021148:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802114c:	430a      	orrs	r2, r1
 802114e:	f820 2b02 	strh.w	r2, [r0], #2
 8021152:	e7ed      	b.n	8021130 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8021154:	8832      	ldrh	r2, [r6, #0]
 8021156:	1bd2      	subs	r2, r2, r7
 8021158:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 802115c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8021160:	1bd2      	subs	r2, r2, r7
 8021162:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8021166:	e7df      	b.n	8021128 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8021168:	6828      	ldr	r0, [r5, #0]
 802116a:	6803      	ldr	r3, [r0, #0]
 802116c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802116e:	4798      	blx	r3
 8021170:	b005      	add	sp, #20
 8021172:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8021176:	bf00      	nop
 8021178:	2000224c 	.word	0x2000224c
 802117c:	20002246 	.word	0x20002246
 8021180:	fffff800 	.word	0xfffff800

08021184 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8021184:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021188:	460e      	mov	r6, r1
 802118a:	b08e      	sub	sp, #56	; 0x38
 802118c:	4604      	mov	r4, r0
 802118e:	6808      	ldr	r0, [r1, #0]
 8021190:	6849      	ldr	r1, [r1, #4]
 8021192:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 802136c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8021196:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8021370 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 802119a:	461d      	mov	r5, r3
 802119c:	ab0a      	add	r3, sp, #40	; 0x28
 802119e:	c303      	stmia	r3!, {r0, r1}
 80211a0:	6810      	ldr	r0, [r2, #0]
 80211a2:	6851      	ldr	r1, [r2, #4]
 80211a4:	ab0c      	add	r3, sp, #48	; 0x30
 80211a6:	c303      	stmia	r3!, {r0, r1}
 80211a8:	a80a      	add	r0, sp, #40	; 0x28
 80211aa:	f7f7 ff11 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80211ae:	4631      	mov	r1, r6
 80211b0:	a80c      	add	r0, sp, #48	; 0x30
 80211b2:	f7f7 ff51 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80211b6:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80211ba:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80211be:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80211c2:	f8d8 0000 	ldr.w	r0, [r8]
 80211c6:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 80211ca:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 80211ce:	fb11 2103 	smlabb	r1, r1, r3, r2
 80211d2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80211d6:	440c      	add	r4, r1
 80211d8:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80211dc:	440a      	add	r2, r1
 80211de:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80211e2:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 80211e6:	4413      	add	r3, r2
 80211e8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80211ec:	6803      	ldr	r3, [r0, #0]
 80211ee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80211f0:	4798      	blx	r3
 80211f2:	2dff      	cmp	r5, #255	; 0xff
 80211f4:	d124      	bne.n	8021240 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80211f6:	f010 0f01 	tst.w	r0, #1
 80211fa:	f8d8 0000 	ldr.w	r0, [r8]
 80211fe:	d022      	beq.n	8021246 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8021200:	2100      	movs	r1, #0
 8021202:	f8d0 c000 	ldr.w	ip, [r0]
 8021206:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 802120a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 802120e:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8021212:	f04f 0e01 	mov.w	lr, #1
 8021216:	f8cd e018 	str.w	lr, [sp, #24]
 802121a:	f8b9 e000 	ldrh.w	lr, [r9]
 802121e:	9503      	str	r5, [sp, #12]
 8021220:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8021224:	b2b6      	uxth	r6, r6
 8021226:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 802122a:	9102      	str	r1, [sp, #8]
 802122c:	b2bf      	uxth	r7, r7
 802122e:	9601      	str	r6, [sp, #4]
 8021230:	9700      	str	r7, [sp, #0]
 8021232:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8021236:	4621      	mov	r1, r4
 8021238:	47a8      	blx	r5
 802123a:	b00e      	add	sp, #56	; 0x38
 802123c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021240:	f010 0f04 	tst.w	r0, #4
 8021244:	e7d9      	b.n	80211fa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8021246:	6803      	ldr	r3, [r0, #0]
 8021248:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802124a:	4798      	blx	r3
 802124c:	f8b9 3000 	ldrh.w	r3, [r9]
 8021250:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8021254:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8021258:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 802125c:	fb03 1202 	mla	r2, r3, r2, r1
 8021260:	ebac 0c07 	sub.w	ip, ip, r7
 8021264:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8021268:	435e      	muls	r6, r3
 802126a:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 802126e:	2dff      	cmp	r5, #255	; 0xff
 8021270:	eba3 0707 	sub.w	r7, r3, r7
 8021274:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8021278:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802127c:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8021280:	d049      	beq.n	8021316 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8021282:	43eb      	mvns	r3, r5
 8021284:	fa1f f985 	uxth.w	r9, r5
 8021288:	b2db      	uxtb	r3, r3
 802128a:	42b0      	cmp	r0, r6
 802128c:	d266      	bcs.n	802135c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 802128e:	eb00 0a0e 	add.w	sl, r0, lr
 8021292:	4550      	cmp	r0, sl
 8021294:	4621      	mov	r1, r4
 8021296:	f104 0403 	add.w	r4, r4, #3
 802129a:	d25b      	bcs.n	8021354 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 802129c:	8802      	ldrh	r2, [r0, #0]
 802129e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80212a2:	ea4f 2822 	mov.w	r8, r2, asr #8
 80212a6:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 80212aa:	fb11 f109 	smulbb	r1, r1, r9
 80212ae:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 80212b2:	10d5      	asrs	r5, r2, #3
 80212b4:	fb08 1803 	mla	r8, r8, r3, r1
 80212b8:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 80212bc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80212c0:	fb11 f109 	smulbb	r1, r1, r9
 80212c4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80212c8:	fb05 1503 	mla	r5, r5, r3, r1
 80212cc:	00d2      	lsls	r2, r2, #3
 80212ce:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80212d2:	b2d2      	uxtb	r2, r2
 80212d4:	fb11 f109 	smulbb	r1, r1, r9
 80212d8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80212dc:	fa1f f888 	uxth.w	r8, r8
 80212e0:	fb02 1203 	mla	r2, r2, r3, r1
 80212e4:	b292      	uxth	r2, r2
 80212e6:	f108 0101 	add.w	r1, r8, #1
 80212ea:	b2ad      	uxth	r5, r5
 80212ec:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80212f0:	1c51      	adds	r1, r2, #1
 80212f2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80212f6:	1c69      	adds	r1, r5, #1
 80212f8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80212fc:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8021300:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021304:	096d      	lsrs	r5, r5, #5
 8021306:	ea42 0208 	orr.w	r2, r2, r8
 802130a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802130e:	432a      	orrs	r2, r5
 8021310:	f820 2b02 	strh.w	r2, [r0], #2
 8021314:	e7bd      	b.n	8021292 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8021316:	4a14      	ldr	r2, [pc, #80]	; (8021368 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8021318:	42b0      	cmp	r0, r6
 802131a:	d21f      	bcs.n	802135c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 802131c:	eb00 050e 	add.w	r5, r0, lr
 8021320:	42a8      	cmp	r0, r5
 8021322:	4621      	mov	r1, r4
 8021324:	f104 0403 	add.w	r4, r4, #3
 8021328:	d210      	bcs.n	802134c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 802132a:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 802132e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8021332:	00db      	lsls	r3, r3, #3
 8021334:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8021338:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802133c:	430b      	orrs	r3, r1
 802133e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8021342:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8021346:	f820 3b02 	strh.w	r3, [r0], #2
 802134a:	e7e9      	b.n	8021320 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 802134c:	4438      	add	r0, r7
 802134e:	eb01 040c 	add.w	r4, r1, ip
 8021352:	e7e1      	b.n	8021318 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8021354:	4438      	add	r0, r7
 8021356:	eb01 040c 	add.w	r4, r1, ip
 802135a:	e796      	b.n	802128a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 802135c:	4b03      	ldr	r3, [pc, #12]	; (802136c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 802135e:	6818      	ldr	r0, [r3, #0]
 8021360:	6803      	ldr	r3, [r0, #0]
 8021362:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021364:	4798      	blx	r3
 8021366:	e768      	b.n	802123a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8021368:	fffff800 	.word	0xfffff800
 802136c:	2000224c 	.word	0x2000224c
 8021370:	20002246 	.word	0x20002246

08021374 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8021374:	b4f0      	push	{r4, r5, r6, r7}
 8021376:	4616      	mov	r6, r2
 8021378:	2e01      	cmp	r6, #1
 802137a:	461c      	mov	r4, r3
 802137c:	460d      	mov	r5, r1
 802137e:	9a04      	ldr	r2, [sp, #16]
 8021380:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8021384:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8021388:	d012      	beq.n	80213b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 802138a:	d303      	bcc.n	8021394 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 802138c:	2e02      	cmp	r6, #2
 802138e:	d00a      	beq.n	80213a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8021390:	bcf0      	pop	{r4, r5, r6, r7}
 8021392:	4770      	bx	lr
 8021394:	6805      	ldr	r5, [r0, #0]
 8021396:	e9cd 3704 	strd	r3, r7, [sp, #16]
 802139a:	68ed      	ldr	r5, [r5, #12]
 802139c:	4613      	mov	r3, r2
 802139e:	46ac      	mov	ip, r5
 80213a0:	4622      	mov	r2, r4
 80213a2:	bcf0      	pop	{r4, r5, r6, r7}
 80213a4:	4760      	bx	ip
 80213a6:	4621      	mov	r1, r4
 80213a8:	4628      	mov	r0, r5
 80213aa:	bcf0      	pop	{r4, r5, r6, r7}
 80213ac:	f7ff bd94 	b.w	8020ed8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80213b0:	4621      	mov	r1, r4
 80213b2:	4628      	mov	r0, r5
 80213b4:	bcf0      	pop	{r4, r5, r6, r7}
 80213b6:	f7ff bee5 	b.w	8021184 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

080213bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80213bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80213c0:	4681      	mov	r9, r0
 80213c2:	b093      	sub	sp, #76	; 0x4c
 80213c4:	6810      	ldr	r0, [r2, #0]
 80213c6:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 80213ca:	4f6d      	ldr	r7, [pc, #436]	; (8021580 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 80213cc:	4688      	mov	r8, r1
 80213ce:	6851      	ldr	r1, [r2, #4]
 80213d0:	ac0e      	add	r4, sp, #56	; 0x38
 80213d2:	c403      	stmia	r4!, {r0, r1}
 80213d4:	6818      	ldr	r0, [r3, #0]
 80213d6:	6859      	ldr	r1, [r3, #4]
 80213d8:	ac10      	add	r4, sp, #64	; 0x40
 80213da:	4616      	mov	r6, r2
 80213dc:	c403      	stmia	r4!, {r0, r1}
 80213de:	a80e      	add	r0, sp, #56	; 0x38
 80213e0:	f7f7 fdf6 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80213e4:	4631      	mov	r1, r6
 80213e6:	a810      	add	r0, sp, #64	; 0x40
 80213e8:	f7f7 fe36 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80213ec:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80213f0:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80213f4:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80213f8:	4e62      	ldr	r6, [pc, #392]	; (8021584 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80213fa:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 80213fe:	6830      	ldr	r0, [r6, #0]
 8021400:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8021404:	fb11 2103 	smlabb	r1, r1, r3, r2
 8021408:	4489      	add	r9, r1
 802140a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 802140e:	440a      	add	r2, r1
 8021410:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8021414:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8021418:	4413      	add	r3, r2
 802141a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 802141e:	6803      	ldr	r3, [r0, #0]
 8021420:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021422:	4798      	blx	r3
 8021424:	f010 0f80 	tst.w	r0, #128	; 0x80
 8021428:	6830      	ldr	r0, [r6, #0]
 802142a:	d01d      	beq.n	8021468 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 802142c:	2200      	movs	r2, #0
 802142e:	6801      	ldr	r1, [r0, #0]
 8021430:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8021434:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8021438:	220b      	movs	r2, #11
 802143a:	9207      	str	r2, [sp, #28]
 802143c:	883a      	ldrh	r2, [r7, #0]
 802143e:	9206      	str	r2, [sp, #24]
 8021440:	2201      	movs	r2, #1
 8021442:	e9cd a204 	strd	sl, r2, [sp, #16]
 8021446:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 802144a:	9203      	str	r2, [sp, #12]
 802144c:	b2a4      	uxth	r4, r4
 802144e:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8021452:	9200      	str	r2, [sp, #0]
 8021454:	b2ad      	uxth	r5, r5
 8021456:	9502      	str	r5, [sp, #8]
 8021458:	9401      	str	r4, [sp, #4]
 802145a:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 802145c:	4642      	mov	r2, r8
 802145e:	4649      	mov	r1, r9
 8021460:	47a0      	blx	r4
 8021462:	b013      	add	sp, #76	; 0x4c
 8021464:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021468:	6803      	ldr	r3, [r0, #0]
 802146a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802146c:	4798      	blx	r3
 802146e:	883b      	ldrh	r3, [r7, #0]
 8021470:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8021474:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8021478:	fb03 1202 	mla	r2, r3, r2, r1
 802147c:	435d      	muls	r5, r3
 802147e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8021482:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8021486:	920c      	str	r2, [sp, #48]	; 0x30
 8021488:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 802148c:	1b12      	subs	r2, r2, r4
 802148e:	920d      	str	r2, [sp, #52]	; 0x34
 8021490:	0062      	lsls	r2, r4, #1
 8021492:	1b1c      	subs	r4, r3, r4
 8021494:	0063      	lsls	r3, r4, #1
 8021496:	920a      	str	r2, [sp, #40]	; 0x28
 8021498:	930b      	str	r3, [sp, #44]	; 0x2c
 802149a:	f04f 0e04 	mov.w	lr, #4
 802149e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80214a0:	4298      	cmp	r0, r3
 80214a2:	d266      	bcs.n	8021572 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 80214a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80214a6:	eb00 0b03 	add.w	fp, r0, r3
 80214aa:	4558      	cmp	r0, fp
 80214ac:	d25c      	bcs.n	8021568 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 80214ae:	f819 3b01 	ldrb.w	r3, [r9], #1
 80214b2:	fb1e e303 	smlabb	r3, lr, r3, lr
 80214b6:	f858 2003 	ldr.w	r2, [r8, r3]
 80214ba:	0e11      	lsrs	r1, r2, #24
 80214bc:	d012      	beq.n	80214e4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80214be:	29ff      	cmp	r1, #255	; 0xff
 80214c0:	ea4f 2712 	mov.w	r7, r2, lsr #8
 80214c4:	d110      	bne.n	80214e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80214c6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80214ca:	d10d      	bne.n	80214e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80214cc:	0953      	lsrs	r3, r2, #5
 80214ce:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 80214d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80214d6:	f027 0707 	bic.w	r7, r7, #7
 80214da:	431f      	orrs	r7, r3
 80214dc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80214e0:	433a      	orrs	r2, r7
 80214e2:	8002      	strh	r2, [r0, #0]
 80214e4:	3002      	adds	r0, #2
 80214e6:	e7e0      	b.n	80214aa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 80214e8:	fb0a f101 	mul.w	r1, sl, r1
 80214ec:	8806      	ldrh	r6, [r0, #0]
 80214ee:	1c4b      	adds	r3, r1, #1
 80214f0:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80214f4:	1235      	asrs	r5, r6, #8
 80214f6:	10f4      	asrs	r4, r6, #3
 80214f8:	121b      	asrs	r3, r3, #8
 80214fa:	00f6      	lsls	r6, r6, #3
 80214fc:	b299      	uxth	r1, r3
 80214fe:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8021502:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021506:	b2f6      	uxtb	r6, r6
 8021508:	43db      	mvns	r3, r3
 802150a:	b2d2      	uxtb	r2, r2
 802150c:	b2db      	uxtb	r3, r3
 802150e:	fb1c fc01 	smulbb	ip, ip, r1
 8021512:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8021516:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 802151a:	fb12 f201 	smulbb	r2, r2, r1
 802151e:	fb05 c503 	mla	r5, r5, r3, ip
 8021522:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8021526:	b2ff      	uxtb	r7, r7
 8021528:	fb06 2203 	mla	r2, r6, r3, r2
 802152c:	b2ad      	uxth	r5, r5
 802152e:	fb17 f701 	smulbb	r7, r7, r1
 8021532:	b292      	uxth	r2, r2
 8021534:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8021538:	fb04 7403 	mla	r4, r4, r3, r7
 802153c:	f105 0c01 	add.w	ip, r5, #1
 8021540:	1c57      	adds	r7, r2, #1
 8021542:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8021546:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802154a:	b2a4      	uxth	r4, r4
 802154c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021550:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021554:	433d      	orrs	r5, r7
 8021556:	1c67      	adds	r7, r4, #1
 8021558:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 802155c:	0964      	lsrs	r4, r4, #5
 802155e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8021562:	4325      	orrs	r5, r4
 8021564:	8005      	strh	r5, [r0, #0]
 8021566:	e7bd      	b.n	80214e4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8021568:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802156a:	4418      	add	r0, r3
 802156c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802156e:	4499      	add	r9, r3
 8021570:	e795      	b.n	802149e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8021572:	4b04      	ldr	r3, [pc, #16]	; (8021584 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8021574:	6818      	ldr	r0, [r3, #0]
 8021576:	6803      	ldr	r3, [r0, #0]
 8021578:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802157a:	4798      	blx	r3
 802157c:	e771      	b.n	8021462 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 802157e:	bf00      	nop
 8021580:	20002246 	.word	0x20002246
 8021584:	2000224c 	.word	0x2000224c

08021588 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8021588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802158c:	b087      	sub	sp, #28
 802158e:	4680      	mov	r8, r0
 8021590:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8021594:	460d      	mov	r5, r1
 8021596:	4614      	mov	r4, r2
 8021598:	2e00      	cmp	r6, #0
 802159a:	f000 80b9 	beq.w	8021710 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 802159e:	6810      	ldr	r0, [r2, #0]
 80215a0:	6851      	ldr	r1, [r2, #4]
 80215a2:	af02      	add	r7, sp, #8
 80215a4:	c703      	stmia	r7!, {r0, r1}
 80215a6:	6818      	ldr	r0, [r3, #0]
 80215a8:	6859      	ldr	r1, [r3, #4]
 80215aa:	af04      	add	r7, sp, #16
 80215ac:	c703      	stmia	r7!, {r0, r1}
 80215ae:	a802      	add	r0, sp, #8
 80215b0:	f7f7 fd0e 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80215b4:	4621      	mov	r1, r4
 80215b6:	a804      	add	r0, sp, #16
 80215b8:	f7f7 fd4e 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80215bc:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80215c0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80215c4:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 80215c8:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 80215cc:	fb14 2103 	smlabb	r1, r4, r3, r2
 80215d0:	eb08 0401 	add.w	r4, r8, r1
 80215d4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80215d8:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80215dc:	440a      	add	r2, r1
 80215de:	f8ad 2010 	strh.w	r2, [sp, #16]
 80215e2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80215e6:	4413      	add	r3, r2
 80215e8:	f8ad 3012 	strh.w	r3, [sp, #18]
 80215ec:	4b4a      	ldr	r3, [pc, #296]	; (8021718 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80215ee:	6818      	ldr	r0, [r3, #0]
 80215f0:	6803      	ldr	r3, [r0, #0]
 80215f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80215f4:	4798      	blx	r3
 80215f6:	4b49      	ldr	r3, [pc, #292]	; (802171c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 80215f8:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80215fc:	881a      	ldrh	r2, [r3, #0]
 80215fe:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8021602:	2eff      	cmp	r6, #255	; 0xff
 8021604:	fb02 c101 	mla	r1, r2, r1, ip
 8021608:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 802160c:	fb02 f207 	mul.w	r2, r2, r7
 8021610:	f105 0104 	add.w	r1, r5, #4
 8021614:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8021618:	461d      	mov	r5, r3
 802161a:	d05a      	beq.n	80216d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 802161c:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8021620:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8021624:	b2b6      	uxth	r6, r6
 8021626:	fa1f fe8e 	uxth.w	lr, lr
 802162a:	9301      	str	r3, [sp, #4]
 802162c:	4282      	cmp	r2, r0
 802162e:	d96a      	bls.n	8021706 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8021630:	eb00 0b0a 	add.w	fp, r0, sl
 8021634:	4583      	cmp	fp, r0
 8021636:	d940      	bls.n	80216ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8021638:	f814 3b01 	ldrb.w	r3, [r4], #1
 802163c:	8805      	ldrh	r5, [r0, #0]
 802163e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8021642:	122f      	asrs	r7, r5, #8
 8021644:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8021648:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 802164c:	fb17 f70e 	smulbb	r7, r7, lr
 8021650:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8021654:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8021658:	00ed      	lsls	r5, r5, #3
 802165a:	fb0c 7c06 	mla	ip, ip, r6, r7
 802165e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8021662:	10df      	asrs	r7, r3, #3
 8021664:	b2ed      	uxtb	r5, r5
 8021666:	00db      	lsls	r3, r3, #3
 8021668:	fa1f fc8c 	uxth.w	ip, ip
 802166c:	fb19 f90e 	smulbb	r9, r9, lr
 8021670:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021674:	b2db      	uxtb	r3, r3
 8021676:	fb15 f50e 	smulbb	r5, r5, lr
 802167a:	fb07 9706 	mla	r7, r7, r6, r9
 802167e:	fb03 5306 	mla	r3, r3, r6, r5
 8021682:	f10c 0901 	add.w	r9, ip, #1
 8021686:	b29b      	uxth	r3, r3
 8021688:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 802168c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8021690:	f103 0c01 	add.w	ip, r3, #1
 8021694:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8021698:	b2bf      	uxth	r7, r7
 802169a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802169e:	ea4c 0c09 	orr.w	ip, ip, r9
 80216a2:	f107 0901 	add.w	r9, r7, #1
 80216a6:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80216aa:	097f      	lsrs	r7, r7, #5
 80216ac:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80216b0:	ea4c 0c07 	orr.w	ip, ip, r7
 80216b4:	f820 cb02 	strh.w	ip, [r0], #2
 80216b8:	e7bc      	b.n	8021634 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 80216ba:	9b01      	ldr	r3, [sp, #4]
 80216bc:	881b      	ldrh	r3, [r3, #0]
 80216be:	eba3 0308 	sub.w	r3, r3, r8
 80216c2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80216c6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80216ca:	eba3 0308 	sub.w	r3, r3, r8
 80216ce:	441c      	add	r4, r3
 80216d0:	e7ac      	b.n	802162c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 80216d2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80216d6:	4282      	cmp	r2, r0
 80216d8:	d915      	bls.n	8021706 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80216da:	eb00 060a 	add.w	r6, r0, sl
 80216de:	4286      	cmp	r6, r0
 80216e0:	d906      	bls.n	80216f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 80216e2:	f814 3b01 	ldrb.w	r3, [r4], #1
 80216e6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80216ea:	f820 3b02 	strh.w	r3, [r0], #2
 80216ee:	e7f6      	b.n	80216de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 80216f0:	882b      	ldrh	r3, [r5, #0]
 80216f2:	eba3 0308 	sub.w	r3, r3, r8
 80216f6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80216fa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80216fe:	eba3 0308 	sub.w	r3, r3, r8
 8021702:	441c      	add	r4, r3
 8021704:	e7e7      	b.n	80216d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8021706:	4b04      	ldr	r3, [pc, #16]	; (8021718 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8021708:	6818      	ldr	r0, [r3, #0]
 802170a:	6803      	ldr	r3, [r0, #0]
 802170c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802170e:	4798      	blx	r3
 8021710:	b007      	add	sp, #28
 8021712:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021716:	bf00      	nop
 8021718:	2000224c 	.word	0x2000224c
 802171c:	20002246 	.word	0x20002246

08021720 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8021720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021724:	b091      	sub	sp, #68	; 0x44
 8021726:	4680      	mov	r8, r0
 8021728:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 802172c:	460f      	mov	r7, r1
 802172e:	4614      	mov	r4, r2
 8021730:	2d00      	cmp	r5, #0
 8021732:	d051      	beq.n	80217d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8021734:	6810      	ldr	r0, [r2, #0]
 8021736:	6851      	ldr	r1, [r2, #4]
 8021738:	f8df 9200 	ldr.w	r9, [pc, #512]	; 802193c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 802173c:	ae0c      	add	r6, sp, #48	; 0x30
 802173e:	c603      	stmia	r6!, {r0, r1}
 8021740:	6818      	ldr	r0, [r3, #0]
 8021742:	6859      	ldr	r1, [r3, #4]
 8021744:	ae0e      	add	r6, sp, #56	; 0x38
 8021746:	c603      	stmia	r6!, {r0, r1}
 8021748:	a80c      	add	r0, sp, #48	; 0x30
 802174a:	f7f7 fc41 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802174e:	4621      	mov	r1, r4
 8021750:	a80e      	add	r0, sp, #56	; 0x38
 8021752:	f7f7 fc81 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021756:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 802175a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 802175e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8021762:	f8d9 0000 	ldr.w	r0, [r9]
 8021766:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 802176a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 802176e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8021772:	eb08 0401 	add.w	r4, r8, r1
 8021776:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 802177a:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8021940 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 802177e:	440a      	add	r2, r1
 8021780:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8021784:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8021788:	4413      	add	r3, r2
 802178a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 802178e:	6803      	ldr	r3, [r0, #0]
 8021790:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021792:	4798      	blx	r3
 8021794:	f010 0f80 	tst.w	r0, #128	; 0x80
 8021798:	f8d9 0000 	ldr.w	r0, [r9]
 802179c:	d01f      	beq.n	80217de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 802179e:	2200      	movs	r2, #0
 80217a0:	6801      	ldr	r1, [r0, #0]
 80217a2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80217a6:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80217aa:	220b      	movs	r2, #11
 80217ac:	9207      	str	r2, [sp, #28]
 80217ae:	f8b8 2000 	ldrh.w	r2, [r8]
 80217b2:	9206      	str	r2, [sp, #24]
 80217b4:	2201      	movs	r2, #1
 80217b6:	e9cd 5204 	strd	r5, r2, [sp, #16]
 80217ba:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80217be:	9203      	str	r2, [sp, #12]
 80217c0:	fa1f f28a 	uxth.w	r2, sl
 80217c4:	9202      	str	r2, [sp, #8]
 80217c6:	b2b6      	uxth	r6, r6
 80217c8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80217cc:	9200      	str	r2, [sp, #0]
 80217ce:	9601      	str	r6, [sp, #4]
 80217d0:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80217d2:	463a      	mov	r2, r7
 80217d4:	4621      	mov	r1, r4
 80217d6:	47a8      	blx	r5
 80217d8:	b011      	add	sp, #68	; 0x44
 80217da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80217de:	6803      	ldr	r3, [r0, #0]
 80217e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80217e2:	4798      	blx	r3
 80217e4:	f8b8 2000 	ldrh.w	r2, [r8]
 80217e8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80217ec:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80217f0:	2dff      	cmp	r5, #255	; 0xff
 80217f2:	fb02 1303 	mla	r3, r2, r3, r1
 80217f6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80217fa:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80217fe:	fb0a fa02 	mul.w	sl, sl, r2
 8021802:	d062      	beq.n	80218ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8021804:	ea6f 0c05 	mvn.w	ip, r5
 8021808:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 802180c:	930a      	str	r3, [sp, #40]	; 0x28
 802180e:	b2ad      	uxth	r5, r5
 8021810:	fa5f fc8c 	uxtb.w	ip, ip
 8021814:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8021818:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802181a:	4298      	cmp	r0, r3
 802181c:	f080 8085 	bcs.w	802192a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8021820:	eb00 0b09 	add.w	fp, r0, r9
 8021824:	4558      	cmp	r0, fp
 8021826:	d246      	bcs.n	80218b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8021828:	f814 eb01 	ldrb.w	lr, [r4], #1
 802182c:	2303      	movs	r3, #3
 802182e:	2204      	movs	r2, #4
 8021830:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8021834:	eb07 0a0e 	add.w	sl, r7, lr
 8021838:	8803      	ldrh	r3, [r0, #0]
 802183a:	f89a 8002 	ldrb.w	r8, [sl, #2]
 802183e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8021842:	1219      	asrs	r1, r3, #8
 8021844:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021848:	fb18 f805 	smulbb	r8, r8, r5
 802184c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8021850:	10da      	asrs	r2, r3, #3
 8021852:	fb01 810c 	mla	r1, r1, ip, r8
 8021856:	00db      	lsls	r3, r3, #3
 8021858:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802185c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021860:	b2db      	uxtb	r3, r3
 8021862:	fb18 f805 	smulbb	r8, r8, r5
 8021866:	fb1e fe05 	smulbb	lr, lr, r5
 802186a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 802186e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8021872:	b289      	uxth	r1, r1
 8021874:	fb02 820c 	mla	r2, r2, ip, r8
 8021878:	fb03 e30c 	mla	r3, r3, ip, lr
 802187c:	b292      	uxth	r2, r2
 802187e:	b29b      	uxth	r3, r3
 8021880:	f101 0801 	add.w	r8, r1, #1
 8021884:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8021888:	f103 0e01 	add.w	lr, r3, #1
 802188c:	f102 0801 	add.w	r8, r2, #1
 8021890:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8021894:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8021898:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802189c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80218a0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80218a4:	ea4e 0101 	orr.w	r1, lr, r1
 80218a8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80218ac:	ea41 0108 	orr.w	r1, r1, r8
 80218b0:	f820 1b02 	strh.w	r1, [r0], #2
 80218b4:	e7b6      	b.n	8021824 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80218b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80218b8:	881b      	ldrh	r3, [r3, #0]
 80218ba:	1b9b      	subs	r3, r3, r6
 80218bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80218c0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80218c4:	1b9b      	subs	r3, r3, r6
 80218c6:	441c      	add	r4, r3
 80218c8:	e7a6      	b.n	8021818 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80218ca:	491b      	ldr	r1, [pc, #108]	; (8021938 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 80218cc:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80218d0:	2203      	movs	r2, #3
 80218d2:	2504      	movs	r5, #4
 80218d4:	4550      	cmp	r0, sl
 80218d6:	d228      	bcs.n	802192a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80218d8:	eb00 0c09 	add.w	ip, r0, r9
 80218dc:	4560      	cmp	r0, ip
 80218de:	4623      	mov	r3, r4
 80218e0:	d219      	bcs.n	8021916 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80218e2:	f893 e000 	ldrb.w	lr, [r3]
 80218e6:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80218ea:	eb07 0b0e 	add.w	fp, r7, lr
 80218ee:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80218f2:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80218f6:	f89b b001 	ldrb.w	fp, [fp, #1]
 80218fa:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80218fe:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8021902:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8021906:	ea43 030b 	orr.w	r3, r3, fp
 802190a:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 802190e:	3401      	adds	r4, #1
 8021910:	f820 3b02 	strh.w	r3, [r0], #2
 8021914:	e7e2      	b.n	80218dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8021916:	f8b8 3000 	ldrh.w	r3, [r8]
 802191a:	1b9b      	subs	r3, r3, r6
 802191c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021920:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8021924:	1b9b      	subs	r3, r3, r6
 8021926:	441c      	add	r4, r3
 8021928:	e7d4      	b.n	80218d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 802192a:	4b04      	ldr	r3, [pc, #16]	; (802193c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 802192c:	6818      	ldr	r0, [r3, #0]
 802192e:	6803      	ldr	r3, [r0, #0]
 8021930:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021932:	4798      	blx	r3
 8021934:	e750      	b.n	80217d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8021936:	bf00      	nop
 8021938:	fffff800 	.word	0xfffff800
 802193c:	2000224c 	.word	0x2000224c
 8021940:	20002246 	.word	0x20002246

08021944 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8021944:	b4f0      	push	{r4, r5, r6, r7}
 8021946:	460c      	mov	r4, r1
 8021948:	4611      	mov	r1, r2
 802194a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 802194e:	780f      	ldrb	r7, [r1, #0]
 8021950:	784e      	ldrb	r6, [r1, #1]
 8021952:	2f01      	cmp	r7, #1
 8021954:	461a      	mov	r2, r3
 8021956:	9b04      	ldr	r3, [sp, #16]
 8021958:	d036      	beq.n	80219c8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 802195a:	d31e      	bcc.n	802199a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 802195c:	2f02      	cmp	r7, #2
 802195e:	d14a      	bne.n	80219f6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021960:	2e03      	cmp	r6, #3
 8021962:	d848      	bhi.n	80219f6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021964:	e8df f006 	tbb	[pc, r6]
 8021968:	16140702 	.word	0x16140702
 802196c:	9504      	str	r5, [sp, #16]
 802196e:	4620      	mov	r0, r4
 8021970:	bcf0      	pop	{r4, r5, r6, r7}
 8021972:	f7ff be09 	b.w	8021588 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8021976:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8021978:	2800      	cmp	r0, #0
 802197a:	d03c      	beq.n	80219f6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 802197c:	6806      	ldr	r6, [r0, #0]
 802197e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8021982:	68b5      	ldr	r5, [r6, #8]
 8021984:	4613      	mov	r3, r2
 8021986:	46ac      	mov	ip, r5
 8021988:	460a      	mov	r2, r1
 802198a:	4621      	mov	r1, r4
 802198c:	bcf0      	pop	{r4, r5, r6, r7}
 802198e:	4760      	bx	ip
 8021990:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8021992:	e7f1      	b.n	8021978 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8021994:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8021998:	e7ee      	b.n	8021978 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 802199a:	2e03      	cmp	r6, #3
 802199c:	d82b      	bhi.n	80219f6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 802199e:	e8df f006 	tbb	[pc, r6]
 80219a2:	0702      	.short	0x0702
 80219a4:	100e      	.short	0x100e
 80219a6:	9504      	str	r5, [sp, #16]
 80219a8:	4620      	mov	r0, r4
 80219aa:	bcf0      	pop	{r4, r5, r6, r7}
 80219ac:	f7ff bd06 	b.w	80213bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80219b0:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80219b2:	b300      	cbz	r0, 80219f6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80219b4:	6806      	ldr	r6, [r0, #0]
 80219b6:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80219ba:	68f5      	ldr	r5, [r6, #12]
 80219bc:	e7e2      	b.n	8021984 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80219be:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 80219c0:	e7f7      	b.n	80219b2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 80219c2:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 80219c6:	e7f4      	b.n	80219b2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 80219c8:	2e03      	cmp	r6, #3
 80219ca:	d814      	bhi.n	80219f6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80219cc:	e8df f006 	tbb	[pc, r6]
 80219d0:	100e0702 	.word	0x100e0702
 80219d4:	9504      	str	r5, [sp, #16]
 80219d6:	4620      	mov	r0, r4
 80219d8:	bcf0      	pop	{r4, r5, r6, r7}
 80219da:	f7ff bea1 	b.w	8021720 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80219de:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80219e0:	b148      	cbz	r0, 80219f6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80219e2:	6806      	ldr	r6, [r0, #0]
 80219e4:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80219e8:	6935      	ldr	r5, [r6, #16]
 80219ea:	e7cb      	b.n	8021984 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80219ec:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 80219ee:	e7f7      	b.n	80219e0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 80219f0:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 80219f4:	e7f4      	b.n	80219e0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 80219f6:	bcf0      	pop	{r4, r5, r6, r7}
 80219f8:	4770      	bx	lr
	...

080219fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80219fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a00:	4604      	mov	r4, r0
 8021a02:	b087      	sub	sp, #28
 8021a04:	6810      	ldr	r0, [r2, #0]
 8021a06:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8021a0a:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8021c44 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8021a0e:	460e      	mov	r6, r1
 8021a10:	6851      	ldr	r1, [r2, #4]
 8021a12:	ad02      	add	r5, sp, #8
 8021a14:	c503      	stmia	r5!, {r0, r1}
 8021a16:	6818      	ldr	r0, [r3, #0]
 8021a18:	6859      	ldr	r1, [r3, #4]
 8021a1a:	ad04      	add	r5, sp, #16
 8021a1c:	4617      	mov	r7, r2
 8021a1e:	c503      	stmia	r5!, {r0, r1}
 8021a20:	a802      	add	r0, sp, #8
 8021a22:	f7f7 fad5 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021a26:	4639      	mov	r1, r7
 8021a28:	a804      	add	r0, sp, #16
 8021a2a:	f7f7 fb15 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021a2e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8021a32:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8021a36:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8021a3a:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8021a3e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8021a42:	fb11 2103 	smlabb	r1, r1, r3, r2
 8021a46:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8021a4a:	440e      	add	r6, r1
 8021a4c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8021a50:	440a      	add	r2, r1
 8021a52:	f8ad 2010 	strh.w	r2, [sp, #16]
 8021a56:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8021a5a:	4413      	add	r3, r2
 8021a5c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8021a60:	4b77      	ldr	r3, [pc, #476]	; (8021c40 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8021a62:	6818      	ldr	r0, [r3, #0]
 8021a64:	6803      	ldr	r3, [r0, #0]
 8021a66:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021a68:	4798      	blx	r3
 8021a6a:	f8b9 b000 	ldrh.w	fp, [r9]
 8021a6e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8021a72:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8021a76:	fb0b 2303 	mla	r3, fp, r3, r2
 8021a7a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021a7e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8021a82:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8021a86:	fb05 f50b 	mul.w	r5, r5, fp
 8021a8a:	9300      	str	r3, [sp, #0]
 8021a8c:	d069      	beq.n	8021b62 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8021a8e:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8021a92:	4558      	cmp	r0, fp
 8021a94:	f080 80cc 	bcs.w	8021c30 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8021a98:	9b00      	ldr	r3, [sp, #0]
 8021a9a:	18c3      	adds	r3, r0, r3
 8021a9c:	9301      	str	r3, [sp, #4]
 8021a9e:	4631      	mov	r1, r6
 8021aa0:	9b01      	ldr	r3, [sp, #4]
 8021aa2:	4298      	cmp	r0, r3
 8021aa4:	d24f      	bcs.n	8021b46 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8021aa6:	f811 2b01 	ldrb.w	r2, [r1], #1
 8021aaa:	2a00      	cmp	r2, #0
 8021aac:	d048      	beq.n	8021b40 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8021aae:	fb0a f202 	mul.w	r2, sl, r2
 8021ab2:	1c53      	adds	r3, r2, #1
 8021ab4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021ab8:	121b      	asrs	r3, r3, #8
 8021aba:	d041      	beq.n	8021b40 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8021abc:	8802      	ldrh	r2, [r0, #0]
 8021abe:	f8b4 c000 	ldrh.w	ip, [r4]
 8021ac2:	b29e      	uxth	r6, r3
 8021ac4:	1215      	asrs	r5, r2, #8
 8021ac6:	43db      	mvns	r3, r3
 8021ac8:	b2db      	uxtb	r3, r3
 8021aca:	ea4f 272c 	mov.w	r7, ip, asr #8
 8021ace:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021ad2:	fb15 f503 	smulbb	r5, r5, r3
 8021ad6:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8021ada:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8021ade:	00d2      	lsls	r2, r2, #3
 8021ae0:	fb07 5706 	mla	r7, r7, r6, r5
 8021ae4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8021ae8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8021aec:	b2d2      	uxtb	r2, r2
 8021aee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021af2:	b2bf      	uxth	r7, r7
 8021af4:	fb1e fe03 	smulbb	lr, lr, r3
 8021af8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8021afc:	fa5f fc8c 	uxtb.w	ip, ip
 8021b00:	fb12 f203 	smulbb	r2, r2, r3
 8021b04:	fb05 e506 	mla	r5, r5, r6, lr
 8021b08:	fb0c 2c06 	mla	ip, ip, r6, r2
 8021b0c:	f107 0e01 	add.w	lr, r7, #1
 8021b10:	fa1f fc8c 	uxth.w	ip, ip
 8021b14:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8021b18:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8021b1c:	f10c 0701 	add.w	r7, ip, #1
 8021b20:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021b24:	b2ad      	uxth	r5, r5
 8021b26:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021b2a:	ea47 070e 	orr.w	r7, r7, lr
 8021b2e:	f105 0e01 	add.w	lr, r5, #1
 8021b32:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8021b36:	096d      	lsrs	r5, r5, #5
 8021b38:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021b3c:	432f      	orrs	r7, r5
 8021b3e:	8007      	strh	r7, [r0, #0]
 8021b40:	3002      	adds	r0, #2
 8021b42:	3402      	adds	r4, #2
 8021b44:	e7ac      	b.n	8021aa0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8021b46:	f8b9 3000 	ldrh.w	r3, [r9]
 8021b4a:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8021b4e:	eba3 0308 	sub.w	r3, r3, r8
 8021b52:	eba6 0608 	sub.w	r6, r6, r8
 8021b56:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8021b5a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021b5e:	440e      	add	r6, r1
 8021b60:	e797      	b.n	8021a92 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8021b62:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8021b66:	42a8      	cmp	r0, r5
 8021b68:	d262      	bcs.n	8021c30 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8021b6a:	9b00      	ldr	r3, [sp, #0]
 8021b6c:	4631      	mov	r1, r6
 8021b6e:	eb00 0b03 	add.w	fp, r0, r3
 8021b72:	4558      	cmp	r0, fp
 8021b74:	d24e      	bcs.n	8021c14 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8021b76:	f811 3b01 	ldrb.w	r3, [r1], #1
 8021b7a:	b12b      	cbz	r3, 8021b88 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8021b7c:	2bff      	cmp	r3, #255	; 0xff
 8021b7e:	f8b4 e000 	ldrh.w	lr, [r4]
 8021b82:	d104      	bne.n	8021b8e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8021b84:	f8a0 e000 	strh.w	lr, [r0]
 8021b88:	3002      	adds	r0, #2
 8021b8a:	3402      	adds	r4, #2
 8021b8c:	e7f1      	b.n	8021b72 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8021b8e:	8802      	ldrh	r2, [r0, #0]
 8021b90:	b29f      	uxth	r7, r3
 8021b92:	1216      	asrs	r6, r2, #8
 8021b94:	43db      	mvns	r3, r3
 8021b96:	b2db      	uxtb	r3, r3
 8021b98:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8021b9c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8021ba0:	fb16 f603 	smulbb	r6, r6, r3
 8021ba4:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8021ba8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8021bac:	00d2      	lsls	r2, r2, #3
 8021bae:	fb0c 6c07 	mla	ip, ip, r7, r6
 8021bb2:	b2d2      	uxtb	r2, r2
 8021bb4:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8021bb8:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8021bbc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8021bc0:	fb1a fa03 	smulbb	sl, sl, r3
 8021bc4:	fa1f fc8c 	uxth.w	ip, ip
 8021bc8:	fb12 f303 	smulbb	r3, r2, r3
 8021bcc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8021bd0:	fa5f fe8e 	uxtb.w	lr, lr
 8021bd4:	fb06 a607 	mla	r6, r6, r7, sl
 8021bd8:	f10c 0201 	add.w	r2, ip, #1
 8021bdc:	fb0e 3307 	mla	r3, lr, r7, r3
 8021be0:	b2b6      	uxth	r6, r6
 8021be2:	b29b      	uxth	r3, r3
 8021be4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8021be8:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8021bec:	f106 0a01 	add.w	sl, r6, #1
 8021bf0:	f103 0c01 	add.w	ip, r3, #1
 8021bf4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8021bf8:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8021bfc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021c00:	0976      	lsrs	r6, r6, #5
 8021c02:	ea4c 0c02 	orr.w	ip, ip, r2
 8021c06:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8021c0a:	ea4c 0c06 	orr.w	ip, ip, r6
 8021c0e:	f8a0 c000 	strh.w	ip, [r0]
 8021c12:	e7b9      	b.n	8021b88 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8021c14:	f8b9 3000 	ldrh.w	r3, [r9]
 8021c18:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8021c1c:	eba3 0308 	sub.w	r3, r3, r8
 8021c20:	eba6 0608 	sub.w	r6, r6, r8
 8021c24:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8021c28:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021c2c:	440e      	add	r6, r1
 8021c2e:	e79a      	b.n	8021b66 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8021c30:	4b03      	ldr	r3, [pc, #12]	; (8021c40 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8021c32:	6818      	ldr	r0, [r3, #0]
 8021c34:	6803      	ldr	r3, [r0, #0]
 8021c36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021c38:	4798      	blx	r3
 8021c3a:	b007      	add	sp, #28
 8021c3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021c40:	2000224c 	.word	0x2000224c
 8021c44:	20002246 	.word	0x20002246

08021c48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8021c48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021c4c:	b089      	sub	sp, #36	; 0x24
 8021c4e:	4682      	mov	sl, r0
 8021c50:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8021c54:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021c56:	460f      	mov	r7, r1
 8021c58:	4691      	mov	r9, r2
 8021c5a:	4698      	mov	r8, r3
 8021c5c:	2e00      	cmp	r6, #0
 8021c5e:	d03d      	beq.n	8021cdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021c60:	4608      	mov	r0, r1
 8021c62:	f7fa fe61 	bl	801c928 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8021c66:	4605      	mov	r5, r0
 8021c68:	4638      	mov	r0, r7
 8021c6a:	f7fa fe91 	bl	801c990 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8021c6e:	f8ad 000e 	strh.w	r0, [sp, #14]
 8021c72:	4638      	mov	r0, r7
 8021c74:	f8ad 9008 	strh.w	r9, [sp, #8]
 8021c78:	f8ad 500c 	strh.w	r5, [sp, #12]
 8021c7c:	f8ad 800a 	strh.w	r8, [sp, #10]
 8021c80:	f7fa ff3e 	bl	801cb00 <_ZNK8touchgfx6Bitmap7getDataEv>
 8021c84:	4605      	mov	r5, r0
 8021c86:	4638      	mov	r0, r7
 8021c88:	f7fa ff6a 	bl	801cb60 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8021c8c:	4681      	mov	r9, r0
 8021c8e:	4638      	mov	r0, r7
 8021c90:	f7fa ffba 	bl	801cc08 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8021c94:	280b      	cmp	r0, #11
 8021c96:	d821      	bhi.n	8021cdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021c98:	e8df f000 	tbb	[pc, r0]
 8021c9c:	2006aebe 	.word	0x2006aebe
 8021ca0:	20202020 	.word	0x20202020
 8021ca4:	b5202020 	.word	0xb5202020
 8021ca8:	4bb0      	ldr	r3, [pc, #704]	; (8021f6c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 8021caa:	6818      	ldr	r0, [r3, #0]
 8021cac:	6803      	ldr	r3, [r0, #0]
 8021cae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021cb0:	4798      	blx	r3
 8021cb2:	2eff      	cmp	r6, #255	; 0xff
 8021cb4:	d101      	bne.n	8021cba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8021cb6:	0683      	lsls	r3, r0, #26
 8021cb8:	d506      	bpl.n	8021cc8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 8021cba:	4633      	mov	r3, r6
 8021cbc:	4622      	mov	r2, r4
 8021cbe:	a902      	add	r1, sp, #8
 8021cc0:	4628      	mov	r0, r5
 8021cc2:	f7ff f909 	bl	8020ed8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021cc6:	e009      	b.n	8021cdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021cc8:	4638      	mov	r0, r7
 8021cca:	f7fa fee1 	bl	801ca90 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8021cce:	b940      	cbnz	r0, 8021ce2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8021cd0:	4623      	mov	r3, r4
 8021cd2:	aa02      	add	r2, sp, #8
 8021cd4:	4629      	mov	r1, r5
 8021cd6:	4650      	mov	r0, sl
 8021cd8:	f7ff f9e4 	bl	80210a4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8021cdc:	b009      	add	sp, #36	; 0x24
 8021cde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021ce2:	f10d 0818 	add.w	r8, sp, #24
 8021ce6:	4639      	mov	r1, r7
 8021ce8:	4640      	mov	r0, r8
 8021cea:	f7fa fe85 	bl	801c9f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8021cee:	e898 0003 	ldmia.w	r8, {r0, r1}
 8021cf2:	af04      	add	r7, sp, #16
 8021cf4:	e887 0003 	stmia.w	r7, {r0, r1}
 8021cf8:	4638      	mov	r0, r7
 8021cfa:	4621      	mov	r1, r4
 8021cfc:	f7f1 fb18 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 8021d00:	4638      	mov	r0, r7
 8021d02:	f7f1 fb58 	bl	80133b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8021d06:	2800      	cmp	r0, #0
 8021d08:	d1d7      	bne.n	8021cba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8021d0a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8021d0e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8021d12:	4293      	cmp	r3, r2
 8021d14:	dd12      	ble.n	8021d3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 8021d16:	1a9b      	subs	r3, r3, r2
 8021d18:	f9b4 0000 	ldrsh.w	r0, [r4]
 8021d1c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021d20:	f8ad 0018 	strh.w	r0, [sp, #24]
 8021d24:	f8ad 201a 	strh.w	r2, [sp, #26]
 8021d28:	f8ad 101c 	strh.w	r1, [sp, #28]
 8021d2c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021d30:	4642      	mov	r2, r8
 8021d32:	4633      	mov	r3, r6
 8021d34:	a902      	add	r1, sp, #8
 8021d36:	4628      	mov	r0, r5
 8021d38:	f7ff f8ce 	bl	8020ed8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021d3c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8021d40:	f9b4 2000 	ldrsh.w	r2, [r4]
 8021d44:	4293      	cmp	r3, r2
 8021d46:	dd12      	ble.n	8021d6e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8021d48:	1a9b      	subs	r3, r3, r2
 8021d4a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8021d4e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8021d52:	f8ad 2018 	strh.w	r2, [sp, #24]
 8021d56:	f8ad 001a 	strh.w	r0, [sp, #26]
 8021d5a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021d5e:	f8ad 101e 	strh.w	r1, [sp, #30]
 8021d62:	23ff      	movs	r3, #255	; 0xff
 8021d64:	4642      	mov	r2, r8
 8021d66:	a902      	add	r1, sp, #8
 8021d68:	4628      	mov	r0, r5
 8021d6a:	f7ff f8b5 	bl	8020ed8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021d6e:	463b      	mov	r3, r7
 8021d70:	aa02      	add	r2, sp, #8
 8021d72:	4629      	mov	r1, r5
 8021d74:	4650      	mov	r0, sl
 8021d76:	f7ff f995 	bl	80210a4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8021d7a:	88a2      	ldrh	r2, [r4, #4]
 8021d7c:	8823      	ldrh	r3, [r4, #0]
 8021d7e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8021d82:	4413      	add	r3, r2
 8021d84:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8021d88:	440a      	add	r2, r1
 8021d8a:	b29b      	uxth	r3, r3
 8021d8c:	b292      	uxth	r2, r2
 8021d8e:	b211      	sxth	r1, r2
 8021d90:	b218      	sxth	r0, r3
 8021d92:	4288      	cmp	r0, r1
 8021d94:	dd12      	ble.n	8021dbc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8021d96:	1a9b      	subs	r3, r3, r2
 8021d98:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8021d9c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8021da0:	f8ad 1018 	strh.w	r1, [sp, #24]
 8021da4:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021da8:	f8ad 001e 	strh.w	r0, [sp, #30]
 8021dac:	23ff      	movs	r3, #255	; 0xff
 8021dae:	4642      	mov	r2, r8
 8021db0:	a902      	add	r1, sp, #8
 8021db2:	4628      	mov	r0, r5
 8021db4:	f8ad 601a 	strh.w	r6, [sp, #26]
 8021db8:	f7ff f88e 	bl	8020ed8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021dbc:	88e2      	ldrh	r2, [r4, #6]
 8021dbe:	8863      	ldrh	r3, [r4, #2]
 8021dc0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8021dc4:	4413      	add	r3, r2
 8021dc6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8021dca:	440a      	add	r2, r1
 8021dcc:	b29b      	uxth	r3, r3
 8021dce:	b292      	uxth	r2, r2
 8021dd0:	b211      	sxth	r1, r2
 8021dd2:	b218      	sxth	r0, r3
 8021dd4:	4288      	cmp	r0, r1
 8021dd6:	dd81      	ble.n	8021cdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021dd8:	1a9b      	subs	r3, r3, r2
 8021dda:	f9b4 6000 	ldrsh.w	r6, [r4]
 8021dde:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8021de2:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021de6:	f8ad 6018 	strh.w	r6, [sp, #24]
 8021dea:	f8ad 101a 	strh.w	r1, [sp, #26]
 8021dee:	f8ad 001c 	strh.w	r0, [sp, #28]
 8021df2:	23ff      	movs	r3, #255	; 0xff
 8021df4:	4642      	mov	r2, r8
 8021df6:	e762      	b.n	8021cbe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 8021df8:	4633      	mov	r3, r6
 8021dfa:	4622      	mov	r2, r4
 8021dfc:	a902      	add	r1, sp, #8
 8021dfe:	4628      	mov	r0, r5
 8021e00:	f7ff f9c0 	bl	8021184 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8021e04:	e76a      	b.n	8021cdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021e06:	e9cd 4600 	strd	r4, r6, [sp]
 8021e0a:	ab02      	add	r3, sp, #8
 8021e0c:	464a      	mov	r2, r9
 8021e0e:	4629      	mov	r1, r5
 8021e10:	4650      	mov	r0, sl
 8021e12:	f7ff fd97 	bl	8021944 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8021e16:	e761      	b.n	8021cdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021e18:	4638      	mov	r0, r7
 8021e1a:	f7fa fe39 	bl	801ca90 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8021e1e:	b950      	cbnz	r0, 8021e36 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 8021e20:	e9cd 6000 	strd	r6, r0, [sp]
 8021e24:	f8da 3000 	ldr.w	r3, [sl]
 8021e28:	aa02      	add	r2, sp, #8
 8021e2a:	68de      	ldr	r6, [r3, #12]
 8021e2c:	4629      	mov	r1, r5
 8021e2e:	4623      	mov	r3, r4
 8021e30:	4650      	mov	r0, sl
 8021e32:	47b0      	blx	r6
 8021e34:	e752      	b.n	8021cdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021e36:	f10d 0818 	add.w	r8, sp, #24
 8021e3a:	4639      	mov	r1, r7
 8021e3c:	4640      	mov	r0, r8
 8021e3e:	f7fa fddb 	bl	801c9f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8021e42:	e898 0003 	ldmia.w	r8, {r0, r1}
 8021e46:	af04      	add	r7, sp, #16
 8021e48:	e887 0003 	stmia.w	r7, {r0, r1}
 8021e4c:	4638      	mov	r0, r7
 8021e4e:	4621      	mov	r1, r4
 8021e50:	f7f1 fa6e 	bl	8013330 <_ZN8touchgfx4RectaNERKS0_>
 8021e54:	4638      	mov	r0, r7
 8021e56:	f7f1 faae 	bl	80133b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8021e5a:	b138      	cbz	r0, 8021e6c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8021e5c:	9600      	str	r6, [sp, #0]
 8021e5e:	4623      	mov	r3, r4
 8021e60:	aa02      	add	r2, sp, #8
 8021e62:	4649      	mov	r1, r9
 8021e64:	4628      	mov	r0, r5
 8021e66:	f7ff fdc9 	bl	80219fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021e6a:	e737      	b.n	8021cdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021e6c:	e9cd 6000 	strd	r6, r0, [sp]
 8021e70:	f8da 3000 	ldr.w	r3, [sl]
 8021e74:	aa02      	add	r2, sp, #8
 8021e76:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8021e7a:	4629      	mov	r1, r5
 8021e7c:	463b      	mov	r3, r7
 8021e7e:	4650      	mov	r0, sl
 8021e80:	47d8      	blx	fp
 8021e82:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8021e86:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8021e8a:	4293      	cmp	r3, r2
 8021e8c:	dd13      	ble.n	8021eb6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 8021e8e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8021e92:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021e96:	f8ad 0018 	strh.w	r0, [sp, #24]
 8021e9a:	1a9b      	subs	r3, r3, r2
 8021e9c:	f8ad 201a 	strh.w	r2, [sp, #26]
 8021ea0:	f8ad 101c 	strh.w	r1, [sp, #28]
 8021ea4:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021ea8:	9600      	str	r6, [sp, #0]
 8021eaa:	4643      	mov	r3, r8
 8021eac:	aa02      	add	r2, sp, #8
 8021eae:	4649      	mov	r1, r9
 8021eb0:	4628      	mov	r0, r5
 8021eb2:	f7ff fda3 	bl	80219fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021eb6:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8021eba:	f9b4 2000 	ldrsh.w	r2, [r4]
 8021ebe:	4293      	cmp	r3, r2
 8021ec0:	dd13      	ble.n	8021eea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 8021ec2:	1a9b      	subs	r3, r3, r2
 8021ec4:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8021ec8:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8021ecc:	f8ad 2018 	strh.w	r2, [sp, #24]
 8021ed0:	f8ad 001a 	strh.w	r0, [sp, #26]
 8021ed4:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021ed8:	f8ad 101e 	strh.w	r1, [sp, #30]
 8021edc:	9600      	str	r6, [sp, #0]
 8021ede:	4643      	mov	r3, r8
 8021ee0:	aa02      	add	r2, sp, #8
 8021ee2:	4649      	mov	r1, r9
 8021ee4:	4628      	mov	r0, r5
 8021ee6:	f7ff fd89 	bl	80219fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021eea:	88a2      	ldrh	r2, [r4, #4]
 8021eec:	8823      	ldrh	r3, [r4, #0]
 8021eee:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8021ef2:	4413      	add	r3, r2
 8021ef4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8021ef8:	440a      	add	r2, r1
 8021efa:	b29b      	uxth	r3, r3
 8021efc:	b292      	uxth	r2, r2
 8021efe:	b211      	sxth	r1, r2
 8021f00:	b218      	sxth	r0, r3
 8021f02:	4288      	cmp	r0, r1
 8021f04:	dd13      	ble.n	8021f2e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 8021f06:	1a9b      	subs	r3, r3, r2
 8021f08:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8021f0c:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8021f10:	f8ad 1018 	strh.w	r1, [sp, #24]
 8021f14:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021f18:	f8ad 001e 	strh.w	r0, [sp, #30]
 8021f1c:	9600      	str	r6, [sp, #0]
 8021f1e:	4643      	mov	r3, r8
 8021f20:	aa02      	add	r2, sp, #8
 8021f22:	4649      	mov	r1, r9
 8021f24:	4628      	mov	r0, r5
 8021f26:	f8ad 701a 	strh.w	r7, [sp, #26]
 8021f2a:	f7ff fd67 	bl	80219fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021f2e:	88e2      	ldrh	r2, [r4, #6]
 8021f30:	8863      	ldrh	r3, [r4, #2]
 8021f32:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8021f36:	4413      	add	r3, r2
 8021f38:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8021f3c:	440a      	add	r2, r1
 8021f3e:	b29b      	uxth	r3, r3
 8021f40:	b292      	uxth	r2, r2
 8021f42:	b211      	sxth	r1, r2
 8021f44:	b218      	sxth	r0, r3
 8021f46:	4288      	cmp	r0, r1
 8021f48:	f77f aec8 	ble.w	8021cdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021f4c:	f9b4 7000 	ldrsh.w	r7, [r4]
 8021f50:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8021f54:	f8ad 7018 	strh.w	r7, [sp, #24]
 8021f58:	1a9b      	subs	r3, r3, r2
 8021f5a:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021f5e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8021f62:	f8ad 001c 	strh.w	r0, [sp, #28]
 8021f66:	9600      	str	r6, [sp, #0]
 8021f68:	4643      	mov	r3, r8
 8021f6a:	e779      	b.n	8021e60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 8021f6c:	2000224c 	.word	0x2000224c

08021f70 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8021f70:	b180      	cbz	r0, 8021f94 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8021f72:	2903      	cmp	r1, #3
 8021f74:	d81c      	bhi.n	8021fb0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8021f76:	e8df f001 	tbb	[pc, r1]
 8021f7a:	1d02      	.short	0x1d02
 8021f7c:	1f08      	.short	0x1f08
 8021f7e:	4b10      	ldr	r3, [pc, #64]	; (8021fc0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8021f80:	8818      	ldrh	r0, [r3, #0]
 8021f82:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021f86:	4240      	negs	r0, r0
 8021f88:	4770      	bx	lr
 8021f8a:	4b0d      	ldr	r3, [pc, #52]	; (8021fc0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8021f8c:	8818      	ldrh	r0, [r3, #0]
 8021f8e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021f92:	4770      	bx	lr
 8021f94:	2903      	cmp	r1, #3
 8021f96:	d80b      	bhi.n	8021fb0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8021f98:	a301      	add	r3, pc, #4	; (adr r3, 8021fa0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8021f9a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8021f9e:	bf00      	nop
 8021fa0:	08021fb5 	.word	0x08021fb5
 8021fa4:	08021f8b 	.word	0x08021f8b
 8021fa8:	08021fb9 	.word	0x08021fb9
 8021fac:	08021f7f 	.word	0x08021f7f
 8021fb0:	2000      	movs	r0, #0
 8021fb2:	4770      	bx	lr
 8021fb4:	2001      	movs	r0, #1
 8021fb6:	4770      	bx	lr
 8021fb8:	f04f 30ff 	mov.w	r0, #4294967295
 8021fbc:	4770      	bx	lr
 8021fbe:	bf00      	nop
 8021fc0:	20002246 	.word	0x20002246

08021fc4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8021fc4:	b180      	cbz	r0, 8021fe8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8021fc6:	2903      	cmp	r1, #3
 8021fc8:	d81c      	bhi.n	8022004 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8021fca:	e8df f001 	tbb	[pc, r1]
 8021fce:	021d      	.short	0x021d
 8021fd0:	071f      	.short	0x071f
 8021fd2:	4b10      	ldr	r3, [pc, #64]	; (8022014 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8021fd4:	8818      	ldrh	r0, [r3, #0]
 8021fd6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021fda:	4770      	bx	lr
 8021fdc:	4b0d      	ldr	r3, [pc, #52]	; (8022014 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8021fde:	8818      	ldrh	r0, [r3, #0]
 8021fe0:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021fe4:	4240      	negs	r0, r0
 8021fe6:	4770      	bx	lr
 8021fe8:	2903      	cmp	r1, #3
 8021fea:	d80b      	bhi.n	8022004 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8021fec:	a301      	add	r3, pc, #4	; (adr r3, 8021ff4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8021fee:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8021ff2:	bf00      	nop
 8021ff4:	08021fd3 	.word	0x08021fd3
 8021ff8:	0802200d 	.word	0x0802200d
 8021ffc:	08021fdd 	.word	0x08021fdd
 8022000:	08022009 	.word	0x08022009
 8022004:	2000      	movs	r0, #0
 8022006:	4770      	bx	lr
 8022008:	2001      	movs	r0, #1
 802200a:	4770      	bx	lr
 802200c:	f04f 30ff 	mov.w	r0, #4294967295
 8022010:	4770      	bx	lr
 8022012:	bf00      	nop
 8022014:	20002246 	.word	0x20002246

08022018 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8022018:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802201c:	b099      	sub	sp, #100	; 0x64
 802201e:	910b      	str	r1, [sp, #44]	; 0x2c
 8022020:	a914      	add	r1, sp, #80	; 0x50
 8022022:	e881 000c 	stmia.w	r1, {r2, r3}
 8022026:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 802202a:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 802202e:	f891 900d 	ldrb.w	r9, [r1, #13]
 8022032:	9309      	str	r3, [sp, #36]	; 0x24
 8022034:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8022038:	9310      	str	r3, [sp, #64]	; 0x40
 802203a:	ea4f 1749 	mov.w	r7, r9, lsl #5
 802203e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8022042:	930c      	str	r3, [sp, #48]	; 0x30
 8022044:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8022048:	798f      	ldrb	r7, [r1, #6]
 802204a:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 802204e:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8022052:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 8022056:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 802205a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 802205e:	431f      	orrs	r7, r3
 8022060:	f000 8195 	beq.w	802238e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8022064:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8022068:	f409 7380 	and.w	r3, r9, #256	; 0x100
 802206c:	f891 9007 	ldrb.w	r9, [r1, #7]
 8022070:	ea59 0903 	orrs.w	r9, r9, r3
 8022074:	f000 818b 	beq.w	802238e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8022078:	f991 3009 	ldrsb.w	r3, [r1, #9]
 802207c:	b29b      	uxth	r3, r3
 802207e:	2d00      	cmp	r5, #0
 8022080:	f000 812e 	beq.w	80222e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8022084:	1aed      	subs	r5, r5, r3
 8022086:	b2ad      	uxth	r5, r5
 8022088:	042b      	lsls	r3, r5, #16
 802208a:	d502      	bpl.n	8022092 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 802208c:	1b64      	subs	r4, r4, r5
 802208e:	b224      	sxth	r4, r4
 8022090:	2500      	movs	r5, #0
 8022092:	f9b2 1000 	ldrsh.w	r1, [r2]
 8022096:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 802209a:	428c      	cmp	r4, r1
 802209c:	b28b      	uxth	r3, r1
 802209e:	bfbf      	itttt	lt
 80220a0:	18ed      	addlt	r5, r5, r3
 80220a2:	1b2c      	sublt	r4, r5, r4
 80220a4:	b2a5      	uxthlt	r5, r4
 80220a6:	460c      	movlt	r4, r1
 80220a8:	8891      	ldrh	r1, [r2, #4]
 80220aa:	440b      	add	r3, r1
 80220ac:	b21b      	sxth	r3, r3
 80220ae:	930f      	str	r3, [sp, #60]	; 0x3c
 80220b0:	88d3      	ldrh	r3, [r2, #6]
 80220b2:	8852      	ldrh	r2, [r2, #2]
 80220b4:	4413      	add	r3, r2
 80220b6:	b21b      	sxth	r3, r3
 80220b8:	930d      	str	r3, [sp, #52]	; 0x34
 80220ba:	4bbe      	ldr	r3, [pc, #760]	; (80223b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 80220bc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80220be:	f893 b000 	ldrb.w	fp, [r3]
 80220c2:	f10b 3cff 	add.w	ip, fp, #4294967295
 80220c6:	f1dc 0300 	rsbs	r3, ip, #0
 80220ca:	eb43 030c 	adc.w	r3, r3, ip
 80220ce:	930e      	str	r3, [sp, #56]	; 0x38
 80220d0:	4621      	mov	r1, r4
 80220d2:	4653      	mov	r3, sl
 80220d4:	a814      	add	r0, sp, #80	; 0x50
 80220d6:	f7f6 fdf0 	bl	8018cba <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80220da:	4621      	mov	r1, r4
 80220dc:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 80220e0:	4653      	mov	r3, sl
 80220e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80220e4:	a814      	add	r0, sp, #80	; 0x50
 80220e6:	f7f6 fe05 	bl	8018cf4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80220ea:	a918      	add	r1, sp, #96	; 0x60
 80220ec:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80220f0:	a817      	add	r0, sp, #92	; 0x5c
 80220f2:	f7f6 ff2b 	bl	8018f4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80220f6:	f1ba 0f00 	cmp.w	sl, #0
 80220fa:	f040 80f4 	bne.w	80222e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 80220fe:	f1bb 0f01 	cmp.w	fp, #1
 8022102:	f040 80f8 	bne.w	80222f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8022106:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022108:	2b00      	cmp	r3, #0
 802210a:	f040 8145 	bne.w	8022398 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 802210e:	b2ba      	uxth	r2, r7
 8022110:	b905      	cbnz	r5, 8022114 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8022112:	b16e      	cbz	r6, 8022130 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8022114:	fb06 5302 	mla	r3, r6, r2, r5
 8022118:	9828      	ldr	r0, [sp, #160]	; 0xa0
 802211a:	fb08 f303 	mul.w	r3, r8, r3
 802211e:	4631      	mov	r1, r6
 8022120:	f003 0607 	and.w	r6, r3, #7
 8022124:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8022128:	9328      	str	r3, [sp, #160]	; 0xa0
 802212a:	eba9 0301 	sub.w	r3, r9, r1
 802212e:	930a      	str	r3, [sp, #40]	; 0x28
 8022130:	4651      	mov	r1, sl
 8022132:	980e      	ldr	r0, [sp, #56]	; 0x38
 8022134:	f7ff ff1c 	bl	8021f70 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8022138:	4681      	mov	r9, r0
 802213a:	980e      	ldr	r0, [sp, #56]	; 0x38
 802213c:	f7ff ff42 	bl	8021fc4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8022140:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022142:	9909      	ldr	r1, [sp, #36]	; 0x24
 8022144:	eba3 0a01 	sub.w	sl, r3, r1
 8022148:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802214a:	459a      	cmp	sl, r3
 802214c:	bfa8      	it	ge
 802214e:	469a      	movge	sl, r3
 8022150:	f1ba 0f00 	cmp.w	sl, #0
 8022154:	4683      	mov	fp, r0
 8022156:	f340 811a 	ble.w	802238e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 802215a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802215c:	1b64      	subs	r4, r4, r5
 802215e:	1b1c      	subs	r4, r3, r4
 8022160:	42bc      	cmp	r4, r7
 8022162:	bfd4      	ite	le
 8022164:	ebc5 0504 	rsble	r5, r5, r4
 8022168:	ebc5 0507 	rsbgt	r5, r5, r7
 802216c:	2d00      	cmp	r5, #0
 802216e:	f340 810e 	ble.w	802238e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8022172:	1b52      	subs	r2, r2, r5
 8022174:	fb08 f302 	mul.w	r3, r8, r2
 8022178:	930f      	str	r3, [sp, #60]	; 0x3c
 802217a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802217c:	2b00      	cmp	r3, #0
 802217e:	f040 8116 	bne.w	80223ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8022182:	4b8d      	ldr	r3, [pc, #564]	; (80223b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8022184:	6818      	ldr	r0, [r3, #0]
 8022186:	6803      	ldr	r3, [r0, #0]
 8022188:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802218a:	4798      	blx	r3
 802218c:	2301      	movs	r3, #1
 802218e:	fa03 f308 	lsl.w	r3, r3, r8
 8022192:	4a8a      	ldr	r2, [pc, #552]	; (80223bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8022194:	3b01      	subs	r3, #1
 8022196:	b2db      	uxtb	r3, r3
 8022198:	8811      	ldrh	r1, [r2, #0]
 802219a:	930e      	str	r3, [sp, #56]	; 0x38
 802219c:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 80221a0:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 80221a4:	fb01 2303 	mla	r3, r1, r3, r2
 80221a8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80221ac:	930a      	str	r3, [sp, #40]	; 0x28
 80221ae:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80221b0:	f3c3 4307 	ubfx	r3, r3, #16, #8
 80221b4:	9313      	str	r3, [sp, #76]	; 0x4c
 80221b6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80221b8:	0a19      	lsrs	r1, r3, #8
 80221ba:	b2cb      	uxtb	r3, r1
 80221bc:	9312      	str	r3, [sp, #72]	; 0x48
 80221be:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80221c0:	b2db      	uxtb	r3, r3
 80221c2:	9311      	str	r3, [sp, #68]	; 0x44
 80221c4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80221c6:	095a      	lsrs	r2, r3, #5
 80221c8:	4b7d      	ldr	r3, [pc, #500]	; (80223c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 80221ca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80221ce:	400b      	ands	r3, r1
 80221d0:	4313      	orrs	r3, r2
 80221d2:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80221d4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80221d8:	4313      	orrs	r3, r2
 80221da:	b29b      	uxth	r3, r3
 80221dc:	9310      	str	r3, [sp, #64]	; 0x40
 80221de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80221e0:	781a      	ldrb	r2, [r3, #0]
 80221e2:	ea4f 0349 	mov.w	r3, r9, lsl #1
 80221e6:	4132      	asrs	r2, r6
 80221e8:	fb05 b919 	mls	r9, r5, r9, fp
 80221ec:	fb03 fb05 	mul.w	fp, r3, r5
 80221f0:	b2d2      	uxtb	r2, r2
 80221f2:	930d      	str	r3, [sp, #52]	; 0x34
 80221f4:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 80221f8:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80221fc:	f0c0 80f5 	bcc.w	80223ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8022200:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8022204:	46ae      	mov	lr, r5
 8022206:	f11e 3eff 	adds.w	lr, lr, #4294967295
 802220a:	f0c0 80dd 	bcc.w	80223c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 802220e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022210:	4013      	ands	r3, r2
 8022212:	d055      	beq.n	80222c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8022214:	20ff      	movs	r0, #255	; 0xff
 8022216:	990e      	ldr	r1, [sp, #56]	; 0x38
 8022218:	fb90 f1f1 	sdiv	r1, r0, r1
 802221c:	434b      	muls	r3, r1
 802221e:	2bfe      	cmp	r3, #254	; 0xfe
 8022220:	dd03      	ble.n	802222a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8022222:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022224:	4281      	cmp	r1, r0
 8022226:	f000 80cd 	beq.w	80223c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 802222a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802222c:	f8bc 4000 	ldrh.w	r4, [ip]
 8022230:	fb11 f303 	smulbb	r3, r1, r3
 8022234:	b29b      	uxth	r3, r3
 8022236:	1c59      	adds	r1, r3, #1
 8022238:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802223c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022240:	b29f      	uxth	r7, r3
 8022242:	43db      	mvns	r3, r3
 8022244:	b2db      	uxtb	r3, r3
 8022246:	9309      	str	r3, [sp, #36]	; 0x24
 8022248:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802224a:	1220      	asrs	r0, r4, #8
 802224c:	fb13 f907 	smulbb	r9, r3, r7
 8022250:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022254:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022256:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 802225a:	fb00 9003 	mla	r0, r0, r3, r9
 802225e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8022260:	10e1      	asrs	r1, r4, #3
 8022262:	fb13 f907 	smulbb	r9, r3, r7
 8022266:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802226a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802226c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8022270:	fb01 9103 	mla	r1, r1, r3, r9
 8022274:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022276:	00e4      	lsls	r4, r4, #3
 8022278:	fb13 f707 	smulbb	r7, r3, r7
 802227c:	b2e4      	uxtb	r4, r4
 802227e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022280:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8022284:	fb04 7403 	mla	r4, r4, r3, r7
 8022288:	b280      	uxth	r0, r0
 802228a:	b2a4      	uxth	r4, r4
 802228c:	1c43      	adds	r3, r0, #1
 802228e:	f104 0901 	add.w	r9, r4, #1
 8022292:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022296:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 802229a:	b289      	uxth	r1, r1
 802229c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 80222a0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80222a4:	ea49 0000 	orr.w	r0, r9, r0
 80222a8:	f101 0901 	add.w	r9, r1, #1
 80222ac:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 80222b0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80222b4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80222b8:	ea40 0009 	orr.w	r0, r0, r9
 80222bc:	f8ac 0000 	strh.w	r0, [ip]
 80222c0:	4446      	add	r6, r8
 80222c2:	b2b6      	uxth	r6, r6
 80222c4:	2e07      	cmp	r6, #7
 80222c6:	bf81      	itttt	hi
 80222c8:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 80222ca:	785a      	ldrbhi	r2, [r3, #1]
 80222cc:	3301      	addhi	r3, #1
 80222ce:	9328      	strhi	r3, [sp, #160]	; 0xa0
 80222d0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80222d2:	bf9a      	itte	ls
 80222d4:	fa42 f208 	asrls.w	r2, r2, r8
 80222d8:	b2d2      	uxtbls	r2, r2
 80222da:	2600      	movhi	r6, #0
 80222dc:	449c      	add	ip, r3
 80222de:	e792      	b.n	8022206 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 80222e0:	441c      	add	r4, r3
 80222e2:	b224      	sxth	r4, r4
 80222e4:	e6d5      	b.n	8022092 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80222e6:	f1ba 0f01 	cmp.w	sl, #1
 80222ea:	f47f af0c 	bne.w	8022106 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80222ee:	f1bb 0f01 	cmp.w	fp, #1
 80222f2:	f47f af08 	bne.w	8022106 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80222f6:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 80223b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 80222fa:	f8db 0000 	ldr.w	r0, [fp]
 80222fe:	6803      	ldr	r3, [r0, #0]
 8022300:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8022302:	4798      	blx	r3
 8022304:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8022308:	465a      	mov	r2, fp
 802230a:	d006      	beq.n	802231a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 802230c:	f1b8 0f04 	cmp.w	r8, #4
 8022310:	d140      	bne.n	8022394 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8022312:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022314:	3300      	adds	r3, #0
 8022316:	bf18      	it	ne
 8022318:	2301      	movne	r3, #1
 802231a:	0580      	lsls	r0, r0, #22
 802231c:	d56e      	bpl.n	80223fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 802231e:	f1b8 0f08 	cmp.w	r8, #8
 8022322:	d16b      	bne.n	80223fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8022324:	2b00      	cmp	r3, #0
 8022326:	bf0c      	ite	eq
 8022328:	f44f 7100 	moveq.w	r1, #512	; 0x200
 802232c:	f44f 7180 	movne.w	r1, #256	; 0x100
 8022330:	2d00      	cmp	r5, #0
 8022332:	f47f aee8 	bne.w	8022106 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8022336:	2e00      	cmp	r6, #0
 8022338:	f47f aee5 	bne.w	8022106 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 802233c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 802233e:	19e3      	adds	r3, r4, r7
 8022340:	4283      	cmp	r3, r0
 8022342:	f73f aee0 	bgt.w	8022106 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8022346:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022348:	980d      	ldr	r0, [sp, #52]	; 0x34
 802234a:	444b      	add	r3, r9
 802234c:	4283      	cmp	r3, r0
 802234e:	f73f aeda 	bgt.w	8022106 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8022352:	6810      	ldr	r0, [r2, #0]
 8022354:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8022358:	6804      	ldr	r4, [r0, #0]
 802235a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 802235e:	b2bf      	uxth	r7, r7
 8022360:	f1b8 0f08 	cmp.w	r8, #8
 8022364:	f04f 0500 	mov.w	r5, #0
 8022368:	bf18      	it	ne
 802236a:	3701      	addne	r7, #1
 802236c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8022370:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022372:	9104      	str	r1, [sp, #16]
 8022374:	bf18      	it	ne
 8022376:	f027 0701 	bicne.w	r7, r7, #1
 802237a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 802237c:	bf18      	it	ne
 802237e:	b2bf      	uxthne	r7, r7
 8022380:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8022384:	e9cd 7900 	strd	r7, r9, [sp]
 8022388:	9928      	ldr	r1, [sp, #160]	; 0xa0
 802238a:	6d64      	ldr	r4, [r4, #84]	; 0x54
 802238c:	47a0      	blx	r4
 802238e:	b019      	add	sp, #100	; 0x64
 8022390:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022394:	2300      	movs	r3, #0
 8022396:	e7c0      	b.n	802231a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8022398:	2208      	movs	r2, #8
 802239a:	fb92 f3f8 	sdiv	r3, r2, r8
 802239e:	1e5a      	subs	r2, r3, #1
 80223a0:	443a      	add	r2, r7
 80223a2:	fb92 f2f3 	sdiv	r2, r2, r3
 80223a6:	fb12 f203 	smulbb	r2, r2, r3
 80223aa:	b292      	uxth	r2, r2
 80223ac:	e6b0      	b.n	8022110 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 80223ae:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80223b0:	e6ec      	b.n	802218c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 80223b2:	bf00      	nop
 80223b4:	20002244 	.word	0x20002244
 80223b8:	2000224c 	.word	0x2000224c
 80223bc:	20002246 	.word	0x20002246
 80223c0:	00fff800 	.word	0x00fff800
 80223c4:	9810      	ldr	r0, [sp, #64]	; 0x40
 80223c6:	e779      	b.n	80222bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 80223c8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80223ca:	b153      	cbz	r3, 80223e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 80223cc:	441e      	add	r6, r3
 80223ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80223d0:	b2b6      	uxth	r6, r6
 80223d2:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 80223d6:	f006 0607 	and.w	r6, r6, #7
 80223da:	781a      	ldrb	r2, [r3, #0]
 80223dc:	9328      	str	r3, [sp, #160]	; 0xa0
 80223de:	4132      	asrs	r2, r6
 80223e0:	b2d2      	uxtb	r2, r2
 80223e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80223e4:	445b      	add	r3, fp
 80223e6:	930a      	str	r3, [sp, #40]	; 0x28
 80223e8:	e706      	b.n	80221f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 80223ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80223ec:	2b00      	cmp	r3, #0
 80223ee:	d1ce      	bne.n	802238e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80223f0:	4b05      	ldr	r3, [pc, #20]	; (8022408 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 80223f2:	6818      	ldr	r0, [r3, #0]
 80223f4:	6803      	ldr	r3, [r0, #0]
 80223f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80223f8:	4798      	blx	r3
 80223fa:	e7c8      	b.n	802238e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80223fc:	2b00      	cmp	r3, #0
 80223fe:	f43f ae82 	beq.w	8022106 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8022402:	f44f 7180 	mov.w	r1, #256	; 0x100
 8022406:	e793      	b.n	8022330 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8022408:	2000224c 	.word	0x2000224c

0802240c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 802240c:	b538      	push	{r3, r4, r5, lr}
 802240e:	4c15      	ldr	r4, [pc, #84]	; (8022464 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8022410:	7823      	ldrb	r3, [r4, #0]
 8022412:	f3bf 8f5b 	dmb	ish
 8022416:	07da      	lsls	r2, r3, #31
 8022418:	4605      	mov	r5, r0
 802241a:	d40b      	bmi.n	8022434 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 802241c:	4620      	mov	r0, r4
 802241e:	f008 f9e0 	bl	802a7e2 <__cxa_guard_acquire>
 8022422:	b138      	cbz	r0, 8022434 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8022424:	4620      	mov	r0, r4
 8022426:	f008 f9e8 	bl	802a7fa <__cxa_guard_release>
 802242a:	4a0f      	ldr	r2, [pc, #60]	; (8022468 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 802242c:	490f      	ldr	r1, [pc, #60]	; (802246c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 802242e:	4810      	ldr	r0, [pc, #64]	; (8022470 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8022430:	f008 f9d0 	bl	802a7d4 <__aeabi_atexit>
 8022434:	4c0f      	ldr	r4, [pc, #60]	; (8022474 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8022436:	7823      	ldrb	r3, [r4, #0]
 8022438:	f3bf 8f5b 	dmb	ish
 802243c:	07db      	lsls	r3, r3, #31
 802243e:	d40b      	bmi.n	8022458 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8022440:	4620      	mov	r0, r4
 8022442:	f008 f9ce 	bl	802a7e2 <__cxa_guard_acquire>
 8022446:	b138      	cbz	r0, 8022458 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8022448:	4620      	mov	r0, r4
 802244a:	f008 f9d6 	bl	802a7fa <__cxa_guard_release>
 802244e:	4a06      	ldr	r2, [pc, #24]	; (8022468 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8022450:	4909      	ldr	r1, [pc, #36]	; (8022478 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8022452:	480a      	ldr	r0, [pc, #40]	; (802247c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8022454:	f008 f9be 	bl	802a7d4 <__aeabi_atexit>
 8022458:	4b05      	ldr	r3, [pc, #20]	; (8022470 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 802245a:	612b      	str	r3, [r5, #16]
 802245c:	4b07      	ldr	r3, [pc, #28]	; (802247c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 802245e:	616b      	str	r3, [r5, #20]
 8022460:	bd38      	pop	{r3, r4, r5, pc}
 8022462:	bf00      	nop
 8022464:	2000232c 	.word	0x2000232c
 8022468:	20000000 	.word	0x20000000
 802246c:	0801f21d 	.word	0x0801f21d
 8022470:	20000068 	.word	0x20000068
 8022474:	20002330 	.word	0x20002330
 8022478:	0801f21b 	.word	0x0801f21b
 802247c:	2000006c 	.word	0x2000006c

08022480 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8022480:	b538      	push	{r3, r4, r5, lr}
 8022482:	4c15      	ldr	r4, [pc, #84]	; (80224d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8022484:	7823      	ldrb	r3, [r4, #0]
 8022486:	f3bf 8f5b 	dmb	ish
 802248a:	07da      	lsls	r2, r3, #31
 802248c:	4605      	mov	r5, r0
 802248e:	d40b      	bmi.n	80224a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8022490:	4620      	mov	r0, r4
 8022492:	f008 f9a6 	bl	802a7e2 <__cxa_guard_acquire>
 8022496:	b138      	cbz	r0, 80224a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8022498:	4620      	mov	r0, r4
 802249a:	f008 f9ae 	bl	802a7fa <__cxa_guard_release>
 802249e:	4a0f      	ldr	r2, [pc, #60]	; (80224dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80224a0:	490f      	ldr	r1, [pc, #60]	; (80224e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80224a2:	4810      	ldr	r0, [pc, #64]	; (80224e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80224a4:	f008 f996 	bl	802a7d4 <__aeabi_atexit>
 80224a8:	4c0f      	ldr	r4, [pc, #60]	; (80224e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80224aa:	7823      	ldrb	r3, [r4, #0]
 80224ac:	f3bf 8f5b 	dmb	ish
 80224b0:	07db      	lsls	r3, r3, #31
 80224b2:	d40b      	bmi.n	80224cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80224b4:	4620      	mov	r0, r4
 80224b6:	f008 f994 	bl	802a7e2 <__cxa_guard_acquire>
 80224ba:	b138      	cbz	r0, 80224cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80224bc:	4620      	mov	r0, r4
 80224be:	f008 f99c 	bl	802a7fa <__cxa_guard_release>
 80224c2:	4a06      	ldr	r2, [pc, #24]	; (80224dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80224c4:	4909      	ldr	r1, [pc, #36]	; (80224ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80224c6:	480a      	ldr	r0, [pc, #40]	; (80224f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80224c8:	f008 f984 	bl	802a7d4 <__aeabi_atexit>
 80224cc:	4b05      	ldr	r3, [pc, #20]	; (80224e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80224ce:	60ab      	str	r3, [r5, #8]
 80224d0:	4b07      	ldr	r3, [pc, #28]	; (80224f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80224d2:	60eb      	str	r3, [r5, #12]
 80224d4:	bd38      	pop	{r3, r4, r5, pc}
 80224d6:	bf00      	nop
 80224d8:	20002304 	.word	0x20002304
 80224dc:	20000000 	.word	0x20000000
 80224e0:	0801f221 	.word	0x0801f221
 80224e4:	20000040 	.word	0x20000040
 80224e8:	20002308 	.word	0x20002308
 80224ec:	0801f21f 	.word	0x0801f21f
 80224f0:	20000044 	.word	0x20000044

080224f4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80224f4:	b510      	push	{r4, lr}
 80224f6:	4604      	mov	r4, r0
 80224f8:	f7ff ff88 	bl	802240c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80224fc:	4620      	mov	r0, r4
 80224fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022502:	f7ff bfbd 	b.w	8022480 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08022508 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8022508:	b538      	push	{r3, r4, r5, lr}
 802250a:	4c15      	ldr	r4, [pc, #84]	; (8022560 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 802250c:	7823      	ldrb	r3, [r4, #0]
 802250e:	f3bf 8f5b 	dmb	ish
 8022512:	07da      	lsls	r2, r3, #31
 8022514:	4605      	mov	r5, r0
 8022516:	d40b      	bmi.n	8022530 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8022518:	4620      	mov	r0, r4
 802251a:	f008 f962 	bl	802a7e2 <__cxa_guard_acquire>
 802251e:	b138      	cbz	r0, 8022530 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8022520:	4620      	mov	r0, r4
 8022522:	f008 f96a 	bl	802a7fa <__cxa_guard_release>
 8022526:	4a0f      	ldr	r2, [pc, #60]	; (8022564 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8022528:	490f      	ldr	r1, [pc, #60]	; (8022568 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 802252a:	4810      	ldr	r0, [pc, #64]	; (802256c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 802252c:	f008 f952 	bl	802a7d4 <__aeabi_atexit>
 8022530:	4c0f      	ldr	r4, [pc, #60]	; (8022570 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8022532:	7823      	ldrb	r3, [r4, #0]
 8022534:	f3bf 8f5b 	dmb	ish
 8022538:	07db      	lsls	r3, r3, #31
 802253a:	d40b      	bmi.n	8022554 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 802253c:	4620      	mov	r0, r4
 802253e:	f008 f950 	bl	802a7e2 <__cxa_guard_acquire>
 8022542:	b138      	cbz	r0, 8022554 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8022544:	4620      	mov	r0, r4
 8022546:	f008 f958 	bl	802a7fa <__cxa_guard_release>
 802254a:	4a06      	ldr	r2, [pc, #24]	; (8022564 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 802254c:	4909      	ldr	r1, [pc, #36]	; (8022574 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 802254e:	480a      	ldr	r0, [pc, #40]	; (8022578 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8022550:	f008 f940 	bl	802a7d4 <__aeabi_atexit>
 8022554:	4b05      	ldr	r3, [pc, #20]	; (802256c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8022556:	622b      	str	r3, [r5, #32]
 8022558:	4b07      	ldr	r3, [pc, #28]	; (8022578 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 802255a:	626b      	str	r3, [r5, #36]	; 0x24
 802255c:	bd38      	pop	{r3, r4, r5, pc}
 802255e:	bf00      	nop
 8022560:	20002334 	.word	0x20002334
 8022564:	20000000 	.word	0x20000000
 8022568:	0801f215 	.word	0x0801f215
 802256c:	20000070 	.word	0x20000070
 8022570:	20002338 	.word	0x20002338
 8022574:	0801f213 	.word	0x0801f213
 8022578:	20000074 	.word	0x20000074

0802257c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 802257c:	b538      	push	{r3, r4, r5, lr}
 802257e:	4c15      	ldr	r4, [pc, #84]	; (80225d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8022580:	7823      	ldrb	r3, [r4, #0]
 8022582:	f3bf 8f5b 	dmb	ish
 8022586:	07da      	lsls	r2, r3, #31
 8022588:	4605      	mov	r5, r0
 802258a:	d40b      	bmi.n	80225a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 802258c:	4620      	mov	r0, r4
 802258e:	f008 f928 	bl	802a7e2 <__cxa_guard_acquire>
 8022592:	b138      	cbz	r0, 80225a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8022594:	4620      	mov	r0, r4
 8022596:	f008 f930 	bl	802a7fa <__cxa_guard_release>
 802259a:	4a0f      	ldr	r2, [pc, #60]	; (80225d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 802259c:	490f      	ldr	r1, [pc, #60]	; (80225dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 802259e:	4810      	ldr	r0, [pc, #64]	; (80225e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80225a0:	f008 f918 	bl	802a7d4 <__aeabi_atexit>
 80225a4:	4c0f      	ldr	r4, [pc, #60]	; (80225e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 80225a6:	7823      	ldrb	r3, [r4, #0]
 80225a8:	f3bf 8f5b 	dmb	ish
 80225ac:	07db      	lsls	r3, r3, #31
 80225ae:	d40b      	bmi.n	80225c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80225b0:	4620      	mov	r0, r4
 80225b2:	f008 f916 	bl	802a7e2 <__cxa_guard_acquire>
 80225b6:	b138      	cbz	r0, 80225c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80225b8:	4620      	mov	r0, r4
 80225ba:	f008 f91e 	bl	802a7fa <__cxa_guard_release>
 80225be:	4a06      	ldr	r2, [pc, #24]	; (80225d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80225c0:	4909      	ldr	r1, [pc, #36]	; (80225e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 80225c2:	480a      	ldr	r0, [pc, #40]	; (80225ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80225c4:	f008 f906 	bl	802a7d4 <__aeabi_atexit>
 80225c8:	4b05      	ldr	r3, [pc, #20]	; (80225e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80225ca:	61ab      	str	r3, [r5, #24]
 80225cc:	4b07      	ldr	r3, [pc, #28]	; (80225ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80225ce:	61eb      	str	r3, [r5, #28]
 80225d0:	bd38      	pop	{r3, r4, r5, pc}
 80225d2:	bf00      	nop
 80225d4:	2000230c 	.word	0x2000230c
 80225d8:	20000000 	.word	0x20000000
 80225dc:	0801f219 	.word	0x0801f219
 80225e0:	20000048 	.word	0x20000048
 80225e4:	20002310 	.word	0x20002310
 80225e8:	0801f217 	.word	0x0801f217
 80225ec:	2000004c 	.word	0x2000004c

080225f0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 80225f0:	b510      	push	{r4, lr}
 80225f2:	4604      	mov	r4, r0
 80225f4:	f7ff ff88 	bl	8022508 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80225f8:	4620      	mov	r0, r4
 80225fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80225fe:	f7ff bfbd 	b.w	802257c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08022604 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8022604:	b538      	push	{r3, r4, r5, lr}
 8022606:	4c15      	ldr	r4, [pc, #84]	; (802265c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8022608:	7823      	ldrb	r3, [r4, #0]
 802260a:	f3bf 8f5b 	dmb	ish
 802260e:	07da      	lsls	r2, r3, #31
 8022610:	4605      	mov	r5, r0
 8022612:	d40b      	bmi.n	802262c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8022614:	4620      	mov	r0, r4
 8022616:	f008 f8e4 	bl	802a7e2 <__cxa_guard_acquire>
 802261a:	b138      	cbz	r0, 802262c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 802261c:	4620      	mov	r0, r4
 802261e:	f008 f8ec 	bl	802a7fa <__cxa_guard_release>
 8022622:	4a0f      	ldr	r2, [pc, #60]	; (8022660 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8022624:	490f      	ldr	r1, [pc, #60]	; (8022664 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8022626:	4810      	ldr	r0, [pc, #64]	; (8022668 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8022628:	f008 f8d4 	bl	802a7d4 <__aeabi_atexit>
 802262c:	4c0f      	ldr	r4, [pc, #60]	; (802266c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 802262e:	7823      	ldrb	r3, [r4, #0]
 8022630:	f3bf 8f5b 	dmb	ish
 8022634:	07db      	lsls	r3, r3, #31
 8022636:	d40b      	bmi.n	8022650 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8022638:	4620      	mov	r0, r4
 802263a:	f008 f8d2 	bl	802a7e2 <__cxa_guard_acquire>
 802263e:	b138      	cbz	r0, 8022650 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8022640:	4620      	mov	r0, r4
 8022642:	f008 f8da 	bl	802a7fa <__cxa_guard_release>
 8022646:	4a06      	ldr	r2, [pc, #24]	; (8022660 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8022648:	4909      	ldr	r1, [pc, #36]	; (8022670 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 802264a:	480a      	ldr	r0, [pc, #40]	; (8022674 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 802264c:	f008 f8c2 	bl	802a7d4 <__aeabi_atexit>
 8022650:	4b05      	ldr	r3, [pc, #20]	; (8022668 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8022652:	632b      	str	r3, [r5, #48]	; 0x30
 8022654:	4b07      	ldr	r3, [pc, #28]	; (8022674 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8022656:	636b      	str	r3, [r5, #52]	; 0x34
 8022658:	bd38      	pop	{r3, r4, r5, pc}
 802265a:	bf00      	nop
 802265c:	20002344 	.word	0x20002344
 8022660:	20000000 	.word	0x20000000
 8022664:	0801f20d 	.word	0x0801f20d
 8022668:	20000080 	.word	0x20000080
 802266c:	20002348 	.word	0x20002348
 8022670:	0801f20b 	.word	0x0801f20b
 8022674:	20000084 	.word	0x20000084

08022678 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8022678:	b538      	push	{r3, r4, r5, lr}
 802267a:	4c15      	ldr	r4, [pc, #84]	; (80226d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 802267c:	7823      	ldrb	r3, [r4, #0]
 802267e:	f3bf 8f5b 	dmb	ish
 8022682:	07da      	lsls	r2, r3, #31
 8022684:	4605      	mov	r5, r0
 8022686:	d40b      	bmi.n	80226a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8022688:	4620      	mov	r0, r4
 802268a:	f008 f8aa 	bl	802a7e2 <__cxa_guard_acquire>
 802268e:	b138      	cbz	r0, 80226a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8022690:	4620      	mov	r0, r4
 8022692:	f008 f8b2 	bl	802a7fa <__cxa_guard_release>
 8022696:	4a0f      	ldr	r2, [pc, #60]	; (80226d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8022698:	490f      	ldr	r1, [pc, #60]	; (80226d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 802269a:	4810      	ldr	r0, [pc, #64]	; (80226dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 802269c:	f008 f89a 	bl	802a7d4 <__aeabi_atexit>
 80226a0:	4c0f      	ldr	r4, [pc, #60]	; (80226e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80226a2:	7823      	ldrb	r3, [r4, #0]
 80226a4:	f3bf 8f5b 	dmb	ish
 80226a8:	07db      	lsls	r3, r3, #31
 80226aa:	d40b      	bmi.n	80226c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80226ac:	4620      	mov	r0, r4
 80226ae:	f008 f898 	bl	802a7e2 <__cxa_guard_acquire>
 80226b2:	b138      	cbz	r0, 80226c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80226b4:	4620      	mov	r0, r4
 80226b6:	f008 f8a0 	bl	802a7fa <__cxa_guard_release>
 80226ba:	4a06      	ldr	r2, [pc, #24]	; (80226d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80226bc:	4909      	ldr	r1, [pc, #36]	; (80226e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80226be:	480a      	ldr	r0, [pc, #40]	; (80226e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80226c0:	f008 f888 	bl	802a7d4 <__aeabi_atexit>
 80226c4:	4b05      	ldr	r3, [pc, #20]	; (80226dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80226c6:	62ab      	str	r3, [r5, #40]	; 0x28
 80226c8:	4b07      	ldr	r3, [pc, #28]	; (80226e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80226ca:	62eb      	str	r3, [r5, #44]	; 0x2c
 80226cc:	bd38      	pop	{r3, r4, r5, pc}
 80226ce:	bf00      	nop
 80226d0:	20002314 	.word	0x20002314
 80226d4:	20000000 	.word	0x20000000
 80226d8:	0801f211 	.word	0x0801f211
 80226dc:	20000050 	.word	0x20000050
 80226e0:	20002318 	.word	0x20002318
 80226e4:	0801f20f 	.word	0x0801f20f
 80226e8:	20000054 	.word	0x20000054

080226ec <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80226ec:	b510      	push	{r4, lr}
 80226ee:	4604      	mov	r4, r0
 80226f0:	f7ff ff88 	bl	8022604 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80226f4:	4620      	mov	r0, r4
 80226f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80226fa:	f7ff bfbd 	b.w	8022678 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08022700 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8022700:	b538      	push	{r3, r4, r5, lr}
 8022702:	4c15      	ldr	r4, [pc, #84]	; (8022758 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8022704:	7823      	ldrb	r3, [r4, #0]
 8022706:	f3bf 8f5b 	dmb	ish
 802270a:	07da      	lsls	r2, r3, #31
 802270c:	4605      	mov	r5, r0
 802270e:	d40b      	bmi.n	8022728 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8022710:	4620      	mov	r0, r4
 8022712:	f008 f866 	bl	802a7e2 <__cxa_guard_acquire>
 8022716:	b138      	cbz	r0, 8022728 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8022718:	4620      	mov	r0, r4
 802271a:	f008 f86e 	bl	802a7fa <__cxa_guard_release>
 802271e:	4a0f      	ldr	r2, [pc, #60]	; (802275c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8022720:	490f      	ldr	r1, [pc, #60]	; (8022760 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8022722:	4810      	ldr	r0, [pc, #64]	; (8022764 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8022724:	f008 f856 	bl	802a7d4 <__aeabi_atexit>
 8022728:	4c0f      	ldr	r4, [pc, #60]	; (8022768 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 802272a:	7823      	ldrb	r3, [r4, #0]
 802272c:	f3bf 8f5b 	dmb	ish
 8022730:	07db      	lsls	r3, r3, #31
 8022732:	d40b      	bmi.n	802274c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8022734:	4620      	mov	r0, r4
 8022736:	f008 f854 	bl	802a7e2 <__cxa_guard_acquire>
 802273a:	b138      	cbz	r0, 802274c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 802273c:	4620      	mov	r0, r4
 802273e:	f008 f85c 	bl	802a7fa <__cxa_guard_release>
 8022742:	4a06      	ldr	r2, [pc, #24]	; (802275c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8022744:	4909      	ldr	r1, [pc, #36]	; (802276c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8022746:	480a      	ldr	r0, [pc, #40]	; (8022770 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8022748:	f008 f844 	bl	802a7d4 <__aeabi_atexit>
 802274c:	4b05      	ldr	r3, [pc, #20]	; (8022764 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 802274e:	652b      	str	r3, [r5, #80]	; 0x50
 8022750:	4b07      	ldr	r3, [pc, #28]	; (8022770 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8022752:	656b      	str	r3, [r5, #84]	; 0x54
 8022754:	bd38      	pop	{r3, r4, r5, pc}
 8022756:	bf00      	nop
 8022758:	2000234c 	.word	0x2000234c
 802275c:	20000000 	.word	0x20000000
 8022760:	0801f1fd 	.word	0x0801f1fd
 8022764:	20000088 	.word	0x20000088
 8022768:	20002350 	.word	0x20002350
 802276c:	0801f1fb 	.word	0x0801f1fb
 8022770:	2000008c 	.word	0x2000008c

08022774 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8022774:	b538      	push	{r3, r4, r5, lr}
 8022776:	4c15      	ldr	r4, [pc, #84]	; (80227cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8022778:	7823      	ldrb	r3, [r4, #0]
 802277a:	f3bf 8f5b 	dmb	ish
 802277e:	07da      	lsls	r2, r3, #31
 8022780:	4605      	mov	r5, r0
 8022782:	d40b      	bmi.n	802279c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8022784:	4620      	mov	r0, r4
 8022786:	f008 f82c 	bl	802a7e2 <__cxa_guard_acquire>
 802278a:	b138      	cbz	r0, 802279c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 802278c:	4620      	mov	r0, r4
 802278e:	f008 f834 	bl	802a7fa <__cxa_guard_release>
 8022792:	4a0f      	ldr	r2, [pc, #60]	; (80227d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8022794:	490f      	ldr	r1, [pc, #60]	; (80227d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8022796:	4810      	ldr	r0, [pc, #64]	; (80227d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8022798:	f008 f81c 	bl	802a7d4 <__aeabi_atexit>
 802279c:	4c0f      	ldr	r4, [pc, #60]	; (80227dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 802279e:	7823      	ldrb	r3, [r4, #0]
 80227a0:	f3bf 8f5b 	dmb	ish
 80227a4:	07db      	lsls	r3, r3, #31
 80227a6:	d40b      	bmi.n	80227c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80227a8:	4620      	mov	r0, r4
 80227aa:	f008 f81a 	bl	802a7e2 <__cxa_guard_acquire>
 80227ae:	b138      	cbz	r0, 80227c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80227b0:	4620      	mov	r0, r4
 80227b2:	f008 f822 	bl	802a7fa <__cxa_guard_release>
 80227b6:	4a06      	ldr	r2, [pc, #24]	; (80227d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80227b8:	4909      	ldr	r1, [pc, #36]	; (80227e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80227ba:	480a      	ldr	r0, [pc, #40]	; (80227e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80227bc:	f008 f80a 	bl	802a7d4 <__aeabi_atexit>
 80227c0:	4b05      	ldr	r3, [pc, #20]	; (80227d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80227c2:	64ab      	str	r3, [r5, #72]	; 0x48
 80227c4:	4b07      	ldr	r3, [pc, #28]	; (80227e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80227c6:	64eb      	str	r3, [r5, #76]	; 0x4c
 80227c8:	bd38      	pop	{r3, r4, r5, pc}
 80227ca:	bf00      	nop
 80227cc:	20002354 	.word	0x20002354
 80227d0:	20000000 	.word	0x20000000
 80227d4:	0801f201 	.word	0x0801f201
 80227d8:	20000090 	.word	0x20000090
 80227dc:	20002358 	.word	0x20002358
 80227e0:	0801f1ff 	.word	0x0801f1ff
 80227e4:	20000094 	.word	0x20000094

080227e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80227e8:	b538      	push	{r3, r4, r5, lr}
 80227ea:	4c15      	ldr	r4, [pc, #84]	; (8022840 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80227ec:	7823      	ldrb	r3, [r4, #0]
 80227ee:	f3bf 8f5b 	dmb	ish
 80227f2:	07da      	lsls	r2, r3, #31
 80227f4:	4605      	mov	r5, r0
 80227f6:	d40b      	bmi.n	8022810 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80227f8:	4620      	mov	r0, r4
 80227fa:	f007 fff2 	bl	802a7e2 <__cxa_guard_acquire>
 80227fe:	b138      	cbz	r0, 8022810 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8022800:	4620      	mov	r0, r4
 8022802:	f007 fffa 	bl	802a7fa <__cxa_guard_release>
 8022806:	4a0f      	ldr	r2, [pc, #60]	; (8022844 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8022808:	490f      	ldr	r1, [pc, #60]	; (8022848 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 802280a:	4810      	ldr	r0, [pc, #64]	; (802284c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 802280c:	f007 ffe2 	bl	802a7d4 <__aeabi_atexit>
 8022810:	4c0f      	ldr	r4, [pc, #60]	; (8022850 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8022812:	7823      	ldrb	r3, [r4, #0]
 8022814:	f3bf 8f5b 	dmb	ish
 8022818:	07db      	lsls	r3, r3, #31
 802281a:	d40b      	bmi.n	8022834 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 802281c:	4620      	mov	r0, r4
 802281e:	f007 ffe0 	bl	802a7e2 <__cxa_guard_acquire>
 8022822:	b138      	cbz	r0, 8022834 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8022824:	4620      	mov	r0, r4
 8022826:	f007 ffe8 	bl	802a7fa <__cxa_guard_release>
 802282a:	4a06      	ldr	r2, [pc, #24]	; (8022844 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 802282c:	4909      	ldr	r1, [pc, #36]	; (8022854 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 802282e:	480a      	ldr	r0, [pc, #40]	; (8022858 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8022830:	f007 ffd0 	bl	802a7d4 <__aeabi_atexit>
 8022834:	4b05      	ldr	r3, [pc, #20]	; (802284c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8022836:	642b      	str	r3, [r5, #64]	; 0x40
 8022838:	4b07      	ldr	r3, [pc, #28]	; (8022858 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 802283a:	646b      	str	r3, [r5, #68]	; 0x44
 802283c:	bd38      	pop	{r3, r4, r5, pc}
 802283e:	bf00      	nop
 8022840:	2000231c 	.word	0x2000231c
 8022844:	20000000 	.word	0x20000000
 8022848:	0801f205 	.word	0x0801f205
 802284c:	20000058 	.word	0x20000058
 8022850:	20002320 	.word	0x20002320
 8022854:	0801f203 	.word	0x0801f203
 8022858:	2000005c 	.word	0x2000005c

0802285c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 802285c:	b538      	push	{r3, r4, r5, lr}
 802285e:	4c15      	ldr	r4, [pc, #84]	; (80228b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8022860:	7823      	ldrb	r3, [r4, #0]
 8022862:	f3bf 8f5b 	dmb	ish
 8022866:	07da      	lsls	r2, r3, #31
 8022868:	4605      	mov	r5, r0
 802286a:	d40b      	bmi.n	8022884 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 802286c:	4620      	mov	r0, r4
 802286e:	f007 ffb8 	bl	802a7e2 <__cxa_guard_acquire>
 8022872:	b138      	cbz	r0, 8022884 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8022874:	4620      	mov	r0, r4
 8022876:	f007 ffc0 	bl	802a7fa <__cxa_guard_release>
 802287a:	4a0f      	ldr	r2, [pc, #60]	; (80228b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 802287c:	490f      	ldr	r1, [pc, #60]	; (80228bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 802287e:	4810      	ldr	r0, [pc, #64]	; (80228c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8022880:	f007 ffa8 	bl	802a7d4 <__aeabi_atexit>
 8022884:	4c0f      	ldr	r4, [pc, #60]	; (80228c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8022886:	7823      	ldrb	r3, [r4, #0]
 8022888:	f3bf 8f5b 	dmb	ish
 802288c:	07db      	lsls	r3, r3, #31
 802288e:	d40b      	bmi.n	80228a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8022890:	4620      	mov	r0, r4
 8022892:	f007 ffa6 	bl	802a7e2 <__cxa_guard_acquire>
 8022896:	b138      	cbz	r0, 80228a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8022898:	4620      	mov	r0, r4
 802289a:	f007 ffae 	bl	802a7fa <__cxa_guard_release>
 802289e:	4a06      	ldr	r2, [pc, #24]	; (80228b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80228a0:	4909      	ldr	r1, [pc, #36]	; (80228c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80228a2:	480a      	ldr	r0, [pc, #40]	; (80228cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80228a4:	f007 ff96 	bl	802a7d4 <__aeabi_atexit>
 80228a8:	4b05      	ldr	r3, [pc, #20]	; (80228c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80228aa:	63ab      	str	r3, [r5, #56]	; 0x38
 80228ac:	4b07      	ldr	r3, [pc, #28]	; (80228cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80228ae:	63eb      	str	r3, [r5, #60]	; 0x3c
 80228b0:	bd38      	pop	{r3, r4, r5, pc}
 80228b2:	bf00      	nop
 80228b4:	2000233c 	.word	0x2000233c
 80228b8:	20000000 	.word	0x20000000
 80228bc:	0801f209 	.word	0x0801f209
 80228c0:	20000078 	.word	0x20000078
 80228c4:	20002340 	.word	0x20002340
 80228c8:	0801f207 	.word	0x0801f207
 80228cc:	2000007c 	.word	0x2000007c

080228d0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80228d0:	b510      	push	{r4, lr}
 80228d2:	4604      	mov	r4, r0
 80228d4:	f7ff ff14 	bl	8022700 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80228d8:	4620      	mov	r0, r4
 80228da:	f7ff ff85 	bl	80227e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80228de:	4620      	mov	r0, r4
 80228e0:	f7ff ff48 	bl	8022774 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80228e4:	4620      	mov	r0, r4
 80228e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80228ea:	f7ff bfb7 	b.w	802285c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080228f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80228f0:	b538      	push	{r3, r4, r5, lr}
 80228f2:	4c15      	ldr	r4, [pc, #84]	; (8022948 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80228f4:	7823      	ldrb	r3, [r4, #0]
 80228f6:	f3bf 8f5b 	dmb	ish
 80228fa:	07da      	lsls	r2, r3, #31
 80228fc:	4605      	mov	r5, r0
 80228fe:	d40b      	bmi.n	8022918 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8022900:	4620      	mov	r0, r4
 8022902:	f007 ff6e 	bl	802a7e2 <__cxa_guard_acquire>
 8022906:	b138      	cbz	r0, 8022918 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8022908:	4620      	mov	r0, r4
 802290a:	f007 ff76 	bl	802a7fa <__cxa_guard_release>
 802290e:	4a0f      	ldr	r2, [pc, #60]	; (802294c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8022910:	490f      	ldr	r1, [pc, #60]	; (8022950 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8022912:	4810      	ldr	r0, [pc, #64]	; (8022954 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8022914:	f007 ff5e 	bl	802a7d4 <__aeabi_atexit>
 8022918:	4c0f      	ldr	r4, [pc, #60]	; (8022958 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 802291a:	7823      	ldrb	r3, [r4, #0]
 802291c:	f3bf 8f5b 	dmb	ish
 8022920:	07db      	lsls	r3, r3, #31
 8022922:	d40b      	bmi.n	802293c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8022924:	4620      	mov	r0, r4
 8022926:	f007 ff5c 	bl	802a7e2 <__cxa_guard_acquire>
 802292a:	b138      	cbz	r0, 802293c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 802292c:	4620      	mov	r0, r4
 802292e:	f007 ff64 	bl	802a7fa <__cxa_guard_release>
 8022932:	4a06      	ldr	r2, [pc, #24]	; (802294c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8022934:	4909      	ldr	r1, [pc, #36]	; (802295c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8022936:	480a      	ldr	r0, [pc, #40]	; (8022960 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8022938:	f007 ff4c 	bl	802a7d4 <__aeabi_atexit>
 802293c:	4b05      	ldr	r3, [pc, #20]	; (8022954 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802293e:	662b      	str	r3, [r5, #96]	; 0x60
 8022940:	4b07      	ldr	r3, [pc, #28]	; (8022960 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8022942:	666b      	str	r3, [r5, #100]	; 0x64
 8022944:	bd38      	pop	{r3, r4, r5, pc}
 8022946:	bf00      	nop
 8022948:	20002324 	.word	0x20002324
 802294c:	20000000 	.word	0x20000000
 8022950:	0801f1f5 	.word	0x0801f1f5
 8022954:	20000060 	.word	0x20000060
 8022958:	20002328 	.word	0x20002328
 802295c:	0801f1f3 	.word	0x0801f1f3
 8022960:	20000064 	.word	0x20000064

08022964 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8022964:	b538      	push	{r3, r4, r5, lr}
 8022966:	4c15      	ldr	r4, [pc, #84]	; (80229bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8022968:	7823      	ldrb	r3, [r4, #0]
 802296a:	f3bf 8f5b 	dmb	ish
 802296e:	07da      	lsls	r2, r3, #31
 8022970:	4605      	mov	r5, r0
 8022972:	d40b      	bmi.n	802298c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8022974:	4620      	mov	r0, r4
 8022976:	f007 ff34 	bl	802a7e2 <__cxa_guard_acquire>
 802297a:	b138      	cbz	r0, 802298c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 802297c:	4620      	mov	r0, r4
 802297e:	f007 ff3c 	bl	802a7fa <__cxa_guard_release>
 8022982:	4a0f      	ldr	r2, [pc, #60]	; (80229c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8022984:	490f      	ldr	r1, [pc, #60]	; (80229c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8022986:	4810      	ldr	r0, [pc, #64]	; (80229c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8022988:	f007 ff24 	bl	802a7d4 <__aeabi_atexit>
 802298c:	4c0f      	ldr	r4, [pc, #60]	; (80229cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 802298e:	7823      	ldrb	r3, [r4, #0]
 8022990:	f3bf 8f5b 	dmb	ish
 8022994:	07db      	lsls	r3, r3, #31
 8022996:	d40b      	bmi.n	80229b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8022998:	4620      	mov	r0, r4
 802299a:	f007 ff22 	bl	802a7e2 <__cxa_guard_acquire>
 802299e:	b138      	cbz	r0, 80229b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80229a0:	4620      	mov	r0, r4
 80229a2:	f007 ff2a 	bl	802a7fa <__cxa_guard_release>
 80229a6:	4a06      	ldr	r2, [pc, #24]	; (80229c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80229a8:	4909      	ldr	r1, [pc, #36]	; (80229d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80229aa:	480a      	ldr	r0, [pc, #40]	; (80229d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80229ac:	f007 ff12 	bl	802a7d4 <__aeabi_atexit>
 80229b0:	4b05      	ldr	r3, [pc, #20]	; (80229c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80229b2:	65ab      	str	r3, [r5, #88]	; 0x58
 80229b4:	4b07      	ldr	r3, [pc, #28]	; (80229d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80229b6:	65eb      	str	r3, [r5, #92]	; 0x5c
 80229b8:	bd38      	pop	{r3, r4, r5, pc}
 80229ba:	bf00      	nop
 80229bc:	200022fc 	.word	0x200022fc
 80229c0:	20000000 	.word	0x20000000
 80229c4:	0801f1f9 	.word	0x0801f1f9
 80229c8:	20000038 	.word	0x20000038
 80229cc:	20002300 	.word	0x20002300
 80229d0:	0801f1f7 	.word	0x0801f1f7
 80229d4:	2000003c 	.word	0x2000003c

080229d8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80229d8:	b510      	push	{r4, lr}
 80229da:	4604      	mov	r4, r0
 80229dc:	f7ff ff88 	bl	80228f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80229e0:	4620      	mov	r0, r4
 80229e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80229e6:	f7ff bfbd 	b.w	8022964 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080229ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80229ec:	b538      	push	{r3, r4, r5, lr}
 80229ee:	4c15      	ldr	r4, [pc, #84]	; (8022a44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80229f0:	7823      	ldrb	r3, [r4, #0]
 80229f2:	f3bf 8f5b 	dmb	ish
 80229f6:	07da      	lsls	r2, r3, #31
 80229f8:	4605      	mov	r5, r0
 80229fa:	d40b      	bmi.n	8022a14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80229fc:	4620      	mov	r0, r4
 80229fe:	f007 fef0 	bl	802a7e2 <__cxa_guard_acquire>
 8022a02:	b138      	cbz	r0, 8022a14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8022a04:	4620      	mov	r0, r4
 8022a06:	f007 fef8 	bl	802a7fa <__cxa_guard_release>
 8022a0a:	4a0f      	ldr	r2, [pc, #60]	; (8022a48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8022a0c:	490f      	ldr	r1, [pc, #60]	; (8022a4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8022a0e:	4810      	ldr	r0, [pc, #64]	; (8022a50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8022a10:	f007 fee0 	bl	802a7d4 <__aeabi_atexit>
 8022a14:	4c0f      	ldr	r4, [pc, #60]	; (8022a54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8022a16:	7823      	ldrb	r3, [r4, #0]
 8022a18:	f3bf 8f5b 	dmb	ish
 8022a1c:	07db      	lsls	r3, r3, #31
 8022a1e:	d40b      	bmi.n	8022a38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8022a20:	4620      	mov	r0, r4
 8022a22:	f007 fede 	bl	802a7e2 <__cxa_guard_acquire>
 8022a26:	b138      	cbz	r0, 8022a38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8022a28:	4620      	mov	r0, r4
 8022a2a:	f007 fee6 	bl	802a7fa <__cxa_guard_release>
 8022a2e:	4a06      	ldr	r2, [pc, #24]	; (8022a48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8022a30:	4909      	ldr	r1, [pc, #36]	; (8022a58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8022a32:	480a      	ldr	r0, [pc, #40]	; (8022a5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8022a34:	f007 fece 	bl	802a7d4 <__aeabi_atexit>
 8022a38:	4b05      	ldr	r3, [pc, #20]	; (8022a50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8022a3a:	672b      	str	r3, [r5, #112]	; 0x70
 8022a3c:	4b07      	ldr	r3, [pc, #28]	; (8022a5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8022a3e:	676b      	str	r3, [r5, #116]	; 0x74
 8022a40:	bd38      	pop	{r3, r4, r5, pc}
 8022a42:	bf00      	nop
 8022a44:	200022f4 	.word	0x200022f4
 8022a48:	20000000 	.word	0x20000000
 8022a4c:	0801f1ed 	.word	0x0801f1ed
 8022a50:	20000030 	.word	0x20000030
 8022a54:	200022f8 	.word	0x200022f8
 8022a58:	0801f1eb 	.word	0x0801f1eb
 8022a5c:	20000034 	.word	0x20000034

08022a60 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8022a60:	b538      	push	{r3, r4, r5, lr}
 8022a62:	4c15      	ldr	r4, [pc, #84]	; (8022ab8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8022a64:	7823      	ldrb	r3, [r4, #0]
 8022a66:	f3bf 8f5b 	dmb	ish
 8022a6a:	07da      	lsls	r2, r3, #31
 8022a6c:	4605      	mov	r5, r0
 8022a6e:	d40b      	bmi.n	8022a88 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8022a70:	4620      	mov	r0, r4
 8022a72:	f007 feb6 	bl	802a7e2 <__cxa_guard_acquire>
 8022a76:	b138      	cbz	r0, 8022a88 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8022a78:	4620      	mov	r0, r4
 8022a7a:	f007 febe 	bl	802a7fa <__cxa_guard_release>
 8022a7e:	4a0f      	ldr	r2, [pc, #60]	; (8022abc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8022a80:	490f      	ldr	r1, [pc, #60]	; (8022ac0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8022a82:	4810      	ldr	r0, [pc, #64]	; (8022ac4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8022a84:	f007 fea6 	bl	802a7d4 <__aeabi_atexit>
 8022a88:	4c0f      	ldr	r4, [pc, #60]	; (8022ac8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8022a8a:	7823      	ldrb	r3, [r4, #0]
 8022a8c:	f3bf 8f5b 	dmb	ish
 8022a90:	07db      	lsls	r3, r3, #31
 8022a92:	d40b      	bmi.n	8022aac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8022a94:	4620      	mov	r0, r4
 8022a96:	f007 fea4 	bl	802a7e2 <__cxa_guard_acquire>
 8022a9a:	b138      	cbz	r0, 8022aac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8022a9c:	4620      	mov	r0, r4
 8022a9e:	f007 feac 	bl	802a7fa <__cxa_guard_release>
 8022aa2:	4a06      	ldr	r2, [pc, #24]	; (8022abc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8022aa4:	4909      	ldr	r1, [pc, #36]	; (8022acc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8022aa6:	480a      	ldr	r0, [pc, #40]	; (8022ad0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8022aa8:	f007 fe94 	bl	802a7d4 <__aeabi_atexit>
 8022aac:	4b05      	ldr	r3, [pc, #20]	; (8022ac4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8022aae:	66ab      	str	r3, [r5, #104]	; 0x68
 8022ab0:	4b07      	ldr	r3, [pc, #28]	; (8022ad0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8022ab2:	66eb      	str	r3, [r5, #108]	; 0x6c
 8022ab4:	bd38      	pop	{r3, r4, r5, pc}
 8022ab6:	bf00      	nop
 8022ab8:	200022ec 	.word	0x200022ec
 8022abc:	20000000 	.word	0x20000000
 8022ac0:	0801f1f1 	.word	0x0801f1f1
 8022ac4:	20000028 	.word	0x20000028
 8022ac8:	200022f0 	.word	0x200022f0
 8022acc:	0801f1ef 	.word	0x0801f1ef
 8022ad0:	2000002c 	.word	0x2000002c

08022ad4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8022ad4:	b510      	push	{r4, lr}
 8022ad6:	4604      	mov	r4, r0
 8022ad8:	f7ff ff88 	bl	80229ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8022adc:	4620      	mov	r0, r4
 8022ade:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022ae2:	f7ff bfbd 	b.w	8022a60 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08022ae6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8022ae6:	b510      	push	{r4, lr}
 8022ae8:	4604      	mov	r4, r0
 8022aea:	f7ff fff3 	bl	8022ad4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8022aee:	4620      	mov	r0, r4
 8022af0:	f7ff ff72 	bl	80229d8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8022af4:	4620      	mov	r0, r4
 8022af6:	f7ff fdf9 	bl	80226ec <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8022afa:	4620      	mov	r0, r4
 8022afc:	f7ff fcfa 	bl	80224f4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8022b00:	4620      	mov	r0, r4
 8022b02:	f7ff fd75 	bl	80225f0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8022b06:	4620      	mov	r0, r4
 8022b08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022b0c:	f7ff bee0 	b.w	80228d0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08022b10 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8022b10:	b538      	push	{r3, r4, r5, lr}
 8022b12:	4c0b      	ldr	r4, [pc, #44]	; (8022b40 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8022b14:	7823      	ldrb	r3, [r4, #0]
 8022b16:	f3bf 8f5b 	dmb	ish
 8022b1a:	07db      	lsls	r3, r3, #31
 8022b1c:	4605      	mov	r5, r0
 8022b1e:	d40b      	bmi.n	8022b38 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8022b20:	4620      	mov	r0, r4
 8022b22:	f007 fe5e 	bl	802a7e2 <__cxa_guard_acquire>
 8022b26:	b138      	cbz	r0, 8022b38 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8022b28:	4620      	mov	r0, r4
 8022b2a:	f007 fe66 	bl	802a7fa <__cxa_guard_release>
 8022b2e:	4a05      	ldr	r2, [pc, #20]	; (8022b44 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8022b30:	4905      	ldr	r1, [pc, #20]	; (8022b48 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8022b32:	4806      	ldr	r0, [pc, #24]	; (8022b4c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8022b34:	f007 fe4e 	bl	802a7d4 <__aeabi_atexit>
 8022b38:	4b04      	ldr	r3, [pc, #16]	; (8022b4c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8022b3a:	67ab      	str	r3, [r5, #120]	; 0x78
 8022b3c:	bd38      	pop	{r3, r4, r5, pc}
 8022b3e:	bf00      	nop
 8022b40:	200022e0 	.word	0x200022e0
 8022b44:	20000000 	.word	0x20000000
 8022b48:	0801f1e9 	.word	0x0801f1e9
 8022b4c:	20000020 	.word	0x20000020

08022b50 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8022b50:	b538      	push	{r3, r4, r5, lr}
 8022b52:	4c0b      	ldr	r4, [pc, #44]	; (8022b80 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8022b54:	7823      	ldrb	r3, [r4, #0]
 8022b56:	f3bf 8f5b 	dmb	ish
 8022b5a:	07db      	lsls	r3, r3, #31
 8022b5c:	4605      	mov	r5, r0
 8022b5e:	d40b      	bmi.n	8022b78 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8022b60:	4620      	mov	r0, r4
 8022b62:	f007 fe3e 	bl	802a7e2 <__cxa_guard_acquire>
 8022b66:	b138      	cbz	r0, 8022b78 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8022b68:	4620      	mov	r0, r4
 8022b6a:	f007 fe46 	bl	802a7fa <__cxa_guard_release>
 8022b6e:	4a05      	ldr	r2, [pc, #20]	; (8022b84 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8022b70:	4905      	ldr	r1, [pc, #20]	; (8022b88 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8022b72:	4806      	ldr	r0, [pc, #24]	; (8022b8c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8022b74:	f007 fe2e 	bl	802a7d4 <__aeabi_atexit>
 8022b78:	4b04      	ldr	r3, [pc, #16]	; (8022b8c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8022b7a:	67eb      	str	r3, [r5, #124]	; 0x7c
 8022b7c:	bd38      	pop	{r3, r4, r5, pc}
 8022b7e:	bf00      	nop
 8022b80:	200022e4 	.word	0x200022e4
 8022b84:	20000000 	.word	0x20000000
 8022b88:	0801f1e7 	.word	0x0801f1e7
 8022b8c:	20000024 	.word	0x20000024

08022b90 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8022b90:	b570      	push	{r4, r5, r6, lr}
 8022b92:	4d0d      	ldr	r5, [pc, #52]	; (8022bc8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8022b94:	4c0d      	ldr	r4, [pc, #52]	; (8022bcc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 8022b96:	782b      	ldrb	r3, [r5, #0]
 8022b98:	f3bf 8f5b 	dmb	ish
 8022b9c:	f013 0f01 	tst.w	r3, #1
 8022ba0:	4606      	mov	r6, r0
 8022ba2:	d10d      	bne.n	8022bc0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8022ba4:	4628      	mov	r0, r5
 8022ba6:	f007 fe1c 	bl	802a7e2 <__cxa_guard_acquire>
 8022baa:	b148      	cbz	r0, 8022bc0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8022bac:	4b08      	ldr	r3, [pc, #32]	; (8022bd0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8022bae:	6023      	str	r3, [r4, #0]
 8022bb0:	4628      	mov	r0, r5
 8022bb2:	f007 fe22 	bl	802a7fa <__cxa_guard_release>
 8022bb6:	4a07      	ldr	r2, [pc, #28]	; (8022bd4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8022bb8:	4907      	ldr	r1, [pc, #28]	; (8022bd8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8022bba:	4620      	mov	r0, r4
 8022bbc:	f007 fe0a 	bl	802a7d4 <__aeabi_atexit>
 8022bc0:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 8022bc4:	bd70      	pop	{r4, r5, r6, pc}
 8022bc6:	bf00      	nop
 8022bc8:	200022e8 	.word	0x200022e8
 8022bcc:	2000235c 	.word	0x2000235c
 8022bd0:	0802fba8 	.word	0x0802fba8
 8022bd4:	20000000 	.word	0x20000000
 8022bd8:	0801f1e5 	.word	0x0801f1e5

08022bdc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8022bdc:	b510      	push	{r4, lr}
 8022bde:	4604      	mov	r4, r0
 8022be0:	f7ff ff96 	bl	8022b10 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8022be4:	4620      	mov	r0, r4
 8022be6:	f7ff ffb3 	bl	8022b50 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8022bea:	4620      	mov	r0, r4
 8022bec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022bf0:	f7ff bfce 	b.w	8022b90 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

08022bf4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8022bf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022bf8:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8022bfc:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8022c00:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 8022c04:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8022c08:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8022c0c:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8022c10:	8808      	ldrh	r0, [r1, #0]
 8022c12:	fb05 4c0e 	mla	ip, r5, lr, r4
 8022c16:	2d00      	cmp	r5, #0
 8022c18:	eb02 0a0c 	add.w	sl, r2, ip
 8022c1c:	f2c0 80b0 	blt.w	8022d80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8022c20:	45ab      	cmp	fp, r5
 8022c22:	f340 80ad 	ble.w	8022d80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8022c26:	2c00      	cmp	r4, #0
 8022c28:	f2c0 80a8 	blt.w	8022d7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8022c2c:	45a6      	cmp	lr, r4
 8022c2e:	f340 80a5 	ble.w	8022d7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8022c32:	f812 200c 	ldrb.w	r2, [r2, ip]
 8022c36:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8022c3a:	1c62      	adds	r2, r4, #1
 8022c3c:	f100 80a3 	bmi.w	8022d86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022c40:	4596      	cmp	lr, r2
 8022c42:	f340 80a0 	ble.w	8022d86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022c46:	f1b9 0f00 	cmp.w	r9, #0
 8022c4a:	f000 809c 	beq.w	8022d86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022c4e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8022c52:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8022c56:	3501      	adds	r5, #1
 8022c58:	f100 8099 	bmi.w	8022d8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8022c5c:	45ab      	cmp	fp, r5
 8022c5e:	f340 8096 	ble.w	8022d8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8022c62:	2f00      	cmp	r7, #0
 8022c64:	f000 8093 	beq.w	8022d8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8022c68:	2c00      	cmp	r4, #0
 8022c6a:	f2c0 808e 	blt.w	8022d8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8022c6e:	45a6      	cmp	lr, r4
 8022c70:	f340 808b 	ble.w	8022d8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8022c74:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8022c78:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8022c7c:	3401      	adds	r4, #1
 8022c7e:	f100 8089 	bmi.w	8022d94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8022c82:	45a6      	cmp	lr, r4
 8022c84:	f340 8086 	ble.w	8022d94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8022c88:	f1b9 0f00 	cmp.w	r9, #0
 8022c8c:	f000 8082 	beq.w	8022d94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8022c90:	44d6      	add	lr, sl
 8022c92:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8022c96:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8022c9a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022c9e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022ca2:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8022ca6:	fb19 fe07 	smulbb	lr, r9, r7
 8022caa:	ea44 0808 	orr.w	r8, r4, r8
 8022cae:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8022cb2:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8022cb6:	f1c7 0210 	rsb	r2, r7, #16
 8022cba:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022cbe:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022cc2:	ea44 0c0c 	orr.w	ip, r4, ip
 8022cc6:	eba2 0209 	sub.w	r2, r2, r9
 8022cca:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022cce:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8022cd2:	fb04 f40c 	mul.w	r4, r4, ip
 8022cd6:	fb02 4808 	mla	r8, r2, r8, r4
 8022cda:	041a      	lsls	r2, r3, #16
 8022cdc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022ce0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022ce4:	4313      	orrs	r3, r2
 8022ce6:	042a      	lsls	r2, r5, #16
 8022ce8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022cec:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022cf0:	fb0e 8303 	mla	r3, lr, r3, r8
 8022cf4:	432a      	orrs	r2, r5
 8022cf6:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022cfa:	fb07 3202 	mla	r2, r7, r2, r3
 8022cfe:	0d53      	lsrs	r3, r2, #21
 8022d00:	0952      	lsrs	r2, r2, #5
 8022d02:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022d06:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022d0a:	431a      	orrs	r2, r3
 8022d0c:	b293      	uxth	r3, r2
 8022d0e:	b2b4      	uxth	r4, r6
 8022d10:	1202      	asrs	r2, r0, #8
 8022d12:	43f6      	mvns	r6, r6
 8022d14:	b2f6      	uxtb	r6, r6
 8022d16:	121d      	asrs	r5, r3, #8
 8022d18:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022d1c:	fb12 f206 	smulbb	r2, r2, r6
 8022d20:	10c7      	asrs	r7, r0, #3
 8022d22:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022d26:	00c0      	lsls	r0, r0, #3
 8022d28:	fb05 2504 	mla	r5, r5, r4, r2
 8022d2c:	b2c0      	uxtb	r0, r0
 8022d2e:	10da      	asrs	r2, r3, #3
 8022d30:	00db      	lsls	r3, r3, #3
 8022d32:	b2db      	uxtb	r3, r3
 8022d34:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022d38:	fb10 f006 	smulbb	r0, r0, r6
 8022d3c:	b2ad      	uxth	r5, r5
 8022d3e:	fb03 0004 	mla	r0, r3, r4, r0
 8022d42:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022d46:	fb17 f706 	smulbb	r7, r7, r6
 8022d4a:	b280      	uxth	r0, r0
 8022d4c:	1c6b      	adds	r3, r5, #1
 8022d4e:	fb02 7204 	mla	r2, r2, r4, r7
 8022d52:	b292      	uxth	r2, r2
 8022d54:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022d58:	1c43      	adds	r3, r0, #1
 8022d5a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022d5e:	1c50      	adds	r0, r2, #1
 8022d60:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8022d64:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022d68:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022d6c:	0952      	lsrs	r2, r2, #5
 8022d6e:	432b      	orrs	r3, r5
 8022d70:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022d74:	4313      	orrs	r3, r2
 8022d76:	800b      	strh	r3, [r1, #0]
 8022d78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022d7c:	4680      	mov	r8, r0
 8022d7e:	e75c      	b.n	8022c3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8022d80:	4684      	mov	ip, r0
 8022d82:	4680      	mov	r8, r0
 8022d84:	e767      	b.n	8022c56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8022d86:	4684      	mov	ip, r0
 8022d88:	e765      	b.n	8022c56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8022d8a:	4605      	mov	r5, r0
 8022d8c:	e776      	b.n	8022c7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8022d8e:	4603      	mov	r3, r0
 8022d90:	4605      	mov	r5, r0
 8022d92:	e782      	b.n	8022c9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8022d94:	4603      	mov	r3, r0
 8022d96:	e780      	b.n	8022c9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08022d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022d9c:	b099      	sub	sp, #100	; 0x64
 8022d9e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8022da2:	9215      	str	r2, [sp, #84]	; 0x54
 8022da4:	9309      	str	r3, [sp, #36]	; 0x24
 8022da6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8022da8:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8022dac:	930d      	str	r3, [sp, #52]	; 0x34
 8022dae:	910c      	str	r1, [sp, #48]	; 0x30
 8022db0:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8022db4:	9016      	str	r0, [sp, #88]	; 0x58
 8022db6:	6850      	ldr	r0, [r2, #4]
 8022db8:	6812      	ldr	r2, [r2, #0]
 8022dba:	fb00 1303 	mla	r3, r0, r3, r1
 8022dbe:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8022dc2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022dc4:	681b      	ldr	r3, [r3, #0]
 8022dc6:	930b      	str	r3, [sp, #44]	; 0x2c
 8022dc8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022dca:	685e      	ldr	r6, [r3, #4]
 8022dcc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022dce:	43db      	mvns	r3, r3
 8022dd0:	b2db      	uxtb	r3, r3
 8022dd2:	3604      	adds	r6, #4
 8022dd4:	930a      	str	r3, [sp, #40]	; 0x28
 8022dd6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022dd8:	2b00      	cmp	r3, #0
 8022dda:	dc03      	bgt.n	8022de4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8022ddc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8022dde:	2b00      	cmp	r3, #0
 8022de0:	f340 8225 	ble.w	802322e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8022de4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022de6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022dea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022dee:	1e48      	subs	r0, r1, #1
 8022df0:	1e57      	subs	r7, r2, #1
 8022df2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022df4:	2b00      	cmp	r3, #0
 8022df6:	f340 80e3 	ble.w	8022fc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8022dfa:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8022dfe:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022e02:	d406      	bmi.n	8022e12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022e04:	4584      	cmp	ip, r0
 8022e06:	da04      	bge.n	8022e12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022e08:	2b00      	cmp	r3, #0
 8022e0a:	db02      	blt.n	8022e12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022e0c:	42bb      	cmp	r3, r7
 8022e0e:	f2c0 80d8 	blt.w	8022fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8022e12:	f11c 0c01 	adds.w	ip, ip, #1
 8022e16:	f100 80c9 	bmi.w	8022fac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022e1a:	4561      	cmp	r1, ip
 8022e1c:	f2c0 80c6 	blt.w	8022fac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022e20:	3301      	adds	r3, #1
 8022e22:	f100 80c3 	bmi.w	8022fac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022e26:	429a      	cmp	r2, r3
 8022e28:	f2c0 80c0 	blt.w	8022fac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022e2c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8022e30:	4647      	mov	r7, r8
 8022e32:	f1bb 0f00 	cmp.w	fp, #0
 8022e36:	f340 80e3 	ble.w	8023000 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8022e3a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8022e3c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022e3e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022e42:	689b      	ldr	r3, [r3, #8]
 8022e44:	ea5f 422a 	movs.w	r2, sl, asr #16
 8022e48:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022e4c:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8022e50:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8022e54:	f100 8121 	bmi.w	802309a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022e58:	f103 39ff 	add.w	r9, r3, #4294967295
 8022e5c:	454a      	cmp	r2, r9
 8022e5e:	f280 811c 	bge.w	802309a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022e62:	f1bc 0f00 	cmp.w	ip, #0
 8022e66:	f2c0 8118 	blt.w	802309a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022e6a:	f10e 39ff 	add.w	r9, lr, #4294967295
 8022e6e:	45cc      	cmp	ip, r9
 8022e70:	f280 8113 	bge.w	802309a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022e74:	b21b      	sxth	r3, r3
 8022e76:	fb0c 2203 	mla	r2, ip, r3, r2
 8022e7a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022e7c:	eb04 0902 	add.w	r9, r4, r2
 8022e80:	5ca2      	ldrb	r2, [r4, r2]
 8022e82:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8022e86:	2800      	cmp	r0, #0
 8022e88:	f000 80fe 	beq.w	8023088 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8022e8c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8022e90:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8022e94:	9211      	str	r2, [sp, #68]	; 0x44
 8022e96:	b151      	cbz	r1, 8022eae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022e98:	eb09 0203 	add.w	r2, r9, r3
 8022e9c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8022ea0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022ea4:	930f      	str	r3, [sp, #60]	; 0x3c
 8022ea6:	7853      	ldrb	r3, [r2, #1]
 8022ea8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022eac:	9312      	str	r3, [sp, #72]	; 0x48
 8022eae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022eb0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022eb2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022eb6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022eba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022ebe:	ea4c 0c03 	orr.w	ip, ip, r3
 8022ec2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8022ec4:	041b      	lsls	r3, r3, #16
 8022ec6:	fb10 f201 	smulbb	r2, r0, r1
 8022eca:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022ece:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022ed2:	10d2      	asrs	r2, r2, #3
 8022ed4:	4323      	orrs	r3, r4
 8022ed6:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8022eda:	4353      	muls	r3, r2
 8022edc:	fb09 330c 	mla	r3, r9, ip, r3
 8022ee0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8022ee4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022ee8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022eec:	ea4c 0e0e 	orr.w	lr, ip, lr
 8022ef0:	f1c1 0c10 	rsb	ip, r1, #16
 8022ef4:	ebac 0c00 	sub.w	ip, ip, r0
 8022ef8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022efc:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8022f00:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022f02:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022f04:	0418      	lsls	r0, r3, #16
 8022f06:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022f0a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022f0e:	4318      	orrs	r0, r3
 8022f10:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8022f14:	fb02 c200 	mla	r2, r2, r0, ip
 8022f18:	0d53      	lsrs	r3, r2, #21
 8022f1a:	0952      	lsrs	r2, r2, #5
 8022f1c:	8838      	ldrh	r0, [r7, #0]
 8022f1e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022f22:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022f26:	431a      	orrs	r2, r3
 8022f28:	b292      	uxth	r2, r2
 8022f2a:	1201      	asrs	r1, r0, #8
 8022f2c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8022f30:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8022f34:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022f38:	fb11 f104 	smulbb	r1, r1, r4
 8022f3c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022f40:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8022f44:	00c0      	lsls	r0, r0, #3
 8022f46:	fb0c 1c03 	mla	ip, ip, r3, r1
 8022f4a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8022f4e:	10d1      	asrs	r1, r2, #3
 8022f50:	b2c0      	uxtb	r0, r0
 8022f52:	00d2      	lsls	r2, r2, #3
 8022f54:	b2d2      	uxtb	r2, r2
 8022f56:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022f5a:	fb1e fe04 	smulbb	lr, lr, r4
 8022f5e:	fb10 f004 	smulbb	r0, r0, r4
 8022f62:	fa1f fc8c 	uxth.w	ip, ip
 8022f66:	fb01 e103 	mla	r1, r1, r3, lr
 8022f6a:	fb02 0303 	mla	r3, r2, r3, r0
 8022f6e:	b29a      	uxth	r2, r3
 8022f70:	f10c 0301 	add.w	r3, ip, #1
 8022f74:	b289      	uxth	r1, r1
 8022f76:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022f7a:	1c53      	adds	r3, r2, #1
 8022f7c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022f80:	1c4a      	adds	r2, r1, #1
 8022f82:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022f86:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022f8a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022f8e:	0949      	lsrs	r1, r1, #5
 8022f90:	ea43 030c 	orr.w	r3, r3, ip
 8022f94:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022f98:	430b      	orrs	r3, r1
 8022f9a:	803b      	strh	r3, [r7, #0]
 8022f9c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022f9e:	449a      	add	sl, r3
 8022fa0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022fa2:	3702      	adds	r7, #2
 8022fa4:	441d      	add	r5, r3
 8022fa6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022faa:	e742      	b.n	8022e32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8022fac:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022fae:	449a      	add	sl, r3
 8022fb0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022fb2:	441d      	add	r5, r3
 8022fb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022fb6:	3b01      	subs	r3, #1
 8022fb8:	9309      	str	r3, [sp, #36]	; 0x24
 8022fba:	f108 0802 	add.w	r8, r8, #2
 8022fbe:	e718      	b.n	8022df2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8022fc0:	d023      	beq.n	802300a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8022fc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022fc4:	9825      	ldr	r0, [sp, #148]	; 0x94
 8022fc6:	3b01      	subs	r3, #1
 8022fc8:	fb00 a003 	mla	r0, r0, r3, sl
 8022fcc:	1400      	asrs	r0, r0, #16
 8022fce:	f53f af2d 	bmi.w	8022e2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022fd2:	3901      	subs	r1, #1
 8022fd4:	4288      	cmp	r0, r1
 8022fd6:	f6bf af29 	bge.w	8022e2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022fda:	9926      	ldr	r1, [sp, #152]	; 0x98
 8022fdc:	fb01 5303 	mla	r3, r1, r3, r5
 8022fe0:	141b      	asrs	r3, r3, #16
 8022fe2:	f53f af23 	bmi.w	8022e2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022fe6:	3a01      	subs	r2, #1
 8022fe8:	4293      	cmp	r3, r2
 8022fea:	f6bf af1f 	bge.w	8022e2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022fee:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8022ff2:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8022ff6:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8022ffa:	f1be 0f00 	cmp.w	lr, #0
 8022ffe:	dc6c      	bgt.n	80230da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8023000:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023002:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023006:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 802300a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802300c:	2b00      	cmp	r3, #0
 802300e:	f340 810e 	ble.w	802322e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8023012:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023016:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802301a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802301e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023020:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023024:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023028:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802302c:	eef0 6a62 	vmov.f32	s13, s5
 8023030:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023034:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023038:	ee77 2a62 	vsub.f32	s5, s14, s5
 802303c:	ee16 aa90 	vmov	sl, s13
 8023040:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023044:	eef0 6a43 	vmov.f32	s13, s6
 8023048:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802304c:	ee12 2a90 	vmov	r2, s5
 8023050:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023054:	fb92 f3f3 	sdiv	r3, r2, r3
 8023058:	ee13 2a10 	vmov	r2, s6
 802305c:	9325      	str	r3, [sp, #148]	; 0x94
 802305e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023060:	fb92 f3f3 	sdiv	r3, r2, r3
 8023064:	9326      	str	r3, [sp, #152]	; 0x98
 8023066:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023068:	9a15      	ldr	r2, [sp, #84]	; 0x54
 802306a:	3b01      	subs	r3, #1
 802306c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023070:	930c      	str	r3, [sp, #48]	; 0x30
 8023072:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023074:	bf08      	it	eq
 8023076:	4613      	moveq	r3, r2
 8023078:	ee16 5a90 	vmov	r5, s13
 802307c:	9309      	str	r3, [sp, #36]	; 0x24
 802307e:	eeb0 3a67 	vmov.f32	s6, s15
 8023082:	eef0 2a47 	vmov.f32	s5, s14
 8023086:	e6a6      	b.n	8022dd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8023088:	2900      	cmp	r1, #0
 802308a:	f43f af10 	beq.w	8022eae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802308e:	f819 3003 	ldrb.w	r3, [r9, r3]
 8023092:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8023096:	930f      	str	r3, [sp, #60]	; 0x3c
 8023098:	e709      	b.n	8022eae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802309a:	f112 0901 	adds.w	r9, r2, #1
 802309e:	f53f af7d 	bmi.w	8022f9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80230a2:	454b      	cmp	r3, r9
 80230a4:	f6ff af7a 	blt.w	8022f9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80230a8:	f11c 0901 	adds.w	r9, ip, #1
 80230ac:	f53f af76 	bmi.w	8022f9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80230b0:	45ce      	cmp	lr, r9
 80230b2:	f6ff af73 	blt.w	8022f9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80230b6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80230b8:	9202      	str	r2, [sp, #8]
 80230ba:	b21b      	sxth	r3, r3
 80230bc:	fa0f f28e 	sxth.w	r2, lr
 80230c0:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80230c4:	e9cd c003 	strd	ip, r0, [sp, #12]
 80230c8:	9201      	str	r2, [sp, #4]
 80230ca:	9300      	str	r3, [sp, #0]
 80230cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80230ce:	9816      	ldr	r0, [sp, #88]	; 0x58
 80230d0:	4633      	mov	r3, r6
 80230d2:	4639      	mov	r1, r7
 80230d4:	f7ff fd8e 	bl	8022bf4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80230d8:	e760      	b.n	8022f9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80230da:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80230dc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80230de:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80230e2:	ea4f 422a 	mov.w	r2, sl, asr #16
 80230e6:	1429      	asrs	r1, r5, #16
 80230e8:	fb03 2101 	mla	r1, r3, r1, r2
 80230ec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80230ee:	440a      	add	r2, r1
 80230f0:	5c61      	ldrb	r1, [r4, r1]
 80230f2:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80230f6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80230fa:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80230fe:	f1bc 0f00 	cmp.w	ip, #0
 8023102:	f000 808c 	beq.w	802321e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8023106:	7857      	ldrb	r7, [r2, #1]
 8023108:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 802310c:	9413      	str	r4, [sp, #76]	; 0x4c
 802310e:	b140      	cbz	r0, 8023122 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8023110:	18d7      	adds	r7, r2, r3
 8023112:	5cd3      	ldrb	r3, [r2, r3]
 8023114:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8023118:	9310      	str	r3, [sp, #64]	; 0x40
 802311a:	787b      	ldrb	r3, [r7, #1]
 802311c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8023120:	9314      	str	r3, [sp, #80]	; 0x50
 8023122:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023124:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8023126:	fb1c f200 	smulbb	r2, ip, r0
 802312a:	041f      	lsls	r7, r3, #16
 802312c:	10d2      	asrs	r2, r2, #3
 802312e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023132:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8023136:	431f      	orrs	r7, r3
 8023138:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 802313c:	9317      	str	r3, [sp, #92]	; 0x5c
 802313e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8023140:	041b      	lsls	r3, r3, #16
 8023142:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8023146:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802314a:	ea43 030b 	orr.w	r3, r3, fp
 802314e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8023150:	4353      	muls	r3, r2
 8023152:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023156:	fb04 3707 	mla	r7, r4, r7, r3
 802315a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802315e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8023162:	ea43 0b01 	orr.w	fp, r3, r1
 8023166:	f1c0 0110 	rsb	r1, r0, #16
 802316a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802316c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802316e:	eba1 0c0c 	sub.w	ip, r1, ip
 8023172:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8023176:	fb0c 770b 	mla	r7, ip, fp, r7
 802317a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802317e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8023182:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023186:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 802318a:	ea4c 0c0b 	orr.w	ip, ip, fp
 802318e:	fb02 770c 	mla	r7, r2, ip, r7
 8023192:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023194:	0d79      	lsrs	r1, r7, #21
 8023196:	097f      	lsrs	r7, r7, #5
 8023198:	8812      	ldrh	r2, [r2, #0]
 802319a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802319e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80231a2:	430f      	orrs	r7, r1
 80231a4:	b2bb      	uxth	r3, r7
 80231a6:	1211      	asrs	r1, r2, #8
 80231a8:	1218      	asrs	r0, r3, #8
 80231aa:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80231ae:	fb11 f104 	smulbb	r1, r1, r4
 80231b2:	10d7      	asrs	r7, r2, #3
 80231b4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80231b8:	00d2      	lsls	r2, r2, #3
 80231ba:	fb00 1009 	mla	r0, r0, r9, r1
 80231be:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80231c2:	10d9      	asrs	r1, r3, #3
 80231c4:	b2d2      	uxtb	r2, r2
 80231c6:	00db      	lsls	r3, r3, #3
 80231c8:	fb17 f704 	smulbb	r7, r7, r4
 80231cc:	fb12 f204 	smulbb	r2, r2, r4
 80231d0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80231d4:	b2db      	uxtb	r3, r3
 80231d6:	b280      	uxth	r0, r0
 80231d8:	fb01 7109 	mla	r1, r1, r9, r7
 80231dc:	fb03 2309 	mla	r3, r3, r9, r2
 80231e0:	b29b      	uxth	r3, r3
 80231e2:	b289      	uxth	r1, r1
 80231e4:	1c42      	adds	r2, r0, #1
 80231e6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80231ea:	1c4f      	adds	r7, r1, #1
 80231ec:	1c5a      	adds	r2, r3, #1
 80231ee:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80231f2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80231f6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80231fa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80231fe:	0949      	lsrs	r1, r1, #5
 8023200:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023202:	4310      	orrs	r0, r2
 8023204:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023208:	4308      	orrs	r0, r1
 802320a:	f823 0b02 	strh.w	r0, [r3], #2
 802320e:	930e      	str	r3, [sp, #56]	; 0x38
 8023210:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8023212:	449a      	add	sl, r3
 8023214:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023216:	f10e 3eff 	add.w	lr, lr, #4294967295
 802321a:	441d      	add	r5, r3
 802321c:	e6ed      	b.n	8022ffa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 802321e:	2800      	cmp	r0, #0
 8023220:	f43f af7f 	beq.w	8023122 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8023224:	5cd3      	ldrb	r3, [r2, r3]
 8023226:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802322a:	9310      	str	r3, [sp, #64]	; 0x40
 802322c:	e779      	b.n	8023122 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802322e:	b019      	add	sp, #100	; 0x64
 8023230:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023234 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8023234:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023238:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 802323c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8023240:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8023244:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8023248:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802324c:	8808      	ldrh	r0, [r1, #0]
 802324e:	fb08 470e 	mla	r7, r8, lr, r4
 8023252:	f1b8 0f00 	cmp.w	r8, #0
 8023256:	eb02 0907 	add.w	r9, r2, r7
 802325a:	db67      	blt.n	802332c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 802325c:	45c2      	cmp	sl, r8
 802325e:	dd65      	ble.n	802332c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8023260:	2c00      	cmp	r4, #0
 8023262:	db61      	blt.n	8023328 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8023264:	45a6      	cmp	lr, r4
 8023266:	dd5f      	ble.n	8023328 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8023268:	5dd2      	ldrb	r2, [r2, r7]
 802326a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 802326e:	1c62      	adds	r2, r4, #1
 8023270:	d45f      	bmi.n	8023332 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8023272:	4596      	cmp	lr, r2
 8023274:	dd5d      	ble.n	8023332 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8023276:	2d00      	cmp	r5, #0
 8023278:	d05b      	beq.n	8023332 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 802327a:	f899 2001 	ldrb.w	r2, [r9, #1]
 802327e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8023282:	f118 0801 	adds.w	r8, r8, #1
 8023286:	d458      	bmi.n	802333a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8023288:	45c2      	cmp	sl, r8
 802328a:	dd56      	ble.n	802333a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 802328c:	2e00      	cmp	r6, #0
 802328e:	d054      	beq.n	802333a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8023290:	2c00      	cmp	r4, #0
 8023292:	db50      	blt.n	8023336 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8023294:	45a6      	cmp	lr, r4
 8023296:	dd4e      	ble.n	8023336 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8023298:	f819 200e 	ldrb.w	r2, [r9, lr]
 802329c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80232a0:	3401      	adds	r4, #1
 80232a2:	d407      	bmi.n	80232b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80232a4:	45a6      	cmp	lr, r4
 80232a6:	dd05      	ble.n	80232b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80232a8:	b125      	cbz	r5, 80232b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80232aa:	44ce      	add	lr, r9
 80232ac:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80232b0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80232b4:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80232b8:	fb15 f406 	smulbb	r4, r5, r6
 80232bc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80232c0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80232c4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80232c8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80232cc:	ea43 0c0c 	orr.w	ip, r3, ip
 80232d0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80232d4:	f1c6 0310 	rsb	r3, r6, #16
 80232d8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80232dc:	1b5b      	subs	r3, r3, r5
 80232de:	ea4e 0707 	orr.w	r7, lr, r7
 80232e2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80232e6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80232ea:	437d      	muls	r5, r7
 80232ec:	fb03 5c0c 	mla	ip, r3, ip, r5
 80232f0:	0403      	lsls	r3, r0, #16
 80232f2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80232f6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80232fa:	4318      	orrs	r0, r3
 80232fc:	0413      	lsls	r3, r2, #16
 80232fe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023302:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023306:	4313      	orrs	r3, r2
 8023308:	fb04 c000 	mla	r0, r4, r0, ip
 802330c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8023310:	fb06 0003 	mla	r0, r6, r3, r0
 8023314:	0d43      	lsrs	r3, r0, #21
 8023316:	0940      	lsrs	r0, r0, #5
 8023318:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802331c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023320:	4318      	orrs	r0, r3
 8023322:	8008      	strh	r0, [r1, #0]
 8023324:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023328:	4684      	mov	ip, r0
 802332a:	e7a0      	b.n	802326e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 802332c:	4607      	mov	r7, r0
 802332e:	4684      	mov	ip, r0
 8023330:	e7a7      	b.n	8023282 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8023332:	4607      	mov	r7, r0
 8023334:	e7a5      	b.n	8023282 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8023336:	4602      	mov	r2, r0
 8023338:	e7b2      	b.n	80232a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 802333a:	4602      	mov	r2, r0
 802333c:	e7ba      	b.n	80232b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0802333e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802333e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023342:	b093      	sub	sp, #76	; 0x4c
 8023344:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8023348:	920f      	str	r2, [sp, #60]	; 0x3c
 802334a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802334c:	9108      	str	r1, [sp, #32]
 802334e:	9306      	str	r3, [sp, #24]
 8023350:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8023354:	9010      	str	r0, [sp, #64]	; 0x40
 8023356:	6850      	ldr	r0, [r2, #4]
 8023358:	6812      	ldr	r2, [r2, #0]
 802335a:	fb00 1303 	mla	r3, r0, r3, r1
 802335e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8023362:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023364:	681b      	ldr	r3, [r3, #0]
 8023366:	9307      	str	r3, [sp, #28]
 8023368:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802336a:	685f      	ldr	r7, [r3, #4]
 802336c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8023370:	3704      	adds	r7, #4
 8023372:	9b08      	ldr	r3, [sp, #32]
 8023374:	2b00      	cmp	r3, #0
 8023376:	dc03      	bgt.n	8023380 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8023378:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802337a:	2b00      	cmp	r3, #0
 802337c:	f340 81b2 	ble.w	80236e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8023380:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023382:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023386:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802338a:	1e48      	subs	r0, r1, #1
 802338c:	f102 3cff 	add.w	ip, r2, #4294967295
 8023390:	9b06      	ldr	r3, [sp, #24]
 8023392:	2b00      	cmp	r3, #0
 8023394:	f340 80a9 	ble.w	80234ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8023398:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802339c:	ea4f 4326 	mov.w	r3, r6, asr #16
 80233a0:	d406      	bmi.n	80233b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80233a2:	4586      	cmp	lr, r0
 80233a4:	da04      	bge.n	80233b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80233a6:	2b00      	cmp	r3, #0
 80233a8:	db02      	blt.n	80233b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80233aa:	4563      	cmp	r3, ip
 80233ac:	f2c0 809e 	blt.w	80234ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80233b0:	f11e 0e01 	adds.w	lr, lr, #1
 80233b4:	f100 808f 	bmi.w	80234d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80233b8:	4571      	cmp	r1, lr
 80233ba:	f2c0 808c 	blt.w	80234d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80233be:	3301      	adds	r3, #1
 80233c0:	f100 8089 	bmi.w	80234d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80233c4:	429a      	cmp	r2, r3
 80233c6:	f2c0 8086 	blt.w	80234d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80233ca:	f8dd b018 	ldr.w	fp, [sp, #24]
 80233ce:	46c8      	mov	r8, r9
 80233d0:	f1bb 0f00 	cmp.w	fp, #0
 80233d4:	f340 80a6 	ble.w	8023524 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80233d8:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80233da:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80233dc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80233e0:	689b      	ldr	r3, [r3, #8]
 80233e2:	1422      	asrs	r2, r4, #16
 80233e4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80233e8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80233ec:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80233f0:	f100 80e3 	bmi.w	80235ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80233f4:	f103 3aff 	add.w	sl, r3, #4294967295
 80233f8:	4552      	cmp	r2, sl
 80233fa:	f280 80de 	bge.w	80235ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80233fe:	f1bc 0f00 	cmp.w	ip, #0
 8023402:	f2c0 80da 	blt.w	80235ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8023406:	f10e 3aff 	add.w	sl, lr, #4294967295
 802340a:	45d4      	cmp	ip, sl
 802340c:	f280 80d5 	bge.w	80235ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8023410:	b21b      	sxth	r3, r3
 8023412:	fb0c 2203 	mla	r2, ip, r3, r2
 8023416:	9d07      	ldr	r5, [sp, #28]
 8023418:	eb05 0a02 	add.w	sl, r5, r2
 802341c:	5caa      	ldrb	r2, [r5, r2]
 802341e:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8023422:	2800      	cmp	r0, #0
 8023424:	f000 80c0 	beq.w	80235a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8023428:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802342c:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8023430:	920b      	str	r2, [sp, #44]	; 0x2c
 8023432:	b151      	cbz	r1, 802344a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8023434:	eb0a 0203 	add.w	r2, sl, r3
 8023438:	f81a 3003 	ldrb.w	r3, [sl, r3]
 802343c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8023440:	9309      	str	r3, [sp, #36]	; 0x24
 8023442:	7853      	ldrb	r3, [r2, #1]
 8023444:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8023448:	930c      	str	r3, [sp, #48]	; 0x30
 802344a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802344c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802344e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8023452:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023456:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802345a:	ea4c 0c03 	orr.w	ip, ip, r3
 802345e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023460:	041b      	lsls	r3, r3, #16
 8023462:	fb10 f201 	smulbb	r2, r0, r1
 8023466:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802346a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802346e:	10d2      	asrs	r2, r2, #3
 8023470:	432b      	orrs	r3, r5
 8023472:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8023476:	4353      	muls	r3, r2
 8023478:	fb0a 330c 	mla	r3, sl, ip, r3
 802347c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8023480:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023484:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023488:	ea4c 0e0e 	orr.w	lr, ip, lr
 802348c:	f1c1 0c10 	rsb	ip, r1, #16
 8023490:	ebac 0c00 	sub.w	ip, ip, r0
 8023494:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8023498:	fb0c 3c0e 	mla	ip, ip, lr, r3
 802349c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802349e:	0418      	lsls	r0, r3, #16
 80234a0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80234a4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80234a8:	4318      	orrs	r0, r3
 80234aa:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80234ae:	fb02 c200 	mla	r2, r2, r0, ip
 80234b2:	0d53      	lsrs	r3, r2, #21
 80234b4:	0952      	lsrs	r2, r2, #5
 80234b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80234ba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80234be:	431a      	orrs	r2, r3
 80234c0:	f8a8 2000 	strh.w	r2, [r8]
 80234c4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80234c6:	441c      	add	r4, r3
 80234c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80234ca:	f108 0802 	add.w	r8, r8, #2
 80234ce:	441e      	add	r6, r3
 80234d0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80234d4:	e77c      	b.n	80233d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80234d6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80234d8:	441c      	add	r4, r3
 80234da:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80234dc:	441e      	add	r6, r3
 80234de:	9b06      	ldr	r3, [sp, #24]
 80234e0:	3b01      	subs	r3, #1
 80234e2:	9306      	str	r3, [sp, #24]
 80234e4:	f109 0902 	add.w	r9, r9, #2
 80234e8:	e752      	b.n	8023390 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80234ea:	d020      	beq.n	802352e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80234ec:	9b06      	ldr	r3, [sp, #24]
 80234ee:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80234f0:	3b01      	subs	r3, #1
 80234f2:	fb00 4003 	mla	r0, r0, r3, r4
 80234f6:	1400      	asrs	r0, r0, #16
 80234f8:	f53f af67 	bmi.w	80233ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80234fc:	3901      	subs	r1, #1
 80234fe:	4288      	cmp	r0, r1
 8023500:	f6bf af63 	bge.w	80233ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8023504:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023506:	fb01 6303 	mla	r3, r1, r3, r6
 802350a:	141b      	asrs	r3, r3, #16
 802350c:	f53f af5d 	bmi.w	80233ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8023510:	3a01      	subs	r2, #1
 8023512:	4293      	cmp	r3, r2
 8023514:	f6bf af59 	bge.w	80233ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8023518:	f8dd 8018 	ldr.w	r8, [sp, #24]
 802351c:	46ca      	mov	sl, r9
 802351e:	f1b8 0f00 	cmp.w	r8, #0
 8023522:	dc67      	bgt.n	80235f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8023524:	9b06      	ldr	r3, [sp, #24]
 8023526:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802352a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802352e:	9b08      	ldr	r3, [sp, #32]
 8023530:	2b00      	cmp	r3, #0
 8023532:	f340 80d7 	ble.w	80236e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8023536:	ee30 0a04 	vadd.f32	s0, s0, s8
 802353a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802353e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8023542:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023544:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023548:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802354c:	eeb0 6a62 	vmov.f32	s12, s5
 8023550:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023554:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8023558:	ee77 2a62 	vsub.f32	s5, s14, s5
 802355c:	ee16 4a10 	vmov	r4, s12
 8023560:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023564:	eeb0 6a43 	vmov.f32	s12, s6
 8023568:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802356c:	ee12 2a90 	vmov	r2, s5
 8023570:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023574:	fb92 f3f3 	sdiv	r3, r2, r3
 8023578:	ee13 2a10 	vmov	r2, s6
 802357c:	931f      	str	r3, [sp, #124]	; 0x7c
 802357e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023580:	fb92 f3f3 	sdiv	r3, r2, r3
 8023584:	9320      	str	r3, [sp, #128]	; 0x80
 8023586:	9b08      	ldr	r3, [sp, #32]
 8023588:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802358a:	3b01      	subs	r3, #1
 802358c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8023590:	9308      	str	r3, [sp, #32]
 8023592:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023594:	bf08      	it	eq
 8023596:	4613      	moveq	r3, r2
 8023598:	ee16 6a10 	vmov	r6, s12
 802359c:	9306      	str	r3, [sp, #24]
 802359e:	eeb0 3a67 	vmov.f32	s6, s15
 80235a2:	eef0 2a47 	vmov.f32	s5, s14
 80235a6:	e6e4      	b.n	8023372 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80235a8:	2900      	cmp	r1, #0
 80235aa:	f43f af4e 	beq.w	802344a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80235ae:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80235b2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80235b6:	9309      	str	r3, [sp, #36]	; 0x24
 80235b8:	e747      	b.n	802344a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80235ba:	f112 0a01 	adds.w	sl, r2, #1
 80235be:	d481      	bmi.n	80234c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80235c0:	4553      	cmp	r3, sl
 80235c2:	f6ff af7f 	blt.w	80234c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80235c6:	f11c 0a01 	adds.w	sl, ip, #1
 80235ca:	f53f af7b 	bmi.w	80234c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80235ce:	45d6      	cmp	lr, sl
 80235d0:	f6ff af78 	blt.w	80234c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80235d4:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 80235d8:	b21b      	sxth	r3, r3
 80235da:	fa0f f28e 	sxth.w	r2, lr
 80235de:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80235e2:	9201      	str	r2, [sp, #4]
 80235e4:	9300      	str	r3, [sp, #0]
 80235e6:	9a07      	ldr	r2, [sp, #28]
 80235e8:	9810      	ldr	r0, [sp, #64]	; 0x40
 80235ea:	463b      	mov	r3, r7
 80235ec:	4641      	mov	r1, r8
 80235ee:	f7ff fe21 	bl	8023234 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80235f2:	e767      	b.n	80234c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80235f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80235f6:	9d07      	ldr	r5, [sp, #28]
 80235f8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80235fc:	1422      	asrs	r2, r4, #16
 80235fe:	1431      	asrs	r1, r6, #16
 8023600:	fb03 2101 	mla	r1, r3, r1, r2
 8023604:	9a07      	ldr	r2, [sp, #28]
 8023606:	440a      	add	r2, r1
 8023608:	5c69      	ldrb	r1, [r5, r1]
 802360a:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 802360e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023612:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8023616:	f1be 0f00 	cmp.w	lr, #0
 802361a:	d05c      	beq.n	80236d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802361c:	f892 c001 	ldrb.w	ip, [r2, #1]
 8023620:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8023624:	950d      	str	r5, [sp, #52]	; 0x34
 8023626:	b150      	cbz	r0, 802363e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8023628:	eb02 0c03 	add.w	ip, r2, r3
 802362c:	5cd3      	ldrb	r3, [r2, r3]
 802362e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8023632:	930a      	str	r3, [sp, #40]	; 0x28
 8023634:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8023638:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802363c:	930e      	str	r3, [sp, #56]	; 0x38
 802363e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023640:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023642:	fb1e f200 	smulbb	r2, lr, r0
 8023646:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802364a:	10d2      	asrs	r2, r2, #3
 802364c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023650:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023654:	ea4c 0c03 	orr.w	ip, ip, r3
 8023658:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 802365c:	9311      	str	r3, [sp, #68]	; 0x44
 802365e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023660:	041b      	lsls	r3, r3, #16
 8023662:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8023666:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802366a:	ea43 030b 	orr.w	r3, r3, fp
 802366e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023670:	4353      	muls	r3, r2
 8023672:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023676:	fb05 3c0c 	mla	ip, r5, ip, r3
 802367a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802367e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8023682:	ea43 0b01 	orr.w	fp, r3, r1
 8023686:	f1c0 0110 	rsb	r1, r0, #16
 802368a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802368c:	eba1 0e0e 	sub.w	lr, r1, lr
 8023690:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8023694:	fb0e cc0b 	mla	ip, lr, fp, ip
 8023698:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 802369c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80236a0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80236a4:	ea4b 0e0e 	orr.w	lr, fp, lr
 80236a8:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80236ac:	fb02 cc0e 	mla	ip, r2, lr, ip
 80236b0:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80236b4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80236b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80236bc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80236c0:	ea43 0c0c 	orr.w	ip, r3, ip
 80236c4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80236c6:	f82a cb02 	strh.w	ip, [sl], #2
 80236ca:	441c      	add	r4, r3
 80236cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80236ce:	f108 38ff 	add.w	r8, r8, #4294967295
 80236d2:	441e      	add	r6, r3
 80236d4:	e723      	b.n	802351e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80236d6:	2800      	cmp	r0, #0
 80236d8:	d0b1      	beq.n	802363e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80236da:	5cd3      	ldrb	r3, [r2, r3]
 80236dc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80236e0:	930a      	str	r3, [sp, #40]	; 0x28
 80236e2:	e7ac      	b.n	802363e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80236e4:	b013      	add	sp, #76	; 0x4c
 80236e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080236ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80236ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80236ee:	880d      	ldrh	r5, [r1, #0]
 80236f0:	b087      	sub	sp, #28
 80236f2:	10ef      	asrs	r7, r5, #3
 80236f4:	ea4f 2a25 	mov.w	sl, r5, asr #8
 80236f8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80236fc:	00ed      	lsls	r5, r5, #3
 80236fe:	9701      	str	r7, [sp, #4]
 8023700:	b2ed      	uxtb	r5, r5
 8023702:	9502      	str	r5, [sp, #8]
 8023704:	9d01      	ldr	r5, [sp, #4]
 8023706:	9103      	str	r1, [sp, #12]
 8023708:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 802370c:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8023710:	9902      	ldr	r1, [sp, #8]
 8023712:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8023716:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 802371a:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 802371e:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8023722:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8023726:	022d      	lsls	r5, r5, #8
 8023728:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 802372c:	fb06 0709 	mla	r7, r6, r9, r0
 8023730:	430d      	orrs	r5, r1
 8023732:	2e00      	cmp	r6, #0
 8023734:	eb02 0c07 	add.w	ip, r2, r7
 8023738:	9505      	str	r5, [sp, #20]
 802373a:	f2c0 80b6 	blt.w	80238aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802373e:	45b3      	cmp	fp, r6
 8023740:	f340 80b3 	ble.w	80238aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8023744:	2800      	cmp	r0, #0
 8023746:	f2c0 80ae 	blt.w	80238a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 802374a:	4581      	cmp	r9, r0
 802374c:	f340 80ab 	ble.w	80238a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8023750:	5dd7      	ldrb	r7, [r2, r7]
 8023752:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8023756:	441f      	add	r7, r3
 8023758:	1c42      	adds	r2, r0, #1
 802375a:	f100 80a9 	bmi.w	80238b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802375e:	4591      	cmp	r9, r2
 8023760:	f340 80a6 	ble.w	80238b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8023764:	2c00      	cmp	r4, #0
 8023766:	f000 80a3 	beq.w	80238b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802376a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 802376e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8023772:	441d      	add	r5, r3
 8023774:	3601      	adds	r6, #1
 8023776:	f100 809f 	bmi.w	80238b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 802377a:	45b3      	cmp	fp, r6
 802377c:	f340 809c 	ble.w	80238b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8023780:	f1be 0f00 	cmp.w	lr, #0
 8023784:	f000 8098 	beq.w	80238b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8023788:	2800      	cmp	r0, #0
 802378a:	f2c0 8093 	blt.w	80238b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 802378e:	4581      	cmp	r9, r0
 8023790:	f340 8090 	ble.w	80238b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8023794:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8023798:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802379c:	441e      	add	r6, r3
 802379e:	3001      	adds	r0, #1
 80237a0:	f100 808d 	bmi.w	80238be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80237a4:	4581      	cmp	r9, r0
 80237a6:	f340 808a 	ble.w	80238be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80237aa:	2c00      	cmp	r4, #0
 80237ac:	f000 8087 	beq.w	80238be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80237b0:	44e1      	add	r9, ip
 80237b2:	f899 2001 	ldrb.w	r2, [r9, #1]
 80237b6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80237ba:	4413      	add	r3, r2
 80237bc:	b2a4      	uxth	r4, r4
 80237be:	fa1f fe8e 	uxth.w	lr, lr
 80237c2:	fb04 fb0e 	mul.w	fp, r4, lr
 80237c6:	0124      	lsls	r4, r4, #4
 80237c8:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 80237cc:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 80237d0:	eba4 040b 	sub.w	r4, r4, fp
 80237d4:	fa1f f08e 	uxth.w	r0, lr
 80237d8:	b2a2      	uxth	r2, r4
 80237da:	78ac      	ldrb	r4, [r5, #2]
 80237dc:	f897 c002 	ldrb.w	ip, [r7, #2]
 80237e0:	9901      	ldr	r1, [sp, #4]
 80237e2:	eba9 0900 	sub.w	r9, r9, r0
 80237e6:	fa1f f989 	uxth.w	r9, r9
 80237ea:	4354      	muls	r4, r2
 80237ec:	fb09 440c 	mla	r4, r9, ip, r4
 80237f0:	f896 c002 	ldrb.w	ip, [r6, #2]
 80237f4:	fb00 440c 	mla	r4, r0, ip, r4
 80237f8:	f893 c002 	ldrb.w	ip, [r3, #2]
 80237fc:	fa1f fe88 	uxth.w	lr, r8
 8023800:	ea6f 0808 	mvn.w	r8, r8
 8023804:	fa5f f888 	uxtb.w	r8, r8
 8023808:	fb0b 4c0c 	mla	ip, fp, ip, r4
 802380c:	fb1a fa08 	smulbb	sl, sl, r8
 8023810:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8023814:	fb0c ac0e 	mla	ip, ip, lr, sl
 8023818:	f895 a001 	ldrb.w	sl, [r5, #1]
 802381c:	787c      	ldrb	r4, [r7, #1]
 802381e:	782d      	ldrb	r5, [r5, #0]
 8023820:	783f      	ldrb	r7, [r7, #0]
 8023822:	fb02 fa0a 	mul.w	sl, r2, sl
 8023826:	fb09 aa04 	mla	sl, r9, r4, sl
 802382a:	7874      	ldrb	r4, [r6, #1]
 802382c:	436a      	muls	r2, r5
 802382e:	7835      	ldrb	r5, [r6, #0]
 8023830:	fb00 aa04 	mla	sl, r0, r4, sl
 8023834:	fb09 2207 	mla	r2, r9, r7, r2
 8023838:	785c      	ldrb	r4, [r3, #1]
 802383a:	781b      	ldrb	r3, [r3, #0]
 802383c:	fb00 2005 	mla	r0, r0, r5, r2
 8023840:	fb0b a404 	mla	r4, fp, r4, sl
 8023844:	fb0b 0b03 	mla	fp, fp, r3, r0
 8023848:	9b02      	ldr	r3, [sp, #8]
 802384a:	fb11 fa08 	smulbb	sl, r1, r8
 802384e:	fa1f fc8c 	uxth.w	ip, ip
 8023852:	fb13 f808 	smulbb	r8, r3, r8
 8023856:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 802385a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 802385e:	fb04 a40e 	mla	r4, r4, lr, sl
 8023862:	f10c 0301 	add.w	r3, ip, #1
 8023866:	fb0b 8e0e 	mla	lr, fp, lr, r8
 802386a:	fa1f fe8e 	uxth.w	lr, lr
 802386e:	b2a4      	uxth	r4, r4
 8023870:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8023874:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8023878:	f104 0a01 	add.w	sl, r4, #1
 802387c:	f10e 0c01 	add.w	ip, lr, #1
 8023880:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023884:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8023888:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802388c:	0964      	lsrs	r4, r4, #5
 802388e:	ea4c 0c03 	orr.w	ip, ip, r3
 8023892:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8023896:	9b03      	ldr	r3, [sp, #12]
 8023898:	ea4c 0c04 	orr.w	ip, ip, r4
 802389c:	f8a3 c000 	strh.w	ip, [r3]
 80238a0:	b007      	add	sp, #28
 80238a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80238a6:	af05      	add	r7, sp, #20
 80238a8:	e756      	b.n	8023758 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80238aa:	ad05      	add	r5, sp, #20
 80238ac:	462f      	mov	r7, r5
 80238ae:	e761      	b.n	8023774 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80238b0:	ad05      	add	r5, sp, #20
 80238b2:	e75f      	b.n	8023774 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80238b4:	ae05      	add	r6, sp, #20
 80238b6:	e772      	b.n	802379e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 80238b8:	ab05      	add	r3, sp, #20
 80238ba:	461e      	mov	r6, r3
 80238bc:	e77e      	b.n	80237bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 80238be:	ab05      	add	r3, sp, #20
 80238c0:	e77c      	b.n	80237bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

080238c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80238c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80238c6:	b095      	sub	sp, #84	; 0x54
 80238c8:	9212      	str	r2, [sp, #72]	; 0x48
 80238ca:	9309      	str	r3, [sp, #36]	; 0x24
 80238cc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80238ce:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 80238d2:	930f      	str	r3, [sp, #60]	; 0x3c
 80238d4:	910e      	str	r1, [sp, #56]	; 0x38
 80238d6:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 80238da:	9013      	str	r0, [sp, #76]	; 0x4c
 80238dc:	6850      	ldr	r0, [r2, #4]
 80238de:	6812      	ldr	r2, [r2, #0]
 80238e0:	fb00 1303 	mla	r3, r0, r3, r1
 80238e4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80238e8:	930a      	str	r3, [sp, #40]	; 0x28
 80238ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80238ec:	681b      	ldr	r3, [r3, #0]
 80238ee:	930d      	str	r3, [sp, #52]	; 0x34
 80238f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80238f2:	685c      	ldr	r4, [r3, #4]
 80238f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80238f6:	43db      	mvns	r3, r3
 80238f8:	b2db      	uxtb	r3, r3
 80238fa:	3404      	adds	r4, #4
 80238fc:	930b      	str	r3, [sp, #44]	; 0x2c
 80238fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023900:	2b00      	cmp	r3, #0
 8023902:	dc03      	bgt.n	802390c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023904:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8023906:	2b00      	cmp	r3, #0
 8023908:	f340 8255 	ble.w	8023db6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 802390c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802390e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023912:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023916:	1e48      	subs	r0, r1, #1
 8023918:	1e55      	subs	r5, r2, #1
 802391a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802391c:	2b00      	cmp	r3, #0
 802391e:	f340 80f9 	ble.w	8023b14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8023922:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8023924:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023926:	1436      	asrs	r6, r6, #16
 8023928:	ea4f 4323 	mov.w	r3, r3, asr #16
 802392c:	d406      	bmi.n	802393c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802392e:	4286      	cmp	r6, r0
 8023930:	da04      	bge.n	802393c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023932:	2b00      	cmp	r3, #0
 8023934:	db02      	blt.n	802393c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023936:	42ab      	cmp	r3, r5
 8023938:	f2c0 80ed 	blt.w	8023b16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 802393c:	3601      	adds	r6, #1
 802393e:	f100 80da 	bmi.w	8023af6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023942:	42b1      	cmp	r1, r6
 8023944:	f2c0 80d7 	blt.w	8023af6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023948:	3301      	adds	r3, #1
 802394a:	f100 80d4 	bmi.w	8023af6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802394e:	429a      	cmp	r2, r3
 8023950:	f2c0 80d1 	blt.w	8023af6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023954:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023956:	9311      	str	r3, [sp, #68]	; 0x44
 8023958:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802395a:	930c      	str	r3, [sp, #48]	; 0x30
 802395c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802395e:	2b00      	cmp	r3, #0
 8023960:	f340 80fa 	ble.w	8023b58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8023964:	9826      	ldr	r0, [sp, #152]	; 0x98
 8023966:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023968:	9a20      	ldr	r2, [sp, #128]	; 0x80
 802396a:	68c6      	ldr	r6, [r0, #12]
 802396c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802396e:	141d      	asrs	r5, r3, #16
 8023970:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8023974:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023976:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8023978:	1400      	asrs	r0, r0, #16
 802397a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 802397e:	6892      	ldr	r2, [r2, #8]
 8023980:	f100 813e 	bmi.w	8023c00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8023984:	1e57      	subs	r7, r2, #1
 8023986:	42b8      	cmp	r0, r7
 8023988:	f280 813a 	bge.w	8023c00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802398c:	2d00      	cmp	r5, #0
 802398e:	f2c0 8137 	blt.w	8023c00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8023992:	1e77      	subs	r7, r6, #1
 8023994:	42bd      	cmp	r5, r7
 8023996:	f280 8133 	bge.w	8023c00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802399a:	b212      	sxth	r2, r2
 802399c:	fb05 0002 	mla	r0, r5, r2, r0
 80239a0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80239a2:	f815 a000 	ldrb.w	sl, [r5, r0]
 80239a6:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80239aa:	182e      	adds	r6, r5, r0
 80239ac:	eb04 050a 	add.w	r5, r4, sl
 80239b0:	2b00      	cmp	r3, #0
 80239b2:	f000 8117 	beq.w	8023be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80239b6:	f896 c001 	ldrb.w	ip, [r6, #1]
 80239ba:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80239be:	44a4      	add	ip, r4
 80239c0:	2900      	cmp	r1, #0
 80239c2:	f000 8117 	beq.w	8023bf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 80239c6:	18b0      	adds	r0, r6, r2
 80239c8:	5cb2      	ldrb	r2, [r6, r2]
 80239ca:	7840      	ldrb	r0, [r0, #1]
 80239cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80239d0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80239d4:	4422      	add	r2, r4
 80239d6:	4420      	add	r0, r4
 80239d8:	b29b      	uxth	r3, r3
 80239da:	b289      	uxth	r1, r1
 80239dc:	fb03 f901 	mul.w	r9, r3, r1
 80239e0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80239e4:	011b      	lsls	r3, r3, #4
 80239e6:	b289      	uxth	r1, r1
 80239e8:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80239ec:	f895 b002 	ldrb.w	fp, [r5, #2]
 80239f0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80239f2:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80239f6:	f8b6 e000 	ldrh.w	lr, [r6]
 80239fa:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80239fe:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8023a02:	eba3 0309 	sub.w	r3, r3, r9
 8023a06:	b29b      	uxth	r3, r3
 8023a08:	eba8 0801 	sub.w	r8, r8, r1
 8023a0c:	fa1f f888 	uxth.w	r8, r8
 8023a10:	435f      	muls	r7, r3
 8023a12:	fb08 770b 	mla	r7, r8, fp, r7
 8023a16:	f892 b002 	ldrb.w	fp, [r2, #2]
 8023a1a:	9310      	str	r3, [sp, #64]	; 0x40
 8023a1c:	fb01 770b 	mla	r7, r1, fp, r7
 8023a20:	f890 b002 	ldrb.w	fp, [r0, #2]
 8023a24:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023a26:	fb09 770b 	mla	r7, r9, fp, r7
 8023a2a:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8023a2e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8023a32:	fb1b fb03 	smulbb	fp, fp, r3
 8023a36:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8023a3a:	fb07 b706 	mla	r7, r7, r6, fp
 8023a3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023a40:	f895 b001 	ldrb.w	fp, [r5, #1]
 8023a44:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8023a48:	f89c c000 	ldrb.w	ip, [ip]
 8023a4c:	435d      	muls	r5, r3
 8023a4e:	fb08 550b 	mla	r5, r8, fp, r5
 8023a52:	f892 b001 	ldrb.w	fp, [r2, #1]
 8023a56:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023a58:	fb01 550b 	mla	r5, r1, fp, r5
 8023a5c:	f890 b001 	ldrb.w	fp, [r0, #1]
 8023a60:	fb09 550b 	mla	r5, r9, fp, r5
 8023a64:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8023a68:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8023a6c:	fb1b fb03 	smulbb	fp, fp, r3
 8023a70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023a72:	fb03 f30c 	mul.w	r3, r3, ip
 8023a76:	f892 c000 	ldrb.w	ip, [r2]
 8023a7a:	fb08 330a 	mla	r3, r8, sl, r3
 8023a7e:	fb01 330c 	mla	r3, r1, ip, r3
 8023a82:	f890 c000 	ldrb.w	ip, [r0]
 8023a86:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8023a8a:	fb09 3c0c 	mla	ip, r9, ip, r3
 8023a8e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023a90:	fa5f fe8e 	uxtb.w	lr, lr
 8023a94:	b2bf      	uxth	r7, r7
 8023a96:	fb1e fe03 	smulbb	lr, lr, r3
 8023a9a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8023a9e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8023aa2:	fb05 b506 	mla	r5, r5, r6, fp
 8023aa6:	1c7b      	adds	r3, r7, #1
 8023aa8:	fb0c e606 	mla	r6, ip, r6, lr
 8023aac:	b2ad      	uxth	r5, r5
 8023aae:	b2b6      	uxth	r6, r6
 8023ab0:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8023ab4:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8023ab8:	f105 0b01 	add.w	fp, r5, #1
 8023abc:	1c77      	adds	r7, r6, #1
 8023abe:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8023ac2:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8023ac6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023aca:	096d      	lsrs	r5, r5, #5
 8023acc:	431f      	orrs	r7, r3
 8023ace:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023ad2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023ad4:	433d      	orrs	r5, r7
 8023ad6:	801d      	strh	r5, [r3, #0]
 8023ad8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023ada:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023adc:	3302      	adds	r3, #2
 8023ade:	930c      	str	r3, [sp, #48]	; 0x30
 8023ae0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023ae2:	4413      	add	r3, r2
 8023ae4:	931f      	str	r3, [sp, #124]	; 0x7c
 8023ae6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023ae8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023aea:	4413      	add	r3, r2
 8023aec:	9320      	str	r3, [sp, #128]	; 0x80
 8023aee:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023af0:	3b01      	subs	r3, #1
 8023af2:	9311      	str	r3, [sp, #68]	; 0x44
 8023af4:	e732      	b.n	802395c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8023af6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023af8:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8023afa:	4433      	add	r3, r6
 8023afc:	931f      	str	r3, [sp, #124]	; 0x7c
 8023afe:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8023b00:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023b02:	4433      	add	r3, r6
 8023b04:	9320      	str	r3, [sp, #128]	; 0x80
 8023b06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023b08:	3b01      	subs	r3, #1
 8023b0a:	9309      	str	r3, [sp, #36]	; 0x24
 8023b0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023b0e:	3302      	adds	r3, #2
 8023b10:	930a      	str	r3, [sp, #40]	; 0x28
 8023b12:	e702      	b.n	802391a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023b14:	d027      	beq.n	8023b66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8023b16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023b18:	9821      	ldr	r0, [sp, #132]	; 0x84
 8023b1a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8023b1c:	3b01      	subs	r3, #1
 8023b1e:	fb00 5003 	mla	r0, r0, r3, r5
 8023b22:	1400      	asrs	r0, r0, #16
 8023b24:	f53f af16 	bmi.w	8023954 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023b28:	3901      	subs	r1, #1
 8023b2a:	4288      	cmp	r0, r1
 8023b2c:	f6bf af12 	bge.w	8023954 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023b30:	9922      	ldr	r1, [sp, #136]	; 0x88
 8023b32:	9820      	ldr	r0, [sp, #128]	; 0x80
 8023b34:	fb01 0303 	mla	r3, r1, r3, r0
 8023b38:	141b      	asrs	r3, r3, #16
 8023b3a:	f53f af0b 	bmi.w	8023954 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023b3e:	3a01      	subs	r2, #1
 8023b40:	4293      	cmp	r3, r2
 8023b42:	f6bf af07 	bge.w	8023954 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023b46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023b48:	9311      	str	r3, [sp, #68]	; 0x44
 8023b4a:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8023b4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023b50:	930c      	str	r3, [sp, #48]	; 0x30
 8023b52:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023b54:	2b00      	cmp	r3, #0
 8023b56:	dc70      	bgt.n	8023c3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023b58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023b5a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023b5c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023b60:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023b64:	930a      	str	r3, [sp, #40]	; 0x28
 8023b66:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023b68:	2b00      	cmp	r3, #0
 8023b6a:	f340 8124 	ble.w	8023db6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8023b6e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023b72:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023b76:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023b7a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023b7c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023b80:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023b84:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023b88:	eef0 6a62 	vmov.f32	s13, s5
 8023b8c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023b90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023b94:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023b98:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8023b9c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023ba0:	eef0 6a43 	vmov.f32	s13, s6
 8023ba4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023ba8:	ee12 2a90 	vmov	r2, s5
 8023bac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023bb0:	fb92 f3f3 	sdiv	r3, r2, r3
 8023bb4:	ee13 2a10 	vmov	r2, s6
 8023bb8:	9321      	str	r3, [sp, #132]	; 0x84
 8023bba:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023bbc:	fb92 f3f3 	sdiv	r3, r2, r3
 8023bc0:	9322      	str	r3, [sp, #136]	; 0x88
 8023bc2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023bc4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8023bc6:	3b01      	subs	r3, #1
 8023bc8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023bcc:	930e      	str	r3, [sp, #56]	; 0x38
 8023bce:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023bd0:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8023bd4:	bf08      	it	eq
 8023bd6:	4613      	moveq	r3, r2
 8023bd8:	9309      	str	r3, [sp, #36]	; 0x24
 8023bda:	eeb0 3a67 	vmov.f32	s6, s15
 8023bde:	eef0 2a47 	vmov.f32	s5, s14
 8023be2:	e68c      	b.n	80238fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8023be4:	b149      	cbz	r1, 8023bfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8023be6:	5cb2      	ldrb	r2, [r6, r2]
 8023be8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023bec:	4422      	add	r2, r4
 8023bee:	4628      	mov	r0, r5
 8023bf0:	46ac      	mov	ip, r5
 8023bf2:	e6f1      	b.n	80239d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8023bf4:	4628      	mov	r0, r5
 8023bf6:	462a      	mov	r2, r5
 8023bf8:	e6ee      	b.n	80239d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8023bfa:	4628      	mov	r0, r5
 8023bfc:	462a      	mov	r2, r5
 8023bfe:	e7f7      	b.n	8023bf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8023c00:	1c47      	adds	r7, r0, #1
 8023c02:	f53f af69 	bmi.w	8023ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023c06:	42ba      	cmp	r2, r7
 8023c08:	f6ff af66 	blt.w	8023ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023c0c:	1c6f      	adds	r7, r5, #1
 8023c0e:	f53f af63 	bmi.w	8023ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023c12:	42be      	cmp	r6, r7
 8023c14:	f6ff af60 	blt.w	8023ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023c18:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8023c1a:	9002      	str	r0, [sp, #8]
 8023c1c:	b236      	sxth	r6, r6
 8023c1e:	b212      	sxth	r2, r2
 8023c20:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8023c24:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8023c28:	9200      	str	r2, [sp, #0]
 8023c2a:	9601      	str	r6, [sp, #4]
 8023c2c:	4623      	mov	r3, r4
 8023c2e:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8023c32:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8023c34:	f7ff fd59 	bl	80236ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8023c38:	e74e      	b.n	8023ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023c3a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023c3c:	9820      	ldr	r0, [sp, #128]	; 0x80
 8023c3e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8023c40:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023c42:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8023c46:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8023c48:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8023c4c:	142d      	asrs	r5, r5, #16
 8023c4e:	1400      	asrs	r0, r0, #16
 8023c50:	fb02 5000 	mla	r0, r2, r0, r5
 8023c54:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023c56:	f815 9000 	ldrb.w	r9, [r5, r0]
 8023c5a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8023c5e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8023c62:	182e      	adds	r6, r5, r0
 8023c64:	eb04 0509 	add.w	r5, r4, r9
 8023c68:	2b00      	cmp	r3, #0
 8023c6a:	f000 8096 	beq.w	8023d9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8023c6e:	7877      	ldrb	r7, [r6, #1]
 8023c70:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8023c74:	4427      	add	r7, r4
 8023c76:	2900      	cmp	r1, #0
 8023c78:	f000 8097 	beq.w	8023daa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8023c7c:	18b0      	adds	r0, r6, r2
 8023c7e:	5cb2      	ldrb	r2, [r6, r2]
 8023c80:	7840      	ldrb	r0, [r0, #1]
 8023c82:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023c86:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023c8a:	4422      	add	r2, r4
 8023c8c:	4420      	add	r0, r4
 8023c8e:	b29b      	uxth	r3, r3
 8023c90:	b289      	uxth	r1, r1
 8023c92:	fb03 f801 	mul.w	r8, r3, r1
 8023c96:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8023c98:	f895 b002 	ldrb.w	fp, [r5, #2]
 8023c9c:	f8b6 c000 	ldrh.w	ip, [r6]
 8023ca0:	78be      	ldrb	r6, [r7, #2]
 8023ca2:	f814 9009 	ldrb.w	r9, [r4, r9]
 8023ca6:	011b      	lsls	r3, r3, #4
 8023ca8:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8023cac:	b289      	uxth	r1, r1
 8023cae:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8023cb2:	eba3 0308 	sub.w	r3, r3, r8
 8023cb6:	b29b      	uxth	r3, r3
 8023cb8:	ebae 0e01 	sub.w	lr, lr, r1
 8023cbc:	fa1f fe8e 	uxth.w	lr, lr
 8023cc0:	435e      	muls	r6, r3
 8023cc2:	fb0e 660b 	mla	r6, lr, fp, r6
 8023cc6:	f892 b002 	ldrb.w	fp, [r2, #2]
 8023cca:	9310      	str	r3, [sp, #64]	; 0x40
 8023ccc:	fb01 660b 	mla	r6, r1, fp, r6
 8023cd0:	f890 b002 	ldrb.w	fp, [r0, #2]
 8023cd4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023cd6:	fb08 660b 	mla	r6, r8, fp, r6
 8023cda:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8023cde:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8023ce2:	fb1b fb03 	smulbb	fp, fp, r3
 8023ce6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023cea:	fb06 b60a 	mla	r6, r6, sl, fp
 8023cee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023cf0:	f895 b001 	ldrb.w	fp, [r5, #1]
 8023cf4:	787d      	ldrb	r5, [r7, #1]
 8023cf6:	783f      	ldrb	r7, [r7, #0]
 8023cf8:	435d      	muls	r5, r3
 8023cfa:	fb0e 550b 	mla	r5, lr, fp, r5
 8023cfe:	f892 b001 	ldrb.w	fp, [r2, #1]
 8023d02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023d04:	fb01 550b 	mla	r5, r1, fp, r5
 8023d08:	f890 b001 	ldrb.w	fp, [r0, #1]
 8023d0c:	fb08 550b 	mla	r5, r8, fp, r5
 8023d10:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8023d14:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8023d18:	fb1b fb03 	smulbb	fp, fp, r3
 8023d1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023d1e:	437b      	muls	r3, r7
 8023d20:	7817      	ldrb	r7, [r2, #0]
 8023d22:	fb0e 3309 	mla	r3, lr, r9, r3
 8023d26:	fb01 3307 	mla	r3, r1, r7, r3
 8023d2a:	7807      	ldrb	r7, [r0, #0]
 8023d2c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023d30:	fb08 3707 	mla	r7, r8, r7, r3
 8023d34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023d36:	fa5f fc8c 	uxtb.w	ip, ip
 8023d3a:	fb1c fc03 	smulbb	ip, ip, r3
 8023d3e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8023d42:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8023d46:	fb05 b50a 	mla	r5, r5, sl, fp
 8023d4a:	fb07 c70a 	mla	r7, r7, sl, ip
 8023d4e:	b2b6      	uxth	r6, r6
 8023d50:	b2ad      	uxth	r5, r5
 8023d52:	b2bf      	uxth	r7, r7
 8023d54:	1c73      	adds	r3, r6, #1
 8023d56:	1c7a      	adds	r2, r7, #1
 8023d58:	f105 0b01 	add.w	fp, r5, #1
 8023d5c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8023d60:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8023d64:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8023d68:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023d6c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8023d70:	096d      	lsrs	r5, r5, #5
 8023d72:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023d74:	4316      	orrs	r6, r2
 8023d76:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023d7a:	432e      	orrs	r6, r5
 8023d7c:	f823 6b02 	strh.w	r6, [r3], #2
 8023d80:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023d82:	930c      	str	r3, [sp, #48]	; 0x30
 8023d84:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023d86:	4413      	add	r3, r2
 8023d88:	931f      	str	r3, [sp, #124]	; 0x7c
 8023d8a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023d8c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023d8e:	4413      	add	r3, r2
 8023d90:	9320      	str	r3, [sp, #128]	; 0x80
 8023d92:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023d94:	3b01      	subs	r3, #1
 8023d96:	9311      	str	r3, [sp, #68]	; 0x44
 8023d98:	e6db      	b.n	8023b52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8023d9a:	b149      	cbz	r1, 8023db0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8023d9c:	5cb2      	ldrb	r2, [r6, r2]
 8023d9e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023da2:	4422      	add	r2, r4
 8023da4:	4628      	mov	r0, r5
 8023da6:	462f      	mov	r7, r5
 8023da8:	e771      	b.n	8023c8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8023daa:	4628      	mov	r0, r5
 8023dac:	462a      	mov	r2, r5
 8023dae:	e76e      	b.n	8023c8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8023db0:	4628      	mov	r0, r5
 8023db2:	462a      	mov	r2, r5
 8023db4:	e7f7      	b.n	8023da6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8023db6:	b015      	add	sp, #84	; 0x54
 8023db8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023dbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8023dbc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023dc0:	880f      	ldrh	r7, [r1, #0]
 8023dc2:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8023dc6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8023dca:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8023dce:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8023dd2:	023c      	lsls	r4, r7, #8
 8023dd4:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8023dd8:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8023ddc:	017c      	lsls	r4, r7, #5
 8023dde:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8023de2:	00ff      	lsls	r7, r7, #3
 8023de4:	ea4b 0404 	orr.w	r4, fp, r4
 8023de8:	b2ff      	uxtb	r7, r7
 8023dea:	fb05 ca0e 	mla	sl, r5, lr, ip
 8023dee:	4327      	orrs	r7, r4
 8023df0:	2d00      	cmp	r5, #0
 8023df2:	eb02 080a 	add.w	r8, r2, sl
 8023df6:	9701      	str	r7, [sp, #4]
 8023df8:	db7e      	blt.n	8023ef8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8023dfa:	45a9      	cmp	r9, r5
 8023dfc:	dd7c      	ble.n	8023ef8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8023dfe:	f1bc 0f00 	cmp.w	ip, #0
 8023e02:	db77      	blt.n	8023ef4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8023e04:	45e6      	cmp	lr, ip
 8023e06:	dd75      	ble.n	8023ef4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8023e08:	f812 700a 	ldrb.w	r7, [r2, sl]
 8023e0c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8023e10:	441f      	add	r7, r3
 8023e12:	f11c 0201 	adds.w	r2, ip, #1
 8023e16:	d472      	bmi.n	8023efe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023e18:	4596      	cmp	lr, r2
 8023e1a:	dd70      	ble.n	8023efe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023e1c:	2800      	cmp	r0, #0
 8023e1e:	d06e      	beq.n	8023efe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023e20:	f898 4001 	ldrb.w	r4, [r8, #1]
 8023e24:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8023e28:	441c      	add	r4, r3
 8023e2a:	3501      	adds	r5, #1
 8023e2c:	d46b      	bmi.n	8023f06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8023e2e:	45a9      	cmp	r9, r5
 8023e30:	dd69      	ble.n	8023f06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8023e32:	2e00      	cmp	r6, #0
 8023e34:	d067      	beq.n	8023f06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8023e36:	f1bc 0f00 	cmp.w	ip, #0
 8023e3a:	db62      	blt.n	8023f02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8023e3c:	45e6      	cmp	lr, ip
 8023e3e:	dd60      	ble.n	8023f02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8023e40:	f818 500e 	ldrb.w	r5, [r8, lr]
 8023e44:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8023e48:	441d      	add	r5, r3
 8023e4a:	f11c 0201 	adds.w	r2, ip, #1
 8023e4e:	d45d      	bmi.n	8023f0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023e50:	4596      	cmp	lr, r2
 8023e52:	dd5b      	ble.n	8023f0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023e54:	2800      	cmp	r0, #0
 8023e56:	d059      	beq.n	8023f0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023e58:	44c6      	add	lr, r8
 8023e5a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023e5e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023e62:	4413      	add	r3, r2
 8023e64:	b280      	uxth	r0, r0
 8023e66:	b2b2      	uxth	r2, r6
 8023e68:	fb00 f602 	mul.w	r6, r0, r2
 8023e6c:	0100      	lsls	r0, r0, #4
 8023e6e:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8023e72:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8023e76:	1b80      	subs	r0, r0, r6
 8023e78:	fa1f fc82 	uxth.w	ip, r2
 8023e7c:	b282      	uxth	r2, r0
 8023e7e:	78a0      	ldrb	r0, [r4, #2]
 8023e80:	f897 e002 	ldrb.w	lr, [r7, #2]
 8023e84:	f897 9000 	ldrb.w	r9, [r7]
 8023e88:	787f      	ldrb	r7, [r7, #1]
 8023e8a:	eba8 080c 	sub.w	r8, r8, ip
 8023e8e:	fa1f f888 	uxth.w	r8, r8
 8023e92:	4350      	muls	r0, r2
 8023e94:	fb08 0e0e 	mla	lr, r8, lr, r0
 8023e98:	78a8      	ldrb	r0, [r5, #2]
 8023e9a:	fb0c e000 	mla	r0, ip, r0, lr
 8023e9e:	f893 e002 	ldrb.w	lr, [r3, #2]
 8023ea2:	fb06 0e0e 	mla	lr, r6, lr, r0
 8023ea6:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8023eaa:	f894 e000 	ldrb.w	lr, [r4]
 8023eae:	fb02 fe0e 	mul.w	lr, r2, lr
 8023eb2:	fb08 e909 	mla	r9, r8, r9, lr
 8023eb6:	f895 e000 	ldrb.w	lr, [r5]
 8023eba:	fb0c 990e 	mla	r9, ip, lr, r9
 8023ebe:	f893 e000 	ldrb.w	lr, [r3]
 8023ec2:	785b      	ldrb	r3, [r3, #1]
 8023ec4:	fb06 9e0e 	mla	lr, r6, lr, r9
 8023ec8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8023ecc:	ea4e 0e00 	orr.w	lr, lr, r0
 8023ed0:	7860      	ldrb	r0, [r4, #1]
 8023ed2:	4350      	muls	r0, r2
 8023ed4:	786a      	ldrb	r2, [r5, #1]
 8023ed6:	fb08 0007 	mla	r0, r8, r7, r0
 8023eda:	fb0c 0202 	mla	r2, ip, r2, r0
 8023ede:	fb06 2303 	mla	r3, r6, r3, r2
 8023ee2:	095b      	lsrs	r3, r3, #5
 8023ee4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023ee8:	ea4e 0303 	orr.w	r3, lr, r3
 8023eec:	800b      	strh	r3, [r1, #0]
 8023eee:	b003      	add	sp, #12
 8023ef0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023ef4:	af01      	add	r7, sp, #4
 8023ef6:	e78c      	b.n	8023e12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8023ef8:	ac01      	add	r4, sp, #4
 8023efa:	4627      	mov	r7, r4
 8023efc:	e795      	b.n	8023e2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8023efe:	ac01      	add	r4, sp, #4
 8023f00:	e793      	b.n	8023e2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8023f02:	ad01      	add	r5, sp, #4
 8023f04:	e7a1      	b.n	8023e4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8023f06:	ab01      	add	r3, sp, #4
 8023f08:	461d      	mov	r5, r3
 8023f0a:	e7ab      	b.n	8023e64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8023f0c:	ab01      	add	r3, sp, #4
 8023f0e:	e7a9      	b.n	8023e64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08023f10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023f10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023f14:	b08f      	sub	sp, #60	; 0x3c
 8023f16:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8023f1a:	920c      	str	r2, [sp, #48]	; 0x30
 8023f1c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8023f1e:	910a      	str	r1, [sp, #40]	; 0x28
 8023f20:	9306      	str	r3, [sp, #24]
 8023f22:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8023f26:	900d      	str	r0, [sp, #52]	; 0x34
 8023f28:	6850      	ldr	r0, [r2, #4]
 8023f2a:	6812      	ldr	r2, [r2, #0]
 8023f2c:	fb00 1303 	mla	r3, r0, r3, r1
 8023f30:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023f34:	9307      	str	r3, [sp, #28]
 8023f36:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023f38:	681b      	ldr	r3, [r3, #0]
 8023f3a:	9308      	str	r3, [sp, #32]
 8023f3c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023f3e:	685c      	ldr	r4, [r3, #4]
 8023f40:	3404      	adds	r4, #4
 8023f42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023f44:	2b00      	cmp	r3, #0
 8023f46:	dc03      	bgt.n	8023f50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8023f48:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023f4a:	2b00      	cmp	r3, #0
 8023f4c:	f340 81d6 	ble.w	80242fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8023f50:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023f52:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023f56:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023f5a:	1e48      	subs	r0, r1, #1
 8023f5c:	1e56      	subs	r6, r2, #1
 8023f5e:	9b06      	ldr	r3, [sp, #24]
 8023f60:	2b00      	cmp	r3, #0
 8023f62:	f340 80b7 	ble.w	80240d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8023f66:	ea5f 472b 	movs.w	r7, fp, asr #16
 8023f6a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023f6e:	d406      	bmi.n	8023f7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023f70:	4287      	cmp	r7, r0
 8023f72:	da04      	bge.n	8023f7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023f74:	2b00      	cmp	r3, #0
 8023f76:	db02      	blt.n	8023f7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023f78:	42b3      	cmp	r3, r6
 8023f7a:	f2c0 80ac 	blt.w	80240d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8023f7e:	3701      	adds	r7, #1
 8023f80:	f100 809d 	bmi.w	80240be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023f84:	42b9      	cmp	r1, r7
 8023f86:	f2c0 809a 	blt.w	80240be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023f8a:	3301      	adds	r3, #1
 8023f8c:	f100 8097 	bmi.w	80240be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023f90:	429a      	cmp	r2, r3
 8023f92:	f2c0 8094 	blt.w	80240be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023f96:	9b06      	ldr	r3, [sp, #24]
 8023f98:	930b      	str	r3, [sp, #44]	; 0x2c
 8023f9a:	9b07      	ldr	r3, [sp, #28]
 8023f9c:	9309      	str	r3, [sp, #36]	; 0x24
 8023f9e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023fa0:	2b00      	cmp	r3, #0
 8023fa2:	f340 80b5 	ble.w	8024110 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023fa6:	9820      	ldr	r0, [sp, #128]	; 0x80
 8023fa8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023faa:	68c7      	ldr	r7, [r0, #12]
 8023fac:	6892      	ldr	r2, [r2, #8]
 8023fae:	ea5f 402b 	movs.w	r0, fp, asr #16
 8023fb2:	ea4f 4625 	mov.w	r6, r5, asr #16
 8023fb6:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8023fba:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023fbe:	f100 80fb 	bmi.w	80241b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023fc2:	f102 3cff 	add.w	ip, r2, #4294967295
 8023fc6:	4560      	cmp	r0, ip
 8023fc8:	f280 80f6 	bge.w	80241b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023fcc:	2e00      	cmp	r6, #0
 8023fce:	f2c0 80f3 	blt.w	80241b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023fd2:	f107 3cff 	add.w	ip, r7, #4294967295
 8023fd6:	4566      	cmp	r6, ip
 8023fd8:	f280 80ee 	bge.w	80241b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023fdc:	b212      	sxth	r2, r2
 8023fde:	fb06 0002 	mla	r0, r6, r2, r0
 8023fe2:	9e08      	ldr	r6, [sp, #32]
 8023fe4:	1837      	adds	r7, r6, r0
 8023fe6:	5c30      	ldrb	r0, [r6, r0]
 8023fe8:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8023fec:	eb04 0c08 	add.w	ip, r4, r8
 8023ff0:	2b00      	cmp	r3, #0
 8023ff2:	f000 80d3 	beq.w	802419c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8023ff6:	787e      	ldrb	r6, [r7, #1]
 8023ff8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023ffc:	4426      	add	r6, r4
 8023ffe:	2900      	cmp	r1, #0
 8024000:	f000 80d4 	beq.w	80241ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8024004:	18b8      	adds	r0, r7, r2
 8024006:	5cba      	ldrb	r2, [r7, r2]
 8024008:	7840      	ldrb	r0, [r0, #1]
 802400a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802400e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8024012:	4422      	add	r2, r4
 8024014:	4420      	add	r0, r4
 8024016:	b29b      	uxth	r3, r3
 8024018:	b289      	uxth	r1, r1
 802401a:	fb03 f901 	mul.w	r9, r3, r1
 802401e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8024022:	011b      	lsls	r3, r3, #4
 8024024:	b289      	uxth	r1, r1
 8024026:	78b7      	ldrb	r7, [r6, #2]
 8024028:	f89c a002 	ldrb.w	sl, [ip, #2]
 802402c:	f89c c001 	ldrb.w	ip, [ip, #1]
 8024030:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8024034:	eba3 0309 	sub.w	r3, r3, r9
 8024038:	b29b      	uxth	r3, r3
 802403a:	ebae 0e01 	sub.w	lr, lr, r1
 802403e:	fa1f fe8e 	uxth.w	lr, lr
 8024042:	435f      	muls	r7, r3
 8024044:	fb0e 770a 	mla	r7, lr, sl, r7
 8024048:	f892 a002 	ldrb.w	sl, [r2, #2]
 802404c:	fb01 770a 	mla	r7, r1, sl, r7
 8024050:	f890 a002 	ldrb.w	sl, [r0, #2]
 8024054:	fb09 7a0a 	mla	sl, r9, sl, r7
 8024058:	f814 7008 	ldrb.w	r7, [r4, r8]
 802405c:	f896 8000 	ldrb.w	r8, [r6]
 8024060:	7876      	ldrb	r6, [r6, #1]
 8024062:	fb03 f808 	mul.w	r8, r3, r8
 8024066:	fb0e 8807 	mla	r8, lr, r7, r8
 802406a:	7817      	ldrb	r7, [r2, #0]
 802406c:	fb01 8807 	mla	r8, r1, r7, r8
 8024070:	7807      	ldrb	r7, [r0, #0]
 8024072:	fb09 8707 	mla	r7, r9, r7, r8
 8024076:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 802407a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802407e:	ea47 070a 	orr.w	r7, r7, sl
 8024082:	4373      	muls	r3, r6
 8024084:	f892 a001 	ldrb.w	sl, [r2, #1]
 8024088:	fb0e 330c 	mla	r3, lr, ip, r3
 802408c:	fb01 310a 	mla	r1, r1, sl, r3
 8024090:	f890 a001 	ldrb.w	sl, [r0, #1]
 8024094:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024096:	fb09 1a0a 	mla	sl, r9, sl, r1
 802409a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 802409e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80240a2:	ea47 070a 	orr.w	r7, r7, sl
 80240a6:	801f      	strh	r7, [r3, #0]
 80240a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80240aa:	3302      	adds	r3, #2
 80240ac:	9309      	str	r3, [sp, #36]	; 0x24
 80240ae:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80240b0:	449b      	add	fp, r3
 80240b2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80240b4:	441d      	add	r5, r3
 80240b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80240b8:	3b01      	subs	r3, #1
 80240ba:	930b      	str	r3, [sp, #44]	; 0x2c
 80240bc:	e76f      	b.n	8023f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80240be:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80240c0:	449b      	add	fp, r3
 80240c2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80240c4:	441d      	add	r5, r3
 80240c6:	9b06      	ldr	r3, [sp, #24]
 80240c8:	3b01      	subs	r3, #1
 80240ca:	9306      	str	r3, [sp, #24]
 80240cc:	9b07      	ldr	r3, [sp, #28]
 80240ce:	3302      	adds	r3, #2
 80240d0:	9307      	str	r3, [sp, #28]
 80240d2:	e744      	b.n	8023f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 80240d4:	d023      	beq.n	802411e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80240d6:	9b06      	ldr	r3, [sp, #24]
 80240d8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80240da:	3b01      	subs	r3, #1
 80240dc:	fb00 b003 	mla	r0, r0, r3, fp
 80240e0:	1400      	asrs	r0, r0, #16
 80240e2:	f53f af58 	bmi.w	8023f96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80240e6:	3901      	subs	r1, #1
 80240e8:	4288      	cmp	r0, r1
 80240ea:	f6bf af54 	bge.w	8023f96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80240ee:	991c      	ldr	r1, [sp, #112]	; 0x70
 80240f0:	fb01 5303 	mla	r3, r1, r3, r5
 80240f4:	141b      	asrs	r3, r3, #16
 80240f6:	f53f af4e 	bmi.w	8023f96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80240fa:	3a01      	subs	r2, #1
 80240fc:	4293      	cmp	r3, r2
 80240fe:	f6bf af4a 	bge.w	8023f96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8024102:	9b06      	ldr	r3, [sp, #24]
 8024104:	9309      	str	r3, [sp, #36]	; 0x24
 8024106:	9b07      	ldr	r3, [sp, #28]
 8024108:	930b      	str	r3, [sp, #44]	; 0x2c
 802410a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802410c:	2b00      	cmp	r3, #0
 802410e:	dc70      	bgt.n	80241f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8024110:	9b06      	ldr	r3, [sp, #24]
 8024112:	9a07      	ldr	r2, [sp, #28]
 8024114:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8024118:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802411c:	9307      	str	r3, [sp, #28]
 802411e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024120:	2b00      	cmp	r3, #0
 8024122:	f340 80eb 	ble.w	80242fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8024126:	ee30 0a04 	vadd.f32	s0, s0, s8
 802412a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802412e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024132:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024134:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024138:	ee31 1a05 	vadd.f32	s2, s2, s10
 802413c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024140:	eef0 6a62 	vmov.f32	s13, s5
 8024144:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024148:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802414c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024150:	ee16 ba90 	vmov	fp, s13
 8024154:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024158:	eef0 6a43 	vmov.f32	s13, s6
 802415c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024160:	ee12 2a90 	vmov	r2, s5
 8024164:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024168:	fb92 f3f3 	sdiv	r3, r2, r3
 802416c:	ee13 2a10 	vmov	r2, s6
 8024170:	931b      	str	r3, [sp, #108]	; 0x6c
 8024172:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024174:	fb92 f3f3 	sdiv	r3, r2, r3
 8024178:	931c      	str	r3, [sp, #112]	; 0x70
 802417a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802417c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802417e:	3b01      	subs	r3, #1
 8024180:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024184:	930a      	str	r3, [sp, #40]	; 0x28
 8024186:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024188:	bf08      	it	eq
 802418a:	4613      	moveq	r3, r2
 802418c:	ee16 5a90 	vmov	r5, s13
 8024190:	9306      	str	r3, [sp, #24]
 8024192:	eeb0 3a67 	vmov.f32	s6, s15
 8024196:	eef0 2a47 	vmov.f32	s5, s14
 802419a:	e6d2      	b.n	8023f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 802419c:	b149      	cbz	r1, 80241b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802419e:	5cba      	ldrb	r2, [r7, r2]
 80241a0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80241a4:	4422      	add	r2, r4
 80241a6:	4660      	mov	r0, ip
 80241a8:	4666      	mov	r6, ip
 80241aa:	e734      	b.n	8024016 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80241ac:	4660      	mov	r0, ip
 80241ae:	4662      	mov	r2, ip
 80241b0:	e731      	b.n	8024016 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80241b2:	4660      	mov	r0, ip
 80241b4:	4662      	mov	r2, ip
 80241b6:	e7f7      	b.n	80241a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 80241b8:	f110 0c01 	adds.w	ip, r0, #1
 80241bc:	f53f af74 	bmi.w	80240a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80241c0:	4562      	cmp	r2, ip
 80241c2:	f6ff af71 	blt.w	80240a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80241c6:	f116 0c01 	adds.w	ip, r6, #1
 80241ca:	f53f af6d 	bmi.w	80240a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80241ce:	4567      	cmp	r7, ip
 80241d0:	f6ff af6a 	blt.w	80240a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80241d4:	b23f      	sxth	r7, r7
 80241d6:	b212      	sxth	r2, r2
 80241d8:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80241dc:	e9cd 0602 	strd	r0, r6, [sp, #8]
 80241e0:	9200      	str	r2, [sp, #0]
 80241e2:	9701      	str	r7, [sp, #4]
 80241e4:	4623      	mov	r3, r4
 80241e6:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80241ea:	980d      	ldr	r0, [sp, #52]	; 0x34
 80241ec:	f7ff fde6 	bl	8023dbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80241f0:	e75a      	b.n	80240a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80241f2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80241f4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80241f8:	ea4f 462b 	mov.w	r6, fp, asr #16
 80241fc:	1428      	asrs	r0, r5, #16
 80241fe:	fb02 6000 	mla	r0, r2, r0, r6
 8024202:	9e08      	ldr	r6, [sp, #32]
 8024204:	f816 8000 	ldrb.w	r8, [r6, r0]
 8024208:	f3cb 3303 	ubfx	r3, fp, #12, #4
 802420c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8024210:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8024214:	1837      	adds	r7, r6, r0
 8024216:	eb04 0c08 	add.w	ip, r4, r8
 802421a:	2b00      	cmp	r3, #0
 802421c:	d060      	beq.n	80242e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 802421e:	787e      	ldrb	r6, [r7, #1]
 8024220:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8024224:	4426      	add	r6, r4
 8024226:	2900      	cmp	r1, #0
 8024228:	d062      	beq.n	80242f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 802422a:	18b8      	adds	r0, r7, r2
 802422c:	5cba      	ldrb	r2, [r7, r2]
 802422e:	7840      	ldrb	r0, [r0, #1]
 8024230:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8024234:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8024238:	4422      	add	r2, r4
 802423a:	4420      	add	r0, r4
 802423c:	b29b      	uxth	r3, r3
 802423e:	b289      	uxth	r1, r1
 8024240:	fb03 f901 	mul.w	r9, r3, r1
 8024244:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8024248:	011b      	lsls	r3, r3, #4
 802424a:	b289      	uxth	r1, r1
 802424c:	78b7      	ldrb	r7, [r6, #2]
 802424e:	f89c a002 	ldrb.w	sl, [ip, #2]
 8024252:	f89c c001 	ldrb.w	ip, [ip, #1]
 8024256:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802425a:	eba3 0309 	sub.w	r3, r3, r9
 802425e:	b29b      	uxth	r3, r3
 8024260:	ebae 0e01 	sub.w	lr, lr, r1
 8024264:	fa1f fe8e 	uxth.w	lr, lr
 8024268:	435f      	muls	r7, r3
 802426a:	fb0e 770a 	mla	r7, lr, sl, r7
 802426e:	f892 a002 	ldrb.w	sl, [r2, #2]
 8024272:	fb01 770a 	mla	r7, r1, sl, r7
 8024276:	f890 a002 	ldrb.w	sl, [r0, #2]
 802427a:	fb09 7a0a 	mla	sl, r9, sl, r7
 802427e:	f814 7008 	ldrb.w	r7, [r4, r8]
 8024282:	f896 8000 	ldrb.w	r8, [r6]
 8024286:	7876      	ldrb	r6, [r6, #1]
 8024288:	fb03 f808 	mul.w	r8, r3, r8
 802428c:	fb0e 8807 	mla	r8, lr, r7, r8
 8024290:	7817      	ldrb	r7, [r2, #0]
 8024292:	fb01 8807 	mla	r8, r1, r7, r8
 8024296:	7807      	ldrb	r7, [r0, #0]
 8024298:	fb09 8707 	mla	r7, r9, r7, r8
 802429c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80242a0:	4373      	muls	r3, r6
 80242a2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80242a6:	7856      	ldrb	r6, [r2, #1]
 80242a8:	ea47 070a 	orr.w	r7, r7, sl
 80242ac:	fb0e 330c 	mla	r3, lr, ip, r3
 80242b0:	f890 a001 	ldrb.w	sl, [r0, #1]
 80242b4:	fb01 3306 	mla	r3, r1, r6, r3
 80242b8:	fb09 3a0a 	mla	sl, r9, sl, r3
 80242bc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80242c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80242c2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80242c6:	ea47 070a 	orr.w	r7, r7, sl
 80242ca:	f823 7b02 	strh.w	r7, [r3], #2
 80242ce:	930b      	str	r3, [sp, #44]	; 0x2c
 80242d0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80242d2:	449b      	add	fp, r3
 80242d4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80242d6:	441d      	add	r5, r3
 80242d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80242da:	3b01      	subs	r3, #1
 80242dc:	9309      	str	r3, [sp, #36]	; 0x24
 80242de:	e714      	b.n	802410a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80242e0:	b149      	cbz	r1, 80242f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80242e2:	5cba      	ldrb	r2, [r7, r2]
 80242e4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80242e8:	4422      	add	r2, r4
 80242ea:	4660      	mov	r0, ip
 80242ec:	4666      	mov	r6, ip
 80242ee:	e7a5      	b.n	802423c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80242f0:	4660      	mov	r0, ip
 80242f2:	4662      	mov	r2, ip
 80242f4:	e7a2      	b.n	802423c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80242f6:	4660      	mov	r0, ip
 80242f8:	4662      	mov	r2, ip
 80242fa:	e7f7      	b.n	80242ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 80242fc:	b00f      	add	sp, #60	; 0x3c
 80242fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024302 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8024302:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024306:	b085      	sub	sp, #20
 8024308:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 802430c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8024310:	9102      	str	r1, [sp, #8]
 8024312:	2c00      	cmp	r4, #0
 8024314:	fb04 710c 	mla	r1, r4, ip, r7
 8024318:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 802431c:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8024320:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8024324:	eb02 0e01 	add.w	lr, r2, r1
 8024328:	f2c0 8122 	blt.w	8024570 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 802432c:	45a0      	cmp	r8, r4
 802432e:	f340 811f 	ble.w	8024570 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8024332:	2f00      	cmp	r7, #0
 8024334:	f2c0 811a 	blt.w	802456c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8024338:	45bc      	cmp	ip, r7
 802433a:	f340 8117 	ble.w	802456c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 802433e:	5c52      	ldrb	r2, [r2, r1]
 8024340:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8024344:	1c7a      	adds	r2, r7, #1
 8024346:	f100 8116 	bmi.w	8024576 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 802434a:	4594      	cmp	ip, r2
 802434c:	f340 8113 	ble.w	8024576 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8024350:	2e00      	cmp	r6, #0
 8024352:	f000 8112 	beq.w	802457a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8024356:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802435a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 802435e:	3401      	adds	r4, #1
 8024360:	f100 810f 	bmi.w	8024582 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8024364:	45a0      	cmp	r8, r4
 8024366:	f340 810c 	ble.w	8024582 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 802436a:	2800      	cmp	r0, #0
 802436c:	f000 810c 	beq.w	8024588 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8024370:	2f00      	cmp	r7, #0
 8024372:	f2c0 8104 	blt.w	802457e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8024376:	45bc      	cmp	ip, r7
 8024378:	f340 8101 	ble.w	802457e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 802437c:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8024380:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8024384:	3701      	adds	r7, #1
 8024386:	f100 8102 	bmi.w	802458e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 802438a:	45bc      	cmp	ip, r7
 802438c:	f340 80ff 	ble.w	802458e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8024390:	2e00      	cmp	r6, #0
 8024392:	f000 80fe 	beq.w	8024592 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8024396:	44f4      	add	ip, lr
 8024398:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802439c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80243a0:	b2b6      	uxth	r6, r6
 80243a2:	b280      	uxth	r0, r0
 80243a4:	fb00 fe06 	mul.w	lr, r0, r6
 80243a8:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80243ac:	0136      	lsls	r6, r6, #4
 80243ae:	eba6 070e 	sub.w	r7, r6, lr
 80243b2:	b280      	uxth	r0, r0
 80243b4:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80243b8:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80243bc:	b2bf      	uxth	r7, r7
 80243be:	1a1b      	subs	r3, r3, r0
 80243c0:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80243c4:	b29b      	uxth	r3, r3
 80243c6:	fb0a f607 	mul.w	r6, sl, r7
 80243ca:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80243ce:	fb0b 6603 	mla	r6, fp, r3, r6
 80243d2:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80243d6:	fb00 6609 	mla	r6, r0, r9, r6
 80243da:	fb0e 6608 	mla	r6, lr, r8, r6
 80243de:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80243e2:	9600      	str	r6, [sp, #0]
 80243e4:	2e00      	cmp	r6, #0
 80243e6:	f000 80be 	beq.w	8024566 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 80243ea:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80243ee:	fb0b fc0c 	mul.w	ip, fp, ip
 80243f2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80243f6:	fb0b f505 	mul.w	r5, fp, r5
 80243fa:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80243fe:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024402:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024406:	44dc      	add	ip, fp
 8024408:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802440c:	9501      	str	r5, [sp, #4]
 802440e:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024412:	9503      	str	r5, [sp, #12]
 8024414:	9d01      	ldr	r5, [sp, #4]
 8024416:	9e02      	ldr	r6, [sp, #8]
 8024418:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802441c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024420:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024424:	fb0a fc0c 	mul.w	ip, sl, ip
 8024428:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802442c:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024430:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024434:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024438:	4465      	add	r5, ip
 802443a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802443e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024442:	fb09 fc0c 	mul.w	ip, r9, ip
 8024446:	fb09 f904 	mul.w	r9, r9, r4
 802444a:	f509 7480 	add.w	r4, r9, #256	; 0x100
 802444e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024452:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024456:	fb08 f404 	mul.w	r4, r8, r4
 802445a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802445e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024462:	fb08 f802 	mul.w	r8, r8, r2
 8024466:	fb0a fa01 	mul.w	sl, sl, r1
 802446a:	0a22      	lsrs	r2, r4, #8
 802446c:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024470:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024474:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8024478:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802447c:	4414      	add	r4, r2
 802447e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024482:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024486:	0a2d      	lsrs	r5, r5, #8
 8024488:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802448c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024490:	9a03      	ldr	r2, [sp, #12]
 8024492:	8836      	ldrh	r6, [r6, #0]
 8024494:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024498:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802449c:	437d      	muls	r5, r7
 802449e:	4461      	add	r1, ip
 80244a0:	0a24      	lsrs	r4, r4, #8
 80244a2:	fb02 5503 	mla	r5, r2, r3, r5
 80244a6:	0a09      	lsrs	r1, r1, #8
 80244a8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80244ac:	fb04 540e 	mla	r4, r4, lr, r5
 80244b0:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80244b4:	fb01 4100 	mla	r1, r1, r0, r4
 80244b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80244bc:	0a09      	lsrs	r1, r1, #8
 80244be:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80244c2:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80244c6:	fb07 f70a 	mul.w	r7, r7, sl
 80244ca:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80244ce:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80244d2:	fb03 7101 	mla	r1, r3, r1, r7
 80244d6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80244da:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80244de:	fb0e 1e08 	mla	lr, lr, r8, r1
 80244e2:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80244e6:	fb00 e101 	mla	r1, r0, r1, lr
 80244ea:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80244ee:	9a00      	ldr	r2, [sp, #0]
 80244f0:	b287      	uxth	r7, r0
 80244f2:	437a      	muls	r2, r7
 80244f4:	0a09      	lsrs	r1, r1, #8
 80244f6:	1c53      	adds	r3, r2, #1
 80244f8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80244fc:	4321      	orrs	r1, r4
 80244fe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024502:	1235      	asrs	r5, r6, #8
 8024504:	0c0a      	lsrs	r2, r1, #16
 8024506:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802450a:	b2db      	uxtb	r3, r3
 802450c:	fb12 f207 	smulbb	r2, r2, r7
 8024510:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8024514:	fb05 2503 	mla	r5, r5, r3, r2
 8024518:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802451c:	10f2      	asrs	r2, r6, #3
 802451e:	b2c8      	uxtb	r0, r1
 8024520:	00f6      	lsls	r6, r6, #3
 8024522:	fb14 f407 	smulbb	r4, r4, r7
 8024526:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802452a:	b2f6      	uxtb	r6, r6
 802452c:	fb10 f007 	smulbb	r0, r0, r7
 8024530:	fb02 4203 	mla	r2, r2, r3, r4
 8024534:	b2ad      	uxth	r5, r5
 8024536:	fb06 0303 	mla	r3, r6, r3, r0
 802453a:	b299      	uxth	r1, r3
 802453c:	b294      	uxth	r4, r2
 802453e:	1c6b      	adds	r3, r5, #1
 8024540:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024544:	1c62      	adds	r2, r4, #1
 8024546:	1c4b      	adds	r3, r1, #1
 8024548:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802454c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8024550:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8024554:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024558:	0952      	lsrs	r2, r2, #5
 802455a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802455e:	432b      	orrs	r3, r5
 8024560:	4313      	orrs	r3, r2
 8024562:	9a02      	ldr	r2, [sp, #8]
 8024564:	8013      	strh	r3, [r2, #0]
 8024566:	b005      	add	sp, #20
 8024568:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802456c:	2500      	movs	r5, #0
 802456e:	e6e9      	b.n	8024344 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8024570:	2100      	movs	r1, #0
 8024572:	460d      	mov	r5, r1
 8024574:	e6f3      	b.n	802435e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8024576:	2100      	movs	r1, #0
 8024578:	e6f1      	b.n	802435e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802457a:	4631      	mov	r1, r6
 802457c:	e6ef      	b.n	802435e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802457e:	2400      	movs	r4, #0
 8024580:	e700      	b.n	8024384 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8024582:	2200      	movs	r2, #0
 8024584:	4614      	mov	r4, r2
 8024586:	e70b      	b.n	80243a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8024588:	4602      	mov	r2, r0
 802458a:	4604      	mov	r4, r0
 802458c:	e708      	b.n	80243a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802458e:	2200      	movs	r2, #0
 8024590:	e706      	b.n	80243a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8024592:	4632      	mov	r2, r6
 8024594:	e704      	b.n	80243a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08024596 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024596:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802459a:	b09f      	sub	sp, #124	; 0x7c
 802459c:	921b      	str	r2, [sp, #108]	; 0x6c
 802459e:	9309      	str	r3, [sp, #36]	; 0x24
 80245a0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80245a2:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80245a6:	931c      	str	r3, [sp, #112]	; 0x70
 80245a8:	9119      	str	r1, [sp, #100]	; 0x64
 80245aa:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80245ae:	901d      	str	r0, [sp, #116]	; 0x74
 80245b0:	6850      	ldr	r0, [r2, #4]
 80245b2:	6812      	ldr	r2, [r2, #0]
 80245b4:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80245b6:	fb00 1303 	mla	r3, r0, r3, r1
 80245ba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80245be:	930c      	str	r3, [sp, #48]	; 0x30
 80245c0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80245c2:	681b      	ldr	r3, [r3, #0]
 80245c4:	9312      	str	r3, [sp, #72]	; 0x48
 80245c6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80245c8:	685e      	ldr	r6, [r3, #4]
 80245ca:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 80245ce:	930d      	str	r3, [sp, #52]	; 0x34
 80245d0:	3604      	adds	r6, #4
 80245d2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80245d4:	2b00      	cmp	r3, #0
 80245d6:	dc03      	bgt.n	80245e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80245d8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80245da:	2b00      	cmp	r3, #0
 80245dc:	f340 8388 	ble.w	8024cf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80245e0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80245e2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80245e6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80245ea:	1e48      	subs	r0, r1, #1
 80245ec:	1e57      	subs	r7, r2, #1
 80245ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80245f0:	2b00      	cmp	r3, #0
 80245f2:	f340 8195 	ble.w	8024920 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80245f6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80245f8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80245fc:	ea4f 4325 	mov.w	r3, r5, asr #16
 8024600:	d406      	bmi.n	8024610 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8024602:	4584      	cmp	ip, r0
 8024604:	da04      	bge.n	8024610 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8024606:	2b00      	cmp	r3, #0
 8024608:	db02      	blt.n	8024610 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802460a:	42bb      	cmp	r3, r7
 802460c:	f2c0 8189 	blt.w	8024922 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8024610:	f11c 0c01 	adds.w	ip, ip, #1
 8024614:	f100 8177 	bmi.w	8024906 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024618:	4561      	cmp	r1, ip
 802461a:	f2c0 8174 	blt.w	8024906 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802461e:	3301      	adds	r3, #1
 8024620:	f100 8171 	bmi.w	8024906 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024624:	429a      	cmp	r2, r3
 8024626:	f2c0 816e 	blt.w	8024906 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802462a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802462c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 802462e:	931a      	str	r3, [sp, #104]	; 0x68
 8024630:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8024632:	2b00      	cmp	r3, #0
 8024634:	f340 8193 	ble.w	802495e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8024638:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802463a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802463e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024640:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8024644:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024646:	141b      	asrs	r3, r3, #16
 8024648:	ea4f 4c25 	mov.w	ip, r5, asr #16
 802464c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8024650:	f100 81d6 	bmi.w	8024a00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8024654:	f100 38ff 	add.w	r8, r0, #4294967295
 8024658:	4543      	cmp	r3, r8
 802465a:	f280 81d1 	bge.w	8024a00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802465e:	f1bc 0f00 	cmp.w	ip, #0
 8024662:	f2c0 81cd 	blt.w	8024a00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8024666:	f10e 38ff 	add.w	r8, lr, #4294967295
 802466a:	45c4      	cmp	ip, r8
 802466c:	f280 81c8 	bge.w	8024a00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8024670:	b200      	sxth	r0, r0
 8024672:	fb0c 3300 	mla	r3, ip, r0, r3
 8024676:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024678:	eb04 0803 	add.w	r8, r4, r3
 802467c:	5ce3      	ldrb	r3, [r4, r3]
 802467e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024682:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8024686:	2a00      	cmp	r2, #0
 8024688:	f000 81af 	beq.w	80249ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802468c:	f898 c001 	ldrb.w	ip, [r8, #1]
 8024690:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8024694:	940e      	str	r4, [sp, #56]	; 0x38
 8024696:	0e24      	lsrs	r4, r4, #24
 8024698:	9415      	str	r4, [sp, #84]	; 0x54
 802469a:	b179      	cbz	r1, 80246bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802469c:	eb08 0c00 	add.w	ip, r8, r0
 80246a0:	f818 0000 	ldrb.w	r0, [r8, r0]
 80246a4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80246a8:	900a      	str	r0, [sp, #40]	; 0x28
 80246aa:	0e00      	lsrs	r0, r0, #24
 80246ac:	9013      	str	r0, [sp, #76]	; 0x4c
 80246ae:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80246b2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80246b6:	900f      	str	r0, [sp, #60]	; 0x3c
 80246b8:	0e00      	lsrs	r0, r0, #24
 80246ba:	9016      	str	r0, [sp, #88]	; 0x58
 80246bc:	b292      	uxth	r2, r2
 80246be:	b289      	uxth	r1, r1
 80246c0:	fb02 f901 	mul.w	r9, r2, r1
 80246c4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80246c8:	0112      	lsls	r2, r2, #4
 80246ca:	eba2 0809 	sub.w	r8, r2, r9
 80246ce:	b289      	uxth	r1, r1
 80246d0:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80246d4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80246d6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80246d8:	fa1f f888 	uxth.w	r8, r8
 80246dc:	1a52      	subs	r2, r2, r1
 80246de:	b292      	uxth	r2, r2
 80246e0:	fb08 f000 	mul.w	r0, r8, r0
 80246e4:	fb02 000e 	mla	r0, r2, lr, r0
 80246e8:	fb01 0004 	mla	r0, r1, r4, r0
 80246ec:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80246ee:	fb09 0004 	mla	r0, r9, r4, r0
 80246f2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80246f6:	2800      	cmp	r0, #0
 80246f8:	f000 80fa 	beq.w	80248f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80246fc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024700:	d01b      	beq.n	802473a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024702:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024706:	fb0e fa0a 	mul.w	sl, lr, sl
 802470a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802470e:	fb0e fe03 	mul.w	lr, lr, r3
 8024712:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024716:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802471a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802471e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024722:	4453      	add	r3, sl
 8024724:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024728:	0a1b      	lsrs	r3, r3, #8
 802472a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802472e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024732:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024736:	ea43 030c 	orr.w	r3, r3, ip
 802473a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802473c:	2cff      	cmp	r4, #255	; 0xff
 802473e:	d021      	beq.n	8024784 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024740:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024742:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024746:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024748:	fb04 fb0b 	mul.w	fp, r4, fp
 802474c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802474e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024752:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024754:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024758:	fb04 fa0a 	mul.w	sl, r4, sl
 802475c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024760:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024764:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024768:	44de      	add	lr, fp
 802476a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802476e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024772:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024776:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802477a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802477e:	ea4e 040a 	orr.w	r4, lr, sl
 8024782:	940e      	str	r4, [sp, #56]	; 0x38
 8024784:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024786:	2cff      	cmp	r4, #255	; 0xff
 8024788:	d021      	beq.n	80247ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 802478a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802478c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024790:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024792:	fb04 fb0b 	mul.w	fp, r4, fp
 8024796:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024798:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802479c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802479e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80247a2:	fb04 fa0a 	mul.w	sl, r4, sl
 80247a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80247aa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80247ae:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80247b2:	44de      	add	lr, fp
 80247b4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80247b8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80247bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80247c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80247c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80247c8:	ea4e 040a 	orr.w	r4, lr, sl
 80247cc:	940a      	str	r4, [sp, #40]	; 0x28
 80247ce:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80247d0:	2cff      	cmp	r4, #255	; 0xff
 80247d2:	d021      	beq.n	8024818 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80247d4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80247d6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80247da:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80247dc:	fb04 fb0b 	mul.w	fp, r4, fp
 80247e0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80247e2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80247e6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80247e8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80247ec:	fb04 fa0a 	mul.w	sl, r4, sl
 80247f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80247f4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80247f8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80247fc:	44de      	add	lr, fp
 80247fe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024802:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024806:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802480a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802480e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024812:	ea4e 040a 	orr.w	r4, lr, sl
 8024816:	940f      	str	r4, [sp, #60]	; 0x3c
 8024818:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802481a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802481e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024820:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8024824:	fb08 fc0c 	mul.w	ip, r8, ip
 8024828:	fb02 cc0e 	mla	ip, r2, lr, ip
 802482c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024830:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024832:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024836:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802483a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802483c:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024840:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8024844:	fb08 f80e 	mul.w	r8, r8, lr
 8024848:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802484c:	fb02 8303 	mla	r3, r2, r3, r8
 8024850:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024852:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024854:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024858:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802485a:	fb01 330a 	mla	r3, r1, sl, r3
 802485e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8024862:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8024864:	fb09 3901 	mla	r9, r9, r1, r3
 8024868:	4342      	muls	r2, r0
 802486a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802486e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024872:	883b      	ldrh	r3, [r7, #0]
 8024874:	1c50      	adds	r0, r2, #1
 8024876:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802487a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802487e:	ea4c 0c09 	orr.w	ip, ip, r9
 8024882:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8024886:	1219      	asrs	r1, r3, #8
 8024888:	ea4f 421c 	mov.w	r2, ip, lsr #16
 802488c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8024890:	b2c0      	uxtb	r0, r0
 8024892:	fb12 f204 	smulbb	r2, r2, r4
 8024896:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802489a:	fb01 2100 	mla	r1, r1, r0, r2
 802489e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80248a2:	10da      	asrs	r2, r3, #3
 80248a4:	fa5f fc8c 	uxtb.w	ip, ip
 80248a8:	00db      	lsls	r3, r3, #3
 80248aa:	fb1c fc04 	smulbb	ip, ip, r4
 80248ae:	b2db      	uxtb	r3, r3
 80248b0:	b289      	uxth	r1, r1
 80248b2:	fb03 c300 	mla	r3, r3, r0, ip
 80248b6:	fa1f fc83 	uxth.w	ip, r3
 80248ba:	1c4b      	adds	r3, r1, #1
 80248bc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80248c0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80248c4:	fb1e fe04 	smulbb	lr, lr, r4
 80248c8:	f10c 0301 	add.w	r3, ip, #1
 80248cc:	fb02 e200 	mla	r2, r2, r0, lr
 80248d0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80248d4:	b292      	uxth	r2, r2
 80248d6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80248da:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80248de:	430b      	orrs	r3, r1
 80248e0:	1c51      	adds	r1, r2, #1
 80248e2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80248e6:	0952      	lsrs	r2, r2, #5
 80248e8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80248ec:	4313      	orrs	r3, r2
 80248ee:	803b      	strh	r3, [r7, #0]
 80248f0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80248f2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80248f4:	441a      	add	r2, r3
 80248f6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80248f8:	9229      	str	r2, [sp, #164]	; 0xa4
 80248fa:	441d      	add	r5, r3
 80248fc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80248fe:	3b01      	subs	r3, #1
 8024900:	3702      	adds	r7, #2
 8024902:	931a      	str	r3, [sp, #104]	; 0x68
 8024904:	e694      	b.n	8024630 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8024906:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024908:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802490a:	441c      	add	r4, r3
 802490c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802490e:	9429      	str	r4, [sp, #164]	; 0xa4
 8024910:	441d      	add	r5, r3
 8024912:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024914:	3b01      	subs	r3, #1
 8024916:	9309      	str	r3, [sp, #36]	; 0x24
 8024918:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802491a:	3302      	adds	r3, #2
 802491c:	930c      	str	r3, [sp, #48]	; 0x30
 802491e:	e666      	b.n	80245ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024920:	d024      	beq.n	802496c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8024922:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024924:	982b      	ldr	r0, [sp, #172]	; 0xac
 8024926:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8024928:	3b01      	subs	r3, #1
 802492a:	fb00 4003 	mla	r0, r0, r3, r4
 802492e:	1400      	asrs	r0, r0, #16
 8024930:	f53f ae7b 	bmi.w	802462a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024934:	3901      	subs	r1, #1
 8024936:	4288      	cmp	r0, r1
 8024938:	f6bf ae77 	bge.w	802462a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802493c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 802493e:	fb01 5303 	mla	r3, r1, r3, r5
 8024942:	141b      	asrs	r3, r3, #16
 8024944:	f53f ae71 	bmi.w	802462a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024948:	3a01      	subs	r2, #1
 802494a:	4293      	cmp	r3, r2
 802494c:	f6bf ae6d 	bge.w	802462a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024950:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8024954:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8024958:	f1bb 0f00 	cmp.w	fp, #0
 802495c:	dc70      	bgt.n	8024a40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 802495e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024960:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024964:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024966:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802496a:	930c      	str	r3, [sp, #48]	; 0x30
 802496c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802496e:	2b00      	cmp	r3, #0
 8024970:	f340 81be 	ble.w	8024cf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8024974:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024978:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802497c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024980:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024982:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024986:	ee31 1a05 	vadd.f32	s2, s2, s10
 802498a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802498e:	eef0 6a62 	vmov.f32	s13, s5
 8024992:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024996:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802499a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802499e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80249a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80249a6:	eef0 6a43 	vmov.f32	s13, s6
 80249aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80249ae:	ee12 2a90 	vmov	r2, s5
 80249b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80249b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80249ba:	ee13 2a10 	vmov	r2, s6
 80249be:	932b      	str	r3, [sp, #172]	; 0xac
 80249c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80249c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80249c6:	932c      	str	r3, [sp, #176]	; 0xb0
 80249c8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80249ca:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80249cc:	3b01      	subs	r3, #1
 80249ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80249d2:	9319      	str	r3, [sp, #100]	; 0x64
 80249d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80249d6:	bf08      	it	eq
 80249d8:	4613      	moveq	r3, r2
 80249da:	ee16 5a90 	vmov	r5, s13
 80249de:	9309      	str	r3, [sp, #36]	; 0x24
 80249e0:	eeb0 3a67 	vmov.f32	s6, s15
 80249e4:	eef0 2a47 	vmov.f32	s5, s14
 80249e8:	e5f3      	b.n	80245d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80249ea:	2900      	cmp	r1, #0
 80249ec:	f43f ae66 	beq.w	80246bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80249f0:	f818 0000 	ldrb.w	r0, [r8, r0]
 80249f4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80249f8:	900a      	str	r0, [sp, #40]	; 0x28
 80249fa:	0e00      	lsrs	r0, r0, #24
 80249fc:	9013      	str	r0, [sp, #76]	; 0x4c
 80249fe:	e65d      	b.n	80246bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8024a00:	f113 0801 	adds.w	r8, r3, #1
 8024a04:	f53f af74 	bmi.w	80248f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024a08:	4540      	cmp	r0, r8
 8024a0a:	f6ff af71 	blt.w	80248f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024a0e:	f11c 0801 	adds.w	r8, ip, #1
 8024a12:	f53f af6d 	bmi.w	80248f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024a16:	45c6      	cmp	lr, r8
 8024a18:	f6ff af6a 	blt.w	80248f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024a1c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8024a1e:	9302      	str	r3, [sp, #8]
 8024a20:	b200      	sxth	r0, r0
 8024a22:	fa0f f38e 	sxth.w	r3, lr
 8024a26:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8024a2a:	e9cd c203 	strd	ip, r2, [sp, #12]
 8024a2e:	9301      	str	r3, [sp, #4]
 8024a30:	9000      	str	r0, [sp, #0]
 8024a32:	4633      	mov	r3, r6
 8024a34:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8024a36:	981d      	ldr	r0, [sp, #116]	; 0x74
 8024a38:	4639      	mov	r1, r7
 8024a3a:	f7ff fc62 	bl	8024302 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8024a3e:	e757      	b.n	80248f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024a40:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024a42:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8024a44:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024a48:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024a4a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024a4e:	1427      	asrs	r7, r4, #16
 8024a50:	142b      	asrs	r3, r5, #16
 8024a52:	fb01 7303 	mla	r3, r1, r3, r7
 8024a56:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024a58:	18e7      	adds	r7, r4, r3
 8024a5a:	5ce3      	ldrb	r3, [r4, r3]
 8024a5c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024a60:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8024a64:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024a68:	2a00      	cmp	r2, #0
 8024a6a:	f000 8137 	beq.w	8024cdc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024a6e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8024a72:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8024a76:	9410      	str	r4, [sp, #64]	; 0x40
 8024a78:	0e24      	lsrs	r4, r4, #24
 8024a7a:	9417      	str	r4, [sp, #92]	; 0x5c
 8024a7c:	b170      	cbz	r0, 8024a9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8024a7e:	eb07 0e01 	add.w	lr, r7, r1
 8024a82:	5c79      	ldrb	r1, [r7, r1]
 8024a84:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024a88:	910b      	str	r1, [sp, #44]	; 0x2c
 8024a8a:	0e09      	lsrs	r1, r1, #24
 8024a8c:	9114      	str	r1, [sp, #80]	; 0x50
 8024a8e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8024a92:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024a96:	9111      	str	r1, [sp, #68]	; 0x44
 8024a98:	0e09      	lsrs	r1, r1, #24
 8024a9a:	9118      	str	r1, [sp, #96]	; 0x60
 8024a9c:	b292      	uxth	r2, r2
 8024a9e:	b280      	uxth	r0, r0
 8024aa0:	fb02 f800 	mul.w	r8, r2, r0
 8024aa4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8024aa8:	0112      	lsls	r2, r2, #4
 8024aaa:	eba2 0e08 	sub.w	lr, r2, r8
 8024aae:	b280      	uxth	r0, r0
 8024ab0:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024ab4:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8024ab6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024ab8:	fa1f fe8e 	uxth.w	lr, lr
 8024abc:	1a12      	subs	r2, r2, r0
 8024abe:	b292      	uxth	r2, r2
 8024ac0:	fb0e f101 	mul.w	r1, lr, r1
 8024ac4:	fb02 110c 	mla	r1, r2, ip, r1
 8024ac8:	fb00 1104 	mla	r1, r0, r4, r1
 8024acc:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8024ace:	fb08 1104 	mla	r1, r8, r4, r1
 8024ad2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024ad6:	2900      	cmp	r1, #0
 8024ad8:	f000 80f5 	beq.w	8024cc6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024adc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024ae0:	d019      	beq.n	8024b16 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8024ae2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024ae6:	fb0c fa0a 	mul.w	sl, ip, sl
 8024aea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024aee:	fb0c fc03 	mul.w	ip, ip, r3
 8024af2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024af6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024afa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024afe:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024b02:	4453      	add	r3, sl
 8024b04:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024b08:	0a1b      	lsrs	r3, r3, #8
 8024b0a:	0a3f      	lsrs	r7, r7, #8
 8024b0c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024b10:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024b14:	433b      	orrs	r3, r7
 8024b16:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024b18:	2cff      	cmp	r4, #255	; 0xff
 8024b1a:	d020      	beq.n	8024b5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8024b1c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024b1e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024b22:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024b24:	4367      	muls	r7, r4
 8024b26:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024b28:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024b2c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024b2e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024b32:	fb04 fa0a 	mul.w	sl, r4, sl
 8024b36:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024b3a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b3e:	44bc      	add	ip, r7
 8024b40:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024b44:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024b48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024b58:	ea4c 040a 	orr.w	r4, ip, sl
 8024b5c:	9410      	str	r4, [sp, #64]	; 0x40
 8024b5e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024b60:	2cff      	cmp	r4, #255	; 0xff
 8024b62:	d020      	beq.n	8024ba6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8024b64:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024b66:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024b6a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024b6c:	4367      	muls	r7, r4
 8024b6e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024b70:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024b74:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024b76:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024b7a:	fb04 fa0a 	mul.w	sl, r4, sl
 8024b7e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024b82:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b86:	44bc      	add	ip, r7
 8024b88:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024b8c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024b90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b9c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024ba0:	ea4c 040a 	orr.w	r4, ip, sl
 8024ba4:	940b      	str	r4, [sp, #44]	; 0x2c
 8024ba6:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8024ba8:	2cff      	cmp	r4, #255	; 0xff
 8024baa:	d020      	beq.n	8024bee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8024bac:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024bae:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024bb2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8024bb4:	4367      	muls	r7, r4
 8024bb6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024bb8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024bbc:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8024bbe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024bc2:	fb04 fa0a 	mul.w	sl, r4, sl
 8024bc6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024bca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024bce:	44bc      	add	ip, r7
 8024bd0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024bd4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024bd8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024bdc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024be0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024be4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024be8:	ea4c 040a 	orr.w	r4, ip, sl
 8024bec:	9411      	str	r4, [sp, #68]	; 0x44
 8024bee:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024bf0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024bf4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024bf6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024bfa:	fb0e f707 	mul.w	r7, lr, r7
 8024bfe:	fb02 770c 	mla	r7, r2, ip, r7
 8024c02:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024c06:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024c08:	fb00 770c 	mla	r7, r0, ip, r7
 8024c0c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024c10:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024c12:	fb08 770c 	mla	r7, r8, ip, r7
 8024c16:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8024c1a:	fb0e fe0c 	mul.w	lr, lr, ip
 8024c1e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024c22:	fb02 e303 	mla	r3, r2, r3, lr
 8024c26:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024c28:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024c2a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024c2e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024c30:	fb00 330a 	mla	r3, r0, sl, r3
 8024c34:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8024c38:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024c3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024c3e:	f8b9 0000 	ldrh.w	r0, [r9]
 8024c42:	434b      	muls	r3, r1
 8024c44:	0a3f      	lsrs	r7, r7, #8
 8024c46:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024c4a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024c4e:	1c59      	adds	r1, r3, #1
 8024c50:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024c54:	ea47 070c 	orr.w	r7, r7, ip
 8024c58:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024c5c:	1202      	asrs	r2, r0, #8
 8024c5e:	0c3b      	lsrs	r3, r7, #16
 8024c60:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8024c64:	b2c9      	uxtb	r1, r1
 8024c66:	fb13 f304 	smulbb	r3, r3, r4
 8024c6a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024c6e:	fb02 3201 	mla	r2, r2, r1, r3
 8024c72:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8024c76:	10c3      	asrs	r3, r0, #3
 8024c78:	b2ff      	uxtb	r7, r7
 8024c7a:	00c0      	lsls	r0, r0, #3
 8024c7c:	b292      	uxth	r2, r2
 8024c7e:	fb1c fc04 	smulbb	ip, ip, r4
 8024c82:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8024c86:	b2c0      	uxtb	r0, r0
 8024c88:	fb17 f704 	smulbb	r7, r7, r4
 8024c8c:	fb03 c301 	mla	r3, r3, r1, ip
 8024c90:	fb00 7001 	mla	r0, r0, r1, r7
 8024c94:	f102 0c01 	add.w	ip, r2, #1
 8024c98:	b280      	uxth	r0, r0
 8024c9a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8024c9e:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8024ca2:	1c42      	adds	r2, r0, #1
 8024ca4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024ca8:	b29b      	uxth	r3, r3
 8024caa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8024cae:	ea42 020c 	orr.w	r2, r2, ip
 8024cb2:	f103 0c01 	add.w	ip, r3, #1
 8024cb6:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8024cba:	095b      	lsrs	r3, r3, #5
 8024cbc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024cc0:	431a      	orrs	r2, r3
 8024cc2:	f8a9 2000 	strh.w	r2, [r9]
 8024cc6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024cc8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024cca:	441a      	add	r2, r3
 8024ccc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024cce:	9229      	str	r2, [sp, #164]	; 0xa4
 8024cd0:	f109 0902 	add.w	r9, r9, #2
 8024cd4:	441d      	add	r5, r3
 8024cd6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024cda:	e63d      	b.n	8024958 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8024cdc:	2800      	cmp	r0, #0
 8024cde:	f43f aedd 	beq.w	8024a9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8024ce2:	5c79      	ldrb	r1, [r7, r1]
 8024ce4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024ce8:	910b      	str	r1, [sp, #44]	; 0x2c
 8024cea:	0e09      	lsrs	r1, r1, #24
 8024cec:	9114      	str	r1, [sp, #80]	; 0x50
 8024cee:	e6d5      	b.n	8024a9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8024cf0:	b01f      	add	sp, #124	; 0x7c
 8024cf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024cf6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8024cf6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024cfa:	b089      	sub	sp, #36	; 0x24
 8024cfc:	9101      	str	r1, [sp, #4]
 8024cfe:	9801      	ldr	r0, [sp, #4]
 8024d00:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8024d04:	8800      	ldrh	r0, [r0, #0]
 8024d06:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8024d0a:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8024d0e:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8024d12:	1206      	asrs	r6, r0, #8
 8024d14:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8024d18:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8024d1c:	9602      	str	r6, [sp, #8]
 8024d1e:	10c6      	asrs	r6, r0, #3
 8024d20:	00c0      	lsls	r0, r0, #3
 8024d22:	b2c0      	uxtb	r0, r0
 8024d24:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8024d28:	9004      	str	r0, [sp, #16]
 8024d2a:	2f00      	cmp	r7, #0
 8024d2c:	fb07 100c 	mla	r0, r7, ip, r1
 8024d30:	9603      	str	r6, [sp, #12]
 8024d32:	eb02 0e00 	add.w	lr, r2, r0
 8024d36:	f2c0 810a 	blt.w	8024f4e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8024d3a:	45b8      	cmp	r8, r7
 8024d3c:	f340 8107 	ble.w	8024f4e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8024d40:	2900      	cmp	r1, #0
 8024d42:	f2c0 8102 	blt.w	8024f4a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8024d46:	458c      	cmp	ip, r1
 8024d48:	f340 80ff 	ble.w	8024f4a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8024d4c:	5c12      	ldrb	r2, [r2, r0]
 8024d4e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8024d52:	1c4a      	adds	r2, r1, #1
 8024d54:	f100 80fe 	bmi.w	8024f54 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8024d58:	4594      	cmp	ip, r2
 8024d5a:	f340 80fb 	ble.w	8024f54 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8024d5e:	2d00      	cmp	r5, #0
 8024d60:	f000 80fa 	beq.w	8024f58 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8024d64:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8024d68:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8024d6c:	3701      	adds	r7, #1
 8024d6e:	f100 80f7 	bmi.w	8024f60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8024d72:	45b8      	cmp	r8, r7
 8024d74:	f340 80f4 	ble.w	8024f60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8024d78:	2c00      	cmp	r4, #0
 8024d7a:	f000 80f4 	beq.w	8024f66 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8024d7e:	2900      	cmp	r1, #0
 8024d80:	eb0e 020c 	add.w	r2, lr, ip
 8024d84:	f2c0 80ea 	blt.w	8024f5c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8024d88:	458c      	cmp	ip, r1
 8024d8a:	f340 80e7 	ble.w	8024f5c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8024d8e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8024d92:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8024d96:	3101      	adds	r1, #1
 8024d98:	f100 80e8 	bmi.w	8024f6c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8024d9c:	458c      	cmp	ip, r1
 8024d9e:	f340 80e5 	ble.w	8024f6c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8024da2:	2d00      	cmp	r5, #0
 8024da4:	f000 80e4 	beq.w	8024f70 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8024da8:	7852      	ldrb	r2, [r2, #1]
 8024daa:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8024dae:	0e0b      	lsrs	r3, r1, #24
 8024db0:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8024db4:	9300      	str	r3, [sp, #0]
 8024db6:	b2a4      	uxth	r4, r4
 8024db8:	b2ab      	uxth	r3, r5
 8024dba:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8024dbe:	fb03 f904 	mul.w	r9, r3, r4
 8024dc2:	fb0a f505 	mul.w	r5, sl, r5
 8024dc6:	011b      	lsls	r3, r3, #4
 8024dc8:	eba3 0e09 	sub.w	lr, r3, r9
 8024dcc:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8024dd0:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8024dd4:	0a28      	lsrs	r0, r5, #8
 8024dd6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8024dda:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8024dde:	4405      	add	r5, r0
 8024de0:	0a2d      	lsrs	r5, r5, #8
 8024de2:	fb0a f303 	mul.w	r3, sl, r3
 8024de6:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8024dea:	9005      	str	r0, [sp, #20]
 8024dec:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8024df0:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8024df4:	0a1b      	lsrs	r3, r3, #8
 8024df6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8024dfa:	9306      	str	r3, [sp, #24]
 8024dfc:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8024e00:	fb0b f303 	mul.w	r3, fp, r3
 8024e04:	0a1d      	lsrs	r5, r3, #8
 8024e06:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8024e0a:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8024e0e:	fb0b f606 	mul.w	r6, fp, r6
 8024e12:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8024e16:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8024e1a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024e1e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024e22:	fb08 f707 	mul.w	r7, r8, r7
 8024e26:	441d      	add	r5, r3
 8024e28:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8024e2c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8024e30:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8024e34:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8024e38:	fb08 fc0c 	mul.w	ip, r8, ip
 8024e3c:	0a1b      	lsrs	r3, r3, #8
 8024e3e:	9307      	str	r3, [sp, #28]
 8024e40:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8024e44:	0e0b      	lsrs	r3, r1, #24
 8024e46:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8024e4a:	435f      	muls	r7, r3
 8024e4c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024e50:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8024e54:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8024e58:	4460      	add	r0, ip
 8024e5a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024e5e:	b2a4      	uxth	r4, r4
 8024e60:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024e64:	0a2d      	lsrs	r5, r5, #8
 8024e66:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024e6a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e6e:	fa1f fe8e 	uxth.w	lr, lr
 8024e72:	4359      	muls	r1, r3
 8024e74:	1b12      	subs	r2, r2, r4
 8024e76:	9b05      	ldr	r3, [sp, #20]
 8024e78:	44bc      	add	ip, r7
 8024e7a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024e7e:	b292      	uxth	r2, r2
 8024e80:	fb05 f50e 	mul.w	r5, r5, lr
 8024e84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024e88:	fb03 5502 	mla	r5, r3, r2, r5
 8024e8c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e90:	9b06      	ldr	r3, [sp, #24]
 8024e92:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8024e96:	0a36      	lsrs	r6, r6, #8
 8024e98:	0a00      	lsrs	r0, r0, #8
 8024e9a:	fb0c 5509 	mla	r5, ip, r9, r5
 8024e9e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8024ea2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8024ea6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8024eaa:	fb00 5504 	mla	r5, r0, r4, r5
 8024eae:	fb0e f606 	mul.w	r6, lr, r6
 8024eb2:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8024eb6:	0a09      	lsrs	r1, r1, #8
 8024eb8:	9b07      	ldr	r3, [sp, #28]
 8024eba:	fb02 6000 	mla	r0, r2, r0, r6
 8024ebe:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024ec2:	fb09 0001 	mla	r0, r9, r1, r0
 8024ec6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024eca:	fb0e fe0b 	mul.w	lr, lr, fp
 8024ece:	fb04 0003 	mla	r0, r4, r3, r0
 8024ed2:	fb02 e20a 	mla	r2, r2, sl, lr
 8024ed6:	9b00      	ldr	r3, [sp, #0]
 8024ed8:	fb04 2408 	mla	r4, r4, r8, r2
 8024edc:	fb09 4903 	mla	r9, r9, r3, r4
 8024ee0:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8024ee4:	9b02      	ldr	r3, [sp, #8]
 8024ee6:	9a04      	ldr	r2, [sp, #16]
 8024ee8:	fa5f f989 	uxtb.w	r9, r9
 8024eec:	fb03 f109 	mul.w	r1, r3, r9
 8024ef0:	9b03      	ldr	r3, [sp, #12]
 8024ef2:	0a2d      	lsrs	r5, r5, #8
 8024ef4:	0a00      	lsrs	r0, r0, #8
 8024ef6:	fb03 f309 	mul.w	r3, r3, r9
 8024efa:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8024efe:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024f02:	4305      	orrs	r5, r0
 8024f04:	fb02 f909 	mul.w	r9, r2, r9
 8024f08:	1c58      	adds	r0, r3, #1
 8024f0a:	1c4a      	adds	r2, r1, #1
 8024f0c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024f10:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024f14:	0a2b      	lsrs	r3, r5, #8
 8024f16:	0c2a      	lsrs	r2, r5, #16
 8024f18:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024f1c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8024f20:	00db      	lsls	r3, r3, #3
 8024f22:	0212      	lsls	r2, r2, #8
 8024f24:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024f28:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024f2c:	4313      	orrs	r3, r2
 8024f2e:	f109 0201 	add.w	r2, r9, #1
 8024f32:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8024f36:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8024f3a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8024f3e:	431d      	orrs	r5, r3
 8024f40:	9b01      	ldr	r3, [sp, #4]
 8024f42:	801d      	strh	r5, [r3, #0]
 8024f44:	b009      	add	sp, #36	; 0x24
 8024f46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024f4a:	2000      	movs	r0, #0
 8024f4c:	e701      	b.n	8024d52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8024f4e:	2600      	movs	r6, #0
 8024f50:	4630      	mov	r0, r6
 8024f52:	e70b      	b.n	8024d6c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024f54:	2600      	movs	r6, #0
 8024f56:	e709      	b.n	8024d6c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024f58:	462e      	mov	r6, r5
 8024f5a:	e707      	b.n	8024d6c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024f5c:	2700      	movs	r7, #0
 8024f5e:	e71a      	b.n	8024d96 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8024f60:	2100      	movs	r1, #0
 8024f62:	460f      	mov	r7, r1
 8024f64:	e723      	b.n	8024dae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8024f66:	4621      	mov	r1, r4
 8024f68:	4627      	mov	r7, r4
 8024f6a:	e720      	b.n	8024dae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8024f6c:	2100      	movs	r1, #0
 8024f6e:	e71e      	b.n	8024dae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8024f70:	4629      	mov	r1, r5
 8024f72:	e71c      	b.n	8024dae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08024f74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024f74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024f78:	b09b      	sub	sp, #108	; 0x6c
 8024f7a:	9218      	str	r2, [sp, #96]	; 0x60
 8024f7c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024f7e:	9116      	str	r1, [sp, #88]	; 0x58
 8024f80:	9307      	str	r3, [sp, #28]
 8024f82:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8024f86:	9019      	str	r0, [sp, #100]	; 0x64
 8024f88:	6850      	ldr	r0, [r2, #4]
 8024f8a:	6812      	ldr	r2, [r2, #0]
 8024f8c:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8024f8e:	fb00 1303 	mla	r3, r0, r3, r1
 8024f92:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024f96:	930a      	str	r3, [sp, #40]	; 0x28
 8024f98:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024f9a:	681b      	ldr	r3, [r3, #0]
 8024f9c:	930f      	str	r3, [sp, #60]	; 0x3c
 8024f9e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024fa0:	685e      	ldr	r6, [r3, #4]
 8024fa2:	3604      	adds	r6, #4
 8024fa4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024fa6:	2b00      	cmp	r3, #0
 8024fa8:	dc03      	bgt.n	8024fb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8024faa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024fac:	2b00      	cmp	r3, #0
 8024fae:	f340 8373 	ble.w	8025698 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8024fb2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024fb4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024fb8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024fbc:	1e48      	subs	r0, r1, #1
 8024fbe:	1e57      	subs	r7, r2, #1
 8024fc0:	9b07      	ldr	r3, [sp, #28]
 8024fc2:	2b00      	cmp	r3, #0
 8024fc4:	f340 8190 	ble.w	80252e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8024fc8:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024fca:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024fce:	ea4f 4325 	mov.w	r3, r5, asr #16
 8024fd2:	d406      	bmi.n	8024fe2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024fd4:	4584      	cmp	ip, r0
 8024fd6:	da04      	bge.n	8024fe2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024fd8:	2b00      	cmp	r3, #0
 8024fda:	db02      	blt.n	8024fe2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024fdc:	42bb      	cmp	r3, r7
 8024fde:	f2c0 8184 	blt.w	80252ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8024fe2:	f11c 0c01 	adds.w	ip, ip, #1
 8024fe6:	f100 8172 	bmi.w	80252ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024fea:	4561      	cmp	r1, ip
 8024fec:	f2c0 816f 	blt.w	80252ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024ff0:	3301      	adds	r3, #1
 8024ff2:	f100 816c 	bmi.w	80252ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024ff6:	429a      	cmp	r2, r3
 8024ff8:	f2c0 8169 	blt.w	80252ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024ffc:	9b07      	ldr	r3, [sp, #28]
 8024ffe:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8025000:	9317      	str	r3, [sp, #92]	; 0x5c
 8025002:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025004:	2b00      	cmp	r3, #0
 8025006:	f340 818e 	ble.w	8025326 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 802500a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 802500c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8025010:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025012:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8025016:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8025018:	141b      	asrs	r3, r3, #16
 802501a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 802501e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8025022:	f100 81d1 	bmi.w	80253c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8025026:	f101 38ff 	add.w	r8, r1, #4294967295
 802502a:	4543      	cmp	r3, r8
 802502c:	f280 81cc 	bge.w	80253c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8025030:	f1bc 0f00 	cmp.w	ip, #0
 8025034:	f2c0 81c8 	blt.w	80253c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8025038:	f10e 38ff 	add.w	r8, lr, #4294967295
 802503c:	45c4      	cmp	ip, r8
 802503e:	f280 81c3 	bge.w	80253c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8025042:	b209      	sxth	r1, r1
 8025044:	fb0c 3301 	mla	r3, ip, r1, r3
 8025048:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802504a:	eb04 0803 	add.w	r8, r4, r3
 802504e:	5ce3      	ldrb	r3, [r4, r3]
 8025050:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8025054:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8025058:	2a00      	cmp	r2, #0
 802505a:	f000 81aa 	beq.w	80253b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 802505e:	f898 c001 	ldrb.w	ip, [r8, #1]
 8025062:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8025066:	940b      	str	r4, [sp, #44]	; 0x2c
 8025068:	0e24      	lsrs	r4, r4, #24
 802506a:	9412      	str	r4, [sp, #72]	; 0x48
 802506c:	b178      	cbz	r0, 802508e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802506e:	eb08 0c01 	add.w	ip, r8, r1
 8025072:	f818 1001 	ldrb.w	r1, [r8, r1]
 8025076:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802507a:	9108      	str	r1, [sp, #32]
 802507c:	0e09      	lsrs	r1, r1, #24
 802507e:	9110      	str	r1, [sp, #64]	; 0x40
 8025080:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8025084:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8025088:	910c      	str	r1, [sp, #48]	; 0x30
 802508a:	0e09      	lsrs	r1, r1, #24
 802508c:	9113      	str	r1, [sp, #76]	; 0x4c
 802508e:	b292      	uxth	r2, r2
 8025090:	b280      	uxth	r0, r0
 8025092:	fb02 f900 	mul.w	r9, r2, r0
 8025096:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802509a:	0112      	lsls	r2, r2, #4
 802509c:	eba2 0809 	sub.w	r8, r2, r9
 80250a0:	b280      	uxth	r0, r0
 80250a2:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80250a6:	9912      	ldr	r1, [sp, #72]	; 0x48
 80250a8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80250aa:	fa1f f888 	uxth.w	r8, r8
 80250ae:	1a12      	subs	r2, r2, r0
 80250b0:	b292      	uxth	r2, r2
 80250b2:	fb08 f101 	mul.w	r1, r8, r1
 80250b6:	fb02 110e 	mla	r1, r2, lr, r1
 80250ba:	fb00 1104 	mla	r1, r0, r4, r1
 80250be:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80250c0:	fb09 1104 	mla	r1, r9, r4, r1
 80250c4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80250c8:	2900      	cmp	r1, #0
 80250ca:	f000 80f5 	beq.w	80252b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80250ce:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80250d2:	d01b      	beq.n	802510c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80250d4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80250d8:	fb0e fa0a 	mul.w	sl, lr, sl
 80250dc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80250e0:	fb0e fe03 	mul.w	lr, lr, r3
 80250e4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80250e8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80250ec:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80250f0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80250f4:	4453      	add	r3, sl
 80250f6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80250fa:	0a1b      	lsrs	r3, r3, #8
 80250fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025100:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025104:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025108:	ea43 030c 	orr.w	r3, r3, ip
 802510c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802510e:	2cff      	cmp	r4, #255	; 0xff
 8025110:	d021      	beq.n	8025156 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8025112:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025114:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8025118:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802511a:	fb04 fb0b 	mul.w	fp, r4, fp
 802511e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025120:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8025124:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8025126:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802512a:	fb04 fa0a 	mul.w	sl, r4, sl
 802512e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025132:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025136:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802513a:	44de      	add	lr, fp
 802513c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025140:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025144:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025148:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802514c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025150:	ea4e 040a 	orr.w	r4, lr, sl
 8025154:	940b      	str	r4, [sp, #44]	; 0x2c
 8025156:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8025158:	2cff      	cmp	r4, #255	; 0xff
 802515a:	d021      	beq.n	80251a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 802515c:	9c08      	ldr	r4, [sp, #32]
 802515e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8025162:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8025164:	fb04 fb0b 	mul.w	fp, r4, fp
 8025168:	9c08      	ldr	r4, [sp, #32]
 802516a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802516e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8025170:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025174:	fb04 fa0a 	mul.w	sl, r4, sl
 8025178:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802517c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025180:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025184:	44de      	add	lr, fp
 8025186:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802518a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802518e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025192:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025196:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802519a:	ea4e 040a 	orr.w	r4, lr, sl
 802519e:	9408      	str	r4, [sp, #32]
 80251a0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80251a2:	2cff      	cmp	r4, #255	; 0xff
 80251a4:	d021      	beq.n	80251ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80251a6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80251a8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80251ac:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80251ae:	fb04 fb0b 	mul.w	fp, r4, fp
 80251b2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80251b4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80251b8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80251ba:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80251be:	fb04 fa0a 	mul.w	sl, r4, sl
 80251c2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80251c6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80251ca:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80251ce:	44de      	add	lr, fp
 80251d0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80251d4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80251d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80251dc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80251e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80251e4:	ea4e 040a 	orr.w	r4, lr, sl
 80251e8:	940c      	str	r4, [sp, #48]	; 0x30
 80251ea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80251ec:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80251f0:	9c08      	ldr	r4, [sp, #32]
 80251f2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80251f6:	fb08 fc0c 	mul.w	ip, r8, ip
 80251fa:	fb02 cc0e 	mla	ip, r2, lr, ip
 80251fe:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8025202:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8025204:	fb00 cc0e 	mla	ip, r0, lr, ip
 8025208:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802520c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802520e:	fb09 cc0e 	mla	ip, r9, lr, ip
 8025212:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8025216:	fb08 f80e 	mul.w	r8, r8, lr
 802521a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802521e:	fb02 8303 	mla	r3, r2, r3, r8
 8025222:	9a08      	ldr	r2, [sp, #32]
 8025224:	f8b7 8000 	ldrh.w	r8, [r7]
 8025228:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802522c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802522e:	fb00 330a 	mla	r3, r0, sl, r3
 8025232:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8025236:	fb09 3900 	mla	r9, r9, r0, r3
 802523a:	43c9      	mvns	r1, r1
 802523c:	ea4f 2228 	mov.w	r2, r8, asr #8
 8025240:	fa5f fe81 	uxtb.w	lr, r1
 8025244:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025248:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802524c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8025250:	fb02 f20e 	mul.w	r2, r2, lr
 8025254:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025258:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802525c:	ea4c 0c09 	orr.w	ip, ip, r9
 8025260:	1c53      	adds	r3, r2, #1
 8025262:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8025266:	ea4f 00e8 	mov.w	r0, r8, asr #3
 802526a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 802526e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025272:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025276:	4a63      	ldr	r2, [pc, #396]	; (8025404 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8025278:	fb00 f00e 	mul.w	r0, r0, lr
 802527c:	b2db      	uxtb	r3, r3
 802527e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8025282:	1c43      	adds	r3, r0, #1
 8025284:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025288:	ea4f 231c 	mov.w	r3, ip, lsr #8
 802528c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8025290:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8025294:	b2c9      	uxtb	r1, r1
 8025296:	00db      	lsls	r3, r3, #3
 8025298:	fb01 f10e 	mul.w	r1, r1, lr
 802529c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80252a0:	4313      	orrs	r3, r2
 80252a2:	1c4a      	adds	r2, r1, #1
 80252a4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80252a8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80252ac:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80252b0:	ea4c 0c03 	orr.w	ip, ip, r3
 80252b4:	f8a7 c000 	strh.w	ip, [r7]
 80252b8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80252ba:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80252bc:	441a      	add	r2, r3
 80252be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80252c0:	9225      	str	r2, [sp, #148]	; 0x94
 80252c2:	441d      	add	r5, r3
 80252c4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80252c6:	3b01      	subs	r3, #1
 80252c8:	3702      	adds	r7, #2
 80252ca:	9317      	str	r3, [sp, #92]	; 0x5c
 80252cc:	e699      	b.n	8025002 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80252ce:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80252d0:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80252d2:	441c      	add	r4, r3
 80252d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80252d6:	9425      	str	r4, [sp, #148]	; 0x94
 80252d8:	441d      	add	r5, r3
 80252da:	9b07      	ldr	r3, [sp, #28]
 80252dc:	3b01      	subs	r3, #1
 80252de:	9307      	str	r3, [sp, #28]
 80252e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80252e2:	3302      	adds	r3, #2
 80252e4:	930a      	str	r3, [sp, #40]	; 0x28
 80252e6:	e66b      	b.n	8024fc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80252e8:	d024      	beq.n	8025334 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 80252ea:	9b07      	ldr	r3, [sp, #28]
 80252ec:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80252ee:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80252f0:	3b01      	subs	r3, #1
 80252f2:	fb00 4003 	mla	r0, r0, r3, r4
 80252f6:	1400      	asrs	r0, r0, #16
 80252f8:	f53f ae80 	bmi.w	8024ffc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80252fc:	3901      	subs	r1, #1
 80252fe:	4288      	cmp	r0, r1
 8025300:	f6bf ae7c 	bge.w	8024ffc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8025304:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8025306:	fb01 5303 	mla	r3, r1, r3, r5
 802530a:	141b      	asrs	r3, r3, #16
 802530c:	f53f ae76 	bmi.w	8024ffc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8025310:	3a01      	subs	r2, #1
 8025312:	4293      	cmp	r3, r2
 8025314:	f6bf ae72 	bge.w	8024ffc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8025318:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802531c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8025320:	f1bb 0f00 	cmp.w	fp, #0
 8025324:	dc70      	bgt.n	8025408 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8025326:	9b07      	ldr	r3, [sp, #28]
 8025328:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802532c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802532e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8025332:	930a      	str	r3, [sp, #40]	; 0x28
 8025334:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025336:	2b00      	cmp	r3, #0
 8025338:	f340 81ae 	ble.w	8025698 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 802533c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025340:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025344:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025348:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802534a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802534e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025352:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025356:	eef0 6a62 	vmov.f32	s13, s5
 802535a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802535e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025362:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025366:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 802536a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802536e:	eef0 6a43 	vmov.f32	s13, s6
 8025372:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025376:	ee12 2a90 	vmov	r2, s5
 802537a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802537e:	fb92 f3f3 	sdiv	r3, r2, r3
 8025382:	ee13 2a10 	vmov	r2, s6
 8025386:	9327      	str	r3, [sp, #156]	; 0x9c
 8025388:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802538a:	fb92 f3f3 	sdiv	r3, r2, r3
 802538e:	9328      	str	r3, [sp, #160]	; 0xa0
 8025390:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025392:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8025394:	3b01      	subs	r3, #1
 8025396:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802539a:	9316      	str	r3, [sp, #88]	; 0x58
 802539c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802539e:	bf08      	it	eq
 80253a0:	4613      	moveq	r3, r2
 80253a2:	ee16 5a90 	vmov	r5, s13
 80253a6:	9307      	str	r3, [sp, #28]
 80253a8:	eeb0 3a67 	vmov.f32	s6, s15
 80253ac:	eef0 2a47 	vmov.f32	s5, s14
 80253b0:	e5f8      	b.n	8024fa4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80253b2:	2800      	cmp	r0, #0
 80253b4:	f43f ae6b 	beq.w	802508e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80253b8:	f818 1001 	ldrb.w	r1, [r8, r1]
 80253bc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80253c0:	9108      	str	r1, [sp, #32]
 80253c2:	0e09      	lsrs	r1, r1, #24
 80253c4:	9110      	str	r1, [sp, #64]	; 0x40
 80253c6:	e662      	b.n	802508e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80253c8:	f113 0801 	adds.w	r8, r3, #1
 80253cc:	f53f af74 	bmi.w	80252b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80253d0:	4541      	cmp	r1, r8
 80253d2:	f6ff af71 	blt.w	80252b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80253d6:	f11c 0801 	adds.w	r8, ip, #1
 80253da:	f53f af6d 	bmi.w	80252b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80253de:	45c6      	cmp	lr, r8
 80253e0:	f6ff af6a 	blt.w	80252b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80253e4:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 80253e8:	b209      	sxth	r1, r1
 80253ea:	fa0f f38e 	sxth.w	r3, lr
 80253ee:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80253f2:	9301      	str	r3, [sp, #4]
 80253f4:	9100      	str	r1, [sp, #0]
 80253f6:	4633      	mov	r3, r6
 80253f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80253fa:	9819      	ldr	r0, [sp, #100]	; 0x64
 80253fc:	4639      	mov	r1, r7
 80253fe:	f7ff fc7a 	bl	8024cf6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8025402:	e759      	b.n	80252b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8025404:	fffff800 	.word	0xfffff800
 8025408:	9b25      	ldr	r3, [sp, #148]	; 0x94
 802540a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 802540c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8025410:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025412:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025416:	1427      	asrs	r7, r4, #16
 8025418:	142b      	asrs	r3, r5, #16
 802541a:	fb01 7303 	mla	r3, r1, r3, r7
 802541e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8025420:	18e7      	adds	r7, r4, r3
 8025422:	5ce3      	ldrb	r3, [r4, r3]
 8025424:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8025428:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802542c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8025430:	2a00      	cmp	r2, #0
 8025432:	f000 8127 	beq.w	8025684 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8025436:	f897 e001 	ldrb.w	lr, [r7, #1]
 802543a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802543e:	940d      	str	r4, [sp, #52]	; 0x34
 8025440:	0e24      	lsrs	r4, r4, #24
 8025442:	9414      	str	r4, [sp, #80]	; 0x50
 8025444:	b170      	cbz	r0, 8025464 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8025446:	eb07 0e01 	add.w	lr, r7, r1
 802544a:	5c79      	ldrb	r1, [r7, r1]
 802544c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8025450:	9109      	str	r1, [sp, #36]	; 0x24
 8025452:	0e09      	lsrs	r1, r1, #24
 8025454:	9111      	str	r1, [sp, #68]	; 0x44
 8025456:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802545a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802545e:	910e      	str	r1, [sp, #56]	; 0x38
 8025460:	0e09      	lsrs	r1, r1, #24
 8025462:	9115      	str	r1, [sp, #84]	; 0x54
 8025464:	b292      	uxth	r2, r2
 8025466:	b280      	uxth	r0, r0
 8025468:	fb02 f800 	mul.w	r8, r2, r0
 802546c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8025470:	0112      	lsls	r2, r2, #4
 8025472:	eba2 0e08 	sub.w	lr, r2, r8
 8025476:	b280      	uxth	r0, r0
 8025478:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 802547c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802547e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8025480:	fa1f fe8e 	uxth.w	lr, lr
 8025484:	1a09      	subs	r1, r1, r0
 8025486:	b289      	uxth	r1, r1
 8025488:	fb0e f202 	mul.w	r2, lr, r2
 802548c:	fb01 220c 	mla	r2, r1, ip, r2
 8025490:	fb00 2204 	mla	r2, r0, r4, r2
 8025494:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8025496:	fb08 2204 	mla	r2, r8, r4, r2
 802549a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802549e:	2a00      	cmp	r2, #0
 80254a0:	f000 80e5 	beq.w	802566e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 80254a4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80254a8:	d019      	beq.n	80254de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 80254aa:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80254ae:	fb0c fa0a 	mul.w	sl, ip, sl
 80254b2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80254b6:	fb0c fc03 	mul.w	ip, ip, r3
 80254ba:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80254be:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80254c2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80254c6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80254ca:	4453      	add	r3, sl
 80254cc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80254d0:	0a1b      	lsrs	r3, r3, #8
 80254d2:	0a3f      	lsrs	r7, r7, #8
 80254d4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80254d8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80254dc:	433b      	orrs	r3, r7
 80254de:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80254e0:	2cff      	cmp	r4, #255	; 0xff
 80254e2:	d020      	beq.n	8025526 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 80254e4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80254e6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80254ea:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80254ec:	4367      	muls	r7, r4
 80254ee:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80254f0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80254f4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80254f6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80254fa:	fb04 fa0a 	mul.w	sl, r4, sl
 80254fe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025502:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025506:	44bc      	add	ip, r7
 8025508:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802550c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025510:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025514:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025518:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802551c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025520:	ea4c 040a 	orr.w	r4, ip, sl
 8025524:	940d      	str	r4, [sp, #52]	; 0x34
 8025526:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8025528:	2cff      	cmp	r4, #255	; 0xff
 802552a:	d020      	beq.n	802556e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 802552c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802552e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8025532:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8025534:	4367      	muls	r7, r4
 8025536:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8025538:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802553c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802553e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025542:	fb04 fa0a 	mul.w	sl, r4, sl
 8025546:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802554a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802554e:	44bc      	add	ip, r7
 8025550:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025554:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025558:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802555c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025560:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025564:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025568:	ea4c 040a 	orr.w	r4, ip, sl
 802556c:	9409      	str	r4, [sp, #36]	; 0x24
 802556e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8025570:	2cff      	cmp	r4, #255	; 0xff
 8025572:	d020      	beq.n	80255b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8025574:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025576:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802557a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802557c:	4367      	muls	r7, r4
 802557e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025580:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8025584:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8025586:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802558a:	fb04 fa0a 	mul.w	sl, r4, sl
 802558e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025592:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025596:	44bc      	add	ip, r7
 8025598:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802559c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80255a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80255a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80255a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80255ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80255b0:	ea4c 040a 	orr.w	r4, ip, sl
 80255b4:	940e      	str	r4, [sp, #56]	; 0x38
 80255b6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80255b8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80255bc:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80255be:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80255c2:	fb0e f707 	mul.w	r7, lr, r7
 80255c6:	fb01 770c 	mla	r7, r1, ip, r7
 80255ca:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80255ce:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80255d0:	fb00 770c 	mla	r7, r0, ip, r7
 80255d4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80255d8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80255da:	fb08 770c 	mla	r7, r8, ip, r7
 80255de:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80255e2:	fb0e fe0c 	mul.w	lr, lr, ip
 80255e6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80255ea:	fb01 e303 	mla	r3, r1, r3, lr
 80255ee:	9909      	ldr	r1, [sp, #36]	; 0x24
 80255f0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80255f4:	990e      	ldr	r1, [sp, #56]	; 0x38
 80255f6:	fb00 330a 	mla	r3, r0, sl, r3
 80255fa:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80255fe:	fb08 3c0c 	mla	ip, r8, ip, r3
 8025602:	f8b9 3000 	ldrh.w	r3, [r9]
 8025606:	43d2      	mvns	r2, r2
 8025608:	1218      	asrs	r0, r3, #8
 802560a:	b2d2      	uxtb	r2, r2
 802560c:	10d9      	asrs	r1, r3, #3
 802560e:	0a3f      	lsrs	r7, r7, #8
 8025610:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025614:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025618:	00db      	lsls	r3, r3, #3
 802561a:	4350      	muls	r0, r2
 802561c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025620:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025624:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025628:	b2db      	uxtb	r3, r3
 802562a:	ea47 070c 	orr.w	r7, r7, ip
 802562e:	4351      	muls	r1, r2
 8025630:	4353      	muls	r3, r2
 8025632:	1c42      	adds	r2, r0, #1
 8025634:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025638:	0c3a      	lsrs	r2, r7, #16
 802563a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802563e:	4a18      	ldr	r2, [pc, #96]	; (80256a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8025640:	b2c0      	uxtb	r0, r0
 8025642:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8025646:	1c4a      	adds	r2, r1, #1
 8025648:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802564c:	0a3a      	lsrs	r2, r7, #8
 802564e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025652:	00c9      	lsls	r1, r1, #3
 8025654:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025658:	4301      	orrs	r1, r0
 802565a:	1c58      	adds	r0, r3, #1
 802565c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025660:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8025664:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8025668:	4308      	orrs	r0, r1
 802566a:	f8a9 0000 	strh.w	r0, [r9]
 802566e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025670:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8025672:	441a      	add	r2, r3
 8025674:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025676:	9225      	str	r2, [sp, #148]	; 0x94
 8025678:	f109 0902 	add.w	r9, r9, #2
 802567c:	441d      	add	r5, r3
 802567e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025682:	e64d      	b.n	8025320 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8025684:	2800      	cmp	r0, #0
 8025686:	f43f aeed 	beq.w	8025464 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802568a:	5c79      	ldrb	r1, [r7, r1]
 802568c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8025690:	9109      	str	r1, [sp, #36]	; 0x24
 8025692:	0e09      	lsrs	r1, r1, #24
 8025694:	9111      	str	r1, [sp, #68]	; 0x44
 8025696:	e6e5      	b.n	8025464 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8025698:	b01b      	add	sp, #108	; 0x6c
 802569a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802569e:	bf00      	nop
 80256a0:	fffff800 	.word	0xfffff800

080256a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80256a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80256a8:	b085      	sub	sp, #20
 80256aa:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80256ae:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80256b2:	9103      	str	r1, [sp, #12]
 80256b4:	fb00 7406 	mla	r4, r0, r6, r7
 80256b8:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 80256bc:	2800      	cmp	r0, #0
 80256be:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80256c2:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80256c6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80256ca:	9501      	str	r5, [sp, #4]
 80256cc:	eb03 0904 	add.w	r9, r3, r4
 80256d0:	f2c0 8150 	blt.w	8025974 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80256d4:	4583      	cmp	fp, r0
 80256d6:	f340 814d 	ble.w	8025974 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80256da:	2f00      	cmp	r7, #0
 80256dc:	f2c0 8146 	blt.w	802596c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80256e0:	42be      	cmp	r6, r7
 80256e2:	f340 8143 	ble.w	802596c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80256e6:	f813 c004 	ldrb.w	ip, [r3, r4]
 80256ea:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 80256ee:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80256f2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80256f6:	4355      	muls	r5, r2
 80256f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80256fc:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8025700:	fb0c f203 	mul.w	r2, ip, r3
 8025704:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8025708:	f605 0501 	addw	r5, r5, #2049	; 0x801
 802570c:	441d      	add	r5, r3
 802570e:	f102 0320 	add.w	r3, r2, #32
 8025712:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025716:	0a1b      	lsrs	r3, r3, #8
 8025718:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 802571c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025720:	431c      	orrs	r4, r3
 8025722:	1c7b      	adds	r3, r7, #1
 8025724:	f100 812b 	bmi.w	802597e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8025728:	429e      	cmp	r6, r3
 802572a:	f340 8128 	ble.w	802597e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 802572e:	2900      	cmp	r1, #0
 8025730:	f000 8128 	beq.w	8025984 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8025734:	9a01      	ldr	r2, [sp, #4]
 8025736:	f899 3001 	ldrb.w	r3, [r9, #1]
 802573a:	8855      	ldrh	r5, [r2, #2]
 802573c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8025740:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8025744:	fb08 f802 	mul.w	r8, r8, r2
 8025748:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802574c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8025750:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8025754:	435d      	muls	r5, r3
 8025756:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802575a:	44d0      	add	r8, sl
 802575c:	f105 0a20 	add.w	sl, r5, #32
 8025760:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8025764:	0a2d      	lsrs	r5, r5, #8
 8025766:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802576a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802576e:	432a      	orrs	r2, r5
 8025770:	3001      	adds	r0, #1
 8025772:	f100 810d 	bmi.w	8025990 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8025776:	4583      	cmp	fp, r0
 8025778:	f340 810a 	ble.w	8025990 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802577c:	f1be 0f00 	cmp.w	lr, #0
 8025780:	f000 810b 	beq.w	802599a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8025784:	2f00      	cmp	r7, #0
 8025786:	f2c0 8100 	blt.w	802598a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 802578a:	42be      	cmp	r6, r7
 802578c:	f340 80fd 	ble.w	802598a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8025790:	9801      	ldr	r0, [sp, #4]
 8025792:	f819 5006 	ldrb.w	r5, [r9, r6]
 8025796:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802579a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 802579e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80257a2:	fb0a fa00 	mul.w	sl, sl, r0
 80257a6:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80257aa:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80257ae:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80257b2:	fb05 f808 	mul.w	r8, r5, r8
 80257b6:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80257ba:	4482      	add	sl, r0
 80257bc:	f108 0020 	add.w	r0, r8, #32
 80257c0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80257c4:	0a00      	lsrs	r0, r0, #8
 80257c6:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80257ca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80257ce:	ea4b 0b00 	orr.w	fp, fp, r0
 80257d2:	3701      	adds	r7, #1
 80257d4:	f100 80e6 	bmi.w	80259a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80257d8:	42be      	cmp	r6, r7
 80257da:	f340 80e3 	ble.w	80259a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80257de:	2900      	cmp	r1, #0
 80257e0:	f000 80e3 	beq.w	80259aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 80257e4:	3601      	adds	r6, #1
 80257e6:	9801      	ldr	r0, [sp, #4]
 80257e8:	f819 7006 	ldrb.w	r7, [r9, r6]
 80257ec:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80257f0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80257f4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80257f8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80257fc:	fb09 f906 	mul.w	r9, r9, r6
 8025800:	fb07 f800 	mul.w	r8, r7, r0
 8025804:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8025808:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 802580c:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8025810:	44d1      	add	r9, sl
 8025812:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8025816:	f108 0020 	add.w	r0, r8, #32
 802581a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802581e:	0a00      	lsrs	r0, r0, #8
 8025820:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025824:	4330      	orrs	r0, r6
 8025826:	b28e      	uxth	r6, r1
 8025828:	fa1f f98e 	uxth.w	r9, lr
 802582c:	fb06 f809 	mul.w	r8, r6, r9
 8025830:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8025834:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8025838:	0136      	lsls	r6, r6, #4
 802583a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802583e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8025842:	9601      	str	r6, [sp, #4]
 8025844:	ea4a 0404 	orr.w	r4, sl, r4
 8025848:	fa1f f689 	uxth.w	r6, r9
 802584c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025850:	fb11 f90e 	smulbb	r9, r1, lr
 8025854:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8025858:	9602      	str	r6, [sp, #8]
 802585a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802585e:	4626      	mov	r6, r4
 8025860:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025864:	f1ce 0410 	rsb	r4, lr, #16
 8025868:	1a64      	subs	r4, r4, r1
 802586a:	ea4a 0202 	orr.w	r2, sl, r2
 802586e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8025872:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025876:	434a      	muls	r2, r1
 8025878:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 802587c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025880:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025884:	fb04 2406 	mla	r4, r4, r6, r2
 8025888:	ea4a 0000 	orr.w	r0, sl, r0
 802588c:	fb09 4200 	mla	r2, r9, r0, r4
 8025890:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8025894:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8025898:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 802589c:	ea44 0b0b 	orr.w	fp, r4, fp
 80258a0:	9c01      	ldr	r4, [sp, #4]
 80258a2:	9e02      	ldr	r6, [sp, #8]
 80258a4:	9903      	ldr	r1, [sp, #12]
 80258a6:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80258aa:	1ba4      	subs	r4, r4, r6
 80258ac:	9e01      	ldr	r6, [sp, #4]
 80258ae:	8808      	ldrh	r0, [r1, #0]
 80258b0:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80258b4:	eba6 0608 	sub.w	r6, r6, r8
 80258b8:	b2b6      	uxth	r6, r6
 80258ba:	b2a4      	uxth	r4, r4
 80258bc:	4373      	muls	r3, r6
 80258be:	fb0c 3304 	mla	r3, ip, r4, r3
 80258c2:	9c02      	ldr	r4, [sp, #8]
 80258c4:	fb04 3505 	mla	r5, r4, r5, r3
 80258c8:	fb08 5707 	mla	r7, r8, r7, r5
 80258cc:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80258d0:	b289      	uxth	r1, r1
 80258d2:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80258d6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80258da:	434f      	muls	r7, r1
 80258dc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80258e0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80258e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80258e8:	1c7b      	adds	r3, r7, #1
 80258ea:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80258ee:	ea42 0e0e 	orr.w	lr, r2, lr
 80258f2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80258f6:	fa1f f28e 	uxth.w	r2, lr
 80258fa:	1203      	asrs	r3, r0, #8
 80258fc:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8025900:	b2ff      	uxtb	r7, r7
 8025902:	1215      	asrs	r5, r2, #8
 8025904:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025908:	fb13 f307 	smulbb	r3, r3, r7
 802590c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025910:	fb05 3501 	mla	r5, r5, r1, r3
 8025914:	10c3      	asrs	r3, r0, #3
 8025916:	10d4      	asrs	r4, r2, #3
 8025918:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802591c:	fb13 f307 	smulbb	r3, r3, r7
 8025920:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8025924:	fb04 3401 	mla	r4, r4, r1, r3
 8025928:	00c3      	lsls	r3, r0, #3
 802592a:	00d2      	lsls	r2, r2, #3
 802592c:	b2db      	uxtb	r3, r3
 802592e:	fb13 f307 	smulbb	r3, r3, r7
 8025932:	b2d2      	uxtb	r2, r2
 8025934:	fb02 3101 	mla	r1, r2, r1, r3
 8025938:	b2ad      	uxth	r5, r5
 802593a:	b289      	uxth	r1, r1
 802593c:	b2a4      	uxth	r4, r4
 802593e:	1c6b      	adds	r3, r5, #1
 8025940:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025944:	1c62      	adds	r2, r4, #1
 8025946:	1c4b      	adds	r3, r1, #1
 8025948:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802594c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025950:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025954:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025958:	0964      	lsrs	r4, r4, #5
 802595a:	432b      	orrs	r3, r5
 802595c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025960:	9a03      	ldr	r2, [sp, #12]
 8025962:	4323      	orrs	r3, r4
 8025964:	8013      	strh	r3, [r2, #0]
 8025966:	b005      	add	sp, #20
 8025968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802596c:	f04f 0c00 	mov.w	ip, #0
 8025970:	4664      	mov	r4, ip
 8025972:	e6d6      	b.n	8025722 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8025974:	2300      	movs	r3, #0
 8025976:	469c      	mov	ip, r3
 8025978:	461a      	mov	r2, r3
 802597a:	461c      	mov	r4, r3
 802597c:	e6f8      	b.n	8025770 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802597e:	2300      	movs	r3, #0
 8025980:	461a      	mov	r2, r3
 8025982:	e6f5      	b.n	8025770 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8025984:	460b      	mov	r3, r1
 8025986:	460a      	mov	r2, r1
 8025988:	e6f2      	b.n	8025770 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802598a:	2500      	movs	r5, #0
 802598c:	46ab      	mov	fp, r5
 802598e:	e720      	b.n	80257d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8025990:	2700      	movs	r7, #0
 8025992:	463d      	mov	r5, r7
 8025994:	4638      	mov	r0, r7
 8025996:	46bb      	mov	fp, r7
 8025998:	e745      	b.n	8025826 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802599a:	4677      	mov	r7, lr
 802599c:	4675      	mov	r5, lr
 802599e:	4670      	mov	r0, lr
 80259a0:	46f3      	mov	fp, lr
 80259a2:	e740      	b.n	8025826 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80259a4:	2700      	movs	r7, #0
 80259a6:	4638      	mov	r0, r7
 80259a8:	e73d      	b.n	8025826 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80259aa:	460f      	mov	r7, r1
 80259ac:	4608      	mov	r0, r1
 80259ae:	e73a      	b.n	8025826 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080259b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80259b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80259b4:	b097      	sub	sp, #92	; 0x5c
 80259b6:	9214      	str	r2, [sp, #80]	; 0x50
 80259b8:	9308      	str	r3, [sp, #32]
 80259ba:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80259bc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80259c0:	9312      	str	r3, [sp, #72]	; 0x48
 80259c2:	9111      	str	r1, [sp, #68]	; 0x44
 80259c4:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80259c8:	9015      	str	r0, [sp, #84]	; 0x54
 80259ca:	6850      	ldr	r0, [r2, #4]
 80259cc:	6812      	ldr	r2, [r2, #0]
 80259ce:	fb00 1303 	mla	r3, r0, r3, r1
 80259d2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80259d6:	9309      	str	r3, [sp, #36]	; 0x24
 80259d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80259da:	681b      	ldr	r3, [r3, #0]
 80259dc:	930b      	str	r3, [sp, #44]	; 0x2c
 80259de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80259e0:	685b      	ldr	r3, [r3, #4]
 80259e2:	930c      	str	r3, [sp, #48]	; 0x30
 80259e4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80259e8:	930a      	str	r3, [sp, #40]	; 0x28
 80259ea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80259ec:	2b00      	cmp	r3, #0
 80259ee:	dc03      	bgt.n	80259f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80259f0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80259f2:	2b00      	cmp	r3, #0
 80259f4:	f340 83cb 	ble.w	802618e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80259f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80259fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80259fe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025a02:	1e48      	subs	r0, r1, #1
 8025a04:	1e55      	subs	r5, r2, #1
 8025a06:	9b08      	ldr	r3, [sp, #32]
 8025a08:	2b00      	cmp	r3, #0
 8025a0a:	f340 81a3 	ble.w	8025d54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8025a0e:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8025a10:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025a12:	1436      	asrs	r6, r6, #16
 8025a14:	ea4f 4323 	mov.w	r3, r3, asr #16
 8025a18:	d406      	bmi.n	8025a28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025a1a:	4286      	cmp	r6, r0
 8025a1c:	da04      	bge.n	8025a28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025a1e:	2b00      	cmp	r3, #0
 8025a20:	db02      	blt.n	8025a28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025a22:	42ab      	cmp	r3, r5
 8025a24:	f2c0 8197 	blt.w	8025d56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8025a28:	3601      	adds	r6, #1
 8025a2a:	f100 8184 	bmi.w	8025d36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025a2e:	42b1      	cmp	r1, r6
 8025a30:	f2c0 8181 	blt.w	8025d36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025a34:	3301      	adds	r3, #1
 8025a36:	f100 817e 	bmi.w	8025d36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025a3a:	429a      	cmp	r2, r3
 8025a3c:	f2c0 817b 	blt.w	8025d36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025a40:	9b08      	ldr	r3, [sp, #32]
 8025a42:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8025a44:	9313      	str	r3, [sp, #76]	; 0x4c
 8025a46:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025a4a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025a4c:	2b00      	cmp	r3, #0
 8025a4e:	f340 81a4 	ble.w	8025d9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8025a52:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025a54:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8025a56:	1418      	asrs	r0, r3, #16
 8025a58:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025a5a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8025a5e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025a60:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8025a64:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025a66:	142d      	asrs	r5, r5, #16
 8025a68:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8025a6c:	f100 81f8 	bmi.w	8025e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025a70:	f102 3eff 	add.w	lr, r2, #4294967295
 8025a74:	4575      	cmp	r5, lr
 8025a76:	f280 81f3 	bge.w	8025e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025a7a:	2800      	cmp	r0, #0
 8025a7c:	f2c0 81f0 	blt.w	8025e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025a80:	f103 3eff 	add.w	lr, r3, #4294967295
 8025a84:	4570      	cmp	r0, lr
 8025a86:	f280 81eb 	bge.w	8025e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025a8a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025a8c:	b212      	sxth	r2, r2
 8025a8e:	fb00 5002 	mla	r0, r0, r2, r5
 8025a92:	fa1f fe81 	uxth.w	lr, r1
 8025a96:	eb03 0a00 	add.w	sl, r3, r0
 8025a9a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8025a9e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8025aa2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8025aa6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8025aaa:	b29b      	uxth	r3, r3
 8025aac:	f1bc 0f00 	cmp.w	ip, #0
 8025ab0:	f000 81b9 	beq.w	8025e26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8025ab4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8025ab8:	940d      	str	r4, [sp, #52]	; 0x34
 8025aba:	eb0a 0b02 	add.w	fp, sl, r2
 8025abe:	fa1f fa8c 	uxth.w	sl, ip
 8025ac2:	fb0a fe0e 	mul.w	lr, sl, lr
 8025ac6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8025aca:	fa1f fa8a 	uxth.w	sl, sl
 8025ace:	eba5 050e 	sub.w	r5, r5, lr
 8025ad2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8025ad6:	940e      	str	r4, [sp, #56]	; 0x38
 8025ad8:	eba3 030a 	sub.w	r3, r3, sl
 8025adc:	b2ad      	uxth	r5, r5
 8025ade:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8025ae0:	b29b      	uxth	r3, r3
 8025ae2:	fb08 f505 	mul.w	r5, r8, r5
 8025ae6:	fb09 5303 	mla	r3, r9, r3, r5
 8025aea:	fb0a 3304 	mla	r3, sl, r4, r3
 8025aee:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025af0:	fb0e 3304 	mla	r3, lr, r4, r3
 8025af4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025af8:	2b00      	cmp	r3, #0
 8025afa:	f000 810f 	beq.w	8025d1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025afe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025b00:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025b04:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8025b08:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8025b0c:	f000 8190 	beq.w	8025e30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8025b10:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8025b14:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025b18:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025b1c:	fb09 f000 	mul.w	r0, r9, r0
 8025b20:	fb0a fe0e 	mul.w	lr, sl, lr
 8025b24:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8025b28:	f100 0b20 	add.w	fp, r0, #32
 8025b2c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025b30:	44ce      	add	lr, r9
 8025b32:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8025b36:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025b3a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025b3e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8025b42:	ea4e 0909 	orr.w	r9, lr, r9
 8025b46:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025b4a:	8868      	ldrh	r0, [r5, #2]
 8025b4c:	d019      	beq.n	8025b82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8025b4e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8025b52:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025b56:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025b5a:	fb08 f800 	mul.w	r8, r8, r0
 8025b5e:	fb0a fe0e 	mul.w	lr, sl, lr
 8025b62:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8025b66:	f108 0b20 	add.w	fp, r8, #32
 8025b6a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025b6e:	4486      	add	lr, r0
 8025b70:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8025b74:	0a00      	lsrs	r0, r0, #8
 8025b76:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025b7a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025b7e:	ea4e 0000 	orr.w	r0, lr, r0
 8025b82:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8025b86:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025b8a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8025b8e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025b92:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025b96:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025b9a:	ea4e 0909 	orr.w	r9, lr, r9
 8025b9e:	ea4a 0000 	orr.w	r0, sl, r0
 8025ba2:	f1bc 0f00 	cmp.w	ip, #0
 8025ba6:	f000 8145 	beq.w	8025e34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8025baa:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8025bae:	3a01      	subs	r2, #1
 8025bb0:	0052      	lsls	r2, r2, #1
 8025bb2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8025bb4:	3202      	adds	r2, #2
 8025bb6:	2cff      	cmp	r4, #255	; 0xff
 8025bb8:	eb05 0e02 	add.w	lr, r5, r2
 8025bbc:	5aaa      	ldrh	r2, [r5, r2]
 8025bbe:	d018      	beq.n	8025bf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8025bc0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8025bc4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025bc8:	fb04 fa02 	mul.w	sl, r4, r2
 8025bcc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025bd0:	fb08 f805 	mul.w	r8, r8, r5
 8025bd4:	f10a 0520 	add.w	r5, sl, #32
 8025bd8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8025bdc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8025be0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025be4:	4442      	add	r2, r8
 8025be6:	0a2d      	lsrs	r5, r5, #8
 8025be8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8025bec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025bf0:	432a      	orrs	r2, r5
 8025bf2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025bf4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8025bf8:	2cff      	cmp	r4, #255	; 0xff
 8025bfa:	d01a      	beq.n	8025c32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8025bfc:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8025c00:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025c04:	fb04 fa05 	mul.w	sl, r4, r5
 8025c08:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025c0c:	fb08 f80e 	mul.w	r8, r8, lr
 8025c10:	f10a 0e20 	add.w	lr, sl, #32
 8025c14:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8025c18:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8025c1c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025c20:	4445      	add	r5, r8
 8025c22:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025c26:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8025c2a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8025c2e:	ea45 050e 	orr.w	r5, r5, lr
 8025c32:	fb1c fe01 	smulbb	lr, ip, r1
 8025c36:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8025c3a:	f1cc 0810 	rsb	r8, ip, #16
 8025c3e:	eba8 0801 	sub.w	r8, r8, r1
 8025c42:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025c46:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8025c4a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8025c4e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8025c52:	4341      	muls	r1, r0
 8025c54:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025c58:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025c5c:	ea4a 0202 	orr.w	r2, sl, r2
 8025c60:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8025c64:	fb09 1108 	mla	r1, r9, r8, r1
 8025c68:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025c6c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8025c70:	fb0c 1102 	mla	r1, ip, r2, r1
 8025c74:	ea4b 0505 	orr.w	r5, fp, r5
 8025c78:	fb0e 1e05 	mla	lr, lr, r5, r1
 8025c7c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025c80:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8025c84:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025c88:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025c8c:	ea42 0e0e 	orr.w	lr, r2, lr
 8025c90:	fa1f f28e 	uxth.w	r2, lr
 8025c94:	2bff      	cmp	r3, #255	; 0xff
 8025c96:	d103      	bne.n	8025ca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8025c98:	9912      	ldr	r1, [sp, #72]	; 0x48
 8025c9a:	29ff      	cmp	r1, #255	; 0xff
 8025c9c:	f000 80de 	beq.w	8025e5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8025ca0:	990a      	ldr	r1, [sp, #40]	; 0x28
 8025ca2:	8838      	ldrh	r0, [r7, #0]
 8025ca4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025ca6:	434b      	muls	r3, r1
 8025ca8:	f103 0c01 	add.w	ip, r3, #1
 8025cac:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8025cb0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8025cb4:	fa5f fc83 	uxtb.w	ip, r3
 8025cb8:	1203      	asrs	r3, r0, #8
 8025cba:	1215      	asrs	r5, r2, #8
 8025cbc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025cc0:	fb13 f30c 	smulbb	r3, r3, ip
 8025cc4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025cc8:	fb05 3501 	mla	r5, r5, r1, r3
 8025ccc:	10c3      	asrs	r3, r0, #3
 8025cce:	10d1      	asrs	r1, r2, #3
 8025cd0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025cd4:	fb13 f30c 	smulbb	r3, r3, ip
 8025cd8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025cdc:	fb01 3104 	mla	r1, r1, r4, r3
 8025ce0:	00c3      	lsls	r3, r0, #3
 8025ce2:	00d2      	lsls	r2, r2, #3
 8025ce4:	b2db      	uxtb	r3, r3
 8025ce6:	b2d2      	uxtb	r2, r2
 8025ce8:	fb13 f30c 	smulbb	r3, r3, ip
 8025cec:	b2ad      	uxth	r5, r5
 8025cee:	fb02 3304 	mla	r3, r2, r4, r3
 8025cf2:	b29a      	uxth	r2, r3
 8025cf4:	1c6b      	adds	r3, r5, #1
 8025cf6:	b289      	uxth	r1, r1
 8025cf8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025cfc:	1c53      	adds	r3, r2, #1
 8025cfe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025d02:	1c4a      	adds	r2, r1, #1
 8025d04:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025d08:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025d0c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025d10:	0949      	lsrs	r1, r1, #5
 8025d12:	432b      	orrs	r3, r5
 8025d14:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025d18:	430b      	orrs	r3, r1
 8025d1a:	803b      	strh	r3, [r7, #0]
 8025d1c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025d1e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8025d20:	4413      	add	r3, r2
 8025d22:	9321      	str	r3, [sp, #132]	; 0x84
 8025d24:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8025d26:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025d28:	441a      	add	r2, r3
 8025d2a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025d2c:	9222      	str	r2, [sp, #136]	; 0x88
 8025d2e:	3b01      	subs	r3, #1
 8025d30:	3702      	adds	r7, #2
 8025d32:	9313      	str	r3, [sp, #76]	; 0x4c
 8025d34:	e689      	b.n	8025a4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8025d36:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025d38:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8025d3a:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8025d3c:	4433      	add	r3, r6
 8025d3e:	9321      	str	r3, [sp, #132]	; 0x84
 8025d40:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025d42:	441c      	add	r4, r3
 8025d44:	9b08      	ldr	r3, [sp, #32]
 8025d46:	9422      	str	r4, [sp, #136]	; 0x88
 8025d48:	3b01      	subs	r3, #1
 8025d4a:	9308      	str	r3, [sp, #32]
 8025d4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025d4e:	3302      	adds	r3, #2
 8025d50:	9309      	str	r3, [sp, #36]	; 0x24
 8025d52:	e658      	b.n	8025a06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8025d54:	d028      	beq.n	8025da8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8025d56:	9b08      	ldr	r3, [sp, #32]
 8025d58:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025d5a:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8025d5c:	3b01      	subs	r3, #1
 8025d5e:	fb00 5003 	mla	r0, r0, r3, r5
 8025d62:	1400      	asrs	r0, r0, #16
 8025d64:	f53f ae6c 	bmi.w	8025a40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025d68:	3901      	subs	r1, #1
 8025d6a:	4288      	cmp	r0, r1
 8025d6c:	f6bf ae68 	bge.w	8025a40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025d70:	9924      	ldr	r1, [sp, #144]	; 0x90
 8025d72:	9822      	ldr	r0, [sp, #136]	; 0x88
 8025d74:	fb01 0303 	mla	r3, r1, r3, r0
 8025d78:	141b      	asrs	r3, r3, #16
 8025d7a:	f53f ae61 	bmi.w	8025a40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025d7e:	3a01      	subs	r2, #1
 8025d80:	4293      	cmp	r3, r2
 8025d82:	f6bf ae5d 	bge.w	8025a40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025d86:	9b08      	ldr	r3, [sp, #32]
 8025d88:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8025d8c:	9313      	str	r3, [sp, #76]	; 0x4c
 8025d8e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025d92:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025d94:	2b00      	cmp	r3, #0
 8025d96:	f300 8082 	bgt.w	8025e9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8025d9a:	9b08      	ldr	r3, [sp, #32]
 8025d9c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8025da0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025da2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8025da6:	9309      	str	r3, [sp, #36]	; 0x24
 8025da8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8025daa:	2b00      	cmp	r3, #0
 8025dac:	f340 81ef 	ble.w	802618e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8025db0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025db4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025db8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025dbc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025dbe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025dc2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025dc6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025dca:	eef0 6a62 	vmov.f32	s13, s5
 8025dce:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025dd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025dd6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025dda:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8025dde:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025de2:	eef0 6a43 	vmov.f32	s13, s6
 8025de6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025dea:	ee12 2a90 	vmov	r2, s5
 8025dee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025df2:	fb92 f3f3 	sdiv	r3, r2, r3
 8025df6:	ee13 2a10 	vmov	r2, s6
 8025dfa:	9323      	str	r3, [sp, #140]	; 0x8c
 8025dfc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025dfe:	fb92 f3f3 	sdiv	r3, r2, r3
 8025e02:	9324      	str	r3, [sp, #144]	; 0x90
 8025e04:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8025e06:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025e08:	3b01      	subs	r3, #1
 8025e0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025e0e:	9311      	str	r3, [sp, #68]	; 0x44
 8025e10:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025e12:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8025e16:	bf08      	it	eq
 8025e18:	4613      	moveq	r3, r2
 8025e1a:	9308      	str	r3, [sp, #32]
 8025e1c:	eeb0 3a67 	vmov.f32	s6, s15
 8025e20:	eef0 2a47 	vmov.f32	s5, s14
 8025e24:	e5e1      	b.n	80259ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025e26:	fb08 f505 	mul.w	r5, r8, r5
 8025e2a:	fb09 5303 	mla	r3, r9, r3, r5
 8025e2e:	e661      	b.n	8025af4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8025e30:	4681      	mov	r9, r0
 8025e32:	e688      	b.n	8025b46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8025e34:	f1c1 0210 	rsb	r2, r1, #16
 8025e38:	4341      	muls	r1, r0
 8025e3a:	fb09 1902 	mla	r9, r9, r2, r1
 8025e3e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8025e42:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8025e46:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8025e4a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025e4e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025e52:	ea42 0909 	orr.w	r9, r2, r9
 8025e56:	fa1f f289 	uxth.w	r2, r9
 8025e5a:	e71b      	b.n	8025c94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8025e5c:	803a      	strh	r2, [r7, #0]
 8025e5e:	e75d      	b.n	8025d1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025e60:	f115 0e01 	adds.w	lr, r5, #1
 8025e64:	f53f af5a 	bmi.w	8025d1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025e68:	4572      	cmp	r2, lr
 8025e6a:	f6ff af57 	blt.w	8025d1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025e6e:	f110 0e01 	adds.w	lr, r0, #1
 8025e72:	f53f af53 	bmi.w	8025d1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025e76:	4573      	cmp	r3, lr
 8025e78:	f6ff af50 	blt.w	8025d1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025e7c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8025e7e:	9502      	str	r5, [sp, #8]
 8025e80:	b21b      	sxth	r3, r3
 8025e82:	b212      	sxth	r2, r2
 8025e84:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8025e88:	9301      	str	r3, [sp, #4]
 8025e8a:	9200      	str	r2, [sp, #0]
 8025e8c:	e9cd c405 	strd	ip, r4, [sp, #20]
 8025e90:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8025e94:	4639      	mov	r1, r7
 8025e96:	9815      	ldr	r0, [sp, #84]	; 0x54
 8025e98:	f7ff fc04 	bl	80256a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8025e9c:	e73e      	b.n	8025d1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025e9e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025ea0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8025ea4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025ea6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8025eaa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025eac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025eb0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025eb2:	141f      	asrs	r7, r3, #16
 8025eb4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025eb6:	141b      	asrs	r3, r3, #16
 8025eb8:	fb01 3707 	mla	r7, r1, r7, r3
 8025ebc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025ebe:	fa1f fc82 	uxth.w	ip, r2
 8025ec2:	eb03 0a07 	add.w	sl, r3, r7
 8025ec6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8025eca:	f813 9007 	ldrb.w	r9, [r3, r7]
 8025ece:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8025ed2:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8025ed6:	b29b      	uxth	r3, r3
 8025ed8:	2d00      	cmp	r5, #0
 8025eda:	f000 813d 	beq.w	8026158 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8025ede:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8025ee2:	940f      	str	r4, [sp, #60]	; 0x3c
 8025ee4:	eb0a 0b01 	add.w	fp, sl, r1
 8025ee8:	fa1f fa85 	uxth.w	sl, r5
 8025eec:	fb0a fc0c 	mul.w	ip, sl, ip
 8025ef0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8025ef4:	fa1f fa8a 	uxth.w	sl, sl
 8025ef8:	eba0 000c 	sub.w	r0, r0, ip
 8025efc:	eba3 030a 	sub.w	r3, r3, sl
 8025f00:	b280      	uxth	r0, r0
 8025f02:	fb08 f000 	mul.w	r0, r8, r0
 8025f06:	b29b      	uxth	r3, r3
 8025f08:	fb09 0303 	mla	r3, r9, r3, r0
 8025f0c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8025f0e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8025f12:	9410      	str	r4, [sp, #64]	; 0x40
 8025f14:	fb0a 3300 	mla	r3, sl, r0, r3
 8025f18:	fb0c 3304 	mla	r3, ip, r4, r3
 8025f1c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025f20:	2b00      	cmp	r3, #0
 8025f22:	f000 810b 	beq.w	802613c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8025f26:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8025f28:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025f2a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025f2e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8025f32:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8025f36:	f000 8114 	beq.w	8026162 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8025f3a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8025f3e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025f42:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025f46:	fb09 f707 	mul.w	r7, r9, r7
 8025f4a:	fb0a fc0c 	mul.w	ip, sl, ip
 8025f4e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8025f52:	f107 0b20 	add.w	fp, r7, #32
 8025f56:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8025f5a:	44cc      	add	ip, r9
 8025f5c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8025f60:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025f64:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8025f68:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8025f6c:	ea4c 0909 	orr.w	r9, ip, r9
 8025f70:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025f74:	8847      	ldrh	r7, [r0, #2]
 8025f76:	d019      	beq.n	8025fac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8025f78:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8025f7c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025f80:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025f84:	fb08 f807 	mul.w	r8, r8, r7
 8025f88:	fb0a fc0c 	mul.w	ip, sl, ip
 8025f8c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8025f90:	f108 0b20 	add.w	fp, r8, #32
 8025f94:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8025f98:	44bc      	add	ip, r7
 8025f9a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8025f9e:	0a3f      	lsrs	r7, r7, #8
 8025fa0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8025fa4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025fa8:	ea4c 0707 	orr.w	r7, ip, r7
 8025fac:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8025fb0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8025fb4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8025fb8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025fbc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025fc0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8025fc4:	ea4c 0909 	orr.w	r9, ip, r9
 8025fc8:	ea4a 0707 	orr.w	r7, sl, r7
 8025fcc:	2d00      	cmp	r5, #0
 8025fce:	f000 80ca 	beq.w	8026166 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8025fd2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8025fd6:	3901      	subs	r1, #1
 8025fd8:	0049      	lsls	r1, r1, #1
 8025fda:	3102      	adds	r1, #2
 8025fdc:	eb00 0c01 	add.w	ip, r0, r1
 8025fe0:	5a41      	ldrh	r1, [r0, r1]
 8025fe2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8025fe4:	28ff      	cmp	r0, #255	; 0xff
 8025fe6:	d019      	beq.n	802601c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8025fe8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8025fea:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8025fee:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025ff2:	fb04 fa01 	mul.w	sl, r4, r1
 8025ff6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025ffa:	fb08 f800 	mul.w	r8, r8, r0
 8025ffe:	f10a 0020 	add.w	r0, sl, #32
 8026002:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8026006:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802600a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802600e:	4441      	add	r1, r8
 8026010:	0a00      	lsrs	r0, r0, #8
 8026012:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8026016:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802601a:	4301      	orrs	r1, r0
 802601c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802601e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8026022:	2cff      	cmp	r4, #255	; 0xff
 8026024:	d01a      	beq.n	802605c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8026026:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802602a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802602e:	fb04 fa00 	mul.w	sl, r4, r0
 8026032:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8026036:	fb08 f80c 	mul.w	r8, r8, ip
 802603a:	f10a 0c20 	add.w	ip, sl, #32
 802603e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8026042:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8026046:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802604a:	4440      	add	r0, r8
 802604c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026050:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8026054:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026058:	ea40 000c 	orr.w	r0, r0, ip
 802605c:	fb15 fc02 	smulbb	ip, r5, r2
 8026060:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8026064:	f1c5 0810 	rsb	r8, r5, #16
 8026068:	eba8 0802 	sub.w	r8, r8, r2
 802606c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8026070:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8026074:	437a      	muls	r2, r7
 8026076:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802607a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802607e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026082:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026086:	fb09 2208 	mla	r2, r9, r8, r2
 802608a:	ea4a 0101 	orr.w	r1, sl, r1
 802608e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8026092:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026096:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802609a:	fb05 2201 	mla	r2, r5, r1, r2
 802609e:	ea4b 0000 	orr.w	r0, fp, r0
 80260a2:	fb0c 2200 	mla	r2, ip, r0, r2
 80260a6:	0d57      	lsrs	r7, r2, #21
 80260a8:	0952      	lsrs	r2, r2, #5
 80260aa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80260ae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80260b2:	433a      	orrs	r2, r7
 80260b4:	2bff      	cmp	r3, #255	; 0xff
 80260b6:	b292      	uxth	r2, r2
 80260b8:	d102      	bne.n	80260c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80260ba:	9912      	ldr	r1, [sp, #72]	; 0x48
 80260bc:	29ff      	cmp	r1, #255	; 0xff
 80260be:	d063      	beq.n	8026188 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 80260c0:	980a      	ldr	r0, [sp, #40]	; 0x28
 80260c2:	f8be 1000 	ldrh.w	r1, [lr]
 80260c6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80260c8:	4343      	muls	r3, r0
 80260ca:	1c58      	adds	r0, r3, #1
 80260cc:	eb00 2323 	add.w	r3, r0, r3, asr #8
 80260d0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80260d4:	1208      	asrs	r0, r1, #8
 80260d6:	b2db      	uxtb	r3, r3
 80260d8:	1215      	asrs	r5, r2, #8
 80260da:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80260de:	fb10 f003 	smulbb	r0, r0, r3
 80260e2:	10cf      	asrs	r7, r1, #3
 80260e4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80260e8:	00c9      	lsls	r1, r1, #3
 80260ea:	fb05 0504 	mla	r5, r5, r4, r0
 80260ee:	b2c9      	uxtb	r1, r1
 80260f0:	10d0      	asrs	r0, r2, #3
 80260f2:	00d2      	lsls	r2, r2, #3
 80260f4:	fb11 f103 	smulbb	r1, r1, r3
 80260f8:	b2d2      	uxtb	r2, r2
 80260fa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80260fe:	fb02 1204 	mla	r2, r2, r4, r1
 8026102:	fb17 f703 	smulbb	r7, r7, r3
 8026106:	b2ad      	uxth	r5, r5
 8026108:	b292      	uxth	r2, r2
 802610a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802610e:	fb00 7004 	mla	r0, r0, r4, r7
 8026112:	1c6b      	adds	r3, r5, #1
 8026114:	1c57      	adds	r7, r2, #1
 8026116:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802611a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802611e:	b280      	uxth	r0, r0
 8026120:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8026124:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8026128:	433d      	orrs	r5, r7
 802612a:	1c47      	adds	r7, r0, #1
 802612c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8026130:	097f      	lsrs	r7, r7, #5
 8026132:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026136:	433d      	orrs	r5, r7
 8026138:	f8ae 5000 	strh.w	r5, [lr]
 802613c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802613e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8026140:	4413      	add	r3, r2
 8026142:	9321      	str	r3, [sp, #132]	; 0x84
 8026144:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8026146:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026148:	441a      	add	r2, r3
 802614a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802614c:	9222      	str	r2, [sp, #136]	; 0x88
 802614e:	3b01      	subs	r3, #1
 8026150:	f10e 0e02 	add.w	lr, lr, #2
 8026154:	9313      	str	r3, [sp, #76]	; 0x4c
 8026156:	e61c      	b.n	8025d92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8026158:	fb08 f000 	mul.w	r0, r8, r0
 802615c:	fb09 0303 	mla	r3, r9, r3, r0
 8026160:	e6dc      	b.n	8025f1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8026162:	46b9      	mov	r9, r7
 8026164:	e704      	b.n	8025f70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8026166:	f1c2 0110 	rsb	r1, r2, #16
 802616a:	437a      	muls	r2, r7
 802616c:	fb09 2901 	mla	r9, r9, r1, r2
 8026170:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8026174:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8026178:	ea4f 1259 	mov.w	r2, r9, lsr #5
 802617c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026180:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026184:	4302      	orrs	r2, r0
 8026186:	e795      	b.n	80260b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8026188:	f8ae 2000 	strh.w	r2, [lr]
 802618c:	e7d6      	b.n	802613c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802618e:	b017      	add	sp, #92	; 0x5c
 8026190:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026194 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8026194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026198:	b085      	sub	sp, #20
 802619a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 802619e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80261a2:	9103      	str	r1, [sp, #12]
 80261a4:	fb00 7406 	mla	r4, r0, r6, r7
 80261a8:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 80261ac:	2800      	cmp	r0, #0
 80261ae:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80261b2:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80261b6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80261ba:	9501      	str	r5, [sp, #4]
 80261bc:	eb02 0904 	add.w	r9, r2, r4
 80261c0:	f2c0 8141 	blt.w	8026446 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80261c4:	4583      	cmp	fp, r0
 80261c6:	f340 813e 	ble.w	8026446 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80261ca:	2f00      	cmp	r7, #0
 80261cc:	f2c0 8137 	blt.w	802643e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 80261d0:	42be      	cmp	r6, r7
 80261d2:	f340 8134 	ble.w	802643e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 80261d6:	f812 c004 	ldrb.w	ip, [r2, r4]
 80261da:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 80261de:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80261e2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80261e6:	4355      	muls	r5, r2
 80261e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80261ec:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80261f0:	fb0c f203 	mul.w	r2, ip, r3
 80261f4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80261f8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80261fc:	441d      	add	r5, r3
 80261fe:	f102 0320 	add.w	r3, r2, #32
 8026202:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026206:	0a1b      	lsrs	r3, r3, #8
 8026208:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 802620c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026210:	431c      	orrs	r4, r3
 8026212:	1c7b      	adds	r3, r7, #1
 8026214:	f100 811c 	bmi.w	8026450 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8026218:	429e      	cmp	r6, r3
 802621a:	f340 8119 	ble.w	8026450 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 802621e:	2900      	cmp	r1, #0
 8026220:	f000 8119 	beq.w	8026456 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8026224:	9a01      	ldr	r2, [sp, #4]
 8026226:	f899 3001 	ldrb.w	r3, [r9, #1]
 802622a:	8855      	ldrh	r5, [r2, #2]
 802622c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8026230:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8026234:	fb08 f802 	mul.w	r8, r8, r2
 8026238:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802623c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8026240:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8026244:	435d      	muls	r5, r3
 8026246:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802624a:	44d0      	add	r8, sl
 802624c:	f105 0a20 	add.w	sl, r5, #32
 8026250:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8026254:	0a2d      	lsrs	r5, r5, #8
 8026256:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802625a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802625e:	432a      	orrs	r2, r5
 8026260:	3001      	adds	r0, #1
 8026262:	f100 80fe 	bmi.w	8026462 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8026266:	4583      	cmp	fp, r0
 8026268:	f340 80fb 	ble.w	8026462 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 802626c:	f1be 0f00 	cmp.w	lr, #0
 8026270:	f000 80fc 	beq.w	802646c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8026274:	2f00      	cmp	r7, #0
 8026276:	f2c0 80f1 	blt.w	802645c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 802627a:	42be      	cmp	r6, r7
 802627c:	f340 80ee 	ble.w	802645c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8026280:	9801      	ldr	r0, [sp, #4]
 8026282:	f819 5006 	ldrb.w	r5, [r9, r6]
 8026286:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802628a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 802628e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8026292:	fb0a fa00 	mul.w	sl, sl, r0
 8026296:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802629a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 802629e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80262a2:	fb05 f808 	mul.w	r8, r5, r8
 80262a6:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80262aa:	4482      	add	sl, r0
 80262ac:	f108 0020 	add.w	r0, r8, #32
 80262b0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80262b4:	0a00      	lsrs	r0, r0, #8
 80262b6:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80262ba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80262be:	ea4b 0b00 	orr.w	fp, fp, r0
 80262c2:	3701      	adds	r7, #1
 80262c4:	f100 80d7 	bmi.w	8026476 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 80262c8:	42be      	cmp	r6, r7
 80262ca:	f340 80d4 	ble.w	8026476 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 80262ce:	2900      	cmp	r1, #0
 80262d0:	f000 80d4 	beq.w	802647c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 80262d4:	3601      	adds	r6, #1
 80262d6:	9801      	ldr	r0, [sp, #4]
 80262d8:	f819 7006 	ldrb.w	r7, [r9, r6]
 80262dc:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80262e0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80262e4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80262e8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80262ec:	fb09 f906 	mul.w	r9, r9, r6
 80262f0:	fb07 f800 	mul.w	r8, r7, r0
 80262f4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80262f8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80262fc:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8026300:	44d1      	add	r9, sl
 8026302:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8026306:	f108 0020 	add.w	r0, r8, #32
 802630a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802630e:	0a00      	lsrs	r0, r0, #8
 8026310:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026314:	4330      	orrs	r0, r6
 8026316:	b28e      	uxth	r6, r1
 8026318:	fa1f f98e 	uxth.w	r9, lr
 802631c:	fb06 f809 	mul.w	r8, r6, r9
 8026320:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8026324:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8026328:	0136      	lsls	r6, r6, #4
 802632a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802632e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8026332:	9601      	str	r6, [sp, #4]
 8026334:	ea4a 0404 	orr.w	r4, sl, r4
 8026338:	fa1f f689 	uxth.w	r6, r9
 802633c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8026340:	fb11 f90e 	smulbb	r9, r1, lr
 8026344:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8026348:	9602      	str	r6, [sp, #8]
 802634a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802634e:	4626      	mov	r6, r4
 8026350:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026354:	f1ce 0410 	rsb	r4, lr, #16
 8026358:	1a64      	subs	r4, r4, r1
 802635a:	ea4a 0202 	orr.w	r2, sl, r2
 802635e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8026362:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8026366:	434a      	muls	r2, r1
 8026368:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 802636c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026370:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026374:	fb04 2406 	mla	r4, r4, r6, r2
 8026378:	ea4a 0000 	orr.w	r0, sl, r0
 802637c:	fb09 4200 	mla	r2, r9, r0, r4
 8026380:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8026384:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8026388:	9801      	ldr	r0, [sp, #4]
 802638a:	9903      	ldr	r1, [sp, #12]
 802638c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8026390:	ea44 0b0b 	orr.w	fp, r4, fp
 8026394:	9c02      	ldr	r4, [sp, #8]
 8026396:	8809      	ldrh	r1, [r1, #0]
 8026398:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802639c:	1b00      	subs	r0, r0, r4
 802639e:	9c01      	ldr	r4, [sp, #4]
 80263a0:	eba4 0608 	sub.w	r6, r4, r8
 80263a4:	b2b6      	uxth	r6, r6
 80263a6:	b280      	uxth	r0, r0
 80263a8:	4373      	muls	r3, r6
 80263aa:	fb0c 3300 	mla	r3, ip, r0, r3
 80263ae:	9802      	ldr	r0, [sp, #8]
 80263b0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80263b4:	fb00 3505 	mla	r5, r0, r5, r3
 80263b8:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80263bc:	fb08 5707 	mla	r7, r8, r7, r5
 80263c0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80263c4:	120b      	asrs	r3, r1, #8
 80263c6:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80263ca:	ea6f 2727 	mvn.w	r7, r7, asr #8
 80263ce:	b2ff      	uxtb	r7, r7
 80263d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80263d4:	10c8      	asrs	r0, r1, #3
 80263d6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80263da:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80263de:	00c9      	lsls	r1, r1, #3
 80263e0:	437b      	muls	r3, r7
 80263e2:	ea42 0e0e 	orr.w	lr, r2, lr
 80263e6:	b2c9      	uxtb	r1, r1
 80263e8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80263ec:	fa1f f28e 	uxth.w	r2, lr
 80263f0:	4378      	muls	r0, r7
 80263f2:	434f      	muls	r7, r1
 80263f4:	1c59      	adds	r1, r3, #1
 80263f6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80263fa:	1213      	asrs	r3, r2, #8
 80263fc:	f023 0307 	bic.w	r3, r3, #7
 8026400:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8026404:	1c41      	adds	r1, r0, #1
 8026406:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802640a:	10d1      	asrs	r1, r2, #3
 802640c:	f021 0103 	bic.w	r1, r1, #3
 8026410:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026414:	021b      	lsls	r3, r3, #8
 8026416:	00c9      	lsls	r1, r1, #3
 8026418:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802641c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8026420:	430b      	orrs	r3, r1
 8026422:	1c79      	adds	r1, r7, #1
 8026424:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8026428:	00d2      	lsls	r2, r2, #3
 802642a:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 802642e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026432:	431a      	orrs	r2, r3
 8026434:	9b03      	ldr	r3, [sp, #12]
 8026436:	801a      	strh	r2, [r3, #0]
 8026438:	b005      	add	sp, #20
 802643a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802643e:	f04f 0c00 	mov.w	ip, #0
 8026442:	4664      	mov	r4, ip
 8026444:	e6e5      	b.n	8026212 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8026446:	2300      	movs	r3, #0
 8026448:	469c      	mov	ip, r3
 802644a:	461a      	mov	r2, r3
 802644c:	461c      	mov	r4, r3
 802644e:	e707      	b.n	8026260 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8026450:	2300      	movs	r3, #0
 8026452:	461a      	mov	r2, r3
 8026454:	e704      	b.n	8026260 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8026456:	460b      	mov	r3, r1
 8026458:	460a      	mov	r2, r1
 802645a:	e701      	b.n	8026260 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802645c:	2500      	movs	r5, #0
 802645e:	46ab      	mov	fp, r5
 8026460:	e72f      	b.n	80262c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8026462:	2700      	movs	r7, #0
 8026464:	463d      	mov	r5, r7
 8026466:	4638      	mov	r0, r7
 8026468:	46bb      	mov	fp, r7
 802646a:	e754      	b.n	8026316 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802646c:	4677      	mov	r7, lr
 802646e:	4675      	mov	r5, lr
 8026470:	4670      	mov	r0, lr
 8026472:	46f3      	mov	fp, lr
 8026474:	e74f      	b.n	8026316 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8026476:	2700      	movs	r7, #0
 8026478:	4638      	mov	r0, r7
 802647a:	e74c      	b.n	8026316 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802647c:	460f      	mov	r7, r1
 802647e:	4608      	mov	r0, r1
 8026480:	e749      	b.n	8026316 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08026484 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026484:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026488:	b093      	sub	sp, #76	; 0x4c
 802648a:	9210      	str	r2, [sp, #64]	; 0x40
 802648c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802648e:	910e      	str	r1, [sp, #56]	; 0x38
 8026490:	9306      	str	r3, [sp, #24]
 8026492:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8026496:	9011      	str	r0, [sp, #68]	; 0x44
 8026498:	6850      	ldr	r0, [r2, #4]
 802649a:	6812      	ldr	r2, [r2, #0]
 802649c:	fb00 1303 	mla	r3, r0, r3, r1
 80264a0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80264a4:	9307      	str	r3, [sp, #28]
 80264a6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80264a8:	681b      	ldr	r3, [r3, #0]
 80264aa:	9308      	str	r3, [sp, #32]
 80264ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80264ae:	685b      	ldr	r3, [r3, #4]
 80264b0:	9309      	str	r3, [sp, #36]	; 0x24
 80264b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80264b4:	2b00      	cmp	r3, #0
 80264b6:	dc03      	bgt.n	80264c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80264b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80264ba:	2b00      	cmp	r3, #0
 80264bc:	f340 83b4 	ble.w	8026c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80264c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80264c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80264c6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80264ca:	1e48      	subs	r0, r1, #1
 80264cc:	1e55      	subs	r5, r2, #1
 80264ce:	9b06      	ldr	r3, [sp, #24]
 80264d0:	2b00      	cmp	r3, #0
 80264d2:	f340 8163 	ble.w	802679c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80264d6:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80264d8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80264da:	1436      	asrs	r6, r6, #16
 80264dc:	ea4f 4323 	mov.w	r3, r3, asr #16
 80264e0:	d406      	bmi.n	80264f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80264e2:	4286      	cmp	r6, r0
 80264e4:	da04      	bge.n	80264f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80264e6:	2b00      	cmp	r3, #0
 80264e8:	db02      	blt.n	80264f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80264ea:	42ab      	cmp	r3, r5
 80264ec:	f2c0 8157 	blt.w	802679e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 80264f0:	3601      	adds	r6, #1
 80264f2:	f100 8144 	bmi.w	802677e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80264f6:	42b1      	cmp	r1, r6
 80264f8:	f2c0 8141 	blt.w	802677e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80264fc:	3301      	adds	r3, #1
 80264fe:	f100 813e 	bmi.w	802677e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8026502:	429a      	cmp	r2, r3
 8026504:	f2c0 813b 	blt.w	802677e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8026508:	9b06      	ldr	r3, [sp, #24]
 802650a:	9f07      	ldr	r7, [sp, #28]
 802650c:	930f      	str	r3, [sp, #60]	; 0x3c
 802650e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8026512:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026514:	2b00      	cmp	r3, #0
 8026516:	f340 8164 	ble.w	80267e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802651a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802651c:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 802651e:	1418      	asrs	r0, r3, #16
 8026520:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026522:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8026526:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8026528:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802652c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802652e:	142d      	asrs	r5, r5, #16
 8026530:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8026534:	f100 81ee 	bmi.w	8026914 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8026538:	f102 3eff 	add.w	lr, r2, #4294967295
 802653c:	4575      	cmp	r5, lr
 802653e:	f280 81e9 	bge.w	8026914 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8026542:	2800      	cmp	r0, #0
 8026544:	f2c0 81e6 	blt.w	8026914 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8026548:	f103 3eff 	add.w	lr, r3, #4294967295
 802654c:	4570      	cmp	r0, lr
 802654e:	f280 81e1 	bge.w	8026914 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8026552:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026554:	b212      	sxth	r2, r2
 8026556:	fb00 5002 	mla	r0, r0, r2, r5
 802655a:	fa1f fe81 	uxth.w	lr, r1
 802655e:	eb03 0a00 	add.w	sl, r3, r0
 8026562:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8026566:	f813 9000 	ldrb.w	r9, [r3, r0]
 802656a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802656e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8026572:	b29b      	uxth	r3, r3
 8026574:	f1bc 0f00 	cmp.w	ip, #0
 8026578:	f000 8179 	beq.w	802686e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802657c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8026580:	940a      	str	r4, [sp, #40]	; 0x28
 8026582:	eb0a 0b02 	add.w	fp, sl, r2
 8026586:	fa1f fa8c 	uxth.w	sl, ip
 802658a:	fb0a fe0e 	mul.w	lr, sl, lr
 802658e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8026592:	fa1f fa8a 	uxth.w	sl, sl
 8026596:	eba5 050e 	sub.w	r5, r5, lr
 802659a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802659e:	940b      	str	r4, [sp, #44]	; 0x2c
 80265a0:	eba3 030a 	sub.w	r3, r3, sl
 80265a4:	b2ad      	uxth	r5, r5
 80265a6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80265a8:	b29b      	uxth	r3, r3
 80265aa:	fb08 f505 	mul.w	r5, r8, r5
 80265ae:	fb09 5303 	mla	r3, r9, r3, r5
 80265b2:	fb0a 3304 	mla	r3, sl, r4, r3
 80265b6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80265b8:	fb0e 3304 	mla	r3, lr, r4, r3
 80265bc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80265c0:	2b00      	cmp	r3, #0
 80265c2:	f000 80cf 	beq.w	8026764 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80265c6:	9c08      	ldr	r4, [sp, #32]
 80265c8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80265cc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80265d0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80265d4:	f000 8150 	beq.w	8026878 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80265d8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80265dc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80265e0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80265e4:	fb09 f000 	mul.w	r0, r9, r0
 80265e8:	fb0a fe0e 	mul.w	lr, sl, lr
 80265ec:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80265f0:	f100 0b20 	add.w	fp, r0, #32
 80265f4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80265f8:	44ce      	add	lr, r9
 80265fa:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80265fe:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026602:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8026606:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802660a:	ea4e 0909 	orr.w	r9, lr, r9
 802660e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8026612:	8868      	ldrh	r0, [r5, #2]
 8026614:	d019      	beq.n	802664a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8026616:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802661a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802661e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026622:	fb08 f800 	mul.w	r8, r8, r0
 8026626:	fb0a fe0e 	mul.w	lr, sl, lr
 802662a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802662e:	f108 0b20 	add.w	fp, r8, #32
 8026632:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8026636:	4486      	add	lr, r0
 8026638:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 802663c:	0a00      	lsrs	r0, r0, #8
 802663e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8026642:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026646:	ea4e 0000 	orr.w	r0, lr, r0
 802664a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802664e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8026652:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8026656:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802665a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802665e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026662:	ea4e 0909 	orr.w	r9, lr, r9
 8026666:	ea4a 0000 	orr.w	r0, sl, r0
 802666a:	f1bc 0f00 	cmp.w	ip, #0
 802666e:	f000 8105 	beq.w	802687c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8026672:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8026676:	3a01      	subs	r2, #1
 8026678:	0052      	lsls	r2, r2, #1
 802667a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802667c:	3202      	adds	r2, #2
 802667e:	2cff      	cmp	r4, #255	; 0xff
 8026680:	eb05 0e02 	add.w	lr, r5, r2
 8026684:	5aaa      	ldrh	r2, [r5, r2]
 8026686:	d018      	beq.n	80266ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8026688:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 802668c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026690:	fb04 fa02 	mul.w	sl, r4, r2
 8026694:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8026698:	fb08 f805 	mul.w	r8, r8, r5
 802669c:	f10a 0520 	add.w	r5, sl, #32
 80266a0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80266a4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80266a8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80266ac:	4442      	add	r2, r8
 80266ae:	0a2d      	lsrs	r5, r5, #8
 80266b0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80266b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80266b8:	432a      	orrs	r2, r5
 80266ba:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80266bc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80266c0:	2cff      	cmp	r4, #255	; 0xff
 80266c2:	d01a      	beq.n	80266fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80266c4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80266c8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80266cc:	fb04 fa05 	mul.w	sl, r4, r5
 80266d0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80266d4:	fb08 f80e 	mul.w	r8, r8, lr
 80266d8:	f10a 0e20 	add.w	lr, sl, #32
 80266dc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80266e0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80266e4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80266e8:	4445      	add	r5, r8
 80266ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80266ee:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80266f2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80266f6:	ea45 050e 	orr.w	r5, r5, lr
 80266fa:	fb1c fe01 	smulbb	lr, ip, r1
 80266fe:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8026702:	f1cc 0810 	rsb	r8, ip, #16
 8026706:	eba8 0801 	sub.w	r8, r8, r1
 802670a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802670e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8026712:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8026716:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802671a:	4341      	muls	r1, r0
 802671c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026720:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026724:	ea4a 0202 	orr.w	r2, sl, r2
 8026728:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802672c:	fb09 1108 	mla	r1, r9, r8, r1
 8026730:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026734:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8026738:	fb0c 1102 	mla	r1, ip, r2, r1
 802673c:	ea4b 0505 	orr.w	r5, fp, r5
 8026740:	fb0e 1e05 	mla	lr, lr, r5, r1
 8026744:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8026748:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802674c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026750:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8026754:	ea42 0e0e 	orr.w	lr, r2, lr
 8026758:	fa1f f28e 	uxth.w	r2, lr
 802675c:	2bff      	cmp	r3, #255	; 0xff
 802675e:	f040 80a1 	bne.w	80268a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8026762:	803a      	strh	r2, [r7, #0]
 8026764:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026766:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8026768:	4413      	add	r3, r2
 802676a:	931d      	str	r3, [sp, #116]	; 0x74
 802676c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802676e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026770:	441a      	add	r2, r3
 8026772:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026774:	921e      	str	r2, [sp, #120]	; 0x78
 8026776:	3b01      	subs	r3, #1
 8026778:	3702      	adds	r7, #2
 802677a:	930f      	str	r3, [sp, #60]	; 0x3c
 802677c:	e6c9      	b.n	8026512 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802677e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026780:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8026782:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8026784:	4433      	add	r3, r6
 8026786:	931d      	str	r3, [sp, #116]	; 0x74
 8026788:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802678a:	441c      	add	r4, r3
 802678c:	9b06      	ldr	r3, [sp, #24]
 802678e:	941e      	str	r4, [sp, #120]	; 0x78
 8026790:	3b01      	subs	r3, #1
 8026792:	9306      	str	r3, [sp, #24]
 8026794:	9b07      	ldr	r3, [sp, #28]
 8026796:	3302      	adds	r3, #2
 8026798:	9307      	str	r3, [sp, #28]
 802679a:	e698      	b.n	80264ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802679c:	d028      	beq.n	80267f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802679e:	9b06      	ldr	r3, [sp, #24]
 80267a0:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80267a2:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80267a4:	3b01      	subs	r3, #1
 80267a6:	fb00 5003 	mla	r0, r0, r3, r5
 80267aa:	1400      	asrs	r0, r0, #16
 80267ac:	f53f aeac 	bmi.w	8026508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80267b0:	3901      	subs	r1, #1
 80267b2:	4288      	cmp	r0, r1
 80267b4:	f6bf aea8 	bge.w	8026508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80267b8:	9920      	ldr	r1, [sp, #128]	; 0x80
 80267ba:	981e      	ldr	r0, [sp, #120]	; 0x78
 80267bc:	fb01 0303 	mla	r3, r1, r3, r0
 80267c0:	141b      	asrs	r3, r3, #16
 80267c2:	f53f aea1 	bmi.w	8026508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80267c6:	3a01      	subs	r2, #1
 80267c8:	4293      	cmp	r3, r2
 80267ca:	f6bf ae9d 	bge.w	8026508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80267ce:	9b06      	ldr	r3, [sp, #24]
 80267d0:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80267d4:	930f      	str	r3, [sp, #60]	; 0x3c
 80267d6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80267da:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80267dc:	2b00      	cmp	r3, #0
 80267de:	f300 80b6 	bgt.w	802694e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 80267e2:	9b06      	ldr	r3, [sp, #24]
 80267e4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80267e8:	9b07      	ldr	r3, [sp, #28]
 80267ea:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80267ee:	9307      	str	r3, [sp, #28]
 80267f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80267f2:	2b00      	cmp	r3, #0
 80267f4:	f340 8218 	ble.w	8026c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80267f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80267fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026800:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026804:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026806:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802680a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802680e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026812:	eef0 6a62 	vmov.f32	s13, s5
 8026816:	ee61 7a27 	vmul.f32	s15, s2, s15
 802681a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802681e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026822:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8026826:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802682a:	eef0 6a43 	vmov.f32	s13, s6
 802682e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026832:	ee12 2a90 	vmov	r2, s5
 8026836:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802683a:	fb92 f3f3 	sdiv	r3, r2, r3
 802683e:	ee13 2a10 	vmov	r2, s6
 8026842:	931f      	str	r3, [sp, #124]	; 0x7c
 8026844:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026846:	fb92 f3f3 	sdiv	r3, r2, r3
 802684a:	9320      	str	r3, [sp, #128]	; 0x80
 802684c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802684e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026850:	3b01      	subs	r3, #1
 8026852:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026856:	930e      	str	r3, [sp, #56]	; 0x38
 8026858:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802685a:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 802685e:	bf08      	it	eq
 8026860:	4613      	moveq	r3, r2
 8026862:	9306      	str	r3, [sp, #24]
 8026864:	eeb0 3a67 	vmov.f32	s6, s15
 8026868:	eef0 2a47 	vmov.f32	s5, s14
 802686c:	e621      	b.n	80264b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 802686e:	fb08 f505 	mul.w	r5, r8, r5
 8026872:	fb09 5303 	mla	r3, r9, r3, r5
 8026876:	e6a1      	b.n	80265bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8026878:	4681      	mov	r9, r0
 802687a:	e6c8      	b.n	802660e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 802687c:	f1c1 0210 	rsb	r2, r1, #16
 8026880:	4341      	muls	r1, r0
 8026882:	fb09 1902 	mla	r9, r9, r2, r1
 8026886:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802688a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802688e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8026892:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026896:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802689a:	ea42 0909 	orr.w	r9, r2, r9
 802689e:	fa1f f289 	uxth.w	r2, r9
 80268a2:	e75b      	b.n	802675c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80268a4:	f8b7 c000 	ldrh.w	ip, [r7]
 80268a8:	43db      	mvns	r3, r3
 80268aa:	ea4f 202c 	mov.w	r0, ip, asr #8
 80268ae:	fa5f fe83 	uxtb.w	lr, r3
 80268b2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80268b6:	fb00 f00e 	mul.w	r0, r0, lr
 80268ba:	1c41      	adds	r1, r0, #1
 80268bc:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80268c0:	1211      	asrs	r1, r2, #8
 80268c2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80268c6:	f021 0107 	bic.w	r1, r1, #7
 80268ca:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80268ce:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80268d2:	48d7      	ldr	r0, [pc, #860]	; (8026c30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80268d4:	fb05 f50e 	mul.w	r5, r5, lr
 80268d8:	b2c9      	uxtb	r1, r1
 80268da:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80268de:	1c69      	adds	r1, r5, #1
 80268e0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80268e4:	10d1      	asrs	r1, r2, #3
 80268e6:	f021 0103 	bic.w	r1, r1, #3
 80268ea:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80268ee:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80268f2:	b2db      	uxtb	r3, r3
 80268f4:	00c9      	lsls	r1, r1, #3
 80268f6:	fb03 f30e 	mul.w	r3, r3, lr
 80268fa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80268fe:	4301      	orrs	r1, r0
 8026900:	1c58      	adds	r0, r3, #1
 8026902:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8026906:	00d2      	lsls	r2, r2, #3
 8026908:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802690c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026910:	430a      	orrs	r2, r1
 8026912:	e726      	b.n	8026762 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8026914:	f115 0e01 	adds.w	lr, r5, #1
 8026918:	f53f af24 	bmi.w	8026764 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802691c:	4572      	cmp	r2, lr
 802691e:	f6ff af21 	blt.w	8026764 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026922:	f110 0e01 	adds.w	lr, r0, #1
 8026926:	f53f af1d 	bmi.w	8026764 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802692a:	4573      	cmp	r3, lr
 802692c:	f6ff af1a 	blt.w	8026764 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026930:	b21b      	sxth	r3, r3
 8026932:	b212      	sxth	r2, r2
 8026934:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8026938:	e9cd 5002 	strd	r5, r0, [sp, #8]
 802693c:	9301      	str	r3, [sp, #4]
 802693e:	9200      	str	r2, [sp, #0]
 8026940:	4639      	mov	r1, r7
 8026942:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8026946:	9811      	ldr	r0, [sp, #68]	; 0x44
 8026948:	f7ff fc24 	bl	8026194 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802694c:	e70a      	b.n	8026764 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802694e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026950:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8026954:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8026956:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802695a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802695c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026960:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8026962:	141f      	asrs	r7, r3, #16
 8026964:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026966:	141b      	asrs	r3, r3, #16
 8026968:	fb01 3707 	mla	r7, r1, r7, r3
 802696c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802696e:	fa1f fc82 	uxth.w	ip, r2
 8026972:	eb03 0a07 	add.w	sl, r3, r7
 8026976:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802697a:	f813 9007 	ldrb.w	r9, [r3, r7]
 802697e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8026982:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8026986:	b29b      	uxth	r3, r3
 8026988:	2d00      	cmp	r5, #0
 802698a:	f000 80fe 	beq.w	8026b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 802698e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8026992:	940c      	str	r4, [sp, #48]	; 0x30
 8026994:	eb0a 0b01 	add.w	fp, sl, r1
 8026998:	fa1f fa85 	uxth.w	sl, r5
 802699c:	fb0a fc0c 	mul.w	ip, sl, ip
 80269a0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80269a4:	fa1f fa8a 	uxth.w	sl, sl
 80269a8:	eba0 000c 	sub.w	r0, r0, ip
 80269ac:	eba3 030a 	sub.w	r3, r3, sl
 80269b0:	b280      	uxth	r0, r0
 80269b2:	fb08 f000 	mul.w	r0, r8, r0
 80269b6:	b29b      	uxth	r3, r3
 80269b8:	fb09 0303 	mla	r3, r9, r3, r0
 80269bc:	980c      	ldr	r0, [sp, #48]	; 0x30
 80269be:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80269c2:	940d      	str	r4, [sp, #52]	; 0x34
 80269c4:	fb0a 3300 	mla	r3, sl, r0, r3
 80269c8:	fb0c 3304 	mla	r3, ip, r4, r3
 80269cc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80269d0:	2b00      	cmp	r3, #0
 80269d2:	f000 80cc 	beq.w	8026b6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80269d6:	9808      	ldr	r0, [sp, #32]
 80269d8:	9c08      	ldr	r4, [sp, #32]
 80269da:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80269de:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80269e2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80269e6:	f000 80d5 	beq.w	8026b94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80269ea:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80269ee:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80269f2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80269f6:	fb09 f707 	mul.w	r7, r9, r7
 80269fa:	fb0a fc0c 	mul.w	ip, sl, ip
 80269fe:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8026a02:	f107 0b20 	add.w	fp, r7, #32
 8026a06:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8026a0a:	44cc      	add	ip, r9
 8026a0c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8026a10:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026a14:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8026a18:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8026a1c:	ea4c 0909 	orr.w	r9, ip, r9
 8026a20:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8026a24:	8847      	ldrh	r7, [r0, #2]
 8026a26:	d019      	beq.n	8026a5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8026a28:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8026a2c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8026a30:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026a34:	fb08 f807 	mul.w	r8, r8, r7
 8026a38:	fb0a fc0c 	mul.w	ip, sl, ip
 8026a3c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8026a40:	f108 0b20 	add.w	fp, r8, #32
 8026a44:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8026a48:	44bc      	add	ip, r7
 8026a4a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8026a4e:	0a3f      	lsrs	r7, r7, #8
 8026a50:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8026a54:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026a58:	ea4c 0707 	orr.w	r7, ip, r7
 8026a5c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8026a60:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8026a64:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8026a68:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8026a6c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026a70:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8026a74:	ea4c 0909 	orr.w	r9, ip, r9
 8026a78:	ea4a 0707 	orr.w	r7, sl, r7
 8026a7c:	2d00      	cmp	r5, #0
 8026a7e:	f000 808b 	beq.w	8026b98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8026a82:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8026a86:	3901      	subs	r1, #1
 8026a88:	0049      	lsls	r1, r1, #1
 8026a8a:	3102      	adds	r1, #2
 8026a8c:	eb00 0c01 	add.w	ip, r0, r1
 8026a90:	5a41      	ldrh	r1, [r0, r1]
 8026a92:	980c      	ldr	r0, [sp, #48]	; 0x30
 8026a94:	28ff      	cmp	r0, #255	; 0xff
 8026a96:	d019      	beq.n	8026acc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8026a98:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8026a9a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8026a9e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026aa2:	fb04 fa01 	mul.w	sl, r4, r1
 8026aa6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8026aaa:	fb08 f800 	mul.w	r8, r8, r0
 8026aae:	f10a 0020 	add.w	r0, sl, #32
 8026ab2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8026ab6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8026aba:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026abe:	4441      	add	r1, r8
 8026ac0:	0a00      	lsrs	r0, r0, #8
 8026ac2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8026ac6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026aca:	4301      	orrs	r1, r0
 8026acc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8026ace:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8026ad2:	2cff      	cmp	r4, #255	; 0xff
 8026ad4:	d01a      	beq.n	8026b0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8026ad6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8026ada:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026ade:	fb04 fa00 	mul.w	sl, r4, r0
 8026ae2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8026ae6:	fb08 f80c 	mul.w	r8, r8, ip
 8026aea:	f10a 0c20 	add.w	ip, sl, #32
 8026aee:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8026af2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8026af6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026afa:	4440      	add	r0, r8
 8026afc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026b00:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8026b04:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026b08:	ea40 000c 	orr.w	r0, r0, ip
 8026b0c:	fb15 fc02 	smulbb	ip, r5, r2
 8026b10:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8026b14:	f1c5 0810 	rsb	r8, r5, #16
 8026b18:	eba8 0802 	sub.w	r8, r8, r2
 8026b1c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8026b20:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8026b24:	437a      	muls	r2, r7
 8026b26:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8026b2a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8026b2e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026b32:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026b36:	fb09 2208 	mla	r2, r9, r8, r2
 8026b3a:	ea4a 0101 	orr.w	r1, sl, r1
 8026b3e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8026b42:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026b46:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026b4a:	fb05 2201 	mla	r2, r5, r1, r2
 8026b4e:	ea4b 0000 	orr.w	r0, fp, r0
 8026b52:	fb0c 2200 	mla	r2, ip, r0, r2
 8026b56:	0d57      	lsrs	r7, r2, #21
 8026b58:	0952      	lsrs	r2, r2, #5
 8026b5a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026b5e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026b62:	433a      	orrs	r2, r7
 8026b64:	2bff      	cmp	r3, #255	; 0xff
 8026b66:	b292      	uxth	r2, r2
 8026b68:	d127      	bne.n	8026bba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8026b6a:	f8ae 2000 	strh.w	r2, [lr]
 8026b6e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026b70:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8026b72:	4413      	add	r3, r2
 8026b74:	931d      	str	r3, [sp, #116]	; 0x74
 8026b76:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8026b78:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026b7a:	441a      	add	r2, r3
 8026b7c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026b7e:	921e      	str	r2, [sp, #120]	; 0x78
 8026b80:	3b01      	subs	r3, #1
 8026b82:	f10e 0e02 	add.w	lr, lr, #2
 8026b86:	930f      	str	r3, [sp, #60]	; 0x3c
 8026b88:	e627      	b.n	80267da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026b8a:	fb08 f000 	mul.w	r0, r8, r0
 8026b8e:	fb09 0303 	mla	r3, r9, r3, r0
 8026b92:	e71b      	b.n	80269cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8026b94:	46b9      	mov	r9, r7
 8026b96:	e743      	b.n	8026a20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8026b98:	f1c2 0110 	rsb	r1, r2, #16
 8026b9c:	437a      	muls	r2, r7
 8026b9e:	fb09 2901 	mla	r9, r9, r1, r2
 8026ba2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8026ba6:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8026baa:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8026bae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026bb2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026bb6:	4302      	orrs	r2, r0
 8026bb8:	e7d4      	b.n	8026b64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8026bba:	f8be 7000 	ldrh.w	r7, [lr]
 8026bbe:	4c1c      	ldr	r4, [pc, #112]	; (8026c30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8026bc0:	43db      	mvns	r3, r3
 8026bc2:	1238      	asrs	r0, r7, #8
 8026bc4:	fa5f fc83 	uxtb.w	ip, r3
 8026bc8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026bcc:	10fd      	asrs	r5, r7, #3
 8026bce:	fb00 f00c 	mul.w	r0, r0, ip
 8026bd2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8026bd6:	fb05 f10c 	mul.w	r1, r5, ip
 8026bda:	1c45      	adds	r5, r0, #1
 8026bdc:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8026be0:	1215      	asrs	r5, r2, #8
 8026be2:	f025 0507 	bic.w	r5, r5, #7
 8026be6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8026bea:	1c4d      	adds	r5, r1, #1
 8026bec:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8026bf0:	10d1      	asrs	r1, r2, #3
 8026bf2:	f021 0103 	bic.w	r1, r1, #3
 8026bf6:	00fb      	lsls	r3, r7, #3
 8026bf8:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8026bfc:	b2db      	uxtb	r3, r3
 8026bfe:	b2c0      	uxtb	r0, r0
 8026c00:	00c9      	lsls	r1, r1, #3
 8026c02:	fb03 f30c 	mul.w	r3, r3, ip
 8026c06:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026c0a:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8026c0e:	4308      	orrs	r0, r1
 8026c10:	1c59      	adds	r1, r3, #1
 8026c12:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8026c16:	00d2      	lsls	r2, r2, #3
 8026c18:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026c1c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8026c20:	4318      	orrs	r0, r3
 8026c22:	f8ae 0000 	strh.w	r0, [lr]
 8026c26:	e7a2      	b.n	8026b6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8026c28:	b013      	add	sp, #76	; 0x4c
 8026c2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026c2e:	bf00      	nop
 8026c30:	fffff800 	.word	0xfffff800

08026c34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8026c34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026c38:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8026c3c:	fb05 4c03 	mla	ip, r5, r3, r4
 8026c40:	2d00      	cmp	r5, #0
 8026c42:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8026c46:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8026c4a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8026c4e:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8026c52:	8808      	ldrh	r0, [r1, #0]
 8026c54:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8026c58:	f2c0 80a7 	blt.w	8026daa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8026c5c:	45aa      	cmp	sl, r5
 8026c5e:	f340 80a4 	ble.w	8026daa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8026c62:	2c00      	cmp	r4, #0
 8026c64:	f2c0 809f 	blt.w	8026da6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8026c68:	42a3      	cmp	r3, r4
 8026c6a:	f340 809c 	ble.w	8026da6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8026c6e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8026c72:	1c62      	adds	r2, r4, #1
 8026c74:	f100 809c 	bmi.w	8026db0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8026c78:	4293      	cmp	r3, r2
 8026c7a:	f340 8099 	ble.w	8026db0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8026c7e:	f1b9 0f00 	cmp.w	r9, #0
 8026c82:	f000 8095 	beq.w	8026db0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8026c86:	f8be c002 	ldrh.w	ip, [lr, #2]
 8026c8a:	3501      	adds	r5, #1
 8026c8c:	f100 8094 	bmi.w	8026db8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8026c90:	45aa      	cmp	sl, r5
 8026c92:	f340 8091 	ble.w	8026db8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8026c96:	2f00      	cmp	r7, #0
 8026c98:	f000 808e 	beq.w	8026db8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8026c9c:	2c00      	cmp	r4, #0
 8026c9e:	f2c0 8089 	blt.w	8026db4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8026ca2:	42a3      	cmp	r3, r4
 8026ca4:	f340 8086 	ble.w	8026db4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8026ca8:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8026cac:	3401      	adds	r4, #1
 8026cae:	f100 8086 	bmi.w	8026dbe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8026cb2:	42a3      	cmp	r3, r4
 8026cb4:	f340 8083 	ble.w	8026dbe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8026cb8:	f1b9 0f00 	cmp.w	r9, #0
 8026cbc:	d07f      	beq.n	8026dbe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8026cbe:	3301      	adds	r3, #1
 8026cc0:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8026cc4:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8026cc8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8026ccc:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8026cd0:	fb19 fe07 	smulbb	lr, r9, r7
 8026cd4:	ea44 0808 	orr.w	r8, r4, r8
 8026cd8:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8026cdc:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8026ce0:	f1c7 0210 	rsb	r2, r7, #16
 8026ce4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8026ce8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026cec:	ea44 0c0c 	orr.w	ip, r4, ip
 8026cf0:	eba2 0209 	sub.w	r2, r2, r9
 8026cf4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8026cf8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8026cfc:	fb04 f40c 	mul.w	r4, r4, ip
 8026d00:	fb02 4808 	mla	r8, r2, r8, r4
 8026d04:	041a      	lsls	r2, r3, #16
 8026d06:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026d0a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026d0e:	4313      	orrs	r3, r2
 8026d10:	042a      	lsls	r2, r5, #16
 8026d12:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026d16:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8026d1a:	fb0e 8303 	mla	r3, lr, r3, r8
 8026d1e:	432a      	orrs	r2, r5
 8026d20:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8026d24:	fb07 3202 	mla	r2, r7, r2, r3
 8026d28:	0d53      	lsrs	r3, r2, #21
 8026d2a:	0952      	lsrs	r2, r2, #5
 8026d2c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026d30:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026d34:	431a      	orrs	r2, r3
 8026d36:	b293      	uxth	r3, r2
 8026d38:	b2b4      	uxth	r4, r6
 8026d3a:	1202      	asrs	r2, r0, #8
 8026d3c:	43f6      	mvns	r6, r6
 8026d3e:	b2f6      	uxtb	r6, r6
 8026d40:	121d      	asrs	r5, r3, #8
 8026d42:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8026d46:	fb12 f206 	smulbb	r2, r2, r6
 8026d4a:	10c7      	asrs	r7, r0, #3
 8026d4c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8026d50:	00c0      	lsls	r0, r0, #3
 8026d52:	fb05 2504 	mla	r5, r5, r4, r2
 8026d56:	b2c0      	uxtb	r0, r0
 8026d58:	10da      	asrs	r2, r3, #3
 8026d5a:	00db      	lsls	r3, r3, #3
 8026d5c:	b2db      	uxtb	r3, r3
 8026d5e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8026d62:	fb10 f006 	smulbb	r0, r0, r6
 8026d66:	b2ad      	uxth	r5, r5
 8026d68:	fb03 0004 	mla	r0, r3, r4, r0
 8026d6c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026d70:	fb17 f706 	smulbb	r7, r7, r6
 8026d74:	b280      	uxth	r0, r0
 8026d76:	1c6b      	adds	r3, r5, #1
 8026d78:	fb02 7204 	mla	r2, r2, r4, r7
 8026d7c:	b292      	uxth	r2, r2
 8026d7e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8026d82:	1c43      	adds	r3, r0, #1
 8026d84:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8026d88:	1c50      	adds	r0, r2, #1
 8026d8a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8026d8e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8026d92:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026d96:	0952      	lsrs	r2, r2, #5
 8026d98:	432b      	orrs	r3, r5
 8026d9a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026d9e:	4313      	orrs	r3, r2
 8026da0:	800b      	strh	r3, [r1, #0]
 8026da2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026da6:	4680      	mov	r8, r0
 8026da8:	e763      	b.n	8026c72 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8026daa:	4684      	mov	ip, r0
 8026dac:	4680      	mov	r8, r0
 8026dae:	e76c      	b.n	8026c8a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8026db0:	4684      	mov	ip, r0
 8026db2:	e76a      	b.n	8026c8a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8026db4:	4605      	mov	r5, r0
 8026db6:	e779      	b.n	8026cac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8026db8:	4603      	mov	r3, r0
 8026dba:	4605      	mov	r5, r0
 8026dbc:	e782      	b.n	8026cc4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8026dbe:	4603      	mov	r3, r0
 8026dc0:	e780      	b.n	8026cc4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08026dc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026dc2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026dc6:	b093      	sub	sp, #76	; 0x4c
 8026dc8:	461d      	mov	r5, r3
 8026dca:	9210      	str	r2, [sp, #64]	; 0x40
 8026dcc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8026dce:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8026dd2:	920b      	str	r2, [sp, #44]	; 0x2c
 8026dd4:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8026dd8:	910a      	str	r1, [sp, #40]	; 0x28
 8026dda:	6859      	ldr	r1, [r3, #4]
 8026ddc:	681b      	ldr	r3, [r3, #0]
 8026dde:	9011      	str	r0, [sp, #68]	; 0x44
 8026de0:	fb01 2707 	mla	r7, r1, r7, r2
 8026de4:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8026de8:	9307      	str	r3, [sp, #28]
 8026dea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026dec:	681b      	ldr	r3, [r3, #0]
 8026dee:	9309      	str	r3, [sp, #36]	; 0x24
 8026df0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8026df2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8026df6:	43db      	mvns	r3, r3
 8026df8:	b2db      	uxtb	r3, r3
 8026dfa:	9308      	str	r3, [sp, #32]
 8026dfc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026dfe:	2b00      	cmp	r3, #0
 8026e00:	dc03      	bgt.n	8026e0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026e02:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8026e04:	2b00      	cmp	r3, #0
 8026e06:	f340 8203 	ble.w	8027210 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026e0a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026e0c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026e10:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026e14:	1e48      	subs	r0, r1, #1
 8026e16:	f102 3cff 	add.w	ip, r2, #4294967295
 8026e1a:	2d00      	cmp	r5, #0
 8026e1c:	f340 80da 	ble.w	8026fd4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8026e20:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026e24:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026e28:	d406      	bmi.n	8026e38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026e2a:	4586      	cmp	lr, r0
 8026e2c:	da04      	bge.n	8026e38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026e2e:	2b00      	cmp	r3, #0
 8026e30:	db02      	blt.n	8026e38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026e32:	4563      	cmp	r3, ip
 8026e34:	f2c0 80cf 	blt.w	8026fd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8026e38:	f11e 0e01 	adds.w	lr, lr, #1
 8026e3c:	f100 80c1 	bmi.w	8026fc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026e40:	4571      	cmp	r1, lr
 8026e42:	f2c0 80be 	blt.w	8026fc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026e46:	3301      	adds	r3, #1
 8026e48:	f100 80bb 	bmi.w	8026fc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026e4c:	429a      	cmp	r2, r3
 8026e4e:	f2c0 80b8 	blt.w	8026fc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026e52:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8026e56:	46a9      	mov	r9, r5
 8026e58:	f1b9 0f00 	cmp.w	r9, #0
 8026e5c:	f340 80d8 	ble.w	8027010 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8026e60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026e62:	1421      	asrs	r1, r4, #16
 8026e64:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026e68:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026e6c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026e70:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8026e74:	f100 8111 	bmi.w	802709a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026e78:	f10e 3aff 	add.w	sl, lr, #4294967295
 8026e7c:	4551      	cmp	r1, sl
 8026e7e:	f280 810c 	bge.w	802709a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026e82:	2800      	cmp	r0, #0
 8026e84:	f2c0 8109 	blt.w	802709a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026e88:	f103 3aff 	add.w	sl, r3, #4294967295
 8026e8c:	4550      	cmp	r0, sl
 8026e8e:	f280 8104 	bge.w	802709a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026e92:	fa0f f38e 	sxth.w	r3, lr
 8026e96:	fb00 1103 	mla	r1, r0, r3, r1
 8026e9a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8026e9c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8026ea0:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8026ea4:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8026ea8:	f1bc 0f00 	cmp.w	ip, #0
 8026eac:	d007      	beq.n	8026ebe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8026eae:	005b      	lsls	r3, r3, #1
 8026eb0:	eb0a 0003 	add.w	r0, sl, r3
 8026eb4:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8026eb8:	930c      	str	r3, [sp, #48]	; 0x30
 8026eba:	8843      	ldrh	r3, [r0, #2]
 8026ebc:	930d      	str	r3, [sp, #52]	; 0x34
 8026ebe:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8026ec2:	fb12 f30c 	smulbb	r3, r2, ip
 8026ec6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8026eca:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8026ece:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026ed2:	10db      	asrs	r3, r3, #3
 8026ed4:	ea40 000e 	orr.w	r0, r0, lr
 8026ed8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026edc:	f1cc 0e10 	rsb	lr, ip, #16
 8026ee0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026ee4:	ebae 0e02 	sub.w	lr, lr, r2
 8026ee8:	ea4a 0101 	orr.w	r1, sl, r1
 8026eec:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026ef0:	4351      	muls	r1, r2
 8026ef2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8026ef4:	9f08      	ldr	r7, [sp, #32]
 8026ef6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8026efa:	fb0e 1e00 	mla	lr, lr, r0, r1
 8026efe:	0410      	lsls	r0, r2, #16
 8026f00:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026f04:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026f08:	4310      	orrs	r0, r2
 8026f0a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026f0c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026f0e:	0412      	lsls	r2, r2, #16
 8026f10:	fb03 e000 	mla	r0, r3, r0, lr
 8026f14:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026f18:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8026f1c:	ea42 020e 	orr.w	r2, r2, lr
 8026f20:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8026f24:	fb03 0302 	mla	r3, r3, r2, r0
 8026f28:	0d5a      	lsrs	r2, r3, #21
 8026f2a:	095b      	lsrs	r3, r3, #5
 8026f2c:	f8b8 0000 	ldrh.w	r0, [r8]
 8026f30:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026f34:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026f38:	4313      	orrs	r3, r2
 8026f3a:	b29b      	uxth	r3, r3
 8026f3c:	1201      	asrs	r1, r0, #8
 8026f3e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8026f42:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8026f46:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026f4a:	fb11 f107 	smulbb	r1, r1, r7
 8026f4e:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8026f52:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8026f56:	00c0      	lsls	r0, r0, #3
 8026f58:	fb0c 1c02 	mla	ip, ip, r2, r1
 8026f5c:	b2c0      	uxtb	r0, r0
 8026f5e:	10d9      	asrs	r1, r3, #3
 8026f60:	00db      	lsls	r3, r3, #3
 8026f62:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8026f66:	b2db      	uxtb	r3, r3
 8026f68:	fb10 f007 	smulbb	r0, r0, r7
 8026f6c:	fa1f fc8c 	uxth.w	ip, ip
 8026f70:	fb03 0302 	mla	r3, r3, r2, r0
 8026f74:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026f78:	fb1e fe07 	smulbb	lr, lr, r7
 8026f7c:	fb01 e102 	mla	r1, r1, r2, lr
 8026f80:	b29a      	uxth	r2, r3
 8026f82:	f10c 0301 	add.w	r3, ip, #1
 8026f86:	b289      	uxth	r1, r1
 8026f88:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8026f8c:	1c53      	adds	r3, r2, #1
 8026f8e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026f92:	1c4a      	adds	r2, r1, #1
 8026f94:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8026f98:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8026f9c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026fa0:	0949      	lsrs	r1, r1, #5
 8026fa2:	ea43 030c 	orr.w	r3, r3, ip
 8026fa6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026faa:	430b      	orrs	r3, r1
 8026fac:	f8a8 3000 	strh.w	r3, [r8]
 8026fb0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026fb2:	441c      	add	r4, r3
 8026fb4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026fb6:	f108 0802 	add.w	r8, r8, #2
 8026fba:	441e      	add	r6, r3
 8026fbc:	f109 39ff 	add.w	r9, r9, #4294967295
 8026fc0:	e74a      	b.n	8026e58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8026fc2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026fc4:	441c      	add	r4, r3
 8026fc6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026fc8:	441e      	add	r6, r3
 8026fca:	9b07      	ldr	r3, [sp, #28]
 8026fcc:	3302      	adds	r3, #2
 8026fce:	3d01      	subs	r5, #1
 8026fd0:	9307      	str	r3, [sp, #28]
 8026fd2:	e722      	b.n	8026e1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8026fd4:	d022      	beq.n	802701c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8026fd6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8026fd8:	1e6b      	subs	r3, r5, #1
 8026fda:	fb00 4003 	mla	r0, r0, r3, r4
 8026fde:	1400      	asrs	r0, r0, #16
 8026fe0:	f53f af37 	bmi.w	8026e52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026fe4:	3901      	subs	r1, #1
 8026fe6:	4288      	cmp	r0, r1
 8026fe8:	f6bf af33 	bge.w	8026e52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026fec:	9920      	ldr	r1, [sp, #128]	; 0x80
 8026fee:	fb01 6303 	mla	r3, r1, r3, r6
 8026ff2:	141b      	asrs	r3, r3, #16
 8026ff4:	f53f af2d 	bmi.w	8026e52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026ff8:	3a01      	subs	r2, #1
 8026ffa:	4293      	cmp	r3, r2
 8026ffc:	f6bf af29 	bge.w	8026e52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8027000:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8027004:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8027008:	46a8      	mov	r8, r5
 802700a:	f1b8 0f00 	cmp.w	r8, #0
 802700e:	dc5e      	bgt.n	80270ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8027010:	9b07      	ldr	r3, [sp, #28]
 8027012:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8027016:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802701a:	9307      	str	r3, [sp, #28]
 802701c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802701e:	2b00      	cmp	r3, #0
 8027020:	f340 80f6 	ble.w	8027210 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8027024:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027028:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802702c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027030:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027032:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027036:	ee31 1a05 	vadd.f32	s2, s2, s10
 802703a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802703e:	eef0 6a62 	vmov.f32	s13, s5
 8027042:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027046:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802704a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802704e:	ee16 4a90 	vmov	r4, s13
 8027052:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027056:	eef0 6a43 	vmov.f32	s13, s6
 802705a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802705e:	ee12 2a90 	vmov	r2, s5
 8027062:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027066:	fb92 f3f3 	sdiv	r3, r2, r3
 802706a:	ee13 2a10 	vmov	r2, s6
 802706e:	931f      	str	r3, [sp, #124]	; 0x7c
 8027070:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027072:	fb92 f3f3 	sdiv	r3, r2, r3
 8027076:	9320      	str	r3, [sp, #128]	; 0x80
 8027078:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802707a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802707c:	3b01      	subs	r3, #1
 802707e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027082:	930a      	str	r3, [sp, #40]	; 0x28
 8027084:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027086:	ee16 6a90 	vmov	r6, s13
 802708a:	bf14      	ite	ne
 802708c:	461d      	movne	r5, r3
 802708e:	4615      	moveq	r5, r2
 8027090:	eeb0 3a67 	vmov.f32	s6, s15
 8027094:	eef0 2a47 	vmov.f32	s5, s14
 8027098:	e6b0      	b.n	8026dfc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802709a:	f111 0a01 	adds.w	sl, r1, #1
 802709e:	d487      	bmi.n	8026fb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80270a0:	45d6      	cmp	lr, sl
 80270a2:	db85      	blt.n	8026fb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80270a4:	f110 0a01 	adds.w	sl, r0, #1
 80270a8:	d482      	bmi.n	8026fb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80270aa:	4553      	cmp	r3, sl
 80270ac:	db80      	blt.n	8026fb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80270ae:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80270b0:	9101      	str	r1, [sp, #4]
 80270b2:	b21b      	sxth	r3, r3
 80270b4:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80270b8:	9300      	str	r3, [sp, #0]
 80270ba:	e9cd c704 	strd	ip, r7, [sp, #16]
 80270be:	fa0f f38e 	sxth.w	r3, lr
 80270c2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80270c4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80270c6:	4641      	mov	r1, r8
 80270c8:	f7ff fdb4 	bl	8026c34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 80270cc:	e770      	b.n	8026fb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80270ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80270d0:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80270d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80270d6:	1430      	asrs	r0, r6, #16
 80270d8:	1423      	asrs	r3, r4, #16
 80270da:	fb01 3000 	mla	r0, r1, r0, r3
 80270de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80270e0:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 80270e4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80270e8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80270ec:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80270f0:	8858      	ldrh	r0, [r3, #2]
 80270f2:	f1be 0f00 	cmp.w	lr, #0
 80270f6:	d00b      	beq.n	8027110 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 80270f8:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80270fc:	3901      	subs	r1, #1
 80270fe:	0049      	lsls	r1, r1, #1
 8027100:	3102      	adds	r1, #2
 8027102:	eb03 0b01 	add.w	fp, r3, r1
 8027106:	5a5b      	ldrh	r3, [r3, r1]
 8027108:	930e      	str	r3, [sp, #56]	; 0x38
 802710a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802710e:	930f      	str	r3, [sp, #60]	; 0x3c
 8027110:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8027114:	fb12 f30e 	smulbb	r3, r2, lr
 8027118:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802711c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8027120:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8027124:	10db      	asrs	r3, r3, #3
 8027126:	ea41 010c 	orr.w	r1, r1, ip
 802712a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802712e:	f1ce 0c10 	rsb	ip, lr, #16
 8027132:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8027136:	ebac 0c02 	sub.w	ip, ip, r2
 802713a:	ea4b 0000 	orr.w	r0, fp, r0
 802713e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8027142:	4350      	muls	r0, r2
 8027144:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8027146:	9f08      	ldr	r7, [sp, #32]
 8027148:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802714c:	fb0c 0c01 	mla	ip, ip, r1, r0
 8027150:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8027154:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8027158:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802715a:	980e      	ldr	r0, [sp, #56]	; 0x38
 802715c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8027160:	0412      	lsls	r2, r2, #16
 8027162:	ea4b 0101 	orr.w	r1, fp, r1
 8027166:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802716a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802716e:	fb03 c101 	mla	r1, r3, r1, ip
 8027172:	4302      	orrs	r2, r0
 8027174:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8027178:	fb03 1202 	mla	r2, r3, r2, r1
 802717c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8027180:	0952      	lsrs	r2, r2, #5
 8027182:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8027186:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802718a:	f8b9 2000 	ldrh.w	r2, [r9]
 802718e:	ea4b 0303 	orr.w	r3, fp, r3
 8027192:	b29b      	uxth	r3, r3
 8027194:	1211      	asrs	r1, r2, #8
 8027196:	1218      	asrs	r0, r3, #8
 8027198:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802719c:	fb11 f107 	smulbb	r1, r1, r7
 80271a0:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80271a4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80271a8:	00d2      	lsls	r2, r2, #3
 80271aa:	fb00 100a 	mla	r0, r0, sl, r1
 80271ae:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80271b2:	10d9      	asrs	r1, r3, #3
 80271b4:	b2d2      	uxtb	r2, r2
 80271b6:	00db      	lsls	r3, r3, #3
 80271b8:	fb1c fc07 	smulbb	ip, ip, r7
 80271bc:	fb12 f207 	smulbb	r2, r2, r7
 80271c0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80271c4:	b2db      	uxtb	r3, r3
 80271c6:	b280      	uxth	r0, r0
 80271c8:	fb01 c10a 	mla	r1, r1, sl, ip
 80271cc:	fb03 230a 	mla	r3, r3, sl, r2
 80271d0:	b29b      	uxth	r3, r3
 80271d2:	b289      	uxth	r1, r1
 80271d4:	1c42      	adds	r2, r0, #1
 80271d6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80271da:	f101 0c01 	add.w	ip, r1, #1
 80271de:	1c5a      	adds	r2, r3, #1
 80271e0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80271e4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80271e8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80271ea:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80271ee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80271f2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80271f6:	4310      	orrs	r0, r2
 80271f8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80271fc:	441c      	add	r4, r3
 80271fe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027200:	ea40 000c 	orr.w	r0, r0, ip
 8027204:	f829 0b02 	strh.w	r0, [r9], #2
 8027208:	441e      	add	r6, r3
 802720a:	f108 38ff 	add.w	r8, r8, #4294967295
 802720e:	e6fc      	b.n	802700a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8027210:	b013      	add	sp, #76	; 0x4c
 8027212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08027216 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8027216:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802721a:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 802721e:	fb0e 4703 	mla	r7, lr, r3, r4
 8027222:	f1be 0f00 	cmp.w	lr, #0
 8027226:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 802722a:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 802722e:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8027232:	8808      	ldrh	r0, [r1, #0]
 8027234:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8027238:	db60      	blt.n	80272fc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 802723a:	45f1      	cmp	r9, lr
 802723c:	dd5e      	ble.n	80272fc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 802723e:	2c00      	cmp	r4, #0
 8027240:	db5a      	blt.n	80272f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8027242:	42a3      	cmp	r3, r4
 8027244:	dd58      	ble.n	80272f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8027246:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 802724a:	1c62      	adds	r2, r4, #1
 802724c:	d459      	bmi.n	8027302 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802724e:	4293      	cmp	r3, r2
 8027250:	dd57      	ble.n	8027302 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8027252:	2d00      	cmp	r5, #0
 8027254:	d055      	beq.n	8027302 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8027256:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 802725a:	f11e 0e01 	adds.w	lr, lr, #1
 802725e:	d454      	bmi.n	802730a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8027260:	45f1      	cmp	r9, lr
 8027262:	dd52      	ble.n	802730a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8027264:	2e00      	cmp	r6, #0
 8027266:	d050      	beq.n	802730a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8027268:	2c00      	cmp	r4, #0
 802726a:	db4c      	blt.n	8027306 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 802726c:	42a3      	cmp	r3, r4
 802726e:	dd4a      	ble.n	8027306 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8027270:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8027274:	3401      	adds	r4, #1
 8027276:	d405      	bmi.n	8027284 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8027278:	42a3      	cmp	r3, r4
 802727a:	dd03      	ble.n	8027284 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802727c:	b115      	cbz	r5, 8027284 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802727e:	3301      	adds	r3, #1
 8027280:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8027284:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8027288:	fb15 f406 	smulbb	r4, r5, r6
 802728c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8027290:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8027294:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8027298:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 802729c:	ea43 0c0c 	orr.w	ip, r3, ip
 80272a0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80272a4:	f1c6 0310 	rsb	r3, r6, #16
 80272a8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80272ac:	1b5b      	subs	r3, r3, r5
 80272ae:	ea4e 0707 	orr.w	r7, lr, r7
 80272b2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80272b6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80272ba:	437d      	muls	r5, r7
 80272bc:	fb03 5c0c 	mla	ip, r3, ip, r5
 80272c0:	0403      	lsls	r3, r0, #16
 80272c2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80272c6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80272ca:	4318      	orrs	r0, r3
 80272cc:	0413      	lsls	r3, r2, #16
 80272ce:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80272d2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80272d6:	4313      	orrs	r3, r2
 80272d8:	fb04 c000 	mla	r0, r4, r0, ip
 80272dc:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80272e0:	fb06 0003 	mla	r0, r6, r3, r0
 80272e4:	0d43      	lsrs	r3, r0, #21
 80272e6:	0940      	lsrs	r0, r0, #5
 80272e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80272ec:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80272f0:	4318      	orrs	r0, r3
 80272f2:	8008      	strh	r0, [r1, #0]
 80272f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80272f8:	4684      	mov	ip, r0
 80272fa:	e7a6      	b.n	802724a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 80272fc:	4607      	mov	r7, r0
 80272fe:	4684      	mov	ip, r0
 8027300:	e7ab      	b.n	802725a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8027302:	4607      	mov	r7, r0
 8027304:	e7a9      	b.n	802725a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8027306:	4602      	mov	r2, r0
 8027308:	e7b4      	b.n	8027274 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 802730a:	4602      	mov	r2, r0
 802730c:	e7ba      	b.n	8027284 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0802730e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802730e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027312:	b08f      	sub	sp, #60	; 0x3c
 8027314:	461d      	mov	r5, r3
 8027316:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8027318:	920c      	str	r2, [sp, #48]	; 0x30
 802731a:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 802731e:	9107      	str	r1, [sp, #28]
 8027320:	6859      	ldr	r1, [r3, #4]
 8027322:	681b      	ldr	r3, [r3, #0]
 8027324:	900d      	str	r0, [sp, #52]	; 0x34
 8027326:	fb01 2707 	mla	r7, r1, r7, r2
 802732a:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 802732e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027330:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8027334:	f8d3 8000 	ldr.w	r8, [r3]
 8027338:	9b07      	ldr	r3, [sp, #28]
 802733a:	2b00      	cmp	r3, #0
 802733c:	dc03      	bgt.n	8027346 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802733e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8027340:	2b00      	cmp	r3, #0
 8027342:	f340 8181 	ble.w	8027648 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8027346:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027348:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802734c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027350:	1e48      	subs	r0, r1, #1
 8027352:	f102 3cff 	add.w	ip, r2, #4294967295
 8027356:	2d00      	cmp	r5, #0
 8027358:	f340 809b 	ble.w	8027492 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 802735c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8027360:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027364:	d406      	bmi.n	8027374 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8027366:	4586      	cmp	lr, r0
 8027368:	da04      	bge.n	8027374 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802736a:	2b00      	cmp	r3, #0
 802736c:	db02      	blt.n	8027374 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802736e:	4563      	cmp	r3, ip
 8027370:	f2c0 8090 	blt.w	8027494 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8027374:	f11e 0e01 	adds.w	lr, lr, #1
 8027378:	f100 8084 	bmi.w	8027484 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802737c:	4571      	cmp	r1, lr
 802737e:	f2c0 8081 	blt.w	8027484 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8027382:	3301      	adds	r3, #1
 8027384:	d47e      	bmi.n	8027484 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8027386:	429a      	cmp	r2, r3
 8027388:	db7c      	blt.n	8027484 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802738a:	46aa      	mov	sl, r5
 802738c:	46b9      	mov	r9, r7
 802738e:	f1ba 0f00 	cmp.w	sl, #0
 8027392:	f340 8099 	ble.w	80274c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8027396:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027398:	1421      	asrs	r1, r4, #16
 802739a:	ea4f 4026 	mov.w	r0, r6, asr #16
 802739e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80273a2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80273a6:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80273aa:	f100 80d0 	bmi.w	802754e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80273ae:	f10e 3bff 	add.w	fp, lr, #4294967295
 80273b2:	4559      	cmp	r1, fp
 80273b4:	f280 80cb 	bge.w	802754e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80273b8:	2800      	cmp	r0, #0
 80273ba:	f2c0 80c8 	blt.w	802754e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80273be:	f103 3bff 	add.w	fp, r3, #4294967295
 80273c2:	4558      	cmp	r0, fp
 80273c4:	f280 80c3 	bge.w	802754e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80273c8:	fa0f fe8e 	sxth.w	lr, lr
 80273cc:	fb00 110e 	mla	r1, r0, lr, r1
 80273d0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80273d4:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 80273d8:	8841      	ldrh	r1, [r0, #2]
 80273da:	f1bc 0f00 	cmp.w	ip, #0
 80273de:	d00b      	beq.n	80273f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 80273e0:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 80273e4:	3b01      	subs	r3, #1
 80273e6:	005b      	lsls	r3, r3, #1
 80273e8:	3302      	adds	r3, #2
 80273ea:	eb00 0e03 	add.w	lr, r0, r3
 80273ee:	5ac3      	ldrh	r3, [r0, r3]
 80273f0:	9308      	str	r3, [sp, #32]
 80273f2:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80273f6:	9309      	str	r3, [sp, #36]	; 0x24
 80273f8:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80273fc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8027400:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8027404:	ea40 000b 	orr.w	r0, r0, fp
 8027408:	fb12 f30c 	smulbb	r3, r2, ip
 802740c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8027410:	10db      	asrs	r3, r3, #3
 8027412:	f1cc 0e10 	rsb	lr, ip, #16
 8027416:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802741a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802741e:	ebae 0e02 	sub.w	lr, lr, r2
 8027422:	ea4b 0101 	orr.w	r1, fp, r1
 8027426:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802742a:	4351      	muls	r1, r2
 802742c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802742e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8027432:	fb0e 1e00 	mla	lr, lr, r0, r1
 8027436:	0410      	lsls	r0, r2, #16
 8027438:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802743c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8027440:	4310      	orrs	r0, r2
 8027442:	9a08      	ldr	r2, [sp, #32]
 8027444:	9908      	ldr	r1, [sp, #32]
 8027446:	0412      	lsls	r2, r2, #16
 8027448:	fb03 e000 	mla	r0, r3, r0, lr
 802744c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8027450:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8027454:	ea42 020e 	orr.w	r2, r2, lr
 8027458:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802745c:	fb03 0302 	mla	r3, r3, r2, r0
 8027460:	0d5a      	lsrs	r2, r3, #21
 8027462:	095b      	lsrs	r3, r3, #5
 8027464:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027468:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802746c:	4313      	orrs	r3, r2
 802746e:	f8a9 3000 	strh.w	r3, [r9]
 8027472:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8027474:	441c      	add	r4, r3
 8027476:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027478:	f109 0902 	add.w	r9, r9, #2
 802747c:	441e      	add	r6, r3
 802747e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8027482:	e784      	b.n	802738e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8027484:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8027486:	441c      	add	r4, r3
 8027488:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802748a:	3d01      	subs	r5, #1
 802748c:	441e      	add	r6, r3
 802748e:	3702      	adds	r7, #2
 8027490:	e761      	b.n	8027356 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8027492:	d01d      	beq.n	80274d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8027494:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8027496:	1e6b      	subs	r3, r5, #1
 8027498:	fb00 4003 	mla	r0, r0, r3, r4
 802749c:	1400      	asrs	r0, r0, #16
 802749e:	f53f af74 	bmi.w	802738a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80274a2:	3901      	subs	r1, #1
 80274a4:	4288      	cmp	r0, r1
 80274a6:	f6bf af70 	bge.w	802738a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80274aa:	991c      	ldr	r1, [sp, #112]	; 0x70
 80274ac:	fb01 6303 	mla	r3, r1, r3, r6
 80274b0:	141b      	asrs	r3, r3, #16
 80274b2:	f53f af6a 	bmi.w	802738a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80274b6:	3a01      	subs	r2, #1
 80274b8:	4293      	cmp	r3, r2
 80274ba:	f6bf af66 	bge.w	802738a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80274be:	46a9      	mov	r9, r5
 80274c0:	46ba      	mov	sl, r7
 80274c2:	f1b9 0f00 	cmp.w	r9, #0
 80274c6:	dc5a      	bgt.n	802757e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 80274c8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80274cc:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80274d0:	9b07      	ldr	r3, [sp, #28]
 80274d2:	2b00      	cmp	r3, #0
 80274d4:	f340 80b8 	ble.w	8027648 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80274d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80274dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80274e0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80274e4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80274e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80274ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80274ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80274f2:	eef0 6a62 	vmov.f32	s13, s5
 80274f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80274fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80274fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8027502:	ee16 4a90 	vmov	r4, s13
 8027506:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802750a:	eef0 6a43 	vmov.f32	s13, s6
 802750e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8027512:	ee12 2a90 	vmov	r2, s5
 8027516:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802751a:	fb92 f3f3 	sdiv	r3, r2, r3
 802751e:	ee13 2a10 	vmov	r2, s6
 8027522:	931b      	str	r3, [sp, #108]	; 0x6c
 8027524:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027526:	fb92 f3f3 	sdiv	r3, r2, r3
 802752a:	931c      	str	r3, [sp, #112]	; 0x70
 802752c:	9b07      	ldr	r3, [sp, #28]
 802752e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8027530:	3b01      	subs	r3, #1
 8027532:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027536:	9307      	str	r3, [sp, #28]
 8027538:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802753a:	ee16 6a90 	vmov	r6, s13
 802753e:	bf14      	ite	ne
 8027540:	461d      	movne	r5, r3
 8027542:	4615      	moveq	r5, r2
 8027544:	eeb0 3a67 	vmov.f32	s6, s15
 8027548:	eef0 2a47 	vmov.f32	s5, s14
 802754c:	e6f4      	b.n	8027338 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 802754e:	f111 0b01 	adds.w	fp, r1, #1
 8027552:	d48e      	bmi.n	8027472 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8027554:	45de      	cmp	lr, fp
 8027556:	db8c      	blt.n	8027472 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8027558:	f110 0b01 	adds.w	fp, r0, #1
 802755c:	d489      	bmi.n	8027472 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802755e:	455b      	cmp	r3, fp
 8027560:	db87      	blt.n	8027472 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8027562:	b21b      	sxth	r3, r3
 8027564:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8027568:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 802756c:	9300      	str	r3, [sp, #0]
 802756e:	4642      	mov	r2, r8
 8027570:	fa0f f38e 	sxth.w	r3, lr
 8027574:	4649      	mov	r1, r9
 8027576:	980d      	ldr	r0, [sp, #52]	; 0x34
 8027578:	f7ff fe4d 	bl	8027216 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 802757c:	e779      	b.n	8027472 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802757e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027580:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8027584:	1420      	asrs	r0, r4, #16
 8027586:	1431      	asrs	r1, r6, #16
 8027588:	fb03 0101 	mla	r1, r3, r1, r0
 802758c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8027590:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8027594:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8027598:	8841      	ldrh	r1, [r0, #2]
 802759a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802759e:	f1be 0f00 	cmp.w	lr, #0
 80275a2:	d00b      	beq.n	80275bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80275a4:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80275a8:	3b01      	subs	r3, #1
 80275aa:	005b      	lsls	r3, r3, #1
 80275ac:	3302      	adds	r3, #2
 80275ae:	eb00 0b03 	add.w	fp, r0, r3
 80275b2:	5ac3      	ldrh	r3, [r0, r3]
 80275b4:	930a      	str	r3, [sp, #40]	; 0x28
 80275b6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80275ba:	930b      	str	r3, [sp, #44]	; 0x2c
 80275bc:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80275c0:	fb12 f30e 	smulbb	r3, r2, lr
 80275c4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80275c8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80275cc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80275d0:	10db      	asrs	r3, r3, #3
 80275d2:	ea40 000c 	orr.w	r0, r0, ip
 80275d6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80275da:	f1ce 0c10 	rsb	ip, lr, #16
 80275de:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80275e2:	ebac 0c02 	sub.w	ip, ip, r2
 80275e6:	ea4b 0101 	orr.w	r1, fp, r1
 80275ea:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80275ee:	4351      	muls	r1, r2
 80275f0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80275f2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80275f6:	fb0c 1c00 	mla	ip, ip, r0, r1
 80275fa:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80275fe:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8027602:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027604:	990a      	ldr	r1, [sp, #40]	; 0x28
 8027606:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802760a:	0412      	lsls	r2, r2, #16
 802760c:	ea4b 0000 	orr.w	r0, fp, r0
 8027610:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8027614:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8027618:	fb03 c000 	mla	r0, r3, r0, ip
 802761c:	ea42 0b0b 	orr.w	fp, r2, fp
 8027620:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8027624:	fb03 000b 	mla	r0, r3, fp, r0
 8027628:	0d43      	lsrs	r3, r0, #21
 802762a:	0940      	lsrs	r0, r0, #5
 802762c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027630:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8027634:	4318      	orrs	r0, r3
 8027636:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8027638:	f82a 0b02 	strh.w	r0, [sl], #2
 802763c:	441c      	add	r4, r3
 802763e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027640:	f109 39ff 	add.w	r9, r9, #4294967295
 8027644:	441e      	add	r6, r3
 8027646:	e73c      	b.n	80274c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8027648:	b00f      	add	sp, #60	; 0x3c
 802764a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802764e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 802764e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027652:	b085      	sub	sp, #20
 8027654:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8027658:	9102      	str	r1, [sp, #8]
 802765a:	2c00      	cmp	r4, #0
 802765c:	fb04 7103 	mla	r1, r4, r3, r7
 8027660:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8027664:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8027668:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802766c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8027670:	f2c0 811b 	blt.w	80278aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8027674:	45a6      	cmp	lr, r4
 8027676:	f340 8118 	ble.w	80278aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802767a:	2f00      	cmp	r7, #0
 802767c:	f2c0 8113 	blt.w	80278a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8027680:	42bb      	cmp	r3, r7
 8027682:	f340 8110 	ble.w	80278a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8027686:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802768a:	1c7a      	adds	r2, r7, #1
 802768c:	f100 8110 	bmi.w	80278b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8027690:	4293      	cmp	r3, r2
 8027692:	f340 810d 	ble.w	80278b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8027696:	2e00      	cmp	r6, #0
 8027698:	f000 810c 	beq.w	80278b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 802769c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80276a0:	3401      	adds	r4, #1
 80276a2:	f100 810b 	bmi.w	80278bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80276a6:	45a6      	cmp	lr, r4
 80276a8:	f340 8108 	ble.w	80278bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80276ac:	2800      	cmp	r0, #0
 80276ae:	f000 8108 	beq.w	80278c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80276b2:	2f00      	cmp	r7, #0
 80276b4:	f2c0 8100 	blt.w	80278b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80276b8:	42bb      	cmp	r3, r7
 80276ba:	f340 80fd 	ble.w	80278b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80276be:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80276c2:	3701      	adds	r7, #1
 80276c4:	f100 8100 	bmi.w	80278c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80276c8:	42bb      	cmp	r3, r7
 80276ca:	f340 80fd 	ble.w	80278c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80276ce:	2e00      	cmp	r6, #0
 80276d0:	f000 80fc 	beq.w	80278cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 80276d4:	3301      	adds	r3, #1
 80276d6:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 80276da:	b2b6      	uxth	r6, r6
 80276dc:	b280      	uxth	r0, r0
 80276de:	fb00 fe06 	mul.w	lr, r0, r6
 80276e2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80276e6:	0136      	lsls	r6, r6, #4
 80276e8:	eba6 070e 	sub.w	r7, r6, lr
 80276ec:	b280      	uxth	r0, r0
 80276ee:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80276f2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80276f6:	b2bf      	uxth	r7, r7
 80276f8:	1a1b      	subs	r3, r3, r0
 80276fa:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80276fe:	b29b      	uxth	r3, r3
 8027700:	fb0a f607 	mul.w	r6, sl, r7
 8027704:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8027708:	fb0b 6603 	mla	r6, fp, r3, r6
 802770c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8027710:	fb00 6609 	mla	r6, r0, r9, r6
 8027714:	fb0e 6608 	mla	r6, lr, r8, r6
 8027718:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802771c:	9600      	str	r6, [sp, #0]
 802771e:	2e00      	cmp	r6, #0
 8027720:	f000 80be 	beq.w	80278a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8027724:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027728:	fb0b fc0c 	mul.w	ip, fp, ip
 802772c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8027730:	fb0b f505 	mul.w	r5, fp, r5
 8027734:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8027738:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802773c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027740:	44dc      	add	ip, fp
 8027742:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027746:	9501      	str	r5, [sp, #4]
 8027748:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802774c:	9503      	str	r5, [sp, #12]
 802774e:	9d01      	ldr	r5, [sp, #4]
 8027750:	9e02      	ldr	r6, [sp, #8]
 8027752:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8027756:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802775a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802775e:	fb0a fc0c 	mul.w	ip, sl, ip
 8027762:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8027766:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802776a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802776e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027772:	4465      	add	r5, ip
 8027774:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8027778:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802777c:	fb09 fc0c 	mul.w	ip, r9, ip
 8027780:	fb09 f904 	mul.w	r9, r9, r4
 8027784:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8027788:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802778c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8027790:	fb08 f404 	mul.w	r4, r8, r4
 8027794:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027798:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802779c:	fb08 f802 	mul.w	r8, r8, r2
 80277a0:	fb0a fa01 	mul.w	sl, sl, r1
 80277a4:	0a22      	lsrs	r2, r4, #8
 80277a6:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80277aa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80277ae:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80277b2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80277b6:	4414      	add	r4, r2
 80277b8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80277bc:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80277c0:	0a2d      	lsrs	r5, r5, #8
 80277c2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80277c6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80277ca:	9a03      	ldr	r2, [sp, #12]
 80277cc:	8836      	ldrh	r6, [r6, #0]
 80277ce:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80277d2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80277d6:	437d      	muls	r5, r7
 80277d8:	4461      	add	r1, ip
 80277da:	0a24      	lsrs	r4, r4, #8
 80277dc:	fb02 5503 	mla	r5, r2, r3, r5
 80277e0:	0a09      	lsrs	r1, r1, #8
 80277e2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80277e6:	fb04 540e 	mla	r4, r4, lr, r5
 80277ea:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80277ee:	fb01 4100 	mla	r1, r1, r0, r4
 80277f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80277f6:	0a09      	lsrs	r1, r1, #8
 80277f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80277fc:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8027800:	fb07 f70a 	mul.w	r7, r7, sl
 8027804:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027808:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802780c:	fb03 7101 	mla	r1, r3, r1, r7
 8027810:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027814:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8027818:	fb0e 1e08 	mla	lr, lr, r8, r1
 802781c:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8027820:	fb00 e101 	mla	r1, r0, r1, lr
 8027824:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8027828:	9a00      	ldr	r2, [sp, #0]
 802782a:	b287      	uxth	r7, r0
 802782c:	437a      	muls	r2, r7
 802782e:	0a09      	lsrs	r1, r1, #8
 8027830:	1c53      	adds	r3, r2, #1
 8027832:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027836:	4321      	orrs	r1, r4
 8027838:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802783c:	1235      	asrs	r5, r6, #8
 802783e:	0c0a      	lsrs	r2, r1, #16
 8027840:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8027844:	b2db      	uxtb	r3, r3
 8027846:	fb12 f207 	smulbb	r2, r2, r7
 802784a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802784e:	fb05 2503 	mla	r5, r5, r3, r2
 8027852:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8027856:	10f2      	asrs	r2, r6, #3
 8027858:	b2c8      	uxtb	r0, r1
 802785a:	00f6      	lsls	r6, r6, #3
 802785c:	fb14 f407 	smulbb	r4, r4, r7
 8027860:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8027864:	b2f6      	uxtb	r6, r6
 8027866:	fb10 f007 	smulbb	r0, r0, r7
 802786a:	fb02 4203 	mla	r2, r2, r3, r4
 802786e:	b2ad      	uxth	r5, r5
 8027870:	fb06 0303 	mla	r3, r6, r3, r0
 8027874:	b299      	uxth	r1, r3
 8027876:	b294      	uxth	r4, r2
 8027878:	1c6b      	adds	r3, r5, #1
 802787a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802787e:	1c62      	adds	r2, r4, #1
 8027880:	1c4b      	adds	r3, r1, #1
 8027882:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8027886:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802788a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802788e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8027892:	0952      	lsrs	r2, r2, #5
 8027894:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027898:	432b      	orrs	r3, r5
 802789a:	4313      	orrs	r3, r2
 802789c:	9a02      	ldr	r2, [sp, #8]
 802789e:	8013      	strh	r3, [r2, #0]
 80278a0:	b005      	add	sp, #20
 80278a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80278a6:	2500      	movs	r5, #0
 80278a8:	e6ef      	b.n	802768a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80278aa:	2100      	movs	r1, #0
 80278ac:	460d      	mov	r5, r1
 80278ae:	e6f7      	b.n	80276a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80278b0:	2100      	movs	r1, #0
 80278b2:	e6f5      	b.n	80276a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80278b4:	4631      	mov	r1, r6
 80278b6:	e6f3      	b.n	80276a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80278b8:	2400      	movs	r4, #0
 80278ba:	e702      	b.n	80276c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80278bc:	2200      	movs	r2, #0
 80278be:	4614      	mov	r4, r2
 80278c0:	e70b      	b.n	80276da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80278c2:	4602      	mov	r2, r0
 80278c4:	4604      	mov	r4, r0
 80278c6:	e708      	b.n	80276da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80278c8:	2200      	movs	r2, #0
 80278ca:	e706      	b.n	80276da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80278cc:	4632      	mov	r2, r6
 80278ce:	e704      	b.n	80276da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080278d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80278d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80278d4:	b09d      	sub	sp, #116	; 0x74
 80278d6:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80278da:	9219      	str	r2, [sp, #100]	; 0x64
 80278dc:	9307      	str	r3, [sp, #28]
 80278de:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80278e0:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80278e4:	931a      	str	r3, [sp, #104]	; 0x68
 80278e6:	9117      	str	r1, [sp, #92]	; 0x5c
 80278e8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80278ec:	901b      	str	r0, [sp, #108]	; 0x6c
 80278ee:	6850      	ldr	r0, [r2, #4]
 80278f0:	6812      	ldr	r2, [r2, #0]
 80278f2:	fb00 1303 	mla	r3, r0, r3, r1
 80278f6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80278fa:	930a      	str	r3, [sp, #40]	; 0x28
 80278fc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80278fe:	681b      	ldr	r3, [r3, #0]
 8027900:	9310      	str	r3, [sp, #64]	; 0x40
 8027902:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8027906:	930b      	str	r3, [sp, #44]	; 0x2c
 8027908:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802790a:	2b00      	cmp	r3, #0
 802790c:	dc03      	bgt.n	8027916 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 802790e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8027910:	2b00      	cmp	r3, #0
 8027912:	f340 8375 	ble.w	8028000 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8027916:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027918:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802791c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027920:	1e48      	subs	r0, r1, #1
 8027922:	1e57      	subs	r7, r2, #1
 8027924:	9b07      	ldr	r3, [sp, #28]
 8027926:	2b00      	cmp	r3, #0
 8027928:	f340 818e 	ble.w	8027c48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 802792c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027930:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027934:	d406      	bmi.n	8027944 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8027936:	4584      	cmp	ip, r0
 8027938:	da04      	bge.n	8027944 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802793a:	2b00      	cmp	r3, #0
 802793c:	db02      	blt.n	8027944 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802793e:	42bb      	cmp	r3, r7
 8027940:	f2c0 8183 	blt.w	8027c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8027944:	f11c 0c01 	adds.w	ip, ip, #1
 8027948:	f100 8173 	bmi.w	8027c32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802794c:	4561      	cmp	r1, ip
 802794e:	f2c0 8170 	blt.w	8027c32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027952:	3301      	adds	r3, #1
 8027954:	f100 816d 	bmi.w	8027c32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027958:	429a      	cmp	r2, r3
 802795a:	f2c0 816a 	blt.w	8027c32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802795e:	9b07      	ldr	r3, [sp, #28]
 8027960:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8027962:	9318      	str	r3, [sp, #96]	; 0x60
 8027964:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027966:	2b00      	cmp	r3, #0
 8027968:	f340 818c 	ble.w	8027c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 802796c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 802796e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027970:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8027974:	689b      	ldr	r3, [r3, #8]
 8027976:	1422      	asrs	r2, r4, #16
 8027978:	ea4f 4c26 	mov.w	ip, r6, asr #16
 802797c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8027980:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8027984:	f100 81cd 	bmi.w	8027d22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8027988:	f103 38ff 	add.w	r8, r3, #4294967295
 802798c:	4542      	cmp	r2, r8
 802798e:	f280 81c8 	bge.w	8027d22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8027992:	f1bc 0f00 	cmp.w	ip, #0
 8027996:	f2c0 81c4 	blt.w	8027d22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802799a:	f10e 38ff 	add.w	r8, lr, #4294967295
 802799e:	45c4      	cmp	ip, r8
 80279a0:	f280 81bf 	bge.w	8027d22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80279a4:	b21b      	sxth	r3, r3
 80279a6:	fb0c 2203 	mla	r2, ip, r3, r2
 80279aa:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80279ac:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80279b0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80279b4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80279b8:	2800      	cmp	r0, #0
 80279ba:	f000 81a9 	beq.w	8027d10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80279be:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80279c2:	950c      	str	r5, [sp, #48]	; 0x30
 80279c4:	0e2d      	lsrs	r5, r5, #24
 80279c6:	9513      	str	r5, [sp, #76]	; 0x4c
 80279c8:	b181      	cbz	r1, 80279ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80279ca:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80279ce:	3b01      	subs	r3, #1
 80279d0:	009b      	lsls	r3, r3, #2
 80279d2:	3304      	adds	r3, #4
 80279d4:	eb08 0c03 	add.w	ip, r8, r3
 80279d8:	f858 3003 	ldr.w	r3, [r8, r3]
 80279dc:	9308      	str	r3, [sp, #32]
 80279de:	0e1b      	lsrs	r3, r3, #24
 80279e0:	9311      	str	r3, [sp, #68]	; 0x44
 80279e2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80279e6:	930d      	str	r3, [sp, #52]	; 0x34
 80279e8:	0e1b      	lsrs	r3, r3, #24
 80279ea:	9314      	str	r3, [sp, #80]	; 0x50
 80279ec:	b280      	uxth	r0, r0
 80279ee:	b289      	uxth	r1, r1
 80279f0:	fb00 f901 	mul.w	r9, r0, r1
 80279f4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80279f8:	0100      	lsls	r0, r0, #4
 80279fa:	eba0 0809 	sub.w	r8, r0, r9
 80279fe:	b289      	uxth	r1, r1
 8027a00:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8027a04:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8027a06:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027a08:	fa1f f888 	uxth.w	r8, r8
 8027a0c:	1a5b      	subs	r3, r3, r1
 8027a0e:	b29b      	uxth	r3, r3
 8027a10:	fb08 f000 	mul.w	r0, r8, r0
 8027a14:	fb03 000e 	mla	r0, r3, lr, r0
 8027a18:	fb01 0005 	mla	r0, r1, r5, r0
 8027a1c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027a1e:	fb09 0005 	mla	r0, r9, r5, r0
 8027a22:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8027a26:	2800      	cmp	r0, #0
 8027a28:	f000 80fa 	beq.w	8027c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027a2c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8027a30:	d01b      	beq.n	8027a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8027a32:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8027a36:	fb0e fa0a 	mul.w	sl, lr, sl
 8027a3a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027a3e:	fb0e fe02 	mul.w	lr, lr, r2
 8027a42:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8027a46:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027a4a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027a4e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8027a52:	4452      	add	r2, sl
 8027a54:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027a58:	0a12      	lsrs	r2, r2, #8
 8027a5a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027a5e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027a62:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8027a66:	ea42 020c 	orr.w	r2, r2, ip
 8027a6a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027a6c:	2dff      	cmp	r5, #255	; 0xff
 8027a6e:	d021      	beq.n	8027ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027a70:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027a72:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027a76:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027a78:	fb05 fb0b 	mul.w	fp, r5, fp
 8027a7c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027a7e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027a82:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027a84:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027a88:	fb05 fa0a 	mul.w	sl, r5, sl
 8027a8c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027a90:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027a94:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027a98:	44de      	add	lr, fp
 8027a9a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027a9e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027aa2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027aa6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027aaa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027aae:	ea4e 050a 	orr.w	r5, lr, sl
 8027ab2:	950c      	str	r5, [sp, #48]	; 0x30
 8027ab4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027ab6:	2dff      	cmp	r5, #255	; 0xff
 8027ab8:	d021      	beq.n	8027afe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8027aba:	9d08      	ldr	r5, [sp, #32]
 8027abc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027ac0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027ac2:	fb05 fb0b 	mul.w	fp, r5, fp
 8027ac6:	9d08      	ldr	r5, [sp, #32]
 8027ac8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027acc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027ace:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027ad2:	fb05 fa0a 	mul.w	sl, r5, sl
 8027ad6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027ada:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027ade:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027ae2:	44de      	add	lr, fp
 8027ae4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027ae8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027aec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027af0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027af4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027af8:	ea4e 050a 	orr.w	r5, lr, sl
 8027afc:	9508      	str	r5, [sp, #32]
 8027afe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027b00:	2dff      	cmp	r5, #255	; 0xff
 8027b02:	d021      	beq.n	8027b48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8027b04:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8027b06:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027b0a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027b0c:	fb05 fb0b 	mul.w	fp, r5, fp
 8027b10:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8027b12:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027b16:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027b18:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027b1c:	fb05 fa0a 	mul.w	sl, r5, sl
 8027b20:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027b24:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027b28:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027b2c:	44de      	add	lr, fp
 8027b2e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027b32:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027b36:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027b3a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027b3e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027b42:	ea4e 050a 	orr.w	r5, lr, sl
 8027b46:	950d      	str	r5, [sp, #52]	; 0x34
 8027b48:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027b4a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027b4e:	9d08      	ldr	r5, [sp, #32]
 8027b50:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8027b54:	fb08 fc0c 	mul.w	ip, r8, ip
 8027b58:	fb03 cc0e 	mla	ip, r3, lr, ip
 8027b5c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027b60:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8027b62:	fb01 cc0e 	mla	ip, r1, lr, ip
 8027b66:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027b6a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027b6c:	fb09 cc0e 	mla	ip, r9, lr, ip
 8027b70:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027b74:	fb08 f80e 	mul.w	r8, r8, lr
 8027b78:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027b7c:	fb03 8202 	mla	r2, r3, r2, r8
 8027b80:	9b08      	ldr	r3, [sp, #32]
 8027b82:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027b84:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8027b88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8027b8a:	fb01 220a 	mla	r2, r1, sl, r2
 8027b8e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8027b92:	fb09 2901 	mla	r9, r9, r1, r2
 8027b96:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8027b98:	883b      	ldrh	r3, [r7, #0]
 8027b9a:	4342      	muls	r2, r0
 8027b9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027ba0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027ba4:	1c50      	adds	r0, r2, #1
 8027ba6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027baa:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8027bae:	ea4c 0c09 	orr.w	ip, ip, r9
 8027bb2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8027bb6:	1219      	asrs	r1, r3, #8
 8027bb8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8027bbc:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8027bc0:	b2c0      	uxtb	r0, r0
 8027bc2:	fb12 f205 	smulbb	r2, r2, r5
 8027bc6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8027bca:	fb01 2100 	mla	r1, r1, r0, r2
 8027bce:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8027bd2:	10da      	asrs	r2, r3, #3
 8027bd4:	fa5f fc8c 	uxtb.w	ip, ip
 8027bd8:	00db      	lsls	r3, r3, #3
 8027bda:	fb1c fc05 	smulbb	ip, ip, r5
 8027bde:	b2db      	uxtb	r3, r3
 8027be0:	b289      	uxth	r1, r1
 8027be2:	fb03 c300 	mla	r3, r3, r0, ip
 8027be6:	fa1f fc83 	uxth.w	ip, r3
 8027bea:	1c4b      	adds	r3, r1, #1
 8027bec:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8027bf0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8027bf4:	fb1e fe05 	smulbb	lr, lr, r5
 8027bf8:	f10c 0301 	add.w	r3, ip, #1
 8027bfc:	fb02 e200 	mla	r2, r2, r0, lr
 8027c00:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8027c04:	b292      	uxth	r2, r2
 8027c06:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8027c0a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8027c0e:	430b      	orrs	r3, r1
 8027c10:	1c51      	adds	r1, r2, #1
 8027c12:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8027c16:	0952      	lsrs	r2, r2, #5
 8027c18:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027c1c:	4313      	orrs	r3, r2
 8027c1e:	803b      	strh	r3, [r7, #0]
 8027c20:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8027c22:	441c      	add	r4, r3
 8027c24:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8027c26:	441e      	add	r6, r3
 8027c28:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027c2a:	3b01      	subs	r3, #1
 8027c2c:	3702      	adds	r7, #2
 8027c2e:	9318      	str	r3, [sp, #96]	; 0x60
 8027c30:	e698      	b.n	8027964 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8027c32:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8027c34:	441c      	add	r4, r3
 8027c36:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8027c38:	441e      	add	r6, r3
 8027c3a:	9b07      	ldr	r3, [sp, #28]
 8027c3c:	3b01      	subs	r3, #1
 8027c3e:	9307      	str	r3, [sp, #28]
 8027c40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027c42:	3302      	adds	r3, #2
 8027c44:	930a      	str	r3, [sp, #40]	; 0x28
 8027c46:	e66d      	b.n	8027924 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8027c48:	d023      	beq.n	8027c92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8027c4a:	9b07      	ldr	r3, [sp, #28]
 8027c4c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8027c4e:	3b01      	subs	r3, #1
 8027c50:	fb00 4003 	mla	r0, r0, r3, r4
 8027c54:	1400      	asrs	r0, r0, #16
 8027c56:	f53f ae82 	bmi.w	802795e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027c5a:	3901      	subs	r1, #1
 8027c5c:	4288      	cmp	r0, r1
 8027c5e:	f6bf ae7e 	bge.w	802795e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027c62:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8027c64:	fb01 6303 	mla	r3, r1, r3, r6
 8027c68:	141b      	asrs	r3, r3, #16
 8027c6a:	f53f ae78 	bmi.w	802795e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027c6e:	3a01      	subs	r2, #1
 8027c70:	4293      	cmp	r3, r2
 8027c72:	f6bf ae74 	bge.w	802795e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027c76:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8027c7a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8027c7e:	f1bb 0f00 	cmp.w	fp, #0
 8027c82:	dc6c      	bgt.n	8027d5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8027c84:	9b07      	ldr	r3, [sp, #28]
 8027c86:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027c8a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027c8c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8027c90:	930a      	str	r3, [sp, #40]	; 0x28
 8027c92:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027c94:	2b00      	cmp	r3, #0
 8027c96:	f340 81b3 	ble.w	8028000 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8027c9a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027c9e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027ca2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027ca6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027ca8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027cac:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027cb0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8027cb4:	eef0 6a62 	vmov.f32	s13, s5
 8027cb8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027cbc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027cc0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8027cc4:	ee16 4a90 	vmov	r4, s13
 8027cc8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027ccc:	eef0 6a43 	vmov.f32	s13, s6
 8027cd0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8027cd4:	ee12 2a90 	vmov	r2, s5
 8027cd8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027cdc:	fb92 f3f3 	sdiv	r3, r2, r3
 8027ce0:	ee13 2a10 	vmov	r2, s6
 8027ce4:	9329      	str	r3, [sp, #164]	; 0xa4
 8027ce6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027ce8:	fb92 f3f3 	sdiv	r3, r2, r3
 8027cec:	932a      	str	r3, [sp, #168]	; 0xa8
 8027cee:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027cf0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8027cf2:	3b01      	subs	r3, #1
 8027cf4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027cf8:	9317      	str	r3, [sp, #92]	; 0x5c
 8027cfa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027cfc:	bf08      	it	eq
 8027cfe:	4613      	moveq	r3, r2
 8027d00:	ee16 6a90 	vmov	r6, s13
 8027d04:	9307      	str	r3, [sp, #28]
 8027d06:	eeb0 3a67 	vmov.f32	s6, s15
 8027d0a:	eef0 2a47 	vmov.f32	s5, s14
 8027d0e:	e5fb      	b.n	8027908 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8027d10:	2900      	cmp	r1, #0
 8027d12:	f43f ae6b 	beq.w	80279ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8027d16:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8027d1a:	9308      	str	r3, [sp, #32]
 8027d1c:	0e1b      	lsrs	r3, r3, #24
 8027d1e:	9311      	str	r3, [sp, #68]	; 0x44
 8027d20:	e664      	b.n	80279ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8027d22:	f112 0801 	adds.w	r8, r2, #1
 8027d26:	f53f af7b 	bmi.w	8027c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027d2a:	4543      	cmp	r3, r8
 8027d2c:	f6ff af78 	blt.w	8027c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027d30:	f11c 0801 	adds.w	r8, ip, #1
 8027d34:	f53f af74 	bmi.w	8027c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027d38:	45c6      	cmp	lr, r8
 8027d3a:	f6ff af71 	blt.w	8027c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027d3e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8027d40:	9201      	str	r2, [sp, #4]
 8027d42:	fa0f f28e 	sxth.w	r2, lr
 8027d46:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8027d4a:	e9cd c002 	strd	ip, r0, [sp, #8]
 8027d4e:	9200      	str	r2, [sp, #0]
 8027d50:	b21b      	sxth	r3, r3
 8027d52:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8027d54:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8027d56:	4639      	mov	r1, r7
 8027d58:	f7ff fc79 	bl	802764e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8027d5c:	e760      	b.n	8027c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027d5e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027d60:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027d62:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027d66:	1427      	asrs	r7, r4, #16
 8027d68:	1433      	asrs	r3, r6, #16
 8027d6a:	fb01 7303 	mla	r3, r1, r3, r7
 8027d6e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8027d72:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8027d76:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027d7a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027d7e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8027d82:	2a00      	cmp	r2, #0
 8027d84:	f000 8133 	beq.w	8027fee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8027d88:	687d      	ldr	r5, [r7, #4]
 8027d8a:	950e      	str	r5, [sp, #56]	; 0x38
 8027d8c:	0e2d      	lsrs	r5, r5, #24
 8027d8e:	9515      	str	r5, [sp, #84]	; 0x54
 8027d90:	b178      	cbz	r0, 8027db2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8027d92:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8027d96:	3901      	subs	r1, #1
 8027d98:	0089      	lsls	r1, r1, #2
 8027d9a:	3104      	adds	r1, #4
 8027d9c:	eb07 0e01 	add.w	lr, r7, r1
 8027da0:	5879      	ldr	r1, [r7, r1]
 8027da2:	9109      	str	r1, [sp, #36]	; 0x24
 8027da4:	0e09      	lsrs	r1, r1, #24
 8027da6:	9112      	str	r1, [sp, #72]	; 0x48
 8027da8:	f8de 1004 	ldr.w	r1, [lr, #4]
 8027dac:	910f      	str	r1, [sp, #60]	; 0x3c
 8027dae:	0e09      	lsrs	r1, r1, #24
 8027db0:	9116      	str	r1, [sp, #88]	; 0x58
 8027db2:	b292      	uxth	r2, r2
 8027db4:	b280      	uxth	r0, r0
 8027db6:	fb02 f800 	mul.w	r8, r2, r0
 8027dba:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8027dbe:	0112      	lsls	r2, r2, #4
 8027dc0:	eba2 0e08 	sub.w	lr, r2, r8
 8027dc4:	b280      	uxth	r0, r0
 8027dc6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8027dca:	9915      	ldr	r1, [sp, #84]	; 0x54
 8027dcc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027dce:	fa1f fe8e 	uxth.w	lr, lr
 8027dd2:	1a12      	subs	r2, r2, r0
 8027dd4:	b292      	uxth	r2, r2
 8027dd6:	fb0e f101 	mul.w	r1, lr, r1
 8027dda:	fb02 110c 	mla	r1, r2, ip, r1
 8027dde:	fb00 1105 	mla	r1, r0, r5, r1
 8027de2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027de4:	fb08 1105 	mla	r1, r8, r5, r1
 8027de8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8027dec:	2900      	cmp	r1, #0
 8027dee:	f000 80f5 	beq.w	8027fdc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8027df2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8027df6:	d019      	beq.n	8027e2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8027df8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8027dfc:	fb0c fa0a 	mul.w	sl, ip, sl
 8027e00:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8027e04:	fb0c fc03 	mul.w	ip, ip, r3
 8027e08:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8027e0c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027e10:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027e14:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8027e18:	4453      	add	r3, sl
 8027e1a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8027e1e:	0a1b      	lsrs	r3, r3, #8
 8027e20:	0a3f      	lsrs	r7, r7, #8
 8027e22:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027e26:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8027e2a:	433b      	orrs	r3, r7
 8027e2c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027e2e:	2dff      	cmp	r5, #255	; 0xff
 8027e30:	d020      	beq.n	8027e74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8027e32:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027e34:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027e38:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027e3a:	436f      	muls	r7, r5
 8027e3c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027e3e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027e42:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027e44:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027e48:	fb05 fa0a 	mul.w	sl, r5, sl
 8027e4c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027e50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027e54:	44bc      	add	ip, r7
 8027e56:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027e5a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027e5e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027e62:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027e66:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027e6a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027e6e:	ea4c 050a 	orr.w	r5, ip, sl
 8027e72:	950e      	str	r5, [sp, #56]	; 0x38
 8027e74:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027e76:	2dff      	cmp	r5, #255	; 0xff
 8027e78:	d020      	beq.n	8027ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8027e7a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027e7c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027e80:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027e82:	436f      	muls	r7, r5
 8027e84:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027e86:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027e8a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027e8c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027e90:	fb05 fa0a 	mul.w	sl, r5, sl
 8027e94:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027e98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027e9c:	44bc      	add	ip, r7
 8027e9e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027ea2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027ea6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027eaa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027eae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027eb2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027eb6:	ea4c 050a 	orr.w	r5, ip, sl
 8027eba:	9509      	str	r5, [sp, #36]	; 0x24
 8027ebc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027ebe:	2dff      	cmp	r5, #255	; 0xff
 8027ec0:	d020      	beq.n	8027f04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8027ec2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027ec4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027ec8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027eca:	436f      	muls	r7, r5
 8027ecc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027ece:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027ed2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027ed4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027ed8:	fb05 fa0a 	mul.w	sl, r5, sl
 8027edc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027ee0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027ee4:	44bc      	add	ip, r7
 8027ee6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027eea:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027eee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027ef2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027ef6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027efa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027efe:	ea4c 050a 	orr.w	r5, ip, sl
 8027f02:	950f      	str	r5, [sp, #60]	; 0x3c
 8027f04:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027f06:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027f0a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027f0c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8027f10:	fb0e f707 	mul.w	r7, lr, r7
 8027f14:	fb02 770c 	mla	r7, r2, ip, r7
 8027f18:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027f1c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027f1e:	fb00 770c 	mla	r7, r0, ip, r7
 8027f22:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027f26:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027f28:	fb08 770c 	mla	r7, r8, ip, r7
 8027f2c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8027f30:	fb0e fe0c 	mul.w	lr, lr, ip
 8027f34:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8027f38:	fb02 e303 	mla	r3, r2, r3, lr
 8027f3c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027f3e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027f40:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8027f44:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8027f46:	fb00 330a 	mla	r3, r0, sl, r3
 8027f4a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8027f4e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8027f52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8027f54:	f8b9 0000 	ldrh.w	r0, [r9]
 8027f58:	4359      	muls	r1, r3
 8027f5a:	0a3f      	lsrs	r7, r7, #8
 8027f5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027f60:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8027f64:	1c4b      	adds	r3, r1, #1
 8027f66:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8027f6a:	ea47 070c 	orr.w	r7, r7, ip
 8027f6e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8027f72:	1202      	asrs	r2, r0, #8
 8027f74:	0c3b      	lsrs	r3, r7, #16
 8027f76:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8027f7a:	b2c9      	uxtb	r1, r1
 8027f7c:	fb13 f305 	smulbb	r3, r3, r5
 8027f80:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8027f84:	fb02 3201 	mla	r2, r2, r1, r3
 8027f88:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8027f8c:	10c3      	asrs	r3, r0, #3
 8027f8e:	b2ff      	uxtb	r7, r7
 8027f90:	00c0      	lsls	r0, r0, #3
 8027f92:	b2c0      	uxtb	r0, r0
 8027f94:	fb17 f705 	smulbb	r7, r7, r5
 8027f98:	fb00 7001 	mla	r0, r0, r1, r7
 8027f9c:	b292      	uxth	r2, r2
 8027f9e:	fb1c fc05 	smulbb	ip, ip, r5
 8027fa2:	b280      	uxth	r0, r0
 8027fa4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8027fa8:	fb03 c301 	mla	r3, r3, r1, ip
 8027fac:	1c51      	adds	r1, r2, #1
 8027fae:	f100 0c01 	add.w	ip, r0, #1
 8027fb2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8027fb6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8027fba:	b29b      	uxth	r3, r3
 8027fbc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8027fc0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8027fc4:	ea4c 0202 	orr.w	r2, ip, r2
 8027fc8:	f103 0c01 	add.w	ip, r3, #1
 8027fcc:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8027fd0:	095b      	lsrs	r3, r3, #5
 8027fd2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027fd6:	431a      	orrs	r2, r3
 8027fd8:	f8a9 2000 	strh.w	r2, [r9]
 8027fdc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8027fde:	441c      	add	r4, r3
 8027fe0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8027fe2:	f109 0902 	add.w	r9, r9, #2
 8027fe6:	441e      	add	r6, r3
 8027fe8:	f10b 3bff 	add.w	fp, fp, #4294967295
 8027fec:	e647      	b.n	8027c7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8027fee:	2800      	cmp	r0, #0
 8027ff0:	f43f aedf 	beq.w	8027db2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8027ff4:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8027ff8:	9109      	str	r1, [sp, #36]	; 0x24
 8027ffa:	0e09      	lsrs	r1, r1, #24
 8027ffc:	9112      	str	r1, [sp, #72]	; 0x48
 8027ffe:	e6d8      	b.n	8027db2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8028000:	b01d      	add	sp, #116	; 0x74
 8028002:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028006 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8028006:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802800a:	b085      	sub	sp, #20
 802800c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8028010:	9102      	str	r1, [sp, #8]
 8028012:	2c00      	cmp	r4, #0
 8028014:	fb04 7103 	mla	r1, r4, r3, r7
 8028018:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 802801c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8028020:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8028024:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8028028:	f2c0 810c 	blt.w	8028244 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802802c:	45a6      	cmp	lr, r4
 802802e:	f340 8109 	ble.w	8028244 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8028032:	2f00      	cmp	r7, #0
 8028034:	f2c0 8104 	blt.w	8028240 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8028038:	42bb      	cmp	r3, r7
 802803a:	f340 8101 	ble.w	8028240 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802803e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8028042:	1c7a      	adds	r2, r7, #1
 8028044:	f100 8101 	bmi.w	802824a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8028048:	4293      	cmp	r3, r2
 802804a:	f340 80fe 	ble.w	802824a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802804e:	2e00      	cmp	r6, #0
 8028050:	f000 80fd 	beq.w	802824e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8028054:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8028058:	3401      	adds	r4, #1
 802805a:	f100 80fc 	bmi.w	8028256 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802805e:	45a6      	cmp	lr, r4
 8028060:	f340 80f9 	ble.w	8028256 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8028064:	2800      	cmp	r0, #0
 8028066:	f000 80f9 	beq.w	802825c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 802806a:	2f00      	cmp	r7, #0
 802806c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8028070:	f2c0 80ef 	blt.w	8028252 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8028074:	42bb      	cmp	r3, r7
 8028076:	f340 80ec 	ble.w	8028252 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802807a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802807e:	3701      	adds	r7, #1
 8028080:	f100 80ef 	bmi.w	8028262 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8028084:	42bb      	cmp	r3, r7
 8028086:	f340 80ec 	ble.w	8028262 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802808a:	2e00      	cmp	r6, #0
 802808c:	f000 80eb 	beq.w	8028266 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8028090:	6852      	ldr	r2, [r2, #4]
 8028092:	b2b6      	uxth	r6, r6
 8028094:	b280      	uxth	r0, r0
 8028096:	fb00 fe06 	mul.w	lr, r0, r6
 802809a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802809e:	0136      	lsls	r6, r6, #4
 80280a0:	eba6 070e 	sub.w	r7, r6, lr
 80280a4:	b280      	uxth	r0, r0
 80280a6:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80280aa:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80280ae:	b2bf      	uxth	r7, r7
 80280b0:	1a1b      	subs	r3, r3, r0
 80280b2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80280b6:	b29b      	uxth	r3, r3
 80280b8:	fb07 f60a 	mul.w	r6, r7, sl
 80280bc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80280c0:	fb0b 6603 	mla	r6, fp, r3, r6
 80280c4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80280c8:	fb00 6609 	mla	r6, r0, r9, r6
 80280cc:	fb0e 6608 	mla	r6, lr, r8, r6
 80280d0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80280d4:	9600      	str	r6, [sp, #0]
 80280d6:	2e00      	cmp	r6, #0
 80280d8:	f000 80af 	beq.w	802823a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 80280dc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80280e0:	fb0b fc0c 	mul.w	ip, fp, ip
 80280e4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80280e8:	fb0b f505 	mul.w	r5, fp, r5
 80280ec:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80280f0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80280f4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80280f8:	44dc      	add	ip, fp
 80280fa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80280fe:	9501      	str	r5, [sp, #4]
 8028100:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8028104:	9503      	str	r5, [sp, #12]
 8028106:	9d01      	ldr	r5, [sp, #4]
 8028108:	9e02      	ldr	r6, [sp, #8]
 802810a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802810e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8028112:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8028116:	fb0a fc0c 	mul.w	ip, sl, ip
 802811a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802811e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8028122:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8028126:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802812a:	4465      	add	r5, ip
 802812c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8028130:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8028134:	fb09 fc0c 	mul.w	ip, r9, ip
 8028138:	fb09 f904 	mul.w	r9, r9, r4
 802813c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8028140:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8028144:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8028148:	fb08 f404 	mul.w	r4, r8, r4
 802814c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8028150:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8028154:	fb08 f802 	mul.w	r8, r8, r2
 8028158:	fb0a fa01 	mul.w	sl, sl, r1
 802815c:	0a22      	lsrs	r2, r4, #8
 802815e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8028162:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8028166:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802816a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802816e:	4414      	add	r4, r2
 8028170:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8028174:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8028178:	0a2d      	lsrs	r5, r5, #8
 802817a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802817e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8028182:	9a03      	ldr	r2, [sp, #12]
 8028184:	8836      	ldrh	r6, [r6, #0]
 8028186:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802818a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802818e:	437d      	muls	r5, r7
 8028190:	4461      	add	r1, ip
 8028192:	0a24      	lsrs	r4, r4, #8
 8028194:	fb02 5503 	mla	r5, r2, r3, r5
 8028198:	0a09      	lsrs	r1, r1, #8
 802819a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802819e:	fb04 540e 	mla	r4, r4, lr, r5
 80281a2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80281a6:	fb01 4100 	mla	r1, r1, r0, r4
 80281aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80281ae:	0a09      	lsrs	r1, r1, #8
 80281b0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80281b4:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80281b8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80281bc:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80281c0:	fb07 f70a 	mul.w	r7, r7, sl
 80281c4:	fb03 7101 	mla	r1, r3, r1, r7
 80281c8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80281cc:	9b00      	ldr	r3, [sp, #0]
 80281ce:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80281d2:	fb0e 1e08 	mla	lr, lr, r8, r1
 80281d6:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80281da:	fb00 e101 	mla	r1, r0, r1, lr
 80281de:	43da      	mvns	r2, r3
 80281e0:	1233      	asrs	r3, r6, #8
 80281e2:	b2d2      	uxtb	r2, r2
 80281e4:	10f0      	asrs	r0, r6, #3
 80281e6:	0a09      	lsrs	r1, r1, #8
 80281e8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80281ec:	00f6      	lsls	r6, r6, #3
 80281ee:	4353      	muls	r3, r2
 80281f0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80281f4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80281f8:	b2f6      	uxtb	r6, r6
 80281fa:	4321      	orrs	r1, r4
 80281fc:	4350      	muls	r0, r2
 80281fe:	4356      	muls	r6, r2
 8028200:	1c5a      	adds	r2, r3, #1
 8028202:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8028206:	0c0b      	lsrs	r3, r1, #16
 8028208:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802820c:	1c42      	adds	r2, r0, #1
 802820e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028212:	0a0a      	lsrs	r2, r1, #8
 8028214:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8028218:	021b      	lsls	r3, r3, #8
 802821a:	00d2      	lsls	r2, r2, #3
 802821c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8028220:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8028224:	4313      	orrs	r3, r2
 8028226:	1c72      	adds	r2, r6, #1
 8028228:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 802822c:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8028230:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8028234:	4319      	orrs	r1, r3
 8028236:	9b02      	ldr	r3, [sp, #8]
 8028238:	8019      	strh	r1, [r3, #0]
 802823a:	b005      	add	sp, #20
 802823c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028240:	2500      	movs	r5, #0
 8028242:	e6fe      	b.n	8028042 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8028244:	2100      	movs	r1, #0
 8028246:	460d      	mov	r5, r1
 8028248:	e706      	b.n	8028058 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802824a:	2100      	movs	r1, #0
 802824c:	e704      	b.n	8028058 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802824e:	4631      	mov	r1, r6
 8028250:	e702      	b.n	8028058 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8028252:	2400      	movs	r4, #0
 8028254:	e713      	b.n	802807e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8028256:	2200      	movs	r2, #0
 8028258:	4614      	mov	r4, r2
 802825a:	e71a      	b.n	8028092 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802825c:	4602      	mov	r2, r0
 802825e:	4604      	mov	r4, r0
 8028260:	e717      	b.n	8028092 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8028262:	2200      	movs	r2, #0
 8028264:	e715      	b.n	8028092 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8028266:	4632      	mov	r2, r6
 8028268:	e713      	b.n	8028092 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0802826c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802826c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028270:	b09b      	sub	sp, #108	; 0x6c
 8028272:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8028276:	9218      	str	r2, [sp, #96]	; 0x60
 8028278:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802827a:	9116      	str	r1, [sp, #88]	; 0x58
 802827c:	9307      	str	r3, [sp, #28]
 802827e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8028282:	9019      	str	r0, [sp, #100]	; 0x64
 8028284:	6850      	ldr	r0, [r2, #4]
 8028286:	6812      	ldr	r2, [r2, #0]
 8028288:	fb00 1303 	mla	r3, r0, r3, r1
 802828c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8028290:	930a      	str	r3, [sp, #40]	; 0x28
 8028292:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028294:	681b      	ldr	r3, [r3, #0]
 8028296:	930f      	str	r3, [sp, #60]	; 0x3c
 8028298:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802829a:	2b00      	cmp	r3, #0
 802829c:	dc03      	bgt.n	80282a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802829e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80282a0:	2b00      	cmp	r3, #0
 80282a2:	f340 8386 	ble.w	80289b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80282a6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80282a8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80282ac:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80282b0:	1e48      	subs	r0, r1, #1
 80282b2:	1e57      	subs	r7, r2, #1
 80282b4:	9b07      	ldr	r3, [sp, #28]
 80282b6:	2b00      	cmp	r3, #0
 80282b8:	f340 8166 	ble.w	8028588 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80282bc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80282c0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80282c4:	d406      	bmi.n	80282d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80282c6:	4584      	cmp	ip, r0
 80282c8:	da04      	bge.n	80282d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80282ca:	2b00      	cmp	r3, #0
 80282cc:	db02      	blt.n	80282d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80282ce:	42bb      	cmp	r3, r7
 80282d0:	f2c0 815b 	blt.w	802858a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80282d4:	f11c 0c01 	adds.w	ip, ip, #1
 80282d8:	f100 814b 	bmi.w	8028572 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80282dc:	4561      	cmp	r1, ip
 80282de:	f2c0 8148 	blt.w	8028572 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80282e2:	3301      	adds	r3, #1
 80282e4:	f100 8145 	bmi.w	8028572 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80282e8:	429a      	cmp	r2, r3
 80282ea:	f2c0 8142 	blt.w	8028572 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80282ee:	9b07      	ldr	r3, [sp, #28]
 80282f0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80282f2:	9317      	str	r3, [sp, #92]	; 0x5c
 80282f4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80282f6:	2b00      	cmp	r3, #0
 80282f8:	f340 8165 	ble.w	80285c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80282fc:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80282fe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028300:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8028304:	689b      	ldr	r3, [r3, #8]
 8028306:	1422      	asrs	r2, r4, #16
 8028308:	ea4f 4c26 	mov.w	ip, r6, asr #16
 802830c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8028310:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028314:	f100 81d5 	bmi.w	80286c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8028318:	f103 38ff 	add.w	r8, r3, #4294967295
 802831c:	4542      	cmp	r2, r8
 802831e:	f280 81d0 	bge.w	80286c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8028322:	f1bc 0f00 	cmp.w	ip, #0
 8028326:	f2c0 81cc 	blt.w	80286c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802832a:	f10e 38ff 	add.w	r8, lr, #4294967295
 802832e:	45c4      	cmp	ip, r8
 8028330:	f280 81c7 	bge.w	80286c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8028334:	b21b      	sxth	r3, r3
 8028336:	fb0c 2203 	mla	r2, ip, r3, r2
 802833a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802833c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8028340:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8028344:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8028348:	2900      	cmp	r1, #0
 802834a:	f000 8182 	beq.w	8028652 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802834e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8028352:	950b      	str	r5, [sp, #44]	; 0x2c
 8028354:	0e2d      	lsrs	r5, r5, #24
 8028356:	9512      	str	r5, [sp, #72]	; 0x48
 8028358:	b180      	cbz	r0, 802837c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802835a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802835e:	3b01      	subs	r3, #1
 8028360:	009b      	lsls	r3, r3, #2
 8028362:	3304      	adds	r3, #4
 8028364:	eb08 0c03 	add.w	ip, r8, r3
 8028368:	f858 3003 	ldr.w	r3, [r8, r3]
 802836c:	9308      	str	r3, [sp, #32]
 802836e:	0e1b      	lsrs	r3, r3, #24
 8028370:	9310      	str	r3, [sp, #64]	; 0x40
 8028372:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8028376:	930c      	str	r3, [sp, #48]	; 0x30
 8028378:	0e1b      	lsrs	r3, r3, #24
 802837a:	9313      	str	r3, [sp, #76]	; 0x4c
 802837c:	b289      	uxth	r1, r1
 802837e:	b280      	uxth	r0, r0
 8028380:	fb01 f900 	mul.w	r9, r1, r0
 8028384:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8028388:	0109      	lsls	r1, r1, #4
 802838a:	eba1 0809 	sub.w	r8, r1, r9
 802838e:	b280      	uxth	r0, r0
 8028390:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8028394:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8028396:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8028398:	fa1f f888 	uxth.w	r8, r8
 802839c:	1a09      	subs	r1, r1, r0
 802839e:	b289      	uxth	r1, r1
 80283a0:	fb08 f303 	mul.w	r3, r8, r3
 80283a4:	fb01 330e 	mla	r3, r1, lr, r3
 80283a8:	fb00 3305 	mla	r3, r0, r5, r3
 80283ac:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80283ae:	fb09 3305 	mla	r3, r9, r5, r3
 80283b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80283b6:	2b00      	cmp	r3, #0
 80283b8:	f000 80d2 	beq.w	8028560 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80283bc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80283c0:	d01b      	beq.n	80283fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 80283c2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80283c6:	fb0e fa0a 	mul.w	sl, lr, sl
 80283ca:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80283ce:	fb0e fe02 	mul.w	lr, lr, r2
 80283d2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80283d6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80283da:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80283de:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80283e2:	4452      	add	r2, sl
 80283e4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80283e8:	0a12      	lsrs	r2, r2, #8
 80283ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80283ee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80283f2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80283f6:	ea42 020c 	orr.w	r2, r2, ip
 80283fa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80283fc:	2dff      	cmp	r5, #255	; 0xff
 80283fe:	d021      	beq.n	8028444 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8028400:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8028402:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8028406:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8028408:	fb05 fb0b 	mul.w	fp, r5, fp
 802840c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802840e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8028412:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8028414:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8028418:	fb05 fa0a 	mul.w	sl, r5, sl
 802841c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028420:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8028424:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8028428:	44de      	add	lr, fp
 802842a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802842e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8028432:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028436:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802843a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802843e:	ea4e 050a 	orr.w	r5, lr, sl
 8028442:	950b      	str	r5, [sp, #44]	; 0x2c
 8028444:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8028446:	2dff      	cmp	r5, #255	; 0xff
 8028448:	d021      	beq.n	802848e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802844a:	9d08      	ldr	r5, [sp, #32]
 802844c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8028450:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8028452:	fb05 fb0b 	mul.w	fp, r5, fp
 8028456:	9d08      	ldr	r5, [sp, #32]
 8028458:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802845c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802845e:	fb05 fa0e 	mul.w	sl, r5, lr
 8028462:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8028466:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802846a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802846e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8028472:	44de      	add	lr, fp
 8028474:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8028478:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802847c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028480:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028484:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028488:	ea4e 050a 	orr.w	r5, lr, sl
 802848c:	9508      	str	r5, [sp, #32]
 802848e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8028490:	2dff      	cmp	r5, #255	; 0xff
 8028492:	d021      	beq.n	80284d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8028494:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8028496:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802849a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802849c:	fb05 fb0b 	mul.w	fp, r5, fp
 80284a0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80284a2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80284a6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80284a8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80284ac:	fb05 fa0a 	mul.w	sl, r5, sl
 80284b0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80284b4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80284b8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80284bc:	44de      	add	lr, fp
 80284be:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80284c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80284c6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80284ca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80284ce:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80284d2:	ea4e 050a 	orr.w	r5, lr, sl
 80284d6:	950c      	str	r5, [sp, #48]	; 0x30
 80284d8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80284da:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80284de:	9d08      	ldr	r5, [sp, #32]
 80284e0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80284e4:	fb08 fc0c 	mul.w	ip, r8, ip
 80284e8:	fb01 cc0e 	mla	ip, r1, lr, ip
 80284ec:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80284f0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80284f2:	fb00 cc0e 	mla	ip, r0, lr, ip
 80284f6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80284fa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80284fc:	fb09 cc0e 	mla	ip, r9, lr, ip
 8028500:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8028504:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8028508:	fb08 f80e 	mul.w	r8, r8, lr
 802850c:	fb01 8202 	mla	r2, r1, r2, r8
 8028510:	9908      	ldr	r1, [sp, #32]
 8028512:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8028516:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028518:	fb00 220a 	mla	r2, r0, sl, r2
 802851c:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8028520:	fb09 2900 	mla	r9, r9, r0, r2
 8028524:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028528:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802852c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028530:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8028534:	ea4c 0c09 	orr.w	ip, ip, r9
 8028538:	2bff      	cmp	r3, #255	; 0xff
 802853a:	ea4f 221c 	mov.w	r2, ip, lsr #8
 802853e:	f040 8091 	bne.w	8028664 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8028542:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8028546:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 802854a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802854e:	f022 0207 	bic.w	r2, r2, #7
 8028552:	431a      	orrs	r2, r3
 8028554:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8028558:	ea4c 0c02 	orr.w	ip, ip, r2
 802855c:	f8a7 c000 	strh.w	ip, [r7]
 8028560:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8028562:	441c      	add	r4, r3
 8028564:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028566:	441e      	add	r6, r3
 8028568:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802856a:	3b01      	subs	r3, #1
 802856c:	3702      	adds	r7, #2
 802856e:	9317      	str	r3, [sp, #92]	; 0x5c
 8028570:	e6c0      	b.n	80282f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8028572:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8028574:	441c      	add	r4, r3
 8028576:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028578:	441e      	add	r6, r3
 802857a:	9b07      	ldr	r3, [sp, #28]
 802857c:	3b01      	subs	r3, #1
 802857e:	9307      	str	r3, [sp, #28]
 8028580:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8028582:	3302      	adds	r3, #2
 8028584:	930a      	str	r3, [sp, #40]	; 0x28
 8028586:	e695      	b.n	80282b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8028588:	d024      	beq.n	80285d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802858a:	9b07      	ldr	r3, [sp, #28]
 802858c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802858e:	3b01      	subs	r3, #1
 8028590:	fb00 4003 	mla	r0, r0, r3, r4
 8028594:	1400      	asrs	r0, r0, #16
 8028596:	f53f aeaa 	bmi.w	80282ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802859a:	3901      	subs	r1, #1
 802859c:	4288      	cmp	r0, r1
 802859e:	f6bf aea6 	bge.w	80282ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80285a2:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80285a4:	fb01 6303 	mla	r3, r1, r3, r6
 80285a8:	141b      	asrs	r3, r3, #16
 80285aa:	f53f aea0 	bmi.w	80282ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80285ae:	3a01      	subs	r2, #1
 80285b0:	4293      	cmp	r3, r2
 80285b2:	f6bf ae9c 	bge.w	80282ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80285b6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80285ba:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 80285be:	f1bb 0f00 	cmp.w	fp, #0
 80285c2:	f300 809a 	bgt.w	80286fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80285c6:	9b07      	ldr	r3, [sp, #28]
 80285c8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80285cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80285ce:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80285d2:	930a      	str	r3, [sp, #40]	; 0x28
 80285d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80285d6:	2b00      	cmp	r3, #0
 80285d8:	f340 81eb 	ble.w	80289b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80285dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80285e0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80285e4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80285e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80285ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80285ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 80285f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80285f6:	eef0 6a62 	vmov.f32	s13, s5
 80285fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80285fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028602:	ee77 2a62 	vsub.f32	s5, s14, s5
 8028606:	ee16 4a90 	vmov	r4, s13
 802860a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802860e:	eef0 6a43 	vmov.f32	s13, s6
 8028612:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8028616:	ee12 2a90 	vmov	r2, s5
 802861a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802861e:	fb92 f3f3 	sdiv	r3, r2, r3
 8028622:	ee13 2a10 	vmov	r2, s6
 8028626:	9327      	str	r3, [sp, #156]	; 0x9c
 8028628:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802862a:	fb92 f3f3 	sdiv	r3, r2, r3
 802862e:	9328      	str	r3, [sp, #160]	; 0xa0
 8028630:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8028632:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8028634:	3b01      	subs	r3, #1
 8028636:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802863a:	9316      	str	r3, [sp, #88]	; 0x58
 802863c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802863e:	bf08      	it	eq
 8028640:	4613      	moveq	r3, r2
 8028642:	ee16 6a90 	vmov	r6, s13
 8028646:	9307      	str	r3, [sp, #28]
 8028648:	eeb0 3a67 	vmov.f32	s6, s15
 802864c:	eef0 2a47 	vmov.f32	s5, s14
 8028650:	e622      	b.n	8028298 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8028652:	2800      	cmp	r0, #0
 8028654:	f43f ae92 	beq.w	802837c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8028658:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802865c:	9308      	str	r3, [sp, #32]
 802865e:	0e1b      	lsrs	r3, r3, #24
 8028660:	9310      	str	r3, [sp, #64]	; 0x40
 8028662:	e68b      	b.n	802837c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8028664:	8839      	ldrh	r1, [r7, #0]
 8028666:	4dd4      	ldr	r5, [pc, #848]	; (80289b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8028668:	43db      	mvns	r3, r3
 802866a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 802866e:	fa5f f883 	uxtb.w	r8, r3
 8028672:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8028676:	fb0e fe08 	mul.w	lr, lr, r8
 802867a:	10c8      	asrs	r0, r1, #3
 802867c:	00cb      	lsls	r3, r1, #3
 802867e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028682:	f10e 0101 	add.w	r1, lr, #1
 8028686:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802868a:	fb00 f008 	mul.w	r0, r0, r8
 802868e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8028692:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8028696:	f100 0e01 	add.w	lr, r0, #1
 802869a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802869e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80286a2:	b2db      	uxtb	r3, r3
 80286a4:	b2c9      	uxtb	r1, r1
 80286a6:	00d2      	lsls	r2, r2, #3
 80286a8:	fb03 f308 	mul.w	r3, r3, r8
 80286ac:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80286b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80286b4:	430a      	orrs	r2, r1
 80286b6:	1c59      	adds	r1, r3, #1
 80286b8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80286bc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80286c0:	e748      	b.n	8028554 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 80286c2:	f112 0801 	adds.w	r8, r2, #1
 80286c6:	f53f af4b 	bmi.w	8028560 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80286ca:	4543      	cmp	r3, r8
 80286cc:	f6ff af48 	blt.w	8028560 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80286d0:	f11c 0801 	adds.w	r8, ip, #1
 80286d4:	f53f af44 	bmi.w	8028560 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80286d8:	45c6      	cmp	lr, r8
 80286da:	f6ff af41 	blt.w	8028560 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80286de:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80286e2:	fa0f f28e 	sxth.w	r2, lr
 80286e6:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80286ea:	9200      	str	r2, [sp, #0]
 80286ec:	b21b      	sxth	r3, r3
 80286ee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80286f0:	9819      	ldr	r0, [sp, #100]	; 0x64
 80286f2:	4639      	mov	r1, r7
 80286f4:	f7ff fc87 	bl	8028006 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80286f8:	e732      	b.n	8028560 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80286fa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80286fc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80286fe:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8028702:	1421      	asrs	r1, r4, #16
 8028704:	1433      	asrs	r3, r6, #16
 8028706:	fb07 1303 	mla	r3, r7, r3, r1
 802870a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802870c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8028710:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8028714:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8028718:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802871c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8028720:	2a00      	cmp	r2, #0
 8028722:	f000 8107 	beq.w	8028934 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8028726:	684d      	ldr	r5, [r1, #4]
 8028728:	950d      	str	r5, [sp, #52]	; 0x34
 802872a:	0e2d      	lsrs	r5, r5, #24
 802872c:	9514      	str	r5, [sp, #80]	; 0x50
 802872e:	b178      	cbz	r0, 8028750 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8028730:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8028734:	3f01      	subs	r7, #1
 8028736:	00bf      	lsls	r7, r7, #2
 8028738:	3704      	adds	r7, #4
 802873a:	eb01 0e07 	add.w	lr, r1, r7
 802873e:	59c9      	ldr	r1, [r1, r7]
 8028740:	9109      	str	r1, [sp, #36]	; 0x24
 8028742:	0e09      	lsrs	r1, r1, #24
 8028744:	9111      	str	r1, [sp, #68]	; 0x44
 8028746:	f8de 1004 	ldr.w	r1, [lr, #4]
 802874a:	910e      	str	r1, [sp, #56]	; 0x38
 802874c:	0e09      	lsrs	r1, r1, #24
 802874e:	9115      	str	r1, [sp, #84]	; 0x54
 8028750:	b292      	uxth	r2, r2
 8028752:	b280      	uxth	r0, r0
 8028754:	fb02 f900 	mul.w	r9, r2, r0
 8028758:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802875c:	0112      	lsls	r2, r2, #4
 802875e:	eba2 0e09 	sub.w	lr, r2, r9
 8028762:	b280      	uxth	r0, r0
 8028764:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8028768:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802876a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802876c:	fa1f fe8e 	uxth.w	lr, lr
 8028770:	1a09      	subs	r1, r1, r0
 8028772:	b289      	uxth	r1, r1
 8028774:	fb0e f202 	mul.w	r2, lr, r2
 8028778:	fb01 220c 	mla	r2, r1, ip, r2
 802877c:	fb00 2205 	mla	r2, r0, r5, r2
 8028780:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8028782:	fb09 2205 	mla	r2, r9, r5, r2
 8028786:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802878a:	2a00      	cmp	r2, #0
 802878c:	f000 80c9 	beq.w	8028922 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8028790:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8028794:	d019      	beq.n	80287ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8028796:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802879a:	fb0c fa0a 	mul.w	sl, ip, sl
 802879e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80287a2:	fb0c fc03 	mul.w	ip, ip, r3
 80287a6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80287aa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80287ae:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80287b2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80287b6:	4453      	add	r3, sl
 80287b8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80287bc:	0a1b      	lsrs	r3, r3, #8
 80287be:	0a3f      	lsrs	r7, r7, #8
 80287c0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80287c4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80287c8:	433b      	orrs	r3, r7
 80287ca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80287cc:	2dff      	cmp	r5, #255	; 0xff
 80287ce:	d020      	beq.n	8028812 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80287d0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80287d2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80287d6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80287d8:	436f      	muls	r7, r5
 80287da:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80287dc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80287e0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80287e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80287e6:	fb05 fa0a 	mul.w	sl, r5, sl
 80287ea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80287ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80287f2:	44bc      	add	ip, r7
 80287f4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80287f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80287fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028800:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028804:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028808:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802880c:	ea4c 050a 	orr.w	r5, ip, sl
 8028810:	950d      	str	r5, [sp, #52]	; 0x34
 8028812:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028814:	2dff      	cmp	r5, #255	; 0xff
 8028816:	d020      	beq.n	802885a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8028818:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802881a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802881e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028820:	436f      	muls	r7, r5
 8028822:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8028824:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8028828:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802882a:	fb05 fa0c 	mul.w	sl, r5, ip
 802882e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8028832:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028836:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802883a:	44bc      	add	ip, r7
 802883c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028840:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8028844:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028848:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802884c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028850:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028854:	ea4c 050a 	orr.w	r5, ip, sl
 8028858:	9509      	str	r5, [sp, #36]	; 0x24
 802885a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802885c:	2dff      	cmp	r5, #255	; 0xff
 802885e:	d020      	beq.n	80288a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8028860:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028862:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8028866:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8028868:	436f      	muls	r7, r5
 802886a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802886c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8028870:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8028872:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8028876:	fb05 fa0a 	mul.w	sl, r5, sl
 802887a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802887e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028882:	44bc      	add	ip, r7
 8028884:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028888:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802888c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028890:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028894:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028898:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802889c:	ea4c 050a 	orr.w	r5, ip, sl
 80288a0:	950e      	str	r5, [sp, #56]	; 0x38
 80288a2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80288a4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80288a8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80288aa:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80288ae:	fb0e f707 	mul.w	r7, lr, r7
 80288b2:	fb01 770c 	mla	r7, r1, ip, r7
 80288b6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80288ba:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80288bc:	fb00 770c 	mla	r7, r0, ip, r7
 80288c0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80288c4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80288c6:	fb09 770c 	mla	r7, r9, ip, r7
 80288ca:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80288ce:	fb0e fe0c 	mul.w	lr, lr, ip
 80288d2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80288d6:	fb01 e303 	mla	r3, r1, r3, lr
 80288da:	9909      	ldr	r1, [sp, #36]	; 0x24
 80288dc:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80288e0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80288e2:	fb00 330a 	mla	r3, r0, sl, r3
 80288e6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80288ea:	fb09 3c0c 	mla	ip, r9, ip, r3
 80288ee:	0a3f      	lsrs	r7, r7, #8
 80288f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80288f4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80288f8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80288fc:	ea47 070c 	orr.w	r7, r7, ip
 8028900:	2aff      	cmp	r2, #255	; 0xff
 8028902:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8028906:	d11e      	bne.n	8028946 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8028908:	097a      	lsrs	r2, r7, #5
 802890a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 802890e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8028912:	f023 0307 	bic.w	r3, r3, #7
 8028916:	4313      	orrs	r3, r2
 8028918:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802891c:	431f      	orrs	r7, r3
 802891e:	f8a8 7000 	strh.w	r7, [r8]
 8028922:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8028924:	441c      	add	r4, r3
 8028926:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028928:	f108 0802 	add.w	r8, r8, #2
 802892c:	441e      	add	r6, r3
 802892e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8028932:	e644      	b.n	80285be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8028934:	2800      	cmp	r0, #0
 8028936:	f43f af0b 	beq.w	8028750 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802893a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802893e:	9109      	str	r1, [sp, #36]	; 0x24
 8028940:	0e09      	lsrs	r1, r1, #24
 8028942:	9111      	str	r1, [sp, #68]	; 0x44
 8028944:	e704      	b.n	8028750 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8028946:	f8b8 1000 	ldrh.w	r1, [r8]
 802894a:	43d2      	mvns	r2, r2
 802894c:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8028950:	fa5f fe82 	uxtb.w	lr, r2
 8028954:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8028958:	fb0c fc0e 	mul.w	ip, ip, lr
 802895c:	10c8      	asrs	r0, r1, #3
 802895e:	00ca      	lsls	r2, r1, #3
 8028960:	f10c 0101 	add.w	r1, ip, #1
 8028964:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028968:	0c39      	lsrs	r1, r7, #16
 802896a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802896e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028972:	4911      	ldr	r1, [pc, #68]	; (80289b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8028974:	fb00 f00e 	mul.w	r0, r0, lr
 8028978:	fa5f fc8c 	uxtb.w	ip, ip
 802897c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8028980:	b2d2      	uxtb	r2, r2
 8028982:	1c41      	adds	r1, r0, #1
 8028984:	fb02 f20e 	mul.w	r2, r2, lr
 8028988:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802898c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8028990:	1c51      	adds	r1, r2, #1
 8028992:	00c0      	lsls	r0, r0, #3
 8028994:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8028998:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802899c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80289a0:	ea4c 0c00 	orr.w	ip, ip, r0
 80289a4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80289a8:	ea47 0c0c 	orr.w	ip, r7, ip
 80289ac:	f8a8 c000 	strh.w	ip, [r8]
 80289b0:	e7b7      	b.n	8028922 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80289b2:	b01b      	add	sp, #108	; 0x6c
 80289b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80289b8:	fffff800 	.word	0xfffff800

080289bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80289bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80289c0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80289c4:	2d00      	cmp	r5, #0
 80289c6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80289ca:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80289ce:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80289d2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80289d6:	fb05 0e03 	mla	lr, r5, r3, r0
 80289da:	f2c0 808c 	blt.w	8028af6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80289de:	45a9      	cmp	r9, r5
 80289e0:	f340 8089 	ble.w	8028af6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80289e4:	2800      	cmp	r0, #0
 80289e6:	f2c0 8084 	blt.w	8028af2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80289ea:	4580      	cmp	r8, r0
 80289ec:	f340 8081 	ble.w	8028af2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80289f0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80289f4:	f01e 0f01 	tst.w	lr, #1
 80289f8:	5d16      	ldrb	r6, [r2, r4]
 80289fa:	bf0c      	ite	eq
 80289fc:	f006 060f 	andeq.w	r6, r6, #15
 8028a00:	1136      	asrne	r6, r6, #4
 8028a02:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8028a06:	b2f6      	uxtb	r6, r6
 8028a08:	1c44      	adds	r4, r0, #1
 8028a0a:	d477      	bmi.n	8028afc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8028a0c:	45a0      	cmp	r8, r4
 8028a0e:	dd75      	ble.n	8028afc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8028a10:	2f00      	cmp	r7, #0
 8028a12:	d075      	beq.n	8028b00 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8028a14:	f10e 0a01 	add.w	sl, lr, #1
 8028a18:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8028a1c:	f01a 0f01 	tst.w	sl, #1
 8028a20:	5d14      	ldrb	r4, [r2, r4]
 8028a22:	bf0c      	ite	eq
 8028a24:	f004 040f 	andeq.w	r4, r4, #15
 8028a28:	1124      	asrne	r4, r4, #4
 8028a2a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8028a2e:	b2e4      	uxtb	r4, r4
 8028a30:	3501      	adds	r5, #1
 8028a32:	d469      	bmi.n	8028b08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8028a34:	45a9      	cmp	r9, r5
 8028a36:	dd67      	ble.n	8028b08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8028a38:	f1bc 0f00 	cmp.w	ip, #0
 8028a3c:	d067      	beq.n	8028b0e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8028a3e:	2800      	cmp	r0, #0
 8028a40:	db60      	blt.n	8028b04 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8028a42:	4580      	cmp	r8, r0
 8028a44:	dd5e      	ble.n	8028b04 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8028a46:	eb03 090e 	add.w	r9, r3, lr
 8028a4a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8028a4e:	f019 0f01 	tst.w	r9, #1
 8028a52:	5d55      	ldrb	r5, [r2, r5]
 8028a54:	bf0c      	ite	eq
 8028a56:	f005 050f 	andeq.w	r5, r5, #15
 8028a5a:	112d      	asrne	r5, r5, #4
 8028a5c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8028a60:	b2ed      	uxtb	r5, r5
 8028a62:	3001      	adds	r0, #1
 8028a64:	d456      	bmi.n	8028b14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8028a66:	4580      	cmp	r8, r0
 8028a68:	dd54      	ble.n	8028b14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8028a6a:	2f00      	cmp	r7, #0
 8028a6c:	d054      	beq.n	8028b18 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8028a6e:	3301      	adds	r3, #1
 8028a70:	449e      	add	lr, r3
 8028a72:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8028a76:	f01e 0f01 	tst.w	lr, #1
 8028a7a:	5cd0      	ldrb	r0, [r2, r3]
 8028a7c:	bf0c      	ite	eq
 8028a7e:	f000 000f 	andeq.w	r0, r0, #15
 8028a82:	1100      	asrne	r0, r0, #4
 8028a84:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028a88:	b2c3      	uxtb	r3, r0
 8028a8a:	b2ba      	uxth	r2, r7
 8028a8c:	fa1f fc8c 	uxth.w	ip, ip
 8028a90:	fb02 f00c 	mul.w	r0, r2, ip
 8028a94:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8028a98:	0112      	lsls	r2, r2, #4
 8028a9a:	fa1f fc8c 	uxth.w	ip, ip
 8028a9e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8028aa2:	1a12      	subs	r2, r2, r0
 8028aa4:	eba7 070c 	sub.w	r7, r7, ip
 8028aa8:	b292      	uxth	r2, r2
 8028aaa:	b2bf      	uxth	r7, r7
 8028aac:	4362      	muls	r2, r4
 8028aae:	fb06 2207 	mla	r2, r6, r7, r2
 8028ab2:	fb0c 2505 	mla	r5, ip, r5, r2
 8028ab6:	fb00 5303 	mla	r3, r0, r3, r5
 8028aba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028abe:	b1b3      	cbz	r3, 8028aee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8028ac0:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8028ac4:	435a      	muls	r2, r3
 8028ac6:	1c53      	adds	r3, r2, #1
 8028ac8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028acc:	4a2d      	ldr	r2, [pc, #180]	; (8028b84 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8028ace:	121b      	asrs	r3, r3, #8
 8028ad0:	6812      	ldr	r2, [r2, #0]
 8028ad2:	2bff      	cmp	r3, #255	; 0xff
 8028ad4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8028ad8:	d120      	bne.n	8028b1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8028ada:	4b2b      	ldr	r3, [pc, #172]	; (8028b88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8028adc:	0950      	lsrs	r0, r2, #5
 8028ade:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028ae2:	4033      	ands	r3, r6
 8028ae4:	4318      	orrs	r0, r3
 8028ae6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028aea:	4302      	orrs	r2, r0
 8028aec:	800a      	strh	r2, [r1, #0]
 8028aee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028af2:	2600      	movs	r6, #0
 8028af4:	e788      	b.n	8028a08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8028af6:	2400      	movs	r4, #0
 8028af8:	4626      	mov	r6, r4
 8028afa:	e799      	b.n	8028a30 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8028afc:	2400      	movs	r4, #0
 8028afe:	e797      	b.n	8028a30 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8028b00:	463c      	mov	r4, r7
 8028b02:	e795      	b.n	8028a30 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8028b04:	2500      	movs	r5, #0
 8028b06:	e7ac      	b.n	8028a62 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8028b08:	2300      	movs	r3, #0
 8028b0a:	461d      	mov	r5, r3
 8028b0c:	e7bd      	b.n	8028a8a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028b0e:	4663      	mov	r3, ip
 8028b10:	4665      	mov	r5, ip
 8028b12:	e7ba      	b.n	8028a8a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028b14:	2300      	movs	r3, #0
 8028b16:	e7b8      	b.n	8028a8a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028b18:	463b      	mov	r3, r7
 8028b1a:	e7b6      	b.n	8028a8a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028b1c:	880d      	ldrh	r5, [r1, #0]
 8028b1e:	b29f      	uxth	r7, r3
 8028b20:	122c      	asrs	r4, r5, #8
 8028b22:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8028b26:	43db      	mvns	r3, r3
 8028b28:	b2db      	uxtb	r3, r3
 8028b2a:	fb10 f007 	smulbb	r0, r0, r7
 8028b2e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8028b32:	fb04 0403 	mla	r4, r4, r3, r0
 8028b36:	b2f6      	uxtb	r6, r6
 8028b38:	10e8      	asrs	r0, r5, #3
 8028b3a:	b2d2      	uxtb	r2, r2
 8028b3c:	00ed      	lsls	r5, r5, #3
 8028b3e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028b42:	fb12 f207 	smulbb	r2, r2, r7
 8028b46:	fb16 f607 	smulbb	r6, r6, r7
 8028b4a:	b2ed      	uxtb	r5, r5
 8028b4c:	b2a4      	uxth	r4, r4
 8028b4e:	fb00 6603 	mla	r6, r0, r3, r6
 8028b52:	fb05 2303 	mla	r3, r5, r3, r2
 8028b56:	b29a      	uxth	r2, r3
 8028b58:	1c63      	adds	r3, r4, #1
 8028b5a:	b2b0      	uxth	r0, r6
 8028b5c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028b60:	1c53      	adds	r3, r2, #1
 8028b62:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028b66:	1c42      	adds	r2, r0, #1
 8028b68:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028b6c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8028b70:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8028b74:	0940      	lsrs	r0, r0, #5
 8028b76:	4323      	orrs	r3, r4
 8028b78:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028b7c:	4303      	orrs	r3, r0
 8028b7e:	800b      	strh	r3, [r1, #0]
 8028b80:	e7b5      	b.n	8028aee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8028b82:	bf00      	nop
 8028b84:	2000225c 	.word	0x2000225c
 8028b88:	00fff800 	.word	0x00fff800

08028b8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028b8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028b90:	b097      	sub	sp, #92	; 0x5c
 8028b92:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8028b96:	9214      	str	r2, [sp, #80]	; 0x50
 8028b98:	9309      	str	r3, [sp, #36]	; 0x24
 8028b9a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8028b9c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8028ba0:	910d      	str	r1, [sp, #52]	; 0x34
 8028ba2:	930f      	str	r3, [sp, #60]	; 0x3c
 8028ba4:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8028ba8:	9015      	str	r0, [sp, #84]	; 0x54
 8028baa:	6850      	ldr	r0, [r2, #4]
 8028bac:	6812      	ldr	r2, [r2, #0]
 8028bae:	fb00 1303 	mla	r3, r0, r3, r1
 8028bb2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8028bb6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028bb8:	689b      	ldr	r3, [r3, #8]
 8028bba:	3301      	adds	r3, #1
 8028bbc:	f023 0301 	bic.w	r3, r3, #1
 8028bc0:	930a      	str	r3, [sp, #40]	; 0x28
 8028bc2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028bc4:	681f      	ldr	r7, [r3, #0]
 8028bc6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8028bc8:	2b00      	cmp	r3, #0
 8028bca:	dc03      	bgt.n	8028bd4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8028bcc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8028bce:	2b00      	cmp	r3, #0
 8028bd0:	f340 8287 	ble.w	80290e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8028bd4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028bd6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028bda:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028bde:	1e48      	subs	r0, r1, #1
 8028be0:	f102 3cff 	add.w	ip, r2, #4294967295
 8028be4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028be6:	2b00      	cmp	r3, #0
 8028be8:	f340 80c4 	ble.w	8028d74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8028bec:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028bf0:	ea4f 4326 	mov.w	r3, r6, asr #16
 8028bf4:	d406      	bmi.n	8028c04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028bf6:	4586      	cmp	lr, r0
 8028bf8:	da04      	bge.n	8028c04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028bfa:	2b00      	cmp	r3, #0
 8028bfc:	db02      	blt.n	8028c04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028bfe:	4563      	cmp	r3, ip
 8028c00:	f2c0 80b9 	blt.w	8028d76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8028c04:	f11e 0e01 	adds.w	lr, lr, #1
 8028c08:	f100 80aa 	bmi.w	8028d60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028c0c:	4571      	cmp	r1, lr
 8028c0e:	f2c0 80a7 	blt.w	8028d60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028c12:	3301      	adds	r3, #1
 8028c14:	f100 80a4 	bmi.w	8028d60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028c18:	429a      	cmp	r2, r3
 8028c1a:	f2c0 80a1 	blt.w	8028d60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028c1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028c20:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8028c24:	930e      	str	r3, [sp, #56]	; 0x38
 8028c26:	46c8      	mov	r8, r9
 8028c28:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8028c2a:	2b00      	cmp	r3, #0
 8028c2c:	f340 80c3 	ble.w	8028db6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8028c30:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028c32:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8028c36:	1423      	asrs	r3, r4, #16
 8028c38:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028c3c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8028c40:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8028c44:	f100 814d 	bmi.w	8028ee2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028c48:	f10c 3bff 	add.w	fp, ip, #4294967295
 8028c4c:	455b      	cmp	r3, fp
 8028c4e:	f280 8148 	bge.w	8028ee2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028c52:	2800      	cmp	r0, #0
 8028c54:	f2c0 8145 	blt.w	8028ee2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028c58:	f10e 3bff 	add.w	fp, lr, #4294967295
 8028c5c:	4558      	cmp	r0, fp
 8028c5e:	f280 8140 	bge.w	8028ee2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028c62:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8028c64:	fb00 3305 	mla	r3, r0, r5, r3
 8028c68:	0858      	lsrs	r0, r3, #1
 8028c6a:	07dd      	lsls	r5, r3, #31
 8028c6c:	f817 c000 	ldrb.w	ip, [r7, r0]
 8028c70:	bf54      	ite	pl
 8028c72:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028c76:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028c7a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028c7e:	fa5f fc8c 	uxtb.w	ip, ip
 8028c82:	2a00      	cmp	r2, #0
 8028c84:	f000 80db 	beq.w	8028e3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8028c88:	1c58      	adds	r0, r3, #1
 8028c8a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8028c8e:	07c0      	lsls	r0, r0, #31
 8028c90:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8028c94:	bf54      	ite	pl
 8028c96:	f00e 0e0f 	andpl.w	lr, lr, #15
 8028c9a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8028c9e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8028ca2:	fa5f f08e 	uxtb.w	r0, lr
 8028ca6:	9010      	str	r0, [sp, #64]	; 0x40
 8028ca8:	b1c9      	cbz	r1, 8028cde <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8028caa:	4453      	add	r3, sl
 8028cac:	0858      	lsrs	r0, r3, #1
 8028cae:	07dd      	lsls	r5, r3, #31
 8028cb0:	5c38      	ldrb	r0, [r7, r0]
 8028cb2:	bf54      	ite	pl
 8028cb4:	f000 000f 	andpl.w	r0, r0, #15
 8028cb8:	1100      	asrmi	r0, r0, #4
 8028cba:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028cbe:	3301      	adds	r3, #1
 8028cc0:	b2c0      	uxtb	r0, r0
 8028cc2:	900b      	str	r0, [sp, #44]	; 0x2c
 8028cc4:	0858      	lsrs	r0, r3, #1
 8028cc6:	07dd      	lsls	r5, r3, #31
 8028cc8:	f817 e000 	ldrb.w	lr, [r7, r0]
 8028ccc:	bf54      	ite	pl
 8028cce:	f00e 030f 	andpl.w	r3, lr, #15
 8028cd2:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8028cd6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028cda:	b2db      	uxtb	r3, r3
 8028cdc:	9311      	str	r3, [sp, #68]	; 0x44
 8028cde:	b292      	uxth	r2, r2
 8028ce0:	b289      	uxth	r1, r1
 8028ce2:	fb02 f301 	mul.w	r3, r2, r1
 8028ce6:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8028cea:	0112      	lsls	r2, r2, #4
 8028cec:	b289      	uxth	r1, r1
 8028cee:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8028cf2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8028cf4:	1ad2      	subs	r2, r2, r3
 8028cf6:	1a40      	subs	r0, r0, r1
 8028cf8:	b292      	uxth	r2, r2
 8028cfa:	436a      	muls	r2, r5
 8028cfc:	b280      	uxth	r0, r0
 8028cfe:	fb0c 2c00 	mla	ip, ip, r0, r2
 8028d02:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8028d04:	fb01 c102 	mla	r1, r1, r2, ip
 8028d08:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8028d0a:	fb03 1302 	mla	r3, r3, r2, r1
 8028d0e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028d12:	b1db      	cbz	r3, 8028d4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028d14:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028d16:	4353      	muls	r3, r2
 8028d18:	1c5a      	adds	r2, r3, #1
 8028d1a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028d1e:	4ac6      	ldr	r2, [pc, #792]	; (8029038 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028d20:	121b      	asrs	r3, r3, #8
 8028d22:	6812      	ldr	r2, [r2, #0]
 8028d24:	2bff      	cmp	r3, #255	; 0xff
 8028d26:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8028d2a:	f040 8099 	bne.w	8028e60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8028d2e:	0953      	lsrs	r3, r2, #5
 8028d30:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8028d34:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8028d38:	f02c 0c07 	bic.w	ip, ip, #7
 8028d3c:	ea43 0c0c 	orr.w	ip, r3, ip
 8028d40:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028d44:	ea4c 0202 	orr.w	r2, ip, r2
 8028d48:	f8a8 2000 	strh.w	r2, [r8]
 8028d4c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028d4e:	441c      	add	r4, r3
 8028d50:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028d52:	441e      	add	r6, r3
 8028d54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8028d56:	3b01      	subs	r3, #1
 8028d58:	f108 0802 	add.w	r8, r8, #2
 8028d5c:	930e      	str	r3, [sp, #56]	; 0x38
 8028d5e:	e763      	b.n	8028c28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8028d60:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028d62:	441c      	add	r4, r3
 8028d64:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028d66:	441e      	add	r6, r3
 8028d68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028d6a:	3b01      	subs	r3, #1
 8028d6c:	9309      	str	r3, [sp, #36]	; 0x24
 8028d6e:	f109 0902 	add.w	r9, r9, #2
 8028d72:	e737      	b.n	8028be4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8028d74:	d024      	beq.n	8028dc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8028d76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028d78:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8028d7a:	3b01      	subs	r3, #1
 8028d7c:	fb00 4003 	mla	r0, r0, r3, r4
 8028d80:	1400      	asrs	r0, r0, #16
 8028d82:	f53f af4c 	bmi.w	8028c1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028d86:	3901      	subs	r1, #1
 8028d88:	4288      	cmp	r0, r1
 8028d8a:	f6bf af48 	bge.w	8028c1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028d8e:	9924      	ldr	r1, [sp, #144]	; 0x90
 8028d90:	fb01 6303 	mla	r3, r1, r3, r6
 8028d94:	141b      	asrs	r3, r3, #16
 8028d96:	f53f af42 	bmi.w	8028c1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028d9a:	3a01      	subs	r2, #1
 8028d9c:	4293      	cmp	r3, r2
 8028d9e:	f6bf af3e 	bge.w	8028c1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028da2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8028da6:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8028daa:	930e      	str	r3, [sp, #56]	; 0x38
 8028dac:	46c8      	mov	r8, r9
 8028dae:	f1bb 0f00 	cmp.w	fp, #0
 8028db2:	f300 80b7 	bgt.w	8028f24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8028db6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028db8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8028dbc:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8028dc0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8028dc2:	2b00      	cmp	r3, #0
 8028dc4:	f340 818d 	ble.w	80290e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8028dc8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028dcc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028dd0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8028dd4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028dd6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028dda:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028dde:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8028de2:	eef0 6a62 	vmov.f32	s13, s5
 8028de6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028dea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028dee:	ee77 2a62 	vsub.f32	s5, s14, s5
 8028df2:	ee16 4a90 	vmov	r4, s13
 8028df6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028dfa:	eef0 6a43 	vmov.f32	s13, s6
 8028dfe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8028e02:	ee12 2a90 	vmov	r2, s5
 8028e06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028e0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8028e0e:	ee13 2a10 	vmov	r2, s6
 8028e12:	9323      	str	r3, [sp, #140]	; 0x8c
 8028e14:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028e16:	fb92 f3f3 	sdiv	r3, r2, r3
 8028e1a:	9324      	str	r3, [sp, #144]	; 0x90
 8028e1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8028e1e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8028e20:	3b01      	subs	r3, #1
 8028e22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028e26:	930d      	str	r3, [sp, #52]	; 0x34
 8028e28:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028e2a:	bf08      	it	eq
 8028e2c:	4613      	moveq	r3, r2
 8028e2e:	ee16 6a90 	vmov	r6, s13
 8028e32:	9309      	str	r3, [sp, #36]	; 0x24
 8028e34:	eeb0 3a67 	vmov.f32	s6, s15
 8028e38:	eef0 2a47 	vmov.f32	s5, s14
 8028e3c:	e6c3      	b.n	8028bc6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8028e3e:	2900      	cmp	r1, #0
 8028e40:	f43f af4d 	beq.w	8028cde <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8028e44:	eb0a 0003 	add.w	r0, sl, r3
 8028e48:	0843      	lsrs	r3, r0, #1
 8028e4a:	07c0      	lsls	r0, r0, #31
 8028e4c:	5cfb      	ldrb	r3, [r7, r3]
 8028e4e:	bf54      	ite	pl
 8028e50:	f003 030f 	andpl.w	r3, r3, #15
 8028e54:	111b      	asrmi	r3, r3, #4
 8028e56:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028e5a:	b2db      	uxtb	r3, r3
 8028e5c:	930b      	str	r3, [sp, #44]	; 0x2c
 8028e5e:	e73e      	b.n	8028cde <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8028e60:	f8b8 e000 	ldrh.w	lr, [r8]
 8028e64:	fa1f fb83 	uxth.w	fp, r3
 8028e68:	ea4f 202e 	mov.w	r0, lr, asr #8
 8028e6c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8028e70:	43db      	mvns	r3, r3
 8028e72:	b2db      	uxtb	r3, r3
 8028e74:	fb11 f10b 	smulbb	r1, r1, fp
 8028e78:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8028e7c:	fb00 1003 	mla	r0, r0, r3, r1
 8028e80:	fa5f fc8c 	uxtb.w	ip, ip
 8028e84:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8028e88:	b2d2      	uxtb	r2, r2
 8028e8a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8028e8e:	b280      	uxth	r0, r0
 8028e90:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8028e94:	fb1c fc0b 	smulbb	ip, ip, fp
 8028e98:	fa5f fe8e 	uxtb.w	lr, lr
 8028e9c:	fb12 fb0b 	smulbb	fp, r2, fp
 8028ea0:	fb01 cc03 	mla	ip, r1, r3, ip
 8028ea4:	fb0e bb03 	mla	fp, lr, r3, fp
 8028ea8:	1c43      	adds	r3, r0, #1
 8028eaa:	fa1f fc8c 	uxth.w	ip, ip
 8028eae:	fa1f fb8b 	uxth.w	fp, fp
 8028eb2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8028eb6:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8028eba:	f10c 0101 	add.w	r1, ip, #1
 8028ebe:	f10b 0001 	add.w	r0, fp, #1
 8028ec2:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8028ec6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028eca:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8028ece:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8028ed2:	4318      	orrs	r0, r3
 8028ed4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8028ed8:	ea40 000c 	orr.w	r0, r0, ip
 8028edc:	f8a8 0000 	strh.w	r0, [r8]
 8028ee0:	e734      	b.n	8028d4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028ee2:	f113 0b01 	adds.w	fp, r3, #1
 8028ee6:	f53f af31 	bmi.w	8028d4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028eea:	45dc      	cmp	ip, fp
 8028eec:	f6ff af2e 	blt.w	8028d4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028ef0:	f110 0b01 	adds.w	fp, r0, #1
 8028ef4:	f53f af2a 	bmi.w	8028d4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028ef8:	45de      	cmp	lr, fp
 8028efa:	f6ff af27 	blt.w	8028d4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028efe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8028f00:	9302      	str	r3, [sp, #8]
 8028f02:	fa0f f38e 	sxth.w	r3, lr
 8028f06:	9301      	str	r3, [sp, #4]
 8028f08:	fa0f f38c 	sxth.w	r3, ip
 8028f0c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8028f10:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8028f14:	9300      	str	r3, [sp, #0]
 8028f16:	463a      	mov	r2, r7
 8028f18:	4653      	mov	r3, sl
 8028f1a:	4641      	mov	r1, r8
 8028f1c:	9815      	ldr	r0, [sp, #84]	; 0x54
 8028f1e:	f7ff fd4d 	bl	80289bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8028f22:	e713      	b.n	8028d4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028f24:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8028f26:	1422      	asrs	r2, r4, #16
 8028f28:	1433      	asrs	r3, r6, #16
 8028f2a:	fb05 2303 	mla	r3, r5, r3, r2
 8028f2e:	085a      	lsrs	r2, r3, #1
 8028f30:	07dd      	lsls	r5, r3, #31
 8028f32:	5cba      	ldrb	r2, [r7, r2]
 8028f34:	bf54      	ite	pl
 8028f36:	f002 020f 	andpl.w	r2, r2, #15
 8028f3a:	1112      	asrmi	r2, r2, #4
 8028f3c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8028f40:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8028f44:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028f48:	b2d2      	uxtb	r2, r2
 8028f4a:	2900      	cmp	r1, #0
 8028f4c:	d076      	beq.n	802903c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8028f4e:	f103 0e01 	add.w	lr, r3, #1
 8028f52:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8028f56:	f01e 0f01 	tst.w	lr, #1
 8028f5a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028f5e:	bf0c      	ite	eq
 8028f60:	f00c 0c0f 	andeq.w	ip, ip, #15
 8028f64:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8028f68:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028f6c:	fa5f f58c 	uxtb.w	r5, ip
 8028f70:	9512      	str	r5, [sp, #72]	; 0x48
 8028f72:	b300      	cbz	r0, 8028fb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8028f74:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028f76:	442b      	add	r3, r5
 8028f78:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028f7c:	07dd      	lsls	r5, r3, #31
 8028f7e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028f82:	bf54      	ite	pl
 8028f84:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028f88:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028f8c:	3301      	adds	r3, #1
 8028f8e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028f92:	fa5f f58c 	uxtb.w	r5, ip
 8028f96:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028f9a:	950c      	str	r5, [sp, #48]	; 0x30
 8028f9c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028fa0:	07dd      	lsls	r5, r3, #31
 8028fa2:	bf54      	ite	pl
 8028fa4:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028fa8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028fac:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028fb0:	fa5f f38c 	uxtb.w	r3, ip
 8028fb4:	9313      	str	r3, [sp, #76]	; 0x4c
 8028fb6:	b289      	uxth	r1, r1
 8028fb8:	b280      	uxth	r0, r0
 8028fba:	fb01 f300 	mul.w	r3, r1, r0
 8028fbe:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8028fc2:	0109      	lsls	r1, r1, #4
 8028fc4:	b280      	uxth	r0, r0
 8028fc6:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8028fca:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8028fcc:	1ac9      	subs	r1, r1, r3
 8028fce:	ebac 0c00 	sub.w	ip, ip, r0
 8028fd2:	b289      	uxth	r1, r1
 8028fd4:	4369      	muls	r1, r5
 8028fd6:	fa1f fc8c 	uxth.w	ip, ip
 8028fda:	fb02 120c 	mla	r2, r2, ip, r1
 8028fde:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028fe0:	fb00 2001 	mla	r0, r0, r1, r2
 8028fe4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8028fe6:	fb03 0302 	mla	r3, r3, r2, r0
 8028fea:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028fee:	b1d3      	cbz	r3, 8029026 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8028ff0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028ff2:	4353      	muls	r3, r2
 8028ff4:	1c5a      	adds	r2, r3, #1
 8028ff6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028ffa:	4a0f      	ldr	r2, [pc, #60]	; (8029038 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028ffc:	121b      	asrs	r3, r3, #8
 8028ffe:	6812      	ldr	r2, [r2, #0]
 8029000:	2bff      	cmp	r3, #255	; 0xff
 8029002:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8029006:	d12d      	bne.n	8029064 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8029008:	0953      	lsrs	r3, r2, #5
 802900a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802900e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8029012:	f02c 0c07 	bic.w	ip, ip, #7
 8029016:	ea43 0c0c 	orr.w	ip, r3, ip
 802901a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802901e:	ea4c 0202 	orr.w	r2, ip, r2
 8029022:	f8a8 2000 	strh.w	r2, [r8]
 8029026:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8029028:	441c      	add	r4, r3
 802902a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802902c:	f108 0802 	add.w	r8, r8, #2
 8029030:	441e      	add	r6, r3
 8029032:	f10b 3bff 	add.w	fp, fp, #4294967295
 8029036:	e6ba      	b.n	8028dae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8029038:	2000225c 	.word	0x2000225c
 802903c:	2800      	cmp	r0, #0
 802903e:	d0ba      	beq.n	8028fb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8029040:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8029042:	442b      	add	r3, r5
 8029044:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8029048:	07db      	lsls	r3, r3, #31
 802904a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802904e:	bf54      	ite	pl
 8029050:	f00c 0c0f 	andpl.w	ip, ip, #15
 8029054:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8029058:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802905c:	fa5f f38c 	uxtb.w	r3, ip
 8029060:	930c      	str	r3, [sp, #48]	; 0x30
 8029062:	e7a8      	b.n	8028fb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8029064:	f8b8 e000 	ldrh.w	lr, [r8]
 8029068:	fa1f fa83 	uxth.w	sl, r3
 802906c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8029070:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8029074:	43db      	mvns	r3, r3
 8029076:	b2db      	uxtb	r3, r3
 8029078:	fb11 f10a 	smulbb	r1, r1, sl
 802907c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8029080:	fb00 1003 	mla	r0, r0, r3, r1
 8029084:	b2d2      	uxtb	r2, r2
 8029086:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802908a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802908e:	fa5f fe8e 	uxtb.w	lr, lr
 8029092:	fb12 f20a 	smulbb	r2, r2, sl
 8029096:	fb0e 2203 	mla	r2, lr, r3, r2
 802909a:	fa5f fc8c 	uxtb.w	ip, ip
 802909e:	b280      	uxth	r0, r0
 80290a0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80290a4:	b292      	uxth	r2, r2
 80290a6:	fb1c fc0a 	smulbb	ip, ip, sl
 80290aa:	fb01 cc03 	mla	ip, r1, r3, ip
 80290ae:	1c43      	adds	r3, r0, #1
 80290b0:	1c51      	adds	r1, r2, #1
 80290b2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80290b6:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80290ba:	fa1f fc8c 	uxth.w	ip, ip
 80290be:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80290c2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80290c6:	4308      	orrs	r0, r1
 80290c8:	f10c 0101 	add.w	r1, ip, #1
 80290cc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80290d0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80290d4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80290d8:	ea40 000c 	orr.w	r0, r0, ip
 80290dc:	f8a8 0000 	strh.w	r0, [r8]
 80290e0:	e7a1      	b.n	8029026 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80290e2:	b017      	add	sp, #92	; 0x5c
 80290e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080290e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80290e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80290ec:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80290f0:	2d00      	cmp	r5, #0
 80290f2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80290f6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80290fa:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80290fe:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8029102:	fb05 0e03 	mla	lr, r5, r3, r0
 8029106:	f2c0 80b0 	blt.w	802926a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802910a:	45a9      	cmp	r9, r5
 802910c:	f340 80ad 	ble.w	802926a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8029110:	2800      	cmp	r0, #0
 8029112:	f2c0 80a8 	blt.w	8029266 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8029116:	4580      	cmp	r8, r0
 8029118:	f340 80a5 	ble.w	8029266 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802911c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8029120:	f01e 0f01 	tst.w	lr, #1
 8029124:	5d16      	ldrb	r6, [r2, r4]
 8029126:	bf0c      	ite	eq
 8029128:	f006 060f 	andeq.w	r6, r6, #15
 802912c:	1136      	asrne	r6, r6, #4
 802912e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8029132:	b2f6      	uxtb	r6, r6
 8029134:	1c44      	adds	r4, r0, #1
 8029136:	f100 809b 	bmi.w	8029270 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802913a:	45a0      	cmp	r8, r4
 802913c:	f340 8098 	ble.w	8029270 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8029140:	2f00      	cmp	r7, #0
 8029142:	f000 8097 	beq.w	8029274 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8029146:	f10e 0a01 	add.w	sl, lr, #1
 802914a:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802914e:	f01a 0f01 	tst.w	sl, #1
 8029152:	5d14      	ldrb	r4, [r2, r4]
 8029154:	bf0c      	ite	eq
 8029156:	f004 040f 	andeq.w	r4, r4, #15
 802915a:	1124      	asrne	r4, r4, #4
 802915c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8029160:	b2e4      	uxtb	r4, r4
 8029162:	3501      	adds	r5, #1
 8029164:	f100 808a 	bmi.w	802927c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8029168:	45a9      	cmp	r9, r5
 802916a:	f340 8087 	ble.w	802927c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802916e:	f1bc 0f00 	cmp.w	ip, #0
 8029172:	f000 8086 	beq.w	8029282 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8029176:	2800      	cmp	r0, #0
 8029178:	db7e      	blt.n	8029278 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802917a:	4580      	cmp	r8, r0
 802917c:	dd7c      	ble.n	8029278 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802917e:	eb03 090e 	add.w	r9, r3, lr
 8029182:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8029186:	f019 0f01 	tst.w	r9, #1
 802918a:	5d55      	ldrb	r5, [r2, r5]
 802918c:	bf0c      	ite	eq
 802918e:	f005 050f 	andeq.w	r5, r5, #15
 8029192:	112d      	asrne	r5, r5, #4
 8029194:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8029198:	b2ed      	uxtb	r5, r5
 802919a:	3001      	adds	r0, #1
 802919c:	d474      	bmi.n	8029288 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802919e:	4580      	cmp	r8, r0
 80291a0:	dd72      	ble.n	8029288 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80291a2:	2f00      	cmp	r7, #0
 80291a4:	d072      	beq.n	802928c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 80291a6:	3301      	adds	r3, #1
 80291a8:	449e      	add	lr, r3
 80291aa:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80291ae:	f01e 0f01 	tst.w	lr, #1
 80291b2:	5cd0      	ldrb	r0, [r2, r3]
 80291b4:	bf0c      	ite	eq
 80291b6:	f000 000f 	andeq.w	r0, r0, #15
 80291ba:	1100      	asrne	r0, r0, #4
 80291bc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80291c0:	b2c3      	uxtb	r3, r0
 80291c2:	b2ba      	uxth	r2, r7
 80291c4:	fa1f fc8c 	uxth.w	ip, ip
 80291c8:	fb02 f00c 	mul.w	r0, r2, ip
 80291cc:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80291d0:	0112      	lsls	r2, r2, #4
 80291d2:	fa1f fc8c 	uxth.w	ip, ip
 80291d6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80291da:	1a12      	subs	r2, r2, r0
 80291dc:	eba7 070c 	sub.w	r7, r7, ip
 80291e0:	b292      	uxth	r2, r2
 80291e2:	b2bf      	uxth	r7, r7
 80291e4:	4362      	muls	r2, r4
 80291e6:	fb06 2207 	mla	r2, r6, r7, r2
 80291ea:	fb0c 2505 	mla	r5, ip, r5, r2
 80291ee:	fb00 5303 	mla	r3, r0, r3, r5
 80291f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80291f6:	b3a3      	cbz	r3, 8029262 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 80291f8:	4a25      	ldr	r2, [pc, #148]	; (8029290 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 80291fa:	880e      	ldrh	r6, [r1, #0]
 80291fc:	6815      	ldr	r5, [r2, #0]
 80291fe:	1234      	asrs	r4, r6, #8
 8029200:	b29a      	uxth	r2, r3
 8029202:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8029206:	43db      	mvns	r3, r3
 8029208:	b2db      	uxtb	r3, r3
 802920a:	fb10 f002 	smulbb	r0, r0, r2
 802920e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8029212:	fb04 0403 	mla	r4, r4, r3, r0
 8029216:	f3c5 2707 	ubfx	r7, r5, #8, #8
 802921a:	10f0      	asrs	r0, r6, #3
 802921c:	b2ed      	uxtb	r5, r5
 802921e:	00f6      	lsls	r6, r6, #3
 8029220:	fb17 f702 	smulbb	r7, r7, r2
 8029224:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8029228:	fb15 f202 	smulbb	r2, r5, r2
 802922c:	b2f6      	uxtb	r6, r6
 802922e:	b2a4      	uxth	r4, r4
 8029230:	fb00 7003 	mla	r0, r0, r3, r7
 8029234:	fb06 2303 	mla	r3, r6, r3, r2
 8029238:	b29a      	uxth	r2, r3
 802923a:	1c63      	adds	r3, r4, #1
 802923c:	b280      	uxth	r0, r0
 802923e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8029242:	1c53      	adds	r3, r2, #1
 8029244:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8029248:	1c42      	adds	r2, r0, #1
 802924a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802924e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8029252:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8029256:	0940      	lsrs	r0, r0, #5
 8029258:	4323      	orrs	r3, r4
 802925a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802925e:	4303      	orrs	r3, r0
 8029260:	800b      	strh	r3, [r1, #0]
 8029262:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8029266:	2600      	movs	r6, #0
 8029268:	e764      	b.n	8029134 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802926a:	2400      	movs	r4, #0
 802926c:	4626      	mov	r6, r4
 802926e:	e778      	b.n	8029162 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8029270:	2400      	movs	r4, #0
 8029272:	e776      	b.n	8029162 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8029274:	463c      	mov	r4, r7
 8029276:	e774      	b.n	8029162 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8029278:	2500      	movs	r5, #0
 802927a:	e78e      	b.n	802919a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 802927c:	2300      	movs	r3, #0
 802927e:	461d      	mov	r5, r3
 8029280:	e79f      	b.n	80291c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8029282:	4663      	mov	r3, ip
 8029284:	4665      	mov	r5, ip
 8029286:	e79c      	b.n	80291c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8029288:	2300      	movs	r3, #0
 802928a:	e79a      	b.n	80291c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802928c:	463b      	mov	r3, r7
 802928e:	e798      	b.n	80291c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8029290:	2000225c 	.word	0x2000225c

08029294 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8029294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029298:	b093      	sub	sp, #76	; 0x4c
 802929a:	461d      	mov	r5, r3
 802929c:	920c      	str	r2, [sp, #48]	; 0x30
 802929e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80292a0:	9107      	str	r1, [sp, #28]
 80292a2:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80292a6:	9011      	str	r0, [sp, #68]	; 0x44
 80292a8:	6850      	ldr	r0, [r2, #4]
 80292aa:	6812      	ldr	r2, [r2, #0]
 80292ac:	fb00 1303 	mla	r3, r0, r3, r1
 80292b0:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80292b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80292b6:	689b      	ldr	r3, [r3, #8]
 80292b8:	3301      	adds	r3, #1
 80292ba:	f023 0301 	bic.w	r3, r3, #1
 80292be:	9306      	str	r3, [sp, #24]
 80292c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80292c2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80292c6:	681f      	ldr	r7, [r3, #0]
 80292c8:	9b07      	ldr	r3, [sp, #28]
 80292ca:	2b00      	cmp	r3, #0
 80292cc:	dc03      	bgt.n	80292d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80292ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80292d0:	2b00      	cmp	r3, #0
 80292d2:	f340 8267 	ble.w	80297a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80292d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80292d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80292dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80292e0:	1e48      	subs	r0, r1, #1
 80292e2:	f102 3cff 	add.w	ip, r2, #4294967295
 80292e6:	2d00      	cmp	r5, #0
 80292e8:	f340 80b8 	ble.w	802945c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80292ec:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80292f0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80292f4:	d406      	bmi.n	8029304 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80292f6:	4586      	cmp	lr, r0
 80292f8:	da04      	bge.n	8029304 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80292fa:	2b00      	cmp	r3, #0
 80292fc:	db02      	blt.n	8029304 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80292fe:	4563      	cmp	r3, ip
 8029300:	f2c0 80ad 	blt.w	802945e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8029304:	f11e 0e01 	adds.w	lr, lr, #1
 8029308:	f100 80a0 	bmi.w	802944c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802930c:	4571      	cmp	r1, lr
 802930e:	f2c0 809d 	blt.w	802944c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8029312:	3301      	adds	r3, #1
 8029314:	f100 809a 	bmi.w	802944c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8029318:	429a      	cmp	r2, r3
 802931a:	f2c0 8097 	blt.w	802944c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802931e:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8029322:	9509      	str	r5, [sp, #36]	; 0x24
 8029324:	46c8      	mov	r8, r9
 8029326:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029328:	2b00      	cmp	r3, #0
 802932a:	f340 80b6 	ble.w	802949a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 802932e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8029332:	9308      	str	r3, [sp, #32]
 8029334:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8029336:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802933a:	1423      	asrs	r3, r4, #16
 802933c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8029340:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8029344:	f100 813e 	bmi.w	80295c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8029348:	f10c 3bff 	add.w	fp, ip, #4294967295
 802934c:	455b      	cmp	r3, fp
 802934e:	f280 8139 	bge.w	80295c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8029352:	2800      	cmp	r0, #0
 8029354:	f2c0 8136 	blt.w	80295c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8029358:	f10e 3bff 	add.w	fp, lr, #4294967295
 802935c:	4558      	cmp	r0, fp
 802935e:	f280 8131 	bge.w	80295c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8029362:	9a06      	ldr	r2, [sp, #24]
 8029364:	fb00 3302 	mla	r3, r0, r2, r3
 8029368:	0858      	lsrs	r0, r3, #1
 802936a:	07da      	lsls	r2, r3, #31
 802936c:	f817 c000 	ldrb.w	ip, [r7, r0]
 8029370:	9a08      	ldr	r2, [sp, #32]
 8029372:	bf54      	ite	pl
 8029374:	f00c 0c0f 	andpl.w	ip, ip, #15
 8029378:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802937c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8029380:	fa5f fc8c 	uxtb.w	ip, ip
 8029384:	2a00      	cmp	r2, #0
 8029386:	f000 80cb 	beq.w	8029520 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802938a:	1c58      	adds	r0, r3, #1
 802938c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8029390:	07c0      	lsls	r0, r0, #31
 8029392:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8029396:	bf54      	ite	pl
 8029398:	f00e 0e0f 	andpl.w	lr, lr, #15
 802939c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80293a0:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80293a4:	fa5f fe8e 	uxtb.w	lr, lr
 80293a8:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 80293ac:	b1b9      	cbz	r1, 80293de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80293ae:	4453      	add	r3, sl
 80293b0:	0858      	lsrs	r0, r3, #1
 80293b2:	07da      	lsls	r2, r3, #31
 80293b4:	5c38      	ldrb	r0, [r7, r0]
 80293b6:	bf54      	ite	pl
 80293b8:	f000 000f 	andpl.w	r0, r0, #15
 80293bc:	1100      	asrmi	r0, r0, #4
 80293be:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80293c2:	b2c0      	uxtb	r0, r0
 80293c4:	900a      	str	r0, [sp, #40]	; 0x28
 80293c6:	1c58      	adds	r0, r3, #1
 80293c8:	0843      	lsrs	r3, r0, #1
 80293ca:	07c2      	lsls	r2, r0, #31
 80293cc:	5cfb      	ldrb	r3, [r7, r3]
 80293ce:	bf54      	ite	pl
 80293d0:	f003 030f 	andpl.w	r3, r3, #15
 80293d4:	111b      	asrmi	r3, r3, #4
 80293d6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80293da:	b2db      	uxtb	r3, r3
 80293dc:	930e      	str	r3, [sp, #56]	; 0x38
 80293de:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80293e2:	b289      	uxth	r1, r1
 80293e4:	fb02 f301 	mul.w	r3, r2, r1
 80293e8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80293ec:	0112      	lsls	r2, r2, #4
 80293ee:	b289      	uxth	r1, r1
 80293f0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80293f4:	1a40      	subs	r0, r0, r1
 80293f6:	fa1f fe80 	uxth.w	lr, r0
 80293fa:	1ad2      	subs	r2, r2, r3
 80293fc:	980d      	ldr	r0, [sp, #52]	; 0x34
 80293fe:	b292      	uxth	r2, r2
 8029400:	4342      	muls	r2, r0
 8029402:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8029406:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8029408:	fb01 c102 	mla	r1, r1, r2, ip
 802940c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802940e:	fb03 1302 	mla	r3, r3, r2, r1
 8029412:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8029416:	2bff      	cmp	r3, #255	; 0xff
 8029418:	f040 8093 	bne.w	8029542 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 802941c:	4bbe      	ldr	r3, [pc, #760]	; (8029718 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802941e:	681a      	ldr	r2, [r3, #0]
 8029420:	4bbe      	ldr	r3, [pc, #760]	; (802971c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8029422:	0951      	lsrs	r1, r2, #5
 8029424:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8029428:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802942c:	430b      	orrs	r3, r1
 802942e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8029432:	4313      	orrs	r3, r2
 8029434:	f8a8 3000 	strh.w	r3, [r8]
 8029438:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802943a:	441c      	add	r4, r3
 802943c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802943e:	441e      	add	r6, r3
 8029440:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029442:	3b01      	subs	r3, #1
 8029444:	f108 0802 	add.w	r8, r8, #2
 8029448:	9309      	str	r3, [sp, #36]	; 0x24
 802944a:	e76c      	b.n	8029326 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802944c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802944e:	441c      	add	r4, r3
 8029450:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8029452:	3d01      	subs	r5, #1
 8029454:	441e      	add	r6, r3
 8029456:	f109 0902 	add.w	r9, r9, #2
 802945a:	e744      	b.n	80292e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802945c:	d021      	beq.n	80294a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802945e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8029460:	1e6b      	subs	r3, r5, #1
 8029462:	fb00 4003 	mla	r0, r0, r3, r4
 8029466:	1400      	asrs	r0, r0, #16
 8029468:	f53f af59 	bmi.w	802931e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802946c:	3901      	subs	r1, #1
 802946e:	4288      	cmp	r0, r1
 8029470:	f6bf af55 	bge.w	802931e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8029474:	9920      	ldr	r1, [sp, #128]	; 0x80
 8029476:	fb01 6303 	mla	r3, r1, r3, r6
 802947a:	141b      	asrs	r3, r3, #16
 802947c:	f53f af4f 	bmi.w	802931e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8029480:	3a01      	subs	r2, #1
 8029482:	4293      	cmp	r3, r2
 8029484:	f6bf af4b 	bge.w	802931e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8029488:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 802948c:	9308      	str	r3, [sp, #32]
 802948e:	46a8      	mov	r8, r5
 8029490:	46ce      	mov	lr, r9
 8029492:	f1b8 0f00 	cmp.w	r8, #0
 8029496:	f300 80b5 	bgt.w	8029604 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802949a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802949e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80294a2:	9b07      	ldr	r3, [sp, #28]
 80294a4:	2b00      	cmp	r3, #0
 80294a6:	f340 817d 	ble.w	80297a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80294aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80294ae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80294b2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80294b6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80294b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80294bc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80294c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80294c4:	eef0 6a62 	vmov.f32	s13, s5
 80294c8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80294cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80294d0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80294d4:	ee16 4a90 	vmov	r4, s13
 80294d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80294dc:	eef0 6a43 	vmov.f32	s13, s6
 80294e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80294e4:	ee12 2a90 	vmov	r2, s5
 80294e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80294ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80294f0:	ee13 2a10 	vmov	r2, s6
 80294f4:	931f      	str	r3, [sp, #124]	; 0x7c
 80294f6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80294f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80294fc:	9320      	str	r3, [sp, #128]	; 0x80
 80294fe:	9b07      	ldr	r3, [sp, #28]
 8029500:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8029502:	3b01      	subs	r3, #1
 8029504:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8029508:	9307      	str	r3, [sp, #28]
 802950a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802950c:	ee16 6a90 	vmov	r6, s13
 8029510:	bf14      	ite	ne
 8029512:	461d      	movne	r5, r3
 8029514:	4615      	moveq	r5, r2
 8029516:	eeb0 3a67 	vmov.f32	s6, s15
 802951a:	eef0 2a47 	vmov.f32	s5, s14
 802951e:	e6d3      	b.n	80292c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8029520:	2900      	cmp	r1, #0
 8029522:	f43f af5c 	beq.w	80293de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8029526:	eb0a 0003 	add.w	r0, sl, r3
 802952a:	0843      	lsrs	r3, r0, #1
 802952c:	07c0      	lsls	r0, r0, #31
 802952e:	5cfb      	ldrb	r3, [r7, r3]
 8029530:	bf54      	ite	pl
 8029532:	f003 030f 	andpl.w	r3, r3, #15
 8029536:	111b      	asrmi	r3, r3, #4
 8029538:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802953c:	b2db      	uxtb	r3, r3
 802953e:	930a      	str	r3, [sp, #40]	; 0x28
 8029540:	e74d      	b.n	80293de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8029542:	2b00      	cmp	r3, #0
 8029544:	f43f af78 	beq.w	8029438 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8029548:	4a73      	ldr	r2, [pc, #460]	; (8029718 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802954a:	f8b8 c000 	ldrh.w	ip, [r8]
 802954e:	6810      	ldr	r0, [r2, #0]
 8029550:	fa1f fe83 	uxth.w	lr, r3
 8029554:	ea4f 212c 	mov.w	r1, ip, asr #8
 8029558:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802955c:	43db      	mvns	r3, r3
 802955e:	b2db      	uxtb	r3, r3
 8029560:	fb12 f20e 	smulbb	r2, r2, lr
 8029564:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8029568:	fb01 2103 	mla	r1, r1, r3, r2
 802956c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8029570:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8029574:	b2c0      	uxtb	r0, r0
 8029576:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802957a:	fb1b fb0e 	smulbb	fp, fp, lr
 802957e:	b289      	uxth	r1, r1
 8029580:	fb10 fe0e 	smulbb	lr, r0, lr
 8029584:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8029588:	fa5f fc8c 	uxtb.w	ip, ip
 802958c:	fb02 b203 	mla	r2, r2, r3, fp
 8029590:	1c48      	adds	r0, r1, #1
 8029592:	fb0c e303 	mla	r3, ip, r3, lr
 8029596:	b292      	uxth	r2, r2
 8029598:	b29b      	uxth	r3, r3
 802959a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802959e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80295a2:	f102 0b01 	add.w	fp, r2, #1
 80295a6:	1c59      	adds	r1, r3, #1
 80295a8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80295ac:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80295b0:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80295b4:	0952      	lsrs	r2, r2, #5
 80295b6:	4301      	orrs	r1, r0
 80295b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80295bc:	4311      	orrs	r1, r2
 80295be:	f8a8 1000 	strh.w	r1, [r8]
 80295c2:	e739      	b.n	8029438 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80295c4:	f113 0b01 	adds.w	fp, r3, #1
 80295c8:	f53f af36 	bmi.w	8029438 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80295cc:	45dc      	cmp	ip, fp
 80295ce:	f6ff af33 	blt.w	8029438 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80295d2:	f110 0b01 	adds.w	fp, r0, #1
 80295d6:	f53f af2f 	bmi.w	8029438 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80295da:	45de      	cmp	lr, fp
 80295dc:	f6ff af2c 	blt.w	8029438 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80295e0:	9a08      	ldr	r2, [sp, #32]
 80295e2:	9302      	str	r3, [sp, #8]
 80295e4:	fa0f f38e 	sxth.w	r3, lr
 80295e8:	9301      	str	r3, [sp, #4]
 80295ea:	fa0f f38c 	sxth.w	r3, ip
 80295ee:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80295f2:	9105      	str	r1, [sp, #20]
 80295f4:	9300      	str	r3, [sp, #0]
 80295f6:	463a      	mov	r2, r7
 80295f8:	4653      	mov	r3, sl
 80295fa:	4641      	mov	r1, r8
 80295fc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80295fe:	f7ff fd73 	bl	80290e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8029602:	e719      	b.n	8029438 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8029604:	9906      	ldr	r1, [sp, #24]
 8029606:	1422      	asrs	r2, r4, #16
 8029608:	1433      	asrs	r3, r6, #16
 802960a:	fb01 2303 	mla	r3, r1, r3, r2
 802960e:	085a      	lsrs	r2, r3, #1
 8029610:	07d9      	lsls	r1, r3, #31
 8029612:	5cba      	ldrb	r2, [r7, r2]
 8029614:	bf54      	ite	pl
 8029616:	f002 020f 	andpl.w	r2, r2, #15
 802961a:	1112      	asrmi	r2, r2, #4
 802961c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8029620:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8029624:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8029628:	b2d2      	uxtb	r2, r2
 802962a:	2800      	cmp	r0, #0
 802962c:	d062      	beq.n	80296f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 802962e:	f103 0a01 	add.w	sl, r3, #1
 8029632:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8029636:	f01a 0f01 	tst.w	sl, #1
 802963a:	5c79      	ldrb	r1, [r7, r1]
 802963c:	bf0c      	ite	eq
 802963e:	f001 010f 	andeq.w	r1, r1, #15
 8029642:	1109      	asrne	r1, r1, #4
 8029644:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8029648:	b2c9      	uxtb	r1, r1
 802964a:	910f      	str	r1, [sp, #60]	; 0x3c
 802964c:	f1bc 0f00 	cmp.w	ip, #0
 8029650:	d019      	beq.n	8029686 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8029652:	9908      	ldr	r1, [sp, #32]
 8029654:	440b      	add	r3, r1
 8029656:	0859      	lsrs	r1, r3, #1
 8029658:	f013 0f01 	tst.w	r3, #1
 802965c:	5c79      	ldrb	r1, [r7, r1]
 802965e:	bf0c      	ite	eq
 8029660:	f001 010f 	andeq.w	r1, r1, #15
 8029664:	1109      	asrne	r1, r1, #4
 8029666:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802966a:	b2c9      	uxtb	r1, r1
 802966c:	3301      	adds	r3, #1
 802966e:	910b      	str	r1, [sp, #44]	; 0x2c
 8029670:	0859      	lsrs	r1, r3, #1
 8029672:	07db      	lsls	r3, r3, #31
 8029674:	5c79      	ldrb	r1, [r7, r1]
 8029676:	bf54      	ite	pl
 8029678:	f001 010f 	andpl.w	r1, r1, #15
 802967c:	1109      	asrmi	r1, r1, #4
 802967e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8029682:	b2c9      	uxtb	r1, r1
 8029684:	9110      	str	r1, [sp, #64]	; 0x40
 8029686:	b280      	uxth	r0, r0
 8029688:	fa1f fc8c 	uxth.w	ip, ip
 802968c:	fb00 f30c 	mul.w	r3, r0, ip
 8029690:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8029694:	0100      	lsls	r0, r0, #4
 8029696:	fa1f fc8c 	uxth.w	ip, ip
 802969a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 802969e:	eba1 010c 	sub.w	r1, r1, ip
 80296a2:	fa1f fa81 	uxth.w	sl, r1
 80296a6:	1ac0      	subs	r0, r0, r3
 80296a8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80296aa:	b280      	uxth	r0, r0
 80296ac:	4348      	muls	r0, r1
 80296ae:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80296b0:	fb02 020a 	mla	r2, r2, sl, r0
 80296b4:	fb0c 2c01 	mla	ip, ip, r1, r2
 80296b8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80296ba:	fb03 c302 	mla	r3, r3, r2, ip
 80296be:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80296c2:	2bff      	cmp	r3, #255	; 0xff
 80296c4:	d12c      	bne.n	8029720 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 80296c6:	4b14      	ldr	r3, [pc, #80]	; (8029718 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80296c8:	681a      	ldr	r2, [r3, #0]
 80296ca:	4b14      	ldr	r3, [pc, #80]	; (802971c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80296cc:	0951      	lsrs	r1, r2, #5
 80296ce:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80296d2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80296d6:	430b      	orrs	r3, r1
 80296d8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80296dc:	4313      	orrs	r3, r2
 80296de:	f8ae 3000 	strh.w	r3, [lr]
 80296e2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80296e4:	441c      	add	r4, r3
 80296e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80296e8:	f10e 0e02 	add.w	lr, lr, #2
 80296ec:	441e      	add	r6, r3
 80296ee:	f108 38ff 	add.w	r8, r8, #4294967295
 80296f2:	e6ce      	b.n	8029492 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80296f4:	f1bc 0f00 	cmp.w	ip, #0
 80296f8:	d0c5      	beq.n	8029686 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80296fa:	9908      	ldr	r1, [sp, #32]
 80296fc:	440b      	add	r3, r1
 80296fe:	0859      	lsrs	r1, r3, #1
 8029700:	07db      	lsls	r3, r3, #31
 8029702:	5c79      	ldrb	r1, [r7, r1]
 8029704:	bf54      	ite	pl
 8029706:	f001 010f 	andpl.w	r1, r1, #15
 802970a:	1109      	asrmi	r1, r1, #4
 802970c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8029710:	b2c9      	uxtb	r1, r1
 8029712:	910b      	str	r1, [sp, #44]	; 0x2c
 8029714:	e7b7      	b.n	8029686 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8029716:	bf00      	nop
 8029718:	2000225c 	.word	0x2000225c
 802971c:	fffff800 	.word	0xfffff800
 8029720:	2b00      	cmp	r3, #0
 8029722:	d0de      	beq.n	80296e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8029724:	4a21      	ldr	r2, [pc, #132]	; (80297ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8029726:	f8be c000 	ldrh.w	ip, [lr]
 802972a:	6810      	ldr	r0, [r2, #0]
 802972c:	fa1f fa83 	uxth.w	sl, r3
 8029730:	ea4f 212c 	mov.w	r1, ip, asr #8
 8029734:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8029738:	43db      	mvns	r3, r3
 802973a:	b2db      	uxtb	r3, r3
 802973c:	fb12 f20a 	smulbb	r2, r2, sl
 8029740:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8029744:	fb01 2103 	mla	r1, r1, r3, r2
 8029748:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802974c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8029750:	b2c0      	uxtb	r0, r0
 8029752:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8029756:	fa5f fc8c 	uxtb.w	ip, ip
 802975a:	fb10 f00a 	smulbb	r0, r0, sl
 802975e:	fb0c 0003 	mla	r0, ip, r3, r0
 8029762:	b289      	uxth	r1, r1
 8029764:	fb1b fb0a 	smulbb	fp, fp, sl
 8029768:	b280      	uxth	r0, r0
 802976a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802976e:	fb02 b203 	mla	r2, r2, r3, fp
 8029772:	1c4b      	adds	r3, r1, #1
 8029774:	f100 0b01 	add.w	fp, r0, #1
 8029778:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802977c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8029780:	b292      	uxth	r2, r2
 8029782:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8029786:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802978a:	ea4b 0101 	orr.w	r1, fp, r1
 802978e:	f102 0b01 	add.w	fp, r2, #1
 8029792:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8029796:	0952      	lsrs	r2, r2, #5
 8029798:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802979c:	4311      	orrs	r1, r2
 802979e:	f8ae 1000 	strh.w	r1, [lr]
 80297a2:	e79e      	b.n	80296e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80297a4:	b013      	add	sp, #76	; 0x4c
 80297a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80297aa:	bf00      	nop
 80297ac:	2000225c 	.word	0x2000225c

080297b0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80297b0:	b570      	push	{r4, r5, r6, lr}
 80297b2:	1208      	asrs	r0, r1, #8
 80297b4:	b29e      	uxth	r6, r3
 80297b6:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80297ba:	1213      	asrs	r3, r2, #8
 80297bc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80297c0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80297c4:	fb13 f305 	smulbb	r3, r3, r5
 80297c8:	fb10 f006 	smulbb	r0, r0, r6
 80297cc:	4418      	add	r0, r3
 80297ce:	10cc      	asrs	r4, r1, #3
 80297d0:	10d3      	asrs	r3, r2, #3
 80297d2:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80297d6:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80297da:	fb13 f305 	smulbb	r3, r3, r5
 80297de:	fb14 f406 	smulbb	r4, r4, r6
 80297e2:	00c9      	lsls	r1, r1, #3
 80297e4:	00d2      	lsls	r2, r2, #3
 80297e6:	441c      	add	r4, r3
 80297e8:	b2d2      	uxtb	r2, r2
 80297ea:	b2cb      	uxtb	r3, r1
 80297ec:	fb12 f205 	smulbb	r2, r2, r5
 80297f0:	b280      	uxth	r0, r0
 80297f2:	fb13 f306 	smulbb	r3, r3, r6
 80297f6:	4413      	add	r3, r2
 80297f8:	1c42      	adds	r2, r0, #1
 80297fa:	b29b      	uxth	r3, r3
 80297fc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8029800:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8029804:	1c58      	adds	r0, r3, #1
 8029806:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802980a:	b2a4      	uxth	r4, r4
 802980c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8029810:	4310      	orrs	r0, r2
 8029812:	1c62      	adds	r2, r4, #1
 8029814:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8029818:	0964      	lsrs	r4, r4, #5
 802981a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802981e:	4320      	orrs	r0, r4
 8029820:	bd70      	pop	{r4, r5, r6, pc}
	...

08029824 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8029824:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029828:	b08f      	sub	sp, #60	; 0x3c
 802982a:	461c      	mov	r4, r3
 802982c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8029830:	9004      	str	r0, [sp, #16]
 8029832:	460d      	mov	r5, r1
 8029834:	4616      	mov	r6, r2
 8029836:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8029838:	2f00      	cmp	r7, #0
 802983a:	f000 80f6 	beq.w	8029a2a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 802983e:	6820      	ldr	r0, [r4, #0]
 8029840:	6861      	ldr	r1, [r4, #4]
 8029842:	aa0a      	add	r2, sp, #40	; 0x28
 8029844:	c203      	stmia	r2!, {r0, r1}
 8029846:	6818      	ldr	r0, [r3, #0]
 8029848:	6859      	ldr	r1, [r3, #4]
 802984a:	aa0c      	add	r2, sp, #48	; 0x30
 802984c:	c203      	stmia	r2!, {r0, r1}
 802984e:	a80a      	add	r0, sp, #40	; 0x28
 8029850:	f7ef fbbe 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029854:	4621      	mov	r1, r4
 8029856:	a80c      	add	r0, sp, #48	; 0x30
 8029858:	f7ef fbfe 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802985c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8029860:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8029864:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8029868:	f002 0301 	and.w	r3, r2, #1
 802986c:	9306      	str	r3, [sp, #24]
 802986e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8029872:	f003 0101 	and.w	r1, r3, #1
 8029876:	9105      	str	r1, [sp, #20]
 8029878:	9805      	ldr	r0, [sp, #20]
 802987a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 802987e:	4403      	add	r3, r0
 8029880:	fb01 2303 	mla	r3, r1, r3, r2
 8029884:	f04f 0802 	mov.w	r8, #2
 8029888:	fb93 f3f8 	sdiv	r3, r3, r8
 802988c:	441d      	add	r5, r3
 802988e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8029892:	441a      	add	r2, r3
 8029894:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8029898:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 802989c:	4419      	add	r1, r3
 802989e:	4b64      	ldr	r3, [pc, #400]	; (8029a30 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80298a0:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80298a4:	6818      	ldr	r0, [r3, #0]
 80298a6:	6803      	ldr	r3, [r0, #0]
 80298a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80298aa:	4798      	blx	r3
 80298ac:	4a61      	ldr	r2, [pc, #388]	; (8029a34 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80298ae:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80298b2:	8813      	ldrh	r3, [r2, #0]
 80298b4:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 80298b8:	2fff      	cmp	r7, #255	; 0xff
 80298ba:	fb03 a404 	mla	r4, r3, r4, sl
 80298be:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80298c2:	f106 0604 	add.w	r6, r6, #4
 80298c6:	4611      	mov	r1, r2
 80298c8:	fb03 fb0b 	mul.w	fp, r3, fp
 80298cc:	d06b      	beq.n	80299a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80298ce:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 80298d2:	9303      	str	r3, [sp, #12]
 80298d4:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80298d8:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80298dc:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80298e0:	9b07      	ldr	r3, [sp, #28]
 80298e2:	42a3      	cmp	r3, r4
 80298e4:	f240 809c 	bls.w	8029a20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80298e8:	9b06      	ldr	r3, [sp, #24]
 80298ea:	2b00      	cmp	r3, #0
 80298ec:	d039      	beq.n	8029962 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80298ee:	782b      	ldrb	r3, [r5, #0]
 80298f0:	8822      	ldrh	r2, [r4, #0]
 80298f2:	9804      	ldr	r0, [sp, #16]
 80298f4:	f003 030f 	and.w	r3, r3, #15
 80298f8:	f105 0801 	add.w	r8, r5, #1
 80298fc:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8029900:	9b03      	ldr	r3, [sp, #12]
 8029902:	9300      	str	r3, [sp, #0]
 8029904:	463b      	mov	r3, r7
 8029906:	f7ff ff53 	bl	80297b0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802990a:	f824 0b02 	strh.w	r0, [r4], #2
 802990e:	f109 3bff 	add.w	fp, r9, #4294967295
 8029912:	f1bb 0f01 	cmp.w	fp, #1
 8029916:	46a2      	mov	sl, r4
 8029918:	f104 0404 	add.w	r4, r4, #4
 802991c:	dd24      	ble.n	8029968 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 802991e:	f898 3000 	ldrb.w	r3, [r8]
 8029922:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8029926:	9804      	ldr	r0, [sp, #16]
 8029928:	091b      	lsrs	r3, r3, #4
 802992a:	f1ab 0b02 	sub.w	fp, fp, #2
 802992e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8029932:	9b03      	ldr	r3, [sp, #12]
 8029934:	9300      	str	r3, [sp, #0]
 8029936:	463b      	mov	r3, r7
 8029938:	f7ff ff3a 	bl	80297b0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802993c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8029940:	f818 3b01 	ldrb.w	r3, [r8], #1
 8029944:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8029948:	9804      	ldr	r0, [sp, #16]
 802994a:	f003 030f 	and.w	r3, r3, #15
 802994e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8029952:	9b03      	ldr	r3, [sp, #12]
 8029954:	9300      	str	r3, [sp, #0]
 8029956:	463b      	mov	r3, r7
 8029958:	f7ff ff2a 	bl	80297b0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802995c:	f824 0c02 	strh.w	r0, [r4, #-2]
 8029960:	e7d7      	b.n	8029912 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8029962:	46a8      	mov	r8, r5
 8029964:	46cb      	mov	fp, r9
 8029966:	e7d4      	b.n	8029912 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8029968:	d10e      	bne.n	8029988 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802996a:	f898 3000 	ldrb.w	r3, [r8]
 802996e:	f8ba 2000 	ldrh.w	r2, [sl]
 8029972:	9804      	ldr	r0, [sp, #16]
 8029974:	091b      	lsrs	r3, r3, #4
 8029976:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802997a:	9b03      	ldr	r3, [sp, #12]
 802997c:	9300      	str	r3, [sp, #0]
 802997e:	463b      	mov	r3, r7
 8029980:	f7ff ff16 	bl	80297b0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029984:	f82a 0b02 	strh.w	r0, [sl], #2
 8029988:	9b08      	ldr	r3, [sp, #32]
 802998a:	9a05      	ldr	r2, [sp, #20]
 802998c:	881c      	ldrh	r4, [r3, #0]
 802998e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8029992:	eba4 0409 	sub.w	r4, r4, r9
 8029996:	4413      	add	r3, r2
 8029998:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 802999c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802999e:	fb93 f3f2 	sdiv	r3, r3, r2
 80299a2:	441d      	add	r5, r3
 80299a4:	e79c      	b.n	80298e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80299a6:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80299aa:	45a3      	cmp	fp, r4
 80299ac:	d938      	bls.n	8029a20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80299ae:	9b06      	ldr	r3, [sp, #24]
 80299b0:	b1f3      	cbz	r3, 80299f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80299b2:	782b      	ldrb	r3, [r5, #0]
 80299b4:	f003 030f 	and.w	r3, r3, #15
 80299b8:	1c6a      	adds	r2, r5, #1
 80299ba:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80299be:	8023      	strh	r3, [r4, #0]
 80299c0:	f109 30ff 	add.w	r0, r9, #4294967295
 80299c4:	3402      	adds	r4, #2
 80299c6:	2801      	cmp	r0, #1
 80299c8:	4623      	mov	r3, r4
 80299ca:	f104 0404 	add.w	r4, r4, #4
 80299ce:	dd12      	ble.n	80299f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80299d0:	7813      	ldrb	r3, [r2, #0]
 80299d2:	091b      	lsrs	r3, r3, #4
 80299d4:	3802      	subs	r0, #2
 80299d6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80299da:	f824 3c04 	strh.w	r3, [r4, #-4]
 80299de:	f812 3b01 	ldrb.w	r3, [r2], #1
 80299e2:	f003 030f 	and.w	r3, r3, #15
 80299e6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80299ea:	f824 3c02 	strh.w	r3, [r4, #-2]
 80299ee:	e7ea      	b.n	80299c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80299f0:	462a      	mov	r2, r5
 80299f2:	4648      	mov	r0, r9
 80299f4:	e7e7      	b.n	80299c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80299f6:	d106      	bne.n	8029a06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80299f8:	7812      	ldrb	r2, [r2, #0]
 80299fa:	0912      	lsrs	r2, r2, #4
 80299fc:	3302      	adds	r3, #2
 80299fe:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8029a02:	f823 2c02 	strh.w	r2, [r3, #-2]
 8029a06:	880c      	ldrh	r4, [r1, #0]
 8029a08:	9a05      	ldr	r2, [sp, #20]
 8029a0a:	eba4 0409 	sub.w	r4, r4, r9
 8029a0e:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8029a12:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8029a16:	4413      	add	r3, r2
 8029a18:	fb93 f3f8 	sdiv	r3, r3, r8
 8029a1c:	441d      	add	r5, r3
 8029a1e:	e7c4      	b.n	80299aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8029a20:	4b03      	ldr	r3, [pc, #12]	; (8029a30 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8029a22:	6818      	ldr	r0, [r3, #0]
 8029a24:	6803      	ldr	r3, [r0, #0]
 8029a26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029a28:	4798      	blx	r3
 8029a2a:	b00f      	add	sp, #60	; 0x3c
 8029a2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029a30:	2000224c 	.word	0x2000224c
 8029a34:	20002246 	.word	0x20002246

08029a38 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8029a38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8029a3a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8029a3e:	2dff      	cmp	r5, #255	; 0xff
 8029a40:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8029a44:	d10c      	bne.n	8029a60 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8029a46:	2bff      	cmp	r3, #255	; 0xff
 8029a48:	d10a      	bne.n	8029a60 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8029a4a:	4b25      	ldr	r3, [pc, #148]	; (8029ae0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8029a4c:	0948      	lsrs	r0, r1, #5
 8029a4e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8029a52:	403b      	ands	r3, r7
 8029a54:	4318      	orrs	r0, r3
 8029a56:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8029a5a:	4308      	orrs	r0, r1
 8029a5c:	b280      	uxth	r0, r0
 8029a5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029a60:	fb15 f503 	smulbb	r5, r5, r3
 8029a64:	b2ab      	uxth	r3, r5
 8029a66:	1c5d      	adds	r5, r3, #1
 8029a68:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8029a6c:	1214      	asrs	r4, r2, #8
 8029a6e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8029a72:	fa1f fc85 	uxth.w	ip, r5
 8029a76:	10d6      	asrs	r6, r2, #3
 8029a78:	00d0      	lsls	r0, r2, #3
 8029a7a:	43ed      	mvns	r5, r5
 8029a7c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8029a80:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8029a84:	b2eb      	uxtb	r3, r5
 8029a86:	b2c0      	uxtb	r0, r0
 8029a88:	fb12 f20c 	smulbb	r2, r2, ip
 8029a8c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8029a90:	fb04 2403 	mla	r4, r4, r3, r2
 8029a94:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8029a98:	b2c8      	uxtb	r0, r1
 8029a9a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8029a9e:	b2fd      	uxtb	r5, r7
 8029aa0:	fb10 f00c 	smulbb	r0, r0, ip
 8029aa4:	b2a4      	uxth	r4, r4
 8029aa6:	fb02 0003 	mla	r0, r2, r3, r0
 8029aaa:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8029aae:	fb15 f50c 	smulbb	r5, r5, ip
 8029ab2:	fb06 5503 	mla	r5, r6, r3, r5
 8029ab6:	b283      	uxth	r3, r0
 8029ab8:	1c60      	adds	r0, r4, #1
 8029aba:	b2ad      	uxth	r5, r5
 8029abc:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8029ac0:	1c58      	adds	r0, r3, #1
 8029ac2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8029ac6:	1c6b      	adds	r3, r5, #1
 8029ac8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8029acc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8029ad0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8029ad4:	096d      	lsrs	r5, r5, #5
 8029ad6:	4320      	orrs	r0, r4
 8029ad8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8029adc:	4328      	orrs	r0, r5
 8029ade:	e7be      	b.n	8029a5e <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8029ae0:	00fff800 	.word	0x00fff800

08029ae4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8029ae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029ae8:	461c      	mov	r4, r3
 8029aea:	b08d      	sub	sp, #52	; 0x34
 8029aec:	460d      	mov	r5, r1
 8029aee:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8029af0:	6861      	ldr	r1, [r4, #4]
 8029af2:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8029af6:	4680      	mov	r8, r0
 8029af8:	6820      	ldr	r0, [r4, #0]
 8029afa:	4616      	mov	r6, r2
 8029afc:	aa08      	add	r2, sp, #32
 8029afe:	c203      	stmia	r2!, {r0, r1}
 8029b00:	6818      	ldr	r0, [r3, #0]
 8029b02:	6859      	ldr	r1, [r3, #4]
 8029b04:	aa0a      	add	r2, sp, #40	; 0x28
 8029b06:	c203      	stmia	r2!, {r0, r1}
 8029b08:	a808      	add	r0, sp, #32
 8029b0a:	f7ef fa61 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029b0e:	4621      	mov	r1, r4
 8029b10:	a80a      	add	r0, sp, #40	; 0x28
 8029b12:	f7ef faa1 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029b16:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8029b1a:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8029b1e:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8029b22:	f002 0301 	and.w	r3, r2, #1
 8029b26:	9303      	str	r3, [sp, #12]
 8029b28:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8029b2c:	f003 0101 	and.w	r1, r3, #1
 8029b30:	9102      	str	r1, [sp, #8]
 8029b32:	9802      	ldr	r0, [sp, #8]
 8029b34:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8029b38:	4403      	add	r3, r0
 8029b3a:	fb01 2303 	mla	r3, r1, r3, r2
 8029b3e:	f04f 0a02 	mov.w	sl, #2
 8029b42:	fb93 f3fa 	sdiv	r3, r3, sl
 8029b46:	441d      	add	r5, r3
 8029b48:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8029b4c:	441a      	add	r2, r3
 8029b4e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8029b52:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8029b56:	4a3f      	ldr	r2, [pc, #252]	; (8029c54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8029b58:	9205      	str	r2, [sp, #20]
 8029b5a:	4419      	add	r1, r3
 8029b5c:	6810      	ldr	r0, [r2, #0]
 8029b5e:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8029b62:	6803      	ldr	r3, [r0, #0]
 8029b64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8029b66:	4798      	blx	r3
 8029b68:	4b3b      	ldr	r3, [pc, #236]	; (8029c58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8029b6a:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8029b6e:	8819      	ldrh	r1, [r3, #0]
 8029b70:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8029b74:	fb01 c404 	mla	r4, r1, r4, ip
 8029b78:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029b7c:	434f      	muls	r7, r1
 8029b7e:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8029b82:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8029b86:	3604      	adds	r6, #4
 8029b88:	9204      	str	r2, [sp, #16]
 8029b8a:	9b04      	ldr	r3, [sp, #16]
 8029b8c:	429c      	cmp	r4, r3
 8029b8e:	d258      	bcs.n	8029c42 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8029b90:	9b03      	ldr	r3, [sp, #12]
 8029b92:	2b00      	cmp	r3, #0
 8029b94:	d034      	beq.n	8029c00 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8029b96:	782b      	ldrb	r3, [r5, #0]
 8029b98:	f003 030f 	and.w	r3, r3, #15
 8029b9c:	1c6f      	adds	r7, r5, #1
 8029b9e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029ba2:	0e0b      	lsrs	r3, r1, #24
 8029ba4:	d006      	beq.n	8029bb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8029ba6:	8822      	ldrh	r2, [r4, #0]
 8029ba8:	9300      	str	r3, [sp, #0]
 8029baa:	4640      	mov	r0, r8
 8029bac:	464b      	mov	r3, r9
 8029bae:	f7ff ff43 	bl	8029a38 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029bb2:	8020      	strh	r0, [r4, #0]
 8029bb4:	3402      	adds	r4, #2
 8029bb6:	f10b 3aff 	add.w	sl, fp, #4294967295
 8029bba:	f1ba 0f01 	cmp.w	sl, #1
 8029bbe:	dd22      	ble.n	8029c06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8029bc0:	783b      	ldrb	r3, [r7, #0]
 8029bc2:	091b      	lsrs	r3, r3, #4
 8029bc4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029bc8:	0e0b      	lsrs	r3, r1, #24
 8029bca:	d006      	beq.n	8029bda <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8029bcc:	8822      	ldrh	r2, [r4, #0]
 8029bce:	9300      	str	r3, [sp, #0]
 8029bd0:	4640      	mov	r0, r8
 8029bd2:	464b      	mov	r3, r9
 8029bd4:	f7ff ff30 	bl	8029a38 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029bd8:	8020      	strh	r0, [r4, #0]
 8029bda:	f817 3b01 	ldrb.w	r3, [r7], #1
 8029bde:	f003 030f 	and.w	r3, r3, #15
 8029be2:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029be6:	0e0b      	lsrs	r3, r1, #24
 8029be8:	d006      	beq.n	8029bf8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8029bea:	8862      	ldrh	r2, [r4, #2]
 8029bec:	9300      	str	r3, [sp, #0]
 8029bee:	4640      	mov	r0, r8
 8029bf0:	464b      	mov	r3, r9
 8029bf2:	f7ff ff21 	bl	8029a38 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029bf6:	8060      	strh	r0, [r4, #2]
 8029bf8:	3404      	adds	r4, #4
 8029bfa:	f1aa 0a02 	sub.w	sl, sl, #2
 8029bfe:	e7dc      	b.n	8029bba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8029c00:	462f      	mov	r7, r5
 8029c02:	46da      	mov	sl, fp
 8029c04:	e7d9      	b.n	8029bba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8029c06:	d10d      	bne.n	8029c24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8029c08:	783b      	ldrb	r3, [r7, #0]
 8029c0a:	091b      	lsrs	r3, r3, #4
 8029c0c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029c10:	0e0b      	lsrs	r3, r1, #24
 8029c12:	d006      	beq.n	8029c22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8029c14:	8822      	ldrh	r2, [r4, #0]
 8029c16:	9300      	str	r3, [sp, #0]
 8029c18:	4640      	mov	r0, r8
 8029c1a:	464b      	mov	r3, r9
 8029c1c:	f7ff ff0c 	bl	8029a38 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029c20:	8020      	strh	r0, [r4, #0]
 8029c22:	3402      	adds	r4, #2
 8029c24:	9b06      	ldr	r3, [sp, #24]
 8029c26:	9a02      	ldr	r2, [sp, #8]
 8029c28:	881b      	ldrh	r3, [r3, #0]
 8029c2a:	eba3 030b 	sub.w	r3, r3, fp
 8029c2e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8029c32:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8029c36:	4413      	add	r3, r2
 8029c38:	9a07      	ldr	r2, [sp, #28]
 8029c3a:	fb93 f3f2 	sdiv	r3, r3, r2
 8029c3e:	441d      	add	r5, r3
 8029c40:	e7a3      	b.n	8029b8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8029c42:	9b05      	ldr	r3, [sp, #20]
 8029c44:	6818      	ldr	r0, [r3, #0]
 8029c46:	6803      	ldr	r3, [r0, #0]
 8029c48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029c4a:	4798      	blx	r3
 8029c4c:	b00d      	add	sp, #52	; 0x34
 8029c4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029c52:	bf00      	nop
 8029c54:	2000224c 	.word	0x2000224c
 8029c58:	20002246 	.word	0x20002246

08029c5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8029c5c:	b570      	push	{r4, r5, r6, lr}
 8029c5e:	1214      	asrs	r4, r2, #8
 8029c60:	788d      	ldrb	r5, [r1, #2]
 8029c62:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8029c66:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8029c6a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8029c6e:	fb15 f503 	smulbb	r5, r5, r3
 8029c72:	fb04 5506 	mla	r5, r4, r6, r5
 8029c76:	10d0      	asrs	r0, r2, #3
 8029c78:	784c      	ldrb	r4, [r1, #1]
 8029c7a:	7809      	ldrb	r1, [r1, #0]
 8029c7c:	00d2      	lsls	r2, r2, #3
 8029c7e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8029c82:	b2d2      	uxtb	r2, r2
 8029c84:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8029c88:	fb14 f403 	smulbb	r4, r4, r3
 8029c8c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8029c90:	fb11 f303 	smulbb	r3, r1, r3
 8029c94:	fb00 4406 	mla	r4, r0, r6, r4
 8029c98:	fb02 3306 	mla	r3, r2, r6, r3
 8029c9c:	b2ad      	uxth	r5, r5
 8029c9e:	b29b      	uxth	r3, r3
 8029ca0:	b2a4      	uxth	r4, r4
 8029ca2:	1c68      	adds	r0, r5, #1
 8029ca4:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8029ca8:	1c62      	adds	r2, r4, #1
 8029caa:	1c58      	adds	r0, r3, #1
 8029cac:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8029cb0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8029cb4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8029cb8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8029cbc:	0964      	lsrs	r4, r4, #5
 8029cbe:	4328      	orrs	r0, r5
 8029cc0:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8029cc4:	4320      	orrs	r0, r4
 8029cc6:	bd70      	pop	{r4, r5, r6, pc}

08029cc8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8029cc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029ccc:	b08f      	sub	sp, #60	; 0x3c
 8029cce:	461c      	mov	r4, r3
 8029cd0:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8029cd4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8029cd6:	4682      	mov	sl, r0
 8029cd8:	460e      	mov	r6, r1
 8029cda:	4615      	mov	r5, r2
 8029cdc:	2f00      	cmp	r7, #0
 8029cde:	f000 8142 	beq.w	8029f66 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8029ce2:	6820      	ldr	r0, [r4, #0]
 8029ce4:	6861      	ldr	r1, [r4, #4]
 8029ce6:	aa0a      	add	r2, sp, #40	; 0x28
 8029ce8:	c203      	stmia	r2!, {r0, r1}
 8029cea:	6818      	ldr	r0, [r3, #0]
 8029cec:	6859      	ldr	r1, [r3, #4]
 8029cee:	aa0c      	add	r2, sp, #48	; 0x30
 8029cf0:	c203      	stmia	r2!, {r0, r1}
 8029cf2:	a80a      	add	r0, sp, #40	; 0x28
 8029cf4:	f7ef f96c 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029cf8:	4621      	mov	r1, r4
 8029cfa:	a80c      	add	r0, sp, #48	; 0x30
 8029cfc:	f7ef f9ac 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029d00:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8029d04:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8029d08:	f002 0301 	and.w	r3, r2, #1
 8029d0c:	9306      	str	r3, [sp, #24]
 8029d0e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8029d12:	f003 0101 	and.w	r1, r3, #1
 8029d16:	9105      	str	r1, [sp, #20]
 8029d18:	9805      	ldr	r0, [sp, #20]
 8029d1a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8029d1e:	4403      	add	r3, r0
 8029d20:	fb01 2303 	mla	r3, r1, r3, r2
 8029d24:	f04f 0802 	mov.w	r8, #2
 8029d28:	fb93 f3f8 	sdiv	r3, r3, r8
 8029d2c:	441e      	add	r6, r3
 8029d2e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8029d32:	441a      	add	r2, r3
 8029d34:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8029d38:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8029d3c:	4419      	add	r1, r3
 8029d3e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8029d42:	9303      	str	r3, [sp, #12]
 8029d44:	4b89      	ldr	r3, [pc, #548]	; (8029f6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8029d46:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8029d4a:	6818      	ldr	r0, [r3, #0]
 8029d4c:	6803      	ldr	r3, [r0, #0]
 8029d4e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8029d50:	4798      	blx	r3
 8029d52:	4a87      	ldr	r2, [pc, #540]	; (8029f70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8029d54:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8029d58:	8813      	ldrh	r3, [r2, #0]
 8029d5a:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8029d5e:	2fff      	cmp	r7, #255	; 0xff
 8029d60:	fb03 9404 	mla	r4, r3, r4, r9
 8029d64:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029d68:	f105 0504 	add.w	r5, r5, #4
 8029d6c:	4694      	mov	ip, r2
 8029d6e:	fb03 f30b 	mul.w	r3, r3, fp
 8029d72:	d071      	beq.n	8029e58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8029d74:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8029d78:	43f9      	mvns	r1, r7
 8029d7a:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8029d7e:	b2c9      	uxtb	r1, r1
 8029d80:	9104      	str	r1, [sp, #16]
 8029d82:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8029d86:	9b07      	ldr	r3, [sp, #28]
 8029d88:	42a3      	cmp	r3, r4
 8029d8a:	f240 80e7 	bls.w	8029f5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8029d8e:	9b06      	ldr	r3, [sp, #24]
 8029d90:	2b00      	cmp	r3, #0
 8029d92:	d03d      	beq.n	8029e10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8029d94:	7831      	ldrb	r1, [r6, #0]
 8029d96:	9b04      	ldr	r3, [sp, #16]
 8029d98:	8822      	ldrh	r2, [r4, #0]
 8029d9a:	9300      	str	r3, [sp, #0]
 8029d9c:	f001 010f 	and.w	r1, r1, #15
 8029da0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029da4:	463b      	mov	r3, r7
 8029da6:	4429      	add	r1, r5
 8029da8:	4650      	mov	r0, sl
 8029daa:	f7ff ff57 	bl	8029c5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8029dae:	9b03      	ldr	r3, [sp, #12]
 8029db0:	f824 0b02 	strh.w	r0, [r4], #2
 8029db4:	f106 0801 	add.w	r8, r6, #1
 8029db8:	f103 3bff 	add.w	fp, r3, #4294967295
 8029dbc:	f1bb 0f01 	cmp.w	fp, #1
 8029dc0:	46a1      	mov	r9, r4
 8029dc2:	f104 0404 	add.w	r4, r4, #4
 8029dc6:	dd27      	ble.n	8029e18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8029dc8:	f898 1000 	ldrb.w	r1, [r8]
 8029dcc:	9b04      	ldr	r3, [sp, #16]
 8029dce:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8029dd2:	9300      	str	r3, [sp, #0]
 8029dd4:	0909      	lsrs	r1, r1, #4
 8029dd6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029dda:	463b      	mov	r3, r7
 8029ddc:	4429      	add	r1, r5
 8029dde:	4650      	mov	r0, sl
 8029de0:	f7ff ff3c 	bl	8029c5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8029de4:	f824 0c04 	strh.w	r0, [r4, #-4]
 8029de8:	f818 1b01 	ldrb.w	r1, [r8], #1
 8029dec:	9b04      	ldr	r3, [sp, #16]
 8029dee:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8029df2:	9300      	str	r3, [sp, #0]
 8029df4:	f001 010f 	and.w	r1, r1, #15
 8029df8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029dfc:	463b      	mov	r3, r7
 8029dfe:	4429      	add	r1, r5
 8029e00:	4650      	mov	r0, sl
 8029e02:	f7ff ff2b 	bl	8029c5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8029e06:	f1ab 0b02 	sub.w	fp, fp, #2
 8029e0a:	f824 0c02 	strh.w	r0, [r4, #-2]
 8029e0e:	e7d5      	b.n	8029dbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8029e10:	46b0      	mov	r8, r6
 8029e12:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8029e16:	e7d1      	b.n	8029dbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8029e18:	d10f      	bne.n	8029e3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8029e1a:	f898 1000 	ldrb.w	r1, [r8]
 8029e1e:	9b04      	ldr	r3, [sp, #16]
 8029e20:	f8b9 2000 	ldrh.w	r2, [r9]
 8029e24:	9300      	str	r3, [sp, #0]
 8029e26:	0909      	lsrs	r1, r1, #4
 8029e28:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029e2c:	463b      	mov	r3, r7
 8029e2e:	4429      	add	r1, r5
 8029e30:	4650      	mov	r0, sl
 8029e32:	f7ff ff13 	bl	8029c5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8029e36:	f829 0b02 	strh.w	r0, [r9], #2
 8029e3a:	9b08      	ldr	r3, [sp, #32]
 8029e3c:	9a05      	ldr	r2, [sp, #20]
 8029e3e:	881c      	ldrh	r4, [r3, #0]
 8029e40:	9b03      	ldr	r3, [sp, #12]
 8029e42:	1ae4      	subs	r4, r4, r3
 8029e44:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8029e48:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8029e4c:	4413      	add	r3, r2
 8029e4e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029e50:	fb93 f3f2 	sdiv	r3, r3, r2
 8029e54:	441e      	add	r6, r3
 8029e56:	e796      	b.n	8029d86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8029e58:	4f46      	ldr	r7, [pc, #280]	; (8029f74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8029e5a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8029e5e:	42a3      	cmp	r3, r4
 8029e60:	d97c      	bls.n	8029f5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8029e62:	9a06      	ldr	r2, [sp, #24]
 8029e64:	2a00      	cmp	r2, #0
 8029e66:	d054      	beq.n	8029f12 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8029e68:	7830      	ldrb	r0, [r6, #0]
 8029e6a:	f000 000f 	and.w	r0, r0, #15
 8029e6e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8029e72:	eb05 0e00 	add.w	lr, r5, r0
 8029e76:	5c28      	ldrb	r0, [r5, r0]
 8029e78:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8029e7c:	f89e e001 	ldrb.w	lr, [lr, #1]
 8029e80:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8029e84:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8029e88:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8029e8c:	ea42 020e 	orr.w	r2, r2, lr
 8029e90:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8029e94:	f824 2b02 	strh.w	r2, [r4], #2
 8029e98:	9a03      	ldr	r2, [sp, #12]
 8029e9a:	1c71      	adds	r1, r6, #1
 8029e9c:	f102 3eff 	add.w	lr, r2, #4294967295
 8029ea0:	f1be 0f01 	cmp.w	lr, #1
 8029ea4:	4620      	mov	r0, r4
 8029ea6:	f104 0404 	add.w	r4, r4, #4
 8029eaa:	dd36      	ble.n	8029f1a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8029eac:	7808      	ldrb	r0, [r1, #0]
 8029eae:	0900      	lsrs	r0, r0, #4
 8029eb0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8029eb4:	eb05 0a00 	add.w	sl, r5, r0
 8029eb8:	f1ae 0e02 	sub.w	lr, lr, #2
 8029ebc:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8029ec0:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8029ec4:	00d2      	lsls	r2, r2, #3
 8029ec6:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8029eca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029ece:	ea49 0202 	orr.w	r2, r9, r2
 8029ed2:	f815 9000 	ldrb.w	r9, [r5, r0]
 8029ed6:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8029eda:	f824 2c04 	strh.w	r2, [r4, #-4]
 8029ede:	f811 0b01 	ldrb.w	r0, [r1], #1
 8029ee2:	f000 000f 	and.w	r0, r0, #15
 8029ee6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8029eea:	eb05 0a00 	add.w	sl, r5, r0
 8029eee:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8029ef2:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8029ef6:	00d2      	lsls	r2, r2, #3
 8029ef8:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8029efc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029f00:	ea49 0202 	orr.w	r2, r9, r2
 8029f04:	f815 9000 	ldrb.w	r9, [r5, r0]
 8029f08:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8029f0c:	f824 2c02 	strh.w	r2, [r4, #-2]
 8029f10:	e7c6      	b.n	8029ea0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8029f12:	4631      	mov	r1, r6
 8029f14:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8029f18:	e7c2      	b.n	8029ea0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8029f1a:	d111      	bne.n	8029f40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8029f1c:	7809      	ldrb	r1, [r1, #0]
 8029f1e:	0909      	lsrs	r1, r1, #4
 8029f20:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029f24:	186c      	adds	r4, r5, r1
 8029f26:	5c69      	ldrb	r1, [r5, r1]
 8029f28:	78a2      	ldrb	r2, [r4, #2]
 8029f2a:	7864      	ldrb	r4, [r4, #1]
 8029f2c:	00e4      	lsls	r4, r4, #3
 8029f2e:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8029f32:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8029f36:	4322      	orrs	r2, r4
 8029f38:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8029f3c:	f820 2b02 	strh.w	r2, [r0], #2
 8029f40:	9a03      	ldr	r2, [sp, #12]
 8029f42:	f8bc 4000 	ldrh.w	r4, [ip]
 8029f46:	9905      	ldr	r1, [sp, #20]
 8029f48:	1aa4      	subs	r4, r4, r2
 8029f4a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8029f4e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029f52:	440a      	add	r2, r1
 8029f54:	fb92 f2f8 	sdiv	r2, r2, r8
 8029f58:	4416      	add	r6, r2
 8029f5a:	e780      	b.n	8029e5e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8029f5c:	4b03      	ldr	r3, [pc, #12]	; (8029f6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8029f5e:	6818      	ldr	r0, [r3, #0]
 8029f60:	6803      	ldr	r3, [r0, #0]
 8029f62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029f64:	4798      	blx	r3
 8029f66:	b00f      	add	sp, #60	; 0x3c
 8029f68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029f6c:	2000224c 	.word	0x2000224c
 8029f70:	20002246 	.word	0x20002246
 8029f74:	fffff800 	.word	0xfffff800

08029f78 <CRC_Lock>:
 8029f78:	b530      	push	{r4, r5, lr}
 8029f7a:	4a20      	ldr	r2, [pc, #128]	; (8029ffc <CRC_Lock+0x84>)
 8029f7c:	6813      	ldr	r3, [r2, #0]
 8029f7e:	f023 0301 	bic.w	r3, r3, #1
 8029f82:	6013      	str	r3, [r2, #0]
 8029f84:	4b1e      	ldr	r3, [pc, #120]	; (802a000 <CRC_Lock+0x88>)
 8029f86:	681a      	ldr	r2, [r3, #0]
 8029f88:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8029f8c:	4022      	ands	r2, r4
 8029f8e:	f24c 2540 	movw	r5, #49728	; 0xc240
 8029f92:	42aa      	cmp	r2, r5
 8029f94:	d005      	beq.n	8029fa2 <CRC_Lock+0x2a>
 8029f96:	681b      	ldr	r3, [r3, #0]
 8029f98:	f24c 2270 	movw	r2, #49776	; 0xc270
 8029f9c:	4023      	ands	r3, r4
 8029f9e:	4293      	cmp	r3, r2
 8029fa0:	d124      	bne.n	8029fec <CRC_Lock+0x74>
 8029fa2:	4b18      	ldr	r3, [pc, #96]	; (802a004 <CRC_Lock+0x8c>)
 8029fa4:	681b      	ldr	r3, [r3, #0]
 8029fa6:	bb0b      	cbnz	r3, 8029fec <CRC_Lock+0x74>
 8029fa8:	4b17      	ldr	r3, [pc, #92]	; (802a008 <CRC_Lock+0x90>)
 8029faa:	681a      	ldr	r2, [r3, #0]
 8029fac:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8029fb0:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8029fb4:	d00d      	beq.n	8029fd2 <CRC_Lock+0x5a>
 8029fb6:	681a      	ldr	r2, [r3, #0]
 8029fb8:	f240 4483 	movw	r4, #1155	; 0x483
 8029fbc:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8029fc0:	42a2      	cmp	r2, r4
 8029fc2:	d006      	beq.n	8029fd2 <CRC_Lock+0x5a>
 8029fc4:	681b      	ldr	r3, [r3, #0]
 8029fc6:	f240 4285 	movw	r2, #1157	; 0x485
 8029fca:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8029fce:	4293      	cmp	r3, r2
 8029fd0:	d10c      	bne.n	8029fec <CRC_Lock+0x74>
 8029fd2:	4b0e      	ldr	r3, [pc, #56]	; (802a00c <CRC_Lock+0x94>)
 8029fd4:	2201      	movs	r2, #1
 8029fd6:	601a      	str	r2, [r3, #0]
 8029fd8:	681a      	ldr	r2, [r3, #0]
 8029fda:	2a00      	cmp	r2, #0
 8029fdc:	d1fc      	bne.n	8029fd8 <CRC_Lock+0x60>
 8029fde:	4b0c      	ldr	r3, [pc, #48]	; (802a010 <CRC_Lock+0x98>)
 8029fe0:	6018      	str	r0, [r3, #0]
 8029fe2:	6818      	ldr	r0, [r3, #0]
 8029fe4:	1a43      	subs	r3, r0, r1
 8029fe6:	4258      	negs	r0, r3
 8029fe8:	4158      	adcs	r0, r3
 8029fea:	bd30      	pop	{r4, r5, pc}
 8029fec:	4b09      	ldr	r3, [pc, #36]	; (802a014 <CRC_Lock+0x9c>)
 8029fee:	2201      	movs	r2, #1
 8029ff0:	601a      	str	r2, [r3, #0]
 8029ff2:	681a      	ldr	r2, [r3, #0]
 8029ff4:	2a00      	cmp	r2, #0
 8029ff6:	d1fc      	bne.n	8029ff2 <CRC_Lock+0x7a>
 8029ff8:	4b07      	ldr	r3, [pc, #28]	; (802a018 <CRC_Lock+0xa0>)
 8029ffa:	e7f1      	b.n	8029fe0 <CRC_Lock+0x68>
 8029ffc:	e0002000 	.word	0xe0002000
 802a000:	e000ed00 	.word	0xe000ed00
 802a004:	e0042000 	.word	0xe0042000
 802a008:	5c001000 	.word	0x5c001000
 802a00c:	58024c08 	.word	0x58024c08
 802a010:	58024c00 	.word	0x58024c00
 802a014:	40023008 	.word	0x40023008
 802a018:	40023000 	.word	0x40023000

0802a01c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 802a01c:	6101      	str	r1, [r0, #16]
 802a01e:	4770      	bx	lr

0802a020 <_ZN8touchgfx8Gestures4tickEv>:
 802a020:	7b83      	ldrb	r3, [r0, #14]
 802a022:	b14b      	cbz	r3, 802a038 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802a024:	8903      	ldrh	r3, [r0, #8]
 802a026:	3301      	adds	r3, #1
 802a028:	b29b      	uxth	r3, r3
 802a02a:	2b07      	cmp	r3, #7
 802a02c:	8103      	strh	r3, [r0, #8]
 802a02e:	bf81      	itttt	hi
 802a030:	2300      	movhi	r3, #0
 802a032:	8143      	strhhi	r3, [r0, #10]
 802a034:	8183      	strhhi	r3, [r0, #12]
 802a036:	7383      	strbhi	r3, [r0, #14]
 802a038:	4770      	bx	lr
	...

0802a03c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 802a03c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 802a040:	4698      	mov	r8, r3
 802a042:	8883      	ldrh	r3, [r0, #4]
 802a044:	f8ad 3006 	strh.w	r3, [sp, #6]
 802a048:	eba8 0303 	sub.w	r3, r8, r3
 802a04c:	b21b      	sxth	r3, r3
 802a04e:	4604      	mov	r4, r0
 802a050:	2b00      	cmp	r3, #0
 802a052:	4617      	mov	r7, r2
 802a054:	4a18      	ldr	r2, [pc, #96]	; (802a0b8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802a056:	9200      	str	r2, [sp, #0]
 802a058:	bfb8      	it	lt
 802a05a:	425b      	neglt	r3, r3
 802a05c:	8aa2      	ldrh	r2, [r4, #20]
 802a05e:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 802a062:	f8ad 800a 	strh.w	r8, [sp, #10]
 802a066:	b21b      	sxth	r3, r3
 802a068:	460e      	mov	r6, r1
 802a06a:	4293      	cmp	r3, r2
 802a06c:	88c1      	ldrh	r1, [r0, #6]
 802a06e:	f8ad 1008 	strh.w	r1, [sp, #8]
 802a072:	f04f 0000 	mov.w	r0, #0
 802a076:	f88d 0004 	strb.w	r0, [sp, #4]
 802a07a:	f8ad 500c 	strh.w	r5, [sp, #12]
 802a07e:	dc07      	bgt.n	802a090 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 802a080:	1a69      	subs	r1, r5, r1
 802a082:	b209      	sxth	r1, r1
 802a084:	2900      	cmp	r1, #0
 802a086:	bfb8      	it	lt
 802a088:	4249      	neglt	r1, r1
 802a08a:	b209      	sxth	r1, r1
 802a08c:	428a      	cmp	r2, r1
 802a08e:	da10      	bge.n	802a0b2 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 802a090:	6920      	ldr	r0, [r4, #16]
 802a092:	6803      	ldr	r3, [r0, #0]
 802a094:	4669      	mov	r1, sp
 802a096:	685b      	ldr	r3, [r3, #4]
 802a098:	4798      	blx	r3
 802a09a:	eba8 0606 	sub.w	r6, r8, r6
 802a09e:	2300      	movs	r3, #0
 802a0a0:	1bef      	subs	r7, r5, r7
 802a0a2:	2001      	movs	r0, #1
 802a0a4:	8123      	strh	r3, [r4, #8]
 802a0a6:	8166      	strh	r6, [r4, #10]
 802a0a8:	81a7      	strh	r7, [r4, #12]
 802a0aa:	f8a4 8004 	strh.w	r8, [r4, #4]
 802a0ae:	80e5      	strh	r5, [r4, #6]
 802a0b0:	73a0      	strb	r0, [r4, #14]
 802a0b2:	b004      	add	sp, #16
 802a0b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a0b8:	0802fb14 	.word	0x0802fb14

0802a0bc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 802a0bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a0be:	461e      	mov	r6, r3
 802a0c0:	1e4b      	subs	r3, r1, #1
 802a0c2:	2b01      	cmp	r3, #1
 802a0c4:	b085      	sub	sp, #20
 802a0c6:	4604      	mov	r4, r0
 802a0c8:	460d      	mov	r5, r1
 802a0ca:	4617      	mov	r7, r2
 802a0cc:	d84b      	bhi.n	802a166 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802a0ce:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802a0d2:	1cd3      	adds	r3, r2, #3
 802a0d4:	b29b      	uxth	r3, r3
 802a0d6:	2b06      	cmp	r3, #6
 802a0d8:	d916      	bls.n	802a108 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802a0da:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 802a17c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802a0de:	f8cd c004 	str.w	ip, [sp, #4]
 802a0e2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802a0e6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802a0ea:	6900      	ldr	r0, [r0, #16]
 802a0ec:	f8ad 100c 	strh.w	r1, [sp, #12]
 802a0f0:	f04f 0c00 	mov.w	ip, #0
 802a0f4:	f88d c008 	strb.w	ip, [sp, #8]
 802a0f8:	f8ad 200a 	strh.w	r2, [sp, #10]
 802a0fc:	f8ad 300e 	strh.w	r3, [sp, #14]
 802a100:	6803      	ldr	r3, [r0, #0]
 802a102:	a901      	add	r1, sp, #4
 802a104:	689b      	ldr	r3, [r3, #8]
 802a106:	4798      	blx	r3
 802a108:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802a10c:	1cd3      	adds	r3, r2, #3
 802a10e:	b29b      	uxth	r3, r3
 802a110:	2b06      	cmp	r3, #6
 802a112:	d916      	bls.n	802a142 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802a114:	f8df c064 	ldr.w	ip, [pc, #100]	; 802a17c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802a118:	f8cd c004 	str.w	ip, [sp, #4]
 802a11c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802a120:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802a124:	6920      	ldr	r0, [r4, #16]
 802a126:	f8ad 100c 	strh.w	r1, [sp, #12]
 802a12a:	f04f 0c01 	mov.w	ip, #1
 802a12e:	f88d c008 	strb.w	ip, [sp, #8]
 802a132:	f8ad 200a 	strh.w	r2, [sp, #10]
 802a136:	f8ad 300e 	strh.w	r3, [sp, #14]
 802a13a:	6803      	ldr	r3, [r0, #0]
 802a13c:	a901      	add	r1, sp, #4
 802a13e:	689b      	ldr	r3, [r3, #8]
 802a140:	4798      	blx	r3
 802a142:	4b0d      	ldr	r3, [pc, #52]	; (802a178 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802a144:	9301      	str	r3, [sp, #4]
 802a146:	6920      	ldr	r0, [r4, #16]
 802a148:	f88d 5008 	strb.w	r5, [sp, #8]
 802a14c:	2300      	movs	r3, #0
 802a14e:	f8ad 700a 	strh.w	r7, [sp, #10]
 802a152:	f8ad 600c 	strh.w	r6, [sp, #12]
 802a156:	f8ad 300e 	strh.w	r3, [sp, #14]
 802a15a:	6803      	ldr	r3, [r0, #0]
 802a15c:	a901      	add	r1, sp, #4
 802a15e:	681b      	ldr	r3, [r3, #0]
 802a160:	4798      	blx	r3
 802a162:	b005      	add	sp, #20
 802a164:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a166:	2900      	cmp	r1, #0
 802a168:	d1eb      	bne.n	802a142 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802a16a:	80a2      	strh	r2, [r4, #4]
 802a16c:	80c6      	strh	r6, [r0, #6]
 802a16e:	60a1      	str	r1, [r4, #8]
 802a170:	81a1      	strh	r1, [r4, #12]
 802a172:	73a1      	strb	r1, [r4, #14]
 802a174:	e7e5      	b.n	802a142 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802a176:	bf00      	nop
 802a178:	0802fb00 	.word	0x0802fb00
 802a17c:	0802fb28 	.word	0x0802fb28

0802a180 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 802a180:	10c9      	asrs	r1, r1, #3
 802a182:	2900      	cmp	r1, #0
 802a184:	bfb8      	it	lt
 802a186:	4249      	neglt	r1, r1
 802a188:	2801      	cmp	r0, #1
 802a18a:	d108      	bne.n	802a19e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 802a18c:	f3c1 0008 	ubfx	r0, r1, #0, #9
 802a190:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 802a194:	4601      	mov	r1, r0
 802a196:	dd02      	ble.n	802a19e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 802a198:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 802a19c:	4770      	bx	lr
 802a19e:	29ff      	cmp	r1, #255	; 0xff
 802a1a0:	bfa8      	it	ge
 802a1a2:	21ff      	movge	r1, #255	; 0xff
 802a1a4:	4608      	mov	r0, r1
 802a1a6:	4770      	bx	lr

0802a1a8 <_ZN8touchgfx10Rasterizer6lineToEii>:
 802a1a8:	b410      	push	{r4}
 802a1aa:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 802a1ae:	429c      	cmp	r4, r3
 802a1b0:	d803      	bhi.n	802a1ba <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802a1b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a1b6:	f7ed ba23 	b.w	8017600 <_ZN8touchgfx7Outline6lineToEii>
 802a1ba:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a1be:	4770      	bx	lr

0802a1c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 802a1c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a1c4:	b08b      	sub	sp, #44	; 0x2c
 802a1c6:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802a1ca:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 802a1ce:	9308      	str	r3, [sp, #32]
 802a1d0:	4606      	mov	r6, r0
 802a1d2:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 802a1d6:	9309      	str	r3, [sp, #36]	; 0x24
 802a1d8:	468a      	mov	sl, r1
 802a1da:	f7ed fb7e 	bl	80178da <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 802a1de:	68b5      	ldr	r5, [r6, #8]
 802a1e0:	4604      	mov	r4, r0
 802a1e2:	2d00      	cmp	r5, #0
 802a1e4:	d044      	beq.n	802a270 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802a1e6:	6873      	ldr	r3, [r6, #4]
 802a1e8:	42ab      	cmp	r3, r5
 802a1ea:	d33d      	bcc.n	802a268 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 802a1ec:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 802a1f0:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 802a1f4:	eb02 0b03 	add.w	fp, r2, r3
 802a1f8:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 802a1fc:	fb02 1203 	mla	r2, r2, r3, r1
 802a200:	9205      	str	r2, [sp, #20]
 802a202:	1e6a      	subs	r2, r5, #1
 802a204:	9204      	str	r2, [sp, #16]
 802a206:	f04f 0800 	mov.w	r8, #0
 802a20a:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 802a20e:	f9b4 7000 	ldrsh.w	r7, [r4]
 802a212:	454b      	cmp	r3, r9
 802a214:	463a      	mov	r2, r7
 802a216:	d008      	beq.n	802a22a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 802a218:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 802a21c:	eb03 0b09 	add.w	fp, r3, r9
 802a220:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 802a224:	fb03 1309 	mla	r3, r3, r9, r1
 802a228:	9305      	str	r3, [sp, #20]
 802a22a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 802a22e:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802a232:	4498      	add	r8, r3
 802a234:	9b04      	ldr	r3, [sp, #16]
 802a236:	3b01      	subs	r3, #1
 802a238:	9304      	str	r3, [sp, #16]
 802a23a:	9b04      	ldr	r3, [sp, #16]
 802a23c:	3301      	adds	r3, #1
 802a23e:	d015      	beq.n	802a26c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 802a240:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802a244:	42bb      	cmp	r3, r7
 802a246:	d117      	bne.n	802a278 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 802a248:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 802a24c:	9b04      	ldr	r3, [sp, #16]
 802a24e:	4548      	cmp	r0, r9
 802a250:	f103 33ff 	add.w	r3, r3, #4294967295
 802a254:	d17f      	bne.n	802a356 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802a256:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802a25a:	4401      	add	r1, r0
 802a25c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802a260:	4480      	add	r8, r0
 802a262:	e7e9      	b.n	802a238 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 802a264:	461f      	mov	r7, r3
 802a266:	e044      	b.n	802a2f2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 802a268:	2000      	movs	r0, #0
 802a26a:	e002      	b.n	802a272 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 802a26c:	2900      	cmp	r1, #0
 802a26e:	d16f      	bne.n	802a350 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 802a270:	2001      	movs	r0, #1
 802a272:	b00b      	add	sp, #44	; 0x2c
 802a274:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a278:	2900      	cmp	r1, #0
 802a27a:	d030      	beq.n	802a2de <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 802a27c:	2f00      	cmp	r7, #0
 802a27e:	db29      	blt.n	802a2d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802a280:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802a284:	42bb      	cmp	r3, r7
 802a286:	dd25      	ble.n	802a2d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802a288:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 802a28c:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 802a290:	f7ff ff76 	bl	802a180 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802a294:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a296:	fb10 f003 	smulbb	r0, r0, r3
 802a29a:	b280      	uxth	r0, r0
 802a29c:	1c41      	adds	r1, r0, #1
 802a29e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802a2a2:	1209      	asrs	r1, r1, #8
 802a2a4:	f011 0fff 	tst.w	r1, #255	; 0xff
 802a2a8:	d014      	beq.n	802a2d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802a2aa:	9808      	ldr	r0, [sp, #32]
 802a2ac:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 802a2ae:	b2c9      	uxtb	r1, r1
 802a2b0:	b2ba      	uxth	r2, r7
 802a2b2:	9102      	str	r1, [sp, #8]
 802a2b4:	2101      	movs	r1, #1
 802a2b6:	4413      	add	r3, r2
 802a2b8:	9101      	str	r1, [sp, #4]
 802a2ba:	4402      	add	r2, r0
 802a2bc:	fa0f f18b 	sxth.w	r1, fp
 802a2c0:	f8da 0000 	ldr.w	r0, [sl]
 802a2c4:	9100      	str	r1, [sp, #0]
 802a2c6:	6941      	ldr	r1, [r0, #20]
 802a2c8:	b21b      	sxth	r3, r3
 802a2ca:	460d      	mov	r5, r1
 802a2cc:	b212      	sxth	r2, r2
 802a2ce:	9905      	ldr	r1, [sp, #20]
 802a2d0:	4650      	mov	r0, sl
 802a2d2:	47a8      	blx	r5
 802a2d4:	9b04      	ldr	r3, [sp, #16]
 802a2d6:	3301      	adds	r3, #1
 802a2d8:	f107 0201 	add.w	r2, r7, #1
 802a2dc:	d0c8      	beq.n	802a270 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802a2de:	f9b4 7000 	ldrsh.w	r7, [r4]
 802a2e2:	1abb      	subs	r3, r7, r2
 802a2e4:	2b00      	cmp	r3, #0
 802a2e6:	dd31      	ble.n	802a34c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802a2e8:	2a00      	cmp	r2, #0
 802a2ea:	dabb      	bge.n	802a264 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 802a2ec:	2f00      	cmp	r7, #0
 802a2ee:	dd2d      	ble.n	802a34c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802a2f0:	2200      	movs	r2, #0
 802a2f2:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802a2f6:	19d1      	adds	r1, r2, r7
 802a2f8:	4299      	cmp	r1, r3
 802a2fa:	db02      	blt.n	802a302 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 802a2fc:	1a9f      	subs	r7, r3, r2
 802a2fe:	2f00      	cmp	r7, #0
 802a300:	dd24      	ble.n	802a34c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802a302:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802a306:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 802a30a:	f7ff ff39 	bl	802a180 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802a30e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a310:	fb10 f003 	smulbb	r0, r0, r3
 802a314:	b280      	uxth	r0, r0
 802a316:	1c41      	adds	r1, r0, #1
 802a318:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802a31c:	1209      	asrs	r1, r1, #8
 802a31e:	f011 0fff 	tst.w	r1, #255	; 0xff
 802a322:	d013      	beq.n	802a34c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802a324:	9808      	ldr	r0, [sp, #32]
 802a326:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 802a328:	b292      	uxth	r2, r2
 802a32a:	b2c9      	uxtb	r1, r1
 802a32c:	4413      	add	r3, r2
 802a32e:	9102      	str	r1, [sp, #8]
 802a330:	4402      	add	r2, r0
 802a332:	b23f      	sxth	r7, r7
 802a334:	f8da 0000 	ldr.w	r0, [sl]
 802a338:	9701      	str	r7, [sp, #4]
 802a33a:	fa0f f18b 	sxth.w	r1, fp
 802a33e:	9100      	str	r1, [sp, #0]
 802a340:	6947      	ldr	r7, [r0, #20]
 802a342:	9905      	ldr	r1, [sp, #20]
 802a344:	b21b      	sxth	r3, r3
 802a346:	b212      	sxth	r2, r2
 802a348:	4650      	mov	r0, sl
 802a34a:	47b8      	blx	r7
 802a34c:	464b      	mov	r3, r9
 802a34e:	e75c      	b.n	802a20a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 802a350:	2f00      	cmp	r7, #0
 802a352:	da95      	bge.n	802a280 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802a354:	e78c      	b.n	802a270 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802a356:	2900      	cmp	r1, #0
 802a358:	d0f8      	beq.n	802a34c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802a35a:	e78f      	b.n	802a27c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

0802a35c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 802a35c:	4b4b      	ldr	r3, [pc, #300]	; (802a48c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 802a35e:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802a362:	2500      	movs	r5, #0
 802a364:	f100 0620 	add.w	r6, r0, #32
 802a368:	4604      	mov	r4, r0
 802a36a:	e9c0 3100 	strd	r3, r1, [r0]
 802a36e:	e9c0 5502 	strd	r5, r5, [r0, #8]
 802a372:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802a376:	e9c0 5506 	strd	r5, r5, [r0, #24]
 802a37a:	f100 0718 	add.w	r7, r0, #24
 802a37e:	4630      	mov	r0, r6
 802a380:	4690      	mov	r8, r2
 802a382:	f7ec fc75 	bl	8016c70 <_ZN8touchgfx7OutlineC1Ev>
 802a386:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 802a38a:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 802a38e:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 802a392:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 802a396:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 802a39a:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 802a39e:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 802a3a2:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 802a3a6:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 802a3aa:	f9b8 2000 	ldrsh.w	r2, [r8]
 802a3ae:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 802a3b2:	f8d4 c004 	ldr.w	ip, [r4, #4]
 802a3b6:	9500      	str	r5, [sp, #0]
 802a3b8:	4410      	add	r0, r2
 802a3ba:	b280      	uxth	r0, r0
 802a3bc:	fa0f fa80 	sxth.w	sl, r0
 802a3c0:	45aa      	cmp	sl, r5
 802a3c2:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 802a3c6:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 802a3ca:	dd5c      	ble.n	802a486 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802a3cc:	4591      	cmp	r9, r2
 802a3ce:	dd5a      	ble.n	802a486 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802a3d0:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 802a3d4:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 802a3d8:	440b      	add	r3, r1
 802a3da:	b29b      	uxth	r3, r3
 802a3dc:	b21d      	sxth	r5, r3
 802a3de:	2d00      	cmp	r5, #0
 802a3e0:	dd51      	ble.n	802a486 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802a3e2:	458e      	cmp	lr, r1
 802a3e4:	dd4f      	ble.n	802a486 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802a3e6:	45d1      	cmp	r9, sl
 802a3e8:	bfb8      	it	lt
 802a3ea:	fa1f f089 	uxthlt.w	r0, r9
 802a3ee:	45ae      	cmp	lr, r5
 802a3f0:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 802a3f4:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 802a3f8:	bfb8      	it	lt
 802a3fa:	fa1f f38e 	uxthlt.w	r3, lr
 802a3fe:	1a80      	subs	r0, r0, r2
 802a400:	1a5b      	subs	r3, r3, r1
 802a402:	f8ad 0004 	strh.w	r0, [sp, #4]
 802a406:	f8ad 3006 	strh.w	r3, [sp, #6]
 802a40a:	f8ad 2000 	strh.w	r2, [sp]
 802a40e:	f8ad 1002 	strh.w	r1, [sp, #2]
 802a412:	466d      	mov	r5, sp
 802a414:	e895 0003 	ldmia.w	r5, {r0, r1}
 802a418:	e887 0003 	stmia.w	r7, {r0, r1}
 802a41c:	f8dc 3000 	ldr.w	r3, [ip]
 802a420:	4660      	mov	r0, ip
 802a422:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802a424:	4639      	mov	r1, r7
 802a426:	4798      	blx	r3
 802a428:	6861      	ldr	r1, [r4, #4]
 802a42a:	4628      	mov	r0, r5
 802a42c:	3104      	adds	r1, #4
 802a42e:	f7ee fe13 	bl	8019058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802a432:	4638      	mov	r0, r7
 802a434:	f7ee fdcc 	bl	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802a438:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802a43c:	f8bd 2000 	ldrh.w	r2, [sp]
 802a440:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802a444:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 802a448:	4630      	mov	r0, r6
 802a44a:	f7ec fbf5 	bl	8016c38 <_ZN8touchgfx7Outline5resetEv>
 802a44e:	f9bd 3000 	ldrsh.w	r3, [sp]
 802a452:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 802a456:	015b      	lsls	r3, r3, #5
 802a458:	60a3      	str	r3, [r4, #8]
 802a45a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802a45e:	015b      	lsls	r3, r3, #5
 802a460:	60e3      	str	r3, [r4, #12]
 802a462:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802a466:	015b      	lsls	r3, r3, #5
 802a468:	6123      	str	r3, [r4, #16]
 802a46a:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 802a46e:	015b      	lsls	r3, r3, #5
 802a470:	6163      	str	r3, [r4, #20]
 802a472:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 802a476:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 802a47a:	4620      	mov	r0, r4
 802a47c:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 802a480:	b002      	add	sp, #8
 802a482:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802a486:	2300      	movs	r3, #0
 802a488:	9301      	str	r3, [sp, #4]
 802a48a:	e7c2      	b.n	802a412 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 802a48c:	0802fe4c 	.word	0x0802fe4c

0802a490 <_ZN8touchgfx6Canvas5closeEv>:
 802a490:	b538      	push	{r3, r4, r5, lr}
 802a492:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802a496:	4604      	mov	r4, r0
 802a498:	b193      	cbz	r3, 802a4c0 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802a49a:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 802a49e:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 802a4a2:	4213      	tst	r3, r2
 802a4a4:	d10c      	bne.n	802a4c0 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802a4a6:	f100 0520 	add.w	r5, r0, #32
 802a4aa:	b123      	cbz	r3, 802a4b6 <_ZN8touchgfx6Canvas5closeEv+0x26>
 802a4ac:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 802a4b0:	4628      	mov	r0, r5
 802a4b2:	f7ff fe79 	bl	802a1a8 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a4b6:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 802a4ba:	4628      	mov	r0, r5
 802a4bc:	f7ff fe74 	bl	802a1a8 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a4c0:	2300      	movs	r3, #0
 802a4c2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802a4c6:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 802a4ca:	4298      	cmp	r0, r3
 802a4cc:	bf34      	ite	cc
 802a4ce:	2000      	movcc	r0, #0
 802a4d0:	2001      	movcs	r0, #1
 802a4d2:	bd38      	pop	{r3, r4, r5, pc}

0802a4d4 <_ZN8touchgfx6Canvas6renderEh>:
 802a4d4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802a4d8:	4604      	mov	r4, r0
 802a4da:	6840      	ldr	r0, [r0, #4]
 802a4dc:	6803      	ldr	r3, [r0, #0]
 802a4de:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 802a4e0:	460d      	mov	r5, r1
 802a4e2:	4798      	blx	r3
 802a4e4:	fb10 f105 	smulbb	r1, r0, r5
 802a4e8:	b289      	uxth	r1, r1
 802a4ea:	1c4d      	adds	r5, r1, #1
 802a4ec:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802a4f0:	122d      	asrs	r5, r5, #8
 802a4f2:	f000 809d 	beq.w	802a630 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 802a4f6:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 802a4fa:	2b00      	cmp	r3, #0
 802a4fc:	f000 8098 	beq.w	802a630 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 802a500:	4620      	mov	r0, r4
 802a502:	f7ff ffc5 	bl	802a490 <_ZN8touchgfx6Canvas5closeEv>
 802a506:	4607      	mov	r7, r0
 802a508:	2800      	cmp	r0, #0
 802a50a:	d048      	beq.n	802a59e <_ZN8touchgfx6Canvas6renderEh+0xca>
 802a50c:	6863      	ldr	r3, [r4, #4]
 802a50e:	4e49      	ldr	r6, [pc, #292]	; (802a634 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 802a510:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802a512:	6837      	ldr	r7, [r6, #0]
 802a514:	6803      	ldr	r3, [r0, #0]
 802a516:	689b      	ldr	r3, [r3, #8]
 802a518:	4798      	blx	r3
 802a51a:	4601      	mov	r1, r0
 802a51c:	4638      	mov	r0, r7
 802a51e:	f7e9 fe03 	bl	8014128 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802a522:	4607      	mov	r7, r0
 802a524:	f7e0 fd6c 	bl	800b000 <_ZN8touchgfx3HAL3lcdEv>
 802a528:	6803      	ldr	r3, [r0, #0]
 802a52a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 802a52c:	4798      	blx	r3
 802a52e:	4680      	mov	r8, r0
 802a530:	f7e0 fd66 	bl	800b000 <_ZN8touchgfx3HAL3lcdEv>
 802a534:	6803      	ldr	r3, [r0, #0]
 802a536:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802a538:	4798      	blx	r3
 802a53a:	280b      	cmp	r0, #11
 802a53c:	d85d      	bhi.n	802a5fa <_ZN8touchgfx6Canvas6renderEh+0x126>
 802a53e:	e8df f000 	tbb	[pc, r0]
 802a542:	5e53      	.short	0x5e53
 802a544:	325c066e 	.word	0x325c066e
 802a548:	67676742 	.word	0x67676742
 802a54c:	6767      	.short	0x6767
 802a54e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a552:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802a556:	2208      	movs	r2, #8
 802a558:	fb91 f2f2 	sdiv	r2, r1, r2
 802a55c:	fb08 2303 	mla	r3, r8, r3, r2
 802a560:	441f      	add	r7, r3
 802a562:	424b      	negs	r3, r1
 802a564:	f003 0307 	and.w	r3, r3, #7
 802a568:	f001 0107 	and.w	r1, r1, #7
 802a56c:	bf58      	it	pl
 802a56e:	4259      	negpl	r1, r3
 802a570:	b2c9      	uxtb	r1, r1
 802a572:	b2ed      	uxtb	r5, r5
 802a574:	e9cd 1500 	strd	r1, r5, [sp]
 802a578:	6860      	ldr	r0, [r4, #4]
 802a57a:	463a      	mov	r2, r7
 802a57c:	6a81      	ldr	r1, [r0, #40]	; 0x28
 802a57e:	fa0f f388 	sxth.w	r3, r8
 802a582:	f104 0020 	add.w	r0, r4, #32
 802a586:	f7ff fe1b 	bl	802a1c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802a58a:	6863      	ldr	r3, [r4, #4]
 802a58c:	4607      	mov	r7, r0
 802a58e:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802a590:	6803      	ldr	r3, [r0, #0]
 802a592:	691b      	ldr	r3, [r3, #16]
 802a594:	4798      	blx	r3
 802a596:	6830      	ldr	r0, [r6, #0]
 802a598:	6803      	ldr	r3, [r0, #0]
 802a59a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802a59c:	4798      	blx	r3
 802a59e:	4638      	mov	r0, r7
 802a5a0:	b002      	add	sp, #8
 802a5a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a5a6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a5aa:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802a5ae:	2204      	movs	r2, #4
 802a5b0:	fb91 f2f2 	sdiv	r2, r1, r2
 802a5b4:	fb08 2303 	mla	r3, r8, r3, r2
 802a5b8:	441f      	add	r7, r3
 802a5ba:	424b      	negs	r3, r1
 802a5bc:	f003 0303 	and.w	r3, r3, #3
 802a5c0:	f001 0103 	and.w	r1, r1, #3
 802a5c4:	e7d2      	b.n	802a56c <_ZN8touchgfx6Canvas6renderEh+0x98>
 802a5c6:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802a5ca:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a5ce:	2900      	cmp	r1, #0
 802a5d0:	f04f 0202 	mov.w	r2, #2
 802a5d4:	fb91 f2f2 	sdiv	r2, r1, r2
 802a5d8:	f001 0101 	and.w	r1, r1, #1
 802a5dc:	fb08 2303 	mla	r3, r8, r3, r2
 802a5e0:	441f      	add	r7, r3
 802a5e2:	bfb8      	it	lt
 802a5e4:	4249      	neglt	r1, r1
 802a5e6:	e7c3      	b.n	802a570 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 802a5e8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a5ec:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802a5f0:	fb08 f303 	mul.w	r3, r8, r3
 802a5f4:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802a5f8:	441f      	add	r7, r3
 802a5fa:	2100      	movs	r1, #0
 802a5fc:	e7b9      	b.n	802a572 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 802a5fe:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a602:	fb08 f203 	mul.w	r2, r8, r3
 802a606:	8b23      	ldrh	r3, [r4, #24]
 802a608:	2103      	movs	r1, #3
 802a60a:	fb13 2301 	smlabb	r3, r3, r1, r2
 802a60e:	e7f3      	b.n	802a5f8 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802a610:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a614:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802a618:	fb08 2303 	mla	r3, r8, r3, r2
 802a61c:	e7ec      	b.n	802a5f8 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802a61e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a622:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802a626:	fb08 f303 	mul.w	r3, r8, r3
 802a62a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802a62e:	e7e3      	b.n	802a5f8 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802a630:	2701      	movs	r7, #1
 802a632:	e7b4      	b.n	802a59e <_ZN8touchgfx6Canvas6renderEh+0xca>
 802a634:	2000224c 	.word	0x2000224c

0802a638 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802a638:	b510      	push	{r4, lr}
 802a63a:	4b07      	ldr	r3, [pc, #28]	; (802a658 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 802a63c:	781b      	ldrb	r3, [r3, #0]
 802a63e:	2b01      	cmp	r3, #1
 802a640:	d108      	bne.n	802a654 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802a642:	6843      	ldr	r3, [r0, #4]
 802a644:	6814      	ldr	r4, [r2, #0]
 802a646:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802a64a:	680b      	ldr	r3, [r1, #0]
 802a64c:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802a650:	6013      	str	r3, [r2, #0]
 802a652:	600c      	str	r4, [r1, #0]
 802a654:	bd10      	pop	{r4, pc}
 802a656:	bf00      	nop
 802a658:	20002244 	.word	0x20002244

0802a65c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 802a65c:	b513      	push	{r0, r1, r4, lr}
 802a65e:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802a662:	4604      	mov	r4, r0
 802a664:	e9cd 2100 	strd	r2, r1, [sp]
 802a668:	b9a3      	cbnz	r3, 802a694 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802a66a:	466a      	mov	r2, sp
 802a66c:	a901      	add	r1, sp, #4
 802a66e:	4620      	mov	r0, r4
 802a670:	f7ff ffe2 	bl	802a638 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802a674:	68a3      	ldr	r3, [r4, #8]
 802a676:	9901      	ldr	r1, [sp, #4]
 802a678:	9a00      	ldr	r2, [sp, #0]
 802a67a:	1ac9      	subs	r1, r1, r3
 802a67c:	68e3      	ldr	r3, [r4, #12]
 802a67e:	9101      	str	r1, [sp, #4]
 802a680:	1ad2      	subs	r2, r2, r3
 802a682:	2a00      	cmp	r2, #0
 802a684:	9200      	str	r2, [sp, #0]
 802a686:	da0b      	bge.n	802a6a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 802a688:	2301      	movs	r3, #1
 802a68a:	2900      	cmp	r1, #0
 802a68c:	da0e      	bge.n	802a6ac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802a68e:	f043 0304 	orr.w	r3, r3, #4
 802a692:	e013      	b.n	802a6bc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802a694:	f7ff fefc 	bl	802a490 <_ZN8touchgfx6Canvas5closeEv>
 802a698:	2800      	cmp	r0, #0
 802a69a:	d1e6      	bne.n	802a66a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 802a69c:	b002      	add	sp, #8
 802a69e:	bd10      	pop	{r4, pc}
 802a6a0:	6963      	ldr	r3, [r4, #20]
 802a6a2:	429a      	cmp	r2, r3
 802a6a4:	bfac      	ite	ge
 802a6a6:	2302      	movge	r3, #2
 802a6a8:	2300      	movlt	r3, #0
 802a6aa:	e7ee      	b.n	802a68a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 802a6ac:	6920      	ldr	r0, [r4, #16]
 802a6ae:	4281      	cmp	r1, r0
 802a6b0:	bfac      	ite	ge
 802a6b2:	2008      	movge	r0, #8
 802a6b4:	2000      	movlt	r0, #0
 802a6b6:	4318      	orrs	r0, r3
 802a6b8:	b2c3      	uxtb	r3, r0
 802a6ba:	b158      	cbz	r0, 802a6d4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 802a6bc:	2200      	movs	r2, #0
 802a6be:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802a6c2:	9901      	ldr	r1, [sp, #4]
 802a6c4:	9a00      	ldr	r2, [sp, #0]
 802a6c6:	66a1      	str	r1, [r4, #104]	; 0x68
 802a6c8:	66e2      	str	r2, [r4, #108]	; 0x6c
 802a6ca:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 802a6ce:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802a6d2:	e7e3      	b.n	802a69c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802a6d4:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802a6d8:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802a6dc:	4298      	cmp	r0, r3
 802a6de:	d803      	bhi.n	802a6e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802a6e0:	f104 0020 	add.w	r0, r4, #32
 802a6e4:	f7ec ffa6 	bl	8017634 <_ZN8touchgfx7Outline6moveToEii>
 802a6e8:	2301      	movs	r3, #1
 802a6ea:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802a6ee:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802a6f2:	2300      	movs	r3, #0
 802a6f4:	e7e5      	b.n	802a6c2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802a6f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802a6f6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802a6f8:	ab02      	add	r3, sp, #8
 802a6fa:	4604      	mov	r4, r0
 802a6fc:	f843 2d08 	str.w	r2, [r3, #-8]!
 802a700:	9101      	str	r1, [sp, #4]
 802a702:	461a      	mov	r2, r3
 802a704:	a901      	add	r1, sp, #4
 802a706:	f7ff ff97 	bl	802a638 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802a70a:	68a3      	ldr	r3, [r4, #8]
 802a70c:	9901      	ldr	r1, [sp, #4]
 802a70e:	9a00      	ldr	r2, [sp, #0]
 802a710:	1ac9      	subs	r1, r1, r3
 802a712:	68e3      	ldr	r3, [r4, #12]
 802a714:	9101      	str	r1, [sp, #4]
 802a716:	1ad2      	subs	r2, r2, r3
 802a718:	2a00      	cmp	r2, #0
 802a71a:	9200      	str	r2, [sp, #0]
 802a71c:	db1c      	blt.n	802a758 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802a71e:	6963      	ldr	r3, [r4, #20]
 802a720:	429a      	cmp	r2, r3
 802a722:	bfac      	ite	ge
 802a724:	2002      	movge	r0, #2
 802a726:	2000      	movlt	r0, #0
 802a728:	2900      	cmp	r1, #0
 802a72a:	db17      	blt.n	802a75c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802a72c:	6923      	ldr	r3, [r4, #16]
 802a72e:	4299      	cmp	r1, r3
 802a730:	bfac      	ite	ge
 802a732:	2308      	movge	r3, #8
 802a734:	2300      	movlt	r3, #0
 802a736:	4303      	orrs	r3, r0
 802a738:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 802a73c:	b2dd      	uxtb	r5, r3
 802a73e:	b978      	cbnz	r0, 802a760 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802a740:	f104 0020 	add.w	r0, r4, #32
 802a744:	f7ff fd30 	bl	802a1a8 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a748:	9b01      	ldr	r3, [sp, #4]
 802a74a:	65e3      	str	r3, [r4, #92]	; 0x5c
 802a74c:	9b00      	ldr	r3, [sp, #0]
 802a74e:	6623      	str	r3, [r4, #96]	; 0x60
 802a750:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802a754:	b002      	add	sp, #8
 802a756:	bd70      	pop	{r4, r5, r6, pc}
 802a758:	2001      	movs	r0, #1
 802a75a:	e7e5      	b.n	802a728 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802a75c:	2304      	movs	r3, #4
 802a75e:	e7ea      	b.n	802a736 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802a760:	b113      	cbz	r3, 802a768 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802a762:	ea10 0305 	ands.w	r3, r0, r5
 802a766:	d11c      	bne.n	802a7a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802a768:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 802a76c:	f104 0620 	add.w	r6, r4, #32
 802a770:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802a774:	b98b      	cbnz	r3, 802a79a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802a776:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802a77a:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802a77e:	4298      	cmp	r0, r3
 802a780:	d802      	bhi.n	802a788 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802a782:	4630      	mov	r0, r6
 802a784:	f7ec ff56 	bl	8017634 <_ZN8touchgfx7Outline6moveToEii>
 802a788:	2301      	movs	r3, #1
 802a78a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802a78e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802a792:	e9dd 2100 	ldrd	r2, r1, [sp]
 802a796:	4630      	mov	r0, r6
 802a798:	e7d4      	b.n	802a744 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802a79a:	4630      	mov	r0, r6
 802a79c:	f7ff fd04 	bl	802a1a8 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a7a0:	e7f7      	b.n	802a792 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802a7a2:	461d      	mov	r5, r3
 802a7a4:	e7d0      	b.n	802a748 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802a7a8 <_ZN8touchgfx6CanvasD1Ev>:
 802a7a8:	b510      	push	{r4, lr}
 802a7aa:	4b04      	ldr	r3, [pc, #16]	; (802a7bc <_ZN8touchgfx6CanvasD1Ev+0x14>)
 802a7ac:	4604      	mov	r4, r0
 802a7ae:	f840 3b20 	str.w	r3, [r0], #32
 802a7b2:	f7ec fa39 	bl	8016c28 <_ZN8touchgfx7OutlineD1Ev>
 802a7b6:	4620      	mov	r0, r4
 802a7b8:	bd10      	pop	{r4, pc}
 802a7ba:	bf00      	nop
 802a7bc:	0802fe4c 	.word	0x0802fe4c

0802a7c0 <_ZN8touchgfx6CanvasD0Ev>:
 802a7c0:	b510      	push	{r4, lr}
 802a7c2:	4604      	mov	r4, r0
 802a7c4:	f7ff fff0 	bl	802a7a8 <_ZN8touchgfx6CanvasD1Ev>
 802a7c8:	4620      	mov	r0, r4
 802a7ca:	2170      	movs	r1, #112	; 0x70
 802a7cc:	f000 f807 	bl	802a7de <_ZdlPvj>
 802a7d0:	4620      	mov	r0, r4
 802a7d2:	bd10      	pop	{r4, pc}

0802a7d4 <__aeabi_atexit>:
 802a7d4:	460b      	mov	r3, r1
 802a7d6:	4601      	mov	r1, r0
 802a7d8:	4618      	mov	r0, r3
 802a7da:	f000 bed1 	b.w	802b580 <__cxa_atexit>

0802a7de <_ZdlPvj>:
 802a7de:	f000 b812 	b.w	802a806 <_ZdlPv>

0802a7e2 <__cxa_guard_acquire>:
 802a7e2:	6803      	ldr	r3, [r0, #0]
 802a7e4:	07db      	lsls	r3, r3, #31
 802a7e6:	d406      	bmi.n	802a7f6 <__cxa_guard_acquire+0x14>
 802a7e8:	7843      	ldrb	r3, [r0, #1]
 802a7ea:	b103      	cbz	r3, 802a7ee <__cxa_guard_acquire+0xc>
 802a7ec:	deff      	udf	#255	; 0xff
 802a7ee:	2301      	movs	r3, #1
 802a7f0:	7043      	strb	r3, [r0, #1]
 802a7f2:	4618      	mov	r0, r3
 802a7f4:	4770      	bx	lr
 802a7f6:	2000      	movs	r0, #0
 802a7f8:	4770      	bx	lr

0802a7fa <__cxa_guard_release>:
 802a7fa:	2301      	movs	r3, #1
 802a7fc:	6003      	str	r3, [r0, #0]
 802a7fe:	4770      	bx	lr

0802a800 <__cxa_pure_virtual>:
 802a800:	b508      	push	{r3, lr}
 802a802:	f000 f80f 	bl	802a824 <_ZSt9terminatev>

0802a806 <_ZdlPv>:
 802a806:	f000 be07 	b.w	802b418 <free>

0802a80a <_ZN10__cxxabiv111__terminateEPFvvE>:
 802a80a:	b508      	push	{r3, lr}
 802a80c:	4780      	blx	r0
 802a80e:	f000 fdcf 	bl	802b3b0 <abort>
	...

0802a814 <_ZSt13get_terminatev>:
 802a814:	4b02      	ldr	r3, [pc, #8]	; (802a820 <_ZSt13get_terminatev+0xc>)
 802a816:	6818      	ldr	r0, [r3, #0]
 802a818:	f3bf 8f5b 	dmb	ish
 802a81c:	4770      	bx	lr
 802a81e:	bf00      	nop
 802a820:	20000098 	.word	0x20000098

0802a824 <_ZSt9terminatev>:
 802a824:	b508      	push	{r3, lr}
 802a826:	f7ff fff5 	bl	802a814 <_ZSt13get_terminatev>
 802a82a:	f7ff ffee 	bl	802a80a <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802a830 <cosf>:
 802a830:	ee10 3a10 	vmov	r3, s0
 802a834:	b507      	push	{r0, r1, r2, lr}
 802a836:	4a1e      	ldr	r2, [pc, #120]	; (802a8b0 <cosf+0x80>)
 802a838:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a83c:	4293      	cmp	r3, r2
 802a83e:	dc06      	bgt.n	802a84e <cosf+0x1e>
 802a840:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802a8b4 <cosf+0x84>
 802a844:	b003      	add	sp, #12
 802a846:	f85d eb04 	ldr.w	lr, [sp], #4
 802a84a:	f000 b8ff 	b.w	802aa4c <__kernel_cosf>
 802a84e:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a852:	db04      	blt.n	802a85e <cosf+0x2e>
 802a854:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a858:	b003      	add	sp, #12
 802a85a:	f85d fb04 	ldr.w	pc, [sp], #4
 802a85e:	4668      	mov	r0, sp
 802a860:	f000 f99a 	bl	802ab98 <__ieee754_rem_pio2f>
 802a864:	f000 0003 	and.w	r0, r0, #3
 802a868:	2801      	cmp	r0, #1
 802a86a:	d009      	beq.n	802a880 <cosf+0x50>
 802a86c:	2802      	cmp	r0, #2
 802a86e:	d010      	beq.n	802a892 <cosf+0x62>
 802a870:	b9b0      	cbnz	r0, 802a8a0 <cosf+0x70>
 802a872:	eddd 0a01 	vldr	s1, [sp, #4]
 802a876:	ed9d 0a00 	vldr	s0, [sp]
 802a87a:	f000 f8e7 	bl	802aa4c <__kernel_cosf>
 802a87e:	e7eb      	b.n	802a858 <cosf+0x28>
 802a880:	eddd 0a01 	vldr	s1, [sp, #4]
 802a884:	ed9d 0a00 	vldr	s0, [sp]
 802a888:	f000 f93e 	bl	802ab08 <__kernel_sinf>
 802a88c:	eeb1 0a40 	vneg.f32	s0, s0
 802a890:	e7e2      	b.n	802a858 <cosf+0x28>
 802a892:	eddd 0a01 	vldr	s1, [sp, #4]
 802a896:	ed9d 0a00 	vldr	s0, [sp]
 802a89a:	f000 f8d7 	bl	802aa4c <__kernel_cosf>
 802a89e:	e7f5      	b.n	802a88c <cosf+0x5c>
 802a8a0:	eddd 0a01 	vldr	s1, [sp, #4]
 802a8a4:	ed9d 0a00 	vldr	s0, [sp]
 802a8a8:	2001      	movs	r0, #1
 802a8aa:	f000 f92d 	bl	802ab08 <__kernel_sinf>
 802a8ae:	e7d3      	b.n	802a858 <cosf+0x28>
 802a8b0:	3f490fd8 	.word	0x3f490fd8
 802a8b4:	00000000 	.word	0x00000000

0802a8b8 <sinf>:
 802a8b8:	ee10 3a10 	vmov	r3, s0
 802a8bc:	b507      	push	{r0, r1, r2, lr}
 802a8be:	4a1f      	ldr	r2, [pc, #124]	; (802a93c <sinf+0x84>)
 802a8c0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a8c4:	4293      	cmp	r3, r2
 802a8c6:	dc07      	bgt.n	802a8d8 <sinf+0x20>
 802a8c8:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802a940 <sinf+0x88>
 802a8cc:	2000      	movs	r0, #0
 802a8ce:	b003      	add	sp, #12
 802a8d0:	f85d eb04 	ldr.w	lr, [sp], #4
 802a8d4:	f000 b918 	b.w	802ab08 <__kernel_sinf>
 802a8d8:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a8dc:	db04      	blt.n	802a8e8 <sinf+0x30>
 802a8de:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a8e2:	b003      	add	sp, #12
 802a8e4:	f85d fb04 	ldr.w	pc, [sp], #4
 802a8e8:	4668      	mov	r0, sp
 802a8ea:	f000 f955 	bl	802ab98 <__ieee754_rem_pio2f>
 802a8ee:	f000 0003 	and.w	r0, r0, #3
 802a8f2:	2801      	cmp	r0, #1
 802a8f4:	d00a      	beq.n	802a90c <sinf+0x54>
 802a8f6:	2802      	cmp	r0, #2
 802a8f8:	d00f      	beq.n	802a91a <sinf+0x62>
 802a8fa:	b9c0      	cbnz	r0, 802a92e <sinf+0x76>
 802a8fc:	eddd 0a01 	vldr	s1, [sp, #4]
 802a900:	ed9d 0a00 	vldr	s0, [sp]
 802a904:	2001      	movs	r0, #1
 802a906:	f000 f8ff 	bl	802ab08 <__kernel_sinf>
 802a90a:	e7ea      	b.n	802a8e2 <sinf+0x2a>
 802a90c:	eddd 0a01 	vldr	s1, [sp, #4]
 802a910:	ed9d 0a00 	vldr	s0, [sp]
 802a914:	f000 f89a 	bl	802aa4c <__kernel_cosf>
 802a918:	e7e3      	b.n	802a8e2 <sinf+0x2a>
 802a91a:	eddd 0a01 	vldr	s1, [sp, #4]
 802a91e:	ed9d 0a00 	vldr	s0, [sp]
 802a922:	2001      	movs	r0, #1
 802a924:	f000 f8f0 	bl	802ab08 <__kernel_sinf>
 802a928:	eeb1 0a40 	vneg.f32	s0, s0
 802a92c:	e7d9      	b.n	802a8e2 <sinf+0x2a>
 802a92e:	eddd 0a01 	vldr	s1, [sp, #4]
 802a932:	ed9d 0a00 	vldr	s0, [sp]
 802a936:	f000 f889 	bl	802aa4c <__kernel_cosf>
 802a93a:	e7f5      	b.n	802a928 <sinf+0x70>
 802a93c:	3f490fd8 	.word	0x3f490fd8
 802a940:	00000000 	.word	0x00000000

0802a944 <ceilf>:
 802a944:	ee10 3a10 	vmov	r3, s0
 802a948:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a94c:	3a7f      	subs	r2, #127	; 0x7f
 802a94e:	2a16      	cmp	r2, #22
 802a950:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a954:	dc2a      	bgt.n	802a9ac <ceilf+0x68>
 802a956:	2a00      	cmp	r2, #0
 802a958:	da11      	bge.n	802a97e <ceilf+0x3a>
 802a95a:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a9c0 <ceilf+0x7c>
 802a95e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a962:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a966:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a96a:	dd05      	ble.n	802a978 <ceilf+0x34>
 802a96c:	2b00      	cmp	r3, #0
 802a96e:	db23      	blt.n	802a9b8 <ceilf+0x74>
 802a970:	2900      	cmp	r1, #0
 802a972:	bf18      	it	ne
 802a974:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802a978:	ee00 3a10 	vmov	s0, r3
 802a97c:	4770      	bx	lr
 802a97e:	4911      	ldr	r1, [pc, #68]	; (802a9c4 <ceilf+0x80>)
 802a980:	4111      	asrs	r1, r2
 802a982:	420b      	tst	r3, r1
 802a984:	d0fa      	beq.n	802a97c <ceilf+0x38>
 802a986:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a9c0 <ceilf+0x7c>
 802a98a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a98e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a992:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a996:	ddef      	ble.n	802a978 <ceilf+0x34>
 802a998:	2b00      	cmp	r3, #0
 802a99a:	bfc2      	ittt	gt
 802a99c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802a9a0:	fa40 f202 	asrgt.w	r2, r0, r2
 802a9a4:	189b      	addgt	r3, r3, r2
 802a9a6:	ea23 0301 	bic.w	r3, r3, r1
 802a9aa:	e7e5      	b.n	802a978 <ceilf+0x34>
 802a9ac:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a9b0:	d3e4      	bcc.n	802a97c <ceilf+0x38>
 802a9b2:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a9b6:	4770      	bx	lr
 802a9b8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802a9bc:	e7dc      	b.n	802a978 <ceilf+0x34>
 802a9be:	bf00      	nop
 802a9c0:	7149f2ca 	.word	0x7149f2ca
 802a9c4:	007fffff 	.word	0x007fffff

0802a9c8 <floorf>:
 802a9c8:	ee10 3a10 	vmov	r3, s0
 802a9cc:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a9d0:	3a7f      	subs	r2, #127	; 0x7f
 802a9d2:	2a16      	cmp	r2, #22
 802a9d4:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a9d8:	dc2a      	bgt.n	802aa30 <floorf+0x68>
 802a9da:	2a00      	cmp	r2, #0
 802a9dc:	da11      	bge.n	802aa02 <floorf+0x3a>
 802a9de:	eddf 7a18 	vldr	s15, [pc, #96]	; 802aa40 <floorf+0x78>
 802a9e2:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a9e6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a9ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a9ee:	dd05      	ble.n	802a9fc <floorf+0x34>
 802a9f0:	2b00      	cmp	r3, #0
 802a9f2:	da23      	bge.n	802aa3c <floorf+0x74>
 802a9f4:	4a13      	ldr	r2, [pc, #76]	; (802aa44 <floorf+0x7c>)
 802a9f6:	2900      	cmp	r1, #0
 802a9f8:	bf18      	it	ne
 802a9fa:	4613      	movne	r3, r2
 802a9fc:	ee00 3a10 	vmov	s0, r3
 802aa00:	4770      	bx	lr
 802aa02:	4911      	ldr	r1, [pc, #68]	; (802aa48 <floorf+0x80>)
 802aa04:	4111      	asrs	r1, r2
 802aa06:	420b      	tst	r3, r1
 802aa08:	d0fa      	beq.n	802aa00 <floorf+0x38>
 802aa0a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802aa40 <floorf+0x78>
 802aa0e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802aa12:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802aa16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aa1a:	ddef      	ble.n	802a9fc <floorf+0x34>
 802aa1c:	2b00      	cmp	r3, #0
 802aa1e:	bfbe      	ittt	lt
 802aa20:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802aa24:	fa40 f202 	asrlt.w	r2, r0, r2
 802aa28:	189b      	addlt	r3, r3, r2
 802aa2a:	ea23 0301 	bic.w	r3, r3, r1
 802aa2e:	e7e5      	b.n	802a9fc <floorf+0x34>
 802aa30:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802aa34:	d3e4      	bcc.n	802aa00 <floorf+0x38>
 802aa36:	ee30 0a00 	vadd.f32	s0, s0, s0
 802aa3a:	4770      	bx	lr
 802aa3c:	2300      	movs	r3, #0
 802aa3e:	e7dd      	b.n	802a9fc <floorf+0x34>
 802aa40:	7149f2ca 	.word	0x7149f2ca
 802aa44:	bf800000 	.word	0xbf800000
 802aa48:	007fffff 	.word	0x007fffff

0802aa4c <__kernel_cosf>:
 802aa4c:	ee10 3a10 	vmov	r3, s0
 802aa50:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802aa54:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802aa58:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802aa5c:	da05      	bge.n	802aa6a <__kernel_cosf+0x1e>
 802aa5e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802aa62:	ee17 2a90 	vmov	r2, s15
 802aa66:	2a00      	cmp	r2, #0
 802aa68:	d03b      	beq.n	802aae2 <__kernel_cosf+0x96>
 802aa6a:	ee20 7a00 	vmul.f32	s14, s0, s0
 802aa6e:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802aae8 <__kernel_cosf+0x9c>
 802aa72:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802aaec <__kernel_cosf+0xa0>
 802aa76:	4a1e      	ldr	r2, [pc, #120]	; (802aaf0 <__kernel_cosf+0xa4>)
 802aa78:	eea7 6a27 	vfma.f32	s12, s14, s15
 802aa7c:	4293      	cmp	r3, r2
 802aa7e:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802aaf4 <__kernel_cosf+0xa8>
 802aa82:	eee6 7a07 	vfma.f32	s15, s12, s14
 802aa86:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802aaf8 <__kernel_cosf+0xac>
 802aa8a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802aa8e:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802aafc <__kernel_cosf+0xb0>
 802aa92:	eee6 7a07 	vfma.f32	s15, s12, s14
 802aa96:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802ab00 <__kernel_cosf+0xb4>
 802aa9a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802aa9e:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802aaa2:	ee26 6a07 	vmul.f32	s12, s12, s14
 802aaa6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802aaaa:	eee7 0a06 	vfma.f32	s1, s14, s12
 802aaae:	ee67 7a27 	vmul.f32	s15, s14, s15
 802aab2:	dc04      	bgt.n	802aabe <__kernel_cosf+0x72>
 802aab4:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802aab8:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802aabc:	4770      	bx	lr
 802aabe:	4a11      	ldr	r2, [pc, #68]	; (802ab04 <__kernel_cosf+0xb8>)
 802aac0:	4293      	cmp	r3, r2
 802aac2:	bfda      	itte	le
 802aac4:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802aac8:	ee07 3a10 	vmovle	s14, r3
 802aacc:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802aad0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802aad4:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802aad8:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802aadc:	ee30 0a67 	vsub.f32	s0, s0, s15
 802aae0:	4770      	bx	lr
 802aae2:	eeb0 0a66 	vmov.f32	s0, s13
 802aae6:	4770      	bx	lr
 802aae8:	ad47d74e 	.word	0xad47d74e
 802aaec:	310f74f6 	.word	0x310f74f6
 802aaf0:	3e999999 	.word	0x3e999999
 802aaf4:	b493f27c 	.word	0xb493f27c
 802aaf8:	37d00d01 	.word	0x37d00d01
 802aafc:	bab60b61 	.word	0xbab60b61
 802ab00:	3d2aaaab 	.word	0x3d2aaaab
 802ab04:	3f480000 	.word	0x3f480000

0802ab08 <__kernel_sinf>:
 802ab08:	ee10 3a10 	vmov	r3, s0
 802ab0c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802ab10:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802ab14:	da04      	bge.n	802ab20 <__kernel_sinf+0x18>
 802ab16:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802ab1a:	ee17 3a90 	vmov	r3, s15
 802ab1e:	b35b      	cbz	r3, 802ab78 <__kernel_sinf+0x70>
 802ab20:	ee20 7a00 	vmul.f32	s14, s0, s0
 802ab24:	eddf 7a15 	vldr	s15, [pc, #84]	; 802ab7c <__kernel_sinf+0x74>
 802ab28:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802ab80 <__kernel_sinf+0x78>
 802ab2c:	eea7 6a27 	vfma.f32	s12, s14, s15
 802ab30:	eddf 7a14 	vldr	s15, [pc, #80]	; 802ab84 <__kernel_sinf+0x7c>
 802ab34:	eee6 7a07 	vfma.f32	s15, s12, s14
 802ab38:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802ab88 <__kernel_sinf+0x80>
 802ab3c:	eea7 6a87 	vfma.f32	s12, s15, s14
 802ab40:	eddf 7a12 	vldr	s15, [pc, #72]	; 802ab8c <__kernel_sinf+0x84>
 802ab44:	ee60 6a07 	vmul.f32	s13, s0, s14
 802ab48:	eee6 7a07 	vfma.f32	s15, s12, s14
 802ab4c:	b930      	cbnz	r0, 802ab5c <__kernel_sinf+0x54>
 802ab4e:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802ab90 <__kernel_sinf+0x88>
 802ab52:	eea7 6a27 	vfma.f32	s12, s14, s15
 802ab56:	eea6 0a26 	vfma.f32	s0, s12, s13
 802ab5a:	4770      	bx	lr
 802ab5c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802ab60:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802ab64:	eee0 7a86 	vfma.f32	s15, s1, s12
 802ab68:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802ab6c:	eddf 7a09 	vldr	s15, [pc, #36]	; 802ab94 <__kernel_sinf+0x8c>
 802ab70:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802ab74:	ee30 0a60 	vsub.f32	s0, s0, s1
 802ab78:	4770      	bx	lr
 802ab7a:	bf00      	nop
 802ab7c:	2f2ec9d3 	.word	0x2f2ec9d3
 802ab80:	b2d72f34 	.word	0xb2d72f34
 802ab84:	3638ef1b 	.word	0x3638ef1b
 802ab88:	b9500d01 	.word	0xb9500d01
 802ab8c:	3c088889 	.word	0x3c088889
 802ab90:	be2aaaab 	.word	0xbe2aaaab
 802ab94:	3e2aaaab 	.word	0x3e2aaaab

0802ab98 <__ieee754_rem_pio2f>:
 802ab98:	b5f0      	push	{r4, r5, r6, r7, lr}
 802ab9a:	ee10 6a10 	vmov	r6, s0
 802ab9e:	4b86      	ldr	r3, [pc, #536]	; (802adb8 <__ieee754_rem_pio2f+0x220>)
 802aba0:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802aba4:	429d      	cmp	r5, r3
 802aba6:	b087      	sub	sp, #28
 802aba8:	4604      	mov	r4, r0
 802abaa:	dc05      	bgt.n	802abb8 <__ieee754_rem_pio2f+0x20>
 802abac:	2300      	movs	r3, #0
 802abae:	ed80 0a00 	vstr	s0, [r0]
 802abb2:	6043      	str	r3, [r0, #4]
 802abb4:	2000      	movs	r0, #0
 802abb6:	e020      	b.n	802abfa <__ieee754_rem_pio2f+0x62>
 802abb8:	4b80      	ldr	r3, [pc, #512]	; (802adbc <__ieee754_rem_pio2f+0x224>)
 802abba:	429d      	cmp	r5, r3
 802abbc:	dc38      	bgt.n	802ac30 <__ieee754_rem_pio2f+0x98>
 802abbe:	2e00      	cmp	r6, #0
 802abc0:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802adc0 <__ieee754_rem_pio2f+0x228>
 802abc4:	4b7f      	ldr	r3, [pc, #508]	; (802adc4 <__ieee754_rem_pio2f+0x22c>)
 802abc6:	f025 050f 	bic.w	r5, r5, #15
 802abca:	dd18      	ble.n	802abfe <__ieee754_rem_pio2f+0x66>
 802abcc:	429d      	cmp	r5, r3
 802abce:	ee70 7a47 	vsub.f32	s15, s0, s14
 802abd2:	bf09      	itett	eq
 802abd4:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802adc8 <__ieee754_rem_pio2f+0x230>
 802abd8:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802adcc <__ieee754_rem_pio2f+0x234>
 802abdc:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802abe0:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802add0 <__ieee754_rem_pio2f+0x238>
 802abe4:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802abe8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802abec:	edc0 6a00 	vstr	s13, [r0]
 802abf0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802abf4:	edc0 7a01 	vstr	s15, [r0, #4]
 802abf8:	2001      	movs	r0, #1
 802abfa:	b007      	add	sp, #28
 802abfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802abfe:	429d      	cmp	r5, r3
 802ac00:	ee70 7a07 	vadd.f32	s15, s0, s14
 802ac04:	bf09      	itett	eq
 802ac06:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802adc8 <__ieee754_rem_pio2f+0x230>
 802ac0a:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802adcc <__ieee754_rem_pio2f+0x234>
 802ac0e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802ac12:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802add0 <__ieee754_rem_pio2f+0x238>
 802ac16:	ee77 6a87 	vadd.f32	s13, s15, s14
 802ac1a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802ac1e:	edc0 6a00 	vstr	s13, [r0]
 802ac22:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ac26:	edc0 7a01 	vstr	s15, [r0, #4]
 802ac2a:	f04f 30ff 	mov.w	r0, #4294967295
 802ac2e:	e7e4      	b.n	802abfa <__ieee754_rem_pio2f+0x62>
 802ac30:	4b68      	ldr	r3, [pc, #416]	; (802add4 <__ieee754_rem_pio2f+0x23c>)
 802ac32:	429d      	cmp	r5, r3
 802ac34:	dc71      	bgt.n	802ad1a <__ieee754_rem_pio2f+0x182>
 802ac36:	f000 f8db 	bl	802adf0 <fabsf>
 802ac3a:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802add8 <__ieee754_rem_pio2f+0x240>
 802ac3e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802ac42:	eee0 7a07 	vfma.f32	s15, s0, s14
 802ac46:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802ac4a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802ac4e:	ee17 0a90 	vmov	r0, s15
 802ac52:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802adc0 <__ieee754_rem_pio2f+0x228>
 802ac56:	eea7 0a67 	vfms.f32	s0, s14, s15
 802ac5a:	281f      	cmp	r0, #31
 802ac5c:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802adcc <__ieee754_rem_pio2f+0x234>
 802ac60:	ee67 7a27 	vmul.f32	s15, s14, s15
 802ac64:	eeb1 6a47 	vneg.f32	s12, s14
 802ac68:	ee70 6a67 	vsub.f32	s13, s0, s15
 802ac6c:	ee16 2a90 	vmov	r2, s13
 802ac70:	dc1c      	bgt.n	802acac <__ieee754_rem_pio2f+0x114>
 802ac72:	495a      	ldr	r1, [pc, #360]	; (802addc <__ieee754_rem_pio2f+0x244>)
 802ac74:	1e47      	subs	r7, r0, #1
 802ac76:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802ac7a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802ac7e:	428b      	cmp	r3, r1
 802ac80:	d014      	beq.n	802acac <__ieee754_rem_pio2f+0x114>
 802ac82:	6022      	str	r2, [r4, #0]
 802ac84:	ed94 7a00 	vldr	s14, [r4]
 802ac88:	ee30 0a47 	vsub.f32	s0, s0, s14
 802ac8c:	2e00      	cmp	r6, #0
 802ac8e:	ee30 0a67 	vsub.f32	s0, s0, s15
 802ac92:	ed84 0a01 	vstr	s0, [r4, #4]
 802ac96:	dab0      	bge.n	802abfa <__ieee754_rem_pio2f+0x62>
 802ac98:	eeb1 7a47 	vneg.f32	s14, s14
 802ac9c:	eeb1 0a40 	vneg.f32	s0, s0
 802aca0:	ed84 7a00 	vstr	s14, [r4]
 802aca4:	ed84 0a01 	vstr	s0, [r4, #4]
 802aca8:	4240      	negs	r0, r0
 802acaa:	e7a6      	b.n	802abfa <__ieee754_rem_pio2f+0x62>
 802acac:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802acb0:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802acb4:	2908      	cmp	r1, #8
 802acb6:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802acba:	dde2      	ble.n	802ac82 <__ieee754_rem_pio2f+0xea>
 802acbc:	eddf 5a42 	vldr	s11, [pc, #264]	; 802adc8 <__ieee754_rem_pio2f+0x230>
 802acc0:	eef0 6a40 	vmov.f32	s13, s0
 802acc4:	eee6 6a25 	vfma.f32	s13, s12, s11
 802acc8:	ee70 7a66 	vsub.f32	s15, s0, s13
 802accc:	eee6 7a25 	vfma.f32	s15, s12, s11
 802acd0:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802add0 <__ieee754_rem_pio2f+0x238>
 802acd4:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802acd8:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802acdc:	ee15 2a90 	vmov	r2, s11
 802ace0:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802ace4:	1a5b      	subs	r3, r3, r1
 802ace6:	2b19      	cmp	r3, #25
 802ace8:	dc04      	bgt.n	802acf4 <__ieee754_rem_pio2f+0x15c>
 802acea:	edc4 5a00 	vstr	s11, [r4]
 802acee:	eeb0 0a66 	vmov.f32	s0, s13
 802acf2:	e7c7      	b.n	802ac84 <__ieee754_rem_pio2f+0xec>
 802acf4:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802ade0 <__ieee754_rem_pio2f+0x248>
 802acf8:	eeb0 0a66 	vmov.f32	s0, s13
 802acfc:	eea6 0a25 	vfma.f32	s0, s12, s11
 802ad00:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802ad04:	eddf 6a37 	vldr	s13, [pc, #220]	; 802ade4 <__ieee754_rem_pio2f+0x24c>
 802ad08:	eee6 7a25 	vfma.f32	s15, s12, s11
 802ad0c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802ad10:	ee30 7a67 	vsub.f32	s14, s0, s15
 802ad14:	ed84 7a00 	vstr	s14, [r4]
 802ad18:	e7b4      	b.n	802ac84 <__ieee754_rem_pio2f+0xec>
 802ad1a:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802ad1e:	db06      	blt.n	802ad2e <__ieee754_rem_pio2f+0x196>
 802ad20:	ee70 7a40 	vsub.f32	s15, s0, s0
 802ad24:	edc0 7a01 	vstr	s15, [r0, #4]
 802ad28:	edc0 7a00 	vstr	s15, [r0]
 802ad2c:	e742      	b.n	802abb4 <__ieee754_rem_pio2f+0x1c>
 802ad2e:	15ea      	asrs	r2, r5, #23
 802ad30:	3a86      	subs	r2, #134	; 0x86
 802ad32:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802ad36:	ee07 3a90 	vmov	s15, r3
 802ad3a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802ad3e:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802ade8 <__ieee754_rem_pio2f+0x250>
 802ad42:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802ad46:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ad4a:	ed8d 7a03 	vstr	s14, [sp, #12]
 802ad4e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802ad52:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802ad56:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802ad5a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ad5e:	ed8d 7a04 	vstr	s14, [sp, #16]
 802ad62:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802ad66:	eef5 7a40 	vcmp.f32	s15, #0.0
 802ad6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ad6e:	edcd 7a05 	vstr	s15, [sp, #20]
 802ad72:	d11e      	bne.n	802adb2 <__ieee754_rem_pio2f+0x21a>
 802ad74:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802ad78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ad7c:	bf14      	ite	ne
 802ad7e:	2302      	movne	r3, #2
 802ad80:	2301      	moveq	r3, #1
 802ad82:	491a      	ldr	r1, [pc, #104]	; (802adec <__ieee754_rem_pio2f+0x254>)
 802ad84:	9101      	str	r1, [sp, #4]
 802ad86:	2102      	movs	r1, #2
 802ad88:	9100      	str	r1, [sp, #0]
 802ad8a:	a803      	add	r0, sp, #12
 802ad8c:	4621      	mov	r1, r4
 802ad8e:	f000 f89d 	bl	802aecc <__kernel_rem_pio2f>
 802ad92:	2e00      	cmp	r6, #0
 802ad94:	f6bf af31 	bge.w	802abfa <__ieee754_rem_pio2f+0x62>
 802ad98:	edd4 7a00 	vldr	s15, [r4]
 802ad9c:	eef1 7a67 	vneg.f32	s15, s15
 802ada0:	edc4 7a00 	vstr	s15, [r4]
 802ada4:	edd4 7a01 	vldr	s15, [r4, #4]
 802ada8:	eef1 7a67 	vneg.f32	s15, s15
 802adac:	edc4 7a01 	vstr	s15, [r4, #4]
 802adb0:	e77a      	b.n	802aca8 <__ieee754_rem_pio2f+0x110>
 802adb2:	2303      	movs	r3, #3
 802adb4:	e7e5      	b.n	802ad82 <__ieee754_rem_pio2f+0x1ea>
 802adb6:	bf00      	nop
 802adb8:	3f490fd8 	.word	0x3f490fd8
 802adbc:	4016cbe3 	.word	0x4016cbe3
 802adc0:	3fc90f80 	.word	0x3fc90f80
 802adc4:	3fc90fd0 	.word	0x3fc90fd0
 802adc8:	37354400 	.word	0x37354400
 802adcc:	37354443 	.word	0x37354443
 802add0:	2e85a308 	.word	0x2e85a308
 802add4:	43490f80 	.word	0x43490f80
 802add8:	3f22f984 	.word	0x3f22f984
 802addc:	0802fe58 	.word	0x0802fe58
 802ade0:	2e85a300 	.word	0x2e85a300
 802ade4:	248d3132 	.word	0x248d3132
 802ade8:	43800000 	.word	0x43800000
 802adec:	0802fed8 	.word	0x0802fed8

0802adf0 <fabsf>:
 802adf0:	ee10 3a10 	vmov	r3, s0
 802adf4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802adf8:	ee00 3a10 	vmov	s0, r3
 802adfc:	4770      	bx	lr
	...

0802ae00 <scalbnf>:
 802ae00:	ee10 3a10 	vmov	r3, s0
 802ae04:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802ae08:	d02b      	beq.n	802ae62 <scalbnf+0x62>
 802ae0a:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802ae0e:	d302      	bcc.n	802ae16 <scalbnf+0x16>
 802ae10:	ee30 0a00 	vadd.f32	s0, s0, s0
 802ae14:	4770      	bx	lr
 802ae16:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802ae1a:	d123      	bne.n	802ae64 <scalbnf+0x64>
 802ae1c:	4b24      	ldr	r3, [pc, #144]	; (802aeb0 <scalbnf+0xb0>)
 802ae1e:	eddf 7a25 	vldr	s15, [pc, #148]	; 802aeb4 <scalbnf+0xb4>
 802ae22:	4298      	cmp	r0, r3
 802ae24:	ee20 0a27 	vmul.f32	s0, s0, s15
 802ae28:	db17      	blt.n	802ae5a <scalbnf+0x5a>
 802ae2a:	ee10 3a10 	vmov	r3, s0
 802ae2e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802ae32:	3a19      	subs	r2, #25
 802ae34:	f24c 3150 	movw	r1, #50000	; 0xc350
 802ae38:	4288      	cmp	r0, r1
 802ae3a:	dd15      	ble.n	802ae68 <scalbnf+0x68>
 802ae3c:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802aeb8 <scalbnf+0xb8>
 802ae40:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802aebc <scalbnf+0xbc>
 802ae44:	ee10 3a10 	vmov	r3, s0
 802ae48:	eeb0 7a67 	vmov.f32	s14, s15
 802ae4c:	2b00      	cmp	r3, #0
 802ae4e:	bfb8      	it	lt
 802ae50:	eef0 7a66 	vmovlt.f32	s15, s13
 802ae54:	ee27 0a87 	vmul.f32	s0, s15, s14
 802ae58:	4770      	bx	lr
 802ae5a:	eddf 7a19 	vldr	s15, [pc, #100]	; 802aec0 <scalbnf+0xc0>
 802ae5e:	ee27 0a80 	vmul.f32	s0, s15, s0
 802ae62:	4770      	bx	lr
 802ae64:	0dd2      	lsrs	r2, r2, #23
 802ae66:	e7e5      	b.n	802ae34 <scalbnf+0x34>
 802ae68:	4410      	add	r0, r2
 802ae6a:	28fe      	cmp	r0, #254	; 0xfe
 802ae6c:	dce6      	bgt.n	802ae3c <scalbnf+0x3c>
 802ae6e:	2800      	cmp	r0, #0
 802ae70:	dd06      	ble.n	802ae80 <scalbnf+0x80>
 802ae72:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802ae76:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802ae7a:	ee00 3a10 	vmov	s0, r3
 802ae7e:	4770      	bx	lr
 802ae80:	f110 0f16 	cmn.w	r0, #22
 802ae84:	da09      	bge.n	802ae9a <scalbnf+0x9a>
 802ae86:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802aec0 <scalbnf+0xc0>
 802ae8a:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802aec4 <scalbnf+0xc4>
 802ae8e:	ee10 3a10 	vmov	r3, s0
 802ae92:	eeb0 7a67 	vmov.f32	s14, s15
 802ae96:	2b00      	cmp	r3, #0
 802ae98:	e7d9      	b.n	802ae4e <scalbnf+0x4e>
 802ae9a:	3019      	adds	r0, #25
 802ae9c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802aea0:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802aea4:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802aec8 <scalbnf+0xc8>
 802aea8:	ee07 3a90 	vmov	s15, r3
 802aeac:	e7d7      	b.n	802ae5e <scalbnf+0x5e>
 802aeae:	bf00      	nop
 802aeb0:	ffff3cb0 	.word	0xffff3cb0
 802aeb4:	4c000000 	.word	0x4c000000
 802aeb8:	7149f2ca 	.word	0x7149f2ca
 802aebc:	f149f2ca 	.word	0xf149f2ca
 802aec0:	0da24260 	.word	0x0da24260
 802aec4:	8da24260 	.word	0x8da24260
 802aec8:	33000000 	.word	0x33000000

0802aecc <__kernel_rem_pio2f>:
 802aecc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802aed0:	ed2d 8b04 	vpush	{d8-d9}
 802aed4:	b0d9      	sub	sp, #356	; 0x164
 802aed6:	4688      	mov	r8, r1
 802aed8:	9002      	str	r0, [sp, #8]
 802aeda:	49b8      	ldr	r1, [pc, #736]	; (802b1bc <__kernel_rem_pio2f+0x2f0>)
 802aedc:	9866      	ldr	r0, [sp, #408]	; 0x198
 802aede:	9301      	str	r3, [sp, #4]
 802aee0:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802aee4:	9901      	ldr	r1, [sp, #4]
 802aee6:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802aee8:	f101 3bff 	add.w	fp, r1, #4294967295
 802aeec:	1d11      	adds	r1, r2, #4
 802aeee:	db25      	blt.n	802af3c <__kernel_rem_pio2f+0x70>
 802aef0:	1ed0      	subs	r0, r2, #3
 802aef2:	bf48      	it	mi
 802aef4:	1d10      	addmi	r0, r2, #4
 802aef6:	10c0      	asrs	r0, r0, #3
 802aef8:	1c45      	adds	r5, r0, #1
 802aefa:	00e9      	lsls	r1, r5, #3
 802aefc:	eba0 070b 	sub.w	r7, r0, fp
 802af00:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802b1cc <__kernel_rem_pio2f+0x300>
 802af04:	9103      	str	r1, [sp, #12]
 802af06:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802af0a:	eb0a 0c0b 	add.w	ip, sl, fp
 802af0e:	ae1c      	add	r6, sp, #112	; 0x70
 802af10:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802af14:	2400      	movs	r4, #0
 802af16:	4564      	cmp	r4, ip
 802af18:	dd12      	ble.n	802af40 <__kernel_rem_pio2f+0x74>
 802af1a:	9901      	ldr	r1, [sp, #4]
 802af1c:	ac1c      	add	r4, sp, #112	; 0x70
 802af1e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802af22:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802af26:	f04f 0c00 	mov.w	ip, #0
 802af2a:	45d4      	cmp	ip, sl
 802af2c:	dc27      	bgt.n	802af7e <__kernel_rem_pio2f+0xb2>
 802af2e:	f8dd e008 	ldr.w	lr, [sp, #8]
 802af32:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802b1cc <__kernel_rem_pio2f+0x300>
 802af36:	4627      	mov	r7, r4
 802af38:	2600      	movs	r6, #0
 802af3a:	e016      	b.n	802af6a <__kernel_rem_pio2f+0x9e>
 802af3c:	2000      	movs	r0, #0
 802af3e:	e7db      	b.n	802aef8 <__kernel_rem_pio2f+0x2c>
 802af40:	42e7      	cmn	r7, r4
 802af42:	bf5d      	ittte	pl
 802af44:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802af48:	ee07 1a90 	vmovpl	s15, r1
 802af4c:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802af50:	eef0 7a47 	vmovmi.f32	s15, s14
 802af54:	ece6 7a01 	vstmia	r6!, {s15}
 802af58:	3401      	adds	r4, #1
 802af5a:	e7dc      	b.n	802af16 <__kernel_rem_pio2f+0x4a>
 802af5c:	ecfe 6a01 	vldmia	lr!, {s13}
 802af60:	ed97 7a00 	vldr	s14, [r7]
 802af64:	eee6 7a87 	vfma.f32	s15, s13, s14
 802af68:	3601      	adds	r6, #1
 802af6a:	455e      	cmp	r6, fp
 802af6c:	f1a7 0704 	sub.w	r7, r7, #4
 802af70:	ddf4      	ble.n	802af5c <__kernel_rem_pio2f+0x90>
 802af72:	ece9 7a01 	vstmia	r9!, {s15}
 802af76:	f10c 0c01 	add.w	ip, ip, #1
 802af7a:	3404      	adds	r4, #4
 802af7c:	e7d5      	b.n	802af2a <__kernel_rem_pio2f+0x5e>
 802af7e:	a908      	add	r1, sp, #32
 802af80:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802af84:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802af88:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802b1c8 <__kernel_rem_pio2f+0x2fc>
 802af8c:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802b1c4 <__kernel_rem_pio2f+0x2f8>
 802af90:	9105      	str	r1, [sp, #20]
 802af92:	9304      	str	r3, [sp, #16]
 802af94:	4656      	mov	r6, sl
 802af96:	00b3      	lsls	r3, r6, #2
 802af98:	9306      	str	r3, [sp, #24]
 802af9a:	ab58      	add	r3, sp, #352	; 0x160
 802af9c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802afa0:	ac08      	add	r4, sp, #32
 802afa2:	ab44      	add	r3, sp, #272	; 0x110
 802afa4:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802afa8:	46a4      	mov	ip, r4
 802afaa:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802afae:	4637      	mov	r7, r6
 802afb0:	2f00      	cmp	r7, #0
 802afb2:	f1a0 0004 	sub.w	r0, r0, #4
 802afb6:	dc4a      	bgt.n	802b04e <__kernel_rem_pio2f+0x182>
 802afb8:	4628      	mov	r0, r5
 802afba:	9207      	str	r2, [sp, #28]
 802afbc:	f7ff ff20 	bl	802ae00 <scalbnf>
 802afc0:	eeb0 8a40 	vmov.f32	s16, s0
 802afc4:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802afc8:	ee28 0a00 	vmul.f32	s0, s16, s0
 802afcc:	f7ff fcfc 	bl	802a9c8 <floorf>
 802afd0:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802afd4:	eea0 8a67 	vfms.f32	s16, s0, s15
 802afd8:	2d00      	cmp	r5, #0
 802afda:	9a07      	ldr	r2, [sp, #28]
 802afdc:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802afe0:	ee17 9a90 	vmov	r9, s15
 802afe4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802afe8:	ee38 8a67 	vsub.f32	s16, s16, s15
 802afec:	dd41      	ble.n	802b072 <__kernel_rem_pio2f+0x1a6>
 802afee:	f106 3cff 	add.w	ip, r6, #4294967295
 802aff2:	ab08      	add	r3, sp, #32
 802aff4:	f1c5 0e08 	rsb	lr, r5, #8
 802aff8:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802affc:	fa47 f00e 	asr.w	r0, r7, lr
 802b000:	4481      	add	r9, r0
 802b002:	fa00 f00e 	lsl.w	r0, r0, lr
 802b006:	1a3f      	subs	r7, r7, r0
 802b008:	f1c5 0007 	rsb	r0, r5, #7
 802b00c:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802b010:	4107      	asrs	r7, r0
 802b012:	2f00      	cmp	r7, #0
 802b014:	dd3c      	ble.n	802b090 <__kernel_rem_pio2f+0x1c4>
 802b016:	f04f 0e00 	mov.w	lr, #0
 802b01a:	f109 0901 	add.w	r9, r9, #1
 802b01e:	4671      	mov	r1, lr
 802b020:	4576      	cmp	r6, lr
 802b022:	dc67      	bgt.n	802b0f4 <__kernel_rem_pio2f+0x228>
 802b024:	2d00      	cmp	r5, #0
 802b026:	dd03      	ble.n	802b030 <__kernel_rem_pio2f+0x164>
 802b028:	2d01      	cmp	r5, #1
 802b02a:	d074      	beq.n	802b116 <__kernel_rem_pio2f+0x24a>
 802b02c:	2d02      	cmp	r5, #2
 802b02e:	d07b      	beq.n	802b128 <__kernel_rem_pio2f+0x25c>
 802b030:	2f02      	cmp	r7, #2
 802b032:	d12d      	bne.n	802b090 <__kernel_rem_pio2f+0x1c4>
 802b034:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802b038:	ee30 8a48 	vsub.f32	s16, s0, s16
 802b03c:	b341      	cbz	r1, 802b090 <__kernel_rem_pio2f+0x1c4>
 802b03e:	4628      	mov	r0, r5
 802b040:	9207      	str	r2, [sp, #28]
 802b042:	f7ff fedd 	bl	802ae00 <scalbnf>
 802b046:	9a07      	ldr	r2, [sp, #28]
 802b048:	ee38 8a40 	vsub.f32	s16, s16, s0
 802b04c:	e020      	b.n	802b090 <__kernel_rem_pio2f+0x1c4>
 802b04e:	ee60 7a28 	vmul.f32	s15, s0, s17
 802b052:	3f01      	subs	r7, #1
 802b054:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b058:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b05c:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802b060:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b064:	ecac 0a01 	vstmia	ip!, {s0}
 802b068:	ed90 0a00 	vldr	s0, [r0]
 802b06c:	ee37 0a80 	vadd.f32	s0, s15, s0
 802b070:	e79e      	b.n	802afb0 <__kernel_rem_pio2f+0xe4>
 802b072:	d105      	bne.n	802b080 <__kernel_rem_pio2f+0x1b4>
 802b074:	1e70      	subs	r0, r6, #1
 802b076:	ab08      	add	r3, sp, #32
 802b078:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802b07c:	11ff      	asrs	r7, r7, #7
 802b07e:	e7c8      	b.n	802b012 <__kernel_rem_pio2f+0x146>
 802b080:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802b084:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802b088:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b08c:	da30      	bge.n	802b0f0 <__kernel_rem_pio2f+0x224>
 802b08e:	2700      	movs	r7, #0
 802b090:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802b094:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b098:	f040 809a 	bne.w	802b1d0 <__kernel_rem_pio2f+0x304>
 802b09c:	1e74      	subs	r4, r6, #1
 802b09e:	46a4      	mov	ip, r4
 802b0a0:	2100      	movs	r1, #0
 802b0a2:	45d4      	cmp	ip, sl
 802b0a4:	da47      	bge.n	802b136 <__kernel_rem_pio2f+0x26a>
 802b0a6:	2900      	cmp	r1, #0
 802b0a8:	d063      	beq.n	802b172 <__kernel_rem_pio2f+0x2a6>
 802b0aa:	ab08      	add	r3, sp, #32
 802b0ac:	3d08      	subs	r5, #8
 802b0ae:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802b0b2:	2b00      	cmp	r3, #0
 802b0b4:	d07f      	beq.n	802b1b6 <__kernel_rem_pio2f+0x2ea>
 802b0b6:	4628      	mov	r0, r5
 802b0b8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802b0bc:	f7ff fea0 	bl	802ae00 <scalbnf>
 802b0c0:	1c63      	adds	r3, r4, #1
 802b0c2:	aa44      	add	r2, sp, #272	; 0x110
 802b0c4:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802b1c8 <__kernel_rem_pio2f+0x2fc>
 802b0c8:	0099      	lsls	r1, r3, #2
 802b0ca:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802b0ce:	4623      	mov	r3, r4
 802b0d0:	2b00      	cmp	r3, #0
 802b0d2:	f280 80ad 	bge.w	802b230 <__kernel_rem_pio2f+0x364>
 802b0d6:	4623      	mov	r3, r4
 802b0d8:	2b00      	cmp	r3, #0
 802b0da:	f2c0 80cb 	blt.w	802b274 <__kernel_rem_pio2f+0x3a8>
 802b0de:	aa44      	add	r2, sp, #272	; 0x110
 802b0e0:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802b0e4:	4e36      	ldr	r6, [pc, #216]	; (802b1c0 <__kernel_rem_pio2f+0x2f4>)
 802b0e6:	eddf 7a39 	vldr	s15, [pc, #228]	; 802b1cc <__kernel_rem_pio2f+0x300>
 802b0ea:	2000      	movs	r0, #0
 802b0ec:	1ae2      	subs	r2, r4, r3
 802b0ee:	e0b6      	b.n	802b25e <__kernel_rem_pio2f+0x392>
 802b0f0:	2702      	movs	r7, #2
 802b0f2:	e790      	b.n	802b016 <__kernel_rem_pio2f+0x14a>
 802b0f4:	6820      	ldr	r0, [r4, #0]
 802b0f6:	b949      	cbnz	r1, 802b10c <__kernel_rem_pio2f+0x240>
 802b0f8:	b118      	cbz	r0, 802b102 <__kernel_rem_pio2f+0x236>
 802b0fa:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802b0fe:	6020      	str	r0, [r4, #0]
 802b100:	2001      	movs	r0, #1
 802b102:	f10e 0e01 	add.w	lr, lr, #1
 802b106:	3404      	adds	r4, #4
 802b108:	4601      	mov	r1, r0
 802b10a:	e789      	b.n	802b020 <__kernel_rem_pio2f+0x154>
 802b10c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802b110:	6020      	str	r0, [r4, #0]
 802b112:	4608      	mov	r0, r1
 802b114:	e7f5      	b.n	802b102 <__kernel_rem_pio2f+0x236>
 802b116:	1e74      	subs	r4, r6, #1
 802b118:	ab08      	add	r3, sp, #32
 802b11a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b11e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802b122:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802b126:	e783      	b.n	802b030 <__kernel_rem_pio2f+0x164>
 802b128:	1e74      	subs	r4, r6, #1
 802b12a:	ab08      	add	r3, sp, #32
 802b12c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b130:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802b134:	e7f5      	b.n	802b122 <__kernel_rem_pio2f+0x256>
 802b136:	ab08      	add	r3, sp, #32
 802b138:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802b13c:	f10c 3cff 	add.w	ip, ip, #4294967295
 802b140:	4301      	orrs	r1, r0
 802b142:	e7ae      	b.n	802b0a2 <__kernel_rem_pio2f+0x1d6>
 802b144:	3001      	adds	r0, #1
 802b146:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802b14a:	2f00      	cmp	r7, #0
 802b14c:	d0fa      	beq.n	802b144 <__kernel_rem_pio2f+0x278>
 802b14e:	9b06      	ldr	r3, [sp, #24]
 802b150:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802b154:	eb0d 0403 	add.w	r4, sp, r3
 802b158:	9b01      	ldr	r3, [sp, #4]
 802b15a:	18f7      	adds	r7, r6, r3
 802b15c:	ab1c      	add	r3, sp, #112	; 0x70
 802b15e:	f106 0c01 	add.w	ip, r6, #1
 802b162:	3c4c      	subs	r4, #76	; 0x4c
 802b164:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802b168:	4430      	add	r0, r6
 802b16a:	4560      	cmp	r0, ip
 802b16c:	da04      	bge.n	802b178 <__kernel_rem_pio2f+0x2ac>
 802b16e:	4606      	mov	r6, r0
 802b170:	e711      	b.n	802af96 <__kernel_rem_pio2f+0xca>
 802b172:	9c05      	ldr	r4, [sp, #20]
 802b174:	2001      	movs	r0, #1
 802b176:	e7e6      	b.n	802b146 <__kernel_rem_pio2f+0x27a>
 802b178:	9b04      	ldr	r3, [sp, #16]
 802b17a:	f8dd e008 	ldr.w	lr, [sp, #8]
 802b17e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802b182:	9306      	str	r3, [sp, #24]
 802b184:	ee07 3a90 	vmov	s15, r3
 802b188:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b18c:	2600      	movs	r6, #0
 802b18e:	ece7 7a01 	vstmia	r7!, {s15}
 802b192:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b1cc <__kernel_rem_pio2f+0x300>
 802b196:	46b9      	mov	r9, r7
 802b198:	455e      	cmp	r6, fp
 802b19a:	dd04      	ble.n	802b1a6 <__kernel_rem_pio2f+0x2da>
 802b19c:	ece4 7a01 	vstmia	r4!, {s15}
 802b1a0:	f10c 0c01 	add.w	ip, ip, #1
 802b1a4:	e7e1      	b.n	802b16a <__kernel_rem_pio2f+0x29e>
 802b1a6:	ecfe 6a01 	vldmia	lr!, {s13}
 802b1aa:	ed39 7a01 	vldmdb	r9!, {s14}
 802b1ae:	3601      	adds	r6, #1
 802b1b0:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b1b4:	e7f0      	b.n	802b198 <__kernel_rem_pio2f+0x2cc>
 802b1b6:	3c01      	subs	r4, #1
 802b1b8:	e777      	b.n	802b0aa <__kernel_rem_pio2f+0x1de>
 802b1ba:	bf00      	nop
 802b1bc:	0803021c 	.word	0x0803021c
 802b1c0:	080301f0 	.word	0x080301f0
 802b1c4:	43800000 	.word	0x43800000
 802b1c8:	3b800000 	.word	0x3b800000
 802b1cc:	00000000 	.word	0x00000000
 802b1d0:	9b03      	ldr	r3, [sp, #12]
 802b1d2:	eeb0 0a48 	vmov.f32	s0, s16
 802b1d6:	1a98      	subs	r0, r3, r2
 802b1d8:	f7ff fe12 	bl	802ae00 <scalbnf>
 802b1dc:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802b1c4 <__kernel_rem_pio2f+0x2f8>
 802b1e0:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802b1e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b1e8:	db19      	blt.n	802b21e <__kernel_rem_pio2f+0x352>
 802b1ea:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802b1c8 <__kernel_rem_pio2f+0x2fc>
 802b1ee:	ee60 7a27 	vmul.f32	s15, s0, s15
 802b1f2:	aa08      	add	r2, sp, #32
 802b1f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b1f8:	1c74      	adds	r4, r6, #1
 802b1fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b1fe:	3508      	adds	r5, #8
 802b200:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802b204:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b208:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b20c:	ee10 3a10 	vmov	r3, s0
 802b210:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b214:	ee17 3a90 	vmov	r3, s15
 802b218:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802b21c:	e74b      	b.n	802b0b6 <__kernel_rem_pio2f+0x1ea>
 802b21e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b222:	aa08      	add	r2, sp, #32
 802b224:	ee10 3a10 	vmov	r3, s0
 802b228:	4634      	mov	r4, r6
 802b22a:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b22e:	e742      	b.n	802b0b6 <__kernel_rem_pio2f+0x1ea>
 802b230:	a808      	add	r0, sp, #32
 802b232:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802b236:	9001      	str	r0, [sp, #4]
 802b238:	ee07 0a90 	vmov	s15, r0
 802b23c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b240:	3b01      	subs	r3, #1
 802b242:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b246:	ee20 0a07 	vmul.f32	s0, s0, s14
 802b24a:	ed62 7a01 	vstmdb	r2!, {s15}
 802b24e:	e73f      	b.n	802b0d0 <__kernel_rem_pio2f+0x204>
 802b250:	ecf6 6a01 	vldmia	r6!, {s13}
 802b254:	ecb5 7a01 	vldmia	r5!, {s14}
 802b258:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b25c:	3001      	adds	r0, #1
 802b25e:	4550      	cmp	r0, sl
 802b260:	dc01      	bgt.n	802b266 <__kernel_rem_pio2f+0x39a>
 802b262:	4290      	cmp	r0, r2
 802b264:	ddf4      	ble.n	802b250 <__kernel_rem_pio2f+0x384>
 802b266:	a858      	add	r0, sp, #352	; 0x160
 802b268:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802b26c:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802b270:	3b01      	subs	r3, #1
 802b272:	e731      	b.n	802b0d8 <__kernel_rem_pio2f+0x20c>
 802b274:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b276:	2b02      	cmp	r3, #2
 802b278:	dc09      	bgt.n	802b28e <__kernel_rem_pio2f+0x3c2>
 802b27a:	2b00      	cmp	r3, #0
 802b27c:	dc2b      	bgt.n	802b2d6 <__kernel_rem_pio2f+0x40a>
 802b27e:	d044      	beq.n	802b30a <__kernel_rem_pio2f+0x43e>
 802b280:	f009 0007 	and.w	r0, r9, #7
 802b284:	b059      	add	sp, #356	; 0x164
 802b286:	ecbd 8b04 	vpop	{d8-d9}
 802b28a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b28e:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b290:	2b03      	cmp	r3, #3
 802b292:	d1f5      	bne.n	802b280 <__kernel_rem_pio2f+0x3b4>
 802b294:	aa30      	add	r2, sp, #192	; 0xc0
 802b296:	1f0b      	subs	r3, r1, #4
 802b298:	4413      	add	r3, r2
 802b29a:	461a      	mov	r2, r3
 802b29c:	4620      	mov	r0, r4
 802b29e:	2800      	cmp	r0, #0
 802b2a0:	f1a2 0204 	sub.w	r2, r2, #4
 802b2a4:	dc52      	bgt.n	802b34c <__kernel_rem_pio2f+0x480>
 802b2a6:	4622      	mov	r2, r4
 802b2a8:	2a01      	cmp	r2, #1
 802b2aa:	f1a3 0304 	sub.w	r3, r3, #4
 802b2ae:	dc5d      	bgt.n	802b36c <__kernel_rem_pio2f+0x4a0>
 802b2b0:	ab30      	add	r3, sp, #192	; 0xc0
 802b2b2:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802b1cc <__kernel_rem_pio2f+0x300>
 802b2b6:	440b      	add	r3, r1
 802b2b8:	2c01      	cmp	r4, #1
 802b2ba:	dc67      	bgt.n	802b38c <__kernel_rem_pio2f+0x4c0>
 802b2bc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802b2c0:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802b2c4:	2f00      	cmp	r7, #0
 802b2c6:	d167      	bne.n	802b398 <__kernel_rem_pio2f+0x4cc>
 802b2c8:	edc8 6a00 	vstr	s13, [r8]
 802b2cc:	ed88 7a01 	vstr	s14, [r8, #4]
 802b2d0:	edc8 7a02 	vstr	s15, [r8, #8]
 802b2d4:	e7d4      	b.n	802b280 <__kernel_rem_pio2f+0x3b4>
 802b2d6:	ab30      	add	r3, sp, #192	; 0xc0
 802b2d8:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802b1cc <__kernel_rem_pio2f+0x300>
 802b2dc:	440b      	add	r3, r1
 802b2de:	4622      	mov	r2, r4
 802b2e0:	2a00      	cmp	r2, #0
 802b2e2:	da24      	bge.n	802b32e <__kernel_rem_pio2f+0x462>
 802b2e4:	b34f      	cbz	r7, 802b33a <__kernel_rem_pio2f+0x46e>
 802b2e6:	eef1 7a47 	vneg.f32	s15, s14
 802b2ea:	edc8 7a00 	vstr	s15, [r8]
 802b2ee:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802b2f2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b2f6:	aa31      	add	r2, sp, #196	; 0xc4
 802b2f8:	2301      	movs	r3, #1
 802b2fa:	429c      	cmp	r4, r3
 802b2fc:	da20      	bge.n	802b340 <__kernel_rem_pio2f+0x474>
 802b2fe:	b10f      	cbz	r7, 802b304 <__kernel_rem_pio2f+0x438>
 802b300:	eef1 7a67 	vneg.f32	s15, s15
 802b304:	edc8 7a01 	vstr	s15, [r8, #4]
 802b308:	e7ba      	b.n	802b280 <__kernel_rem_pio2f+0x3b4>
 802b30a:	ab30      	add	r3, sp, #192	; 0xc0
 802b30c:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802b1cc <__kernel_rem_pio2f+0x300>
 802b310:	440b      	add	r3, r1
 802b312:	2c00      	cmp	r4, #0
 802b314:	da05      	bge.n	802b322 <__kernel_rem_pio2f+0x456>
 802b316:	b10f      	cbz	r7, 802b31c <__kernel_rem_pio2f+0x450>
 802b318:	eef1 7a67 	vneg.f32	s15, s15
 802b31c:	edc8 7a00 	vstr	s15, [r8]
 802b320:	e7ae      	b.n	802b280 <__kernel_rem_pio2f+0x3b4>
 802b322:	ed33 7a01 	vldmdb	r3!, {s14}
 802b326:	3c01      	subs	r4, #1
 802b328:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b32c:	e7f1      	b.n	802b312 <__kernel_rem_pio2f+0x446>
 802b32e:	ed73 7a01 	vldmdb	r3!, {s15}
 802b332:	3a01      	subs	r2, #1
 802b334:	ee37 7a27 	vadd.f32	s14, s14, s15
 802b338:	e7d2      	b.n	802b2e0 <__kernel_rem_pio2f+0x414>
 802b33a:	eef0 7a47 	vmov.f32	s15, s14
 802b33e:	e7d4      	b.n	802b2ea <__kernel_rem_pio2f+0x41e>
 802b340:	ecb2 7a01 	vldmia	r2!, {s14}
 802b344:	3301      	adds	r3, #1
 802b346:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b34a:	e7d6      	b.n	802b2fa <__kernel_rem_pio2f+0x42e>
 802b34c:	edd2 7a00 	vldr	s15, [r2]
 802b350:	edd2 6a01 	vldr	s13, [r2, #4]
 802b354:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b358:	3801      	subs	r0, #1
 802b35a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b35e:	ed82 7a00 	vstr	s14, [r2]
 802b362:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b366:	edc2 7a01 	vstr	s15, [r2, #4]
 802b36a:	e798      	b.n	802b29e <__kernel_rem_pio2f+0x3d2>
 802b36c:	edd3 7a00 	vldr	s15, [r3]
 802b370:	edd3 6a01 	vldr	s13, [r3, #4]
 802b374:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b378:	3a01      	subs	r2, #1
 802b37a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b37e:	ed83 7a00 	vstr	s14, [r3]
 802b382:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b386:	edc3 7a01 	vstr	s15, [r3, #4]
 802b38a:	e78d      	b.n	802b2a8 <__kernel_rem_pio2f+0x3dc>
 802b38c:	ed33 7a01 	vldmdb	r3!, {s14}
 802b390:	3c01      	subs	r4, #1
 802b392:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b396:	e78f      	b.n	802b2b8 <__kernel_rem_pio2f+0x3ec>
 802b398:	eef1 6a66 	vneg.f32	s13, s13
 802b39c:	eeb1 7a47 	vneg.f32	s14, s14
 802b3a0:	edc8 6a00 	vstr	s13, [r8]
 802b3a4:	ed88 7a01 	vstr	s14, [r8, #4]
 802b3a8:	eef1 7a67 	vneg.f32	s15, s15
 802b3ac:	e790      	b.n	802b2d0 <__kernel_rem_pio2f+0x404>
 802b3ae:	bf00      	nop

0802b3b0 <abort>:
 802b3b0:	b508      	push	{r3, lr}
 802b3b2:	2006      	movs	r0, #6
 802b3b4:	f000 fa3a 	bl	802b82c <raise>
 802b3b8:	2001      	movs	r0, #1
 802b3ba:	f7d7 ff73 	bl	80032a4 <_exit>
	...

0802b3c0 <__assert_func>:
 802b3c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802b3c2:	4614      	mov	r4, r2
 802b3c4:	461a      	mov	r2, r3
 802b3c6:	4b09      	ldr	r3, [pc, #36]	; (802b3ec <__assert_func+0x2c>)
 802b3c8:	681b      	ldr	r3, [r3, #0]
 802b3ca:	4605      	mov	r5, r0
 802b3cc:	68d8      	ldr	r0, [r3, #12]
 802b3ce:	b14c      	cbz	r4, 802b3e4 <__assert_func+0x24>
 802b3d0:	4b07      	ldr	r3, [pc, #28]	; (802b3f0 <__assert_func+0x30>)
 802b3d2:	9100      	str	r1, [sp, #0]
 802b3d4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802b3d8:	4906      	ldr	r1, [pc, #24]	; (802b3f4 <__assert_func+0x34>)
 802b3da:	462b      	mov	r3, r5
 802b3dc:	f000 f982 	bl	802b6e4 <fiprintf>
 802b3e0:	f7ff ffe6 	bl	802b3b0 <abort>
 802b3e4:	4b04      	ldr	r3, [pc, #16]	; (802b3f8 <__assert_func+0x38>)
 802b3e6:	461c      	mov	r4, r3
 802b3e8:	e7f3      	b.n	802b3d2 <__assert_func+0x12>
 802b3ea:	bf00      	nop
 802b3ec:	200000f4 	.word	0x200000f4
 802b3f0:	08030228 	.word	0x08030228
 802b3f4:	08030235 	.word	0x08030235
 802b3f8:	08030263 	.word	0x08030263

0802b3fc <atexit>:
 802b3fc:	2300      	movs	r3, #0
 802b3fe:	4601      	mov	r1, r0
 802b400:	461a      	mov	r2, r3
 802b402:	4618      	mov	r0, r3
 802b404:	f000 bac0 	b.w	802b988 <__register_exitproc>

0802b408 <malloc>:
 802b408:	4b02      	ldr	r3, [pc, #8]	; (802b414 <malloc+0xc>)
 802b40a:	4601      	mov	r1, r0
 802b40c:	6818      	ldr	r0, [r3, #0]
 802b40e:	f000 b82b 	b.w	802b468 <_malloc_r>
 802b412:	bf00      	nop
 802b414:	200000f4 	.word	0x200000f4

0802b418 <free>:
 802b418:	4b02      	ldr	r3, [pc, #8]	; (802b424 <free+0xc>)
 802b41a:	4601      	mov	r1, r0
 802b41c:	6818      	ldr	r0, [r3, #0]
 802b41e:	f000 bb11 	b.w	802ba44 <_free_r>
 802b422:	bf00      	nop
 802b424:	200000f4 	.word	0x200000f4

0802b428 <sbrk_aligned>:
 802b428:	b570      	push	{r4, r5, r6, lr}
 802b42a:	4e0e      	ldr	r6, [pc, #56]	; (802b464 <sbrk_aligned+0x3c>)
 802b42c:	460c      	mov	r4, r1
 802b42e:	6831      	ldr	r1, [r6, #0]
 802b430:	4605      	mov	r5, r0
 802b432:	b911      	cbnz	r1, 802b43a <sbrk_aligned+0x12>
 802b434:	f000 fa4a 	bl	802b8cc <_sbrk_r>
 802b438:	6030      	str	r0, [r6, #0]
 802b43a:	4621      	mov	r1, r4
 802b43c:	4628      	mov	r0, r5
 802b43e:	f000 fa45 	bl	802b8cc <_sbrk_r>
 802b442:	1c43      	adds	r3, r0, #1
 802b444:	d00a      	beq.n	802b45c <sbrk_aligned+0x34>
 802b446:	1cc4      	adds	r4, r0, #3
 802b448:	f024 0403 	bic.w	r4, r4, #3
 802b44c:	42a0      	cmp	r0, r4
 802b44e:	d007      	beq.n	802b460 <sbrk_aligned+0x38>
 802b450:	1a21      	subs	r1, r4, r0
 802b452:	4628      	mov	r0, r5
 802b454:	f000 fa3a 	bl	802b8cc <_sbrk_r>
 802b458:	3001      	adds	r0, #1
 802b45a:	d101      	bne.n	802b460 <sbrk_aligned+0x38>
 802b45c:	f04f 34ff 	mov.w	r4, #4294967295
 802b460:	4620      	mov	r0, r4
 802b462:	bd70      	pop	{r4, r5, r6, pc}
 802b464:	20002ba4 	.word	0x20002ba4

0802b468 <_malloc_r>:
 802b468:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b46c:	1ccd      	adds	r5, r1, #3
 802b46e:	f025 0503 	bic.w	r5, r5, #3
 802b472:	3508      	adds	r5, #8
 802b474:	2d0c      	cmp	r5, #12
 802b476:	bf38      	it	cc
 802b478:	250c      	movcc	r5, #12
 802b47a:	2d00      	cmp	r5, #0
 802b47c:	4607      	mov	r7, r0
 802b47e:	db01      	blt.n	802b484 <_malloc_r+0x1c>
 802b480:	42a9      	cmp	r1, r5
 802b482:	d905      	bls.n	802b490 <_malloc_r+0x28>
 802b484:	230c      	movs	r3, #12
 802b486:	603b      	str	r3, [r7, #0]
 802b488:	2600      	movs	r6, #0
 802b48a:	4630      	mov	r0, r6
 802b48c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b490:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802b564 <_malloc_r+0xfc>
 802b494:	f000 f868 	bl	802b568 <__malloc_lock>
 802b498:	f8d8 3000 	ldr.w	r3, [r8]
 802b49c:	461c      	mov	r4, r3
 802b49e:	bb5c      	cbnz	r4, 802b4f8 <_malloc_r+0x90>
 802b4a0:	4629      	mov	r1, r5
 802b4a2:	4638      	mov	r0, r7
 802b4a4:	f7ff ffc0 	bl	802b428 <sbrk_aligned>
 802b4a8:	1c43      	adds	r3, r0, #1
 802b4aa:	4604      	mov	r4, r0
 802b4ac:	d155      	bne.n	802b55a <_malloc_r+0xf2>
 802b4ae:	f8d8 4000 	ldr.w	r4, [r8]
 802b4b2:	4626      	mov	r6, r4
 802b4b4:	2e00      	cmp	r6, #0
 802b4b6:	d145      	bne.n	802b544 <_malloc_r+0xdc>
 802b4b8:	2c00      	cmp	r4, #0
 802b4ba:	d048      	beq.n	802b54e <_malloc_r+0xe6>
 802b4bc:	6823      	ldr	r3, [r4, #0]
 802b4be:	4631      	mov	r1, r6
 802b4c0:	4638      	mov	r0, r7
 802b4c2:	eb04 0903 	add.w	r9, r4, r3
 802b4c6:	f000 fa01 	bl	802b8cc <_sbrk_r>
 802b4ca:	4581      	cmp	r9, r0
 802b4cc:	d13f      	bne.n	802b54e <_malloc_r+0xe6>
 802b4ce:	6821      	ldr	r1, [r4, #0]
 802b4d0:	1a6d      	subs	r5, r5, r1
 802b4d2:	4629      	mov	r1, r5
 802b4d4:	4638      	mov	r0, r7
 802b4d6:	f7ff ffa7 	bl	802b428 <sbrk_aligned>
 802b4da:	3001      	adds	r0, #1
 802b4dc:	d037      	beq.n	802b54e <_malloc_r+0xe6>
 802b4de:	6823      	ldr	r3, [r4, #0]
 802b4e0:	442b      	add	r3, r5
 802b4e2:	6023      	str	r3, [r4, #0]
 802b4e4:	f8d8 3000 	ldr.w	r3, [r8]
 802b4e8:	2b00      	cmp	r3, #0
 802b4ea:	d038      	beq.n	802b55e <_malloc_r+0xf6>
 802b4ec:	685a      	ldr	r2, [r3, #4]
 802b4ee:	42a2      	cmp	r2, r4
 802b4f0:	d12b      	bne.n	802b54a <_malloc_r+0xe2>
 802b4f2:	2200      	movs	r2, #0
 802b4f4:	605a      	str	r2, [r3, #4]
 802b4f6:	e00f      	b.n	802b518 <_malloc_r+0xb0>
 802b4f8:	6822      	ldr	r2, [r4, #0]
 802b4fa:	1b52      	subs	r2, r2, r5
 802b4fc:	d41f      	bmi.n	802b53e <_malloc_r+0xd6>
 802b4fe:	2a0b      	cmp	r2, #11
 802b500:	d917      	bls.n	802b532 <_malloc_r+0xca>
 802b502:	1961      	adds	r1, r4, r5
 802b504:	42a3      	cmp	r3, r4
 802b506:	6025      	str	r5, [r4, #0]
 802b508:	bf18      	it	ne
 802b50a:	6059      	strne	r1, [r3, #4]
 802b50c:	6863      	ldr	r3, [r4, #4]
 802b50e:	bf08      	it	eq
 802b510:	f8c8 1000 	streq.w	r1, [r8]
 802b514:	5162      	str	r2, [r4, r5]
 802b516:	604b      	str	r3, [r1, #4]
 802b518:	4638      	mov	r0, r7
 802b51a:	f104 060b 	add.w	r6, r4, #11
 802b51e:	f000 f829 	bl	802b574 <__malloc_unlock>
 802b522:	f026 0607 	bic.w	r6, r6, #7
 802b526:	1d23      	adds	r3, r4, #4
 802b528:	1af2      	subs	r2, r6, r3
 802b52a:	d0ae      	beq.n	802b48a <_malloc_r+0x22>
 802b52c:	1b9b      	subs	r3, r3, r6
 802b52e:	50a3      	str	r3, [r4, r2]
 802b530:	e7ab      	b.n	802b48a <_malloc_r+0x22>
 802b532:	42a3      	cmp	r3, r4
 802b534:	6862      	ldr	r2, [r4, #4]
 802b536:	d1dd      	bne.n	802b4f4 <_malloc_r+0x8c>
 802b538:	f8c8 2000 	str.w	r2, [r8]
 802b53c:	e7ec      	b.n	802b518 <_malloc_r+0xb0>
 802b53e:	4623      	mov	r3, r4
 802b540:	6864      	ldr	r4, [r4, #4]
 802b542:	e7ac      	b.n	802b49e <_malloc_r+0x36>
 802b544:	4634      	mov	r4, r6
 802b546:	6876      	ldr	r6, [r6, #4]
 802b548:	e7b4      	b.n	802b4b4 <_malloc_r+0x4c>
 802b54a:	4613      	mov	r3, r2
 802b54c:	e7cc      	b.n	802b4e8 <_malloc_r+0x80>
 802b54e:	230c      	movs	r3, #12
 802b550:	603b      	str	r3, [r7, #0]
 802b552:	4638      	mov	r0, r7
 802b554:	f000 f80e 	bl	802b574 <__malloc_unlock>
 802b558:	e797      	b.n	802b48a <_malloc_r+0x22>
 802b55a:	6025      	str	r5, [r4, #0]
 802b55c:	e7dc      	b.n	802b518 <_malloc_r+0xb0>
 802b55e:	605b      	str	r3, [r3, #4]
 802b560:	deff      	udf	#255	; 0xff
 802b562:	bf00      	nop
 802b564:	20002ba0 	.word	0x20002ba0

0802b568 <__malloc_lock>:
 802b568:	4801      	ldr	r0, [pc, #4]	; (802b570 <__malloc_lock+0x8>)
 802b56a:	f000 b9fc 	b.w	802b966 <__retarget_lock_acquire_recursive>
 802b56e:	bf00      	nop
 802b570:	20002ce9 	.word	0x20002ce9

0802b574 <__malloc_unlock>:
 802b574:	4801      	ldr	r0, [pc, #4]	; (802b57c <__malloc_unlock+0x8>)
 802b576:	f000 b9f7 	b.w	802b968 <__retarget_lock_release_recursive>
 802b57a:	bf00      	nop
 802b57c:	20002ce9 	.word	0x20002ce9

0802b580 <__cxa_atexit>:
 802b580:	b510      	push	{r4, lr}
 802b582:	4c05      	ldr	r4, [pc, #20]	; (802b598 <__cxa_atexit+0x18>)
 802b584:	4613      	mov	r3, r2
 802b586:	b12c      	cbz	r4, 802b594 <__cxa_atexit+0x14>
 802b588:	460a      	mov	r2, r1
 802b58a:	4601      	mov	r1, r0
 802b58c:	2002      	movs	r0, #2
 802b58e:	f000 f9fb 	bl	802b988 <__register_exitproc>
 802b592:	bd10      	pop	{r4, pc}
 802b594:	4620      	mov	r0, r4
 802b596:	e7fc      	b.n	802b592 <__cxa_atexit+0x12>
 802b598:	0802b989 	.word	0x0802b989

0802b59c <std>:
 802b59c:	2300      	movs	r3, #0
 802b59e:	b510      	push	{r4, lr}
 802b5a0:	4604      	mov	r4, r0
 802b5a2:	e9c0 3300 	strd	r3, r3, [r0]
 802b5a6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802b5aa:	6083      	str	r3, [r0, #8]
 802b5ac:	8181      	strh	r1, [r0, #12]
 802b5ae:	6643      	str	r3, [r0, #100]	; 0x64
 802b5b0:	81c2      	strh	r2, [r0, #14]
 802b5b2:	6183      	str	r3, [r0, #24]
 802b5b4:	4619      	mov	r1, r3
 802b5b6:	2208      	movs	r2, #8
 802b5b8:	305c      	adds	r0, #92	; 0x5c
 802b5ba:	f000 f906 	bl	802b7ca <memset>
 802b5be:	4b0d      	ldr	r3, [pc, #52]	; (802b5f4 <std+0x58>)
 802b5c0:	6263      	str	r3, [r4, #36]	; 0x24
 802b5c2:	4b0d      	ldr	r3, [pc, #52]	; (802b5f8 <std+0x5c>)
 802b5c4:	62a3      	str	r3, [r4, #40]	; 0x28
 802b5c6:	4b0d      	ldr	r3, [pc, #52]	; (802b5fc <std+0x60>)
 802b5c8:	62e3      	str	r3, [r4, #44]	; 0x2c
 802b5ca:	4b0d      	ldr	r3, [pc, #52]	; (802b600 <std+0x64>)
 802b5cc:	6323      	str	r3, [r4, #48]	; 0x30
 802b5ce:	4b0d      	ldr	r3, [pc, #52]	; (802b604 <std+0x68>)
 802b5d0:	6224      	str	r4, [r4, #32]
 802b5d2:	429c      	cmp	r4, r3
 802b5d4:	d006      	beq.n	802b5e4 <std+0x48>
 802b5d6:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802b5da:	4294      	cmp	r4, r2
 802b5dc:	d002      	beq.n	802b5e4 <std+0x48>
 802b5de:	33d0      	adds	r3, #208	; 0xd0
 802b5e0:	429c      	cmp	r4, r3
 802b5e2:	d105      	bne.n	802b5f0 <std+0x54>
 802b5e4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802b5e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b5ec:	f000 b9ba 	b.w	802b964 <__retarget_lock_init_recursive>
 802b5f0:	bd10      	pop	{r4, pc}
 802b5f2:	bf00      	nop
 802b5f4:	0802b745 	.word	0x0802b745
 802b5f8:	0802b767 	.word	0x0802b767
 802b5fc:	0802b79f 	.word	0x0802b79f
 802b600:	0802b7c3 	.word	0x0802b7c3
 802b604:	20002ba8 	.word	0x20002ba8

0802b608 <stdio_exit_handler>:
 802b608:	4a02      	ldr	r2, [pc, #8]	; (802b614 <stdio_exit_handler+0xc>)
 802b60a:	4903      	ldr	r1, [pc, #12]	; (802b618 <stdio_exit_handler+0x10>)
 802b60c:	4803      	ldr	r0, [pc, #12]	; (802b61c <stdio_exit_handler+0x14>)
 802b60e:	f000 b87b 	b.w	802b708 <_fwalk_sglue>
 802b612:	bf00      	nop
 802b614:	2000009c 	.word	0x2000009c
 802b618:	0802c191 	.word	0x0802c191
 802b61c:	200000a8 	.word	0x200000a8

0802b620 <cleanup_stdio>:
 802b620:	6841      	ldr	r1, [r0, #4]
 802b622:	4b0c      	ldr	r3, [pc, #48]	; (802b654 <cleanup_stdio+0x34>)
 802b624:	4299      	cmp	r1, r3
 802b626:	b510      	push	{r4, lr}
 802b628:	4604      	mov	r4, r0
 802b62a:	d001      	beq.n	802b630 <cleanup_stdio+0x10>
 802b62c:	f000 fdb0 	bl	802c190 <_fflush_r>
 802b630:	68a1      	ldr	r1, [r4, #8]
 802b632:	4b09      	ldr	r3, [pc, #36]	; (802b658 <cleanup_stdio+0x38>)
 802b634:	4299      	cmp	r1, r3
 802b636:	d002      	beq.n	802b63e <cleanup_stdio+0x1e>
 802b638:	4620      	mov	r0, r4
 802b63a:	f000 fda9 	bl	802c190 <_fflush_r>
 802b63e:	68e1      	ldr	r1, [r4, #12]
 802b640:	4b06      	ldr	r3, [pc, #24]	; (802b65c <cleanup_stdio+0x3c>)
 802b642:	4299      	cmp	r1, r3
 802b644:	d004      	beq.n	802b650 <cleanup_stdio+0x30>
 802b646:	4620      	mov	r0, r4
 802b648:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b64c:	f000 bda0 	b.w	802c190 <_fflush_r>
 802b650:	bd10      	pop	{r4, pc}
 802b652:	bf00      	nop
 802b654:	20002ba8 	.word	0x20002ba8
 802b658:	20002c10 	.word	0x20002c10
 802b65c:	20002c78 	.word	0x20002c78

0802b660 <global_stdio_init.part.0>:
 802b660:	b510      	push	{r4, lr}
 802b662:	4b0b      	ldr	r3, [pc, #44]	; (802b690 <global_stdio_init.part.0+0x30>)
 802b664:	4c0b      	ldr	r4, [pc, #44]	; (802b694 <global_stdio_init.part.0+0x34>)
 802b666:	4a0c      	ldr	r2, [pc, #48]	; (802b698 <global_stdio_init.part.0+0x38>)
 802b668:	601a      	str	r2, [r3, #0]
 802b66a:	4620      	mov	r0, r4
 802b66c:	2200      	movs	r2, #0
 802b66e:	2104      	movs	r1, #4
 802b670:	f7ff ff94 	bl	802b59c <std>
 802b674:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802b678:	2201      	movs	r2, #1
 802b67a:	2109      	movs	r1, #9
 802b67c:	f7ff ff8e 	bl	802b59c <std>
 802b680:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802b684:	2202      	movs	r2, #2
 802b686:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b68a:	2112      	movs	r1, #18
 802b68c:	f7ff bf86 	b.w	802b59c <std>
 802b690:	20002ce0 	.word	0x20002ce0
 802b694:	20002ba8 	.word	0x20002ba8
 802b698:	0802b609 	.word	0x0802b609

0802b69c <__sfp_lock_acquire>:
 802b69c:	4801      	ldr	r0, [pc, #4]	; (802b6a4 <__sfp_lock_acquire+0x8>)
 802b69e:	f000 b962 	b.w	802b966 <__retarget_lock_acquire_recursive>
 802b6a2:	bf00      	nop
 802b6a4:	20002cea 	.word	0x20002cea

0802b6a8 <__sfp_lock_release>:
 802b6a8:	4801      	ldr	r0, [pc, #4]	; (802b6b0 <__sfp_lock_release+0x8>)
 802b6aa:	f000 b95d 	b.w	802b968 <__retarget_lock_release_recursive>
 802b6ae:	bf00      	nop
 802b6b0:	20002cea 	.word	0x20002cea

0802b6b4 <__sinit>:
 802b6b4:	b510      	push	{r4, lr}
 802b6b6:	4604      	mov	r4, r0
 802b6b8:	f7ff fff0 	bl	802b69c <__sfp_lock_acquire>
 802b6bc:	6a23      	ldr	r3, [r4, #32]
 802b6be:	b11b      	cbz	r3, 802b6c8 <__sinit+0x14>
 802b6c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b6c4:	f7ff bff0 	b.w	802b6a8 <__sfp_lock_release>
 802b6c8:	4b04      	ldr	r3, [pc, #16]	; (802b6dc <__sinit+0x28>)
 802b6ca:	6223      	str	r3, [r4, #32]
 802b6cc:	4b04      	ldr	r3, [pc, #16]	; (802b6e0 <__sinit+0x2c>)
 802b6ce:	681b      	ldr	r3, [r3, #0]
 802b6d0:	2b00      	cmp	r3, #0
 802b6d2:	d1f5      	bne.n	802b6c0 <__sinit+0xc>
 802b6d4:	f7ff ffc4 	bl	802b660 <global_stdio_init.part.0>
 802b6d8:	e7f2      	b.n	802b6c0 <__sinit+0xc>
 802b6da:	bf00      	nop
 802b6dc:	0802b621 	.word	0x0802b621
 802b6e0:	20002ce0 	.word	0x20002ce0

0802b6e4 <fiprintf>:
 802b6e4:	b40e      	push	{r1, r2, r3}
 802b6e6:	b503      	push	{r0, r1, lr}
 802b6e8:	4601      	mov	r1, r0
 802b6ea:	ab03      	add	r3, sp, #12
 802b6ec:	4805      	ldr	r0, [pc, #20]	; (802b704 <fiprintf+0x20>)
 802b6ee:	f853 2b04 	ldr.w	r2, [r3], #4
 802b6f2:	6800      	ldr	r0, [r0, #0]
 802b6f4:	9301      	str	r3, [sp, #4]
 802b6f6:	f000 fa1b 	bl	802bb30 <_vfiprintf_r>
 802b6fa:	b002      	add	sp, #8
 802b6fc:	f85d eb04 	ldr.w	lr, [sp], #4
 802b700:	b003      	add	sp, #12
 802b702:	4770      	bx	lr
 802b704:	200000f4 	.word	0x200000f4

0802b708 <_fwalk_sglue>:
 802b708:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b70c:	4607      	mov	r7, r0
 802b70e:	4688      	mov	r8, r1
 802b710:	4614      	mov	r4, r2
 802b712:	2600      	movs	r6, #0
 802b714:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802b718:	f1b9 0901 	subs.w	r9, r9, #1
 802b71c:	d505      	bpl.n	802b72a <_fwalk_sglue+0x22>
 802b71e:	6824      	ldr	r4, [r4, #0]
 802b720:	2c00      	cmp	r4, #0
 802b722:	d1f7      	bne.n	802b714 <_fwalk_sglue+0xc>
 802b724:	4630      	mov	r0, r6
 802b726:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b72a:	89ab      	ldrh	r3, [r5, #12]
 802b72c:	2b01      	cmp	r3, #1
 802b72e:	d907      	bls.n	802b740 <_fwalk_sglue+0x38>
 802b730:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802b734:	3301      	adds	r3, #1
 802b736:	d003      	beq.n	802b740 <_fwalk_sglue+0x38>
 802b738:	4629      	mov	r1, r5
 802b73a:	4638      	mov	r0, r7
 802b73c:	47c0      	blx	r8
 802b73e:	4306      	orrs	r6, r0
 802b740:	3568      	adds	r5, #104	; 0x68
 802b742:	e7e9      	b.n	802b718 <_fwalk_sglue+0x10>

0802b744 <__sread>:
 802b744:	b510      	push	{r4, lr}
 802b746:	460c      	mov	r4, r1
 802b748:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b74c:	f000 f898 	bl	802b880 <_read_r>
 802b750:	2800      	cmp	r0, #0
 802b752:	bfab      	itete	ge
 802b754:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802b756:	89a3      	ldrhlt	r3, [r4, #12]
 802b758:	181b      	addge	r3, r3, r0
 802b75a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802b75e:	bfac      	ite	ge
 802b760:	6563      	strge	r3, [r4, #84]	; 0x54
 802b762:	81a3      	strhlt	r3, [r4, #12]
 802b764:	bd10      	pop	{r4, pc}

0802b766 <__swrite>:
 802b766:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b76a:	461f      	mov	r7, r3
 802b76c:	898b      	ldrh	r3, [r1, #12]
 802b76e:	05db      	lsls	r3, r3, #23
 802b770:	4605      	mov	r5, r0
 802b772:	460c      	mov	r4, r1
 802b774:	4616      	mov	r6, r2
 802b776:	d505      	bpl.n	802b784 <__swrite+0x1e>
 802b778:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b77c:	2302      	movs	r3, #2
 802b77e:	2200      	movs	r2, #0
 802b780:	f000 f86c 	bl	802b85c <_lseek_r>
 802b784:	89a3      	ldrh	r3, [r4, #12]
 802b786:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802b78a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802b78e:	81a3      	strh	r3, [r4, #12]
 802b790:	4632      	mov	r2, r6
 802b792:	463b      	mov	r3, r7
 802b794:	4628      	mov	r0, r5
 802b796:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802b79a:	f000 b8a7 	b.w	802b8ec <_write_r>

0802b79e <__sseek>:
 802b79e:	b510      	push	{r4, lr}
 802b7a0:	460c      	mov	r4, r1
 802b7a2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b7a6:	f000 f859 	bl	802b85c <_lseek_r>
 802b7aa:	1c43      	adds	r3, r0, #1
 802b7ac:	89a3      	ldrh	r3, [r4, #12]
 802b7ae:	bf15      	itete	ne
 802b7b0:	6560      	strne	r0, [r4, #84]	; 0x54
 802b7b2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802b7b6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802b7ba:	81a3      	strheq	r3, [r4, #12]
 802b7bc:	bf18      	it	ne
 802b7be:	81a3      	strhne	r3, [r4, #12]
 802b7c0:	bd10      	pop	{r4, pc}

0802b7c2 <__sclose>:
 802b7c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b7c6:	f000 b839 	b.w	802b83c <_close_r>

0802b7ca <memset>:
 802b7ca:	4402      	add	r2, r0
 802b7cc:	4603      	mov	r3, r0
 802b7ce:	4293      	cmp	r3, r2
 802b7d0:	d100      	bne.n	802b7d4 <memset+0xa>
 802b7d2:	4770      	bx	lr
 802b7d4:	f803 1b01 	strb.w	r1, [r3], #1
 802b7d8:	e7f9      	b.n	802b7ce <memset+0x4>

0802b7da <_raise_r>:
 802b7da:	291f      	cmp	r1, #31
 802b7dc:	b538      	push	{r3, r4, r5, lr}
 802b7de:	4604      	mov	r4, r0
 802b7e0:	460d      	mov	r5, r1
 802b7e2:	d904      	bls.n	802b7ee <_raise_r+0x14>
 802b7e4:	2316      	movs	r3, #22
 802b7e6:	6003      	str	r3, [r0, #0]
 802b7e8:	f04f 30ff 	mov.w	r0, #4294967295
 802b7ec:	bd38      	pop	{r3, r4, r5, pc}
 802b7ee:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802b7f0:	b112      	cbz	r2, 802b7f8 <_raise_r+0x1e>
 802b7f2:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802b7f6:	b94b      	cbnz	r3, 802b80c <_raise_r+0x32>
 802b7f8:	4620      	mov	r0, r4
 802b7fa:	f000 f865 	bl	802b8c8 <_getpid_r>
 802b7fe:	462a      	mov	r2, r5
 802b800:	4601      	mov	r1, r0
 802b802:	4620      	mov	r0, r4
 802b804:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802b808:	f000 b84c 	b.w	802b8a4 <_kill_r>
 802b80c:	2b01      	cmp	r3, #1
 802b80e:	d00a      	beq.n	802b826 <_raise_r+0x4c>
 802b810:	1c59      	adds	r1, r3, #1
 802b812:	d103      	bne.n	802b81c <_raise_r+0x42>
 802b814:	2316      	movs	r3, #22
 802b816:	6003      	str	r3, [r0, #0]
 802b818:	2001      	movs	r0, #1
 802b81a:	e7e7      	b.n	802b7ec <_raise_r+0x12>
 802b81c:	2400      	movs	r4, #0
 802b81e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802b822:	4628      	mov	r0, r5
 802b824:	4798      	blx	r3
 802b826:	2000      	movs	r0, #0
 802b828:	e7e0      	b.n	802b7ec <_raise_r+0x12>
	...

0802b82c <raise>:
 802b82c:	4b02      	ldr	r3, [pc, #8]	; (802b838 <raise+0xc>)
 802b82e:	4601      	mov	r1, r0
 802b830:	6818      	ldr	r0, [r3, #0]
 802b832:	f7ff bfd2 	b.w	802b7da <_raise_r>
 802b836:	bf00      	nop
 802b838:	200000f4 	.word	0x200000f4

0802b83c <_close_r>:
 802b83c:	b538      	push	{r3, r4, r5, lr}
 802b83e:	4d06      	ldr	r5, [pc, #24]	; (802b858 <_close_r+0x1c>)
 802b840:	2300      	movs	r3, #0
 802b842:	4604      	mov	r4, r0
 802b844:	4608      	mov	r0, r1
 802b846:	602b      	str	r3, [r5, #0]
 802b848:	f7d7 fd6f 	bl	800332a <_close>
 802b84c:	1c43      	adds	r3, r0, #1
 802b84e:	d102      	bne.n	802b856 <_close_r+0x1a>
 802b850:	682b      	ldr	r3, [r5, #0]
 802b852:	b103      	cbz	r3, 802b856 <_close_r+0x1a>
 802b854:	6023      	str	r3, [r4, #0]
 802b856:	bd38      	pop	{r3, r4, r5, pc}
 802b858:	20002ce4 	.word	0x20002ce4

0802b85c <_lseek_r>:
 802b85c:	b538      	push	{r3, r4, r5, lr}
 802b85e:	4d07      	ldr	r5, [pc, #28]	; (802b87c <_lseek_r+0x20>)
 802b860:	4604      	mov	r4, r0
 802b862:	4608      	mov	r0, r1
 802b864:	4611      	mov	r1, r2
 802b866:	2200      	movs	r2, #0
 802b868:	602a      	str	r2, [r5, #0]
 802b86a:	461a      	mov	r2, r3
 802b86c:	f7d7 fd84 	bl	8003378 <_lseek>
 802b870:	1c43      	adds	r3, r0, #1
 802b872:	d102      	bne.n	802b87a <_lseek_r+0x1e>
 802b874:	682b      	ldr	r3, [r5, #0]
 802b876:	b103      	cbz	r3, 802b87a <_lseek_r+0x1e>
 802b878:	6023      	str	r3, [r4, #0]
 802b87a:	bd38      	pop	{r3, r4, r5, pc}
 802b87c:	20002ce4 	.word	0x20002ce4

0802b880 <_read_r>:
 802b880:	b538      	push	{r3, r4, r5, lr}
 802b882:	4d07      	ldr	r5, [pc, #28]	; (802b8a0 <_read_r+0x20>)
 802b884:	4604      	mov	r4, r0
 802b886:	4608      	mov	r0, r1
 802b888:	4611      	mov	r1, r2
 802b88a:	2200      	movs	r2, #0
 802b88c:	602a      	str	r2, [r5, #0]
 802b88e:	461a      	mov	r2, r3
 802b890:	f7d7 fd12 	bl	80032b8 <_read>
 802b894:	1c43      	adds	r3, r0, #1
 802b896:	d102      	bne.n	802b89e <_read_r+0x1e>
 802b898:	682b      	ldr	r3, [r5, #0]
 802b89a:	b103      	cbz	r3, 802b89e <_read_r+0x1e>
 802b89c:	6023      	str	r3, [r4, #0]
 802b89e:	bd38      	pop	{r3, r4, r5, pc}
 802b8a0:	20002ce4 	.word	0x20002ce4

0802b8a4 <_kill_r>:
 802b8a4:	b538      	push	{r3, r4, r5, lr}
 802b8a6:	4d07      	ldr	r5, [pc, #28]	; (802b8c4 <_kill_r+0x20>)
 802b8a8:	2300      	movs	r3, #0
 802b8aa:	4604      	mov	r4, r0
 802b8ac:	4608      	mov	r0, r1
 802b8ae:	4611      	mov	r1, r2
 802b8b0:	602b      	str	r3, [r5, #0]
 802b8b2:	f7d7 fce7 	bl	8003284 <_kill>
 802b8b6:	1c43      	adds	r3, r0, #1
 802b8b8:	d102      	bne.n	802b8c0 <_kill_r+0x1c>
 802b8ba:	682b      	ldr	r3, [r5, #0]
 802b8bc:	b103      	cbz	r3, 802b8c0 <_kill_r+0x1c>
 802b8be:	6023      	str	r3, [r4, #0]
 802b8c0:	bd38      	pop	{r3, r4, r5, pc}
 802b8c2:	bf00      	nop
 802b8c4:	20002ce4 	.word	0x20002ce4

0802b8c8 <_getpid_r>:
 802b8c8:	f7d7 bcd4 	b.w	8003274 <_getpid>

0802b8cc <_sbrk_r>:
 802b8cc:	b538      	push	{r3, r4, r5, lr}
 802b8ce:	4d06      	ldr	r5, [pc, #24]	; (802b8e8 <_sbrk_r+0x1c>)
 802b8d0:	2300      	movs	r3, #0
 802b8d2:	4604      	mov	r4, r0
 802b8d4:	4608      	mov	r0, r1
 802b8d6:	602b      	str	r3, [r5, #0]
 802b8d8:	f7d7 fd5c 	bl	8003394 <_sbrk>
 802b8dc:	1c43      	adds	r3, r0, #1
 802b8de:	d102      	bne.n	802b8e6 <_sbrk_r+0x1a>
 802b8e0:	682b      	ldr	r3, [r5, #0]
 802b8e2:	b103      	cbz	r3, 802b8e6 <_sbrk_r+0x1a>
 802b8e4:	6023      	str	r3, [r4, #0]
 802b8e6:	bd38      	pop	{r3, r4, r5, pc}
 802b8e8:	20002ce4 	.word	0x20002ce4

0802b8ec <_write_r>:
 802b8ec:	b538      	push	{r3, r4, r5, lr}
 802b8ee:	4d07      	ldr	r5, [pc, #28]	; (802b90c <_write_r+0x20>)
 802b8f0:	4604      	mov	r4, r0
 802b8f2:	4608      	mov	r0, r1
 802b8f4:	4611      	mov	r1, r2
 802b8f6:	2200      	movs	r2, #0
 802b8f8:	602a      	str	r2, [r5, #0]
 802b8fa:	461a      	mov	r2, r3
 802b8fc:	f7d7 fcf9 	bl	80032f2 <_write>
 802b900:	1c43      	adds	r3, r0, #1
 802b902:	d102      	bne.n	802b90a <_write_r+0x1e>
 802b904:	682b      	ldr	r3, [r5, #0]
 802b906:	b103      	cbz	r3, 802b90a <_write_r+0x1e>
 802b908:	6023      	str	r3, [r4, #0]
 802b90a:	bd38      	pop	{r3, r4, r5, pc}
 802b90c:	20002ce4 	.word	0x20002ce4

0802b910 <__errno>:
 802b910:	4b01      	ldr	r3, [pc, #4]	; (802b918 <__errno+0x8>)
 802b912:	6818      	ldr	r0, [r3, #0]
 802b914:	4770      	bx	lr
 802b916:	bf00      	nop
 802b918:	200000f4 	.word	0x200000f4

0802b91c <__libc_init_array>:
 802b91c:	b570      	push	{r4, r5, r6, lr}
 802b91e:	4d0d      	ldr	r5, [pc, #52]	; (802b954 <__libc_init_array+0x38>)
 802b920:	4c0d      	ldr	r4, [pc, #52]	; (802b958 <__libc_init_array+0x3c>)
 802b922:	1b64      	subs	r4, r4, r5
 802b924:	10a4      	asrs	r4, r4, #2
 802b926:	2600      	movs	r6, #0
 802b928:	42a6      	cmp	r6, r4
 802b92a:	d109      	bne.n	802b940 <__libc_init_array+0x24>
 802b92c:	4d0b      	ldr	r5, [pc, #44]	; (802b95c <__libc_init_array+0x40>)
 802b92e:	4c0c      	ldr	r4, [pc, #48]	; (802b960 <__libc_init_array+0x44>)
 802b930:	f000 fd70 	bl	802c414 <_init>
 802b934:	1b64      	subs	r4, r4, r5
 802b936:	10a4      	asrs	r4, r4, #2
 802b938:	2600      	movs	r6, #0
 802b93a:	42a6      	cmp	r6, r4
 802b93c:	d105      	bne.n	802b94a <__libc_init_array+0x2e>
 802b93e:	bd70      	pop	{r4, r5, r6, pc}
 802b940:	f855 3b04 	ldr.w	r3, [r5], #4
 802b944:	4798      	blx	r3
 802b946:	3601      	adds	r6, #1
 802b948:	e7ee      	b.n	802b928 <__libc_init_array+0xc>
 802b94a:	f855 3b04 	ldr.w	r3, [r5], #4
 802b94e:	4798      	blx	r3
 802b950:	3601      	adds	r6, #1
 802b952:	e7f2      	b.n	802b93a <__libc_init_array+0x1e>
 802b954:	0804cefc 	.word	0x0804cefc
 802b958:	0804cefc 	.word	0x0804cefc
 802b95c:	0804cefc 	.word	0x0804cefc
 802b960:	0804cf14 	.word	0x0804cf14

0802b964 <__retarget_lock_init_recursive>:
 802b964:	4770      	bx	lr

0802b966 <__retarget_lock_acquire_recursive>:
 802b966:	4770      	bx	lr

0802b968 <__retarget_lock_release_recursive>:
 802b968:	4770      	bx	lr

0802b96a <memcpy>:
 802b96a:	440a      	add	r2, r1
 802b96c:	4291      	cmp	r1, r2
 802b96e:	f100 33ff 	add.w	r3, r0, #4294967295
 802b972:	d100      	bne.n	802b976 <memcpy+0xc>
 802b974:	4770      	bx	lr
 802b976:	b510      	push	{r4, lr}
 802b978:	f811 4b01 	ldrb.w	r4, [r1], #1
 802b97c:	f803 4f01 	strb.w	r4, [r3, #1]!
 802b980:	4291      	cmp	r1, r2
 802b982:	d1f9      	bne.n	802b978 <memcpy+0xe>
 802b984:	bd10      	pop	{r4, pc}
	...

0802b988 <__register_exitproc>:
 802b988:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b98c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802ba40 <__register_exitproc+0xb8>
 802b990:	4606      	mov	r6, r0
 802b992:	f8d8 0000 	ldr.w	r0, [r8]
 802b996:	461f      	mov	r7, r3
 802b998:	460d      	mov	r5, r1
 802b99a:	4691      	mov	r9, r2
 802b99c:	f7ff ffe3 	bl	802b966 <__retarget_lock_acquire_recursive>
 802b9a0:	4b23      	ldr	r3, [pc, #140]	; (802ba30 <__register_exitproc+0xa8>)
 802b9a2:	681c      	ldr	r4, [r3, #0]
 802b9a4:	b934      	cbnz	r4, 802b9b4 <__register_exitproc+0x2c>
 802b9a6:	4c23      	ldr	r4, [pc, #140]	; (802ba34 <__register_exitproc+0xac>)
 802b9a8:	601c      	str	r4, [r3, #0]
 802b9aa:	4b23      	ldr	r3, [pc, #140]	; (802ba38 <__register_exitproc+0xb0>)
 802b9ac:	b113      	cbz	r3, 802b9b4 <__register_exitproc+0x2c>
 802b9ae:	681b      	ldr	r3, [r3, #0]
 802b9b0:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802b9b4:	6863      	ldr	r3, [r4, #4]
 802b9b6:	2b1f      	cmp	r3, #31
 802b9b8:	dd07      	ble.n	802b9ca <__register_exitproc+0x42>
 802b9ba:	f8d8 0000 	ldr.w	r0, [r8]
 802b9be:	f7ff ffd3 	bl	802b968 <__retarget_lock_release_recursive>
 802b9c2:	f04f 30ff 	mov.w	r0, #4294967295
 802b9c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b9ca:	b32e      	cbz	r6, 802ba18 <__register_exitproc+0x90>
 802b9cc:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b9d0:	b968      	cbnz	r0, 802b9ee <__register_exitproc+0x66>
 802b9d2:	4b1a      	ldr	r3, [pc, #104]	; (802ba3c <__register_exitproc+0xb4>)
 802b9d4:	2b00      	cmp	r3, #0
 802b9d6:	d0f0      	beq.n	802b9ba <__register_exitproc+0x32>
 802b9d8:	f44f 7084 	mov.w	r0, #264	; 0x108
 802b9dc:	f7ff fd14 	bl	802b408 <malloc>
 802b9e0:	2800      	cmp	r0, #0
 802b9e2:	d0ea      	beq.n	802b9ba <__register_exitproc+0x32>
 802b9e4:	2300      	movs	r3, #0
 802b9e6:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802b9ea:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802b9ee:	6863      	ldr	r3, [r4, #4]
 802b9f0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802b9f4:	2201      	movs	r2, #1
 802b9f6:	409a      	lsls	r2, r3
 802b9f8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802b9fc:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802ba00:	4313      	orrs	r3, r2
 802ba02:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802ba06:	2e02      	cmp	r6, #2
 802ba08:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802ba0c:	bf02      	ittt	eq
 802ba0e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802ba12:	4313      	orreq	r3, r2
 802ba14:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802ba18:	6863      	ldr	r3, [r4, #4]
 802ba1a:	f8d8 0000 	ldr.w	r0, [r8]
 802ba1e:	1c5a      	adds	r2, r3, #1
 802ba20:	3302      	adds	r3, #2
 802ba22:	6062      	str	r2, [r4, #4]
 802ba24:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802ba28:	f7ff ff9e 	bl	802b968 <__retarget_lock_release_recursive>
 802ba2c:	2000      	movs	r0, #0
 802ba2e:	e7ca      	b.n	802b9c6 <__register_exitproc+0x3e>
 802ba30:	20002d78 	.word	0x20002d78
 802ba34:	20002cec 	.word	0x20002cec
 802ba38:	08030264 	.word	0x08030264
 802ba3c:	0802b409 	.word	0x0802b409
 802ba40:	200000f8 	.word	0x200000f8

0802ba44 <_free_r>:
 802ba44:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802ba46:	2900      	cmp	r1, #0
 802ba48:	d044      	beq.n	802bad4 <_free_r+0x90>
 802ba4a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802ba4e:	9001      	str	r0, [sp, #4]
 802ba50:	2b00      	cmp	r3, #0
 802ba52:	f1a1 0404 	sub.w	r4, r1, #4
 802ba56:	bfb8      	it	lt
 802ba58:	18e4      	addlt	r4, r4, r3
 802ba5a:	f7ff fd85 	bl	802b568 <__malloc_lock>
 802ba5e:	4a1e      	ldr	r2, [pc, #120]	; (802bad8 <_free_r+0x94>)
 802ba60:	9801      	ldr	r0, [sp, #4]
 802ba62:	6813      	ldr	r3, [r2, #0]
 802ba64:	b933      	cbnz	r3, 802ba74 <_free_r+0x30>
 802ba66:	6063      	str	r3, [r4, #4]
 802ba68:	6014      	str	r4, [r2, #0]
 802ba6a:	b003      	add	sp, #12
 802ba6c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802ba70:	f7ff bd80 	b.w	802b574 <__malloc_unlock>
 802ba74:	42a3      	cmp	r3, r4
 802ba76:	d908      	bls.n	802ba8a <_free_r+0x46>
 802ba78:	6825      	ldr	r5, [r4, #0]
 802ba7a:	1961      	adds	r1, r4, r5
 802ba7c:	428b      	cmp	r3, r1
 802ba7e:	bf01      	itttt	eq
 802ba80:	6819      	ldreq	r1, [r3, #0]
 802ba82:	685b      	ldreq	r3, [r3, #4]
 802ba84:	1949      	addeq	r1, r1, r5
 802ba86:	6021      	streq	r1, [r4, #0]
 802ba88:	e7ed      	b.n	802ba66 <_free_r+0x22>
 802ba8a:	461a      	mov	r2, r3
 802ba8c:	685b      	ldr	r3, [r3, #4]
 802ba8e:	b10b      	cbz	r3, 802ba94 <_free_r+0x50>
 802ba90:	42a3      	cmp	r3, r4
 802ba92:	d9fa      	bls.n	802ba8a <_free_r+0x46>
 802ba94:	6811      	ldr	r1, [r2, #0]
 802ba96:	1855      	adds	r5, r2, r1
 802ba98:	42a5      	cmp	r5, r4
 802ba9a:	d10b      	bne.n	802bab4 <_free_r+0x70>
 802ba9c:	6824      	ldr	r4, [r4, #0]
 802ba9e:	4421      	add	r1, r4
 802baa0:	1854      	adds	r4, r2, r1
 802baa2:	42a3      	cmp	r3, r4
 802baa4:	6011      	str	r1, [r2, #0]
 802baa6:	d1e0      	bne.n	802ba6a <_free_r+0x26>
 802baa8:	681c      	ldr	r4, [r3, #0]
 802baaa:	685b      	ldr	r3, [r3, #4]
 802baac:	6053      	str	r3, [r2, #4]
 802baae:	440c      	add	r4, r1
 802bab0:	6014      	str	r4, [r2, #0]
 802bab2:	e7da      	b.n	802ba6a <_free_r+0x26>
 802bab4:	d902      	bls.n	802babc <_free_r+0x78>
 802bab6:	230c      	movs	r3, #12
 802bab8:	6003      	str	r3, [r0, #0]
 802baba:	e7d6      	b.n	802ba6a <_free_r+0x26>
 802babc:	6825      	ldr	r5, [r4, #0]
 802babe:	1961      	adds	r1, r4, r5
 802bac0:	428b      	cmp	r3, r1
 802bac2:	bf04      	itt	eq
 802bac4:	6819      	ldreq	r1, [r3, #0]
 802bac6:	685b      	ldreq	r3, [r3, #4]
 802bac8:	6063      	str	r3, [r4, #4]
 802baca:	bf04      	itt	eq
 802bacc:	1949      	addeq	r1, r1, r5
 802bace:	6021      	streq	r1, [r4, #0]
 802bad0:	6054      	str	r4, [r2, #4]
 802bad2:	e7ca      	b.n	802ba6a <_free_r+0x26>
 802bad4:	b003      	add	sp, #12
 802bad6:	bd30      	pop	{r4, r5, pc}
 802bad8:	20002ba0 	.word	0x20002ba0

0802badc <__sfputc_r>:
 802badc:	6893      	ldr	r3, [r2, #8]
 802bade:	3b01      	subs	r3, #1
 802bae0:	2b00      	cmp	r3, #0
 802bae2:	b410      	push	{r4}
 802bae4:	6093      	str	r3, [r2, #8]
 802bae6:	da08      	bge.n	802bafa <__sfputc_r+0x1e>
 802bae8:	6994      	ldr	r4, [r2, #24]
 802baea:	42a3      	cmp	r3, r4
 802baec:	db01      	blt.n	802baf2 <__sfputc_r+0x16>
 802baee:	290a      	cmp	r1, #10
 802baf0:	d103      	bne.n	802bafa <__sfputc_r+0x1e>
 802baf2:	f85d 4b04 	ldr.w	r4, [sp], #4
 802baf6:	f000 bb73 	b.w	802c1e0 <__swbuf_r>
 802bafa:	6813      	ldr	r3, [r2, #0]
 802bafc:	1c58      	adds	r0, r3, #1
 802bafe:	6010      	str	r0, [r2, #0]
 802bb00:	7019      	strb	r1, [r3, #0]
 802bb02:	4608      	mov	r0, r1
 802bb04:	f85d 4b04 	ldr.w	r4, [sp], #4
 802bb08:	4770      	bx	lr

0802bb0a <__sfputs_r>:
 802bb0a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bb0c:	4606      	mov	r6, r0
 802bb0e:	460f      	mov	r7, r1
 802bb10:	4614      	mov	r4, r2
 802bb12:	18d5      	adds	r5, r2, r3
 802bb14:	42ac      	cmp	r4, r5
 802bb16:	d101      	bne.n	802bb1c <__sfputs_r+0x12>
 802bb18:	2000      	movs	r0, #0
 802bb1a:	e007      	b.n	802bb2c <__sfputs_r+0x22>
 802bb1c:	f814 1b01 	ldrb.w	r1, [r4], #1
 802bb20:	463a      	mov	r2, r7
 802bb22:	4630      	mov	r0, r6
 802bb24:	f7ff ffda 	bl	802badc <__sfputc_r>
 802bb28:	1c43      	adds	r3, r0, #1
 802bb2a:	d1f3      	bne.n	802bb14 <__sfputs_r+0xa>
 802bb2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802bb30 <_vfiprintf_r>:
 802bb30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802bb34:	460d      	mov	r5, r1
 802bb36:	b09d      	sub	sp, #116	; 0x74
 802bb38:	4614      	mov	r4, r2
 802bb3a:	4698      	mov	r8, r3
 802bb3c:	4606      	mov	r6, r0
 802bb3e:	b118      	cbz	r0, 802bb48 <_vfiprintf_r+0x18>
 802bb40:	6a03      	ldr	r3, [r0, #32]
 802bb42:	b90b      	cbnz	r3, 802bb48 <_vfiprintf_r+0x18>
 802bb44:	f7ff fdb6 	bl	802b6b4 <__sinit>
 802bb48:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802bb4a:	07d9      	lsls	r1, r3, #31
 802bb4c:	d405      	bmi.n	802bb5a <_vfiprintf_r+0x2a>
 802bb4e:	89ab      	ldrh	r3, [r5, #12]
 802bb50:	059a      	lsls	r2, r3, #22
 802bb52:	d402      	bmi.n	802bb5a <_vfiprintf_r+0x2a>
 802bb54:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802bb56:	f7ff ff06 	bl	802b966 <__retarget_lock_acquire_recursive>
 802bb5a:	89ab      	ldrh	r3, [r5, #12]
 802bb5c:	071b      	lsls	r3, r3, #28
 802bb5e:	d501      	bpl.n	802bb64 <_vfiprintf_r+0x34>
 802bb60:	692b      	ldr	r3, [r5, #16]
 802bb62:	b99b      	cbnz	r3, 802bb8c <_vfiprintf_r+0x5c>
 802bb64:	4629      	mov	r1, r5
 802bb66:	4630      	mov	r0, r6
 802bb68:	f000 fb78 	bl	802c25c <__swsetup_r>
 802bb6c:	b170      	cbz	r0, 802bb8c <_vfiprintf_r+0x5c>
 802bb6e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802bb70:	07dc      	lsls	r4, r3, #31
 802bb72:	d504      	bpl.n	802bb7e <_vfiprintf_r+0x4e>
 802bb74:	f04f 30ff 	mov.w	r0, #4294967295
 802bb78:	b01d      	add	sp, #116	; 0x74
 802bb7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802bb7e:	89ab      	ldrh	r3, [r5, #12]
 802bb80:	0598      	lsls	r0, r3, #22
 802bb82:	d4f7      	bmi.n	802bb74 <_vfiprintf_r+0x44>
 802bb84:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802bb86:	f7ff feef 	bl	802b968 <__retarget_lock_release_recursive>
 802bb8a:	e7f3      	b.n	802bb74 <_vfiprintf_r+0x44>
 802bb8c:	2300      	movs	r3, #0
 802bb8e:	9309      	str	r3, [sp, #36]	; 0x24
 802bb90:	2320      	movs	r3, #32
 802bb92:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802bb96:	f8cd 800c 	str.w	r8, [sp, #12]
 802bb9a:	2330      	movs	r3, #48	; 0x30
 802bb9c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802bd50 <_vfiprintf_r+0x220>
 802bba0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802bba4:	f04f 0901 	mov.w	r9, #1
 802bba8:	4623      	mov	r3, r4
 802bbaa:	469a      	mov	sl, r3
 802bbac:	f813 2b01 	ldrb.w	r2, [r3], #1
 802bbb0:	b10a      	cbz	r2, 802bbb6 <_vfiprintf_r+0x86>
 802bbb2:	2a25      	cmp	r2, #37	; 0x25
 802bbb4:	d1f9      	bne.n	802bbaa <_vfiprintf_r+0x7a>
 802bbb6:	ebba 0b04 	subs.w	fp, sl, r4
 802bbba:	d00b      	beq.n	802bbd4 <_vfiprintf_r+0xa4>
 802bbbc:	465b      	mov	r3, fp
 802bbbe:	4622      	mov	r2, r4
 802bbc0:	4629      	mov	r1, r5
 802bbc2:	4630      	mov	r0, r6
 802bbc4:	f7ff ffa1 	bl	802bb0a <__sfputs_r>
 802bbc8:	3001      	adds	r0, #1
 802bbca:	f000 80a9 	beq.w	802bd20 <_vfiprintf_r+0x1f0>
 802bbce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802bbd0:	445a      	add	r2, fp
 802bbd2:	9209      	str	r2, [sp, #36]	; 0x24
 802bbd4:	f89a 3000 	ldrb.w	r3, [sl]
 802bbd8:	2b00      	cmp	r3, #0
 802bbda:	f000 80a1 	beq.w	802bd20 <_vfiprintf_r+0x1f0>
 802bbde:	2300      	movs	r3, #0
 802bbe0:	f04f 32ff 	mov.w	r2, #4294967295
 802bbe4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802bbe8:	f10a 0a01 	add.w	sl, sl, #1
 802bbec:	9304      	str	r3, [sp, #16]
 802bbee:	9307      	str	r3, [sp, #28]
 802bbf0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802bbf4:	931a      	str	r3, [sp, #104]	; 0x68
 802bbf6:	4654      	mov	r4, sl
 802bbf8:	2205      	movs	r2, #5
 802bbfa:	f814 1b01 	ldrb.w	r1, [r4], #1
 802bbfe:	4854      	ldr	r0, [pc, #336]	; (802bd50 <_vfiprintf_r+0x220>)
 802bc00:	f7d4 faee 	bl	80001e0 <memchr>
 802bc04:	9a04      	ldr	r2, [sp, #16]
 802bc06:	b9d8      	cbnz	r0, 802bc40 <_vfiprintf_r+0x110>
 802bc08:	06d1      	lsls	r1, r2, #27
 802bc0a:	bf44      	itt	mi
 802bc0c:	2320      	movmi	r3, #32
 802bc0e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802bc12:	0713      	lsls	r3, r2, #28
 802bc14:	bf44      	itt	mi
 802bc16:	232b      	movmi	r3, #43	; 0x2b
 802bc18:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802bc1c:	f89a 3000 	ldrb.w	r3, [sl]
 802bc20:	2b2a      	cmp	r3, #42	; 0x2a
 802bc22:	d015      	beq.n	802bc50 <_vfiprintf_r+0x120>
 802bc24:	9a07      	ldr	r2, [sp, #28]
 802bc26:	4654      	mov	r4, sl
 802bc28:	2000      	movs	r0, #0
 802bc2a:	f04f 0c0a 	mov.w	ip, #10
 802bc2e:	4621      	mov	r1, r4
 802bc30:	f811 3b01 	ldrb.w	r3, [r1], #1
 802bc34:	3b30      	subs	r3, #48	; 0x30
 802bc36:	2b09      	cmp	r3, #9
 802bc38:	d94d      	bls.n	802bcd6 <_vfiprintf_r+0x1a6>
 802bc3a:	b1b0      	cbz	r0, 802bc6a <_vfiprintf_r+0x13a>
 802bc3c:	9207      	str	r2, [sp, #28]
 802bc3e:	e014      	b.n	802bc6a <_vfiprintf_r+0x13a>
 802bc40:	eba0 0308 	sub.w	r3, r0, r8
 802bc44:	fa09 f303 	lsl.w	r3, r9, r3
 802bc48:	4313      	orrs	r3, r2
 802bc4a:	9304      	str	r3, [sp, #16]
 802bc4c:	46a2      	mov	sl, r4
 802bc4e:	e7d2      	b.n	802bbf6 <_vfiprintf_r+0xc6>
 802bc50:	9b03      	ldr	r3, [sp, #12]
 802bc52:	1d19      	adds	r1, r3, #4
 802bc54:	681b      	ldr	r3, [r3, #0]
 802bc56:	9103      	str	r1, [sp, #12]
 802bc58:	2b00      	cmp	r3, #0
 802bc5a:	bfbb      	ittet	lt
 802bc5c:	425b      	neglt	r3, r3
 802bc5e:	f042 0202 	orrlt.w	r2, r2, #2
 802bc62:	9307      	strge	r3, [sp, #28]
 802bc64:	9307      	strlt	r3, [sp, #28]
 802bc66:	bfb8      	it	lt
 802bc68:	9204      	strlt	r2, [sp, #16]
 802bc6a:	7823      	ldrb	r3, [r4, #0]
 802bc6c:	2b2e      	cmp	r3, #46	; 0x2e
 802bc6e:	d10c      	bne.n	802bc8a <_vfiprintf_r+0x15a>
 802bc70:	7863      	ldrb	r3, [r4, #1]
 802bc72:	2b2a      	cmp	r3, #42	; 0x2a
 802bc74:	d134      	bne.n	802bce0 <_vfiprintf_r+0x1b0>
 802bc76:	9b03      	ldr	r3, [sp, #12]
 802bc78:	1d1a      	adds	r2, r3, #4
 802bc7a:	681b      	ldr	r3, [r3, #0]
 802bc7c:	9203      	str	r2, [sp, #12]
 802bc7e:	2b00      	cmp	r3, #0
 802bc80:	bfb8      	it	lt
 802bc82:	f04f 33ff 	movlt.w	r3, #4294967295
 802bc86:	3402      	adds	r4, #2
 802bc88:	9305      	str	r3, [sp, #20]
 802bc8a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802bd60 <_vfiprintf_r+0x230>
 802bc8e:	7821      	ldrb	r1, [r4, #0]
 802bc90:	2203      	movs	r2, #3
 802bc92:	4650      	mov	r0, sl
 802bc94:	f7d4 faa4 	bl	80001e0 <memchr>
 802bc98:	b138      	cbz	r0, 802bcaa <_vfiprintf_r+0x17a>
 802bc9a:	9b04      	ldr	r3, [sp, #16]
 802bc9c:	eba0 000a 	sub.w	r0, r0, sl
 802bca0:	2240      	movs	r2, #64	; 0x40
 802bca2:	4082      	lsls	r2, r0
 802bca4:	4313      	orrs	r3, r2
 802bca6:	3401      	adds	r4, #1
 802bca8:	9304      	str	r3, [sp, #16]
 802bcaa:	f814 1b01 	ldrb.w	r1, [r4], #1
 802bcae:	4829      	ldr	r0, [pc, #164]	; (802bd54 <_vfiprintf_r+0x224>)
 802bcb0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802bcb4:	2206      	movs	r2, #6
 802bcb6:	f7d4 fa93 	bl	80001e0 <memchr>
 802bcba:	2800      	cmp	r0, #0
 802bcbc:	d03f      	beq.n	802bd3e <_vfiprintf_r+0x20e>
 802bcbe:	4b26      	ldr	r3, [pc, #152]	; (802bd58 <_vfiprintf_r+0x228>)
 802bcc0:	bb1b      	cbnz	r3, 802bd0a <_vfiprintf_r+0x1da>
 802bcc2:	9b03      	ldr	r3, [sp, #12]
 802bcc4:	3307      	adds	r3, #7
 802bcc6:	f023 0307 	bic.w	r3, r3, #7
 802bcca:	3308      	adds	r3, #8
 802bccc:	9303      	str	r3, [sp, #12]
 802bcce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802bcd0:	443b      	add	r3, r7
 802bcd2:	9309      	str	r3, [sp, #36]	; 0x24
 802bcd4:	e768      	b.n	802bba8 <_vfiprintf_r+0x78>
 802bcd6:	fb0c 3202 	mla	r2, ip, r2, r3
 802bcda:	460c      	mov	r4, r1
 802bcdc:	2001      	movs	r0, #1
 802bcde:	e7a6      	b.n	802bc2e <_vfiprintf_r+0xfe>
 802bce0:	2300      	movs	r3, #0
 802bce2:	3401      	adds	r4, #1
 802bce4:	9305      	str	r3, [sp, #20]
 802bce6:	4619      	mov	r1, r3
 802bce8:	f04f 0c0a 	mov.w	ip, #10
 802bcec:	4620      	mov	r0, r4
 802bcee:	f810 2b01 	ldrb.w	r2, [r0], #1
 802bcf2:	3a30      	subs	r2, #48	; 0x30
 802bcf4:	2a09      	cmp	r2, #9
 802bcf6:	d903      	bls.n	802bd00 <_vfiprintf_r+0x1d0>
 802bcf8:	2b00      	cmp	r3, #0
 802bcfa:	d0c6      	beq.n	802bc8a <_vfiprintf_r+0x15a>
 802bcfc:	9105      	str	r1, [sp, #20]
 802bcfe:	e7c4      	b.n	802bc8a <_vfiprintf_r+0x15a>
 802bd00:	fb0c 2101 	mla	r1, ip, r1, r2
 802bd04:	4604      	mov	r4, r0
 802bd06:	2301      	movs	r3, #1
 802bd08:	e7f0      	b.n	802bcec <_vfiprintf_r+0x1bc>
 802bd0a:	ab03      	add	r3, sp, #12
 802bd0c:	9300      	str	r3, [sp, #0]
 802bd0e:	462a      	mov	r2, r5
 802bd10:	4b12      	ldr	r3, [pc, #72]	; (802bd5c <_vfiprintf_r+0x22c>)
 802bd12:	a904      	add	r1, sp, #16
 802bd14:	4630      	mov	r0, r6
 802bd16:	f3af 8000 	nop.w
 802bd1a:	4607      	mov	r7, r0
 802bd1c:	1c78      	adds	r0, r7, #1
 802bd1e:	d1d6      	bne.n	802bcce <_vfiprintf_r+0x19e>
 802bd20:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802bd22:	07d9      	lsls	r1, r3, #31
 802bd24:	d405      	bmi.n	802bd32 <_vfiprintf_r+0x202>
 802bd26:	89ab      	ldrh	r3, [r5, #12]
 802bd28:	059a      	lsls	r2, r3, #22
 802bd2a:	d402      	bmi.n	802bd32 <_vfiprintf_r+0x202>
 802bd2c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802bd2e:	f7ff fe1b 	bl	802b968 <__retarget_lock_release_recursive>
 802bd32:	89ab      	ldrh	r3, [r5, #12]
 802bd34:	065b      	lsls	r3, r3, #25
 802bd36:	f53f af1d 	bmi.w	802bb74 <_vfiprintf_r+0x44>
 802bd3a:	9809      	ldr	r0, [sp, #36]	; 0x24
 802bd3c:	e71c      	b.n	802bb78 <_vfiprintf_r+0x48>
 802bd3e:	ab03      	add	r3, sp, #12
 802bd40:	9300      	str	r3, [sp, #0]
 802bd42:	462a      	mov	r2, r5
 802bd44:	4b05      	ldr	r3, [pc, #20]	; (802bd5c <_vfiprintf_r+0x22c>)
 802bd46:	a904      	add	r1, sp, #16
 802bd48:	4630      	mov	r0, r6
 802bd4a:	f000 f879 	bl	802be40 <_printf_i>
 802bd4e:	e7e4      	b.n	802bd1a <_vfiprintf_r+0x1ea>
 802bd50:	08030268 	.word	0x08030268
 802bd54:	08030272 	.word	0x08030272
 802bd58:	00000000 	.word	0x00000000
 802bd5c:	0802bb0b 	.word	0x0802bb0b
 802bd60:	0803026e 	.word	0x0803026e

0802bd64 <_printf_common>:
 802bd64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802bd68:	4616      	mov	r6, r2
 802bd6a:	4699      	mov	r9, r3
 802bd6c:	688a      	ldr	r2, [r1, #8]
 802bd6e:	690b      	ldr	r3, [r1, #16]
 802bd70:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802bd74:	4293      	cmp	r3, r2
 802bd76:	bfb8      	it	lt
 802bd78:	4613      	movlt	r3, r2
 802bd7a:	6033      	str	r3, [r6, #0]
 802bd7c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802bd80:	4607      	mov	r7, r0
 802bd82:	460c      	mov	r4, r1
 802bd84:	b10a      	cbz	r2, 802bd8a <_printf_common+0x26>
 802bd86:	3301      	adds	r3, #1
 802bd88:	6033      	str	r3, [r6, #0]
 802bd8a:	6823      	ldr	r3, [r4, #0]
 802bd8c:	0699      	lsls	r1, r3, #26
 802bd8e:	bf42      	ittt	mi
 802bd90:	6833      	ldrmi	r3, [r6, #0]
 802bd92:	3302      	addmi	r3, #2
 802bd94:	6033      	strmi	r3, [r6, #0]
 802bd96:	6825      	ldr	r5, [r4, #0]
 802bd98:	f015 0506 	ands.w	r5, r5, #6
 802bd9c:	d106      	bne.n	802bdac <_printf_common+0x48>
 802bd9e:	f104 0a19 	add.w	sl, r4, #25
 802bda2:	68e3      	ldr	r3, [r4, #12]
 802bda4:	6832      	ldr	r2, [r6, #0]
 802bda6:	1a9b      	subs	r3, r3, r2
 802bda8:	42ab      	cmp	r3, r5
 802bdaa:	dc26      	bgt.n	802bdfa <_printf_common+0x96>
 802bdac:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802bdb0:	1e13      	subs	r3, r2, #0
 802bdb2:	6822      	ldr	r2, [r4, #0]
 802bdb4:	bf18      	it	ne
 802bdb6:	2301      	movne	r3, #1
 802bdb8:	0692      	lsls	r2, r2, #26
 802bdba:	d42b      	bmi.n	802be14 <_printf_common+0xb0>
 802bdbc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802bdc0:	4649      	mov	r1, r9
 802bdc2:	4638      	mov	r0, r7
 802bdc4:	47c0      	blx	r8
 802bdc6:	3001      	adds	r0, #1
 802bdc8:	d01e      	beq.n	802be08 <_printf_common+0xa4>
 802bdca:	6823      	ldr	r3, [r4, #0]
 802bdcc:	6922      	ldr	r2, [r4, #16]
 802bdce:	f003 0306 	and.w	r3, r3, #6
 802bdd2:	2b04      	cmp	r3, #4
 802bdd4:	bf02      	ittt	eq
 802bdd6:	68e5      	ldreq	r5, [r4, #12]
 802bdd8:	6833      	ldreq	r3, [r6, #0]
 802bdda:	1aed      	subeq	r5, r5, r3
 802bddc:	68a3      	ldr	r3, [r4, #8]
 802bdde:	bf0c      	ite	eq
 802bde0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802bde4:	2500      	movne	r5, #0
 802bde6:	4293      	cmp	r3, r2
 802bde8:	bfc4      	itt	gt
 802bdea:	1a9b      	subgt	r3, r3, r2
 802bdec:	18ed      	addgt	r5, r5, r3
 802bdee:	2600      	movs	r6, #0
 802bdf0:	341a      	adds	r4, #26
 802bdf2:	42b5      	cmp	r5, r6
 802bdf4:	d11a      	bne.n	802be2c <_printf_common+0xc8>
 802bdf6:	2000      	movs	r0, #0
 802bdf8:	e008      	b.n	802be0c <_printf_common+0xa8>
 802bdfa:	2301      	movs	r3, #1
 802bdfc:	4652      	mov	r2, sl
 802bdfe:	4649      	mov	r1, r9
 802be00:	4638      	mov	r0, r7
 802be02:	47c0      	blx	r8
 802be04:	3001      	adds	r0, #1
 802be06:	d103      	bne.n	802be10 <_printf_common+0xac>
 802be08:	f04f 30ff 	mov.w	r0, #4294967295
 802be0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802be10:	3501      	adds	r5, #1
 802be12:	e7c6      	b.n	802bda2 <_printf_common+0x3e>
 802be14:	18e1      	adds	r1, r4, r3
 802be16:	1c5a      	adds	r2, r3, #1
 802be18:	2030      	movs	r0, #48	; 0x30
 802be1a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802be1e:	4422      	add	r2, r4
 802be20:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802be24:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802be28:	3302      	adds	r3, #2
 802be2a:	e7c7      	b.n	802bdbc <_printf_common+0x58>
 802be2c:	2301      	movs	r3, #1
 802be2e:	4622      	mov	r2, r4
 802be30:	4649      	mov	r1, r9
 802be32:	4638      	mov	r0, r7
 802be34:	47c0      	blx	r8
 802be36:	3001      	adds	r0, #1
 802be38:	d0e6      	beq.n	802be08 <_printf_common+0xa4>
 802be3a:	3601      	adds	r6, #1
 802be3c:	e7d9      	b.n	802bdf2 <_printf_common+0x8e>
	...

0802be40 <_printf_i>:
 802be40:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802be44:	7e0f      	ldrb	r7, [r1, #24]
 802be46:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802be48:	2f78      	cmp	r7, #120	; 0x78
 802be4a:	4691      	mov	r9, r2
 802be4c:	4680      	mov	r8, r0
 802be4e:	460c      	mov	r4, r1
 802be50:	469a      	mov	sl, r3
 802be52:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802be56:	d807      	bhi.n	802be68 <_printf_i+0x28>
 802be58:	2f62      	cmp	r7, #98	; 0x62
 802be5a:	d80a      	bhi.n	802be72 <_printf_i+0x32>
 802be5c:	2f00      	cmp	r7, #0
 802be5e:	f000 80d4 	beq.w	802c00a <_printf_i+0x1ca>
 802be62:	2f58      	cmp	r7, #88	; 0x58
 802be64:	f000 80c0 	beq.w	802bfe8 <_printf_i+0x1a8>
 802be68:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802be6c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802be70:	e03a      	b.n	802bee8 <_printf_i+0xa8>
 802be72:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802be76:	2b15      	cmp	r3, #21
 802be78:	d8f6      	bhi.n	802be68 <_printf_i+0x28>
 802be7a:	a101      	add	r1, pc, #4	; (adr r1, 802be80 <_printf_i+0x40>)
 802be7c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802be80:	0802bed9 	.word	0x0802bed9
 802be84:	0802beed 	.word	0x0802beed
 802be88:	0802be69 	.word	0x0802be69
 802be8c:	0802be69 	.word	0x0802be69
 802be90:	0802be69 	.word	0x0802be69
 802be94:	0802be69 	.word	0x0802be69
 802be98:	0802beed 	.word	0x0802beed
 802be9c:	0802be69 	.word	0x0802be69
 802bea0:	0802be69 	.word	0x0802be69
 802bea4:	0802be69 	.word	0x0802be69
 802bea8:	0802be69 	.word	0x0802be69
 802beac:	0802bff1 	.word	0x0802bff1
 802beb0:	0802bf19 	.word	0x0802bf19
 802beb4:	0802bfab 	.word	0x0802bfab
 802beb8:	0802be69 	.word	0x0802be69
 802bebc:	0802be69 	.word	0x0802be69
 802bec0:	0802c013 	.word	0x0802c013
 802bec4:	0802be69 	.word	0x0802be69
 802bec8:	0802bf19 	.word	0x0802bf19
 802becc:	0802be69 	.word	0x0802be69
 802bed0:	0802be69 	.word	0x0802be69
 802bed4:	0802bfb3 	.word	0x0802bfb3
 802bed8:	682b      	ldr	r3, [r5, #0]
 802beda:	1d1a      	adds	r2, r3, #4
 802bedc:	681b      	ldr	r3, [r3, #0]
 802bede:	602a      	str	r2, [r5, #0]
 802bee0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802bee4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802bee8:	2301      	movs	r3, #1
 802beea:	e09f      	b.n	802c02c <_printf_i+0x1ec>
 802beec:	6820      	ldr	r0, [r4, #0]
 802beee:	682b      	ldr	r3, [r5, #0]
 802bef0:	0607      	lsls	r7, r0, #24
 802bef2:	f103 0104 	add.w	r1, r3, #4
 802bef6:	6029      	str	r1, [r5, #0]
 802bef8:	d501      	bpl.n	802befe <_printf_i+0xbe>
 802befa:	681e      	ldr	r6, [r3, #0]
 802befc:	e003      	b.n	802bf06 <_printf_i+0xc6>
 802befe:	0646      	lsls	r6, r0, #25
 802bf00:	d5fb      	bpl.n	802befa <_printf_i+0xba>
 802bf02:	f9b3 6000 	ldrsh.w	r6, [r3]
 802bf06:	2e00      	cmp	r6, #0
 802bf08:	da03      	bge.n	802bf12 <_printf_i+0xd2>
 802bf0a:	232d      	movs	r3, #45	; 0x2d
 802bf0c:	4276      	negs	r6, r6
 802bf0e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802bf12:	485a      	ldr	r0, [pc, #360]	; (802c07c <_printf_i+0x23c>)
 802bf14:	230a      	movs	r3, #10
 802bf16:	e012      	b.n	802bf3e <_printf_i+0xfe>
 802bf18:	682b      	ldr	r3, [r5, #0]
 802bf1a:	6820      	ldr	r0, [r4, #0]
 802bf1c:	1d19      	adds	r1, r3, #4
 802bf1e:	6029      	str	r1, [r5, #0]
 802bf20:	0605      	lsls	r5, r0, #24
 802bf22:	d501      	bpl.n	802bf28 <_printf_i+0xe8>
 802bf24:	681e      	ldr	r6, [r3, #0]
 802bf26:	e002      	b.n	802bf2e <_printf_i+0xee>
 802bf28:	0641      	lsls	r1, r0, #25
 802bf2a:	d5fb      	bpl.n	802bf24 <_printf_i+0xe4>
 802bf2c:	881e      	ldrh	r6, [r3, #0]
 802bf2e:	4853      	ldr	r0, [pc, #332]	; (802c07c <_printf_i+0x23c>)
 802bf30:	2f6f      	cmp	r7, #111	; 0x6f
 802bf32:	bf0c      	ite	eq
 802bf34:	2308      	moveq	r3, #8
 802bf36:	230a      	movne	r3, #10
 802bf38:	2100      	movs	r1, #0
 802bf3a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802bf3e:	6865      	ldr	r5, [r4, #4]
 802bf40:	60a5      	str	r5, [r4, #8]
 802bf42:	2d00      	cmp	r5, #0
 802bf44:	bfa2      	ittt	ge
 802bf46:	6821      	ldrge	r1, [r4, #0]
 802bf48:	f021 0104 	bicge.w	r1, r1, #4
 802bf4c:	6021      	strge	r1, [r4, #0]
 802bf4e:	b90e      	cbnz	r6, 802bf54 <_printf_i+0x114>
 802bf50:	2d00      	cmp	r5, #0
 802bf52:	d04b      	beq.n	802bfec <_printf_i+0x1ac>
 802bf54:	4615      	mov	r5, r2
 802bf56:	fbb6 f1f3 	udiv	r1, r6, r3
 802bf5a:	fb03 6711 	mls	r7, r3, r1, r6
 802bf5e:	5dc7      	ldrb	r7, [r0, r7]
 802bf60:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802bf64:	4637      	mov	r7, r6
 802bf66:	42bb      	cmp	r3, r7
 802bf68:	460e      	mov	r6, r1
 802bf6a:	d9f4      	bls.n	802bf56 <_printf_i+0x116>
 802bf6c:	2b08      	cmp	r3, #8
 802bf6e:	d10b      	bne.n	802bf88 <_printf_i+0x148>
 802bf70:	6823      	ldr	r3, [r4, #0]
 802bf72:	07de      	lsls	r6, r3, #31
 802bf74:	d508      	bpl.n	802bf88 <_printf_i+0x148>
 802bf76:	6923      	ldr	r3, [r4, #16]
 802bf78:	6861      	ldr	r1, [r4, #4]
 802bf7a:	4299      	cmp	r1, r3
 802bf7c:	bfde      	ittt	le
 802bf7e:	2330      	movle	r3, #48	; 0x30
 802bf80:	f805 3c01 	strble.w	r3, [r5, #-1]
 802bf84:	f105 35ff 	addle.w	r5, r5, #4294967295
 802bf88:	1b52      	subs	r2, r2, r5
 802bf8a:	6122      	str	r2, [r4, #16]
 802bf8c:	f8cd a000 	str.w	sl, [sp]
 802bf90:	464b      	mov	r3, r9
 802bf92:	aa03      	add	r2, sp, #12
 802bf94:	4621      	mov	r1, r4
 802bf96:	4640      	mov	r0, r8
 802bf98:	f7ff fee4 	bl	802bd64 <_printf_common>
 802bf9c:	3001      	adds	r0, #1
 802bf9e:	d14a      	bne.n	802c036 <_printf_i+0x1f6>
 802bfa0:	f04f 30ff 	mov.w	r0, #4294967295
 802bfa4:	b004      	add	sp, #16
 802bfa6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802bfaa:	6823      	ldr	r3, [r4, #0]
 802bfac:	f043 0320 	orr.w	r3, r3, #32
 802bfb0:	6023      	str	r3, [r4, #0]
 802bfb2:	4833      	ldr	r0, [pc, #204]	; (802c080 <_printf_i+0x240>)
 802bfb4:	2778      	movs	r7, #120	; 0x78
 802bfb6:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802bfba:	6823      	ldr	r3, [r4, #0]
 802bfbc:	6829      	ldr	r1, [r5, #0]
 802bfbe:	061f      	lsls	r7, r3, #24
 802bfc0:	f851 6b04 	ldr.w	r6, [r1], #4
 802bfc4:	d402      	bmi.n	802bfcc <_printf_i+0x18c>
 802bfc6:	065f      	lsls	r7, r3, #25
 802bfc8:	bf48      	it	mi
 802bfca:	b2b6      	uxthmi	r6, r6
 802bfcc:	07df      	lsls	r7, r3, #31
 802bfce:	bf48      	it	mi
 802bfd0:	f043 0320 	orrmi.w	r3, r3, #32
 802bfd4:	6029      	str	r1, [r5, #0]
 802bfd6:	bf48      	it	mi
 802bfd8:	6023      	strmi	r3, [r4, #0]
 802bfda:	b91e      	cbnz	r6, 802bfe4 <_printf_i+0x1a4>
 802bfdc:	6823      	ldr	r3, [r4, #0]
 802bfde:	f023 0320 	bic.w	r3, r3, #32
 802bfe2:	6023      	str	r3, [r4, #0]
 802bfe4:	2310      	movs	r3, #16
 802bfe6:	e7a7      	b.n	802bf38 <_printf_i+0xf8>
 802bfe8:	4824      	ldr	r0, [pc, #144]	; (802c07c <_printf_i+0x23c>)
 802bfea:	e7e4      	b.n	802bfb6 <_printf_i+0x176>
 802bfec:	4615      	mov	r5, r2
 802bfee:	e7bd      	b.n	802bf6c <_printf_i+0x12c>
 802bff0:	682b      	ldr	r3, [r5, #0]
 802bff2:	6826      	ldr	r6, [r4, #0]
 802bff4:	6961      	ldr	r1, [r4, #20]
 802bff6:	1d18      	adds	r0, r3, #4
 802bff8:	6028      	str	r0, [r5, #0]
 802bffa:	0635      	lsls	r5, r6, #24
 802bffc:	681b      	ldr	r3, [r3, #0]
 802bffe:	d501      	bpl.n	802c004 <_printf_i+0x1c4>
 802c000:	6019      	str	r1, [r3, #0]
 802c002:	e002      	b.n	802c00a <_printf_i+0x1ca>
 802c004:	0670      	lsls	r0, r6, #25
 802c006:	d5fb      	bpl.n	802c000 <_printf_i+0x1c0>
 802c008:	8019      	strh	r1, [r3, #0]
 802c00a:	2300      	movs	r3, #0
 802c00c:	6123      	str	r3, [r4, #16]
 802c00e:	4615      	mov	r5, r2
 802c010:	e7bc      	b.n	802bf8c <_printf_i+0x14c>
 802c012:	682b      	ldr	r3, [r5, #0]
 802c014:	1d1a      	adds	r2, r3, #4
 802c016:	602a      	str	r2, [r5, #0]
 802c018:	681d      	ldr	r5, [r3, #0]
 802c01a:	6862      	ldr	r2, [r4, #4]
 802c01c:	2100      	movs	r1, #0
 802c01e:	4628      	mov	r0, r5
 802c020:	f7d4 f8de 	bl	80001e0 <memchr>
 802c024:	b108      	cbz	r0, 802c02a <_printf_i+0x1ea>
 802c026:	1b40      	subs	r0, r0, r5
 802c028:	6060      	str	r0, [r4, #4]
 802c02a:	6863      	ldr	r3, [r4, #4]
 802c02c:	6123      	str	r3, [r4, #16]
 802c02e:	2300      	movs	r3, #0
 802c030:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c034:	e7aa      	b.n	802bf8c <_printf_i+0x14c>
 802c036:	6923      	ldr	r3, [r4, #16]
 802c038:	462a      	mov	r2, r5
 802c03a:	4649      	mov	r1, r9
 802c03c:	4640      	mov	r0, r8
 802c03e:	47d0      	blx	sl
 802c040:	3001      	adds	r0, #1
 802c042:	d0ad      	beq.n	802bfa0 <_printf_i+0x160>
 802c044:	6823      	ldr	r3, [r4, #0]
 802c046:	079b      	lsls	r3, r3, #30
 802c048:	d413      	bmi.n	802c072 <_printf_i+0x232>
 802c04a:	68e0      	ldr	r0, [r4, #12]
 802c04c:	9b03      	ldr	r3, [sp, #12]
 802c04e:	4298      	cmp	r0, r3
 802c050:	bfb8      	it	lt
 802c052:	4618      	movlt	r0, r3
 802c054:	e7a6      	b.n	802bfa4 <_printf_i+0x164>
 802c056:	2301      	movs	r3, #1
 802c058:	4632      	mov	r2, r6
 802c05a:	4649      	mov	r1, r9
 802c05c:	4640      	mov	r0, r8
 802c05e:	47d0      	blx	sl
 802c060:	3001      	adds	r0, #1
 802c062:	d09d      	beq.n	802bfa0 <_printf_i+0x160>
 802c064:	3501      	adds	r5, #1
 802c066:	68e3      	ldr	r3, [r4, #12]
 802c068:	9903      	ldr	r1, [sp, #12]
 802c06a:	1a5b      	subs	r3, r3, r1
 802c06c:	42ab      	cmp	r3, r5
 802c06e:	dcf2      	bgt.n	802c056 <_printf_i+0x216>
 802c070:	e7eb      	b.n	802c04a <_printf_i+0x20a>
 802c072:	2500      	movs	r5, #0
 802c074:	f104 0619 	add.w	r6, r4, #25
 802c078:	e7f5      	b.n	802c066 <_printf_i+0x226>
 802c07a:	bf00      	nop
 802c07c:	08030279 	.word	0x08030279
 802c080:	0803028a 	.word	0x0803028a

0802c084 <__sflush_r>:
 802c084:	898a      	ldrh	r2, [r1, #12]
 802c086:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c08a:	4605      	mov	r5, r0
 802c08c:	0710      	lsls	r0, r2, #28
 802c08e:	460c      	mov	r4, r1
 802c090:	d458      	bmi.n	802c144 <__sflush_r+0xc0>
 802c092:	684b      	ldr	r3, [r1, #4]
 802c094:	2b00      	cmp	r3, #0
 802c096:	dc05      	bgt.n	802c0a4 <__sflush_r+0x20>
 802c098:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802c09a:	2b00      	cmp	r3, #0
 802c09c:	dc02      	bgt.n	802c0a4 <__sflush_r+0x20>
 802c09e:	2000      	movs	r0, #0
 802c0a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c0a4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c0a6:	2e00      	cmp	r6, #0
 802c0a8:	d0f9      	beq.n	802c09e <__sflush_r+0x1a>
 802c0aa:	2300      	movs	r3, #0
 802c0ac:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802c0b0:	682f      	ldr	r7, [r5, #0]
 802c0b2:	6a21      	ldr	r1, [r4, #32]
 802c0b4:	602b      	str	r3, [r5, #0]
 802c0b6:	d032      	beq.n	802c11e <__sflush_r+0x9a>
 802c0b8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802c0ba:	89a3      	ldrh	r3, [r4, #12]
 802c0bc:	075a      	lsls	r2, r3, #29
 802c0be:	d505      	bpl.n	802c0cc <__sflush_r+0x48>
 802c0c0:	6863      	ldr	r3, [r4, #4]
 802c0c2:	1ac0      	subs	r0, r0, r3
 802c0c4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802c0c6:	b10b      	cbz	r3, 802c0cc <__sflush_r+0x48>
 802c0c8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802c0ca:	1ac0      	subs	r0, r0, r3
 802c0cc:	2300      	movs	r3, #0
 802c0ce:	4602      	mov	r2, r0
 802c0d0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c0d2:	6a21      	ldr	r1, [r4, #32]
 802c0d4:	4628      	mov	r0, r5
 802c0d6:	47b0      	blx	r6
 802c0d8:	1c43      	adds	r3, r0, #1
 802c0da:	89a3      	ldrh	r3, [r4, #12]
 802c0dc:	d106      	bne.n	802c0ec <__sflush_r+0x68>
 802c0de:	6829      	ldr	r1, [r5, #0]
 802c0e0:	291d      	cmp	r1, #29
 802c0e2:	d82b      	bhi.n	802c13c <__sflush_r+0xb8>
 802c0e4:	4a29      	ldr	r2, [pc, #164]	; (802c18c <__sflush_r+0x108>)
 802c0e6:	410a      	asrs	r2, r1
 802c0e8:	07d6      	lsls	r6, r2, #31
 802c0ea:	d427      	bmi.n	802c13c <__sflush_r+0xb8>
 802c0ec:	2200      	movs	r2, #0
 802c0ee:	6062      	str	r2, [r4, #4]
 802c0f0:	04d9      	lsls	r1, r3, #19
 802c0f2:	6922      	ldr	r2, [r4, #16]
 802c0f4:	6022      	str	r2, [r4, #0]
 802c0f6:	d504      	bpl.n	802c102 <__sflush_r+0x7e>
 802c0f8:	1c42      	adds	r2, r0, #1
 802c0fa:	d101      	bne.n	802c100 <__sflush_r+0x7c>
 802c0fc:	682b      	ldr	r3, [r5, #0]
 802c0fe:	b903      	cbnz	r3, 802c102 <__sflush_r+0x7e>
 802c100:	6560      	str	r0, [r4, #84]	; 0x54
 802c102:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c104:	602f      	str	r7, [r5, #0]
 802c106:	2900      	cmp	r1, #0
 802c108:	d0c9      	beq.n	802c09e <__sflush_r+0x1a>
 802c10a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c10e:	4299      	cmp	r1, r3
 802c110:	d002      	beq.n	802c118 <__sflush_r+0x94>
 802c112:	4628      	mov	r0, r5
 802c114:	f7ff fc96 	bl	802ba44 <_free_r>
 802c118:	2000      	movs	r0, #0
 802c11a:	6360      	str	r0, [r4, #52]	; 0x34
 802c11c:	e7c0      	b.n	802c0a0 <__sflush_r+0x1c>
 802c11e:	2301      	movs	r3, #1
 802c120:	4628      	mov	r0, r5
 802c122:	47b0      	blx	r6
 802c124:	1c41      	adds	r1, r0, #1
 802c126:	d1c8      	bne.n	802c0ba <__sflush_r+0x36>
 802c128:	682b      	ldr	r3, [r5, #0]
 802c12a:	2b00      	cmp	r3, #0
 802c12c:	d0c5      	beq.n	802c0ba <__sflush_r+0x36>
 802c12e:	2b1d      	cmp	r3, #29
 802c130:	d001      	beq.n	802c136 <__sflush_r+0xb2>
 802c132:	2b16      	cmp	r3, #22
 802c134:	d101      	bne.n	802c13a <__sflush_r+0xb6>
 802c136:	602f      	str	r7, [r5, #0]
 802c138:	e7b1      	b.n	802c09e <__sflush_r+0x1a>
 802c13a:	89a3      	ldrh	r3, [r4, #12]
 802c13c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c140:	81a3      	strh	r3, [r4, #12]
 802c142:	e7ad      	b.n	802c0a0 <__sflush_r+0x1c>
 802c144:	690f      	ldr	r7, [r1, #16]
 802c146:	2f00      	cmp	r7, #0
 802c148:	d0a9      	beq.n	802c09e <__sflush_r+0x1a>
 802c14a:	0793      	lsls	r3, r2, #30
 802c14c:	680e      	ldr	r6, [r1, #0]
 802c14e:	bf08      	it	eq
 802c150:	694b      	ldreq	r3, [r1, #20]
 802c152:	600f      	str	r7, [r1, #0]
 802c154:	bf18      	it	ne
 802c156:	2300      	movne	r3, #0
 802c158:	eba6 0807 	sub.w	r8, r6, r7
 802c15c:	608b      	str	r3, [r1, #8]
 802c15e:	f1b8 0f00 	cmp.w	r8, #0
 802c162:	dd9c      	ble.n	802c09e <__sflush_r+0x1a>
 802c164:	6a21      	ldr	r1, [r4, #32]
 802c166:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802c168:	4643      	mov	r3, r8
 802c16a:	463a      	mov	r2, r7
 802c16c:	4628      	mov	r0, r5
 802c16e:	47b0      	blx	r6
 802c170:	2800      	cmp	r0, #0
 802c172:	dc06      	bgt.n	802c182 <__sflush_r+0xfe>
 802c174:	89a3      	ldrh	r3, [r4, #12]
 802c176:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c17a:	81a3      	strh	r3, [r4, #12]
 802c17c:	f04f 30ff 	mov.w	r0, #4294967295
 802c180:	e78e      	b.n	802c0a0 <__sflush_r+0x1c>
 802c182:	4407      	add	r7, r0
 802c184:	eba8 0800 	sub.w	r8, r8, r0
 802c188:	e7e9      	b.n	802c15e <__sflush_r+0xda>
 802c18a:	bf00      	nop
 802c18c:	dfbffffe 	.word	0xdfbffffe

0802c190 <_fflush_r>:
 802c190:	b538      	push	{r3, r4, r5, lr}
 802c192:	690b      	ldr	r3, [r1, #16]
 802c194:	4605      	mov	r5, r0
 802c196:	460c      	mov	r4, r1
 802c198:	b913      	cbnz	r3, 802c1a0 <_fflush_r+0x10>
 802c19a:	2500      	movs	r5, #0
 802c19c:	4628      	mov	r0, r5
 802c19e:	bd38      	pop	{r3, r4, r5, pc}
 802c1a0:	b118      	cbz	r0, 802c1aa <_fflush_r+0x1a>
 802c1a2:	6a03      	ldr	r3, [r0, #32]
 802c1a4:	b90b      	cbnz	r3, 802c1aa <_fflush_r+0x1a>
 802c1a6:	f7ff fa85 	bl	802b6b4 <__sinit>
 802c1aa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802c1ae:	2b00      	cmp	r3, #0
 802c1b0:	d0f3      	beq.n	802c19a <_fflush_r+0xa>
 802c1b2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802c1b4:	07d0      	lsls	r0, r2, #31
 802c1b6:	d404      	bmi.n	802c1c2 <_fflush_r+0x32>
 802c1b8:	0599      	lsls	r1, r3, #22
 802c1ba:	d402      	bmi.n	802c1c2 <_fflush_r+0x32>
 802c1bc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c1be:	f7ff fbd2 	bl	802b966 <__retarget_lock_acquire_recursive>
 802c1c2:	4628      	mov	r0, r5
 802c1c4:	4621      	mov	r1, r4
 802c1c6:	f7ff ff5d 	bl	802c084 <__sflush_r>
 802c1ca:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802c1cc:	07da      	lsls	r2, r3, #31
 802c1ce:	4605      	mov	r5, r0
 802c1d0:	d4e4      	bmi.n	802c19c <_fflush_r+0xc>
 802c1d2:	89a3      	ldrh	r3, [r4, #12]
 802c1d4:	059b      	lsls	r3, r3, #22
 802c1d6:	d4e1      	bmi.n	802c19c <_fflush_r+0xc>
 802c1d8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c1da:	f7ff fbc5 	bl	802b968 <__retarget_lock_release_recursive>
 802c1de:	e7dd      	b.n	802c19c <_fflush_r+0xc>

0802c1e0 <__swbuf_r>:
 802c1e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c1e2:	460e      	mov	r6, r1
 802c1e4:	4614      	mov	r4, r2
 802c1e6:	4605      	mov	r5, r0
 802c1e8:	b118      	cbz	r0, 802c1f2 <__swbuf_r+0x12>
 802c1ea:	6a03      	ldr	r3, [r0, #32]
 802c1ec:	b90b      	cbnz	r3, 802c1f2 <__swbuf_r+0x12>
 802c1ee:	f7ff fa61 	bl	802b6b4 <__sinit>
 802c1f2:	69a3      	ldr	r3, [r4, #24]
 802c1f4:	60a3      	str	r3, [r4, #8]
 802c1f6:	89a3      	ldrh	r3, [r4, #12]
 802c1f8:	071a      	lsls	r2, r3, #28
 802c1fa:	d525      	bpl.n	802c248 <__swbuf_r+0x68>
 802c1fc:	6923      	ldr	r3, [r4, #16]
 802c1fe:	b31b      	cbz	r3, 802c248 <__swbuf_r+0x68>
 802c200:	6823      	ldr	r3, [r4, #0]
 802c202:	6922      	ldr	r2, [r4, #16]
 802c204:	1a98      	subs	r0, r3, r2
 802c206:	6963      	ldr	r3, [r4, #20]
 802c208:	b2f6      	uxtb	r6, r6
 802c20a:	4283      	cmp	r3, r0
 802c20c:	4637      	mov	r7, r6
 802c20e:	dc04      	bgt.n	802c21a <__swbuf_r+0x3a>
 802c210:	4621      	mov	r1, r4
 802c212:	4628      	mov	r0, r5
 802c214:	f7ff ffbc 	bl	802c190 <_fflush_r>
 802c218:	b9e0      	cbnz	r0, 802c254 <__swbuf_r+0x74>
 802c21a:	68a3      	ldr	r3, [r4, #8]
 802c21c:	3b01      	subs	r3, #1
 802c21e:	60a3      	str	r3, [r4, #8]
 802c220:	6823      	ldr	r3, [r4, #0]
 802c222:	1c5a      	adds	r2, r3, #1
 802c224:	6022      	str	r2, [r4, #0]
 802c226:	701e      	strb	r6, [r3, #0]
 802c228:	6962      	ldr	r2, [r4, #20]
 802c22a:	1c43      	adds	r3, r0, #1
 802c22c:	429a      	cmp	r2, r3
 802c22e:	d004      	beq.n	802c23a <__swbuf_r+0x5a>
 802c230:	89a3      	ldrh	r3, [r4, #12]
 802c232:	07db      	lsls	r3, r3, #31
 802c234:	d506      	bpl.n	802c244 <__swbuf_r+0x64>
 802c236:	2e0a      	cmp	r6, #10
 802c238:	d104      	bne.n	802c244 <__swbuf_r+0x64>
 802c23a:	4621      	mov	r1, r4
 802c23c:	4628      	mov	r0, r5
 802c23e:	f7ff ffa7 	bl	802c190 <_fflush_r>
 802c242:	b938      	cbnz	r0, 802c254 <__swbuf_r+0x74>
 802c244:	4638      	mov	r0, r7
 802c246:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802c248:	4621      	mov	r1, r4
 802c24a:	4628      	mov	r0, r5
 802c24c:	f000 f806 	bl	802c25c <__swsetup_r>
 802c250:	2800      	cmp	r0, #0
 802c252:	d0d5      	beq.n	802c200 <__swbuf_r+0x20>
 802c254:	f04f 37ff 	mov.w	r7, #4294967295
 802c258:	e7f4      	b.n	802c244 <__swbuf_r+0x64>
	...

0802c25c <__swsetup_r>:
 802c25c:	b538      	push	{r3, r4, r5, lr}
 802c25e:	4b2a      	ldr	r3, [pc, #168]	; (802c308 <__swsetup_r+0xac>)
 802c260:	4605      	mov	r5, r0
 802c262:	6818      	ldr	r0, [r3, #0]
 802c264:	460c      	mov	r4, r1
 802c266:	b118      	cbz	r0, 802c270 <__swsetup_r+0x14>
 802c268:	6a03      	ldr	r3, [r0, #32]
 802c26a:	b90b      	cbnz	r3, 802c270 <__swsetup_r+0x14>
 802c26c:	f7ff fa22 	bl	802b6b4 <__sinit>
 802c270:	89a3      	ldrh	r3, [r4, #12]
 802c272:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c276:	0718      	lsls	r0, r3, #28
 802c278:	d422      	bmi.n	802c2c0 <__swsetup_r+0x64>
 802c27a:	06d9      	lsls	r1, r3, #27
 802c27c:	d407      	bmi.n	802c28e <__swsetup_r+0x32>
 802c27e:	2309      	movs	r3, #9
 802c280:	602b      	str	r3, [r5, #0]
 802c282:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802c286:	81a3      	strh	r3, [r4, #12]
 802c288:	f04f 30ff 	mov.w	r0, #4294967295
 802c28c:	e034      	b.n	802c2f8 <__swsetup_r+0x9c>
 802c28e:	0758      	lsls	r0, r3, #29
 802c290:	d512      	bpl.n	802c2b8 <__swsetup_r+0x5c>
 802c292:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c294:	b141      	cbz	r1, 802c2a8 <__swsetup_r+0x4c>
 802c296:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c29a:	4299      	cmp	r1, r3
 802c29c:	d002      	beq.n	802c2a4 <__swsetup_r+0x48>
 802c29e:	4628      	mov	r0, r5
 802c2a0:	f7ff fbd0 	bl	802ba44 <_free_r>
 802c2a4:	2300      	movs	r3, #0
 802c2a6:	6363      	str	r3, [r4, #52]	; 0x34
 802c2a8:	89a3      	ldrh	r3, [r4, #12]
 802c2aa:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802c2ae:	81a3      	strh	r3, [r4, #12]
 802c2b0:	2300      	movs	r3, #0
 802c2b2:	6063      	str	r3, [r4, #4]
 802c2b4:	6923      	ldr	r3, [r4, #16]
 802c2b6:	6023      	str	r3, [r4, #0]
 802c2b8:	89a3      	ldrh	r3, [r4, #12]
 802c2ba:	f043 0308 	orr.w	r3, r3, #8
 802c2be:	81a3      	strh	r3, [r4, #12]
 802c2c0:	6923      	ldr	r3, [r4, #16]
 802c2c2:	b94b      	cbnz	r3, 802c2d8 <__swsetup_r+0x7c>
 802c2c4:	89a3      	ldrh	r3, [r4, #12]
 802c2c6:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802c2ca:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802c2ce:	d003      	beq.n	802c2d8 <__swsetup_r+0x7c>
 802c2d0:	4621      	mov	r1, r4
 802c2d2:	4628      	mov	r0, r5
 802c2d4:	f000 f840 	bl	802c358 <__smakebuf_r>
 802c2d8:	89a0      	ldrh	r0, [r4, #12]
 802c2da:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c2de:	f010 0301 	ands.w	r3, r0, #1
 802c2e2:	d00a      	beq.n	802c2fa <__swsetup_r+0x9e>
 802c2e4:	2300      	movs	r3, #0
 802c2e6:	60a3      	str	r3, [r4, #8]
 802c2e8:	6963      	ldr	r3, [r4, #20]
 802c2ea:	425b      	negs	r3, r3
 802c2ec:	61a3      	str	r3, [r4, #24]
 802c2ee:	6923      	ldr	r3, [r4, #16]
 802c2f0:	b943      	cbnz	r3, 802c304 <__swsetup_r+0xa8>
 802c2f2:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802c2f6:	d1c4      	bne.n	802c282 <__swsetup_r+0x26>
 802c2f8:	bd38      	pop	{r3, r4, r5, pc}
 802c2fa:	0781      	lsls	r1, r0, #30
 802c2fc:	bf58      	it	pl
 802c2fe:	6963      	ldrpl	r3, [r4, #20]
 802c300:	60a3      	str	r3, [r4, #8]
 802c302:	e7f4      	b.n	802c2ee <__swsetup_r+0x92>
 802c304:	2000      	movs	r0, #0
 802c306:	e7f7      	b.n	802c2f8 <__swsetup_r+0x9c>
 802c308:	200000f4 	.word	0x200000f4

0802c30c <__swhatbuf_r>:
 802c30c:	b570      	push	{r4, r5, r6, lr}
 802c30e:	460c      	mov	r4, r1
 802c310:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802c314:	2900      	cmp	r1, #0
 802c316:	b096      	sub	sp, #88	; 0x58
 802c318:	4615      	mov	r5, r2
 802c31a:	461e      	mov	r6, r3
 802c31c:	da0d      	bge.n	802c33a <__swhatbuf_r+0x2e>
 802c31e:	89a3      	ldrh	r3, [r4, #12]
 802c320:	f013 0f80 	tst.w	r3, #128	; 0x80
 802c324:	f04f 0100 	mov.w	r1, #0
 802c328:	bf0c      	ite	eq
 802c32a:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802c32e:	2340      	movne	r3, #64	; 0x40
 802c330:	2000      	movs	r0, #0
 802c332:	6031      	str	r1, [r6, #0]
 802c334:	602b      	str	r3, [r5, #0]
 802c336:	b016      	add	sp, #88	; 0x58
 802c338:	bd70      	pop	{r4, r5, r6, pc}
 802c33a:	466a      	mov	r2, sp
 802c33c:	f000 f848 	bl	802c3d0 <_fstat_r>
 802c340:	2800      	cmp	r0, #0
 802c342:	dbec      	blt.n	802c31e <__swhatbuf_r+0x12>
 802c344:	9901      	ldr	r1, [sp, #4]
 802c346:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802c34a:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802c34e:	4259      	negs	r1, r3
 802c350:	4159      	adcs	r1, r3
 802c352:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802c356:	e7eb      	b.n	802c330 <__swhatbuf_r+0x24>

0802c358 <__smakebuf_r>:
 802c358:	898b      	ldrh	r3, [r1, #12]
 802c35a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802c35c:	079d      	lsls	r5, r3, #30
 802c35e:	4606      	mov	r6, r0
 802c360:	460c      	mov	r4, r1
 802c362:	d507      	bpl.n	802c374 <__smakebuf_r+0x1c>
 802c364:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802c368:	6023      	str	r3, [r4, #0]
 802c36a:	6123      	str	r3, [r4, #16]
 802c36c:	2301      	movs	r3, #1
 802c36e:	6163      	str	r3, [r4, #20]
 802c370:	b002      	add	sp, #8
 802c372:	bd70      	pop	{r4, r5, r6, pc}
 802c374:	ab01      	add	r3, sp, #4
 802c376:	466a      	mov	r2, sp
 802c378:	f7ff ffc8 	bl	802c30c <__swhatbuf_r>
 802c37c:	9900      	ldr	r1, [sp, #0]
 802c37e:	4605      	mov	r5, r0
 802c380:	4630      	mov	r0, r6
 802c382:	f7ff f871 	bl	802b468 <_malloc_r>
 802c386:	b948      	cbnz	r0, 802c39c <__smakebuf_r+0x44>
 802c388:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802c38c:	059a      	lsls	r2, r3, #22
 802c38e:	d4ef      	bmi.n	802c370 <__smakebuf_r+0x18>
 802c390:	f023 0303 	bic.w	r3, r3, #3
 802c394:	f043 0302 	orr.w	r3, r3, #2
 802c398:	81a3      	strh	r3, [r4, #12]
 802c39a:	e7e3      	b.n	802c364 <__smakebuf_r+0xc>
 802c39c:	89a3      	ldrh	r3, [r4, #12]
 802c39e:	6020      	str	r0, [r4, #0]
 802c3a0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802c3a4:	81a3      	strh	r3, [r4, #12]
 802c3a6:	9b00      	ldr	r3, [sp, #0]
 802c3a8:	6163      	str	r3, [r4, #20]
 802c3aa:	9b01      	ldr	r3, [sp, #4]
 802c3ac:	6120      	str	r0, [r4, #16]
 802c3ae:	b15b      	cbz	r3, 802c3c8 <__smakebuf_r+0x70>
 802c3b0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802c3b4:	4630      	mov	r0, r6
 802c3b6:	f000 f81d 	bl	802c3f4 <_isatty_r>
 802c3ba:	b128      	cbz	r0, 802c3c8 <__smakebuf_r+0x70>
 802c3bc:	89a3      	ldrh	r3, [r4, #12]
 802c3be:	f023 0303 	bic.w	r3, r3, #3
 802c3c2:	f043 0301 	orr.w	r3, r3, #1
 802c3c6:	81a3      	strh	r3, [r4, #12]
 802c3c8:	89a3      	ldrh	r3, [r4, #12]
 802c3ca:	431d      	orrs	r5, r3
 802c3cc:	81a5      	strh	r5, [r4, #12]
 802c3ce:	e7cf      	b.n	802c370 <__smakebuf_r+0x18>

0802c3d0 <_fstat_r>:
 802c3d0:	b538      	push	{r3, r4, r5, lr}
 802c3d2:	4d07      	ldr	r5, [pc, #28]	; (802c3f0 <_fstat_r+0x20>)
 802c3d4:	2300      	movs	r3, #0
 802c3d6:	4604      	mov	r4, r0
 802c3d8:	4608      	mov	r0, r1
 802c3da:	4611      	mov	r1, r2
 802c3dc:	602b      	str	r3, [r5, #0]
 802c3de:	f7d6 ffb0 	bl	8003342 <_fstat>
 802c3e2:	1c43      	adds	r3, r0, #1
 802c3e4:	d102      	bne.n	802c3ec <_fstat_r+0x1c>
 802c3e6:	682b      	ldr	r3, [r5, #0]
 802c3e8:	b103      	cbz	r3, 802c3ec <_fstat_r+0x1c>
 802c3ea:	6023      	str	r3, [r4, #0]
 802c3ec:	bd38      	pop	{r3, r4, r5, pc}
 802c3ee:	bf00      	nop
 802c3f0:	20002ce4 	.word	0x20002ce4

0802c3f4 <_isatty_r>:
 802c3f4:	b538      	push	{r3, r4, r5, lr}
 802c3f6:	4d06      	ldr	r5, [pc, #24]	; (802c410 <_isatty_r+0x1c>)
 802c3f8:	2300      	movs	r3, #0
 802c3fa:	4604      	mov	r4, r0
 802c3fc:	4608      	mov	r0, r1
 802c3fe:	602b      	str	r3, [r5, #0]
 802c400:	f7d6 ffaf 	bl	8003362 <_isatty>
 802c404:	1c43      	adds	r3, r0, #1
 802c406:	d102      	bne.n	802c40e <_isatty_r+0x1a>
 802c408:	682b      	ldr	r3, [r5, #0]
 802c40a:	b103      	cbz	r3, 802c40e <_isatty_r+0x1a>
 802c40c:	6023      	str	r3, [r4, #0]
 802c40e:	bd38      	pop	{r3, r4, r5, pc}
 802c410:	20002ce4 	.word	0x20002ce4

0802c414 <_init>:
 802c414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c416:	bf00      	nop
 802c418:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802c41a:	bc08      	pop	{r3}
 802c41c:	469e      	mov	lr, r3
 802c41e:	4770      	bx	lr

0802c420 <_fini>:
 802c420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c422:	bf00      	nop
 802c424:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802c426:	bc08      	pop	{r3}
 802c428:	469e      	mov	lr, r3
 802c42a:	4770      	bx	lr
