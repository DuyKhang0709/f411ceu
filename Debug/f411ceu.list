
f411ceu.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002c0bc  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003e60  0802c25c  0802c25c  0003c25c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00004a92  080300bc  080300bc  000400bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000228  08034b50  08034b50  00044b50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 00017ea8  08034d78  08034d78  00044d78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 000000f4  0804cc20  0804cc20  0005cc20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0804cd14  0804cd14  000600fc  2**0
                  CONTENTS
  8 .ARM          00000008  0804cd14  0804cd14  0005cd14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0804cd1c  0804cd1c  000600fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000018  0804cd1c  0804cd1c  0005cd1c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   0000000c  0804cd34  0804cd34  0005cd34  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         000000fc  20000000  0804cd40  00060000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00002e64  200000fc  0804ce3c  000600fc  2**2
                  ALLOC
 14 ._user_heap_stack 00000600  20002f60  0804ce3c  00062f60  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000600fc  2**0
                  CONTENTS, READONLY
 16 .comment      000000c2  00000000  00000000  0006012c  2**0
                  CONTENTS, READONLY
 17 .debug_info   000fb1eb  00000000  00000000  000601ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00017186  00000000  00000000  0015b3d9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00003ea0  00000000  00000000  00172560  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_rnglists 00002e3e  00000000  00000000  00176400  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_macro  00025094  00000000  00000000  0017923e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line   00044b43  00000000  00000000  0019e2d2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    000c00ad  00000000  00000000  001e2e15  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_frame  000118b4  00000000  00000000  002a2ec4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_line_str 0000004f  00000000  00000000  002b4778  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200000fc 	.word	0x200000fc
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0802c244 	.word	0x0802c244

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000100 	.word	0x20000100
 80001dc:	0802c244 	.word	0x0802c244

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2f>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000b60:	bf24      	itt	cs
 8000b62:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000b66:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000b6a:	d90d      	bls.n	8000b88 <__aeabi_d2f+0x30>
 8000b6c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b70:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b74:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b78:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b7c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b80:	bf08      	it	eq
 8000b82:	f020 0001 	biceq.w	r0, r0, #1
 8000b86:	4770      	bx	lr
 8000b88:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b8c:	d121      	bne.n	8000bd2 <__aeabi_d2f+0x7a>
 8000b8e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b92:	bfbc      	itt	lt
 8000b94:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	4770      	bxlt	lr
 8000b9a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b9e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000ba2:	f1c2 0218 	rsb	r2, r2, #24
 8000ba6:	f1c2 0c20 	rsb	ip, r2, #32
 8000baa:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bae:	fa20 f002 	lsr.w	r0, r0, r2
 8000bb2:	bf18      	it	ne
 8000bb4:	f040 0001 	orrne.w	r0, r0, #1
 8000bb8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bbc:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000bc0:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000bc4:	ea40 000c 	orr.w	r0, r0, ip
 8000bc8:	fa23 f302 	lsr.w	r3, r3, r2
 8000bcc:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000bd0:	e7cc      	b.n	8000b6c <__aeabi_d2f+0x14>
 8000bd2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000bd6:	d107      	bne.n	8000be8 <__aeabi_d2f+0x90>
 8000bd8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000bdc:	bf1e      	ittt	ne
 8000bde:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000be2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000be6:	4770      	bxne	lr
 8000be8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000bec:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000bf0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bf4:	4770      	bx	lr
 8000bf6:	bf00      	nop

08000bf8 <__aeabi_ldivmod>:
 8000bf8:	b97b      	cbnz	r3, 8000c1a <__aeabi_ldivmod+0x22>
 8000bfa:	b972      	cbnz	r2, 8000c1a <__aeabi_ldivmod+0x22>
 8000bfc:	2900      	cmp	r1, #0
 8000bfe:	bfbe      	ittt	lt
 8000c00:	2000      	movlt	r0, #0
 8000c02:	f04f 4100 	movlt.w	r1, #2147483648	; 0x80000000
 8000c06:	e006      	blt.n	8000c16 <__aeabi_ldivmod+0x1e>
 8000c08:	bf08      	it	eq
 8000c0a:	2800      	cmpeq	r0, #0
 8000c0c:	bf1c      	itt	ne
 8000c0e:	f06f 4100 	mvnne.w	r1, #2147483648	; 0x80000000
 8000c12:	f04f 30ff 	movne.w	r0, #4294967295
 8000c16:	f000 b9bb 	b.w	8000f90 <__aeabi_idiv0>
 8000c1a:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c1e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c22:	2900      	cmp	r1, #0
 8000c24:	db09      	blt.n	8000c3a <__aeabi_ldivmod+0x42>
 8000c26:	2b00      	cmp	r3, #0
 8000c28:	db1a      	blt.n	8000c60 <__aeabi_ldivmod+0x68>
 8000c2a:	f000 f84d 	bl	8000cc8 <__udivmoddi4>
 8000c2e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c32:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c36:	b004      	add	sp, #16
 8000c38:	4770      	bx	lr
 8000c3a:	4240      	negs	r0, r0
 8000c3c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c40:	2b00      	cmp	r3, #0
 8000c42:	db1b      	blt.n	8000c7c <__aeabi_ldivmod+0x84>
 8000c44:	f000 f840 	bl	8000cc8 <__udivmoddi4>
 8000c48:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c4c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c50:	b004      	add	sp, #16
 8000c52:	4240      	negs	r0, r0
 8000c54:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c58:	4252      	negs	r2, r2
 8000c5a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000c5e:	4770      	bx	lr
 8000c60:	4252      	negs	r2, r2
 8000c62:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000c66:	f000 f82f 	bl	8000cc8 <__udivmoddi4>
 8000c6a:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c6e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c72:	b004      	add	sp, #16
 8000c74:	4240      	negs	r0, r0
 8000c76:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c7a:	4770      	bx	lr
 8000c7c:	4252      	negs	r2, r2
 8000c7e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000c82:	f000 f821 	bl	8000cc8 <__udivmoddi4>
 8000c86:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c8a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c8e:	b004      	add	sp, #16
 8000c90:	4252      	negs	r2, r2
 8000c92:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000c96:	4770      	bx	lr

08000c98 <__aeabi_uldivmod>:
 8000c98:	b953      	cbnz	r3, 8000cb0 <__aeabi_uldivmod+0x18>
 8000c9a:	b94a      	cbnz	r2, 8000cb0 <__aeabi_uldivmod+0x18>
 8000c9c:	2900      	cmp	r1, #0
 8000c9e:	bf08      	it	eq
 8000ca0:	2800      	cmpeq	r0, #0
 8000ca2:	bf1c      	itt	ne
 8000ca4:	f04f 31ff 	movne.w	r1, #4294967295
 8000ca8:	f04f 30ff 	movne.w	r0, #4294967295
 8000cac:	f000 b970 	b.w	8000f90 <__aeabi_idiv0>
 8000cb0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000cb4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000cb8:	f000 f806 	bl	8000cc8 <__udivmoddi4>
 8000cbc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cc0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cc4:	b004      	add	sp, #16
 8000cc6:	4770      	bx	lr

08000cc8 <__udivmoddi4>:
 8000cc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ccc:	9e08      	ldr	r6, [sp, #32]
 8000cce:	460d      	mov	r5, r1
 8000cd0:	4604      	mov	r4, r0
 8000cd2:	460f      	mov	r7, r1
 8000cd4:	2b00      	cmp	r3, #0
 8000cd6:	d14a      	bne.n	8000d6e <__udivmoddi4+0xa6>
 8000cd8:	428a      	cmp	r2, r1
 8000cda:	4694      	mov	ip, r2
 8000cdc:	d965      	bls.n	8000daa <__udivmoddi4+0xe2>
 8000cde:	fab2 f382 	clz	r3, r2
 8000ce2:	b143      	cbz	r3, 8000cf6 <__udivmoddi4+0x2e>
 8000ce4:	fa02 fc03 	lsl.w	ip, r2, r3
 8000ce8:	f1c3 0220 	rsb	r2, r3, #32
 8000cec:	409f      	lsls	r7, r3
 8000cee:	fa20 f202 	lsr.w	r2, r0, r2
 8000cf2:	4317      	orrs	r7, r2
 8000cf4:	409c      	lsls	r4, r3
 8000cf6:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000cfa:	fa1f f58c 	uxth.w	r5, ip
 8000cfe:	fbb7 f1fe 	udiv	r1, r7, lr
 8000d02:	0c22      	lsrs	r2, r4, #16
 8000d04:	fb0e 7711 	mls	r7, lr, r1, r7
 8000d08:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000d0c:	fb01 f005 	mul.w	r0, r1, r5
 8000d10:	4290      	cmp	r0, r2
 8000d12:	d90a      	bls.n	8000d2a <__udivmoddi4+0x62>
 8000d14:	eb1c 0202 	adds.w	r2, ip, r2
 8000d18:	f101 37ff 	add.w	r7, r1, #4294967295
 8000d1c:	f080 811c 	bcs.w	8000f58 <__udivmoddi4+0x290>
 8000d20:	4290      	cmp	r0, r2
 8000d22:	f240 8119 	bls.w	8000f58 <__udivmoddi4+0x290>
 8000d26:	3902      	subs	r1, #2
 8000d28:	4462      	add	r2, ip
 8000d2a:	1a12      	subs	r2, r2, r0
 8000d2c:	b2a4      	uxth	r4, r4
 8000d2e:	fbb2 f0fe 	udiv	r0, r2, lr
 8000d32:	fb0e 2210 	mls	r2, lr, r0, r2
 8000d36:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000d3a:	fb00 f505 	mul.w	r5, r0, r5
 8000d3e:	42a5      	cmp	r5, r4
 8000d40:	d90a      	bls.n	8000d58 <__udivmoddi4+0x90>
 8000d42:	eb1c 0404 	adds.w	r4, ip, r4
 8000d46:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d4a:	f080 8107 	bcs.w	8000f5c <__udivmoddi4+0x294>
 8000d4e:	42a5      	cmp	r5, r4
 8000d50:	f240 8104 	bls.w	8000f5c <__udivmoddi4+0x294>
 8000d54:	4464      	add	r4, ip
 8000d56:	3802      	subs	r0, #2
 8000d58:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000d5c:	1b64      	subs	r4, r4, r5
 8000d5e:	2100      	movs	r1, #0
 8000d60:	b11e      	cbz	r6, 8000d6a <__udivmoddi4+0xa2>
 8000d62:	40dc      	lsrs	r4, r3
 8000d64:	2300      	movs	r3, #0
 8000d66:	e9c6 4300 	strd	r4, r3, [r6]
 8000d6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d6e:	428b      	cmp	r3, r1
 8000d70:	d908      	bls.n	8000d84 <__udivmoddi4+0xbc>
 8000d72:	2e00      	cmp	r6, #0
 8000d74:	f000 80ed 	beq.w	8000f52 <__udivmoddi4+0x28a>
 8000d78:	2100      	movs	r1, #0
 8000d7a:	e9c6 0500 	strd	r0, r5, [r6]
 8000d7e:	4608      	mov	r0, r1
 8000d80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d84:	fab3 f183 	clz	r1, r3
 8000d88:	2900      	cmp	r1, #0
 8000d8a:	d149      	bne.n	8000e20 <__udivmoddi4+0x158>
 8000d8c:	42ab      	cmp	r3, r5
 8000d8e:	d302      	bcc.n	8000d96 <__udivmoddi4+0xce>
 8000d90:	4282      	cmp	r2, r0
 8000d92:	f200 80f8 	bhi.w	8000f86 <__udivmoddi4+0x2be>
 8000d96:	1a84      	subs	r4, r0, r2
 8000d98:	eb65 0203 	sbc.w	r2, r5, r3
 8000d9c:	2001      	movs	r0, #1
 8000d9e:	4617      	mov	r7, r2
 8000da0:	2e00      	cmp	r6, #0
 8000da2:	d0e2      	beq.n	8000d6a <__udivmoddi4+0xa2>
 8000da4:	e9c6 4700 	strd	r4, r7, [r6]
 8000da8:	e7df      	b.n	8000d6a <__udivmoddi4+0xa2>
 8000daa:	b902      	cbnz	r2, 8000dae <__udivmoddi4+0xe6>
 8000dac:	deff      	udf	#255	; 0xff
 8000dae:	fab2 f382 	clz	r3, r2
 8000db2:	2b00      	cmp	r3, #0
 8000db4:	f040 8090 	bne.w	8000ed8 <__udivmoddi4+0x210>
 8000db8:	1a8a      	subs	r2, r1, r2
 8000dba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000dbe:	fa1f fe8c 	uxth.w	lr, ip
 8000dc2:	2101      	movs	r1, #1
 8000dc4:	fbb2 f5f7 	udiv	r5, r2, r7
 8000dc8:	fb07 2015 	mls	r0, r7, r5, r2
 8000dcc:	0c22      	lsrs	r2, r4, #16
 8000dce:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000dd2:	fb0e f005 	mul.w	r0, lr, r5
 8000dd6:	4290      	cmp	r0, r2
 8000dd8:	d908      	bls.n	8000dec <__udivmoddi4+0x124>
 8000dda:	eb1c 0202 	adds.w	r2, ip, r2
 8000dde:	f105 38ff 	add.w	r8, r5, #4294967295
 8000de2:	d202      	bcs.n	8000dea <__udivmoddi4+0x122>
 8000de4:	4290      	cmp	r0, r2
 8000de6:	f200 80cb 	bhi.w	8000f80 <__udivmoddi4+0x2b8>
 8000dea:	4645      	mov	r5, r8
 8000dec:	1a12      	subs	r2, r2, r0
 8000dee:	b2a4      	uxth	r4, r4
 8000df0:	fbb2 f0f7 	udiv	r0, r2, r7
 8000df4:	fb07 2210 	mls	r2, r7, r0, r2
 8000df8:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000dfc:	fb0e fe00 	mul.w	lr, lr, r0
 8000e00:	45a6      	cmp	lr, r4
 8000e02:	d908      	bls.n	8000e16 <__udivmoddi4+0x14e>
 8000e04:	eb1c 0404 	adds.w	r4, ip, r4
 8000e08:	f100 32ff 	add.w	r2, r0, #4294967295
 8000e0c:	d202      	bcs.n	8000e14 <__udivmoddi4+0x14c>
 8000e0e:	45a6      	cmp	lr, r4
 8000e10:	f200 80bb 	bhi.w	8000f8a <__udivmoddi4+0x2c2>
 8000e14:	4610      	mov	r0, r2
 8000e16:	eba4 040e 	sub.w	r4, r4, lr
 8000e1a:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000e1e:	e79f      	b.n	8000d60 <__udivmoddi4+0x98>
 8000e20:	f1c1 0720 	rsb	r7, r1, #32
 8000e24:	408b      	lsls	r3, r1
 8000e26:	fa22 fc07 	lsr.w	ip, r2, r7
 8000e2a:	ea4c 0c03 	orr.w	ip, ip, r3
 8000e2e:	fa05 f401 	lsl.w	r4, r5, r1
 8000e32:	fa20 f307 	lsr.w	r3, r0, r7
 8000e36:	40fd      	lsrs	r5, r7
 8000e38:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000e3c:	4323      	orrs	r3, r4
 8000e3e:	fbb5 f8f9 	udiv	r8, r5, r9
 8000e42:	fa1f fe8c 	uxth.w	lr, ip
 8000e46:	fb09 5518 	mls	r5, r9, r8, r5
 8000e4a:	0c1c      	lsrs	r4, r3, #16
 8000e4c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000e50:	fb08 f50e 	mul.w	r5, r8, lr
 8000e54:	42a5      	cmp	r5, r4
 8000e56:	fa02 f201 	lsl.w	r2, r2, r1
 8000e5a:	fa00 f001 	lsl.w	r0, r0, r1
 8000e5e:	d90b      	bls.n	8000e78 <__udivmoddi4+0x1b0>
 8000e60:	eb1c 0404 	adds.w	r4, ip, r4
 8000e64:	f108 3aff 	add.w	sl, r8, #4294967295
 8000e68:	f080 8088 	bcs.w	8000f7c <__udivmoddi4+0x2b4>
 8000e6c:	42a5      	cmp	r5, r4
 8000e6e:	f240 8085 	bls.w	8000f7c <__udivmoddi4+0x2b4>
 8000e72:	f1a8 0802 	sub.w	r8, r8, #2
 8000e76:	4464      	add	r4, ip
 8000e78:	1b64      	subs	r4, r4, r5
 8000e7a:	b29d      	uxth	r5, r3
 8000e7c:	fbb4 f3f9 	udiv	r3, r4, r9
 8000e80:	fb09 4413 	mls	r4, r9, r3, r4
 8000e84:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000e88:	fb03 fe0e 	mul.w	lr, r3, lr
 8000e8c:	45a6      	cmp	lr, r4
 8000e8e:	d908      	bls.n	8000ea2 <__udivmoddi4+0x1da>
 8000e90:	eb1c 0404 	adds.w	r4, ip, r4
 8000e94:	f103 35ff 	add.w	r5, r3, #4294967295
 8000e98:	d26c      	bcs.n	8000f74 <__udivmoddi4+0x2ac>
 8000e9a:	45a6      	cmp	lr, r4
 8000e9c:	d96a      	bls.n	8000f74 <__udivmoddi4+0x2ac>
 8000e9e:	3b02      	subs	r3, #2
 8000ea0:	4464      	add	r4, ip
 8000ea2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000ea6:	fba3 9502 	umull	r9, r5, r3, r2
 8000eaa:	eba4 040e 	sub.w	r4, r4, lr
 8000eae:	42ac      	cmp	r4, r5
 8000eb0:	46c8      	mov	r8, r9
 8000eb2:	46ae      	mov	lr, r5
 8000eb4:	d356      	bcc.n	8000f64 <__udivmoddi4+0x29c>
 8000eb6:	d053      	beq.n	8000f60 <__udivmoddi4+0x298>
 8000eb8:	b156      	cbz	r6, 8000ed0 <__udivmoddi4+0x208>
 8000eba:	ebb0 0208 	subs.w	r2, r0, r8
 8000ebe:	eb64 040e 	sbc.w	r4, r4, lr
 8000ec2:	fa04 f707 	lsl.w	r7, r4, r7
 8000ec6:	40ca      	lsrs	r2, r1
 8000ec8:	40cc      	lsrs	r4, r1
 8000eca:	4317      	orrs	r7, r2
 8000ecc:	e9c6 7400 	strd	r7, r4, [r6]
 8000ed0:	4618      	mov	r0, r3
 8000ed2:	2100      	movs	r1, #0
 8000ed4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ed8:	f1c3 0120 	rsb	r1, r3, #32
 8000edc:	fa02 fc03 	lsl.w	ip, r2, r3
 8000ee0:	fa20 f201 	lsr.w	r2, r0, r1
 8000ee4:	fa25 f101 	lsr.w	r1, r5, r1
 8000ee8:	409d      	lsls	r5, r3
 8000eea:	432a      	orrs	r2, r5
 8000eec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ef0:	fa1f fe8c 	uxth.w	lr, ip
 8000ef4:	fbb1 f0f7 	udiv	r0, r1, r7
 8000ef8:	fb07 1510 	mls	r5, r7, r0, r1
 8000efc:	0c11      	lsrs	r1, r2, #16
 8000efe:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000f02:	fb00 f50e 	mul.w	r5, r0, lr
 8000f06:	428d      	cmp	r5, r1
 8000f08:	fa04 f403 	lsl.w	r4, r4, r3
 8000f0c:	d908      	bls.n	8000f20 <__udivmoddi4+0x258>
 8000f0e:	eb1c 0101 	adds.w	r1, ip, r1
 8000f12:	f100 38ff 	add.w	r8, r0, #4294967295
 8000f16:	d22f      	bcs.n	8000f78 <__udivmoddi4+0x2b0>
 8000f18:	428d      	cmp	r5, r1
 8000f1a:	d92d      	bls.n	8000f78 <__udivmoddi4+0x2b0>
 8000f1c:	3802      	subs	r0, #2
 8000f1e:	4461      	add	r1, ip
 8000f20:	1b49      	subs	r1, r1, r5
 8000f22:	b292      	uxth	r2, r2
 8000f24:	fbb1 f5f7 	udiv	r5, r1, r7
 8000f28:	fb07 1115 	mls	r1, r7, r5, r1
 8000f2c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f30:	fb05 f10e 	mul.w	r1, r5, lr
 8000f34:	4291      	cmp	r1, r2
 8000f36:	d908      	bls.n	8000f4a <__udivmoddi4+0x282>
 8000f38:	eb1c 0202 	adds.w	r2, ip, r2
 8000f3c:	f105 38ff 	add.w	r8, r5, #4294967295
 8000f40:	d216      	bcs.n	8000f70 <__udivmoddi4+0x2a8>
 8000f42:	4291      	cmp	r1, r2
 8000f44:	d914      	bls.n	8000f70 <__udivmoddi4+0x2a8>
 8000f46:	3d02      	subs	r5, #2
 8000f48:	4462      	add	r2, ip
 8000f4a:	1a52      	subs	r2, r2, r1
 8000f4c:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000f50:	e738      	b.n	8000dc4 <__udivmoddi4+0xfc>
 8000f52:	4631      	mov	r1, r6
 8000f54:	4630      	mov	r0, r6
 8000f56:	e708      	b.n	8000d6a <__udivmoddi4+0xa2>
 8000f58:	4639      	mov	r1, r7
 8000f5a:	e6e6      	b.n	8000d2a <__udivmoddi4+0x62>
 8000f5c:	4610      	mov	r0, r2
 8000f5e:	e6fb      	b.n	8000d58 <__udivmoddi4+0x90>
 8000f60:	4548      	cmp	r0, r9
 8000f62:	d2a9      	bcs.n	8000eb8 <__udivmoddi4+0x1f0>
 8000f64:	ebb9 0802 	subs.w	r8, r9, r2
 8000f68:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000f6c:	3b01      	subs	r3, #1
 8000f6e:	e7a3      	b.n	8000eb8 <__udivmoddi4+0x1f0>
 8000f70:	4645      	mov	r5, r8
 8000f72:	e7ea      	b.n	8000f4a <__udivmoddi4+0x282>
 8000f74:	462b      	mov	r3, r5
 8000f76:	e794      	b.n	8000ea2 <__udivmoddi4+0x1da>
 8000f78:	4640      	mov	r0, r8
 8000f7a:	e7d1      	b.n	8000f20 <__udivmoddi4+0x258>
 8000f7c:	46d0      	mov	r8, sl
 8000f7e:	e77b      	b.n	8000e78 <__udivmoddi4+0x1b0>
 8000f80:	3d02      	subs	r5, #2
 8000f82:	4462      	add	r2, ip
 8000f84:	e732      	b.n	8000dec <__udivmoddi4+0x124>
 8000f86:	4608      	mov	r0, r1
 8000f88:	e70a      	b.n	8000da0 <__udivmoddi4+0xd8>
 8000f8a:	4464      	add	r4, ip
 8000f8c:	3802      	subs	r0, #2
 8000f8e:	e742      	b.n	8000e16 <__udivmoddi4+0x14e>

08000f90 <__aeabi_idiv0>:
 8000f90:	4770      	bx	lr
 8000f92:	bf00      	nop

08000f94 <TrimRead>:



// Read the Trimming parameters saved in the NVM ROM of the device
void TrimRead(void)
{
 8000f94:	b580      	push	{r7, lr}
 8000f96:	b08c      	sub	sp, #48	; 0x30
 8000f98:	af04      	add	r7, sp, #16
	uint8_t trimdata[32];
	// Read NVM from 0x88 to 0xA1
	HAL_I2C_Mem_Read(BMP280_I2C, BMP280_ADDRESS, 0x88, 1, trimdata, 25, HAL_MAX_DELAY);
 8000f9a:	f04f 33ff 	mov.w	r3, #4294967295
 8000f9e:	9302      	str	r3, [sp, #8]
 8000fa0:	2319      	movs	r3, #25
 8000fa2:	9301      	str	r3, [sp, #4]
 8000fa4:	463b      	mov	r3, r7
 8000fa6:	9300      	str	r3, [sp, #0]
 8000fa8:	2301      	movs	r3, #1
 8000faa:	2288      	movs	r2, #136	; 0x88
 8000fac:	21ec      	movs	r1, #236	; 0xec
 8000fae:	4857      	ldr	r0, [pc, #348]	; (800110c <TrimRead+0x178>)
 8000fb0:	f004 fd3e 	bl	8005a30 <HAL_I2C_Mem_Read>

	// Read NVM from 0xE1 to 0xE7
	HAL_I2C_Mem_Read(BMP280_I2C, BMP280_ADDRESS, 0xE1, 1, (uint8_t *)trimdata+25, 7, HAL_MAX_DELAY);
 8000fb4:	463b      	mov	r3, r7
 8000fb6:	3319      	adds	r3, #25
 8000fb8:	f04f 32ff 	mov.w	r2, #4294967295
 8000fbc:	9202      	str	r2, [sp, #8]
 8000fbe:	2207      	movs	r2, #7
 8000fc0:	9201      	str	r2, [sp, #4]
 8000fc2:	9300      	str	r3, [sp, #0]
 8000fc4:	2301      	movs	r3, #1
 8000fc6:	22e1      	movs	r2, #225	; 0xe1
 8000fc8:	21ec      	movs	r1, #236	; 0xec
 8000fca:	4850      	ldr	r0, [pc, #320]	; (800110c <TrimRead+0x178>)
 8000fcc:	f004 fd30 	bl	8005a30 <HAL_I2C_Mem_Read>

	// Arrange the data as per the datasheet (page no. 24)
	dig_T1 = (trimdata[1]<<8) | trimdata[0];
 8000fd0:	787b      	ldrb	r3, [r7, #1]
 8000fd2:	021b      	lsls	r3, r3, #8
 8000fd4:	b21a      	sxth	r2, r3
 8000fd6:	783b      	ldrb	r3, [r7, #0]
 8000fd8:	b21b      	sxth	r3, r3
 8000fda:	4313      	orrs	r3, r2
 8000fdc:	b21b      	sxth	r3, r3
 8000fde:	b29a      	uxth	r2, r3
 8000fe0:	4b4b      	ldr	r3, [pc, #300]	; (8001110 <TrimRead+0x17c>)
 8000fe2:	801a      	strh	r2, [r3, #0]
	dig_T2 = (trimdata[3]<<8) | trimdata[2];
 8000fe4:	78fb      	ldrb	r3, [r7, #3]
 8000fe6:	021b      	lsls	r3, r3, #8
 8000fe8:	b21a      	sxth	r2, r3
 8000fea:	78bb      	ldrb	r3, [r7, #2]
 8000fec:	b21b      	sxth	r3, r3
 8000fee:	4313      	orrs	r3, r2
 8000ff0:	b21a      	sxth	r2, r3
 8000ff2:	4b48      	ldr	r3, [pc, #288]	; (8001114 <TrimRead+0x180>)
 8000ff4:	801a      	strh	r2, [r3, #0]
	dig_T3 = (trimdata[5]<<8) | trimdata[4];
 8000ff6:	797b      	ldrb	r3, [r7, #5]
 8000ff8:	021b      	lsls	r3, r3, #8
 8000ffa:	b21a      	sxth	r2, r3
 8000ffc:	793b      	ldrb	r3, [r7, #4]
 8000ffe:	b21b      	sxth	r3, r3
 8001000:	4313      	orrs	r3, r2
 8001002:	b21a      	sxth	r2, r3
 8001004:	4b44      	ldr	r3, [pc, #272]	; (8001118 <TrimRead+0x184>)
 8001006:	801a      	strh	r2, [r3, #0]
	dig_P1 = (trimdata[7]<<8) | trimdata[5];
 8001008:	79fb      	ldrb	r3, [r7, #7]
 800100a:	021b      	lsls	r3, r3, #8
 800100c:	b21a      	sxth	r2, r3
 800100e:	797b      	ldrb	r3, [r7, #5]
 8001010:	b21b      	sxth	r3, r3
 8001012:	4313      	orrs	r3, r2
 8001014:	b21b      	sxth	r3, r3
 8001016:	b29a      	uxth	r2, r3
 8001018:	4b40      	ldr	r3, [pc, #256]	; (800111c <TrimRead+0x188>)
 800101a:	801a      	strh	r2, [r3, #0]
	dig_P2 = (trimdata[9]<<8) | trimdata[6];
 800101c:	7a7b      	ldrb	r3, [r7, #9]
 800101e:	021b      	lsls	r3, r3, #8
 8001020:	b21a      	sxth	r2, r3
 8001022:	79bb      	ldrb	r3, [r7, #6]
 8001024:	b21b      	sxth	r3, r3
 8001026:	4313      	orrs	r3, r2
 8001028:	b21a      	sxth	r2, r3
 800102a:	4b3d      	ldr	r3, [pc, #244]	; (8001120 <TrimRead+0x18c>)
 800102c:	801a      	strh	r2, [r3, #0]
	dig_P3 = (trimdata[11]<<8) | trimdata[10];
 800102e:	7afb      	ldrb	r3, [r7, #11]
 8001030:	021b      	lsls	r3, r3, #8
 8001032:	b21a      	sxth	r2, r3
 8001034:	7abb      	ldrb	r3, [r7, #10]
 8001036:	b21b      	sxth	r3, r3
 8001038:	4313      	orrs	r3, r2
 800103a:	b21a      	sxth	r2, r3
 800103c:	4b39      	ldr	r3, [pc, #228]	; (8001124 <TrimRead+0x190>)
 800103e:	801a      	strh	r2, [r3, #0]
	dig_P4 = (trimdata[13]<<8) | trimdata[12];
 8001040:	7b7b      	ldrb	r3, [r7, #13]
 8001042:	021b      	lsls	r3, r3, #8
 8001044:	b21a      	sxth	r2, r3
 8001046:	7b3b      	ldrb	r3, [r7, #12]
 8001048:	b21b      	sxth	r3, r3
 800104a:	4313      	orrs	r3, r2
 800104c:	b21a      	sxth	r2, r3
 800104e:	4b36      	ldr	r3, [pc, #216]	; (8001128 <TrimRead+0x194>)
 8001050:	801a      	strh	r2, [r3, #0]
	dig_P5 = (trimdata[15]<<8) | trimdata[14];
 8001052:	7bfb      	ldrb	r3, [r7, #15]
 8001054:	021b      	lsls	r3, r3, #8
 8001056:	b21a      	sxth	r2, r3
 8001058:	7bbb      	ldrb	r3, [r7, #14]
 800105a:	b21b      	sxth	r3, r3
 800105c:	4313      	orrs	r3, r2
 800105e:	b21a      	sxth	r2, r3
 8001060:	4b32      	ldr	r3, [pc, #200]	; (800112c <TrimRead+0x198>)
 8001062:	801a      	strh	r2, [r3, #0]
	dig_P6 = (trimdata[17]<<8) | trimdata[16];
 8001064:	7c7b      	ldrb	r3, [r7, #17]
 8001066:	021b      	lsls	r3, r3, #8
 8001068:	b21a      	sxth	r2, r3
 800106a:	7c3b      	ldrb	r3, [r7, #16]
 800106c:	b21b      	sxth	r3, r3
 800106e:	4313      	orrs	r3, r2
 8001070:	b21a      	sxth	r2, r3
 8001072:	4b2f      	ldr	r3, [pc, #188]	; (8001130 <TrimRead+0x19c>)
 8001074:	801a      	strh	r2, [r3, #0]
	dig_P7 = (trimdata[19]<<8) | trimdata[18];
 8001076:	7cfb      	ldrb	r3, [r7, #19]
 8001078:	021b      	lsls	r3, r3, #8
 800107a:	b21a      	sxth	r2, r3
 800107c:	7cbb      	ldrb	r3, [r7, #18]
 800107e:	b21b      	sxth	r3, r3
 8001080:	4313      	orrs	r3, r2
 8001082:	b21a      	sxth	r2, r3
 8001084:	4b2b      	ldr	r3, [pc, #172]	; (8001134 <TrimRead+0x1a0>)
 8001086:	801a      	strh	r2, [r3, #0]
	dig_P8 = (trimdata[21]<<8) | trimdata[20];
 8001088:	7d7b      	ldrb	r3, [r7, #21]
 800108a:	021b      	lsls	r3, r3, #8
 800108c:	b21a      	sxth	r2, r3
 800108e:	7d3b      	ldrb	r3, [r7, #20]
 8001090:	b21b      	sxth	r3, r3
 8001092:	4313      	orrs	r3, r2
 8001094:	b21a      	sxth	r2, r3
 8001096:	4b28      	ldr	r3, [pc, #160]	; (8001138 <TrimRead+0x1a4>)
 8001098:	801a      	strh	r2, [r3, #0]
	dig_P9 = (trimdata[23]<<8) | trimdata[22];
 800109a:	7dfb      	ldrb	r3, [r7, #23]
 800109c:	021b      	lsls	r3, r3, #8
 800109e:	b21a      	sxth	r2, r3
 80010a0:	7dbb      	ldrb	r3, [r7, #22]
 80010a2:	b21b      	sxth	r3, r3
 80010a4:	4313      	orrs	r3, r2
 80010a6:	b21a      	sxth	r2, r3
 80010a8:	4b24      	ldr	r3, [pc, #144]	; (800113c <TrimRead+0x1a8>)
 80010aa:	801a      	strh	r2, [r3, #0]
	dig_H1 = trimdata[24];
 80010ac:	7e3b      	ldrb	r3, [r7, #24]
 80010ae:	b29a      	uxth	r2, r3
 80010b0:	4b23      	ldr	r3, [pc, #140]	; (8001140 <TrimRead+0x1ac>)
 80010b2:	801a      	strh	r2, [r3, #0]
	dig_H2 = (trimdata[26]<<8) | trimdata[25];
 80010b4:	7ebb      	ldrb	r3, [r7, #26]
 80010b6:	021b      	lsls	r3, r3, #8
 80010b8:	b21a      	sxth	r2, r3
 80010ba:	7e7b      	ldrb	r3, [r7, #25]
 80010bc:	b21b      	sxth	r3, r3
 80010be:	4313      	orrs	r3, r2
 80010c0:	b21a      	sxth	r2, r3
 80010c2:	4b20      	ldr	r3, [pc, #128]	; (8001144 <TrimRead+0x1b0>)
 80010c4:	801a      	strh	r2, [r3, #0]
	dig_H3 = (trimdata[27]);
 80010c6:	7efb      	ldrb	r3, [r7, #27]
 80010c8:	b29a      	uxth	r2, r3
 80010ca:	4b1f      	ldr	r3, [pc, #124]	; (8001148 <TrimRead+0x1b4>)
 80010cc:	801a      	strh	r2, [r3, #0]
	dig_H4 = (trimdata[28]<<4) | (trimdata[29] & 0x0f);
 80010ce:	7f3b      	ldrb	r3, [r7, #28]
 80010d0:	011b      	lsls	r3, r3, #4
 80010d2:	b21a      	sxth	r2, r3
 80010d4:	7f7b      	ldrb	r3, [r7, #29]
 80010d6:	b21b      	sxth	r3, r3
 80010d8:	f003 030f 	and.w	r3, r3, #15
 80010dc:	b21b      	sxth	r3, r3
 80010de:	4313      	orrs	r3, r2
 80010e0:	b21a      	sxth	r2, r3
 80010e2:	4b1a      	ldr	r3, [pc, #104]	; (800114c <TrimRead+0x1b8>)
 80010e4:	801a      	strh	r2, [r3, #0]
	dig_H5 = (trimdata[30]<<4) | (trimdata[29]>>4);
 80010e6:	7fbb      	ldrb	r3, [r7, #30]
 80010e8:	011b      	lsls	r3, r3, #4
 80010ea:	b21a      	sxth	r2, r3
 80010ec:	7f7b      	ldrb	r3, [r7, #29]
 80010ee:	091b      	lsrs	r3, r3, #4
 80010f0:	b2db      	uxtb	r3, r3
 80010f2:	b21b      	sxth	r3, r3
 80010f4:	4313      	orrs	r3, r2
 80010f6:	b21a      	sxth	r2, r3
 80010f8:	4b15      	ldr	r3, [pc, #84]	; (8001150 <TrimRead+0x1bc>)
 80010fa:	801a      	strh	r2, [r3, #0]
	dig_H6 = (trimdata[31]);
 80010fc:	7ffb      	ldrb	r3, [r7, #31]
 80010fe:	b21a      	sxth	r2, r3
 8001100:	4b14      	ldr	r3, [pc, #80]	; (8001154 <TrimRead+0x1c0>)
 8001102:	801a      	strh	r2, [r3, #0]
}
 8001104:	bf00      	nop
 8001106:	3720      	adds	r7, #32
 8001108:	46bd      	mov	sp, r7
 800110a:	bd80      	pop	{r7, pc}
 800110c:	200001b0 	.word	0x200001b0
 8001110:	20000128 	.word	0x20000128
 8001114:	20000130 	.word	0x20000130
 8001118:	20000132 	.word	0x20000132
 800111c:	2000012a 	.word	0x2000012a
 8001120:	20000134 	.word	0x20000134
 8001124:	20000136 	.word	0x20000136
 8001128:	20000138 	.word	0x20000138
 800112c:	2000013a 	.word	0x2000013a
 8001130:	2000013c 	.word	0x2000013c
 8001134:	2000013e 	.word	0x2000013e
 8001138:	20000140 	.word	0x20000140
 800113c:	20000142 	.word	0x20000142
 8001140:	2000012c 	.word	0x2000012c
 8001144:	20000144 	.word	0x20000144
 8001148:	2000012e 	.word	0x2000012e
 800114c:	20000146 	.word	0x20000146
 8001150:	20000148 	.word	0x20000148
 8001154:	2000014a 	.word	0x2000014a

08001158 <BMP280_Config>:


int BMP280_Config (uint8_t osrs_t, uint8_t osrs_p, uint8_t osrs_h, uint8_t mode, uint8_t t_sb, uint8_t filter)
{
 8001158:	b590      	push	{r4, r7, lr}
 800115a:	b089      	sub	sp, #36	; 0x24
 800115c:	af04      	add	r7, sp, #16
 800115e:	4604      	mov	r4, r0
 8001160:	4608      	mov	r0, r1
 8001162:	4611      	mov	r1, r2
 8001164:	461a      	mov	r2, r3
 8001166:	4623      	mov	r3, r4
 8001168:	71fb      	strb	r3, [r7, #7]
 800116a:	4603      	mov	r3, r0
 800116c:	71bb      	strb	r3, [r7, #6]
 800116e:	460b      	mov	r3, r1
 8001170:	717b      	strb	r3, [r7, #5]
 8001172:	4613      	mov	r3, r2
 8001174:	713b      	strb	r3, [r7, #4]
	// Read the Trimming parameters
	TrimRead();
 8001176:	f7ff ff0d 	bl	8000f94 <TrimRead>


	uint8_t datatowrite = 0;
 800117a:	2300      	movs	r3, #0
 800117c:	73fb      	strb	r3, [r7, #15]
	uint8_t datacheck = 0;
 800117e:	2300      	movs	r3, #0
 8001180:	73bb      	strb	r3, [r7, #14]

	// Reset the device
	datatowrite = 0xB6;  // reset sequence
 8001182:	23b6      	movs	r3, #182	; 0xb6
 8001184:	73fb      	strb	r3, [r7, #15]
	if (HAL_I2C_Mem_Write(BMP280_I2C, BMP280_ADDRESS, RESET_REG, 1, &datatowrite, 1, 1000) != HAL_OK)
 8001186:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800118a:	9302      	str	r3, [sp, #8]
 800118c:	2301      	movs	r3, #1
 800118e:	9301      	str	r3, [sp, #4]
 8001190:	f107 030f 	add.w	r3, r7, #15
 8001194:	9300      	str	r3, [sp, #0]
 8001196:	2301      	movs	r3, #1
 8001198:	22e0      	movs	r2, #224	; 0xe0
 800119a:	21ec      	movs	r1, #236	; 0xec
 800119c:	4858      	ldr	r0, [pc, #352]	; (8001300 <BMP280_Config+0x1a8>)
 800119e:	f004 fb4d 	bl	800583c <HAL_I2C_Mem_Write>
 80011a2:	4603      	mov	r3, r0
 80011a4:	2b00      	cmp	r3, #0
 80011a6:	d002      	beq.n	80011ae <BMP280_Config+0x56>
	{
		return -1;
 80011a8:	f04f 33ff 	mov.w	r3, #4294967295
 80011ac:	e0a3      	b.n	80012f6 <BMP280_Config+0x19e>
	}

	HAL_Delay (100);
 80011ae:	2064      	movs	r0, #100	; 0x64
 80011b0:	f002 fc7e 	bl	8003ab0 <HAL_Delay>


	// write the humidity oversampling to 0xF2
	datatowrite = osrs_h;
 80011b4:	797b      	ldrb	r3, [r7, #5]
 80011b6:	73fb      	strb	r3, [r7, #15]
	if (HAL_I2C_Mem_Write(BMP280_I2C, BMP280_ADDRESS, CTRL_HUM_REG, 1, &datatowrite, 1, 1000) != HAL_OK)
 80011b8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80011bc:	9302      	str	r3, [sp, #8]
 80011be:	2301      	movs	r3, #1
 80011c0:	9301      	str	r3, [sp, #4]
 80011c2:	f107 030f 	add.w	r3, r7, #15
 80011c6:	9300      	str	r3, [sp, #0]
 80011c8:	2301      	movs	r3, #1
 80011ca:	22f2      	movs	r2, #242	; 0xf2
 80011cc:	21ec      	movs	r1, #236	; 0xec
 80011ce:	484c      	ldr	r0, [pc, #304]	; (8001300 <BMP280_Config+0x1a8>)
 80011d0:	f004 fb34 	bl	800583c <HAL_I2C_Mem_Write>
 80011d4:	4603      	mov	r3, r0
 80011d6:	2b00      	cmp	r3, #0
 80011d8:	d002      	beq.n	80011e0 <BMP280_Config+0x88>
	{
		return -2;
 80011da:	f06f 0301 	mvn.w	r3, #1
 80011de:	e08a      	b.n	80012f6 <BMP280_Config+0x19e>
	}
	HAL_Delay (100);
 80011e0:	2064      	movs	r0, #100	; 0x64
 80011e2:	f002 fc65 	bl	8003ab0 <HAL_Delay>
	HAL_I2C_Mem_Read(BMP280_I2C, BMP280_ADDRESS, CTRL_HUM_REG, 1, &datacheck, 1, 1000);
 80011e6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80011ea:	9302      	str	r3, [sp, #8]
 80011ec:	2301      	movs	r3, #1
 80011ee:	9301      	str	r3, [sp, #4]
 80011f0:	f107 030e 	add.w	r3, r7, #14
 80011f4:	9300      	str	r3, [sp, #0]
 80011f6:	2301      	movs	r3, #1
 80011f8:	22f2      	movs	r2, #242	; 0xf2
 80011fa:	21ec      	movs	r1, #236	; 0xec
 80011fc:	4840      	ldr	r0, [pc, #256]	; (8001300 <BMP280_Config+0x1a8>)
 80011fe:	f004 fc17 	bl	8005a30 <HAL_I2C_Mem_Read>
	if (datacheck != datatowrite)
 8001202:	7bba      	ldrb	r2, [r7, #14]
 8001204:	7bfb      	ldrb	r3, [r7, #15]
 8001206:	429a      	cmp	r2, r3
 8001208:	d002      	beq.n	8001210 <BMP280_Config+0xb8>
	{
		return -3;
 800120a:	f06f 0302 	mvn.w	r3, #2
 800120e:	e072      	b.n	80012f6 <BMP280_Config+0x19e>
	}


	// write the standby time and IIR filter coeff to 0xF5
	datatowrite = (t_sb <<5) |(filter << 2);
 8001210:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001214:	015b      	lsls	r3, r3, #5
 8001216:	b25a      	sxtb	r2, r3
 8001218:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800121c:	009b      	lsls	r3, r3, #2
 800121e:	b25b      	sxtb	r3, r3
 8001220:	4313      	orrs	r3, r2
 8001222:	b25b      	sxtb	r3, r3
 8001224:	b2db      	uxtb	r3, r3
 8001226:	73fb      	strb	r3, [r7, #15]
	if (HAL_I2C_Mem_Write(BMP280_I2C, BMP280_ADDRESS, CONFIG_REG, 1, &datatowrite, 1, 1000) != HAL_OK)
 8001228:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800122c:	9302      	str	r3, [sp, #8]
 800122e:	2301      	movs	r3, #1
 8001230:	9301      	str	r3, [sp, #4]
 8001232:	f107 030f 	add.w	r3, r7, #15
 8001236:	9300      	str	r3, [sp, #0]
 8001238:	2301      	movs	r3, #1
 800123a:	22f5      	movs	r2, #245	; 0xf5
 800123c:	21ec      	movs	r1, #236	; 0xec
 800123e:	4830      	ldr	r0, [pc, #192]	; (8001300 <BMP280_Config+0x1a8>)
 8001240:	f004 fafc 	bl	800583c <HAL_I2C_Mem_Write>
 8001244:	4603      	mov	r3, r0
 8001246:	2b00      	cmp	r3, #0
 8001248:	d002      	beq.n	8001250 <BMP280_Config+0xf8>
	{
		return -4;
 800124a:	f06f 0303 	mvn.w	r3, #3
 800124e:	e052      	b.n	80012f6 <BMP280_Config+0x19e>
	}
	HAL_Delay (100);
 8001250:	2064      	movs	r0, #100	; 0x64
 8001252:	f002 fc2d 	bl	8003ab0 <HAL_Delay>
	HAL_I2C_Mem_Read(BMP280_I2C, BMP280_ADDRESS, CONFIG_REG, 1, &datacheck, 1, 1000);
 8001256:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800125a:	9302      	str	r3, [sp, #8]
 800125c:	2301      	movs	r3, #1
 800125e:	9301      	str	r3, [sp, #4]
 8001260:	f107 030e 	add.w	r3, r7, #14
 8001264:	9300      	str	r3, [sp, #0]
 8001266:	2301      	movs	r3, #1
 8001268:	22f5      	movs	r2, #245	; 0xf5
 800126a:	21ec      	movs	r1, #236	; 0xec
 800126c:	4824      	ldr	r0, [pc, #144]	; (8001300 <BMP280_Config+0x1a8>)
 800126e:	f004 fbdf 	bl	8005a30 <HAL_I2C_Mem_Read>
	if (datacheck != datatowrite)
 8001272:	7bba      	ldrb	r2, [r7, #14]
 8001274:	7bfb      	ldrb	r3, [r7, #15]
 8001276:	429a      	cmp	r2, r3
 8001278:	d002      	beq.n	8001280 <BMP280_Config+0x128>
	{
		return -5;
 800127a:	f06f 0304 	mvn.w	r3, #4
 800127e:	e03a      	b.n	80012f6 <BMP280_Config+0x19e>
	}


	// write the pressure and temp oversampling along with mode to 0xF4
	datatowrite = (osrs_t <<5) |(osrs_p << 2) | mode;
 8001280:	79fb      	ldrb	r3, [r7, #7]
 8001282:	015b      	lsls	r3, r3, #5
 8001284:	b25a      	sxtb	r2, r3
 8001286:	79bb      	ldrb	r3, [r7, #6]
 8001288:	009b      	lsls	r3, r3, #2
 800128a:	b25b      	sxtb	r3, r3
 800128c:	4313      	orrs	r3, r2
 800128e:	b25a      	sxtb	r2, r3
 8001290:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8001294:	4313      	orrs	r3, r2
 8001296:	b25b      	sxtb	r3, r3
 8001298:	b2db      	uxtb	r3, r3
 800129a:	73fb      	strb	r3, [r7, #15]
	if (HAL_I2C_Mem_Write(BMP280_I2C, BMP280_ADDRESS, CTRL_MEAS_REG, 1, &datatowrite, 1, 1000) != HAL_OK)
 800129c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80012a0:	9302      	str	r3, [sp, #8]
 80012a2:	2301      	movs	r3, #1
 80012a4:	9301      	str	r3, [sp, #4]
 80012a6:	f107 030f 	add.w	r3, r7, #15
 80012aa:	9300      	str	r3, [sp, #0]
 80012ac:	2301      	movs	r3, #1
 80012ae:	22f4      	movs	r2, #244	; 0xf4
 80012b0:	21ec      	movs	r1, #236	; 0xec
 80012b2:	4813      	ldr	r0, [pc, #76]	; (8001300 <BMP280_Config+0x1a8>)
 80012b4:	f004 fac2 	bl	800583c <HAL_I2C_Mem_Write>
 80012b8:	4603      	mov	r3, r0
 80012ba:	2b00      	cmp	r3, #0
 80012bc:	d002      	beq.n	80012c4 <BMP280_Config+0x16c>
	{
		return -6;
 80012be:	f06f 0305 	mvn.w	r3, #5
 80012c2:	e018      	b.n	80012f6 <BMP280_Config+0x19e>
	}
	HAL_Delay (100);
 80012c4:	2064      	movs	r0, #100	; 0x64
 80012c6:	f002 fbf3 	bl	8003ab0 <HAL_Delay>
	HAL_I2C_Mem_Read(BMP280_I2C, BMP280_ADDRESS, CTRL_MEAS_REG, 1, &datacheck, 1, 1000);
 80012ca:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80012ce:	9302      	str	r3, [sp, #8]
 80012d0:	2301      	movs	r3, #1
 80012d2:	9301      	str	r3, [sp, #4]
 80012d4:	f107 030e 	add.w	r3, r7, #14
 80012d8:	9300      	str	r3, [sp, #0]
 80012da:	2301      	movs	r3, #1
 80012dc:	22f4      	movs	r2, #244	; 0xf4
 80012de:	21ec      	movs	r1, #236	; 0xec
 80012e0:	4807      	ldr	r0, [pc, #28]	; (8001300 <BMP280_Config+0x1a8>)
 80012e2:	f004 fba5 	bl	8005a30 <HAL_I2C_Mem_Read>
	if (datacheck != datatowrite)
 80012e6:	7bba      	ldrb	r2, [r7, #14]
 80012e8:	7bfb      	ldrb	r3, [r7, #15]
 80012ea:	429a      	cmp	r2, r3
 80012ec:	d002      	beq.n	80012f4 <BMP280_Config+0x19c>
	{
		return -7;
 80012ee:	f06f 0306 	mvn.w	r3, #6
 80012f2:	e000      	b.n	80012f6 <BMP280_Config+0x19e>
	}

	return 0;
 80012f4:	2300      	movs	r3, #0
}
 80012f6:	4618      	mov	r0, r3
 80012f8:	3714      	adds	r7, #20
 80012fa:	46bd      	mov	sp, r7
 80012fc:	bd90      	pop	{r4, r7, pc}
 80012fe:	bf00      	nop
 8001300:	200001b0 	.word	0x200001b0

08001304 <BMPReadRaw>:


int BMPReadRaw(void)
{
 8001304:	b580      	push	{r7, lr}
 8001306:	b086      	sub	sp, #24
 8001308:	af04      	add	r7, sp, #16
	uint8_t RawData[6];

	// Check the chip ID before reading
	HAL_I2C_Mem_Read(&hi2c1, BMP280_ADDRESS, ID_REG, 1, &chipID, 1, 1000);
 800130a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800130e:	9302      	str	r3, [sp, #8]
 8001310:	2301      	movs	r3, #1
 8001312:	9301      	str	r3, [sp, #4]
 8001314:	4b1c      	ldr	r3, [pc, #112]	; (8001388 <BMPReadRaw+0x84>)
 8001316:	9300      	str	r3, [sp, #0]
 8001318:	2301      	movs	r3, #1
 800131a:	22d0      	movs	r2, #208	; 0xd0
 800131c:	21ec      	movs	r1, #236	; 0xec
 800131e:	481b      	ldr	r0, [pc, #108]	; (800138c <BMPReadRaw+0x88>)
 8001320:	f004 fb86 	bl	8005a30 <HAL_I2C_Mem_Read>

	if (chipID == 0x58)
 8001324:	4b18      	ldr	r3, [pc, #96]	; (8001388 <BMPReadRaw+0x84>)
 8001326:	781b      	ldrb	r3, [r3, #0]
 8001328:	2b58      	cmp	r3, #88	; 0x58
 800132a:	d127      	bne.n	800137c <BMPReadRaw+0x78>
	{
		// Read the Registers 0xF7 to 0xFE
		HAL_I2C_Mem_Read(BMP280_I2C, BMP280_ADDRESS, PRESS_MSB_REG, 1, RawData, 6, HAL_MAX_DELAY);
 800132c:	f04f 33ff 	mov.w	r3, #4294967295
 8001330:	9302      	str	r3, [sp, #8]
 8001332:	2306      	movs	r3, #6
 8001334:	9301      	str	r3, [sp, #4]
 8001336:	463b      	mov	r3, r7
 8001338:	9300      	str	r3, [sp, #0]
 800133a:	2301      	movs	r3, #1
 800133c:	22f7      	movs	r2, #247	; 0xf7
 800133e:	21ec      	movs	r1, #236	; 0xec
 8001340:	4812      	ldr	r0, [pc, #72]	; (800138c <BMPReadRaw+0x88>)
 8001342:	f004 fb75 	bl	8005a30 <HAL_I2C_Mem_Read>

		/* Calculate the Raw data for the parameters
		 * Here the Pressure and Temperature are in 20 bit format and humidity in 16 bit format
		 */
		pRaw = (RawData[0]<<12)|(RawData[1]<<4)|(RawData[2]>>4);
 8001346:	783b      	ldrb	r3, [r7, #0]
 8001348:	031a      	lsls	r2, r3, #12
 800134a:	787b      	ldrb	r3, [r7, #1]
 800134c:	011b      	lsls	r3, r3, #4
 800134e:	4313      	orrs	r3, r2
 8001350:	78ba      	ldrb	r2, [r7, #2]
 8001352:	0912      	lsrs	r2, r2, #4
 8001354:	b2d2      	uxtb	r2, r2
 8001356:	4313      	orrs	r3, r2
 8001358:	4a0d      	ldr	r2, [pc, #52]	; (8001390 <BMPReadRaw+0x8c>)
 800135a:	6013      	str	r3, [r2, #0]
		tRaw = (RawData[3]<<12)|(RawData[4]<<4)|(RawData[5]>>4);
 800135c:	78fb      	ldrb	r3, [r7, #3]
 800135e:	031a      	lsls	r2, r3, #12
 8001360:	793b      	ldrb	r3, [r7, #4]
 8001362:	011b      	lsls	r3, r3, #4
 8001364:	4313      	orrs	r3, r2
 8001366:	797a      	ldrb	r2, [r7, #5]
 8001368:	0912      	lsrs	r2, r2, #4
 800136a:	b2d2      	uxtb	r2, r2
 800136c:	4313      	orrs	r3, r2
 800136e:	4a09      	ldr	r2, [pc, #36]	; (8001394 <BMPReadRaw+0x90>)
 8001370:	6013      	str	r3, [r2, #0]
		hRaw = 0;
 8001372:	4b09      	ldr	r3, [pc, #36]	; (8001398 <BMPReadRaw+0x94>)
 8001374:	2200      	movs	r2, #0
 8001376:	601a      	str	r2, [r3, #0]

		return 0;
 8001378:	2300      	movs	r3, #0
 800137a:	e001      	b.n	8001380 <BMPReadRaw+0x7c>
	}

	else return -1;
 800137c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001380:	4618      	mov	r0, r3
 8001382:	3708      	adds	r7, #8
 8001384:	46bd      	mov	sp, r7
 8001386:	bd80      	pop	{r7, pc}
 8001388:	20000118 	.word	0x20000118
 800138c:	200001b0 	.word	0x200001b0
 8001390:	20000120 	.word	0x20000120
 8001394:	2000011c 	.word	0x2000011c
 8001398:	20000124 	.word	0x20000124

0800139c <BMP280_compensate_P_int64>:
#if SUPPORT_64BIT
/* Returns pressure in Pa as unsigned 32 bit integer in Q24.8 format (24 integer bits and 8 fractional bits).
   Output value of “24674867” represents 24674867/256 = 96386.2 Pa = 963.862 hPa
*/
uint32_t BMP280_compensate_P_int64(int32_t adc_P)
{
 800139c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80013a0:	b0ca      	sub	sp, #296	; 0x128
 80013a2:	af00      	add	r7, sp, #0
 80013a4:	f8c7 010c 	str.w	r0, [r7, #268]	; 0x10c
	int64_t var1, var2, p;
	var1 = ((int64_t)t_fine) - 128000;
 80013a8:	4baf      	ldr	r3, [pc, #700]	; (8001668 <BMP280_compensate_P_int64+0x2cc>)
 80013aa:	681b      	ldr	r3, [r3, #0]
 80013ac:	17da      	asrs	r2, r3, #31
 80013ae:	461c      	mov	r4, r3
 80013b0:	4615      	mov	r5, r2
 80013b2:	f5b4 3afa 	subs.w	sl, r4, #128000	; 0x1f400
 80013b6:	f145 3bff 	adc.w	fp, r5, #4294967295
 80013ba:	e9c7 ab48 	strd	sl, fp, [r7, #288]	; 0x120
	var2 = var1 * var1 * (int64_t)dig_P6;
 80013be:	f8d7 2124 	ldr.w	r2, [r7, #292]	; 0x124
 80013c2:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 80013c6:	fb03 f102 	mul.w	r1, r3, r2
 80013ca:	f8d7 2124 	ldr.w	r2, [r7, #292]	; 0x124
 80013ce:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 80013d2:	fb02 f303 	mul.w	r3, r2, r3
 80013d6:	18ca      	adds	r2, r1, r3
 80013d8:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 80013dc:	fba3 8903 	umull	r8, r9, r3, r3
 80013e0:	eb02 0309 	add.w	r3, r2, r9
 80013e4:	4699      	mov	r9, r3
 80013e6:	4ba1      	ldr	r3, [pc, #644]	; (800166c <BMP280_compensate_P_int64+0x2d0>)
 80013e8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80013ec:	b21b      	sxth	r3, r3
 80013ee:	17da      	asrs	r2, r3, #31
 80013f0:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 80013f4:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 80013f8:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	; 0xb8
 80013fc:	4603      	mov	r3, r0
 80013fe:	fb03 f209 	mul.w	r2, r3, r9
 8001402:	460b      	mov	r3, r1
 8001404:	fb08 f303 	mul.w	r3, r8, r3
 8001408:	4413      	add	r3, r2
 800140a:	4602      	mov	r2, r0
 800140c:	fba8 1202 	umull	r1, r2, r8, r2
 8001410:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 8001414:	460a      	mov	r2, r1
 8001416:	f8c7 20c0 	str.w	r2, [r7, #192]	; 0xc0
 800141a:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800141e:	4413      	add	r3, r2
 8001420:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8001424:	e9d7 3430 	ldrd	r3, r4, [r7, #192]	; 0xc0
 8001428:	e9c7 3446 	strd	r3, r4, [r7, #280]	; 0x118
 800142c:	e9c7 3446 	strd	r3, r4, [r7, #280]	; 0x118
	var2 = var2 + ((var1*(int64_t)dig_P5)<<17);
 8001430:	4b8f      	ldr	r3, [pc, #572]	; (8001670 <BMP280_compensate_P_int64+0x2d4>)
 8001432:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001436:	b21b      	sxth	r3, r3
 8001438:	17da      	asrs	r2, r3, #31
 800143a:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800143e:	f8c7 20b4 	str.w	r2, [r7, #180]	; 0xb4
 8001442:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 8001446:	e9d7 452c 	ldrd	r4, r5, [r7, #176]	; 0xb0
 800144a:	462a      	mov	r2, r5
 800144c:	fb02 f203 	mul.w	r2, r2, r3
 8001450:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8001454:	4621      	mov	r1, r4
 8001456:	fb01 f303 	mul.w	r3, r1, r3
 800145a:	441a      	add	r2, r3
 800145c:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 8001460:	4621      	mov	r1, r4
 8001462:	fba3 1301 	umull	r1, r3, r3, r1
 8001466:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 800146a:	460b      	mov	r3, r1
 800146c:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
 8001470:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8001474:	18d3      	adds	r3, r2, r3
 8001476:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 800147a:	f04f 0000 	mov.w	r0, #0
 800147e:	f04f 0100 	mov.w	r1, #0
 8001482:	e9d7 4540 	ldrd	r4, r5, [r7, #256]	; 0x100
 8001486:	462b      	mov	r3, r5
 8001488:	0459      	lsls	r1, r3, #17
 800148a:	4623      	mov	r3, r4
 800148c:	ea41 31d3 	orr.w	r1, r1, r3, lsr #15
 8001490:	4623      	mov	r3, r4
 8001492:	0458      	lsls	r0, r3, #17
 8001494:	e9d7 2346 	ldrd	r2, r3, [r7, #280]	; 0x118
 8001498:	1814      	adds	r4, r2, r0
 800149a:	643c      	str	r4, [r7, #64]	; 0x40
 800149c:	414b      	adcs	r3, r1
 800149e:	647b      	str	r3, [r7, #68]	; 0x44
 80014a0:	e9d7 3410 	ldrd	r3, r4, [r7, #64]	; 0x40
 80014a4:	e9c7 3446 	strd	r3, r4, [r7, #280]	; 0x118
	var2 = var2 + (((int64_t)dig_P4)<<35);
 80014a8:	4b72      	ldr	r3, [pc, #456]	; (8001674 <BMP280_compensate_P_int64+0x2d8>)
 80014aa:	f9b3 3000 	ldrsh.w	r3, [r3]
 80014ae:	b21b      	sxth	r3, r3
 80014b0:	17da      	asrs	r2, r3, #31
 80014b2:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 80014b6:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 80014ba:	f04f 0000 	mov.w	r0, #0
 80014be:	f04f 0100 	mov.w	r1, #0
 80014c2:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 80014c6:	00d9      	lsls	r1, r3, #3
 80014c8:	2000      	movs	r0, #0
 80014ca:	e9d7 2346 	ldrd	r2, r3, [r7, #280]	; 0x118
 80014ce:	1814      	adds	r4, r2, r0
 80014d0:	63bc      	str	r4, [r7, #56]	; 0x38
 80014d2:	414b      	adcs	r3, r1
 80014d4:	63fb      	str	r3, [r7, #60]	; 0x3c
 80014d6:	e9d7 340e 	ldrd	r3, r4, [r7, #56]	; 0x38
 80014da:	e9c7 3446 	strd	r3, r4, [r7, #280]	; 0x118
	var1 = ((var1 * var1 * (int64_t)dig_P3)>>8) + ((var1 * (int64_t)dig_P2)<<12);
 80014de:	f8d7 2124 	ldr.w	r2, [r7, #292]	; 0x124
 80014e2:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 80014e6:	fb03 f102 	mul.w	r1, r3, r2
 80014ea:	f8d7 2124 	ldr.w	r2, [r7, #292]	; 0x124
 80014ee:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 80014f2:	fb02 f303 	mul.w	r3, r2, r3
 80014f6:	18ca      	adds	r2, r1, r3
 80014f8:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 80014fc:	fba3 1303 	umull	r1, r3, r3, r3
 8001500:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 8001504:	460b      	mov	r3, r1
 8001506:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800150a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800150e:	18d3      	adds	r3, r2, r3
 8001510:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 8001514:	4b58      	ldr	r3, [pc, #352]	; (8001678 <BMP280_compensate_P_int64+0x2dc>)
 8001516:	f9b3 3000 	ldrsh.w	r3, [r3]
 800151a:	b21b      	sxth	r3, r3
 800151c:	17da      	asrs	r2, r3, #31
 800151e:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8001522:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 8001526:	e9d7 453e 	ldrd	r4, r5, [r7, #248]	; 0xf8
 800152a:	462b      	mov	r3, r5
 800152c:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 8001530:	4642      	mov	r2, r8
 8001532:	fb02 f203 	mul.w	r2, r2, r3
 8001536:	464b      	mov	r3, r9
 8001538:	4621      	mov	r1, r4
 800153a:	fb01 f303 	mul.w	r3, r1, r3
 800153e:	4413      	add	r3, r2
 8001540:	4622      	mov	r2, r4
 8001542:	4641      	mov	r1, r8
 8001544:	fba2 1201 	umull	r1, r2, r2, r1
 8001548:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
 800154c:	460a      	mov	r2, r1
 800154e:	f8c7 20f0 	str.w	r2, [r7, #240]	; 0xf0
 8001552:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
 8001556:	4413      	add	r3, r2
 8001558:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
 800155c:	f04f 0000 	mov.w	r0, #0
 8001560:	f04f 0100 	mov.w	r1, #0
 8001564:	e9d7 453c 	ldrd	r4, r5, [r7, #240]	; 0xf0
 8001568:	4623      	mov	r3, r4
 800156a:	0a18      	lsrs	r0, r3, #8
 800156c:	462b      	mov	r3, r5
 800156e:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
 8001572:	462b      	mov	r3, r5
 8001574:	1219      	asrs	r1, r3, #8
 8001576:	4b41      	ldr	r3, [pc, #260]	; (800167c <BMP280_compensate_P_int64+0x2e0>)
 8001578:	f9b3 3000 	ldrsh.w	r3, [r3]
 800157c:	b21b      	sxth	r3, r3
 800157e:	17da      	asrs	r2, r3, #31
 8001580:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8001584:	f8c7 209c 	str.w	r2, [r7, #156]	; 0x9c
 8001588:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 800158c:	e9d7 8926 	ldrd	r8, r9, [r7, #152]	; 0x98
 8001590:	464a      	mov	r2, r9
 8001592:	fb02 f203 	mul.w	r2, r2, r3
 8001596:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 800159a:	4644      	mov	r4, r8
 800159c:	fb04 f303 	mul.w	r3, r4, r3
 80015a0:	441a      	add	r2, r3
 80015a2:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 80015a6:	4644      	mov	r4, r8
 80015a8:	fba3 4304 	umull	r4, r3, r3, r4
 80015ac:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 80015b0:	4623      	mov	r3, r4
 80015b2:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 80015b6:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 80015ba:	18d3      	adds	r3, r2, r3
 80015bc:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 80015c0:	f04f 0200 	mov.w	r2, #0
 80015c4:	f04f 0300 	mov.w	r3, #0
 80015c8:	e9d7 893a 	ldrd	r8, r9, [r7, #232]	; 0xe8
 80015cc:	464c      	mov	r4, r9
 80015ce:	0323      	lsls	r3, r4, #12
 80015d0:	4644      	mov	r4, r8
 80015d2:	ea43 5314 	orr.w	r3, r3, r4, lsr #20
 80015d6:	4644      	mov	r4, r8
 80015d8:	0322      	lsls	r2, r4, #12
 80015da:	1884      	adds	r4, r0, r2
 80015dc:	633c      	str	r4, [r7, #48]	; 0x30
 80015de:	eb41 0303 	adc.w	r3, r1, r3
 80015e2:	637b      	str	r3, [r7, #52]	; 0x34
 80015e4:	e9d7 340c 	ldrd	r3, r4, [r7, #48]	; 0x30
 80015e8:	e9c7 3448 	strd	r3, r4, [r7, #288]	; 0x120
	var1 = (((((int64_t)1)<<47)+var1))*((int64_t)dig_P1)>>33;
 80015ec:	e9d7 2348 	ldrd	r2, r3, [r7, #288]	; 0x120
 80015f0:	f503 4100 	add.w	r1, r3, #32768	; 0x8000
 80015f4:	f8c7 1094 	str.w	r1, [r7, #148]	; 0x94
 80015f8:	f8c7 2090 	str.w	r2, [r7, #144]	; 0x90
 80015fc:	4b20      	ldr	r3, [pc, #128]	; (8001680 <BMP280_compensate_P_int64+0x2e4>)
 80015fe:	881b      	ldrh	r3, [r3, #0]
 8001600:	b29b      	uxth	r3, r3
 8001602:	2200      	movs	r2, #0
 8001604:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8001608:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800160c:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8001610:	462b      	mov	r3, r5
 8001612:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 8001616:	4642      	mov	r2, r8
 8001618:	fb02 f203 	mul.w	r2, r2, r3
 800161c:	464b      	mov	r3, r9
 800161e:	4621      	mov	r1, r4
 8001620:	fb01 f303 	mul.w	r3, r1, r3
 8001624:	4413      	add	r3, r2
 8001626:	4622      	mov	r2, r4
 8001628:	4641      	mov	r1, r8
 800162a:	fba2 1201 	umull	r1, r2, r2, r1
 800162e:	f8c7 20e4 	str.w	r2, [r7, #228]	; 0xe4
 8001632:	460a      	mov	r2, r1
 8001634:	f8c7 20e0 	str.w	r2, [r7, #224]	; 0xe0
 8001638:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
 800163c:	4413      	add	r3, r2
 800163e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8001642:	f04f 0200 	mov.w	r2, #0
 8001646:	f04f 0300 	mov.w	r3, #0
 800164a:	e9d7 4538 	ldrd	r4, r5, [r7, #224]	; 0xe0
 800164e:	4629      	mov	r1, r5
 8001650:	104a      	asrs	r2, r1, #1
 8001652:	4629      	mov	r1, r5
 8001654:	17cb      	asrs	r3, r1, #31
 8001656:	e9c7 2348 	strd	r2, r3, [r7, #288]	; 0x120
	if (var1 == 0)
 800165a:	e9d7 2348 	ldrd	r2, r3, [r7, #288]	; 0x120
 800165e:	4313      	orrs	r3, r2
 8001660:	d110      	bne.n	8001684 <BMP280_compensate_P_int64+0x2e8>
	{
		return 0; // avoid exception caused by division by zero
 8001662:	2300      	movs	r3, #0
 8001664:	e154      	b.n	8001910 <BMP280_compensate_P_int64+0x574>
 8001666:	bf00      	nop
 8001668:	2000014c 	.word	0x2000014c
 800166c:	2000013c 	.word	0x2000013c
 8001670:	2000013a 	.word	0x2000013a
 8001674:	20000138 	.word	0x20000138
 8001678:	20000136 	.word	0x20000136
 800167c:	20000134 	.word	0x20000134
 8001680:	2000012a 	.word	0x2000012a
	}
	p = 1048576-adc_P;
 8001684:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8001688:	f5c3 1380 	rsb	r3, r3, #1048576	; 0x100000
 800168c:	17da      	asrs	r2, r3, #31
 800168e:	62bb      	str	r3, [r7, #40]	; 0x28
 8001690:	62fa      	str	r2, [r7, #44]	; 0x2c
 8001692:	e9d7 340a 	ldrd	r3, r4, [r7, #40]	; 0x28
 8001696:	e9c7 3444 	strd	r3, r4, [r7, #272]	; 0x110
	p = (((p<<31)-var2)*3125)/var1;
 800169a:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 800169e:	105b      	asrs	r3, r3, #1
 80016a0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80016a4:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 80016a8:	07db      	lsls	r3, r3, #31
 80016aa:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 80016ae:	e9d7 2346 	ldrd	r2, r3, [r7, #280]	; 0x118
 80016b2:	e9d7 4520 	ldrd	r4, r5, [r7, #128]	; 0x80
 80016b6:	4621      	mov	r1, r4
 80016b8:	1a89      	subs	r1, r1, r2
 80016ba:	67b9      	str	r1, [r7, #120]	; 0x78
 80016bc:	4629      	mov	r1, r5
 80016be:	eb61 0303 	sbc.w	r3, r1, r3
 80016c2:	67fb      	str	r3, [r7, #124]	; 0x7c
 80016c4:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	; 0x78
 80016c8:	4622      	mov	r2, r4
 80016ca:	462b      	mov	r3, r5
 80016cc:	1891      	adds	r1, r2, r2
 80016ce:	6239      	str	r1, [r7, #32]
 80016d0:	415b      	adcs	r3, r3
 80016d2:	627b      	str	r3, [r7, #36]	; 0x24
 80016d4:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80016d8:	4621      	mov	r1, r4
 80016da:	1851      	adds	r1, r2, r1
 80016dc:	61b9      	str	r1, [r7, #24]
 80016de:	4629      	mov	r1, r5
 80016e0:	414b      	adcs	r3, r1
 80016e2:	61fb      	str	r3, [r7, #28]
 80016e4:	f04f 0200 	mov.w	r2, #0
 80016e8:	f04f 0300 	mov.w	r3, #0
 80016ec:	e9d7 8906 	ldrd	r8, r9, [r7, #24]
 80016f0:	4649      	mov	r1, r9
 80016f2:	018b      	lsls	r3, r1, #6
 80016f4:	4641      	mov	r1, r8
 80016f6:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80016fa:	4641      	mov	r1, r8
 80016fc:	018a      	lsls	r2, r1, #6
 80016fe:	4641      	mov	r1, r8
 8001700:	1889      	adds	r1, r1, r2
 8001702:	6139      	str	r1, [r7, #16]
 8001704:	4649      	mov	r1, r9
 8001706:	eb43 0101 	adc.w	r1, r3, r1
 800170a:	6179      	str	r1, [r7, #20]
 800170c:	f04f 0200 	mov.w	r2, #0
 8001710:	f04f 0300 	mov.w	r3, #0
 8001714:	e9d7 8904 	ldrd	r8, r9, [r7, #16]
 8001718:	4649      	mov	r1, r9
 800171a:	008b      	lsls	r3, r1, #2
 800171c:	4641      	mov	r1, r8
 800171e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8001722:	4641      	mov	r1, r8
 8001724:	008a      	lsls	r2, r1, #2
 8001726:	4610      	mov	r0, r2
 8001728:	4619      	mov	r1, r3
 800172a:	4603      	mov	r3, r0
 800172c:	4622      	mov	r2, r4
 800172e:	189b      	adds	r3, r3, r2
 8001730:	60bb      	str	r3, [r7, #8]
 8001732:	460b      	mov	r3, r1
 8001734:	462a      	mov	r2, r5
 8001736:	eb42 0303 	adc.w	r3, r2, r3
 800173a:	60fb      	str	r3, [r7, #12]
 800173c:	f04f 0200 	mov.w	r2, #0
 8001740:	f04f 0300 	mov.w	r3, #0
 8001744:	e9d7 8902 	ldrd	r8, r9, [r7, #8]
 8001748:	4649      	mov	r1, r9
 800174a:	008b      	lsls	r3, r1, #2
 800174c:	4641      	mov	r1, r8
 800174e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8001752:	4641      	mov	r1, r8
 8001754:	008a      	lsls	r2, r1, #2
 8001756:	4610      	mov	r0, r2
 8001758:	4619      	mov	r1, r3
 800175a:	4603      	mov	r3, r0
 800175c:	4622      	mov	r2, r4
 800175e:	189b      	adds	r3, r3, r2
 8001760:	673b      	str	r3, [r7, #112]	; 0x70
 8001762:	462b      	mov	r3, r5
 8001764:	460a      	mov	r2, r1
 8001766:	eb42 0303 	adc.w	r3, r2, r3
 800176a:	677b      	str	r3, [r7, #116]	; 0x74
 800176c:	e9d7 2348 	ldrd	r2, r3, [r7, #288]	; 0x120
 8001770:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	; 0x70
 8001774:	f7ff fa40 	bl	8000bf8 <__aeabi_ldivmod>
 8001778:	4602      	mov	r2, r0
 800177a:	460b      	mov	r3, r1
 800177c:	e9c7 2344 	strd	r2, r3, [r7, #272]	; 0x110
	var1 = (((int64_t)dig_P9) * (p>>13) * (p>>13)) >> 25;
 8001780:	4b66      	ldr	r3, [pc, #408]	; (800191c <BMP280_compensate_P_int64+0x580>)
 8001782:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001786:	b21b      	sxth	r3, r3
 8001788:	17da      	asrs	r2, r3, #31
 800178a:	66bb      	str	r3, [r7, #104]	; 0x68
 800178c:	66fa      	str	r2, [r7, #108]	; 0x6c
 800178e:	e9d7 2344 	ldrd	r2, r3, [r7, #272]	; 0x110
 8001792:	f04f 0000 	mov.w	r0, #0
 8001796:	f04f 0100 	mov.w	r1, #0
 800179a:	0b50      	lsrs	r0, r2, #13
 800179c:	ea40 40c3 	orr.w	r0, r0, r3, lsl #19
 80017a0:	1359      	asrs	r1, r3, #13
 80017a2:	e9d7 451a 	ldrd	r4, r5, [r7, #104]	; 0x68
 80017a6:	462b      	mov	r3, r5
 80017a8:	fb00 f203 	mul.w	r2, r0, r3
 80017ac:	4623      	mov	r3, r4
 80017ae:	fb03 f301 	mul.w	r3, r3, r1
 80017b2:	4413      	add	r3, r2
 80017b4:	4622      	mov	r2, r4
 80017b6:	fba2 1200 	umull	r1, r2, r2, r0
 80017ba:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 80017be:	460a      	mov	r2, r1
 80017c0:	f8c7 20d8 	str.w	r2, [r7, #216]	; 0xd8
 80017c4:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 80017c8:	4413      	add	r3, r2
 80017ca:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 80017ce:	e9d7 2344 	ldrd	r2, r3, [r7, #272]	; 0x110
 80017d2:	f04f 0000 	mov.w	r0, #0
 80017d6:	f04f 0100 	mov.w	r1, #0
 80017da:	0b50      	lsrs	r0, r2, #13
 80017dc:	ea40 40c3 	orr.w	r0, r0, r3, lsl #19
 80017e0:	1359      	asrs	r1, r3, #13
 80017e2:	e9d7 4536 	ldrd	r4, r5, [r7, #216]	; 0xd8
 80017e6:	462b      	mov	r3, r5
 80017e8:	fb00 f203 	mul.w	r2, r0, r3
 80017ec:	4623      	mov	r3, r4
 80017ee:	fb03 f301 	mul.w	r3, r3, r1
 80017f2:	4413      	add	r3, r2
 80017f4:	4622      	mov	r2, r4
 80017f6:	fba2 1200 	umull	r1, r2, r2, r0
 80017fa:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 80017fe:	460a      	mov	r2, r1
 8001800:	f8c7 20d0 	str.w	r2, [r7, #208]	; 0xd0
 8001804:	f8d7 20d4 	ldr.w	r2, [r7, #212]	; 0xd4
 8001808:	4413      	add	r3, r2
 800180a:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800180e:	f04f 0200 	mov.w	r2, #0
 8001812:	f04f 0300 	mov.w	r3, #0
 8001816:	e9d7 4534 	ldrd	r4, r5, [r7, #208]	; 0xd0
 800181a:	4621      	mov	r1, r4
 800181c:	0e4a      	lsrs	r2, r1, #25
 800181e:	4629      	mov	r1, r5
 8001820:	ea42 12c1 	orr.w	r2, r2, r1, lsl #7
 8001824:	4629      	mov	r1, r5
 8001826:	164b      	asrs	r3, r1, #25
 8001828:	e9c7 2348 	strd	r2, r3, [r7, #288]	; 0x120
	var2 = (((int64_t)dig_P8) * p) >> 19;
 800182c:	4b3c      	ldr	r3, [pc, #240]	; (8001920 <BMP280_compensate_P_int64+0x584>)
 800182e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001832:	b21b      	sxth	r3, r3
 8001834:	17da      	asrs	r2, r3, #31
 8001836:	663b      	str	r3, [r7, #96]	; 0x60
 8001838:	667a      	str	r2, [r7, #100]	; 0x64
 800183a:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 800183e:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	; 0x60
 8001842:	462a      	mov	r2, r5
 8001844:	fb02 f203 	mul.w	r2, r2, r3
 8001848:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800184c:	4621      	mov	r1, r4
 800184e:	fb01 f303 	mul.w	r3, r1, r3
 8001852:	4413      	add	r3, r2
 8001854:	f8d7 2110 	ldr.w	r2, [r7, #272]	; 0x110
 8001858:	4621      	mov	r1, r4
 800185a:	fba2 1201 	umull	r1, r2, r2, r1
 800185e:	f8c7 20cc 	str.w	r2, [r7, #204]	; 0xcc
 8001862:	460a      	mov	r2, r1
 8001864:	f8c7 20c8 	str.w	r2, [r7, #200]	; 0xc8
 8001868:	f8d7 20cc 	ldr.w	r2, [r7, #204]	; 0xcc
 800186c:	4413      	add	r3, r2
 800186e:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8001872:	f04f 0200 	mov.w	r2, #0
 8001876:	f04f 0300 	mov.w	r3, #0
 800187a:	e9d7 4532 	ldrd	r4, r5, [r7, #200]	; 0xc8
 800187e:	4621      	mov	r1, r4
 8001880:	0cca      	lsrs	r2, r1, #19
 8001882:	4629      	mov	r1, r5
 8001884:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
 8001888:	4629      	mov	r1, r5
 800188a:	14cb      	asrs	r3, r1, #19
 800188c:	e9c7 2346 	strd	r2, r3, [r7, #280]	; 0x118
	p = ((p + var1 + var2) >> 8) + (((int64_t)dig_P7)<<4);
 8001890:	e9d7 0144 	ldrd	r0, r1, [r7, #272]	; 0x110
 8001894:	e9d7 2348 	ldrd	r2, r3, [r7, #288]	; 0x120
 8001898:	1884      	adds	r4, r0, r2
 800189a:	65bc      	str	r4, [r7, #88]	; 0x58
 800189c:	eb41 0303 	adc.w	r3, r1, r3
 80018a0:	65fb      	str	r3, [r7, #92]	; 0x5c
 80018a2:	e9d7 2346 	ldrd	r2, r3, [r7, #280]	; 0x118
 80018a6:	e9d7 4516 	ldrd	r4, r5, [r7, #88]	; 0x58
 80018aa:	4621      	mov	r1, r4
 80018ac:	1889      	adds	r1, r1, r2
 80018ae:	6539      	str	r1, [r7, #80]	; 0x50
 80018b0:	4629      	mov	r1, r5
 80018b2:	eb43 0101 	adc.w	r1, r3, r1
 80018b6:	6579      	str	r1, [r7, #84]	; 0x54
 80018b8:	f04f 0000 	mov.w	r0, #0
 80018bc:	f04f 0100 	mov.w	r1, #0
 80018c0:	e9d7 4514 	ldrd	r4, r5, [r7, #80]	; 0x50
 80018c4:	4623      	mov	r3, r4
 80018c6:	0a18      	lsrs	r0, r3, #8
 80018c8:	462b      	mov	r3, r5
 80018ca:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
 80018ce:	462b      	mov	r3, r5
 80018d0:	1219      	asrs	r1, r3, #8
 80018d2:	4b14      	ldr	r3, [pc, #80]	; (8001924 <BMP280_compensate_P_int64+0x588>)
 80018d4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80018d8:	b21b      	sxth	r3, r3
 80018da:	17da      	asrs	r2, r3, #31
 80018dc:	64bb      	str	r3, [r7, #72]	; 0x48
 80018de:	64fa      	str	r2, [r7, #76]	; 0x4c
 80018e0:	f04f 0200 	mov.w	r2, #0
 80018e4:	f04f 0300 	mov.w	r3, #0
 80018e8:	e9d7 8912 	ldrd	r8, r9, [r7, #72]	; 0x48
 80018ec:	464c      	mov	r4, r9
 80018ee:	0123      	lsls	r3, r4, #4
 80018f0:	4644      	mov	r4, r8
 80018f2:	ea43 7314 	orr.w	r3, r3, r4, lsr #28
 80018f6:	4644      	mov	r4, r8
 80018f8:	0122      	lsls	r2, r4, #4
 80018fa:	1884      	adds	r4, r0, r2
 80018fc:	603c      	str	r4, [r7, #0]
 80018fe:	eb41 0303 	adc.w	r3, r1, r3
 8001902:	607b      	str	r3, [r7, #4]
 8001904:	e9d7 3400 	ldrd	r3, r4, [r7]
 8001908:	e9c7 3444 	strd	r3, r4, [r7, #272]	; 0x110
	return (uint32_t)p;
 800190c:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
}
 8001910:	4618      	mov	r0, r3
 8001912:	f507 7794 	add.w	r7, r7, #296	; 0x128
 8001916:	46bd      	mov	sp, r7
 8001918:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800191c:	20000142 	.word	0x20000142
 8001920:	20000140 	.word	0x20000140
 8001924:	2000013e 	.word	0x2000013e

08001928 <BMP280_Measure>:

/* measure the temp, pressure and humidity
 * the values will be stored in the parameters passed to the function
 */
 float BMP280_Measure ()
{
 8001928:	b580      	push	{r7, lr}
 800192a:	af00      	add	r7, sp, #0
	if (BMPReadRaw() == 0)
 800192c:	f7ff fcea 	bl	8001304 <BMPReadRaw>
 8001930:	4603      	mov	r3, r0
 8001932:	2b00      	cmp	r3, #0
 8001934:	d121      	bne.n	800197a <BMP280_Measure+0x52>
//		  else
//		  {
//			  Temperature = (BMP280_compensate_T_int32 (tRaw))/100.0;  // as per datasheet, the temp is x100
//		  }

		  if (pRaw == 0x800000) Pressure = 0; // value in case temp measurement was disabled
 8001936:	4b16      	ldr	r3, [pc, #88]	; (8001990 <BMP280_Measure+0x68>)
 8001938:	681b      	ldr	r3, [r3, #0]
 800193a:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 800193e:	d104      	bne.n	800194a <BMP280_Measure+0x22>
 8001940:	4b14      	ldr	r3, [pc, #80]	; (8001994 <BMP280_Measure+0x6c>)
 8001942:	f04f 0200 	mov.w	r2, #0
 8001946:	601a      	str	r2, [r3, #0]
 8001948:	e01b      	b.n	8001982 <BMP280_Measure+0x5a>
		  else
		  {
//#if SUPPORT_64BIT
			  Pressure = (BMP280_compensate_P_int64 (pRaw))/256.0;  // as per datasheet, the pressure is x256
 800194a:	4b11      	ldr	r3, [pc, #68]	; (8001990 <BMP280_Measure+0x68>)
 800194c:	681b      	ldr	r3, [r3, #0]
 800194e:	4618      	mov	r0, r3
 8001950:	f7ff fd24 	bl	800139c <BMP280_compensate_P_int64>
 8001954:	4603      	mov	r3, r0
 8001956:	4618      	mov	r0, r3
 8001958:	f7fe fdd4 	bl	8000504 <__aeabi_ui2d>
 800195c:	f04f 0200 	mov.w	r2, #0
 8001960:	4b0d      	ldr	r3, [pc, #52]	; (8001998 <BMP280_Measure+0x70>)
 8001962:	f7fe ff73 	bl	800084c <__aeabi_ddiv>
 8001966:	4602      	mov	r2, r0
 8001968:	460b      	mov	r3, r1
 800196a:	4610      	mov	r0, r2
 800196c:	4619      	mov	r1, r3
 800196e:	f7ff f8f3 	bl	8000b58 <__aeabi_d2f>
 8001972:	4603      	mov	r3, r0
 8001974:	4a07      	ldr	r2, [pc, #28]	; (8001994 <BMP280_Measure+0x6c>)
 8001976:	6013      	str	r3, [r2, #0]
 8001978:	e003      	b.n	8001982 <BMP280_Measure+0x5a>

	// if the device is detached
	else
	{
//		Temperature = 0;
		Pressure = 0;
 800197a:	4b06      	ldr	r3, [pc, #24]	; (8001994 <BMP280_Measure+0x6c>)
 800197c:	f04f 0200 	mov.w	r2, #0
 8001980:	601a      	str	r2, [r3, #0]
//	    Humidity = 0;
	}
	return Pressure;
 8001982:	4b04      	ldr	r3, [pc, #16]	; (8001994 <BMP280_Measure+0x6c>)
 8001984:	681b      	ldr	r3, [r3, #0]
 8001986:	ee07 3a90 	vmov	s15, r3
}
 800198a:	eeb0 0a67 	vmov.f32	s0, s15
 800198e:	bd80      	pop	{r7, pc}
 8001990:	20000120 	.word	0x20000120
 8001994:	20000438 	.word	0x20000438
 8001998:	40700000 	.word	0x40700000

0800199c <LM75_Temperature_9Bit_ReadReg>:

#include "LM75.h"


float LM75_Temperature_9Bit_ReadReg( uint8_t reg ){
 800199c:	b580      	push	{r7, lr}
 800199e:	b086      	sub	sp, #24
 80019a0:	af02      	add	r7, sp, #8
 80019a2:	4603      	mov	r3, r0
 80019a4:	71fb      	strb	r3, [r7, #7]
	HAL_I2C_Master_Transmit( &MY_I2C, LM75_ADDRESS, &reg, 1, 500 );
 80019a6:	1dfa      	adds	r2, r7, #7
 80019a8:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80019ac:	9300      	str	r3, [sp, #0]
 80019ae:	2301      	movs	r3, #1
 80019b0:	2190      	movs	r1, #144	; 0x90
 80019b2:	481f      	ldr	r0, [pc, #124]	; (8001a30 <LM75_Temperature_9Bit_ReadReg+0x94>)
 80019b4:	f003 fc1e 	bl	80051f4 <HAL_I2C_Master_Transmit>
	uint16_t value;
	HAL_I2C_Master_Receive( &MY_I2C, LM75_ADDRESS, (uint8_t*)&value, 2, 500 );
 80019b8:	f107 020e 	add.w	r2, r7, #14
 80019bc:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80019c0:	9300      	str	r3, [sp, #0]
 80019c2:	2302      	movs	r3, #2
 80019c4:	2190      	movs	r1, #144	; 0x90
 80019c6:	481a      	ldr	r0, [pc, #104]	; (8001a30 <LM75_Temperature_9Bit_ReadReg+0x94>)
 80019c8:	f003 fd12 	bl	80053f0 <HAL_I2C_Master_Receive>
	value = ((( value >> 8 ) | ( value << 8 )) >> 7) & 0x01FF;
 80019cc:	89fb      	ldrh	r3, [r7, #14]
 80019ce:	0a1b      	lsrs	r3, r3, #8
 80019d0:	b29b      	uxth	r3, r3
 80019d2:	461a      	mov	r2, r3
 80019d4:	89fb      	ldrh	r3, [r7, #14]
 80019d6:	021b      	lsls	r3, r3, #8
 80019d8:	4313      	orrs	r3, r2
 80019da:	11db      	asrs	r3, r3, #7
 80019dc:	b29b      	uxth	r3, r3
 80019de:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80019e2:	b29b      	uxth	r3, r3
 80019e4:	81fb      	strh	r3, [r7, #14]
	if( value & 0x0100 ){
 80019e6:	89fb      	ldrh	r3, [r7, #14]
 80019e8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80019ec:	2b00      	cmp	r3, #0
 80019ee:	d010      	beq.n	8001a12 <LM75_Temperature_9Bit_ReadReg+0x76>
		value = (0x01FE ^ value) + 2;
 80019f0:	89fb      	ldrh	r3, [r7, #14]
 80019f2:	f483 73ff 	eor.w	r3, r3, #510	; 0x1fe
 80019f6:	b29b      	uxth	r3, r3
 80019f8:	3302      	adds	r3, #2
 80019fa:	b29b      	uxth	r3, r3
 80019fc:	81fb      	strh	r3, [r7, #14]
		return (float)( value * (-0.5f) );
 80019fe:	89fb      	ldrh	r3, [r7, #14]
 8001a00:	ee07 3a90 	vmov	s15, r3
 8001a04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001a08:	eebe 7a00 	vmov.f32	s14, #224	; 0xbf000000 -0.5
 8001a0c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001a10:	e008      	b.n	8001a24 <LM75_Temperature_9Bit_ReadReg+0x88>
	}
	else{
		return (float)( value * 0.5f );
 8001a12:	89fb      	ldrh	r3, [r7, #14]
 8001a14:	ee07 3a90 	vmov	s15, r3
 8001a18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001a1c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8001a20:	ee67 7a87 	vmul.f32	s15, s15, s14
	}

}
 8001a24:	eeb0 0a67 	vmov.f32	s0, s15
 8001a28:	3710      	adds	r7, #16
 8001a2a:	46bd      	mov	sp, r7
 8001a2c:	bd80      	pop	{r7, pc}
 8001a2e:	bf00      	nop
 8001a30:	200001b0 	.word	0x200001b0

08001a34 <LM75_TemperatureRead>:

	HAL_I2C_Master_Transmit( &MY_I2C, LM75_ADDRESS, buff, 2, 500 );
}


float LM75_TemperatureRead(void){
 8001a34:	b580      	push	{r7, lr}
 8001a36:	af00      	add	r7, sp, #0
	#ifdef LM75_11BIT
		return LM75_Temperature_11Bit_ReadReg( LM75_TEMPERATURE );
	#endif

	#ifdef LM75_9BIT
		return LM75_Temperature_9Bit_ReadReg( LM75_TEMPERATURE );
 8001a38:	2000      	movs	r0, #0
 8001a3a:	f7ff ffaf 	bl	800199c <LM75_Temperature_9Bit_ReadReg>
 8001a3e:	eef0 7a40 	vmov.f32	s15, s0
	#endif
}
 8001a42:	eeb0 0a67 	vmov.f32	s0, s15
 8001a46:	bd80      	pop	{r7, pc}

08001a48 <LM75_THYST_Read>:

float LM75_THYST_Read(void){
 8001a48:	b580      	push	{r7, lr}
 8001a4a:	af00      	add	r7, sp, #0
	return LM75_Temperature_9Bit_ReadReg( LM75_THYST );
 8001a4c:	2002      	movs	r0, #2
 8001a4e:	f7ff ffa5 	bl	800199c <LM75_Temperature_9Bit_ReadReg>
 8001a52:	eef0 7a40 	vmov.f32	s15, s0
}
 8001a56:	eeb0 0a67 	vmov.f32	s0, s15
 8001a5a:	bd80      	pop	{r7, pc}

08001a5c <LM75_TOS_Read>:


float LM75_TOS_Read(void){
 8001a5c:	b580      	push	{r7, lr}
 8001a5e:	af00      	add	r7, sp, #0
	return LM75_Temperature_9Bit_ReadReg( LM75_TOS );
 8001a60:	2003      	movs	r0, #3
 8001a62:	f7ff ff9b 	bl	800199c <LM75_Temperature_9Bit_ReadReg>
 8001a66:	eef0 7a40 	vmov.f32	s15, s0
}
 8001a6a:	eeb0 0a67 	vmov.f32	s0, s15
 8001a6e:	bd80      	pop	{r7, pc}

08001a70 <DS1307_Init>:
#endif

I2C_HandleTypeDef *_ds1307_ui2c;


void DS1307_Init(I2C_HandleTypeDef *hi2c) {
 8001a70:	b580      	push	{r7, lr}
 8001a72:	b082      	sub	sp, #8
 8001a74:	af00      	add	r7, sp, #0
 8001a76:	6078      	str	r0, [r7, #4]
	_ds1307_ui2c = hi2c;
 8001a78:	4a04      	ldr	r2, [pc, #16]	; (8001a8c <DS1307_Init+0x1c>)
 8001a7a:	687b      	ldr	r3, [r7, #4]
 8001a7c:	6013      	str	r3, [r2, #0]
	DS1307_SetClockHalt(0);
 8001a7e:	2000      	movs	r0, #0
 8001a80:	f000 f806 	bl	8001a90 <DS1307_SetClockHalt>
}
 8001a84:	bf00      	nop
 8001a86:	3708      	adds	r7, #8
 8001a88:	46bd      	mov	sp, r7
 8001a8a:	bd80      	pop	{r7, pc}
 8001a8c:	20000150 	.word	0x20000150

08001a90 <DS1307_SetClockHalt>:


void DS1307_SetClockHalt(uint8_t halt) {
 8001a90:	b580      	push	{r7, lr}
 8001a92:	b084      	sub	sp, #16
 8001a94:	af00      	add	r7, sp, #0
 8001a96:	4603      	mov	r3, r0
 8001a98:	71fb      	strb	r3, [r7, #7]
	uint8_t ch = (halt ? 1 << 7 : 0);
 8001a9a:	79fb      	ldrb	r3, [r7, #7]
 8001a9c:	2b00      	cmp	r3, #0
 8001a9e:	d001      	beq.n	8001aa4 <DS1307_SetClockHalt+0x14>
 8001aa0:	2380      	movs	r3, #128	; 0x80
 8001aa2:	e000      	b.n	8001aa6 <DS1307_SetClockHalt+0x16>
 8001aa4:	2300      	movs	r3, #0
 8001aa6:	73fb      	strb	r3, [r7, #15]
	DS1307_SetRegByte(DS1307_REG_SECOND, ch | (DS1307_GetRegByte(DS1307_REG_SECOND) & 0x7f));
 8001aa8:	2000      	movs	r0, #0
 8001aaa:	f000 f83d 	bl	8001b28 <DS1307_GetRegByte>
 8001aae:	4603      	mov	r3, r0
 8001ab0:	b25b      	sxtb	r3, r3
 8001ab2:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8001ab6:	b25a      	sxtb	r2, r3
 8001ab8:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001abc:	4313      	orrs	r3, r2
 8001abe:	b25b      	sxtb	r3, r3
 8001ac0:	b2db      	uxtb	r3, r3
 8001ac2:	4619      	mov	r1, r3
 8001ac4:	2000      	movs	r0, #0
 8001ac6:	f000 f811 	bl	8001aec <DS1307_SetRegByte>
}
 8001aca:	bf00      	nop
 8001acc:	3710      	adds	r7, #16
 8001ace:	46bd      	mov	sp, r7
 8001ad0:	bd80      	pop	{r7, pc}

08001ad2 <DS1307_GetClockHalt>:


uint8_t DS1307_GetClockHalt(void) {
 8001ad2:	b580      	push	{r7, lr}
 8001ad4:	af00      	add	r7, sp, #0
	return (DS1307_GetRegByte(DS1307_REG_SECOND) & 0x80) >> 7;
 8001ad6:	2000      	movs	r0, #0
 8001ad8:	f000 f826 	bl	8001b28 <DS1307_GetRegByte>
 8001adc:	4603      	mov	r3, r0
 8001ade:	11db      	asrs	r3, r3, #7
 8001ae0:	b2db      	uxtb	r3, r3
 8001ae2:	f003 0301 	and.w	r3, r3, #1
 8001ae6:	b2db      	uxtb	r3, r3
}
 8001ae8:	4618      	mov	r0, r3
 8001aea:	bd80      	pop	{r7, pc}

08001aec <DS1307_SetRegByte>:


void DS1307_SetRegByte(uint8_t regAddr, uint8_t val) {
 8001aec:	b580      	push	{r7, lr}
 8001aee:	b086      	sub	sp, #24
 8001af0:	af02      	add	r7, sp, #8
 8001af2:	4603      	mov	r3, r0
 8001af4:	460a      	mov	r2, r1
 8001af6:	71fb      	strb	r3, [r7, #7]
 8001af8:	4613      	mov	r3, r2
 8001afa:	71bb      	strb	r3, [r7, #6]
	uint8_t bytes[2] = { regAddr, val };
 8001afc:	79fb      	ldrb	r3, [r7, #7]
 8001afe:	733b      	strb	r3, [r7, #12]
 8001b00:	79bb      	ldrb	r3, [r7, #6]
 8001b02:	737b      	strb	r3, [r7, #13]
	HAL_I2C_Master_Transmit(_ds1307_ui2c, DS1307_I2C_ADDR << 1, bytes, 2, DS1307_TIMEOUT);
 8001b04:	4b07      	ldr	r3, [pc, #28]	; (8001b24 <DS1307_SetRegByte+0x38>)
 8001b06:	6818      	ldr	r0, [r3, #0]
 8001b08:	f107 020c 	add.w	r2, r7, #12
 8001b0c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001b10:	9300      	str	r3, [sp, #0]
 8001b12:	2302      	movs	r3, #2
 8001b14:	21d0      	movs	r1, #208	; 0xd0
 8001b16:	f003 fb6d 	bl	80051f4 <HAL_I2C_Master_Transmit>
}
 8001b1a:	bf00      	nop
 8001b1c:	3710      	adds	r7, #16
 8001b1e:	46bd      	mov	sp, r7
 8001b20:	bd80      	pop	{r7, pc}
 8001b22:	bf00      	nop
 8001b24:	20000150 	.word	0x20000150

08001b28 <DS1307_GetRegByte>:


uint8_t DS1307_GetRegByte(uint8_t regAddr) {
 8001b28:	b580      	push	{r7, lr}
 8001b2a:	b086      	sub	sp, #24
 8001b2c:	af02      	add	r7, sp, #8
 8001b2e:	4603      	mov	r3, r0
 8001b30:	71fb      	strb	r3, [r7, #7]
	uint8_t val;
	HAL_I2C_Master_Transmit(_ds1307_ui2c, DS1307_I2C_ADDR << 1, &regAddr, 1, DS1307_TIMEOUT);
 8001b32:	4b0d      	ldr	r3, [pc, #52]	; (8001b68 <DS1307_GetRegByte+0x40>)
 8001b34:	6818      	ldr	r0, [r3, #0]
 8001b36:	1dfa      	adds	r2, r7, #7
 8001b38:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001b3c:	9300      	str	r3, [sp, #0]
 8001b3e:	2301      	movs	r3, #1
 8001b40:	21d0      	movs	r1, #208	; 0xd0
 8001b42:	f003 fb57 	bl	80051f4 <HAL_I2C_Master_Transmit>
	HAL_I2C_Master_Receive(_ds1307_ui2c, DS1307_I2C_ADDR << 1, &val, 1, DS1307_TIMEOUT);
 8001b46:	4b08      	ldr	r3, [pc, #32]	; (8001b68 <DS1307_GetRegByte+0x40>)
 8001b48:	6818      	ldr	r0, [r3, #0]
 8001b4a:	f107 020f 	add.w	r2, r7, #15
 8001b4e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001b52:	9300      	str	r3, [sp, #0]
 8001b54:	2301      	movs	r3, #1
 8001b56:	21d0      	movs	r1, #208	; 0xd0
 8001b58:	f003 fc4a 	bl	80053f0 <HAL_I2C_Master_Receive>
	return val;
 8001b5c:	7bfb      	ldrb	r3, [r7, #15]
}
 8001b5e:	4618      	mov	r0, r3
 8001b60:	3710      	adds	r7, #16
 8001b62:	46bd      	mov	sp, r7
 8001b64:	bd80      	pop	{r7, pc}
 8001b66:	bf00      	nop
 8001b68:	20000150 	.word	0x20000150

08001b6c <DS1307_GetHour>:
uint16_t DS1307_GetYear(void) {
	uint16_t cen = DS1307_GetRegByte(DS1307_REG_CENT) * 100;
	return DS1307_DecodeBCD(DS1307_GetRegByte(DS1307_REG_YEAR)) + cen;
}

uint8_t DS1307_GetHour(void) {
 8001b6c:	b580      	push	{r7, lr}
 8001b6e:	af00      	add	r7, sp, #0
	return DS1307_DecodeBCD(DS1307_GetRegByte(DS1307_REG_HOUR) & 0x3f);
 8001b70:	2002      	movs	r0, #2
 8001b72:	f7ff ffd9 	bl	8001b28 <DS1307_GetRegByte>
 8001b76:	4603      	mov	r3, r0
 8001b78:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8001b7c:	b2db      	uxtb	r3, r3
 8001b7e:	4618      	mov	r0, r3
 8001b80:	f000 f8d4 	bl	8001d2c <DS1307_DecodeBCD>
 8001b84:	4603      	mov	r3, r0
}
 8001b86:	4618      	mov	r0, r3
 8001b88:	bd80      	pop	{r7, pc}

08001b8a <DS1307_GetMinute>:


uint8_t DS1307_GetMinute(void) {
 8001b8a:	b580      	push	{r7, lr}
 8001b8c:	af00      	add	r7, sp, #0
	return DS1307_DecodeBCD(DS1307_GetRegByte(DS1307_REG_MINUTE));
 8001b8e:	2001      	movs	r0, #1
 8001b90:	f7ff ffca 	bl	8001b28 <DS1307_GetRegByte>
 8001b94:	4603      	mov	r3, r0
 8001b96:	4618      	mov	r0, r3
 8001b98:	f000 f8c8 	bl	8001d2c <DS1307_DecodeBCD>
 8001b9c:	4603      	mov	r3, r0
}
 8001b9e:	4618      	mov	r0, r3
 8001ba0:	bd80      	pop	{r7, pc}

08001ba2 <DS1307_GetSecond>:


uint8_t DS1307_GetSecond(void) {
 8001ba2:	b580      	push	{r7, lr}
 8001ba4:	af00      	add	r7, sp, #0
	return DS1307_DecodeBCD(DS1307_GetRegByte(DS1307_REG_SECOND) & 0x7f);
 8001ba6:	2000      	movs	r0, #0
 8001ba8:	f7ff ffbe 	bl	8001b28 <DS1307_GetRegByte>
 8001bac:	4603      	mov	r3, r0
 8001bae:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8001bb2:	b2db      	uxtb	r3, r3
 8001bb4:	4618      	mov	r0, r3
 8001bb6:	f000 f8b9 	bl	8001d2c <DS1307_DecodeBCD>
 8001bba:	4603      	mov	r3, r0
}
 8001bbc:	4618      	mov	r0, r3
 8001bbe:	bd80      	pop	{r7, pc}

08001bc0 <DS1307_SetDayOfWeek>:
uint8_t DS1307_GetTimeZoneMin(void) {
	return DS1307_GetRegByte(DS1307_REG_UTC_MIN);
}


void DS1307_SetDayOfWeek(uint8_t dayOfWeek) {
 8001bc0:	b580      	push	{r7, lr}
 8001bc2:	b082      	sub	sp, #8
 8001bc4:	af00      	add	r7, sp, #0
 8001bc6:	4603      	mov	r3, r0
 8001bc8:	71fb      	strb	r3, [r7, #7]
	DS1307_SetRegByte(DS1307_REG_DOW, DS1307_EncodeBCD(dayOfWeek));
 8001bca:	79fb      	ldrb	r3, [r7, #7]
 8001bcc:	4618      	mov	r0, r3
 8001bce:	f000 f8c7 	bl	8001d60 <DS1307_EncodeBCD>
 8001bd2:	4603      	mov	r3, r0
 8001bd4:	4619      	mov	r1, r3
 8001bd6:	2003      	movs	r0, #3
 8001bd8:	f7ff ff88 	bl	8001aec <DS1307_SetRegByte>
}
 8001bdc:	bf00      	nop
 8001bde:	3708      	adds	r7, #8
 8001be0:	46bd      	mov	sp, r7
 8001be2:	bd80      	pop	{r7, pc}

08001be4 <DS1307_SetDate>:


void DS1307_SetDate(uint8_t date) {
 8001be4:	b580      	push	{r7, lr}
 8001be6:	b082      	sub	sp, #8
 8001be8:	af00      	add	r7, sp, #0
 8001bea:	4603      	mov	r3, r0
 8001bec:	71fb      	strb	r3, [r7, #7]
	DS1307_SetRegByte(DS1307_REG_DATE, DS1307_EncodeBCD(date));
 8001bee:	79fb      	ldrb	r3, [r7, #7]
 8001bf0:	4618      	mov	r0, r3
 8001bf2:	f000 f8b5 	bl	8001d60 <DS1307_EncodeBCD>
 8001bf6:	4603      	mov	r3, r0
 8001bf8:	4619      	mov	r1, r3
 8001bfa:	2004      	movs	r0, #4
 8001bfc:	f7ff ff76 	bl	8001aec <DS1307_SetRegByte>
}
 8001c00:	bf00      	nop
 8001c02:	3708      	adds	r7, #8
 8001c04:	46bd      	mov	sp, r7
 8001c06:	bd80      	pop	{r7, pc}

08001c08 <DS1307_SetMonth>:


void DS1307_SetMonth(uint8_t month) {
 8001c08:	b580      	push	{r7, lr}
 8001c0a:	b082      	sub	sp, #8
 8001c0c:	af00      	add	r7, sp, #0
 8001c0e:	4603      	mov	r3, r0
 8001c10:	71fb      	strb	r3, [r7, #7]
	DS1307_SetRegByte(DS1307_REG_MONTH, DS1307_EncodeBCD(month));
 8001c12:	79fb      	ldrb	r3, [r7, #7]
 8001c14:	4618      	mov	r0, r3
 8001c16:	f000 f8a3 	bl	8001d60 <DS1307_EncodeBCD>
 8001c1a:	4603      	mov	r3, r0
 8001c1c:	4619      	mov	r1, r3
 8001c1e:	2005      	movs	r0, #5
 8001c20:	f7ff ff64 	bl	8001aec <DS1307_SetRegByte>
}
 8001c24:	bf00      	nop
 8001c26:	3708      	adds	r7, #8
 8001c28:	46bd      	mov	sp, r7
 8001c2a:	bd80      	pop	{r7, pc}

08001c2c <DS1307_SetYear>:


void DS1307_SetYear(uint16_t year) {
 8001c2c:	b580      	push	{r7, lr}
 8001c2e:	b082      	sub	sp, #8
 8001c30:	af00      	add	r7, sp, #0
 8001c32:	4603      	mov	r3, r0
 8001c34:	80fb      	strh	r3, [r7, #6]
	DS1307_SetRegByte(DS1307_REG_CENT, year / 100);
 8001c36:	88fb      	ldrh	r3, [r7, #6]
 8001c38:	4a10      	ldr	r2, [pc, #64]	; (8001c7c <DS1307_SetYear+0x50>)
 8001c3a:	fba2 2303 	umull	r2, r3, r2, r3
 8001c3e:	095b      	lsrs	r3, r3, #5
 8001c40:	b29b      	uxth	r3, r3
 8001c42:	b2db      	uxtb	r3, r3
 8001c44:	4619      	mov	r1, r3
 8001c46:	2010      	movs	r0, #16
 8001c48:	f7ff ff50 	bl	8001aec <DS1307_SetRegByte>
	DS1307_SetRegByte(DS1307_REG_YEAR, DS1307_EncodeBCD(year % 100));
 8001c4c:	88fb      	ldrh	r3, [r7, #6]
 8001c4e:	4a0b      	ldr	r2, [pc, #44]	; (8001c7c <DS1307_SetYear+0x50>)
 8001c50:	fba2 1203 	umull	r1, r2, r2, r3
 8001c54:	0952      	lsrs	r2, r2, #5
 8001c56:	2164      	movs	r1, #100	; 0x64
 8001c58:	fb01 f202 	mul.w	r2, r1, r2
 8001c5c:	1a9b      	subs	r3, r3, r2
 8001c5e:	b29b      	uxth	r3, r3
 8001c60:	b2db      	uxtb	r3, r3
 8001c62:	4618      	mov	r0, r3
 8001c64:	f000 f87c 	bl	8001d60 <DS1307_EncodeBCD>
 8001c68:	4603      	mov	r3, r0
 8001c6a:	4619      	mov	r1, r3
 8001c6c:	2006      	movs	r0, #6
 8001c6e:	f7ff ff3d 	bl	8001aec <DS1307_SetRegByte>
}
 8001c72:	bf00      	nop
 8001c74:	3708      	adds	r7, #8
 8001c76:	46bd      	mov	sp, r7
 8001c78:	bd80      	pop	{r7, pc}
 8001c7a:	bf00      	nop
 8001c7c:	51eb851f 	.word	0x51eb851f

08001c80 <DS1307_SetHour>:


void DS1307_SetHour(uint8_t hour_24mode) {
 8001c80:	b580      	push	{r7, lr}
 8001c82:	b082      	sub	sp, #8
 8001c84:	af00      	add	r7, sp, #0
 8001c86:	4603      	mov	r3, r0
 8001c88:	71fb      	strb	r3, [r7, #7]
	DS1307_SetRegByte(DS1307_REG_HOUR, DS1307_EncodeBCD(hour_24mode & 0x3f));
 8001c8a:	79fb      	ldrb	r3, [r7, #7]
 8001c8c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8001c90:	b2db      	uxtb	r3, r3
 8001c92:	4618      	mov	r0, r3
 8001c94:	f000 f864 	bl	8001d60 <DS1307_EncodeBCD>
 8001c98:	4603      	mov	r3, r0
 8001c9a:	4619      	mov	r1, r3
 8001c9c:	2002      	movs	r0, #2
 8001c9e:	f7ff ff25 	bl	8001aec <DS1307_SetRegByte>
}
 8001ca2:	bf00      	nop
 8001ca4:	3708      	adds	r7, #8
 8001ca6:	46bd      	mov	sp, r7
 8001ca8:	bd80      	pop	{r7, pc}

08001caa <DS1307_SetMinute>:


void DS1307_SetMinute(uint8_t minute) {
 8001caa:	b580      	push	{r7, lr}
 8001cac:	b082      	sub	sp, #8
 8001cae:	af00      	add	r7, sp, #0
 8001cb0:	4603      	mov	r3, r0
 8001cb2:	71fb      	strb	r3, [r7, #7]
	DS1307_SetRegByte(DS1307_REG_MINUTE, DS1307_EncodeBCD(minute));
 8001cb4:	79fb      	ldrb	r3, [r7, #7]
 8001cb6:	4618      	mov	r0, r3
 8001cb8:	f000 f852 	bl	8001d60 <DS1307_EncodeBCD>
 8001cbc:	4603      	mov	r3, r0
 8001cbe:	4619      	mov	r1, r3
 8001cc0:	2001      	movs	r0, #1
 8001cc2:	f7ff ff13 	bl	8001aec <DS1307_SetRegByte>
}
 8001cc6:	bf00      	nop
 8001cc8:	3708      	adds	r7, #8
 8001cca:	46bd      	mov	sp, r7
 8001ccc:	bd80      	pop	{r7, pc}

08001cce <DS1307_SetSecond>:


void DS1307_SetSecond(uint8_t second) {
 8001cce:	b580      	push	{r7, lr}
 8001cd0:	b084      	sub	sp, #16
 8001cd2:	af00      	add	r7, sp, #0
 8001cd4:	4603      	mov	r3, r0
 8001cd6:	71fb      	strb	r3, [r7, #7]
	uint8_t ch = DS1307_GetClockHalt();
 8001cd8:	f7ff fefb 	bl	8001ad2 <DS1307_GetClockHalt>
 8001cdc:	4603      	mov	r3, r0
 8001cde:	73fb      	strb	r3, [r7, #15]
	DS1307_SetRegByte(DS1307_REG_SECOND, DS1307_EncodeBCD(second | ch));
 8001ce0:	79fa      	ldrb	r2, [r7, #7]
 8001ce2:	7bfb      	ldrb	r3, [r7, #15]
 8001ce4:	4313      	orrs	r3, r2
 8001ce6:	b2db      	uxtb	r3, r3
 8001ce8:	4618      	mov	r0, r3
 8001cea:	f000 f839 	bl	8001d60 <DS1307_EncodeBCD>
 8001cee:	4603      	mov	r3, r0
 8001cf0:	4619      	mov	r1, r3
 8001cf2:	2000      	movs	r0, #0
 8001cf4:	f7ff fefa 	bl	8001aec <DS1307_SetRegByte>
}
 8001cf8:	bf00      	nop
 8001cfa:	3710      	adds	r7, #16
 8001cfc:	46bd      	mov	sp, r7
 8001cfe:	bd80      	pop	{r7, pc}

08001d00 <DS1307_SetTimeZone>:


void DS1307_SetTimeZone(int8_t hr, uint8_t min) {
 8001d00:	b580      	push	{r7, lr}
 8001d02:	b082      	sub	sp, #8
 8001d04:	af00      	add	r7, sp, #0
 8001d06:	4603      	mov	r3, r0
 8001d08:	460a      	mov	r2, r1
 8001d0a:	71fb      	strb	r3, [r7, #7]
 8001d0c:	4613      	mov	r3, r2
 8001d0e:	71bb      	strb	r3, [r7, #6]
	DS1307_SetRegByte(DS1307_REG_UTC_HR, hr);
 8001d10:	79fb      	ldrb	r3, [r7, #7]
 8001d12:	4619      	mov	r1, r3
 8001d14:	2008      	movs	r0, #8
 8001d16:	f7ff fee9 	bl	8001aec <DS1307_SetRegByte>
	DS1307_SetRegByte(DS1307_REG_UTC_MIN, min);
 8001d1a:	79bb      	ldrb	r3, [r7, #6]
 8001d1c:	4619      	mov	r1, r3
 8001d1e:	2009      	movs	r0, #9
 8001d20:	f7ff fee4 	bl	8001aec <DS1307_SetRegByte>
}
 8001d24:	bf00      	nop
 8001d26:	3708      	adds	r7, #8
 8001d28:	46bd      	mov	sp, r7
 8001d2a:	bd80      	pop	{r7, pc}

08001d2c <DS1307_DecodeBCD>:


uint8_t DS1307_DecodeBCD(uint8_t bin) {
 8001d2c:	b480      	push	{r7}
 8001d2e:	b083      	sub	sp, #12
 8001d30:	af00      	add	r7, sp, #0
 8001d32:	4603      	mov	r3, r0
 8001d34:	71fb      	strb	r3, [r7, #7]
	return (((bin & 0xf0) >> 4) * 10) + (bin & 0x0f);
 8001d36:	79fb      	ldrb	r3, [r7, #7]
 8001d38:	091b      	lsrs	r3, r3, #4
 8001d3a:	b2db      	uxtb	r3, r3
 8001d3c:	461a      	mov	r2, r3
 8001d3e:	0092      	lsls	r2, r2, #2
 8001d40:	4413      	add	r3, r2
 8001d42:	005b      	lsls	r3, r3, #1
 8001d44:	b2da      	uxtb	r2, r3
 8001d46:	79fb      	ldrb	r3, [r7, #7]
 8001d48:	f003 030f 	and.w	r3, r3, #15
 8001d4c:	b2db      	uxtb	r3, r3
 8001d4e:	4413      	add	r3, r2
 8001d50:	b2db      	uxtb	r3, r3
}
 8001d52:	4618      	mov	r0, r3
 8001d54:	370c      	adds	r7, #12
 8001d56:	46bd      	mov	sp, r7
 8001d58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d5c:	4770      	bx	lr
	...

08001d60 <DS1307_EncodeBCD>:

uint8_t DS1307_EncodeBCD(uint8_t dec) {
 8001d60:	b480      	push	{r7}
 8001d62:	b083      	sub	sp, #12
 8001d64:	af00      	add	r7, sp, #0
 8001d66:	4603      	mov	r3, r0
 8001d68:	71fb      	strb	r3, [r7, #7]
	return (dec % 10 + ((dec / 10) << 4));
 8001d6a:	79fa      	ldrb	r2, [r7, #7]
 8001d6c:	4b0c      	ldr	r3, [pc, #48]	; (8001da0 <DS1307_EncodeBCD+0x40>)
 8001d6e:	fba3 1302 	umull	r1, r3, r3, r2
 8001d72:	08d9      	lsrs	r1, r3, #3
 8001d74:	460b      	mov	r3, r1
 8001d76:	009b      	lsls	r3, r3, #2
 8001d78:	440b      	add	r3, r1
 8001d7a:	005b      	lsls	r3, r3, #1
 8001d7c:	1ad3      	subs	r3, r2, r3
 8001d7e:	b2da      	uxtb	r2, r3
 8001d80:	79fb      	ldrb	r3, [r7, #7]
 8001d82:	4907      	ldr	r1, [pc, #28]	; (8001da0 <DS1307_EncodeBCD+0x40>)
 8001d84:	fba1 1303 	umull	r1, r3, r1, r3
 8001d88:	08db      	lsrs	r3, r3, #3
 8001d8a:	b2db      	uxtb	r3, r3
 8001d8c:	011b      	lsls	r3, r3, #4
 8001d8e:	b2db      	uxtb	r3, r3
 8001d90:	4413      	add	r3, r2
 8001d92:	b2db      	uxtb	r3, r3
}
 8001d94:	4618      	mov	r0, r3
 8001d96:	370c      	adds	r7, #12
 8001d98:	46bd      	mov	sp, r7
 8001d9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d9e:	4770      	bx	lr
 8001da0:	cccccccd 	.word	0xcccccccd

08001da4 <getAdcVoltage>:
/* USER CODE BEGIN 0 */

uint16_t doadc = 0;
float voltage ;
extern float RSdivRL;
float getAdcVoltage(ADC_HandleTypeDef* hadc1) {
 8001da4:	b580      	push	{r7, lr}
 8001da6:	b082      	sub	sp, #8
 8001da8:	af00      	add	r7, sp, #0
 8001daa:	6078      	str	r0, [r7, #4]
	HAL_ADC_Start(hadc1);
 8001dac:	6878      	ldr	r0, [r7, #4]
 8001dae:	f001 fee7 	bl	8003b80 <HAL_ADC_Start>
	doadc = HAL_ADC_GetValue(hadc1);
 8001db2:	6878      	ldr	r0, [r7, #4]
 8001db4:	f001 ff98 	bl	8003ce8 <HAL_ADC_GetValue>
 8001db8:	4603      	mov	r3, r0
 8001dba:	b29a      	uxth	r2, r3
 8001dbc:	4b14      	ldr	r3, [pc, #80]	; (8001e10 <getAdcVoltage+0x6c>)
 8001dbe:	801a      	strh	r2, [r3, #0]
	HAL_Delay(100);
 8001dc0:	2064      	movs	r0, #100	; 0x64
 8001dc2:	f001 fe75 	bl	8003ab0 <HAL_Delay>
	voltage = ((doadc*1.0)*5.0) / 4096;
 8001dc6:	4b12      	ldr	r3, [pc, #72]	; (8001e10 <getAdcVoltage+0x6c>)
 8001dc8:	881b      	ldrh	r3, [r3, #0]
 8001dca:	4618      	mov	r0, r3
 8001dcc:	f7fe fbaa 	bl	8000524 <__aeabi_i2d>
 8001dd0:	f04f 0200 	mov.w	r2, #0
 8001dd4:	4b0f      	ldr	r3, [pc, #60]	; (8001e14 <getAdcVoltage+0x70>)
 8001dd6:	f7fe fc0f 	bl	80005f8 <__aeabi_dmul>
 8001dda:	4602      	mov	r2, r0
 8001ddc:	460b      	mov	r3, r1
 8001dde:	4610      	mov	r0, r2
 8001de0:	4619      	mov	r1, r3
 8001de2:	f04f 0200 	mov.w	r2, #0
 8001de6:	4b0c      	ldr	r3, [pc, #48]	; (8001e18 <getAdcVoltage+0x74>)
 8001de8:	f7fe fd30 	bl	800084c <__aeabi_ddiv>
 8001dec:	4602      	mov	r2, r0
 8001dee:	460b      	mov	r3, r1
 8001df0:	4610      	mov	r0, r2
 8001df2:	4619      	mov	r1, r3
 8001df4:	f7fe feb0 	bl	8000b58 <__aeabi_d2f>
 8001df8:	4603      	mov	r3, r0
 8001dfa:	4a08      	ldr	r2, [pc, #32]	; (8001e1c <getAdcVoltage+0x78>)
 8001dfc:	6013      	str	r3, [r2, #0]
	return voltage;
 8001dfe:	4b07      	ldr	r3, [pc, #28]	; (8001e1c <getAdcVoltage+0x78>)
 8001e00:	681b      	ldr	r3, [r3, #0]
 8001e02:	ee07 3a90 	vmov	s15, r3
}
 8001e06:	eeb0 0a67 	vmov.f32	s0, s15
 8001e0a:	3708      	adds	r7, #8
 8001e0c:	46bd      	mov	sp, r7
 8001e0e:	bd80      	pop	{r7, pc}
 8001e10:	20000430 	.word	0x20000430
 8001e14:	40140000 	.word	0x40140000
 8001e18:	40b00000 	.word	0x40b00000
 8001e1c:	20000434 	.word	0x20000434

08001e20 <getGasConcentration>:

 float getGasConcentration(ADC_HandleTypeDef* hadc1) {
 8001e20:	b5b0      	push	{r4, r5, r7, lr}
 8001e22:	b084      	sub	sp, #16
 8001e24:	af00      	add	r7, sp, #0
 8001e26:	6078      	str	r0, [r7, #4]
	HAL_ADC_Start(hadc1);
 8001e28:	6878      	ldr	r0, [r7, #4]
 8001e2a:	f001 fea9 	bl	8003b80 <HAL_ADC_Start>
	float Vrl = getAdcVoltage(hadc1);
 8001e2e:	6878      	ldr	r0, [r7, #4]
 8001e30:	f7ff ffb8 	bl	8001da4 <getAdcVoltage>
 8001e34:	ed87 0a03 	vstr	s0, [r7, #12]
    RSdivRL = (5.0 - Vrl)/Vrl;
 8001e38:	68f8      	ldr	r0, [r7, #12]
 8001e3a:	f7fe fb85 	bl	8000548 <__aeabi_f2d>
 8001e3e:	4602      	mov	r2, r0
 8001e40:	460b      	mov	r3, r1
 8001e42:	f04f 0000 	mov.w	r0, #0
 8001e46:	4916      	ldr	r1, [pc, #88]	; (8001ea0 <getGasConcentration+0x80>)
 8001e48:	f7fe fa1e 	bl	8000288 <__aeabi_dsub>
 8001e4c:	4602      	mov	r2, r0
 8001e4e:	460b      	mov	r3, r1
 8001e50:	4614      	mov	r4, r2
 8001e52:	461d      	mov	r5, r3
 8001e54:	68f8      	ldr	r0, [r7, #12]
 8001e56:	f7fe fb77 	bl	8000548 <__aeabi_f2d>
 8001e5a:	4602      	mov	r2, r0
 8001e5c:	460b      	mov	r3, r1
 8001e5e:	4620      	mov	r0, r4
 8001e60:	4629      	mov	r1, r5
 8001e62:	f7fe fcf3 	bl	800084c <__aeabi_ddiv>
 8001e66:	4602      	mov	r2, r0
 8001e68:	460b      	mov	r3, r1
 8001e6a:	4610      	mov	r0, r2
 8001e6c:	4619      	mov	r1, r3
 8001e6e:	f7fe fe73 	bl	8000b58 <__aeabi_d2f>
 8001e72:	4603      	mov	r3, r0
 8001e74:	4a0b      	ldr	r2, [pc, #44]	; (8001ea4 <getGasConcentration+0x84>)
 8001e76:	6013      	str	r3, [r2, #0]
    log(RSdivRL);
 8001e78:	4b0a      	ldr	r3, [pc, #40]	; (8001ea4 <getGasConcentration+0x84>)
 8001e7a:	681b      	ldr	r3, [r3, #0]
 8001e7c:	4618      	mov	r0, r3
 8001e7e:	f7fe fb63 	bl	8000548 <__aeabi_f2d>
 8001e82:	4602      	mov	r2, r0
 8001e84:	460b      	mov	r3, r1
 8001e86:	ec43 2b10 	vmov	d0, r2, r3
 8001e8a:	f028 f9e9 	bl	802a260 <log>
	return RSdivRL;
 8001e8e:	4b05      	ldr	r3, [pc, #20]	; (8001ea4 <getGasConcentration+0x84>)
 8001e90:	681b      	ldr	r3, [r3, #0]
 8001e92:	ee07 3a90 	vmov	s15, r3
}
 8001e96:	eeb0 0a67 	vmov.f32	s0, s15
 8001e9a:	3710      	adds	r7, #16
 8001e9c:	46bd      	mov	sp, r7
 8001e9e:	bdb0      	pop	{r4, r5, r7, pc}
 8001ea0:	40140000 	.word	0x40140000
 8001ea4:	20000518 	.word	0x20000518

08001ea8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001ea8:	b580      	push	{r7, lr}
 8001eaa:	b084      	sub	sp, #16
 8001eac:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001eae:	f001 fd8d 	bl	80039cc <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001eb2:	f000 f925 	bl	8002100 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001eb6:	f000 fba7 	bl	8002608 <MX_GPIO_Init>
  MX_DMA_Init();
 8001eba:	f000 fb85 	bl	80025c8 <MX_DMA_Init>
  MX_SPI2_Init();
 8001ebe:	f000 fa49 	bl	8002354 <MX_SPI2_Init>
  MX_CRC_Init();
 8001ec2:	f000 f9d7 	bl	8002274 <MX_CRC_Init>
  MX_TIM2_Init();
 8001ec6:	f000 fa7b 	bl	80023c0 <MX_TIM2_Init>
  MX_TIM3_Init();
 8001eca:	f000 fad1 	bl	8002470 <MX_TIM3_Init>
  MX_ADC1_Init();
 8001ece:	f000 f97f 	bl	80021d0 <MX_ADC1_Init>
  MX_I2C1_Init();
 8001ed2:	f000 f9e3 	bl	800229c <MX_I2C1_Init>
  MX_I2C2_Init();
 8001ed6:	f000 fa0f 	bl	80022f8 <MX_I2C2_Init>
  MX_TIM9_Init();
 8001eda:	f000 fb17 	bl	800250c <MX_TIM9_Init>
  MX_TIM10_Init();
 8001ede:	f000 fb4f 	bl	8002580 <MX_TIM10_Init>
  MX_TouchGFX_Init();
 8001ee2:	f007 f895 	bl	8009010 <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */
  mode mode_temp;
  Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
 8001ee6:	2000      	movs	r0, #0
 8001ee8:	f001 f930 	bl	800314c <Displ_Init>
  Displ_BackLight('I');  					// initialize backlight
 8001eec:	2049      	movs	r0, #73	; 0x49
 8001eee:	f001 f9d1 	bl	8003294 <Displ_BackLight>
  HAL_TIM_Base_Start_IT(&TGFX_T);			// start TouchGFX tick timer
 8001ef2:	4874      	ldr	r0, [pc, #464]	; (80020c4 <main+0x21c>)
 8001ef4:	f006 f8f4 	bl	80080e0 <HAL_TIM_Base_Start_IT>
	    THYST = LM75_THYST_Read();
 8001ef8:	f7ff fda6 	bl	8001a48 <LM75_THYST_Read>
 8001efc:	eef0 7a40 	vmov.f32	s15, s0
 8001f00:	4b71      	ldr	r3, [pc, #452]	; (80020c8 <main+0x220>)
 8001f02:	edc3 7a00 	vstr	s15, [r3]
	    TOS = LM75_TOS_Read();
 8001f06:	f7ff fda9 	bl	8001a5c <LM75_TOS_Read>
 8001f0a:	eef0 7a40 	vmov.f32	s15, s0
 8001f0e:	4b6f      	ldr	r3, [pc, #444]	; (80020cc <main+0x224>)
 8001f10:	edc3 7a00 	vstr	s15, [r3]
	    DS1307_Init(&hi2c2);
 8001f14:	486e      	ldr	r0, [pc, #440]	; (80020d0 <main+0x228>)
 8001f16:	f7ff fdab 	bl	8001a70 <DS1307_Init>
	  	DS1307_SetTimeZone(+8, 00);
 8001f1a:	2100      	movs	r1, #0
 8001f1c:	2008      	movs	r0, #8
 8001f1e:	f7ff feef 	bl	8001d00 <DS1307_SetTimeZone>
	  	DS1307_SetDate(30);
 8001f22:	201e      	movs	r0, #30
 8001f24:	f7ff fe5e 	bl	8001be4 <DS1307_SetDate>
	  	DS1307_SetMonth(11);
 8001f28:	200b      	movs	r0, #11
 8001f2a:	f7ff fe6d 	bl	8001c08 <DS1307_SetMonth>
	  	DS1307_SetYear(2023);
 8001f2e:	f240 70e7 	movw	r0, #2023	; 0x7e7
 8001f32:	f7ff fe7b 	bl	8001c2c <DS1307_SetYear>
	  	DS1307_SetDayOfWeek(4);
 8001f36:	2004      	movs	r0, #4
 8001f38:	f7ff fe42 	bl	8001bc0 <DS1307_SetDayOfWeek>
	  	DS1307_SetHour(11);
 8001f3c:	200b      	movs	r0, #11
 8001f3e:	f7ff fe9f 	bl	8001c80 <DS1307_SetHour>
	  	DS1307_SetMinute(16);
 8001f42:	2010      	movs	r0, #16
 8001f44:	f7ff feb1 	bl	8001caa <DS1307_SetMinute>
	  	DS1307_SetSecond(30);
 8001f48:	201e      	movs	r0, #30
 8001f4a:	f7ff fec0 	bl	8001cce <DS1307_SetSecond>
	   int ret = BMP280_Config(OSRS_16, OSRS_16, OSRS_OFF, MODE_NORMAL, T_SB_1000, IIR_16);
 8001f4e:	2304      	movs	r3, #4
 8001f50:	9301      	str	r3, [sp, #4]
 8001f52:	2305      	movs	r3, #5
 8001f54:	9300      	str	r3, [sp, #0]
 8001f56:	2303      	movs	r3, #3
 8001f58:	2200      	movs	r2, #0
 8001f5a:	2105      	movs	r1, #5
 8001f5c:	2005      	movs	r0, #5
 8001f5e:	f7ff f8fb 	bl	8001158 <BMP280_Config>
 8001f62:	6038      	str	r0, [r7, #0]
	  	HAL_Delay(500);
 8001f64:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001f68:	f001 fda2 	bl	8003ab0 <HAL_Delay>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  T= LM75_TemperatureRead();
 8001f6c:	f7ff fd62 	bl	8001a34 <LM75_TemperatureRead>
 8001f70:	eef0 7a40 	vmov.f32	s15, s0
 8001f74:	4b57      	ldr	r3, [pc, #348]	; (80020d4 <main+0x22c>)
 8001f76:	edc3 7a00 	vstr	s15, [r3]
	  if(mode_temp==Mode1){
 8001f7a:	79fb      	ldrb	r3, [r7, #7]
 8001f7c:	2b00      	cmp	r3, #0
 8001f7e:	d11b      	bne.n	8001fb8 <main+0x110>
		  HAL_GPIO_WritePin(LED_4_GPIO_Port, LED_4_Pin, GPIO_PIN_RESET);
 8001f80:	2200      	movs	r2, #0
 8001f82:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8001f86:	4854      	ldr	r0, [pc, #336]	; (80020d8 <main+0x230>)
 8001f88:	f002 ffa4 	bl	8004ed4 <HAL_GPIO_WritePin>
		  HAL_TIM_Base_Stop_IT(&htim9);
 8001f8c:	4853      	ldr	r0, [pc, #332]	; (80020dc <main+0x234>)
 8001f8e:	f006 f909 	bl	80081a4 <HAL_TIM_Base_Stop_IT>
		  HAL_TIM_Base_Stop_IT(&htim10);
 8001f92:	4853      	ldr	r0, [pc, #332]	; (80020e0 <main+0x238>)
 8001f94:	f006 f906 	bl	80081a4 <HAL_TIM_Base_Stop_IT>
		  counter=0;
 8001f98:	4b52      	ldr	r3, [pc, #328]	; (80020e4 <main+0x23c>)
 8001f9a:	2200      	movs	r2, #0
 8001f9c:	601a      	str	r2, [r3, #0]
		  if(T>27)	mode_temp=Mode20;
 8001f9e:	4b4d      	ldr	r3, [pc, #308]	; (80020d4 <main+0x22c>)
 8001fa0:	edd3 7a00 	vldr	s15, [r3]
 8001fa4:	eeb3 7a0b 	vmov.f32	s14, #59	; 0x41d80000  27.0
 8001fa8:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001fac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001fb0:	dd51      	ble.n	8002056 <main+0x1ae>
 8001fb2:	2301      	movs	r3, #1
 8001fb4:	71fb      	strb	r3, [r7, #7]
 8001fb6:	e04e      	b.n	8002056 <main+0x1ae>
	  }
	  else if(mode_temp == Mode20){
 8001fb8:	79fb      	ldrb	r3, [r7, #7]
 8001fba:	2b01      	cmp	r3, #1
 8001fbc:	d105      	bne.n	8001fca <main+0x122>
		  HAL_TIM_Base_Start_IT(&htim10);
 8001fbe:	4848      	ldr	r0, [pc, #288]	; (80020e0 <main+0x238>)
 8001fc0:	f006 f88e 	bl	80080e0 <HAL_TIM_Base_Start_IT>
		  mode_temp=Mode21;
 8001fc4:	2302      	movs	r3, #2
 8001fc6:	71fb      	strb	r3, [r7, #7]
 8001fc8:	e045      	b.n	8002056 <main+0x1ae>
	  }
	  else if(mode_temp == Mode21){
 8001fca:	79fb      	ldrb	r3, [r7, #7]
 8001fcc:	2b02      	cmp	r3, #2
 8001fce:	d121      	bne.n	8002014 <main+0x16c>
	  	  if(T<27)	mode_temp=Mode1;
 8001fd0:	4b40      	ldr	r3, [pc, #256]	; (80020d4 <main+0x22c>)
 8001fd2:	edd3 7a00 	vldr	s15, [r3]
 8001fd6:	eeb3 7a0b 	vmov.f32	s14, #59	; 0x41d80000  27.0
 8001fda:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001fde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001fe2:	d502      	bpl.n	8001fea <main+0x142>
 8001fe4:	2300      	movs	r3, #0
 8001fe6:	71fb      	strb	r3, [r7, #7]
 8001fe8:	e035      	b.n	8002056 <main+0x1ae>
	  	  else if ( T>=27 && counter >=800){
 8001fea:	4b3a      	ldr	r3, [pc, #232]	; (80020d4 <main+0x22c>)
 8001fec:	edd3 7a00 	vldr	s15, [r3]
 8001ff0:	eeb3 7a0b 	vmov.f32	s14, #59	; 0x41d80000  27.0
 8001ff4:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001ff8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001ffc:	db07      	blt.n	800200e <main+0x166>
 8001ffe:	4b39      	ldr	r3, [pc, #228]	; (80020e4 <main+0x23c>)
 8002000:	681b      	ldr	r3, [r3, #0]
 8002002:	f5b3 7f48 	cmp.w	r3, #800	; 0x320
 8002006:	d302      	bcc.n	800200e <main+0x166>
	 	  mode_temp=Mode30;
 8002008:	2303      	movs	r3, #3
 800200a:	71fb      	strb	r3, [r7, #7]
 800200c:	e023      	b.n	8002056 <main+0x1ae>
	  	}
	  	else mode_temp=Mode21;
 800200e:	2302      	movs	r3, #2
 8002010:	71fb      	strb	r3, [r7, #7]
 8002012:	e020      	b.n	8002056 <main+0x1ae>
	  }
	  else if(mode_temp==Mode30){
 8002014:	79fb      	ldrb	r3, [r7, #7]
 8002016:	2b03      	cmp	r3, #3
 8002018:	d10b      	bne.n	8002032 <main+0x18a>
		  HAL_GPIO_WritePin(LED_4_GPIO_Port, LED_4_Pin, GPIO_PIN_SET);
 800201a:	2201      	movs	r2, #1
 800201c:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8002020:	482d      	ldr	r0, [pc, #180]	; (80020d8 <main+0x230>)
 8002022:	f002 ff57 	bl	8004ed4 <HAL_GPIO_WritePin>
		  HAL_TIM_Base_Start_IT(&htim9);
 8002026:	482d      	ldr	r0, [pc, #180]	; (80020dc <main+0x234>)
 8002028:	f006 f85a 	bl	80080e0 <HAL_TIM_Base_Start_IT>
		  mode_temp=Mode31;
 800202c:	2304      	movs	r3, #4
 800202e:	71fb      	strb	r3, [r7, #7]
 8002030:	e011      	b.n	8002056 <main+0x1ae>

	  }
	  else if(mode_temp==Mode31){
 8002032:	79fb      	ldrb	r3, [r7, #7]
 8002034:	2b04      	cmp	r3, #4
 8002036:	d10e      	bne.n	8002056 <main+0x1ae>
		  if(T<27)	mode_temp=Mode1;
 8002038:	4b26      	ldr	r3, [pc, #152]	; (80020d4 <main+0x22c>)
 800203a:	edd3 7a00 	vldr	s15, [r3]
 800203e:	eeb3 7a0b 	vmov.f32	s14, #59	; 0x41d80000  27.0
 8002042:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002046:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800204a:	d502      	bpl.n	8002052 <main+0x1aa>
 800204c:	2300      	movs	r3, #0
 800204e:	71fb      	strb	r3, [r7, #7]
 8002050:	e001      	b.n	8002056 <main+0x1ae>
		  else mode_temp=Mode31;
 8002052:	2304      	movs	r3, #4
 8002054:	71fb      	strb	r3, [r7, #7]
	  }
	  getGasConcentration(&hadc1);
 8002056:	4824      	ldr	r0, [pc, #144]	; (80020e8 <main+0x240>)
 8002058:	f7ff fee2 	bl	8001e20 <getGasConcentration>
	  Pa = BMP280_Measure();
 800205c:	f7ff fc64 	bl	8001928 <BMP280_Measure>
 8002060:	eef0 7a40 	vmov.f32	s15, s0
 8002064:	4b21      	ldr	r3, [pc, #132]	; (80020ec <main+0x244>)
 8002066:	edc3 7a00 	vstr	s15, [r3]
	  if( Pa > 96000){
 800206a:	4b20      	ldr	r3, [pc, #128]	; (80020ec <main+0x244>)
 800206c:	edd3 7a00 	vldr	s15, [r3]
 8002070:	ed9f 7a1f 	vldr	s14, [pc, #124]	; 80020f0 <main+0x248>
 8002074:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002078:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800207c:	dd09      	ble.n	8002092 <main+0x1ea>
		  HAL_GPIO_WritePin(LED_5_GPIO_Port, LED_5_Pin, GPIO_PIN_SET);
 800207e:	2201      	movs	r2, #1
 8002080:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8002084:	4814      	ldr	r0, [pc, #80]	; (80020d8 <main+0x230>)
 8002086:	f002 ff25 	bl	8004ed4 <HAL_GPIO_WritePin>
		  HAL_TIM_Base_Start_IT(&htim9);
 800208a:	4814      	ldr	r0, [pc, #80]	; (80020dc <main+0x234>)
 800208c:	f006 f828 	bl	80080e0 <HAL_TIM_Base_Start_IT>
 8002090:	e002      	b.n	8002098 <main+0x1f0>
	  }
	  else {
		  HAL_TIM_Base_Stop_IT(&htim9);
 8002092:	4812      	ldr	r0, [pc, #72]	; (80020dc <main+0x234>)
 8002094:	f006 f886 	bl	80081a4 <HAL_TIM_Base_Stop_IT>
	  }

	  hour   = DS1307_GetHour();
 8002098:	f7ff fd68 	bl	8001b6c <DS1307_GetHour>
 800209c:	4603      	mov	r3, r0
 800209e:	461a      	mov	r2, r3
 80020a0:	4b14      	ldr	r3, [pc, #80]	; (80020f4 <main+0x24c>)
 80020a2:	701a      	strb	r2, [r3, #0]
	  minute = DS1307_GetMinute();
 80020a4:	f7ff fd71 	bl	8001b8a <DS1307_GetMinute>
 80020a8:	4603      	mov	r3, r0
 80020aa:	461a      	mov	r2, r3
 80020ac:	4b12      	ldr	r3, [pc, #72]	; (80020f8 <main+0x250>)
 80020ae:	701a      	strb	r2, [r3, #0]
	  second = DS1307_GetSecond();
 80020b0:	f7ff fd77 	bl	8001ba2 <DS1307_GetSecond>
 80020b4:	4603      	mov	r3, r0
 80020b6:	461a      	mov	r2, r3
 80020b8:	4b10      	ldr	r3, [pc, #64]	; (80020fc <main+0x254>)
 80020ba:	701a      	strb	r2, [r3, #0]


    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 80020bc:	f006 ffb0 	bl	8009020 <MX_TouchGFX_Process>
	  T= LM75_TemperatureRead();
 80020c0:	e754      	b.n	8001f6c <main+0xc4>
 80020c2:	bf00      	nop
 80020c4:	20000358 	.word	0x20000358
 80020c8:	20000154 	.word	0x20000154
 80020cc:	20000158 	.word	0x20000158
 80020d0:	20000204 	.word	0x20000204
 80020d4:	20000510 	.word	0x20000510
 80020d8:	40020800 	.word	0x40020800
 80020dc:	200003a0 	.word	0x200003a0
 80020e0:	200003e8 	.word	0x200003e8
 80020e4:	2000015c 	.word	0x2000015c
 80020e8:	20000160 	.word	0x20000160
 80020ec:	20000514 	.word	0x20000514
 80020f0:	47bb8000 	.word	0x47bb8000
 80020f4:	2000051c 	.word	0x2000051c
 80020f8:	2000051d 	.word	0x2000051d
 80020fc:	2000051e 	.word	0x2000051e

08002100 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002100:	b580      	push	{r7, lr}
 8002102:	b094      	sub	sp, #80	; 0x50
 8002104:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002106:	f107 0320 	add.w	r3, r7, #32
 800210a:	2230      	movs	r2, #48	; 0x30
 800210c:	2100      	movs	r1, #0
 800210e:	4618      	mov	r0, r3
 8002110:	f029 fa73 	bl	802b5fa <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002114:	f107 030c 	add.w	r3, r7, #12
 8002118:	2200      	movs	r2, #0
 800211a:	601a      	str	r2, [r3, #0]
 800211c:	605a      	str	r2, [r3, #4]
 800211e:	609a      	str	r2, [r3, #8]
 8002120:	60da      	str	r2, [r3, #12]
 8002122:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8002124:	2300      	movs	r3, #0
 8002126:	60bb      	str	r3, [r7, #8]
 8002128:	4b27      	ldr	r3, [pc, #156]	; (80021c8 <SystemClock_Config+0xc8>)
 800212a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800212c:	4a26      	ldr	r2, [pc, #152]	; (80021c8 <SystemClock_Config+0xc8>)
 800212e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002132:	6413      	str	r3, [r2, #64]	; 0x40
 8002134:	4b24      	ldr	r3, [pc, #144]	; (80021c8 <SystemClock_Config+0xc8>)
 8002136:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002138:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800213c:	60bb      	str	r3, [r7, #8]
 800213e:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002140:	2300      	movs	r3, #0
 8002142:	607b      	str	r3, [r7, #4]
 8002144:	4b21      	ldr	r3, [pc, #132]	; (80021cc <SystemClock_Config+0xcc>)
 8002146:	681b      	ldr	r3, [r3, #0]
 8002148:	4a20      	ldr	r2, [pc, #128]	; (80021cc <SystemClock_Config+0xcc>)
 800214a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800214e:	6013      	str	r3, [r2, #0]
 8002150:	4b1e      	ldr	r3, [pc, #120]	; (80021cc <SystemClock_Config+0xcc>)
 8002152:	681b      	ldr	r3, [r3, #0]
 8002154:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8002158:	607b      	str	r3, [r7, #4]
 800215a:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800215c:	2301      	movs	r3, #1
 800215e:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8002160:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8002164:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002166:	2302      	movs	r3, #2
 8002168:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800216a:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800216e:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 12;
 8002170:	230c      	movs	r3, #12
 8002172:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 96;
 8002174:	2360      	movs	r3, #96	; 0x60
 8002176:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8002178:	2302      	movs	r3, #2
 800217a:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800217c:	2304      	movs	r3, #4
 800217e:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002180:	f107 0320 	add.w	r3, r7, #32
 8002184:	4618      	mov	r0, r3
 8002186:	f004 fb25 	bl	80067d4 <HAL_RCC_OscConfig>
 800218a:	4603      	mov	r3, r0
 800218c:	2b00      	cmp	r3, #0
 800218e:	d001      	beq.n	8002194 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8002190:	f000 fb06 	bl	80027a0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002194:	230f      	movs	r3, #15
 8002196:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002198:	2302      	movs	r3, #2
 800219a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800219c:	2300      	movs	r3, #0
 800219e:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80021a0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80021a4:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80021a6:	2300      	movs	r3, #0
 80021a8:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 80021aa:	f107 030c 	add.w	r3, r7, #12
 80021ae:	2103      	movs	r1, #3
 80021b0:	4618      	mov	r0, r3
 80021b2:	f004 fd87 	bl	8006cc4 <HAL_RCC_ClockConfig>
 80021b6:	4603      	mov	r3, r0
 80021b8:	2b00      	cmp	r3, #0
 80021ba:	d001      	beq.n	80021c0 <SystemClock_Config+0xc0>
  {
    Error_Handler();
 80021bc:	f000 faf0 	bl	80027a0 <Error_Handler>
  }
}
 80021c0:	bf00      	nop
 80021c2:	3750      	adds	r7, #80	; 0x50
 80021c4:	46bd      	mov	sp, r7
 80021c6:	bd80      	pop	{r7, pc}
 80021c8:	40023800 	.word	0x40023800
 80021cc:	40007000 	.word	0x40007000

080021d0 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 80021d0:	b580      	push	{r7, lr}
 80021d2:	b084      	sub	sp, #16
 80021d4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80021d6:	463b      	mov	r3, r7
 80021d8:	2200      	movs	r2, #0
 80021da:	601a      	str	r2, [r3, #0]
 80021dc:	605a      	str	r2, [r3, #4]
 80021de:	609a      	str	r2, [r3, #8]
 80021e0:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 80021e2:	4b21      	ldr	r3, [pc, #132]	; (8002268 <MX_ADC1_Init+0x98>)
 80021e4:	4a21      	ldr	r2, [pc, #132]	; (800226c <MX_ADC1_Init+0x9c>)
 80021e6:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80021e8:	4b1f      	ldr	r3, [pc, #124]	; (8002268 <MX_ADC1_Init+0x98>)
 80021ea:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 80021ee:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80021f0:	4b1d      	ldr	r3, [pc, #116]	; (8002268 <MX_ADC1_Init+0x98>)
 80021f2:	2200      	movs	r2, #0
 80021f4:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 80021f6:	4b1c      	ldr	r3, [pc, #112]	; (8002268 <MX_ADC1_Init+0x98>)
 80021f8:	2200      	movs	r2, #0
 80021fa:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80021fc:	4b1a      	ldr	r3, [pc, #104]	; (8002268 <MX_ADC1_Init+0x98>)
 80021fe:	2200      	movs	r2, #0
 8002200:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8002202:	4b19      	ldr	r3, [pc, #100]	; (8002268 <MX_ADC1_Init+0x98>)
 8002204:	2200      	movs	r2, #0
 8002206:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800220a:	4b17      	ldr	r3, [pc, #92]	; (8002268 <MX_ADC1_Init+0x98>)
 800220c:	2200      	movs	r2, #0
 800220e:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8002210:	4b15      	ldr	r3, [pc, #84]	; (8002268 <MX_ADC1_Init+0x98>)
 8002212:	4a17      	ldr	r2, [pc, #92]	; (8002270 <MX_ADC1_Init+0xa0>)
 8002214:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8002216:	4b14      	ldr	r3, [pc, #80]	; (8002268 <MX_ADC1_Init+0x98>)
 8002218:	2200      	movs	r2, #0
 800221a:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 800221c:	4b12      	ldr	r3, [pc, #72]	; (8002268 <MX_ADC1_Init+0x98>)
 800221e:	2201      	movs	r2, #1
 8002220:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8002222:	4b11      	ldr	r3, [pc, #68]	; (8002268 <MX_ADC1_Init+0x98>)
 8002224:	2200      	movs	r2, #0
 8002226:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800222a:	4b0f      	ldr	r3, [pc, #60]	; (8002268 <MX_ADC1_Init+0x98>)
 800222c:	2201      	movs	r2, #1
 800222e:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8002230:	480d      	ldr	r0, [pc, #52]	; (8002268 <MX_ADC1_Init+0x98>)
 8002232:	f001 fc61 	bl	8003af8 <HAL_ADC_Init>
 8002236:	4603      	mov	r3, r0
 8002238:	2b00      	cmp	r3, #0
 800223a:	d001      	beq.n	8002240 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 800223c:	f000 fab0 	bl	80027a0 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_1;
 8002240:	2301      	movs	r3, #1
 8002242:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8002244:	2301      	movs	r3, #1
 8002246:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8002248:	2300      	movs	r3, #0
 800224a:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800224c:	463b      	mov	r3, r7
 800224e:	4619      	mov	r1, r3
 8002250:	4805      	ldr	r0, [pc, #20]	; (8002268 <MX_ADC1_Init+0x98>)
 8002252:	f001 fd57 	bl	8003d04 <HAL_ADC_ConfigChannel>
 8002256:	4603      	mov	r3, r0
 8002258:	2b00      	cmp	r3, #0
 800225a:	d001      	beq.n	8002260 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 800225c:	f000 faa0 	bl	80027a0 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8002260:	bf00      	nop
 8002262:	3710      	adds	r7, #16
 8002264:	46bd      	mov	sp, r7
 8002266:	bd80      	pop	{r7, pc}
 8002268:	20000160 	.word	0x20000160
 800226c:	40012000 	.word	0x40012000
 8002270:	0f000001 	.word	0x0f000001

08002274 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8002274:	b580      	push	{r7, lr}
 8002276:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8002278:	4b06      	ldr	r3, [pc, #24]	; (8002294 <MX_CRC_Init+0x20>)
 800227a:	4a07      	ldr	r2, [pc, #28]	; (8002298 <MX_CRC_Init+0x24>)
 800227c:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800227e:	4805      	ldr	r0, [pc, #20]	; (8002294 <MX_CRC_Init+0x20>)
 8002280:	f002 f8dd 	bl	800443e <HAL_CRC_Init>
 8002284:	4603      	mov	r3, r0
 8002286:	2b00      	cmp	r3, #0
 8002288:	d001      	beq.n	800228e <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 800228a:	f000 fa89 	bl	80027a0 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 800228e:	bf00      	nop
 8002290:	bd80      	pop	{r7, pc}
 8002292:	bf00      	nop
 8002294:	200001a8 	.word	0x200001a8
 8002298:	40023000 	.word	0x40023000

0800229c <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 800229c:	b580      	push	{r7, lr}
 800229e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80022a0:	4b12      	ldr	r3, [pc, #72]	; (80022ec <MX_I2C1_Init+0x50>)
 80022a2:	4a13      	ldr	r2, [pc, #76]	; (80022f0 <MX_I2C1_Init+0x54>)
 80022a4:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 80022a6:	4b11      	ldr	r3, [pc, #68]	; (80022ec <MX_I2C1_Init+0x50>)
 80022a8:	4a12      	ldr	r2, [pc, #72]	; (80022f4 <MX_I2C1_Init+0x58>)
 80022aa:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80022ac:	4b0f      	ldr	r3, [pc, #60]	; (80022ec <MX_I2C1_Init+0x50>)
 80022ae:	2200      	movs	r2, #0
 80022b0:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 80022b2:	4b0e      	ldr	r3, [pc, #56]	; (80022ec <MX_I2C1_Init+0x50>)
 80022b4:	2200      	movs	r2, #0
 80022b6:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80022b8:	4b0c      	ldr	r3, [pc, #48]	; (80022ec <MX_I2C1_Init+0x50>)
 80022ba:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80022be:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80022c0:	4b0a      	ldr	r3, [pc, #40]	; (80022ec <MX_I2C1_Init+0x50>)
 80022c2:	2200      	movs	r2, #0
 80022c4:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 80022c6:	4b09      	ldr	r3, [pc, #36]	; (80022ec <MX_I2C1_Init+0x50>)
 80022c8:	2200      	movs	r2, #0
 80022ca:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80022cc:	4b07      	ldr	r3, [pc, #28]	; (80022ec <MX_I2C1_Init+0x50>)
 80022ce:	2200      	movs	r2, #0
 80022d0:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80022d2:	4b06      	ldr	r3, [pc, #24]	; (80022ec <MX_I2C1_Init+0x50>)
 80022d4:	2200      	movs	r2, #0
 80022d6:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80022d8:	4804      	ldr	r0, [pc, #16]	; (80022ec <MX_I2C1_Init+0x50>)
 80022da:	f002 fe47 	bl	8004f6c <HAL_I2C_Init>
 80022de:	4603      	mov	r3, r0
 80022e0:	2b00      	cmp	r3, #0
 80022e2:	d001      	beq.n	80022e8 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 80022e4:	f000 fa5c 	bl	80027a0 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 80022e8:	bf00      	nop
 80022ea:	bd80      	pop	{r7, pc}
 80022ec:	200001b0 	.word	0x200001b0
 80022f0:	40005400 	.word	0x40005400
 80022f4:	000186a0 	.word	0x000186a0

080022f8 <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 80022f8:	b580      	push	{r7, lr}
 80022fa:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 80022fc:	4b12      	ldr	r3, [pc, #72]	; (8002348 <MX_I2C2_Init+0x50>)
 80022fe:	4a13      	ldr	r2, [pc, #76]	; (800234c <MX_I2C2_Init+0x54>)
 8002300:	601a      	str	r2, [r3, #0]
  hi2c2.Init.ClockSpeed = 400000;
 8002302:	4b11      	ldr	r3, [pc, #68]	; (8002348 <MX_I2C2_Init+0x50>)
 8002304:	4a12      	ldr	r2, [pc, #72]	; (8002350 <MX_I2C2_Init+0x58>)
 8002306:	605a      	str	r2, [r3, #4]
  hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8002308:	4b0f      	ldr	r3, [pc, #60]	; (8002348 <MX_I2C2_Init+0x50>)
 800230a:	2200      	movs	r2, #0
 800230c:	609a      	str	r2, [r3, #8]
  hi2c2.Init.OwnAddress1 = 0;
 800230e:	4b0e      	ldr	r3, [pc, #56]	; (8002348 <MX_I2C2_Init+0x50>)
 8002310:	2200      	movs	r2, #0
 8002312:	60da      	str	r2, [r3, #12]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8002314:	4b0c      	ldr	r3, [pc, #48]	; (8002348 <MX_I2C2_Init+0x50>)
 8002316:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800231a:	611a      	str	r2, [r3, #16]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800231c:	4b0a      	ldr	r3, [pc, #40]	; (8002348 <MX_I2C2_Init+0x50>)
 800231e:	2200      	movs	r2, #0
 8002320:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2 = 0;
 8002322:	4b09      	ldr	r3, [pc, #36]	; (8002348 <MX_I2C2_Init+0x50>)
 8002324:	2200      	movs	r2, #0
 8002326:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002328:	4b07      	ldr	r3, [pc, #28]	; (8002348 <MX_I2C2_Init+0x50>)
 800232a:	2200      	movs	r2, #0
 800232c:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800232e:	4b06      	ldr	r3, [pc, #24]	; (8002348 <MX_I2C2_Init+0x50>)
 8002330:	2200      	movs	r2, #0
 8002332:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8002334:	4804      	ldr	r0, [pc, #16]	; (8002348 <MX_I2C2_Init+0x50>)
 8002336:	f002 fe19 	bl	8004f6c <HAL_I2C_Init>
 800233a:	4603      	mov	r3, r0
 800233c:	2b00      	cmp	r3, #0
 800233e:	d001      	beq.n	8002344 <MX_I2C2_Init+0x4c>
  {
    Error_Handler();
 8002340:	f000 fa2e 	bl	80027a0 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 8002344:	bf00      	nop
 8002346:	bd80      	pop	{r7, pc}
 8002348:	20000204 	.word	0x20000204
 800234c:	40005800 	.word	0x40005800
 8002350:	00061a80 	.word	0x00061a80

08002354 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8002354:	b580      	push	{r7, lr}
 8002356:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 8002358:	4b17      	ldr	r3, [pc, #92]	; (80023b8 <MX_SPI2_Init+0x64>)
 800235a:	4a18      	ldr	r2, [pc, #96]	; (80023bc <MX_SPI2_Init+0x68>)
 800235c:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 800235e:	4b16      	ldr	r3, [pc, #88]	; (80023b8 <MX_SPI2_Init+0x64>)
 8002360:	f44f 7282 	mov.w	r2, #260	; 0x104
 8002364:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8002366:	4b14      	ldr	r3, [pc, #80]	; (80023b8 <MX_SPI2_Init+0x64>)
 8002368:	2200      	movs	r2, #0
 800236a:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 800236c:	4b12      	ldr	r3, [pc, #72]	; (80023b8 <MX_SPI2_Init+0x64>)
 800236e:	2200      	movs	r2, #0
 8002370:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 8002372:	4b11      	ldr	r3, [pc, #68]	; (80023b8 <MX_SPI2_Init+0x64>)
 8002374:	2200      	movs	r2, #0
 8002376:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8002378:	4b0f      	ldr	r3, [pc, #60]	; (80023b8 <MX_SPI2_Init+0x64>)
 800237a:	2200      	movs	r2, #0
 800237c:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 800237e:	4b0e      	ldr	r3, [pc, #56]	; (80023b8 <MX_SPI2_Init+0x64>)
 8002380:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002384:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8002386:	4b0c      	ldr	r3, [pc, #48]	; (80023b8 <MX_SPI2_Init+0x64>)
 8002388:	2200      	movs	r2, #0
 800238a:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800238c:	4b0a      	ldr	r3, [pc, #40]	; (80023b8 <MX_SPI2_Init+0x64>)
 800238e:	2200      	movs	r2, #0
 8002390:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8002392:	4b09      	ldr	r3, [pc, #36]	; (80023b8 <MX_SPI2_Init+0x64>)
 8002394:	2200      	movs	r2, #0
 8002396:	625a      	str	r2, [r3, #36]	; 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002398:	4b07      	ldr	r3, [pc, #28]	; (80023b8 <MX_SPI2_Init+0x64>)
 800239a:	2200      	movs	r2, #0
 800239c:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 10;
 800239e:	4b06      	ldr	r3, [pc, #24]	; (80023b8 <MX_SPI2_Init+0x64>)
 80023a0:	220a      	movs	r2, #10
 80023a2:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 80023a4:	4804      	ldr	r0, [pc, #16]	; (80023b8 <MX_SPI2_Init+0x64>)
 80023a6:	f004 fe59 	bl	800705c <HAL_SPI_Init>
 80023aa:	4603      	mov	r3, r0
 80023ac:	2b00      	cmp	r3, #0
 80023ae:	d001      	beq.n	80023b4 <MX_SPI2_Init+0x60>
  {
    Error_Handler();
 80023b0:	f000 f9f6 	bl	80027a0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 80023b4:	bf00      	nop
 80023b6:	bd80      	pop	{r7, pc}
 80023b8:	20000258 	.word	0x20000258
 80023bc:	40003800 	.word	0x40003800

080023c0 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80023c0:	b580      	push	{r7, lr}
 80023c2:	b08a      	sub	sp, #40	; 0x28
 80023c4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80023c6:	f107 0320 	add.w	r3, r7, #32
 80023ca:	2200      	movs	r2, #0
 80023cc:	601a      	str	r2, [r3, #0]
 80023ce:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80023d0:	1d3b      	adds	r3, r7, #4
 80023d2:	2200      	movs	r2, #0
 80023d4:	601a      	str	r2, [r3, #0]
 80023d6:	605a      	str	r2, [r3, #4]
 80023d8:	609a      	str	r2, [r3, #8]
 80023da:	60da      	str	r2, [r3, #12]
 80023dc:	611a      	str	r2, [r3, #16]
 80023de:	615a      	str	r2, [r3, #20]
 80023e0:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80023e2:	4b22      	ldr	r3, [pc, #136]	; (800246c <MX_TIM2_Init+0xac>)
 80023e4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80023e8:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 1000;
 80023ea:	4b20      	ldr	r3, [pc, #128]	; (800246c <MX_TIM2_Init+0xac>)
 80023ec:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80023f0:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80023f2:	4b1e      	ldr	r3, [pc, #120]	; (800246c <MX_TIM2_Init+0xac>)
 80023f4:	2200      	movs	r2, #0
 80023f6:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 100;
 80023f8:	4b1c      	ldr	r3, [pc, #112]	; (800246c <MX_TIM2_Init+0xac>)
 80023fa:	2264      	movs	r2, #100	; 0x64
 80023fc:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80023fe:	4b1b      	ldr	r3, [pc, #108]	; (800246c <MX_TIM2_Init+0xac>)
 8002400:	2200      	movs	r2, #0
 8002402:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002404:	4b19      	ldr	r3, [pc, #100]	; (800246c <MX_TIM2_Init+0xac>)
 8002406:	2200      	movs	r2, #0
 8002408:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 800240a:	4818      	ldr	r0, [pc, #96]	; (800246c <MX_TIM2_Init+0xac>)
 800240c:	f005 fef9 	bl	8008202 <HAL_TIM_PWM_Init>
 8002410:	4603      	mov	r3, r0
 8002412:	2b00      	cmp	r3, #0
 8002414:	d001      	beq.n	800241a <MX_TIM2_Init+0x5a>
  {
    Error_Handler();
 8002416:	f000 f9c3 	bl	80027a0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800241a:	2300      	movs	r3, #0
 800241c:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800241e:	2300      	movs	r3, #0
 8002420:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002422:	f107 0320 	add.w	r3, r7, #32
 8002426:	4619      	mov	r1, r3
 8002428:	4810      	ldr	r0, [pc, #64]	; (800246c <MX_TIM2_Init+0xac>)
 800242a:	f006 fd6f 	bl	8008f0c <HAL_TIMEx_MasterConfigSynchronization>
 800242e:	4603      	mov	r3, r0
 8002430:	2b00      	cmp	r3, #0
 8002432:	d001      	beq.n	8002438 <MX_TIM2_Init+0x78>
  {
    Error_Handler();
 8002434:	f000 f9b4 	bl	80027a0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002438:	2360      	movs	r3, #96	; 0x60
 800243a:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 800243c:	2300      	movs	r3, #0
 800243e:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002440:	2300      	movs	r3, #0
 8002442:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002444:	2300      	movs	r3, #0
 8002446:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002448:	1d3b      	adds	r3, r7, #4
 800244a:	2200      	movs	r2, #0
 800244c:	4619      	mov	r1, r3
 800244e:	4807      	ldr	r0, [pc, #28]	; (800246c <MX_TIM2_Init+0xac>)
 8002450:	f006 f8de 	bl	8008610 <HAL_TIM_PWM_ConfigChannel>
 8002454:	4603      	mov	r3, r0
 8002456:	2b00      	cmp	r3, #0
 8002458:	d001      	beq.n	800245e <MX_TIM2_Init+0x9e>
  {
    Error_Handler();
 800245a:	f000 f9a1 	bl	80027a0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 800245e:	4803      	ldr	r0, [pc, #12]	; (800246c <MX_TIM2_Init+0xac>)
 8002460:	f000 fbc4 	bl	8002bec <HAL_TIM_MspPostInit>

}
 8002464:	bf00      	nop
 8002466:	3728      	adds	r7, #40	; 0x28
 8002468:	46bd      	mov	sp, r7
 800246a:	bd80      	pop	{r7, pc}
 800246c:	20000310 	.word	0x20000310

08002470 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8002470:	b580      	push	{r7, lr}
 8002472:	b086      	sub	sp, #24
 8002474:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002476:	f107 0308 	add.w	r3, r7, #8
 800247a:	2200      	movs	r2, #0
 800247c:	601a      	str	r2, [r3, #0]
 800247e:	605a      	str	r2, [r3, #4]
 8002480:	609a      	str	r2, [r3, #8]
 8002482:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002484:	463b      	mov	r3, r7
 8002486:	2200      	movs	r2, #0
 8002488:	601a      	str	r2, [r3, #0]
 800248a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 800248c:	4b1d      	ldr	r3, [pc, #116]	; (8002504 <MX_TIM3_Init+0x94>)
 800248e:	4a1e      	ldr	r2, [pc, #120]	; (8002508 <MX_TIM3_Init+0x98>)
 8002490:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 13333;
 8002492:	4b1c      	ldr	r3, [pc, #112]	; (8002504 <MX_TIM3_Init+0x94>)
 8002494:	f243 4215 	movw	r2, #13333	; 0x3415
 8002498:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800249a:	4b1a      	ldr	r3, [pc, #104]	; (8002504 <MX_TIM3_Init+0x94>)
 800249c:	2200      	movs	r2, #0
 800249e:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 100;
 80024a0:	4b18      	ldr	r3, [pc, #96]	; (8002504 <MX_TIM3_Init+0x94>)
 80024a2:	2264      	movs	r2, #100	; 0x64
 80024a4:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80024a6:	4b17      	ldr	r3, [pc, #92]	; (8002504 <MX_TIM3_Init+0x94>)
 80024a8:	2200      	movs	r2, #0
 80024aa:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80024ac:	4b15      	ldr	r3, [pc, #84]	; (8002504 <MX_TIM3_Init+0x94>)
 80024ae:	2200      	movs	r2, #0
 80024b0:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80024b2:	4814      	ldr	r0, [pc, #80]	; (8002504 <MX_TIM3_Init+0x94>)
 80024b4:	f005 fdc4 	bl	8008040 <HAL_TIM_Base_Init>
 80024b8:	4603      	mov	r3, r0
 80024ba:	2b00      	cmp	r3, #0
 80024bc:	d001      	beq.n	80024c2 <MX_TIM3_Init+0x52>
  {
    Error_Handler();
 80024be:	f000 f96f 	bl	80027a0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80024c2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80024c6:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80024c8:	f107 0308 	add.w	r3, r7, #8
 80024cc:	4619      	mov	r1, r3
 80024ce:	480d      	ldr	r0, [pc, #52]	; (8002504 <MX_TIM3_Init+0x94>)
 80024d0:	f006 f960 	bl	8008794 <HAL_TIM_ConfigClockSource>
 80024d4:	4603      	mov	r3, r0
 80024d6:	2b00      	cmp	r3, #0
 80024d8:	d001      	beq.n	80024de <MX_TIM3_Init+0x6e>
  {
    Error_Handler();
 80024da:	f000 f961 	bl	80027a0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80024de:	2300      	movs	r3, #0
 80024e0:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80024e2:	2300      	movs	r3, #0
 80024e4:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80024e6:	463b      	mov	r3, r7
 80024e8:	4619      	mov	r1, r3
 80024ea:	4806      	ldr	r0, [pc, #24]	; (8002504 <MX_TIM3_Init+0x94>)
 80024ec:	f006 fd0e 	bl	8008f0c <HAL_TIMEx_MasterConfigSynchronization>
 80024f0:	4603      	mov	r3, r0
 80024f2:	2b00      	cmp	r3, #0
 80024f4:	d001      	beq.n	80024fa <MX_TIM3_Init+0x8a>
  {
    Error_Handler();
 80024f6:	f000 f953 	bl	80027a0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 80024fa:	bf00      	nop
 80024fc:	3718      	adds	r7, #24
 80024fe:	46bd      	mov	sp, r7
 8002500:	bd80      	pop	{r7, pc}
 8002502:	bf00      	nop
 8002504:	20000358 	.word	0x20000358
 8002508:	40000400 	.word	0x40000400

0800250c <MX_TIM9_Init>:
  * @brief TIM9 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM9_Init(void)
{
 800250c:	b580      	push	{r7, lr}
 800250e:	b084      	sub	sp, #16
 8002510:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM9_Init 0 */

  /* USER CODE END TIM9_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002512:	463b      	mov	r3, r7
 8002514:	2200      	movs	r2, #0
 8002516:	601a      	str	r2, [r3, #0]
 8002518:	605a      	str	r2, [r3, #4]
 800251a:	609a      	str	r2, [r3, #8]
 800251c:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM9_Init 1 */

  /* USER CODE END TIM9_Init 1 */
  htim9.Instance = TIM9;
 800251e:	4b16      	ldr	r3, [pc, #88]	; (8002578 <MX_TIM9_Init+0x6c>)
 8002520:	4a16      	ldr	r2, [pc, #88]	; (800257c <MX_TIM9_Init+0x70>)
 8002522:	601a      	str	r2, [r3, #0]
  htim9.Init.Prescaler = 49;
 8002524:	4b14      	ldr	r3, [pc, #80]	; (8002578 <MX_TIM9_Init+0x6c>)
 8002526:	2231      	movs	r2, #49	; 0x31
 8002528:	605a      	str	r2, [r3, #4]
  htim9.Init.CounterMode = TIM_COUNTERMODE_UP;
 800252a:	4b13      	ldr	r3, [pc, #76]	; (8002578 <MX_TIM9_Init+0x6c>)
 800252c:	2200      	movs	r2, #0
 800252e:	609a      	str	r2, [r3, #8]
  htim9.Init.Period = 999;
 8002530:	4b11      	ldr	r3, [pc, #68]	; (8002578 <MX_TIM9_Init+0x6c>)
 8002532:	f240 32e7 	movw	r2, #999	; 0x3e7
 8002536:	60da      	str	r2, [r3, #12]
  htim9.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002538:	4b0f      	ldr	r3, [pc, #60]	; (8002578 <MX_TIM9_Init+0x6c>)
 800253a:	2200      	movs	r2, #0
 800253c:	611a      	str	r2, [r3, #16]
  htim9.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800253e:	4b0e      	ldr	r3, [pc, #56]	; (8002578 <MX_TIM9_Init+0x6c>)
 8002540:	2200      	movs	r2, #0
 8002542:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 8002544:	480c      	ldr	r0, [pc, #48]	; (8002578 <MX_TIM9_Init+0x6c>)
 8002546:	f005 fd7b 	bl	8008040 <HAL_TIM_Base_Init>
 800254a:	4603      	mov	r3, r0
 800254c:	2b00      	cmp	r3, #0
 800254e:	d001      	beq.n	8002554 <MX_TIM9_Init+0x48>
  {
    Error_Handler();
 8002550:	f000 f926 	bl	80027a0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002554:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002558:	603b      	str	r3, [r7, #0]
  if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 800255a:	463b      	mov	r3, r7
 800255c:	4619      	mov	r1, r3
 800255e:	4806      	ldr	r0, [pc, #24]	; (8002578 <MX_TIM9_Init+0x6c>)
 8002560:	f006 f918 	bl	8008794 <HAL_TIM_ConfigClockSource>
 8002564:	4603      	mov	r3, r0
 8002566:	2b00      	cmp	r3, #0
 8002568:	d001      	beq.n	800256e <MX_TIM9_Init+0x62>
  {
    Error_Handler();
 800256a:	f000 f919 	bl	80027a0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM9_Init 2 */

  /* USER CODE END TIM9_Init 2 */

}
 800256e:	bf00      	nop
 8002570:	3710      	adds	r7, #16
 8002572:	46bd      	mov	sp, r7
 8002574:	bd80      	pop	{r7, pc}
 8002576:	bf00      	nop
 8002578:	200003a0 	.word	0x200003a0
 800257c:	40014000 	.word	0x40014000

08002580 <MX_TIM10_Init>:
  * @brief TIM10 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM10_Init(void)
{
 8002580:	b580      	push	{r7, lr}
 8002582:	af00      	add	r7, sp, #0
  /* USER CODE END TIM10_Init 0 */

  /* USER CODE BEGIN TIM10_Init 1 */

  /* USER CODE END TIM10_Init 1 */
  htim10.Instance = TIM10;
 8002584:	4b0e      	ldr	r3, [pc, #56]	; (80025c0 <MX_TIM10_Init+0x40>)
 8002586:	4a0f      	ldr	r2, [pc, #60]	; (80025c4 <MX_TIM10_Init+0x44>)
 8002588:	601a      	str	r2, [r3, #0]
  htim10.Init.Prescaler = 4999;
 800258a:	4b0d      	ldr	r3, [pc, #52]	; (80025c0 <MX_TIM10_Init+0x40>)
 800258c:	f241 3287 	movw	r2, #4999	; 0x1387
 8002590:	605a      	str	r2, [r3, #4]
  htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002592:	4b0b      	ldr	r3, [pc, #44]	; (80025c0 <MX_TIM10_Init+0x40>)
 8002594:	2200      	movs	r2, #0
 8002596:	609a      	str	r2, [r3, #8]
  htim10.Init.Period = 199;
 8002598:	4b09      	ldr	r3, [pc, #36]	; (80025c0 <MX_TIM10_Init+0x40>)
 800259a:	22c7      	movs	r2, #199	; 0xc7
 800259c:	60da      	str	r2, [r3, #12]
  htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800259e:	4b08      	ldr	r3, [pc, #32]	; (80025c0 <MX_TIM10_Init+0x40>)
 80025a0:	2200      	movs	r2, #0
 80025a2:	611a      	str	r2, [r3, #16]
  htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80025a4:	4b06      	ldr	r3, [pc, #24]	; (80025c0 <MX_TIM10_Init+0x40>)
 80025a6:	2200      	movs	r2, #0
 80025a8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 80025aa:	4805      	ldr	r0, [pc, #20]	; (80025c0 <MX_TIM10_Init+0x40>)
 80025ac:	f005 fd48 	bl	8008040 <HAL_TIM_Base_Init>
 80025b0:	4603      	mov	r3, r0
 80025b2:	2b00      	cmp	r3, #0
 80025b4:	d001      	beq.n	80025ba <MX_TIM10_Init+0x3a>
  {
    Error_Handler();
 80025b6:	f000 f8f3 	bl	80027a0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM10_Init 2 */

  /* USER CODE END TIM10_Init 2 */

}
 80025ba:	bf00      	nop
 80025bc:	bd80      	pop	{r7, pc}
 80025be:	bf00      	nop
 80025c0:	200003e8 	.word	0x200003e8
 80025c4:	40014400 	.word	0x40014400

080025c8 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80025c8:	b580      	push	{r7, lr}
 80025ca:	b082      	sub	sp, #8
 80025cc:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80025ce:	2300      	movs	r3, #0
 80025d0:	607b      	str	r3, [r7, #4]
 80025d2:	4b0c      	ldr	r3, [pc, #48]	; (8002604 <MX_DMA_Init+0x3c>)
 80025d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80025d6:	4a0b      	ldr	r2, [pc, #44]	; (8002604 <MX_DMA_Init+0x3c>)
 80025d8:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80025dc:	6313      	str	r3, [r2, #48]	; 0x30
 80025de:	4b09      	ldr	r3, [pc, #36]	; (8002604 <MX_DMA_Init+0x3c>)
 80025e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80025e2:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80025e6:	607b      	str	r3, [r7, #4]
 80025e8:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream4_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
 80025ea:	2200      	movs	r2, #0
 80025ec:	2100      	movs	r1, #0
 80025ee:	200f      	movs	r0, #15
 80025f0:	f001 fed3 	bl	800439a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 80025f4:	200f      	movs	r0, #15
 80025f6:	f001 feec 	bl	80043d2 <HAL_NVIC_EnableIRQ>

}
 80025fa:	bf00      	nop
 80025fc:	3708      	adds	r7, #8
 80025fe:	46bd      	mov	sp, r7
 8002600:	bd80      	pop	{r7, pc}
 8002602:	bf00      	nop
 8002604:	40023800 	.word	0x40023800

08002608 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002608:	b580      	push	{r7, lr}
 800260a:	b08a      	sub	sp, #40	; 0x28
 800260c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800260e:	f107 0314 	add.w	r3, r7, #20
 8002612:	2200      	movs	r2, #0
 8002614:	601a      	str	r2, [r3, #0]
 8002616:	605a      	str	r2, [r3, #4]
 8002618:	609a      	str	r2, [r3, #8]
 800261a:	60da      	str	r2, [r3, #12]
 800261c:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800261e:	2300      	movs	r3, #0
 8002620:	613b      	str	r3, [r7, #16]
 8002622:	4b5b      	ldr	r3, [pc, #364]	; (8002790 <MX_GPIO_Init+0x188>)
 8002624:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002626:	4a5a      	ldr	r2, [pc, #360]	; (8002790 <MX_GPIO_Init+0x188>)
 8002628:	f043 0304 	orr.w	r3, r3, #4
 800262c:	6313      	str	r3, [r2, #48]	; 0x30
 800262e:	4b58      	ldr	r3, [pc, #352]	; (8002790 <MX_GPIO_Init+0x188>)
 8002630:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002632:	f003 0304 	and.w	r3, r3, #4
 8002636:	613b      	str	r3, [r7, #16]
 8002638:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800263a:	2300      	movs	r3, #0
 800263c:	60fb      	str	r3, [r7, #12]
 800263e:	4b54      	ldr	r3, [pc, #336]	; (8002790 <MX_GPIO_Init+0x188>)
 8002640:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002642:	4a53      	ldr	r2, [pc, #332]	; (8002790 <MX_GPIO_Init+0x188>)
 8002644:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002648:	6313      	str	r3, [r2, #48]	; 0x30
 800264a:	4b51      	ldr	r3, [pc, #324]	; (8002790 <MX_GPIO_Init+0x188>)
 800264c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800264e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002652:	60fb      	str	r3, [r7, #12]
 8002654:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002656:	2300      	movs	r3, #0
 8002658:	60bb      	str	r3, [r7, #8]
 800265a:	4b4d      	ldr	r3, [pc, #308]	; (8002790 <MX_GPIO_Init+0x188>)
 800265c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800265e:	4a4c      	ldr	r2, [pc, #304]	; (8002790 <MX_GPIO_Init+0x188>)
 8002660:	f043 0301 	orr.w	r3, r3, #1
 8002664:	6313      	str	r3, [r2, #48]	; 0x30
 8002666:	4b4a      	ldr	r3, [pc, #296]	; (8002790 <MX_GPIO_Init+0x188>)
 8002668:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800266a:	f003 0301 	and.w	r3, r3, #1
 800266e:	60bb      	str	r3, [r7, #8]
 8002670:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002672:	2300      	movs	r3, #0
 8002674:	607b      	str	r3, [r7, #4]
 8002676:	4b46      	ldr	r3, [pc, #280]	; (8002790 <MX_GPIO_Init+0x188>)
 8002678:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800267a:	4a45      	ldr	r2, [pc, #276]	; (8002790 <MX_GPIO_Init+0x188>)
 800267c:	f043 0302 	orr.w	r3, r3, #2
 8002680:	6313      	str	r3, [r2, #48]	; 0x30
 8002682:	4b43      	ldr	r3, [pc, #268]	; (8002790 <MX_GPIO_Init+0x188>)
 8002684:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002686:	f003 0302 	and.w	r3, r3, #2
 800268a:	607b      	str	r3, [r7, #4]
 800268c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, LED_4_Pin|LED_5_Pin, GPIO_PIN_RESET);
 800268e:	2200      	movs	r2, #0
 8002690:	f44f 4140 	mov.w	r1, #49152	; 0xc000
 8002694:	483f      	ldr	r0, [pc, #252]	; (8002794 <MX_GPIO_Init+0x18c>)
 8002696:	f002 fc1d 	bl	8004ed4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(BUZZER_1_GPIO_Port, BUZZER_1_Pin, GPIO_PIN_RESET);
 800269a:	2200      	movs	r2, #0
 800269c:	2104      	movs	r1, #4
 800269e:	483e      	ldr	r0, [pc, #248]	; (8002798 <MX_GPIO_Init+0x190>)
 80026a0:	f002 fc18 	bl	8004ed4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);
 80026a4:	2201      	movs	r2, #1
 80026a6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80026aa:	483b      	ldr	r0, [pc, #236]	; (8002798 <MX_GPIO_Init+0x190>)
 80026ac:	f002 fc12 	bl	8004ed4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET);
 80026b0:	2201      	movs	r2, #1
 80026b2:	f44f 7180 	mov.w	r1, #256	; 0x100
 80026b6:	4839      	ldr	r0, [pc, #228]	; (800279c <MX_GPIO_Init+0x194>)
 80026b8:	f002 fc0c 	bl	8004ed4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, DISPL_RST_Pin|DISPL_DC_Pin, GPIO_PIN_RESET);
 80026bc:	2200      	movs	r2, #0
 80026be:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80026c2:	4836      	ldr	r0, [pc, #216]	; (800279c <MX_GPIO_Init+0x194>)
 80026c4:	f002 fc06 	bl	8004ed4 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : LED_4_Pin LED_5_Pin */
  GPIO_InitStruct.Pin = LED_4_Pin|LED_5_Pin;
 80026c8:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 80026cc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80026ce:	2301      	movs	r3, #1
 80026d0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026d2:	2300      	movs	r3, #0
 80026d4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80026d6:	2300      	movs	r3, #0
 80026d8:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026da:	f107 0314 	add.w	r3, r7, #20
 80026de:	4619      	mov	r1, r3
 80026e0:	482c      	ldr	r0, [pc, #176]	; (8002794 <MX_GPIO_Init+0x18c>)
 80026e2:	f002 fa5b 	bl	8004b9c <HAL_GPIO_Init>

  /*Configure GPIO pin : BUZZER_1_Pin */
  GPIO_InitStruct.Pin = BUZZER_1_Pin;
 80026e6:	2304      	movs	r3, #4
 80026e8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80026ea:	2301      	movs	r3, #1
 80026ec:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026ee:	2300      	movs	r3, #0
 80026f0:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80026f2:	2300      	movs	r3, #0
 80026f4:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(BUZZER_1_GPIO_Port, &GPIO_InitStruct);
 80026f6:	f107 0314 	add.w	r3, r7, #20
 80026fa:	4619      	mov	r1, r3
 80026fc:	4826      	ldr	r0, [pc, #152]	; (8002798 <MX_GPIO_Init+0x190>)
 80026fe:	f002 fa4d 	bl	8004b9c <HAL_GPIO_Init>

  /*Configure GPIO pin : TOUCH_CS_Pin */
  GPIO_InitStruct.Pin = TOUCH_CS_Pin;
 8002702:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002706:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002708:	2301      	movs	r3, #1
 800270a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800270c:	2300      	movs	r3, #0
 800270e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002710:	2302      	movs	r3, #2
 8002712:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(TOUCH_CS_GPIO_Port, &GPIO_InitStruct);
 8002714:	f107 0314 	add.w	r3, r7, #20
 8002718:	4619      	mov	r1, r3
 800271a:	481f      	ldr	r0, [pc, #124]	; (8002798 <MX_GPIO_Init+0x190>)
 800271c:	f002 fa3e 	bl	8004b9c <HAL_GPIO_Init>

  /*Configure GPIO pins : DISPL_CS_Pin DISPL_DC_Pin */
  GPIO_InitStruct.Pin = DISPL_CS_Pin|DISPL_DC_Pin;
 8002720:	f44f 63a0 	mov.w	r3, #1280	; 0x500
 8002724:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002726:	2301      	movs	r3, #1
 8002728:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800272a:	2300      	movs	r3, #0
 800272c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800272e:	2302      	movs	r3, #2
 8002730:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002732:	f107 0314 	add.w	r3, r7, #20
 8002736:	4619      	mov	r1, r3
 8002738:	4818      	ldr	r0, [pc, #96]	; (800279c <MX_GPIO_Init+0x194>)
 800273a:	f002 fa2f 	bl	8004b9c <HAL_GPIO_Init>

  /*Configure GPIO pin : DISPL_RST_Pin */
  GPIO_InitStruct.Pin = DISPL_RST_Pin;
 800273e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8002742:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002744:	2301      	movs	r3, #1
 8002746:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002748:	2300      	movs	r3, #0
 800274a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800274c:	2300      	movs	r3, #0
 800274e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(DISPL_RST_GPIO_Port, &GPIO_InitStruct);
 8002750:	f107 0314 	add.w	r3, r7, #20
 8002754:	4619      	mov	r1, r3
 8002756:	4811      	ldr	r0, [pc, #68]	; (800279c <MX_GPIO_Init+0x194>)
 8002758:	f002 fa20 	bl	8004b9c <HAL_GPIO_Init>

  /*Configure GPIO pin : TOUCH_INT_Pin */
  GPIO_InitStruct.Pin = TOUCH_INT_Pin;
 800275c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002760:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8002762:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8002766:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002768:	2301      	movs	r3, #1
 800276a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(TOUCH_INT_GPIO_Port, &GPIO_InitStruct);
 800276c:	f107 0314 	add.w	r3, r7, #20
 8002770:	4619      	mov	r1, r3
 8002772:	480a      	ldr	r0, [pc, #40]	; (800279c <MX_GPIO_Init+0x194>)
 8002774:	f002 fa12 	bl	8004b9c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8002778:	2200      	movs	r2, #0
 800277a:	2100      	movs	r1, #0
 800277c:	2028      	movs	r0, #40	; 0x28
 800277e:	f001 fe0c 	bl	800439a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8002782:	2028      	movs	r0, #40	; 0x28
 8002784:	f001 fe25 	bl	80043d2 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8002788:	bf00      	nop
 800278a:	3728      	adds	r7, #40	; 0x28
 800278c:	46bd      	mov	sp, r7
 800278e:	bd80      	pop	{r7, pc}
 8002790:	40023800 	.word	0x40023800
 8002794:	40020800 	.word	0x40020800
 8002798:	40020400 	.word	0x40020400
 800279c:	40020000 	.word	0x40020000

080027a0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80027a0:	b480      	push	{r7}
 80027a2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80027a4:	b672      	cpsid	i
}
 80027a6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80027a8:	e7fe      	b.n	80027a8 <Error_Handler+0x8>
	...

080027ac <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80027ac:	b480      	push	{r7}
 80027ae:	b083      	sub	sp, #12
 80027b0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80027b2:	2300      	movs	r3, #0
 80027b4:	607b      	str	r3, [r7, #4]
 80027b6:	4b10      	ldr	r3, [pc, #64]	; (80027f8 <HAL_MspInit+0x4c>)
 80027b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80027ba:	4a0f      	ldr	r2, [pc, #60]	; (80027f8 <HAL_MspInit+0x4c>)
 80027bc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80027c0:	6453      	str	r3, [r2, #68]	; 0x44
 80027c2:	4b0d      	ldr	r3, [pc, #52]	; (80027f8 <HAL_MspInit+0x4c>)
 80027c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80027c6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80027ca:	607b      	str	r3, [r7, #4]
 80027cc:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80027ce:	2300      	movs	r3, #0
 80027d0:	603b      	str	r3, [r7, #0]
 80027d2:	4b09      	ldr	r3, [pc, #36]	; (80027f8 <HAL_MspInit+0x4c>)
 80027d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80027d6:	4a08      	ldr	r2, [pc, #32]	; (80027f8 <HAL_MspInit+0x4c>)
 80027d8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80027dc:	6413      	str	r3, [r2, #64]	; 0x40
 80027de:	4b06      	ldr	r3, [pc, #24]	; (80027f8 <HAL_MspInit+0x4c>)
 80027e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80027e2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80027e6:	603b      	str	r3, [r7, #0]
 80027e8:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80027ea:	bf00      	nop
 80027ec:	370c      	adds	r7, #12
 80027ee:	46bd      	mov	sp, r7
 80027f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027f4:	4770      	bx	lr
 80027f6:	bf00      	nop
 80027f8:	40023800 	.word	0x40023800

080027fc <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80027fc:	b580      	push	{r7, lr}
 80027fe:	b08a      	sub	sp, #40	; 0x28
 8002800:	af00      	add	r7, sp, #0
 8002802:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002804:	f107 0314 	add.w	r3, r7, #20
 8002808:	2200      	movs	r2, #0
 800280a:	601a      	str	r2, [r3, #0]
 800280c:	605a      	str	r2, [r3, #4]
 800280e:	609a      	str	r2, [r3, #8]
 8002810:	60da      	str	r2, [r3, #12]
 8002812:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8002814:	687b      	ldr	r3, [r7, #4]
 8002816:	681b      	ldr	r3, [r3, #0]
 8002818:	4a17      	ldr	r2, [pc, #92]	; (8002878 <HAL_ADC_MspInit+0x7c>)
 800281a:	4293      	cmp	r3, r2
 800281c:	d127      	bne.n	800286e <HAL_ADC_MspInit+0x72>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800281e:	2300      	movs	r3, #0
 8002820:	613b      	str	r3, [r7, #16]
 8002822:	4b16      	ldr	r3, [pc, #88]	; (800287c <HAL_ADC_MspInit+0x80>)
 8002824:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002826:	4a15      	ldr	r2, [pc, #84]	; (800287c <HAL_ADC_MspInit+0x80>)
 8002828:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800282c:	6453      	str	r3, [r2, #68]	; 0x44
 800282e:	4b13      	ldr	r3, [pc, #76]	; (800287c <HAL_ADC_MspInit+0x80>)
 8002830:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002832:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002836:	613b      	str	r3, [r7, #16]
 8002838:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800283a:	2300      	movs	r3, #0
 800283c:	60fb      	str	r3, [r7, #12]
 800283e:	4b0f      	ldr	r3, [pc, #60]	; (800287c <HAL_ADC_MspInit+0x80>)
 8002840:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002842:	4a0e      	ldr	r2, [pc, #56]	; (800287c <HAL_ADC_MspInit+0x80>)
 8002844:	f043 0301 	orr.w	r3, r3, #1
 8002848:	6313      	str	r3, [r2, #48]	; 0x30
 800284a:	4b0c      	ldr	r3, [pc, #48]	; (800287c <HAL_ADC_MspInit+0x80>)
 800284c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800284e:	f003 0301 	and.w	r3, r3, #1
 8002852:	60fb      	str	r3, [r7, #12]
 8002854:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PA1     ------> ADC1_IN1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8002856:	2302      	movs	r3, #2
 8002858:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800285a:	2303      	movs	r3, #3
 800285c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800285e:	2300      	movs	r3, #0
 8002860:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002862:	f107 0314 	add.w	r3, r7, #20
 8002866:	4619      	mov	r1, r3
 8002868:	4805      	ldr	r0, [pc, #20]	; (8002880 <HAL_ADC_MspInit+0x84>)
 800286a:	f002 f997 	bl	8004b9c <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 800286e:	bf00      	nop
 8002870:	3728      	adds	r7, #40	; 0x28
 8002872:	46bd      	mov	sp, r7
 8002874:	bd80      	pop	{r7, pc}
 8002876:	bf00      	nop
 8002878:	40012000 	.word	0x40012000
 800287c:	40023800 	.word	0x40023800
 8002880:	40020000 	.word	0x40020000

08002884 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8002884:	b480      	push	{r7}
 8002886:	b085      	sub	sp, #20
 8002888:	af00      	add	r7, sp, #0
 800288a:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 800288c:	687b      	ldr	r3, [r7, #4]
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	4a0b      	ldr	r2, [pc, #44]	; (80028c0 <HAL_CRC_MspInit+0x3c>)
 8002892:	4293      	cmp	r3, r2
 8002894:	d10d      	bne.n	80028b2 <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002896:	2300      	movs	r3, #0
 8002898:	60fb      	str	r3, [r7, #12]
 800289a:	4b0a      	ldr	r3, [pc, #40]	; (80028c4 <HAL_CRC_MspInit+0x40>)
 800289c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800289e:	4a09      	ldr	r2, [pc, #36]	; (80028c4 <HAL_CRC_MspInit+0x40>)
 80028a0:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80028a4:	6313      	str	r3, [r2, #48]	; 0x30
 80028a6:	4b07      	ldr	r3, [pc, #28]	; (80028c4 <HAL_CRC_MspInit+0x40>)
 80028a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028aa:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80028ae:	60fb      	str	r3, [r7, #12]
 80028b0:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80028b2:	bf00      	nop
 80028b4:	3714      	adds	r7, #20
 80028b6:	46bd      	mov	sp, r7
 80028b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028bc:	4770      	bx	lr
 80028be:	bf00      	nop
 80028c0:	40023000 	.word	0x40023000
 80028c4:	40023800 	.word	0x40023800

080028c8 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80028c8:	b580      	push	{r7, lr}
 80028ca:	b08c      	sub	sp, #48	; 0x30
 80028cc:	af00      	add	r7, sp, #0
 80028ce:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80028d0:	f107 031c 	add.w	r3, r7, #28
 80028d4:	2200      	movs	r2, #0
 80028d6:	601a      	str	r2, [r3, #0]
 80028d8:	605a      	str	r2, [r3, #4]
 80028da:	609a      	str	r2, [r3, #8]
 80028dc:	60da      	str	r2, [r3, #12]
 80028de:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 80028e0:	687b      	ldr	r3, [r7, #4]
 80028e2:	681b      	ldr	r3, [r3, #0]
 80028e4:	4a3a      	ldr	r2, [pc, #232]	; (80029d0 <HAL_I2C_MspInit+0x108>)
 80028e6:	4293      	cmp	r3, r2
 80028e8:	d12c      	bne.n	8002944 <HAL_I2C_MspInit+0x7c>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80028ea:	2300      	movs	r3, #0
 80028ec:	61bb      	str	r3, [r7, #24]
 80028ee:	4b39      	ldr	r3, [pc, #228]	; (80029d4 <HAL_I2C_MspInit+0x10c>)
 80028f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028f2:	4a38      	ldr	r2, [pc, #224]	; (80029d4 <HAL_I2C_MspInit+0x10c>)
 80028f4:	f043 0302 	orr.w	r3, r3, #2
 80028f8:	6313      	str	r3, [r2, #48]	; 0x30
 80028fa:	4b36      	ldr	r3, [pc, #216]	; (80029d4 <HAL_I2C_MspInit+0x10c>)
 80028fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028fe:	f003 0302 	and.w	r3, r3, #2
 8002902:	61bb      	str	r3, [r7, #24]
 8002904:	69bb      	ldr	r3, [r7, #24]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002906:	23c0      	movs	r3, #192	; 0xc0
 8002908:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800290a:	2312      	movs	r3, #18
 800290c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800290e:	2300      	movs	r3, #0
 8002910:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002912:	2303      	movs	r3, #3
 8002914:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002916:	2304      	movs	r3, #4
 8002918:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800291a:	f107 031c 	add.w	r3, r7, #28
 800291e:	4619      	mov	r1, r3
 8002920:	482d      	ldr	r0, [pc, #180]	; (80029d8 <HAL_I2C_MspInit+0x110>)
 8002922:	f002 f93b 	bl	8004b9c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8002926:	2300      	movs	r3, #0
 8002928:	617b      	str	r3, [r7, #20]
 800292a:	4b2a      	ldr	r3, [pc, #168]	; (80029d4 <HAL_I2C_MspInit+0x10c>)
 800292c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800292e:	4a29      	ldr	r2, [pc, #164]	; (80029d4 <HAL_I2C_MspInit+0x10c>)
 8002930:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002934:	6413      	str	r3, [r2, #64]	; 0x40
 8002936:	4b27      	ldr	r3, [pc, #156]	; (80029d4 <HAL_I2C_MspInit+0x10c>)
 8002938:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800293a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800293e:	617b      	str	r3, [r7, #20]
 8002940:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN I2C2_MspInit 1 */

  /* USER CODE END I2C2_MspInit 1 */
  }

}
 8002942:	e041      	b.n	80029c8 <HAL_I2C_MspInit+0x100>
  else if(hi2c->Instance==I2C2)
 8002944:	687b      	ldr	r3, [r7, #4]
 8002946:	681b      	ldr	r3, [r3, #0]
 8002948:	4a24      	ldr	r2, [pc, #144]	; (80029dc <HAL_I2C_MspInit+0x114>)
 800294a:	4293      	cmp	r3, r2
 800294c:	d13c      	bne.n	80029c8 <HAL_I2C_MspInit+0x100>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800294e:	2300      	movs	r3, #0
 8002950:	613b      	str	r3, [r7, #16]
 8002952:	4b20      	ldr	r3, [pc, #128]	; (80029d4 <HAL_I2C_MspInit+0x10c>)
 8002954:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002956:	4a1f      	ldr	r2, [pc, #124]	; (80029d4 <HAL_I2C_MspInit+0x10c>)
 8002958:	f043 0302 	orr.w	r3, r3, #2
 800295c:	6313      	str	r3, [r2, #48]	; 0x30
 800295e:	4b1d      	ldr	r3, [pc, #116]	; (80029d4 <HAL_I2C_MspInit+0x10c>)
 8002960:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002962:	f003 0302 	and.w	r3, r3, #2
 8002966:	613b      	str	r3, [r7, #16]
 8002968:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800296a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800296e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002970:	2312      	movs	r3, #18
 8002972:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002974:	2300      	movs	r3, #0
 8002976:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002978:	2303      	movs	r3, #3
 800297a:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 800297c:	2304      	movs	r3, #4
 800297e:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002980:	f107 031c 	add.w	r3, r7, #28
 8002984:	4619      	mov	r1, r3
 8002986:	4814      	ldr	r0, [pc, #80]	; (80029d8 <HAL_I2C_MspInit+0x110>)
 8002988:	f002 f908 	bl	8004b9c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800298c:	2308      	movs	r3, #8
 800298e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002990:	2312      	movs	r3, #18
 8002992:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002994:	2300      	movs	r3, #0
 8002996:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002998:	2303      	movs	r3, #3
 800299a:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF9_I2C2;
 800299c:	2309      	movs	r3, #9
 800299e:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80029a0:	f107 031c 	add.w	r3, r7, #28
 80029a4:	4619      	mov	r1, r3
 80029a6:	480c      	ldr	r0, [pc, #48]	; (80029d8 <HAL_I2C_MspInit+0x110>)
 80029a8:	f002 f8f8 	bl	8004b9c <HAL_GPIO_Init>
    __HAL_RCC_I2C2_CLK_ENABLE();
 80029ac:	2300      	movs	r3, #0
 80029ae:	60fb      	str	r3, [r7, #12]
 80029b0:	4b08      	ldr	r3, [pc, #32]	; (80029d4 <HAL_I2C_MspInit+0x10c>)
 80029b2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029b4:	4a07      	ldr	r2, [pc, #28]	; (80029d4 <HAL_I2C_MspInit+0x10c>)
 80029b6:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80029ba:	6413      	str	r3, [r2, #64]	; 0x40
 80029bc:	4b05      	ldr	r3, [pc, #20]	; (80029d4 <HAL_I2C_MspInit+0x10c>)
 80029be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029c0:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80029c4:	60fb      	str	r3, [r7, #12]
 80029c6:	68fb      	ldr	r3, [r7, #12]
}
 80029c8:	bf00      	nop
 80029ca:	3730      	adds	r7, #48	; 0x30
 80029cc:	46bd      	mov	sp, r7
 80029ce:	bd80      	pop	{r7, pc}
 80029d0:	40005400 	.word	0x40005400
 80029d4:	40023800 	.word	0x40023800
 80029d8:	40020400 	.word	0x40020400
 80029dc:	40005800 	.word	0x40005800

080029e0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80029e0:	b580      	push	{r7, lr}
 80029e2:	b08a      	sub	sp, #40	; 0x28
 80029e4:	af00      	add	r7, sp, #0
 80029e6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80029e8:	f107 0314 	add.w	r3, r7, #20
 80029ec:	2200      	movs	r2, #0
 80029ee:	601a      	str	r2, [r3, #0]
 80029f0:	605a      	str	r2, [r3, #4]
 80029f2:	609a      	str	r2, [r3, #8]
 80029f4:	60da      	str	r2, [r3, #12]
 80029f6:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI2)
 80029f8:	687b      	ldr	r3, [r7, #4]
 80029fa:	681b      	ldr	r3, [r3, #0]
 80029fc:	4a34      	ldr	r2, [pc, #208]	; (8002ad0 <HAL_SPI_MspInit+0xf0>)
 80029fe:	4293      	cmp	r3, r2
 8002a00:	d161      	bne.n	8002ac6 <HAL_SPI_MspInit+0xe6>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8002a02:	2300      	movs	r3, #0
 8002a04:	613b      	str	r3, [r7, #16]
 8002a06:	4b33      	ldr	r3, [pc, #204]	; (8002ad4 <HAL_SPI_MspInit+0xf4>)
 8002a08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002a0a:	4a32      	ldr	r2, [pc, #200]	; (8002ad4 <HAL_SPI_MspInit+0xf4>)
 8002a0c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002a10:	6413      	str	r3, [r2, #64]	; 0x40
 8002a12:	4b30      	ldr	r3, [pc, #192]	; (8002ad4 <HAL_SPI_MspInit+0xf4>)
 8002a14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002a16:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002a1a:	613b      	str	r3, [r7, #16]
 8002a1c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002a1e:	2300      	movs	r3, #0
 8002a20:	60fb      	str	r3, [r7, #12]
 8002a22:	4b2c      	ldr	r3, [pc, #176]	; (8002ad4 <HAL_SPI_MspInit+0xf4>)
 8002a24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a26:	4a2b      	ldr	r2, [pc, #172]	; (8002ad4 <HAL_SPI_MspInit+0xf4>)
 8002a28:	f043 0302 	orr.w	r3, r3, #2
 8002a2c:	6313      	str	r3, [r2, #48]	; 0x30
 8002a2e:	4b29      	ldr	r3, [pc, #164]	; (8002ad4 <HAL_SPI_MspInit+0xf4>)
 8002a30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a32:	f003 0302 	and.w	r3, r3, #2
 8002a36:	60fb      	str	r3, [r7, #12]
 8002a38:	68fb      	ldr	r3, [r7, #12]
    /**SPI2 GPIO Configuration
    PB13     ------> SPI2_SCK
    PB14     ------> SPI2_MISO
    PB15     ------> SPI2_MOSI
    */
    GPIO_InitStruct.Pin = DISPL_SCK_Pin|TOUCH_MISO_Pin|DISPL_MOSI_Pin;
 8002a3a:	f44f 4360 	mov.w	r3, #57344	; 0xe000
 8002a3e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a40:	2302      	movs	r3, #2
 8002a42:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a44:	2300      	movs	r3, #0
 8002a46:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002a48:	2303      	movs	r3, #3
 8002a4a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8002a4c:	2305      	movs	r3, #5
 8002a4e:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002a50:	f107 0314 	add.w	r3, r7, #20
 8002a54:	4619      	mov	r1, r3
 8002a56:	4820      	ldr	r0, [pc, #128]	; (8002ad8 <HAL_SPI_MspInit+0xf8>)
 8002a58:	f002 f8a0 	bl	8004b9c <HAL_GPIO_Init>

    /* SPI2 DMA Init */
    /* SPI2_TX Init */
    hdma_spi2_tx.Instance = DMA1_Stream4;
 8002a5c:	4b1f      	ldr	r3, [pc, #124]	; (8002adc <HAL_SPI_MspInit+0xfc>)
 8002a5e:	4a20      	ldr	r2, [pc, #128]	; (8002ae0 <HAL_SPI_MspInit+0x100>)
 8002a60:	601a      	str	r2, [r3, #0]
    hdma_spi2_tx.Init.Channel = DMA_CHANNEL_0;
 8002a62:	4b1e      	ldr	r3, [pc, #120]	; (8002adc <HAL_SPI_MspInit+0xfc>)
 8002a64:	2200      	movs	r2, #0
 8002a66:	605a      	str	r2, [r3, #4]
    hdma_spi2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002a68:	4b1c      	ldr	r3, [pc, #112]	; (8002adc <HAL_SPI_MspInit+0xfc>)
 8002a6a:	2240      	movs	r2, #64	; 0x40
 8002a6c:	609a      	str	r2, [r3, #8]
    hdma_spi2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8002a6e:	4b1b      	ldr	r3, [pc, #108]	; (8002adc <HAL_SPI_MspInit+0xfc>)
 8002a70:	2200      	movs	r2, #0
 8002a72:	60da      	str	r2, [r3, #12]
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 8002a74:	4b19      	ldr	r3, [pc, #100]	; (8002adc <HAL_SPI_MspInit+0xfc>)
 8002a76:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002a7a:	611a      	str	r2, [r3, #16]
    hdma_spi2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8002a7c:	4b17      	ldr	r3, [pc, #92]	; (8002adc <HAL_SPI_MspInit+0xfc>)
 8002a7e:	2200      	movs	r2, #0
 8002a80:	615a      	str	r2, [r3, #20]
    hdma_spi2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002a82:	4b16      	ldr	r3, [pc, #88]	; (8002adc <HAL_SPI_MspInit+0xfc>)
 8002a84:	2200      	movs	r2, #0
 8002a86:	619a      	str	r2, [r3, #24]
    hdma_spi2_tx.Init.Mode = DMA_NORMAL;
 8002a88:	4b14      	ldr	r3, [pc, #80]	; (8002adc <HAL_SPI_MspInit+0xfc>)
 8002a8a:	2200      	movs	r2, #0
 8002a8c:	61da      	str	r2, [r3, #28]
    hdma_spi2_tx.Init.Priority = DMA_PRIORITY_LOW;
 8002a8e:	4b13      	ldr	r3, [pc, #76]	; (8002adc <HAL_SPI_MspInit+0xfc>)
 8002a90:	2200      	movs	r2, #0
 8002a92:	621a      	str	r2, [r3, #32]
    hdma_spi2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002a94:	4b11      	ldr	r3, [pc, #68]	; (8002adc <HAL_SPI_MspInit+0xfc>)
 8002a96:	2200      	movs	r2, #0
 8002a98:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 8002a9a:	4810      	ldr	r0, [pc, #64]	; (8002adc <HAL_SPI_MspInit+0xfc>)
 8002a9c:	f001 fcec 	bl	8004478 <HAL_DMA_Init>
 8002aa0:	4603      	mov	r3, r0
 8002aa2:	2b00      	cmp	r3, #0
 8002aa4:	d001      	beq.n	8002aaa <HAL_SPI_MspInit+0xca>
    {
      Error_Handler();
 8002aa6:	f7ff fe7b 	bl	80027a0 <Error_Handler>
    }

    __HAL_LINKDMA(hspi,hdmatx,hdma_spi2_tx);
 8002aaa:	687b      	ldr	r3, [r7, #4]
 8002aac:	4a0b      	ldr	r2, [pc, #44]	; (8002adc <HAL_SPI_MspInit+0xfc>)
 8002aae:	649a      	str	r2, [r3, #72]	; 0x48
 8002ab0:	4a0a      	ldr	r2, [pc, #40]	; (8002adc <HAL_SPI_MspInit+0xfc>)
 8002ab2:	687b      	ldr	r3, [r7, #4]
 8002ab4:	6393      	str	r3, [r2, #56]	; 0x38

    /* SPI2 interrupt Init */
    HAL_NVIC_SetPriority(SPI2_IRQn, 0, 0);
 8002ab6:	2200      	movs	r2, #0
 8002ab8:	2100      	movs	r1, #0
 8002aba:	2024      	movs	r0, #36	; 0x24
 8002abc:	f001 fc6d 	bl	800439a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
 8002ac0:	2024      	movs	r0, #36	; 0x24
 8002ac2:	f001 fc86 	bl	80043d2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }

}
 8002ac6:	bf00      	nop
 8002ac8:	3728      	adds	r7, #40	; 0x28
 8002aca:	46bd      	mov	sp, r7
 8002acc:	bd80      	pop	{r7, pc}
 8002ace:	bf00      	nop
 8002ad0:	40003800 	.word	0x40003800
 8002ad4:	40023800 	.word	0x40023800
 8002ad8:	40020400 	.word	0x40020400
 8002adc:	200002b0 	.word	0x200002b0
 8002ae0:	40026070 	.word	0x40026070

08002ae4 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8002ae4:	b480      	push	{r7}
 8002ae6:	b085      	sub	sp, #20
 8002ae8:	af00      	add	r7, sp, #0
 8002aea:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM2)
 8002aec:	687b      	ldr	r3, [r7, #4]
 8002aee:	681b      	ldr	r3, [r3, #0]
 8002af0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002af4:	d10d      	bne.n	8002b12 <HAL_TIM_PWM_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002af6:	2300      	movs	r3, #0
 8002af8:	60fb      	str	r3, [r7, #12]
 8002afa:	4b09      	ldr	r3, [pc, #36]	; (8002b20 <HAL_TIM_PWM_MspInit+0x3c>)
 8002afc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002afe:	4a08      	ldr	r2, [pc, #32]	; (8002b20 <HAL_TIM_PWM_MspInit+0x3c>)
 8002b00:	f043 0301 	orr.w	r3, r3, #1
 8002b04:	6413      	str	r3, [r2, #64]	; 0x40
 8002b06:	4b06      	ldr	r3, [pc, #24]	; (8002b20 <HAL_TIM_PWM_MspInit+0x3c>)
 8002b08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b0a:	f003 0301 	and.w	r3, r3, #1
 8002b0e:	60fb      	str	r3, [r7, #12]
 8002b10:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 8002b12:	bf00      	nop
 8002b14:	3714      	adds	r7, #20
 8002b16:	46bd      	mov	sp, r7
 8002b18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b1c:	4770      	bx	lr
 8002b1e:	bf00      	nop
 8002b20:	40023800 	.word	0x40023800

08002b24 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002b24:	b580      	push	{r7, lr}
 8002b26:	b086      	sub	sp, #24
 8002b28:	af00      	add	r7, sp, #0
 8002b2a:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM3)
 8002b2c:	687b      	ldr	r3, [r7, #4]
 8002b2e:	681b      	ldr	r3, [r3, #0]
 8002b30:	4a2a      	ldr	r2, [pc, #168]	; (8002bdc <HAL_TIM_Base_MspInit+0xb8>)
 8002b32:	4293      	cmp	r3, r2
 8002b34:	d116      	bne.n	8002b64 <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002b36:	2300      	movs	r3, #0
 8002b38:	617b      	str	r3, [r7, #20]
 8002b3a:	4b29      	ldr	r3, [pc, #164]	; (8002be0 <HAL_TIM_Base_MspInit+0xbc>)
 8002b3c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b3e:	4a28      	ldr	r2, [pc, #160]	; (8002be0 <HAL_TIM_Base_MspInit+0xbc>)
 8002b40:	f043 0302 	orr.w	r3, r3, #2
 8002b44:	6413      	str	r3, [r2, #64]	; 0x40
 8002b46:	4b26      	ldr	r3, [pc, #152]	; (8002be0 <HAL_TIM_Base_MspInit+0xbc>)
 8002b48:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b4a:	f003 0302 	and.w	r3, r3, #2
 8002b4e:	617b      	str	r3, [r7, #20]
 8002b50:	697b      	ldr	r3, [r7, #20]
    /* TIM3 interrupt Init */
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8002b52:	2200      	movs	r2, #0
 8002b54:	2100      	movs	r1, #0
 8002b56:	201d      	movs	r0, #29
 8002b58:	f001 fc1f 	bl	800439a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8002b5c:	201d      	movs	r0, #29
 8002b5e:	f001 fc38 	bl	80043d2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM10_MspInit 1 */

  /* USER CODE END TIM10_MspInit 1 */
  }

}
 8002b62:	e036      	b.n	8002bd2 <HAL_TIM_Base_MspInit+0xae>
  else if(htim_base->Instance==TIM9)
 8002b64:	687b      	ldr	r3, [r7, #4]
 8002b66:	681b      	ldr	r3, [r3, #0]
 8002b68:	4a1e      	ldr	r2, [pc, #120]	; (8002be4 <HAL_TIM_Base_MspInit+0xc0>)
 8002b6a:	4293      	cmp	r3, r2
 8002b6c:	d116      	bne.n	8002b9c <HAL_TIM_Base_MspInit+0x78>
    __HAL_RCC_TIM9_CLK_ENABLE();
 8002b6e:	2300      	movs	r3, #0
 8002b70:	613b      	str	r3, [r7, #16]
 8002b72:	4b1b      	ldr	r3, [pc, #108]	; (8002be0 <HAL_TIM_Base_MspInit+0xbc>)
 8002b74:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002b76:	4a1a      	ldr	r2, [pc, #104]	; (8002be0 <HAL_TIM_Base_MspInit+0xbc>)
 8002b78:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002b7c:	6453      	str	r3, [r2, #68]	; 0x44
 8002b7e:	4b18      	ldr	r3, [pc, #96]	; (8002be0 <HAL_TIM_Base_MspInit+0xbc>)
 8002b80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002b82:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002b86:	613b      	str	r3, [r7, #16]
 8002b88:	693b      	ldr	r3, [r7, #16]
    HAL_NVIC_SetPriority(TIM1_BRK_TIM9_IRQn, 0, 0);
 8002b8a:	2200      	movs	r2, #0
 8002b8c:	2100      	movs	r1, #0
 8002b8e:	2018      	movs	r0, #24
 8002b90:	f001 fc03 	bl	800439a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_BRK_TIM9_IRQn);
 8002b94:	2018      	movs	r0, #24
 8002b96:	f001 fc1c 	bl	80043d2 <HAL_NVIC_EnableIRQ>
}
 8002b9a:	e01a      	b.n	8002bd2 <HAL_TIM_Base_MspInit+0xae>
  else if(htim_base->Instance==TIM10)
 8002b9c:	687b      	ldr	r3, [r7, #4]
 8002b9e:	681b      	ldr	r3, [r3, #0]
 8002ba0:	4a11      	ldr	r2, [pc, #68]	; (8002be8 <HAL_TIM_Base_MspInit+0xc4>)
 8002ba2:	4293      	cmp	r3, r2
 8002ba4:	d115      	bne.n	8002bd2 <HAL_TIM_Base_MspInit+0xae>
    __HAL_RCC_TIM10_CLK_ENABLE();
 8002ba6:	2300      	movs	r3, #0
 8002ba8:	60fb      	str	r3, [r7, #12]
 8002baa:	4b0d      	ldr	r3, [pc, #52]	; (8002be0 <HAL_TIM_Base_MspInit+0xbc>)
 8002bac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002bae:	4a0c      	ldr	r2, [pc, #48]	; (8002be0 <HAL_TIM_Base_MspInit+0xbc>)
 8002bb0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002bb4:	6453      	str	r3, [r2, #68]	; 0x44
 8002bb6:	4b0a      	ldr	r3, [pc, #40]	; (8002be0 <HAL_TIM_Base_MspInit+0xbc>)
 8002bb8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002bba:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002bbe:	60fb      	str	r3, [r7, #12]
 8002bc0:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM1_UP_TIM10_IRQn, 0, 0);
 8002bc2:	2200      	movs	r2, #0
 8002bc4:	2100      	movs	r1, #0
 8002bc6:	2019      	movs	r0, #25
 8002bc8:	f001 fbe7 	bl	800439a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
 8002bcc:	2019      	movs	r0, #25
 8002bce:	f001 fc00 	bl	80043d2 <HAL_NVIC_EnableIRQ>
}
 8002bd2:	bf00      	nop
 8002bd4:	3718      	adds	r7, #24
 8002bd6:	46bd      	mov	sp, r7
 8002bd8:	bd80      	pop	{r7, pc}
 8002bda:	bf00      	nop
 8002bdc:	40000400 	.word	0x40000400
 8002be0:	40023800 	.word	0x40023800
 8002be4:	40014000 	.word	0x40014000
 8002be8:	40014400 	.word	0x40014400

08002bec <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002bec:	b580      	push	{r7, lr}
 8002bee:	b088      	sub	sp, #32
 8002bf0:	af00      	add	r7, sp, #0
 8002bf2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002bf4:	f107 030c 	add.w	r3, r7, #12
 8002bf8:	2200      	movs	r2, #0
 8002bfa:	601a      	str	r2, [r3, #0]
 8002bfc:	605a      	str	r2, [r3, #4]
 8002bfe:	609a      	str	r2, [r3, #8]
 8002c00:	60da      	str	r2, [r3, #12]
 8002c02:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	681b      	ldr	r3, [r3, #0]
 8002c08:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002c0c:	d11e      	bne.n	8002c4c <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002c0e:	2300      	movs	r3, #0
 8002c10:	60bb      	str	r3, [r7, #8]
 8002c12:	4b10      	ldr	r3, [pc, #64]	; (8002c54 <HAL_TIM_MspPostInit+0x68>)
 8002c14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c16:	4a0f      	ldr	r2, [pc, #60]	; (8002c54 <HAL_TIM_MspPostInit+0x68>)
 8002c18:	f043 0301 	orr.w	r3, r3, #1
 8002c1c:	6313      	str	r3, [r2, #48]	; 0x30
 8002c1e:	4b0d      	ldr	r3, [pc, #52]	; (8002c54 <HAL_TIM_MspPostInit+0x68>)
 8002c20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c22:	f003 0301 	and.w	r3, r3, #1
 8002c26:	60bb      	str	r3, [r7, #8]
 8002c28:	68bb      	ldr	r3, [r7, #8]
    /**TIM2 GPIO Configuration
    PA15     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = DISPL_LED_Pin;
 8002c2a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8002c2e:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002c30:	2302      	movs	r3, #2
 8002c32:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c34:	2300      	movs	r3, #0
 8002c36:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002c38:	2300      	movs	r3, #0
 8002c3a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8002c3c:	2301      	movs	r3, #1
 8002c3e:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(DISPL_LED_GPIO_Port, &GPIO_InitStruct);
 8002c40:	f107 030c 	add.w	r3, r7, #12
 8002c44:	4619      	mov	r1, r3
 8002c46:	4804      	ldr	r0, [pc, #16]	; (8002c58 <HAL_TIM_MspPostInit+0x6c>)
 8002c48:	f001 ffa8 	bl	8004b9c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 8002c4c:	bf00      	nop
 8002c4e:	3720      	adds	r7, #32
 8002c50:	46bd      	mov	sp, r7
 8002c52:	bd80      	pop	{r7, pc}
 8002c54:	40023800 	.word	0x40023800
 8002c58:	40020000 	.word	0x40020000

08002c5c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002c5c:	b480      	push	{r7}
 8002c5e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002c60:	e7fe      	b.n	8002c60 <NMI_Handler+0x4>

08002c62 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002c62:	b480      	push	{r7}
 8002c64:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002c66:	e7fe      	b.n	8002c66 <HardFault_Handler+0x4>

08002c68 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002c68:	b480      	push	{r7}
 8002c6a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002c6c:	e7fe      	b.n	8002c6c <MemManage_Handler+0x4>

08002c6e <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002c6e:	b480      	push	{r7}
 8002c70:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002c72:	e7fe      	b.n	8002c72 <BusFault_Handler+0x4>

08002c74 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002c74:	b480      	push	{r7}
 8002c76:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002c78:	e7fe      	b.n	8002c78 <UsageFault_Handler+0x4>

08002c7a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002c7a:	b480      	push	{r7}
 8002c7c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002c7e:	bf00      	nop
 8002c80:	46bd      	mov	sp, r7
 8002c82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c86:	4770      	bx	lr

08002c88 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002c88:	b480      	push	{r7}
 8002c8a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002c8c:	bf00      	nop
 8002c8e:	46bd      	mov	sp, r7
 8002c90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c94:	4770      	bx	lr

08002c96 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002c96:	b480      	push	{r7}
 8002c98:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002c9a:	bf00      	nop
 8002c9c:	46bd      	mov	sp, r7
 8002c9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ca2:	4770      	bx	lr

08002ca4 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002ca4:	b580      	push	{r7, lr}
 8002ca6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002ca8:	f000 fee2 	bl	8003a70 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002cac:	bf00      	nop
 8002cae:	bd80      	pop	{r7, pc}

08002cb0 <DMA1_Stream4_IRQHandler>:

/**
  * @brief This function handles DMA1 stream4 global interrupt.
  */
void DMA1_Stream4_IRQHandler(void)
{
 8002cb0:	b580      	push	{r7, lr}
 8002cb2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */

  /* USER CODE END DMA1_Stream4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_tx);
 8002cb4:	4802      	ldr	r0, [pc, #8]	; (8002cc0 <DMA1_Stream4_IRQHandler+0x10>)
 8002cb6:	f001 fd07 	bl	80046c8 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */

  /* USER CODE END DMA1_Stream4_IRQn 1 */
}
 8002cba:	bf00      	nop
 8002cbc:	bd80      	pop	{r7, pc}
 8002cbe:	bf00      	nop
 8002cc0:	200002b0 	.word	0x200002b0

08002cc4 <TIM1_BRK_TIM9_IRQHandler>:

/**
  * @brief This function handles TIM1 break interrupt and TIM9 global interrupt.
  */
void TIM1_BRK_TIM9_IRQHandler(void)
{
 8002cc4:	b580      	push	{r7, lr}
 8002cc6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 0 */

  /* USER CODE END TIM1_BRK_TIM9_IRQn 0 */
  HAL_TIM_IRQHandler(&htim9);
 8002cc8:	4802      	ldr	r0, [pc, #8]	; (8002cd4 <TIM1_BRK_TIM9_IRQHandler+0x10>)
 8002cca:	f005 fb99 	bl	8008400 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 1 */

  /* USER CODE END TIM1_BRK_TIM9_IRQn 1 */
}
 8002cce:	bf00      	nop
 8002cd0:	bd80      	pop	{r7, pc}
 8002cd2:	bf00      	nop
 8002cd4:	200003a0 	.word	0x200003a0

08002cd8 <TIM1_UP_TIM10_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
  */
void TIM1_UP_TIM10_IRQHandler(void)
{
 8002cd8:	b580      	push	{r7, lr}
 8002cda:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
  HAL_TIM_IRQHandler(&htim10);
 8002cdc:	4802      	ldr	r0, [pc, #8]	; (8002ce8 <TIM1_UP_TIM10_IRQHandler+0x10>)
 8002cde:	f005 fb8f 	bl	8008400 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
}
 8002ce2:	bf00      	nop
 8002ce4:	bd80      	pop	{r7, pc}
 8002ce6:	bf00      	nop
 8002ce8:	200003e8 	.word	0x200003e8

08002cec <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8002cec:	b580      	push	{r7, lr}
 8002cee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8002cf0:	4802      	ldr	r0, [pc, #8]	; (8002cfc <TIM3_IRQHandler+0x10>)
 8002cf2:	f005 fb85 	bl	8008400 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8002cf6:	bf00      	nop
 8002cf8:	bd80      	pop	{r7, pc}
 8002cfa:	bf00      	nop
 8002cfc:	20000358 	.word	0x20000358

08002d00 <SPI2_IRQHandler>:

/**
  * @brief This function handles SPI2 global interrupt.
  */
void SPI2_IRQHandler(void)
{
 8002d00:	b580      	push	{r7, lr}
 8002d02:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI2_IRQn 0 */

  /* USER CODE END SPI2_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi2);
 8002d04:	4802      	ldr	r0, [pc, #8]	; (8002d10 <SPI2_IRQHandler+0x10>)
 8002d06:	f004 fed7 	bl	8007ab8 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI2_IRQn 1 */

  /* USER CODE END SPI2_IRQn 1 */
}
 8002d0a:	bf00      	nop
 8002d0c:	bd80      	pop	{r7, pc}
 8002d0e:	bf00      	nop
 8002d10:	20000258 	.word	0x20000258

08002d14 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8002d14:	b580      	push	{r7, lr}
 8002d16:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(TOUCH_INT_Pin);
 8002d18:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8002d1c:	f002 f90e 	bl	8004f3c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8002d20:	bf00      	nop
 8002d22:	bd80      	pop	{r7, pc}

08002d24 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002d24:	b480      	push	{r7}
 8002d26:	af00      	add	r7, sp, #0
  return 1;
 8002d28:	2301      	movs	r3, #1
}
 8002d2a:	4618      	mov	r0, r3
 8002d2c:	46bd      	mov	sp, r7
 8002d2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d32:	4770      	bx	lr

08002d34 <_kill>:

int _kill(int pid, int sig)
{
 8002d34:	b580      	push	{r7, lr}
 8002d36:	b082      	sub	sp, #8
 8002d38:	af00      	add	r7, sp, #0
 8002d3a:	6078      	str	r0, [r7, #4]
 8002d3c:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8002d3e:	f028 fcff 	bl	802b740 <__errno>
 8002d42:	4603      	mov	r3, r0
 8002d44:	2216      	movs	r2, #22
 8002d46:	601a      	str	r2, [r3, #0]
  return -1;
 8002d48:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002d4c:	4618      	mov	r0, r3
 8002d4e:	3708      	adds	r7, #8
 8002d50:	46bd      	mov	sp, r7
 8002d52:	bd80      	pop	{r7, pc}

08002d54 <_exit>:

void _exit (int status)
{
 8002d54:	b580      	push	{r7, lr}
 8002d56:	b082      	sub	sp, #8
 8002d58:	af00      	add	r7, sp, #0
 8002d5a:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002d5c:	f04f 31ff 	mov.w	r1, #4294967295
 8002d60:	6878      	ldr	r0, [r7, #4]
 8002d62:	f7ff ffe7 	bl	8002d34 <_kill>
  while (1) {}    /* Make sure we hang here */
 8002d66:	e7fe      	b.n	8002d66 <_exit+0x12>

08002d68 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002d68:	b580      	push	{r7, lr}
 8002d6a:	b086      	sub	sp, #24
 8002d6c:	af00      	add	r7, sp, #0
 8002d6e:	60f8      	str	r0, [r7, #12]
 8002d70:	60b9      	str	r1, [r7, #8]
 8002d72:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002d74:	2300      	movs	r3, #0
 8002d76:	617b      	str	r3, [r7, #20]
 8002d78:	e00a      	b.n	8002d90 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002d7a:	f3af 8000 	nop.w
 8002d7e:	4601      	mov	r1, r0
 8002d80:	68bb      	ldr	r3, [r7, #8]
 8002d82:	1c5a      	adds	r2, r3, #1
 8002d84:	60ba      	str	r2, [r7, #8]
 8002d86:	b2ca      	uxtb	r2, r1
 8002d88:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002d8a:	697b      	ldr	r3, [r7, #20]
 8002d8c:	3301      	adds	r3, #1
 8002d8e:	617b      	str	r3, [r7, #20]
 8002d90:	697a      	ldr	r2, [r7, #20]
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	429a      	cmp	r2, r3
 8002d96:	dbf0      	blt.n	8002d7a <_read+0x12>
  }

  return len;
 8002d98:	687b      	ldr	r3, [r7, #4]
}
 8002d9a:	4618      	mov	r0, r3
 8002d9c:	3718      	adds	r7, #24
 8002d9e:	46bd      	mov	sp, r7
 8002da0:	bd80      	pop	{r7, pc}

08002da2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002da2:	b580      	push	{r7, lr}
 8002da4:	b086      	sub	sp, #24
 8002da6:	af00      	add	r7, sp, #0
 8002da8:	60f8      	str	r0, [r7, #12]
 8002daa:	60b9      	str	r1, [r7, #8]
 8002dac:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002dae:	2300      	movs	r3, #0
 8002db0:	617b      	str	r3, [r7, #20]
 8002db2:	e009      	b.n	8002dc8 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8002db4:	68bb      	ldr	r3, [r7, #8]
 8002db6:	1c5a      	adds	r2, r3, #1
 8002db8:	60ba      	str	r2, [r7, #8]
 8002dba:	781b      	ldrb	r3, [r3, #0]
 8002dbc:	4618      	mov	r0, r3
 8002dbe:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002dc2:	697b      	ldr	r3, [r7, #20]
 8002dc4:	3301      	adds	r3, #1
 8002dc6:	617b      	str	r3, [r7, #20]
 8002dc8:	697a      	ldr	r2, [r7, #20]
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	429a      	cmp	r2, r3
 8002dce:	dbf1      	blt.n	8002db4 <_write+0x12>
  }
  return len;
 8002dd0:	687b      	ldr	r3, [r7, #4]
}
 8002dd2:	4618      	mov	r0, r3
 8002dd4:	3718      	adds	r7, #24
 8002dd6:	46bd      	mov	sp, r7
 8002dd8:	bd80      	pop	{r7, pc}

08002dda <_close>:

int _close(int file)
{
 8002dda:	b480      	push	{r7}
 8002ddc:	b083      	sub	sp, #12
 8002dde:	af00      	add	r7, sp, #0
 8002de0:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8002de2:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002de6:	4618      	mov	r0, r3
 8002de8:	370c      	adds	r7, #12
 8002dea:	46bd      	mov	sp, r7
 8002dec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002df0:	4770      	bx	lr

08002df2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002df2:	b480      	push	{r7}
 8002df4:	b083      	sub	sp, #12
 8002df6:	af00      	add	r7, sp, #0
 8002df8:	6078      	str	r0, [r7, #4]
 8002dfa:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8002dfc:	683b      	ldr	r3, [r7, #0]
 8002dfe:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002e02:	605a      	str	r2, [r3, #4]
  return 0;
 8002e04:	2300      	movs	r3, #0
}
 8002e06:	4618      	mov	r0, r3
 8002e08:	370c      	adds	r7, #12
 8002e0a:	46bd      	mov	sp, r7
 8002e0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e10:	4770      	bx	lr

08002e12 <_isatty>:

int _isatty(int file)
{
 8002e12:	b480      	push	{r7}
 8002e14:	b083      	sub	sp, #12
 8002e16:	af00      	add	r7, sp, #0
 8002e18:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002e1a:	2301      	movs	r3, #1
}
 8002e1c:	4618      	mov	r0, r3
 8002e1e:	370c      	adds	r7, #12
 8002e20:	46bd      	mov	sp, r7
 8002e22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e26:	4770      	bx	lr

08002e28 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002e28:	b480      	push	{r7}
 8002e2a:	b085      	sub	sp, #20
 8002e2c:	af00      	add	r7, sp, #0
 8002e2e:	60f8      	str	r0, [r7, #12]
 8002e30:	60b9      	str	r1, [r7, #8]
 8002e32:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002e34:	2300      	movs	r3, #0
}
 8002e36:	4618      	mov	r0, r3
 8002e38:	3714      	adds	r7, #20
 8002e3a:	46bd      	mov	sp, r7
 8002e3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e40:	4770      	bx	lr
	...

08002e44 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002e44:	b580      	push	{r7, lr}
 8002e46:	b086      	sub	sp, #24
 8002e48:	af00      	add	r7, sp, #0
 8002e4a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002e4c:	4a14      	ldr	r2, [pc, #80]	; (8002ea0 <_sbrk+0x5c>)
 8002e4e:	4b15      	ldr	r3, [pc, #84]	; (8002ea4 <_sbrk+0x60>)
 8002e50:	1ad3      	subs	r3, r2, r3
 8002e52:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002e54:	697b      	ldr	r3, [r7, #20]
 8002e56:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002e58:	4b13      	ldr	r3, [pc, #76]	; (8002ea8 <_sbrk+0x64>)
 8002e5a:	681b      	ldr	r3, [r3, #0]
 8002e5c:	2b00      	cmp	r3, #0
 8002e5e:	d102      	bne.n	8002e66 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002e60:	4b11      	ldr	r3, [pc, #68]	; (8002ea8 <_sbrk+0x64>)
 8002e62:	4a12      	ldr	r2, [pc, #72]	; (8002eac <_sbrk+0x68>)
 8002e64:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002e66:	4b10      	ldr	r3, [pc, #64]	; (8002ea8 <_sbrk+0x64>)
 8002e68:	681a      	ldr	r2, [r3, #0]
 8002e6a:	687b      	ldr	r3, [r7, #4]
 8002e6c:	4413      	add	r3, r2
 8002e6e:	693a      	ldr	r2, [r7, #16]
 8002e70:	429a      	cmp	r2, r3
 8002e72:	d207      	bcs.n	8002e84 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002e74:	f028 fc64 	bl	802b740 <__errno>
 8002e78:	4603      	mov	r3, r0
 8002e7a:	220c      	movs	r2, #12
 8002e7c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002e7e:	f04f 33ff 	mov.w	r3, #4294967295
 8002e82:	e009      	b.n	8002e98 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002e84:	4b08      	ldr	r3, [pc, #32]	; (8002ea8 <_sbrk+0x64>)
 8002e86:	681b      	ldr	r3, [r3, #0]
 8002e88:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002e8a:	4b07      	ldr	r3, [pc, #28]	; (8002ea8 <_sbrk+0x64>)
 8002e8c:	681a      	ldr	r2, [r3, #0]
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	4413      	add	r3, r2
 8002e92:	4a05      	ldr	r2, [pc, #20]	; (8002ea8 <_sbrk+0x64>)
 8002e94:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002e96:	68fb      	ldr	r3, [r7, #12]
}
 8002e98:	4618      	mov	r0, r3
 8002e9a:	3718      	adds	r7, #24
 8002e9c:	46bd      	mov	sp, r7
 8002e9e:	bd80      	pop	{r7, pc}
 8002ea0:	20020000 	.word	0x20020000
 8002ea4:	00000400 	.word	0x00000400
 8002ea8:	2000043c 	.word	0x2000043c
 8002eac:	20002f60 	.word	0x20002f60

08002eb0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002eb0:	b480      	push	{r7}
 8002eb2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002eb4:	4b06      	ldr	r3, [pc, #24]	; (8002ed0 <SystemInit+0x20>)
 8002eb6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002eba:	4a05      	ldr	r2, [pc, #20]	; (8002ed0 <SystemInit+0x20>)
 8002ebc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002ec0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002ec4:	bf00      	nop
 8002ec6:	46bd      	mov	sp, r7
 8002ec8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ecc:	4770      	bx	lr
 8002ece:	bf00      	nop
 8002ed0:	e000ed00 	.word	0xe000ed00

08002ed4 <Displ_Select>:

/******************************************
 * @brief	enable display, disabling touch
 * 			device selected if CS low
 ******************************************/
void Displ_Select(void) {
 8002ed4:	b580      	push	{r7, lr}
 8002ed6:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if SPI port shared (display <-> touch)
		if (HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display not yet selected
 8002ed8:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002edc:	4810      	ldr	r0, [pc, #64]	; (8002f20 <Displ_Select+0x4c>)
 8002ede:	f001 ffe1 	bl	8004ea4 <HAL_GPIO_ReadPin>
 8002ee2:	4603      	mov	r3, r0
 8002ee4:	2b00      	cmp	r3, #0
 8002ee6:	d018      	beq.n	8002f1a <Displ_Select+0x46>
			HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET); 		// unselect touch
 8002ee8:	2201      	movs	r2, #1
 8002eea:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002eee:	480d      	ldr	r0, [pc, #52]	; (8002f24 <Displ_Select+0x50>)
 8002ef0:	f001 fff0 	bl	8004ed4 <HAL_GPIO_WritePin>
			SET_DISPL_SPI_BAUDRATE;				   									//change SPI port speed as per display needs
 8002ef4:	4b0c      	ldr	r3, [pc, #48]	; (8002f28 <Displ_Select+0x54>)
 8002ef6:	681a      	ldr	r2, [r3, #0]
 8002ef8:	490b      	ldr	r1, [pc, #44]	; (8002f28 <Displ_Select+0x54>)
 8002efa:	f64f 73c7 	movw	r3, #65479	; 0xffc7
 8002efe:	4013      	ands	r3, r2
 8002f00:	600b      	str	r3, [r1, #0]
 8002f02:	4b09      	ldr	r3, [pc, #36]	; (8002f28 <Displ_Select+0x54>)
 8002f04:	681b      	ldr	r3, [r3, #0]
 8002f06:	4a08      	ldr	r2, [pc, #32]	; (8002f28 <Displ_Select+0x54>)
 8002f08:	f043 0308 	orr.w	r3, r3, #8
 8002f0c:	6013      	str	r3, [r2, #0]
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET);	// select display
 8002f0e:	2200      	movs	r2, #0
 8002f10:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002f14:	4802      	ldr	r0, [pc, #8]	; (8002f20 <Displ_Select+0x4c>)
 8002f16:	f001 ffdd 	bl	8004ed4 <HAL_GPIO_WritePin>
		}
	}
}
 8002f1a:	bf00      	nop
 8002f1c:	bd80      	pop	{r7, pc}
 8002f1e:	bf00      	nop
 8002f20:	40020000 	.word	0x40020000
 8002f24:	40020400 	.word	0x40020400
 8002f28:	40003800 	.word	0x40003800

08002f2c <Displ_Transmit>:
 * @PARAM	DC_Status 	indicates if sending command or data
 * 			data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **************************/
void Displ_Transmit(GPIO_PinState DC_Status, uint8_t* data, uint16_t dataSize, uint8_t isTouchGFXBuffer ){
 8002f2c:	b580      	push	{r7, lr}
 8002f2e:	b086      	sub	sp, #24
 8002f30:	af00      	add	r7, sp, #0
 8002f32:	6039      	str	r1, [r7, #0]
 8002f34:	4611      	mov	r1, r2
 8002f36:	461a      	mov	r2, r3
 8002f38:	4603      	mov	r3, r0
 8002f3a:	71fb      	strb	r3, [r7, #7]
 8002f3c:	460b      	mov	r3, r1
 8002f3e:	80bb      	strh	r3, [r7, #4]
 8002f40:	4613      	mov	r3, r2
 8002f42:	71bb      	strb	r3, [r7, #6]

	while (!Displ_SpiAvailable) {};  // waiting for a free SPI port. Flag is set to 1 by transmission-complete interrupt callback
 8002f44:	bf00      	nop
 8002f46:	4b25      	ldr	r3, [pc, #148]	; (8002fdc <Displ_Transmit+0xb0>)
 8002f48:	781b      	ldrb	r3, [r3, #0]
 8002f4a:	b2db      	uxtb	r3, r3
 8002f4c:	2b00      	cmp	r3, #0
 8002f4e:	d0fa      	beq.n	8002f46 <Displ_Transmit+0x1a>

	Displ_Select();
 8002f50:	f7ff ffc0 	bl	8002ed4 <Displ_Select>
	HAL_GPIO_WritePin(DISPL_DC_GPIO_Port, DISPL_DC_Pin, DC_Status);
 8002f54:	79fb      	ldrb	r3, [r7, #7]
 8002f56:	461a      	mov	r2, r3
 8002f58:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8002f5c:	4820      	ldr	r0, [pc, #128]	; (8002fe0 <Displ_Transmit+0xb4>)
 8002f5e:	f001 ffb9 	bl	8004ed4 <HAL_GPIO_WritePin>

	if (isTouchGFXBuffer){
 8002f62:	79bb      	ldrb	r3, [r7, #6]
 8002f64:	2b00      	cmp	r3, #0
 8002f66:	d016      	beq.n	8002f96 <Displ_Transmit+0x6a>
#ifdef Z_RGB565
//if color format is RGB565 just swap even and odd bytes correcting endianess for ILI driver
		uint32_t *limit=(uint32_t*)(data+dataSize);
 8002f68:	88bb      	ldrh	r3, [r7, #4]
 8002f6a:	683a      	ldr	r2, [r7, #0]
 8002f6c:	4413      	add	r3, r2
 8002f6e:	613b      	str	r3, [r7, #16]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 8002f70:	683b      	ldr	r3, [r7, #0]
 8002f72:	617b      	str	r3, [r7, #20]
 8002f74:	e00b      	b.n	8002f8e <Displ_Transmit+0x62>
			*data32=__REV16(*data32);
 8002f76:	697b      	ldr	r3, [r7, #20]
 8002f78:	681b      	ldr	r3, [r3, #0]
 8002f7a:	60fb      	str	r3, [r7, #12]
 */
__STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 8002f7c:	68fb      	ldr	r3, [r7, #12]
 8002f7e:	ba5b      	rev16	r3, r3
 8002f80:	60bb      	str	r3, [r7, #8]
  return result;
 8002f82:	68ba      	ldr	r2, [r7, #8]
 8002f84:	697b      	ldr	r3, [r7, #20]
 8002f86:	601a      	str	r2, [r3, #0]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 8002f88:	697b      	ldr	r3, [r7, #20]
 8002f8a:	3304      	adds	r3, #4
 8002f8c:	617b      	str	r3, [r7, #20]
 8002f8e:	697a      	ldr	r2, [r7, #20]
 8002f90:	693b      	ldr	r3, [r7, #16]
 8002f92:	429a      	cmp	r2, r3
 8002f94:	d3ef      	bcc.n	8002f76 <Displ_Transmit+0x4a>
#ifdef DISPLAY_SPI_INTERRUPT_MODE
		Displ_SpiAvailable=0;
		HAL_SPI_Transmit_IT(&DISPL_SPI_PORT , data, dataSize);
#else
#ifdef DISPLAY_SPI_DMA_MODE
		if (dataSize<DISPL_DMA_CUTOFF) {
 8002f96:	88bb      	ldrh	r3, [r7, #4]
 8002f98:	2b13      	cmp	r3, #19
 8002f9a:	d812      	bhi.n	8002fc2 <Displ_Transmit+0x96>
#endif //DISPLAY_SPI_DMA_MODE
			Displ_SpiAvailable=0;
 8002f9c:	4b0f      	ldr	r3, [pc, #60]	; (8002fdc <Displ_Transmit+0xb0>)
 8002f9e:	2200      	movs	r2, #0
 8002fa0:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit(&DISPL_SPI_PORT , data, dataSize, HAL_MAX_DELAY);
 8002fa2:	88ba      	ldrh	r2, [r7, #4]
 8002fa4:	f04f 33ff 	mov.w	r3, #4294967295
 8002fa8:	6839      	ldr	r1, [r7, #0]
 8002faa:	480e      	ldr	r0, [pc, #56]	; (8002fe4 <Displ_Transmit+0xb8>)
 8002fac:	f004 f8df 	bl	800716e <HAL_SPI_Transmit>
			Displ_SpiAvailable=1;
 8002fb0:	4b0a      	ldr	r3, [pc, #40]	; (8002fdc <Displ_Transmit+0xb0>)
 8002fb2:	2201      	movs	r2, #1
 8002fb4:	701a      	strb	r2, [r3, #0]
#ifdef DISPLAY_USING_TOUCHGFX
			if (isTouchGFXBuffer){
 8002fb6:	79bb      	ldrb	r3, [r7, #6]
 8002fb8:	2b00      	cmp	r3, #0
 8002fba:	d00b      	beq.n	8002fd4 <Displ_Transmit+0xa8>
				DisplayDriver_TransferCompleteCallback();
 8002fbc:	f00e ff28 	bl	8011e10 <DisplayDriver_TransferCompleteCallback>
			Displ_SpiAvailable=0;
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
		}
#endif //DISPLAY_SPI_DMA_MODE
#endif //DISPLAY_SPI_INTERRUPT_MODE
	}
 8002fc0:	e008      	b.n	8002fd4 <Displ_Transmit+0xa8>
			Displ_SpiAvailable=0;
 8002fc2:	4b06      	ldr	r3, [pc, #24]	; (8002fdc <Displ_Transmit+0xb0>)
 8002fc4:	2200      	movs	r2, #0
 8002fc6:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
 8002fc8:	88bb      	ldrh	r3, [r7, #4]
 8002fca:	461a      	mov	r2, r3
 8002fcc:	6839      	ldr	r1, [r7, #0]
 8002fce:	4805      	ldr	r0, [pc, #20]	; (8002fe4 <Displ_Transmit+0xb8>)
 8002fd0:	f004 fcbc 	bl	800794c <HAL_SPI_Transmit_DMA>
	}
 8002fd4:	bf00      	nop
 8002fd6:	3718      	adds	r7, #24
 8002fd8:	46bd      	mov	sp, r7
 8002fda:	bd80      	pop	{r7, pc}
 8002fdc:	20000008 	.word	0x20000008
 8002fe0:	40020000 	.word	0x40020000
 8002fe4:	20000258 	.word	0x20000258

08002fe8 <Displ_WriteCommand>:


/**********************************
 * @BRIEF	transmit a byte in a SPI_COMMAND format
 **********************************/
void Displ_WriteCommand(uint8_t cmd){
 8002fe8:	b580      	push	{r7, lr}
 8002fea:	b082      	sub	sp, #8
 8002fec:	af00      	add	r7, sp, #0
 8002fee:	4603      	mov	r3, r0
 8002ff0:	71fb      	strb	r3, [r7, #7]
	Displ_Transmit(SPI_COMMAND, &cmd, sizeof(cmd),0);
 8002ff2:	1df9      	adds	r1, r7, #7
 8002ff4:	2300      	movs	r3, #0
 8002ff6:	2201      	movs	r2, #1
 8002ff8:	2000      	movs	r0, #0
 8002ffa:	f7ff ff97 	bl	8002f2c <Displ_Transmit>
}
 8002ffe:	bf00      	nop
 8003000:	3708      	adds	r7, #8
 8003002:	46bd      	mov	sp, r7
 8003004:	bd80      	pop	{r7, pc}

08003006 <Displ_WriteData>:
 * @BRIEF	transmit a set of data in a SPI_DATA format
 * @PARAM 	data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **********************************/
void Displ_WriteData(uint8_t* buff, size_t buff_size, uint8_t isTouchGFXBuffer){
 8003006:	b580      	push	{r7, lr}
 8003008:	b084      	sub	sp, #16
 800300a:	af00      	add	r7, sp, #0
 800300c:	60f8      	str	r0, [r7, #12]
 800300e:	60b9      	str	r1, [r7, #8]
 8003010:	4613      	mov	r3, r2
 8003012:	71fb      	strb	r3, [r7, #7]
	if (buff_size==0) return;
 8003014:	68bb      	ldr	r3, [r7, #8]
 8003016:	2b00      	cmp	r3, #0
 8003018:	d007      	beq.n	800302a <Displ_WriteData+0x24>
	Displ_Transmit(SPI_DATA, buff, buff_size, isTouchGFXBuffer);
 800301a:	68bb      	ldr	r3, [r7, #8]
 800301c:	b29a      	uxth	r2, r3
 800301e:	79fb      	ldrb	r3, [r7, #7]
 8003020:	68f9      	ldr	r1, [r7, #12]
 8003022:	2001      	movs	r0, #1
 8003024:	f7ff ff82 	bl	8002f2c <Displ_Transmit>
 8003028:	e000      	b.n	800302c <Displ_WriteData+0x26>
	if (buff_size==0) return;
 800302a:	bf00      	nop
}
 800302c:	3710      	adds	r7, #16
 800302e:	46bd      	mov	sp, r7
 8003030:	bd80      	pop	{r7, pc}
	...

08003034 <ILI9XXX_Init>:


/**********************************
 * @brief	ILIXXX initialization sequence
 **********************************/
void ILI9XXX_Init(){
 8003034:	b580      	push	{r7, lr}
 8003036:	af00      	add	r7, sp, #0
	Displ_Select();
 8003038:	f7ff ff4c 	bl	8002ed4 <Displ_Select>

	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_RESET);
 800303c:	2200      	movs	r2, #0
 800303e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8003042:	481a      	ldr	r0, [pc, #104]	; (80030ac <ILI9XXX_Init+0x78>)
 8003044:	f001 ff46 	bl	8004ed4 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8003048:	2001      	movs	r0, #1
 800304a:	f000 fd31 	bl	8003ab0 <HAL_Delay>
	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_SET);
 800304e:	2201      	movs	r2, #1
 8003050:	f44f 7100 	mov.w	r1, #512	; 0x200
 8003054:	4815      	ldr	r0, [pc, #84]	; (80030ac <ILI9XXX_Init+0x78>)
 8003056:	f001 ff3d 	bl	8004ed4 <HAL_GPIO_WritePin>
	HAL_Delay(150);
 800305a:	2096      	movs	r0, #150	; 0x96
 800305c:	f000 fd28 	bl	8003ab0 <HAL_Delay>
		Displ_WriteData(data,3);
	#endif
*/


	Displ_WriteCommand(ILI9XXX_PIXEL_FORMAT);
 8003060:	203a      	movs	r0, #58	; 0x3a
 8003062:	f7ff ffc1 	bl	8002fe8 <Displ_WriteCommand>
#ifdef Z_RGB666
	Displ_WriteData((uint8_t *)"\x66",1,0);		// RGB666
#endif
#ifdef Z_RGB565
	Displ_WriteData((uint8_t *)"\x55",1,0);		// RGB565
 8003066:	2200      	movs	r2, #0
 8003068:	2101      	movs	r1, #1
 800306a:	4811      	ldr	r0, [pc, #68]	; (80030b0 <ILI9XXX_Init+0x7c>)
 800306c:	f7ff ffcb 	bl	8003006 <Displ_WriteData>
#endif
	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 8003070:	20b0      	movs	r0, #176	; 0xb0
 8003072:	f7ff ffb9 	bl	8002fe8 <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 8003076:	2200      	movs	r2, #0
 8003078:	2101      	movs	r1, #1
 800307a:	480e      	ldr	r0, [pc, #56]	; (80030b4 <ILI9XXX_Init+0x80>)
 800307c:	f7ff ffc3 	bl	8003006 <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 8003080:	20b0      	movs	r0, #176	; 0xb0
 8003082:	f7ff ffb1 	bl	8002fe8 <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 8003086:	2200      	movs	r2, #0
 8003088:	2101      	movs	r1, #1
 800308a:	480a      	ldr	r0, [pc, #40]	; (80030b4 <ILI9XXX_Init+0x80>)
 800308c:	f7ff ffbb 	bl	8003006 <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_SLEEP_OUT);
 8003090:	2011      	movs	r0, #17
 8003092:	f7ff ffa9 	bl	8002fe8 <Displ_WriteCommand>
	HAL_Delay(120);
 8003096:	2078      	movs	r0, #120	; 0x78
 8003098:	f000 fd0a 	bl	8003ab0 <HAL_Delay>

	Displ_WriteCommand(ILI9XXX_DISPLAY_ON);
 800309c:	2029      	movs	r0, #41	; 0x29
 800309e:	f7ff ffa3 	bl	8002fe8 <Displ_WriteCommand>
	HAL_Delay(5);
 80030a2:	2005      	movs	r0, #5
 80030a4:	f000 fd04 	bl	8003ab0 <HAL_Delay>

}
 80030a8:	bf00      	nop
 80030aa:	bd80      	pop	{r7, pc}
 80030ac:	40020000 	.word	0x40020000
 80030b0:	0802c25c 	.word	0x0802c25c
 80030b4:	0802c260 	.word	0x0802c260

080030b8 <Displ_SetAddressWindow>:
 * 			information
 * @param  x1,y1,x2,y2 top left and bottom
 * 					   right corner of the area
 * 					   to write
 **********************************************/
void Displ_SetAddressWindow(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2) {
 80030b8:	b590      	push	{r4, r7, lr}
 80030ba:	b083      	sub	sp, #12
 80030bc:	af00      	add	r7, sp, #0
 80030be:	4604      	mov	r4, r0
 80030c0:	4608      	mov	r0, r1
 80030c2:	4611      	mov	r1, r2
 80030c4:	461a      	mov	r2, r3
 80030c6:	4623      	mov	r3, r4
 80030c8:	80fb      	strh	r3, [r7, #6]
 80030ca:	4603      	mov	r3, r0
 80030cc:	80bb      	strh	r3, [r7, #4]
 80030ce:	460b      	mov	r3, r1
 80030d0:	807b      	strh	r3, [r7, #2]
 80030d2:	4613      	mov	r3, r2
 80030d4:	803b      	strh	r3, [r7, #0]
	static uint8_t data[4];

	((uint32_t *)data)[0]=(((x2 & 0xFF)<<24) | ((x2 & 0xFF00)<<8) | ((x1 & 0xFF)<<8) | ((x1 & 0xFF00)>>8) );
 80030d6:	887b      	ldrh	r3, [r7, #2]
 80030d8:	061a      	lsls	r2, r3, #24
 80030da:	887b      	ldrh	r3, [r7, #2]
 80030dc:	021b      	lsls	r3, r3, #8
 80030de:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 80030e2:	431a      	orrs	r2, r3
 80030e4:	88fb      	ldrh	r3, [r7, #6]
 80030e6:	021b      	lsls	r3, r3, #8
 80030e8:	b29b      	uxth	r3, r3
 80030ea:	4313      	orrs	r3, r2
 80030ec:	88fa      	ldrh	r2, [r7, #6]
 80030ee:	0a12      	lsrs	r2, r2, #8
 80030f0:	b292      	uxth	r2, r2
 80030f2:	431a      	orrs	r2, r3
 80030f4:	4b14      	ldr	r3, [pc, #80]	; (8003148 <Displ_SetAddressWindow+0x90>)
 80030f6:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_COLUMN_ADDR);
 80030f8:	202a      	movs	r0, #42	; 0x2a
 80030fa:	f7ff ff75 	bl	8002fe8 <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 80030fe:	2200      	movs	r2, #0
 8003100:	2104      	movs	r1, #4
 8003102:	4811      	ldr	r0, [pc, #68]	; (8003148 <Displ_SetAddressWindow+0x90>)
 8003104:	f7ff ff7f 	bl	8003006 <Displ_WriteData>

	((uint32_t *)data)[0]=(((y2 & 0xFF)<<24) | ((y2 & 0xFF00)<<8) | ((y1 & 0xFF)<<8) | ((y1 & 0xFF00)>>8) );
 8003108:	883b      	ldrh	r3, [r7, #0]
 800310a:	061a      	lsls	r2, r3, #24
 800310c:	883b      	ldrh	r3, [r7, #0]
 800310e:	021b      	lsls	r3, r3, #8
 8003110:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8003114:	431a      	orrs	r2, r3
 8003116:	88bb      	ldrh	r3, [r7, #4]
 8003118:	021b      	lsls	r3, r3, #8
 800311a:	b29b      	uxth	r3, r3
 800311c:	4313      	orrs	r3, r2
 800311e:	88ba      	ldrh	r2, [r7, #4]
 8003120:	0a12      	lsrs	r2, r2, #8
 8003122:	b292      	uxth	r2, r2
 8003124:	431a      	orrs	r2, r3
 8003126:	4b08      	ldr	r3, [pc, #32]	; (8003148 <Displ_SetAddressWindow+0x90>)
 8003128:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_PAGE_ADDR);
 800312a:	202b      	movs	r0, #43	; 0x2b
 800312c:	f7ff ff5c 	bl	8002fe8 <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 8003130:	2200      	movs	r2, #0
 8003132:	2104      	movs	r1, #4
 8003134:	4804      	ldr	r0, [pc, #16]	; (8003148 <Displ_SetAddressWindow+0x90>)
 8003136:	f7ff ff66 	bl	8003006 <Displ_WriteData>
	Displ_WriteCommand(ILI9XXX_MEMWR);
 800313a:	202c      	movs	r0, #44	; 0x2c
 800313c:	f7ff ff54 	bl	8002fe8 <Displ_WriteCommand>
}
 8003140:	bf00      	nop
 8003142:	370c      	adds	r7, #12
 8003144:	46bd      	mov	sp, r7
 8003146:	bd90      	pop	{r4, r7, pc}
 8003148:	20000448 	.word	0x20000448

0800314c <Displ_Init>:

/*****************************************************
 * @brief				first display initialization.
 * @param	orientation	display orientation
 *****************************************************/
void Displ_Init(Displ_Orientat_e orientation){
 800314c:	b580      	push	{r7, lr}
 800314e:	b082      	sub	sp, #8
 8003150:	af00      	add	r7, sp, #0
 8003152:	4603      	mov	r3, r0
 8003154:	71fb      	strb	r3, [r7, #7]
	if (TOUCH_SPI==DISPL_SPI){													// if touch and display share the same SPI port
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display (will be selected at writing time)
 8003156:	2201      	movs	r2, #1
 8003158:	f44f 7180 	mov.w	r1, #256	; 0x100
 800315c:	4809      	ldr	r0, [pc, #36]	; (8003184 <Displ_Init+0x38>)
 800315e:	f001 feb9 	bl	8004ed4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);		// unselect touch (will be selected at writing time)
 8003162:	2201      	movs	r2, #1
 8003164:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8003168:	4807      	ldr	r0, [pc, #28]	; (8003188 <Displ_Init+0x3c>)
 800316a:	f001 feb3 	bl	8004ed4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET); 	// select display
		SET_DISPL_SPI_BAUDRATE;
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);	// select touch
		SET_TOUCH_SPI_BAUDRATE;
	}
	ILI9XXX_Init();
 800316e:	f7ff ff61 	bl	8003034 <ILI9XXX_Init>
	Displ_Orientation(orientation);
 8003172:	79fb      	ldrb	r3, [r7, #7]
 8003174:	4618      	mov	r0, r3
 8003176:	f000 f809 	bl	800318c <Displ_Orientation>
}
 800317a:	bf00      	nop
 800317c:	3708      	adds	r7, #8
 800317e:	46bd      	mov	sp, r7
 8003180:	bd80      	pop	{r7, pc}
 8003182:	bf00      	nop
 8003184:	40020000 	.word	0x40020000
 8003188:	40020400 	.word	0x40020400

0800318c <Displ_Orientation>:

/**********************************************
 * @brief		set orientation of the display
 * @param  	m	orientation
 **********************************************/
void Displ_Orientation(Displ_Orientat_e orientation){
 800318c:	b580      	push	{r7, lr}
 800318e:	b082      	sub	sp, #8
 8003190:	af00      	add	r7, sp, #0
 8003192:	4603      	mov	r3, r0
 8003194:	71fb      	strb	r3, [r7, #7]
	static uint8_t data[1];
	switch(orientation) {
 8003196:	79fb      	ldrb	r3, [r7, #7]
 8003198:	2b03      	cmp	r3, #3
 800319a:	d837      	bhi.n	800320c <Displ_Orientation+0x80>
 800319c:	a201      	add	r2, pc, #4	; (adr r2, 80031a4 <Displ_Orientation+0x18>)
 800319e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80031a2:	bf00      	nop
 80031a4:	080031b5 	.word	0x080031b5
 80031a8:	080031cb 	.word	0x080031cb
 80031ac:	080031e1 	.word	0x080031e1
 80031b0:	080031f7 	.word	0x080031f7
		case Displ_Orientat_0:
			data[0]=ILI9XXX_MADCTL_0DEG;
 80031b4:	4b1d      	ldr	r3, [pc, #116]	; (800322c <Displ_Orientation+0xa0>)
 80031b6:	2288      	movs	r2, #136	; 0x88
 80031b8:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 80031ba:	4b1d      	ldr	r3, [pc, #116]	; (8003230 <Displ_Orientation+0xa4>)
 80031bc:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80031c0:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 80031c2:	4b1c      	ldr	r3, [pc, #112]	; (8003234 <Displ_Orientation+0xa8>)
 80031c4:	22f0      	movs	r2, #240	; 0xf0
 80031c6:	801a      	strh	r2, [r3, #0]
			break;
 80031c8:	e020      	b.n	800320c <Displ_Orientation+0x80>
		case Displ_Orientat_90:
			data[0]=ILI9XXX_MADCTL_90DEG;
 80031ca:	4b18      	ldr	r3, [pc, #96]	; (800322c <Displ_Orientation+0xa0>)
 80031cc:	22e8      	movs	r2, #232	; 0xe8
 80031ce:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 80031d0:	4b17      	ldr	r3, [pc, #92]	; (8003230 <Displ_Orientation+0xa4>)
 80031d2:	22f0      	movs	r2, #240	; 0xf0
 80031d4:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 80031d6:	4b17      	ldr	r3, [pc, #92]	; (8003234 <Displ_Orientation+0xa8>)
 80031d8:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80031dc:	801a      	strh	r2, [r3, #0]
			break;
 80031de:	e015      	b.n	800320c <Displ_Orientation+0x80>
		case Displ_Orientat_180:
			data[0]=ILI9XXX_MADCTL_180DEG;
 80031e0:	4b12      	ldr	r3, [pc, #72]	; (800322c <Displ_Orientation+0xa0>)
 80031e2:	2248      	movs	r2, #72	; 0x48
 80031e4:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 80031e6:	4b12      	ldr	r3, [pc, #72]	; (8003230 <Displ_Orientation+0xa4>)
 80031e8:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80031ec:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 80031ee:	4b11      	ldr	r3, [pc, #68]	; (8003234 <Displ_Orientation+0xa8>)
 80031f0:	22f0      	movs	r2, #240	; 0xf0
 80031f2:	801a      	strh	r2, [r3, #0]
			break;
 80031f4:	e00a      	b.n	800320c <Displ_Orientation+0x80>
		case Displ_Orientat_270:
			data[0]=ILI9XXX_MADCTL_270DEG;
 80031f6:	4b0d      	ldr	r3, [pc, #52]	; (800322c <Displ_Orientation+0xa0>)
 80031f8:	2228      	movs	r2, #40	; 0x28
 80031fa:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 80031fc:	4b0c      	ldr	r3, [pc, #48]	; (8003230 <Displ_Orientation+0xa4>)
 80031fe:	22f0      	movs	r2, #240	; 0xf0
 8003200:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 8003202:	4b0c      	ldr	r3, [pc, #48]	; (8003234 <Displ_Orientation+0xa8>)
 8003204:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8003208:	801a      	strh	r2, [r3, #0]
			break;
 800320a:	bf00      	nop
	}
	Displ_WriteCommand(ILI9XXX_MADCTL);
 800320c:	2036      	movs	r0, #54	; 0x36
 800320e:	f7ff feeb 	bl	8002fe8 <Displ_WriteCommand>
	Displ_WriteData(data,1,0);
 8003212:	2200      	movs	r2, #0
 8003214:	2101      	movs	r1, #1
 8003216:	4805      	ldr	r0, [pc, #20]	; (800322c <Displ_Orientation+0xa0>)
 8003218:	f7ff fef5 	bl	8003006 <Displ_WriteData>
	current_orientation = orientation;  //stores active orientation into a global variable for touch routines
 800321c:	4a06      	ldr	r2, [pc, #24]	; (8003238 <Displ_Orientation+0xac>)
 800321e:	79fb      	ldrb	r3, [r7, #7]
 8003220:	7013      	strb	r3, [r2, #0]
}
 8003222:	bf00      	nop
 8003224:	3708      	adds	r7, #8
 8003226:	46bd      	mov	sp, r7
 8003228:	bd80      	pop	{r7, pc}
 800322a:	bf00      	nop
 800322c:	2000044c 	.word	0x2000044c
 8003230:	20000444 	.word	0x20000444
 8003234:	20000442 	.word	0x20000442
 8003238:	20000440 	.word	0x20000440

0800323c <HAL_SPI_ErrorCallback>:




void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi){
 800323c:	b480      	push	{r7}
 800323e:	b083      	sub	sp, #12
 8003240:	af00      	add	r7, sp, #0
 8003242:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 8003244:	687b      	ldr	r3, [r7, #4]
 8003246:	681b      	ldr	r3, [r3, #0]
 8003248:	4a05      	ldr	r2, [pc, #20]	; (8003260 <HAL_SPI_ErrorCallback+0x24>)
 800324a:	4293      	cmp	r3, r2
 800324c:	d102      	bne.n	8003254 <HAL_SPI_ErrorCallback+0x18>
		Displ_SpiAvailable=1;
 800324e:	4b05      	ldr	r3, [pc, #20]	; (8003264 <HAL_SPI_ErrorCallback+0x28>)
 8003250:	2201      	movs	r2, #1
 8003252:	701a      	strb	r2, [r3, #0]
	}
}
 8003254:	bf00      	nop
 8003256:	370c      	adds	r7, #12
 8003258:	46bd      	mov	sp, r7
 800325a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800325e:	4770      	bx	lr
 8003260:	40003800 	.word	0x40003800
 8003264:	20000008 	.word	0x20000008

08003268 <HAL_SPI_TxCpltCallback>:





void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi) {
 8003268:	b580      	push	{r7, lr}
 800326a:	b082      	sub	sp, #8
 800326c:	af00      	add	r7, sp, #0
 800326e:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 8003270:	687b      	ldr	r3, [r7, #4]
 8003272:	681b      	ldr	r3, [r3, #0]
 8003274:	4a05      	ldr	r2, [pc, #20]	; (800328c <HAL_SPI_TxCpltCallback+0x24>)
 8003276:	4293      	cmp	r3, r2
 8003278:	d104      	bne.n	8003284 <HAL_SPI_TxCpltCallback+0x1c>
		Displ_SpiAvailable=1;
 800327a:	4b05      	ldr	r3, [pc, #20]	; (8003290 <HAL_SPI_TxCpltCallback+0x28>)
 800327c:	2201      	movs	r2, #1
 800327e:	701a      	strb	r2, [r3, #0]

	#ifdef DISPLAY_USING_TOUCHGFX
		DisplayDriver_TransferCompleteCallback();
 8003280:	f00e fdc6 	bl	8011e10 <DisplayDriver_TransferCompleteCallback>
	#endif

	}
}
 8003284:	bf00      	nop
 8003286:	3708      	adds	r7, #8
 8003288:	46bd      	mov	sp, r7
 800328a:	bd80      	pop	{r7, pc}
 800328c:	40003800 	.word	0x40003800
 8003290:	20000008 	.word	0x20000008

08003294 <Displ_BackLight>:
 *				'0'		set the display level to 0 (off)
 *				'I'		'Initialize'  IT MUST BE in dimming mode
 *              'Q'		do nothing, just return current level
 * @return		current backlight level
 **************************************/
uint32_t  Displ_BackLight(uint8_t cmd) {
 8003294:	b580      	push	{r7, lr}
 8003296:	b082      	sub	sp, #8
 8003298:	af00      	add	r7, sp, #0
 800329a:	4603      	mov	r3, r0
 800329c:	71fb      	strb	r3, [r7, #7]

#ifdef DISPLAY_DIMMING_MODE
	static uint16_t memCCR1=0;  			//it stores CCR1 value while in stand-by
#endif

	switch (cmd) {
 800329e:	79fb      	ldrb	r3, [r7, #7]
 80032a0:	3b2b      	subs	r3, #43	; 0x2b
 80032a2:	2b2c      	cmp	r3, #44	; 0x2c
 80032a4:	f200 80b0 	bhi.w	8003408 <Displ_BackLight+0x174>
 80032a8:	a201      	add	r2, pc, #4	; (adr r2, 80032b0 <Displ_BackLight+0x1c>)
 80032aa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80032ae:	bf00      	nop
 80032b0:	080033ad 	.word	0x080033ad
 80032b4:	08003409 	.word	0x08003409
 80032b8:	080033d7 	.word	0x080033d7
 80032bc:	08003409 	.word	0x08003409
 80032c0:	08003409 	.word	0x08003409
 80032c4:	08003377 	.word	0x08003377
 80032c8:	08003369 	.word	0x08003369
 80032cc:	08003409 	.word	0x08003409
 80032d0:	08003409 	.word	0x08003409
 80032d4:	08003409 	.word	0x08003409
 80032d8:	08003409 	.word	0x08003409
 80032dc:	08003409 	.word	0x08003409
 80032e0:	08003409 	.word	0x08003409
 80032e4:	08003409 	.word	0x08003409
 80032e8:	08003409 	.word	0x08003409
 80032ec:	08003409 	.word	0x08003409
 80032f0:	08003409 	.word	0x08003409
 80032f4:	08003409 	.word	0x08003409
 80032f8:	08003409 	.word	0x08003409
 80032fc:	08003409 	.word	0x08003409
 8003300:	08003409 	.word	0x08003409
 8003304:	08003409 	.word	0x08003409
 8003308:	08003409 	.word	0x08003409
 800330c:	08003409 	.word	0x08003409
 8003310:	08003409 	.word	0x08003409
 8003314:	08003409 	.word	0x08003409
 8003318:	08003409 	.word	0x08003409
 800331c:	08003369 	.word	0x08003369
 8003320:	08003409 	.word	0x08003409
 8003324:	08003409 	.word	0x08003409
 8003328:	080033f7 	.word	0x080033f7
 800332c:	08003409 	.word	0x08003409
 8003330:	08003409 	.word	0x08003409
 8003334:	08003409 	.word	0x08003409
 8003338:	08003409 	.word	0x08003409
 800333c:	08003409 	.word	0x08003409
 8003340:	08003409 	.word	0x08003409
 8003344:	08003409 	.word	0x08003409
 8003348:	08003365 	.word	0x08003365
 800334c:	08003409 	.word	0x08003409
 8003350:	0800338d 	.word	0x0800338d
 8003354:	08003409 	.word	0x08003409
 8003358:	08003409 	.word	0x08003409
 800335c:	08003409 	.word	0x08003409
 8003360:	08003381 	.word	0x08003381
	case 'Q':
		__NOP();
 8003364:	bf00      	nop
		break;
 8003366:	e052      	b.n	800340e <Displ_BackLight+0x17a>
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_RESET);
		break;
#else
	case 'F':
	case '1':
		BKLIT_TIMER->BKLIT_CCR=BKLIT_TIMER->ARR;
 8003368:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800336c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003370:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003372:	6353      	str	r3, [r2, #52]	; 0x34
		break;
 8003374:	e04b      	b.n	800340e <Displ_BackLight+0x17a>
	case '0':
		BKLIT_TIMER->BKLIT_CCR=0;
 8003376:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800337a:	2200      	movs	r2, #0
 800337c:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 800337e:	e046      	b.n	800340e <Displ_BackLight+0x17a>
	case 'W':
		BKLIT_TIMER->BKLIT_CCR=memCCR1;					//restore previous level
 8003380:	4b26      	ldr	r3, [pc, #152]	; (800341c <Displ_BackLight+0x188>)
 8003382:	881a      	ldrh	r2, [r3, #0]
 8003384:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003388:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 800338a:	e040      	b.n	800340e <Displ_BackLight+0x17a>
	case 'S':
		memCCR1=BKLIT_TIMER->BKLIT_CCR;
 800338c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003390:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003392:	b29a      	uxth	r2, r3
 8003394:	4b21      	ldr	r3, [pc, #132]	; (800341c <Displ_BackLight+0x188>)
 8003396:	801a      	strh	r2, [r3, #0]
		if (BKLIT_TIMER->BKLIT_CCR>=(BKLIT_STBY_LEVEL))	//set stby level only if current level is higher
 8003398:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800339c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800339e:	2b31      	cmp	r3, #49	; 0x31
 80033a0:	d934      	bls.n	800340c <Displ_BackLight+0x178>
			BKLIT_TIMER->BKLIT_CCR=(BKLIT_STBY_LEVEL);
 80033a2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80033a6:	2232      	movs	r2, #50	; 0x32
 80033a8:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 80033aa:	e02f      	b.n	800340c <Displ_BackLight+0x178>
	case '+':
		if (BKLIT_TIMER->ARR>BKLIT_TIMER->BKLIT_CCR)		// if CCR1 has not yet the highest value (ARR)
 80033ac:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80033b0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80033b2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80033b6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80033b8:	429a      	cmp	r2, r3
 80033ba:	d905      	bls.n	80033c8 <Displ_BackLight+0x134>
			++BKLIT_TIMER->BKLIT_CCR;
 80033bc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80033c0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80033c2:	3201      	adds	r2, #1
 80033c4:	635a      	str	r2, [r3, #52]	; 0x34
		else
			BKLIT_TIMER->BKLIT_CCR=BKLIT_TIMER->ARR;
		break;
 80033c6:	e022      	b.n	800340e <Displ_BackLight+0x17a>
			BKLIT_TIMER->BKLIT_CCR=BKLIT_TIMER->ARR;
 80033c8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80033cc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80033d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80033d2:	6353      	str	r3, [r2, #52]	; 0x34
		break;
 80033d4:	e01b      	b.n	800340e <Displ_BackLight+0x17a>
	case '-':
		if (BKLIT_TIMER->BKLIT_CCR>0)					// if CCR1 has not yet the lowest value (0)
 80033d6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80033da:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80033dc:	2b00      	cmp	r3, #0
 80033de:	d005      	beq.n	80033ec <Displ_BackLight+0x158>
			--BKLIT_TIMER->BKLIT_CCR;
 80033e0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80033e4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80033e6:	3a01      	subs	r2, #1
 80033e8:	635a      	str	r2, [r3, #52]	; 0x34
		else
			BKLIT_TIMER->BKLIT_CCR=0;
		break;
 80033ea:	e010      	b.n	800340e <Displ_BackLight+0x17a>
			BKLIT_TIMER->BKLIT_CCR=0;
 80033ec:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80033f0:	2200      	movs	r2, #0
 80033f2:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 80033f4:	e00b      	b.n	800340e <Displ_BackLight+0x17a>
	case 'I':
	  	HAL_TIM_PWM_Start(&BKLIT_T, BKLIT_CHANNEL);
 80033f6:	2100      	movs	r1, #0
 80033f8:	4809      	ldr	r0, [pc, #36]	; (8003420 <Displ_BackLight+0x18c>)
 80033fa:	f004 ff51 	bl	80082a0 <HAL_TIM_PWM_Start>
		BKLIT_TIMER->BKLIT_CCR=BKLIT_INIT_LEVEL;
 80033fe:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003402:	2264      	movs	r2, #100	; 0x64
 8003404:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 8003406:	e002      	b.n	800340e <Displ_BackLight+0x17a>
#endif
	default:
		break;
 8003408:	bf00      	nop
 800340a:	e000      	b.n	800340e <Displ_BackLight+0x17a>
		break;
 800340c:	bf00      	nop
	}
#ifndef DISPLAY_DIMMING_MODE
	return HAL_GPIO_ReadPin(DISPL_LED_GPIO_Port, DISPL_LED_Pin);
#else
	return (BKLIT_TIMER->BKLIT_CCR);
 800340e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003412:	6b5b      	ldr	r3, [r3, #52]	; 0x34
#endif
}
 8003414:	4618      	mov	r0, r3
 8003416:	3708      	adds	r7, #8
 8003418:	46bd      	mov	sp, r7
 800341a:	bd80      	pop	{r7, pc}
 800341c:	2000044e 	.word	0x2000044e
 8003420:	20000310 	.word	0x20000310

08003424 <touchgfxDisplayDriverTransmitActive>:
 * @brief	TouchGFX integration: returns status of
 * 			communication to the display
 * @return	1 = there is a transmission running
 * 			0 = no transmission
 *********************************************************/
int touchgfxDisplayDriverTransmitActive(){
 8003424:	b480      	push	{r7}
 8003426:	af00      	add	r7, sp, #0
	// using the flag indicating SPI port availability
	// already used to drive communication via DMA
	return (!Displ_SpiAvailable);
 8003428:	4b06      	ldr	r3, [pc, #24]	; (8003444 <touchgfxDisplayDriverTransmitActive+0x20>)
 800342a:	781b      	ldrb	r3, [r3, #0]
 800342c:	b2db      	uxtb	r3, r3
 800342e:	2b00      	cmp	r3, #0
 8003430:	bf0c      	ite	eq
 8003432:	2301      	moveq	r3, #1
 8003434:	2300      	movne	r3, #0
 8003436:	b2db      	uxtb	r3, r3
}
 8003438:	4618      	mov	r0, r3
 800343a:	46bd      	mov	sp, r7
 800343c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003440:	4770      	bx	lr
 8003442:	bf00      	nop
 8003444:	20000008 	.word	0x20000008

08003448 <touchgfxDisplayDriverTransmitBlock>:

/*********************************************************
 * @brief	TouchGFX integration: write to display the
 * 			block indicated by parameters
 *********************************************************/
void touchgfxDisplayDriverTransmitBlock(const uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h){
 8003448:	b590      	push	{r4, r7, lr}
 800344a:	b085      	sub	sp, #20
 800344c:	af00      	add	r7, sp, #0
 800344e:	60f8      	str	r0, [r7, #12]
 8003450:	4608      	mov	r0, r1
 8003452:	4611      	mov	r1, r2
 8003454:	461a      	mov	r2, r3
 8003456:	4603      	mov	r3, r0
 8003458:	817b      	strh	r3, [r7, #10]
 800345a:	460b      	mov	r3, r1
 800345c:	813b      	strh	r3, [r7, #8]
 800345e:	4613      	mov	r3, r2
 8003460:	80fb      	strh	r3, [r7, #6]
	//START WRITING TO DISPLAY
		Displ_SetAddressWindow(x, y, x+w-1, y+h-1);
 8003462:	897a      	ldrh	r2, [r7, #10]
 8003464:	88fb      	ldrh	r3, [r7, #6]
 8003466:	4413      	add	r3, r2
 8003468:	b29b      	uxth	r3, r3
 800346a:	3b01      	subs	r3, #1
 800346c:	b29c      	uxth	r4, r3
 800346e:	893a      	ldrh	r2, [r7, #8]
 8003470:	8c3b      	ldrh	r3, [r7, #32]
 8003472:	4413      	add	r3, r2
 8003474:	b29b      	uxth	r3, r3
 8003476:	3b01      	subs	r3, #1
 8003478:	b29b      	uxth	r3, r3
 800347a:	8939      	ldrh	r1, [r7, #8]
 800347c:	8978      	ldrh	r0, [r7, #10]
 800347e:	4622      	mov	r2, r4
 8003480:	f7ff fe1a 	bl	80030b8 <Displ_SetAddressWindow>
		Displ_WriteData((uint8_t* )pixels,((w*h)<<1),1);
 8003484:	88fb      	ldrh	r3, [r7, #6]
 8003486:	8c3a      	ldrh	r2, [r7, #32]
 8003488:	fb02 f303 	mul.w	r3, r2, r3
 800348c:	005b      	lsls	r3, r3, #1
 800348e:	2201      	movs	r2, #1
 8003490:	4619      	mov	r1, r3
 8003492:	68f8      	ldr	r0, [r7, #12]
 8003494:	f7ff fdb7 	bl	8003006 <Displ_WriteData>
}
 8003498:	bf00      	nop
 800349a:	3714      	adds	r7, #20
 800349c:	46bd      	mov	sp, r7
 800349e:	bd90      	pop	{r4, r7, pc}

080034a0 <HAL_TIM_PeriodElapsedCallback>:
 * @brief	TouchGFX integration: this is the callback
 * 			function run by timer interrupt implementing
 * 			the tick timer for TouchGFX
 *********************************************************/
#ifdef DISPLAY_USING_TOUCHGFX
void HAL_TIM_PeriodElapsedCallback (TIM_HandleTypeDef * htim){
 80034a0:	b580      	push	{r7, lr}
 80034a2:	b082      	sub	sp, #8
 80034a4:	af00      	add	r7, sp, #0
 80034a6:	6078      	str	r0, [r7, #4]
	if (htim==&TGFX_T){
 80034a8:	687b      	ldr	r3, [r7, #4]
 80034aa:	4a0e      	ldr	r2, [pc, #56]	; (80034e4 <HAL_TIM_PeriodElapsedCallback+0x44>)
 80034ac:	4293      	cmp	r3, r2
 80034ae:	d101      	bne.n	80034b4 <HAL_TIM_PeriodElapsedCallback+0x14>
		  touchgfxSignalVSync();
 80034b0:	f00e fcb4 	bl	8011e1c <touchgfxSignalVSync>
	}
	if(htim->Instance == TIM9){
 80034b4:	687b      	ldr	r3, [r7, #4]
 80034b6:	681b      	ldr	r3, [r3, #0]
 80034b8:	4a0b      	ldr	r2, [pc, #44]	; (80034e8 <HAL_TIM_PeriodElapsedCallback+0x48>)
 80034ba:	4293      	cmp	r3, r2
 80034bc:	d103      	bne.n	80034c6 <HAL_TIM_PeriodElapsedCallback+0x26>
		HAL_GPIO_TogglePin(BUZZER_1_GPIO_Port, BUZZER_1_Pin);
 80034be:	2104      	movs	r1, #4
 80034c0:	480a      	ldr	r0, [pc, #40]	; (80034ec <HAL_TIM_PeriodElapsedCallback+0x4c>)
 80034c2:	f001 fd20 	bl	8004f06 <HAL_GPIO_TogglePin>
	}
	if(htim->Instance == TIM10){
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	681b      	ldr	r3, [r3, #0]
 80034ca:	4a09      	ldr	r2, [pc, #36]	; (80034f0 <HAL_TIM_PeriodElapsedCallback+0x50>)
 80034cc:	4293      	cmp	r3, r2
 80034ce:	d104      	bne.n	80034da <HAL_TIM_PeriodElapsedCallback+0x3a>
		counter++;
 80034d0:	4b08      	ldr	r3, [pc, #32]	; (80034f4 <HAL_TIM_PeriodElapsedCallback+0x54>)
 80034d2:	681b      	ldr	r3, [r3, #0]
 80034d4:	3301      	adds	r3, #1
 80034d6:	4a07      	ldr	r2, [pc, #28]	; (80034f4 <HAL_TIM_PeriodElapsedCallback+0x54>)
 80034d8:	6013      	str	r3, [r2, #0]
	}
}
 80034da:	bf00      	nop
 80034dc:	3708      	adds	r7, #8
 80034de:	46bd      	mov	sp, r7
 80034e0:	bd80      	pop	{r7, pc}
 80034e2:	bf00      	nop
 80034e4:	20000358 	.word	0x20000358
 80034e8:	40014000 	.word	0x40014000
 80034ec:	40020400 	.word	0x40020400
 80034f0:	40014400 	.word	0x40014400
 80034f4:	2000015c 	.word	0x2000015c

080034f8 <Touch_HandlePenDownInterrupt>:
volatile uint8_t Touch_PenDown=0;						// set to 1 by pendown interrupt callback, reset to 0 by sw
volatile uint8_t Touch_Int_Enabled=1;					// while reading touch sensor touch interrupt handling is disabled through this flag



void Touch_HandlePenDownInterrupt (){
 80034f8:	b480      	push	{r7}
 80034fa:	af00      	add	r7, sp, #0
	if (Touch_Int_Enabled) {
 80034fc:	4b06      	ldr	r3, [pc, #24]	; (8003518 <Touch_HandlePenDownInterrupt+0x20>)
 80034fe:	781b      	ldrb	r3, [r3, #0]
 8003500:	b2db      	uxtb	r3, r3
 8003502:	2b00      	cmp	r3, #0
 8003504:	d002      	beq.n	800350c <Touch_HandlePenDownInterrupt+0x14>
		Touch_PenDown=1;
 8003506:	4b05      	ldr	r3, [pc, #20]	; (800351c <Touch_HandlePenDownInterrupt+0x24>)
 8003508:	2201      	movs	r2, #1
 800350a:	701a      	strb	r2, [r3, #0]
	}
}
 800350c:	bf00      	nop
 800350e:	46bd      	mov	sp, r7
 8003510:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003514:	4770      	bx	lr
 8003516:	bf00      	nop
 8003518:	20000009 	.word	0x20000009
 800351c:	20000450 	.word	0x20000450

08003520 <HAL_GPIO_EXTI_Callback>:



void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 8003520:	b580      	push	{r7, lr}
 8003522:	b082      	sub	sp, #8
 8003524:	af00      	add	r7, sp, #0
 8003526:	4603      	mov	r3, r0
 8003528:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin==TOUCH_INT_Pin){
 800352a:	88fb      	ldrh	r3, [r7, #6]
 800352c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003530:	d101      	bne.n	8003536 <HAL_GPIO_EXTI_Callback+0x16>
		Touch_HandlePenDownInterrupt();
 8003532:	f7ff ffe1 	bl	80034f8 <Touch_HandlePenDownInterrupt>
	}
}
 8003536:	bf00      	nop
 8003538:	3708      	adds	r7, #8
 800353a:	46bd      	mov	sp, r7
 800353c:	bd80      	pop	{r7, pc}
	...

08003540 <Touch_Select>:

/******************************************
 * @brief	enable touch, disabling display
 * 			set SPI baudrate as needed
 ******************************************/
void Touch_Select(void) {
 8003540:	b580      	push	{r7, lr}
 8003542:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		if (!HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display selected
 8003544:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003548:	4813      	ldr	r0, [pc, #76]	; (8003598 <Touch_Select+0x58>)
 800354a:	f001 fcab 	bl	8004ea4 <HAL_GPIO_ReadPin>
 800354e:	4603      	mov	r3, r0
 8003550:	2b00      	cmp	r3, #0
 8003552:	d10b      	bne.n	800356c <Touch_Select+0x2c>
			while (!Displ_SpiAvailable) {};  										// waiting for completing display communication. Flag is set to 1 by transmission-complete interrupt callback
 8003554:	bf00      	nop
 8003556:	4b11      	ldr	r3, [pc, #68]	; (800359c <Touch_Select+0x5c>)
 8003558:	781b      	ldrb	r3, [r3, #0]
 800355a:	b2db      	uxtb	r3, r3
 800355c:	2b00      	cmp	r3, #0
 800355e:	d0fa      	beq.n	8003556 <Touch_Select+0x16>
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display
 8003560:	2201      	movs	r2, #1
 8003562:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003566:	480c      	ldr	r0, [pc, #48]	; (8003598 <Touch_Select+0x58>)
 8003568:	f001 fcb4 	bl	8004ed4 <HAL_GPIO_WritePin>
		}
		SET_TOUCH_SPI_BAUDRATE;				   										//change SPI port speed as per display needs
 800356c:	4b0c      	ldr	r3, [pc, #48]	; (80035a0 <Touch_Select+0x60>)
 800356e:	681a      	ldr	r2, [r3, #0]
 8003570:	490b      	ldr	r1, [pc, #44]	; (80035a0 <Touch_Select+0x60>)
 8003572:	f64f 73c7 	movw	r3, #65479	; 0xffc7
 8003576:	4013      	ands	r3, r2
 8003578:	600b      	str	r3, [r1, #0]
 800357a:	4b09      	ldr	r3, [pc, #36]	; (80035a0 <Touch_Select+0x60>)
 800357c:	681b      	ldr	r3, [r3, #0]
 800357e:	4a08      	ldr	r2, [pc, #32]	; (80035a0 <Touch_Select+0x60>)
 8003580:	f043 0338 	orr.w	r3, r3, #56	; 0x38
 8003584:	6013      	str	r3, [r2, #0]
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);
 8003586:	2200      	movs	r2, #0
 8003588:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800358c:	4805      	ldr	r0, [pc, #20]	; (80035a4 <Touch_Select+0x64>)
 800358e:	f001 fca1 	bl	8004ed4 <HAL_GPIO_WritePin>
	}
}
 8003592:	bf00      	nop
 8003594:	bd80      	pop	{r7, pc}
 8003596:	bf00      	nop
 8003598:	40020000 	.word	0x40020000
 800359c:	20000008 	.word	0x20000008
 80035a0:	40003800 	.word	0x40003800
 80035a4:	40020400 	.word	0x40020400

080035a8 <Touch_UnSelect>:


/******************************************
 * @brief	disable touch
 ******************************************/
void Touch_UnSelect(void) {
 80035a8:	b580      	push	{r7, lr}
 80035aa:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);			// unselect touch
 80035ac:	2201      	movs	r2, #1
 80035ae:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80035b2:	4802      	ldr	r0, [pc, #8]	; (80035bc <Touch_UnSelect+0x14>)
 80035b4:	f001 fc8e 	bl	8004ed4 <HAL_GPIO_WritePin>
	}
}
 80035b8:	bf00      	nop
 80035ba:	bd80      	pop	{r7, pc}
 80035bc:	40020400 	.word	0x40020400

080035c0 <Touch_PollAxis>:
 * @params	axis	use only one of the three options X_AXIS, Y_AXIS or Z_AXIS
 * @return			the level measured on the "axis" axis
 * 					PLEASE NOTE this function should be only for internal usage
 * 								Use Touch_GetXYTouch() instead
 *******************************************************************************/
uint16_t Touch_PollAxis(uint8_t axis) {
 80035c0:	b580      	push	{r7, lr}
 80035c2:	b084      	sub	sp, #16
 80035c4:	af00      	add	r7, sp, #0
 80035c6:	4603      	mov	r3, r0
 80035c8:	71fb      	strb	r3, [r7, #7]
	uint8_t poll[2] = {0,0};
 80035ca:	2300      	movs	r3, #0
 80035cc:	813b      	strh	r3, [r7, #8]
	uint32_t poll16;
	
	if (TOUCH_SPI==DISPL_SPI){				// if touch and display share the same SPI port
		Touch_Select();						// enable CS on touch device
 80035ce:	f7ff ffb7 	bl	8003540 <Touch_Select>
	}

	Touch_Int_Enabled=0;	//disable interrupt handling: sensor reading triggers interrupt
 80035d2:	4b17      	ldr	r3, [pc, #92]	; (8003630 <Touch_PollAxis+0x70>)
 80035d4:	2200      	movs	r2, #0
 80035d6:	701a      	strb	r2, [r3, #0]
	// disable interrupt while enquiring the touch sensor because it triggers the interrupt pin
	HAL_NVIC_DisableIRQ(TOUCH_INT_EXTI_IRQn);
 80035d8:	2028      	movs	r0, #40	; 0x28
 80035da:	f000 ff08 	bl	80043ee <HAL_NVIC_DisableIRQ>

	HAL_SPI_Transmit(&TOUCH_SPI_PORT, &axis, 1, 10);
 80035de:	1df9      	adds	r1, r7, #7
 80035e0:	230a      	movs	r3, #10
 80035e2:	2201      	movs	r2, #1
 80035e4:	4813      	ldr	r0, [pc, #76]	; (8003634 <Touch_PollAxis+0x74>)
 80035e6:	f003 fdc2 	bl	800716e <HAL_SPI_Transmit>
	if (HAL_SPI_Receive(&TOUCH_SPI_PORT, poll, 2, 10) == HAL_OK) {
 80035ea:	f107 0108 	add.w	r1, r7, #8
 80035ee:	230a      	movs	r3, #10
 80035f0:	2202      	movs	r2, #2
 80035f2:	4810      	ldr	r0, [pc, #64]	; (8003634 <Touch_PollAxis+0x74>)
 80035f4:	f003 fef7 	bl	80073e6 <HAL_SPI_Receive>
 80035f8:	4603      	mov	r3, r0
 80035fa:	2b00      	cmp	r3, #0
 80035fc:	d105      	bne.n	800360a <Touch_PollAxis+0x4a>
		poll16 = (poll[0]<<8) + poll[1];
 80035fe:	7a3b      	ldrb	r3, [r7, #8]
 8003600:	021b      	lsls	r3, r3, #8
 8003602:	7a7a      	ldrb	r2, [r7, #9]
 8003604:	4413      	add	r3, r2
 8003606:	60fb      	str	r3, [r7, #12]
 8003608:	e001      	b.n	800360e <Touch_PollAxis+0x4e>
	}
	else {
		poll16 = 0;
 800360a:	2300      	movs	r3, #0
 800360c:	60fb      	str	r3, [r7, #12]
	}

//enable back interrupt after reading the sensor
	HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 800360e:	2028      	movs	r0, #40	; 0x28
 8003610:	f000 ff07 	bl	8004422 <HAL_NVIC_ClearPendingIRQ>
	HAL_NVIC_EnableIRQ(TOUCH_INT_EXTI_IRQn);
 8003614:	2028      	movs	r0, #40	; 0x28
 8003616:	f000 fedc 	bl	80043d2 <HAL_NVIC_EnableIRQ>

	Touch_Int_Enabled=1;
 800361a:	4b05      	ldr	r3, [pc, #20]	; (8003630 <Touch_PollAxis+0x70>)
 800361c:	2201      	movs	r2, #1
 800361e:	701a      	strb	r2, [r3, #0]

	if (TOUCH_SPI==DISPL_SPI){	// if touch and display share the same SPI port
		Touch_UnSelect();
 8003620:	f7ff ffc2 	bl	80035a8 <Touch_UnSelect>
	}

	return poll16;
 8003624:	68fb      	ldr	r3, [r7, #12]
 8003626:	b29b      	uxth	r3, r3
}
 8003628:	4618      	mov	r0, r3
 800362a:	3710      	adds	r7, #16
 800362c:	46bd      	mov	sp, r7
 800362e:	bd80      	pop	{r7, pc}
 8003630:	20000009 	.word	0x20000009
 8003634:	20000258 	.word	0x20000258

08003638 <Touch_GetXYtouch>:
 * @brief			polls touch screen and returning its XY screen position
 * 					that's regardless touch recording flag (interrupt received)
 * @return	x,y		in case isTouch=1 contain touch coordinates
 * 			isTouch is 1 if detected a touch, otherwise 0;
 *********************************************************************************/
void Touch_GetXYtouch(uint16_t *x, uint16_t *y, uint8_t *isTouch){
 8003638:	b580      	push	{r7, lr}
 800363a:	b08a      	sub	sp, #40	; 0x28
 800363c:	af00      	add	r7, sp, #0
 800363e:	60f8      	str	r0, [r7, #12]
 8003640:	60b9      	str	r1, [r7, #8]
 8003642:	607a      	str	r2, [r7, #4]

const uint8_t pollingLevel=4;
 8003644:	2304      	movs	r3, #4
 8003646:	77fb      	strb	r3, [r7, #31]


// get the average value (over "1<<pollingLevel" attempts of X, Y and Z axes readings)

	// reading Z
	touch=0;
 8003648:	2300      	movs	r3, #0
 800364a:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 800364c:	2300      	movs	r3, #0
 800364e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003652:	e00c      	b.n	800366e <Touch_GetXYtouch+0x36>
		touch += Touch_PollAxis(Z_AXIS);
 8003654:	20b0      	movs	r0, #176	; 0xb0
 8003656:	f7ff ffb3 	bl	80035c0 <Touch_PollAxis>
 800365a:	4603      	mov	r3, r0
 800365c:	461a      	mov	r2, r3
 800365e:	6a3b      	ldr	r3, [r7, #32]
 8003660:	4413      	add	r3, r2
 8003662:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8003664:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003668:	3301      	adds	r3, #1
 800366a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800366e:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 8003672:	7ffb      	ldrb	r3, [r7, #31]
 8003674:	2101      	movs	r1, #1
 8003676:	fa01 f303 	lsl.w	r3, r1, r3
 800367a:	429a      	cmp	r2, r3
 800367c:	dbea      	blt.n	8003654 <Touch_GetXYtouch+0x1c>
	touch >>= pollingLevel;  //get the average value
 800367e:	7ffb      	ldrb	r3, [r7, #31]
 8003680:	6a3a      	ldr	r2, [r7, #32]
 8003682:	fa22 f303 	lsr.w	r3, r2, r3
 8003686:	623b      	str	r3, [r7, #32]
	if (touch<=Z_THRESHOLD) {
 8003688:	6a3b      	ldr	r3, [r7, #32]
 800368a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800368e:	d806      	bhi.n	800369e <Touch_GetXYtouch+0x66>
		*isTouch=0;
 8003690:	687b      	ldr	r3, [r7, #4]
 8003692:	2200      	movs	r2, #0
 8003694:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 8003696:	2028      	movs	r0, #40	; 0x28
 8003698:	f000 fec3 	bl	8004422 <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 800369c:	e0b2      	b.n	8003804 <Touch_GetXYtouch+0x1cc>
	}

	// reading X
	touch=0;
 800369e:	2300      	movs	r3, #0
 80036a0:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80036a2:	2300      	movs	r3, #0
 80036a4:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80036a8:	e00c      	b.n	80036c4 <Touch_GetXYtouch+0x8c>
		touch += Touch_PollAxis(X_AXIS);
 80036aa:	20d0      	movs	r0, #208	; 0xd0
 80036ac:	f7ff ff88 	bl	80035c0 <Touch_PollAxis>
 80036b0:	4603      	mov	r3, r0
 80036b2:	461a      	mov	r2, r3
 80036b4:	6a3b      	ldr	r3, [r7, #32]
 80036b6:	4413      	add	r3, r2
 80036b8:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80036ba:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80036be:	3301      	adds	r3, #1
 80036c0:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80036c4:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 80036c8:	7ffb      	ldrb	r3, [r7, #31]
 80036ca:	2101      	movs	r1, #1
 80036cc:	fa01 f303 	lsl.w	r3, r1, r3
 80036d0:	429a      	cmp	r2, r3
 80036d2:	dbea      	blt.n	80036aa <Touch_GetXYtouch+0x72>
	touch >>= pollingLevel;  //get the average value
 80036d4:	7ffb      	ldrb	r3, [r7, #31]
 80036d6:	6a3a      	ldr	r2, [r7, #32]
 80036d8:	fa22 f303 	lsr.w	r3, r2, r3
 80036dc:	623b      	str	r3, [r7, #32]
	if (touch<=X_THRESHOLD) {
 80036de:	6a3b      	ldr	r3, [r7, #32]
 80036e0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80036e4:	d806      	bhi.n	80036f4 <Touch_GetXYtouch+0xbc>
		*isTouch=0;
 80036e6:	687b      	ldr	r3, [r7, #4]
 80036e8:	2200      	movs	r2, #0
 80036ea:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 80036ec:	2028      	movs	r0, #40	; 0x28
 80036ee:	f000 fe98 	bl	8004422 <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 80036f2:	e087      	b.n	8003804 <Touch_GetXYtouch+0x1cc>
	}
	touchx=(AX*touch+BX);
 80036f4:	6a3b      	ldr	r3, [r7, #32]
 80036f6:	ee07 3a90 	vmov	s15, r3
 80036fa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80036fe:	ed9f 7a43 	vldr	s14, [pc, #268]	; 800380c <Touch_GetXYtouch+0x1d4>
 8003702:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003706:	ed9f 7a42 	vldr	s14, [pc, #264]	; 8003810 <Touch_GetXYtouch+0x1d8>
 800370a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800370e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003712:	ee17 3a90 	vmov	r3, s15
 8003716:	61bb      	str	r3, [r7, #24]

	// reading Y - there is no a threshold for Y
	touch=0;
 8003718:	2300      	movs	r3, #0
 800371a:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 800371c:	2300      	movs	r3, #0
 800371e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003722:	e00c      	b.n	800373e <Touch_GetXYtouch+0x106>
		touch += Touch_PollAxis(Y_AXIS);
 8003724:	2090      	movs	r0, #144	; 0x90
 8003726:	f7ff ff4b 	bl	80035c0 <Touch_PollAxis>
 800372a:	4603      	mov	r3, r0
 800372c:	461a      	mov	r2, r3
 800372e:	6a3b      	ldr	r3, [r7, #32]
 8003730:	4413      	add	r3, r2
 8003732:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8003734:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003738:	3301      	adds	r3, #1
 800373a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800373e:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 8003742:	7ffb      	ldrb	r3, [r7, #31]
 8003744:	2101      	movs	r1, #1
 8003746:	fa01 f303 	lsl.w	r3, r1, r3
 800374a:	429a      	cmp	r2, r3
 800374c:	dbea      	blt.n	8003724 <Touch_GetXYtouch+0xec>
	touch >>= pollingLevel; //get the average value
 800374e:	7ffb      	ldrb	r3, [r7, #31]
 8003750:	6a3a      	ldr	r2, [r7, #32]
 8003752:	fa22 f303 	lsr.w	r3, r2, r3
 8003756:	623b      	str	r3, [r7, #32]

	touchy=(AY*touch+BY);
 8003758:	6a3b      	ldr	r3, [r7, #32]
 800375a:	ee07 3a90 	vmov	s15, r3
 800375e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003762:	ed9f 7a2c 	vldr	s14, [pc, #176]	; 8003814 <Touch_GetXYtouch+0x1dc>
 8003766:	ee67 7a87 	vmul.f32	s15, s15, s14
 800376a:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8003818 <Touch_GetXYtouch+0x1e0>
 800376e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003772:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003776:	ee17 3a90 	vmov	r3, s15
 800377a:	617b      	str	r3, [r7, #20]


//having X and Y axis average values
// calculating coordinates as per screen orientation
	switch (current_orientation)
 800377c:	4b27      	ldr	r3, [pc, #156]	; (800381c <Touch_GetXYtouch+0x1e4>)
 800377e:	781b      	ldrb	r3, [r3, #0]
 8003780:	2b03      	cmp	r3, #3
 8003782:	d83b      	bhi.n	80037fc <Touch_GetXYtouch+0x1c4>
 8003784:	a201      	add	r2, pc, #4	; (adr r2, 800378c <Touch_GetXYtouch+0x154>)
 8003786:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800378a:	bf00      	nop
 800378c:	0800379d 	.word	0x0800379d
 8003790:	080037af 	.word	0x080037af
 8003794:	080037c7 	.word	0x080037c7
 8003798:	080037e5 	.word	0x080037e5
	{
	case TOUCH0:
		*x=touchx;
 800379c:	69bb      	ldr	r3, [r7, #24]
 800379e:	b29a      	uxth	r2, r3
 80037a0:	68fb      	ldr	r3, [r7, #12]
 80037a2:	801a      	strh	r2, [r3, #0]
		*y=touchy;
 80037a4:	697b      	ldr	r3, [r7, #20]
 80037a6:	b29a      	uxth	r2, r3
 80037a8:	68bb      	ldr	r3, [r7, #8]
 80037aa:	801a      	strh	r2, [r3, #0]
		break;
 80037ac:	e026      	b.n	80037fc <Touch_GetXYtouch+0x1c4>
	case TOUCH90:
		*x=touchy;
 80037ae:	697b      	ldr	r3, [r7, #20]
 80037b0:	b29a      	uxth	r2, r3
 80037b2:	68fb      	ldr	r3, [r7, #12]
 80037b4:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_WIDTH-touchx);
 80037b6:	69bb      	ldr	r3, [r7, #24]
 80037b8:	b29b      	uxth	r3, r3
 80037ba:	f1c3 03f0 	rsb	r3, r3, #240	; 0xf0
 80037be:	b29a      	uxth	r2, r3
 80037c0:	68bb      	ldr	r3, [r7, #8]
 80037c2:	801a      	strh	r2, [r3, #0]
		break;
 80037c4:	e01a      	b.n	80037fc <Touch_GetXYtouch+0x1c4>
	case TOUCH180:
		*x=(TOUCH_0_WIDTH-touchx);
 80037c6:	69bb      	ldr	r3, [r7, #24]
 80037c8:	b29b      	uxth	r3, r3
 80037ca:	f1c3 03f0 	rsb	r3, r3, #240	; 0xf0
 80037ce:	b29a      	uxth	r2, r3
 80037d0:	68fb      	ldr	r3, [r7, #12]
 80037d2:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_HEIGHT - touchy);
 80037d4:	697b      	ldr	r3, [r7, #20]
 80037d6:	b29b      	uxth	r3, r3
 80037d8:	f5c3 73a0 	rsb	r3, r3, #320	; 0x140
 80037dc:	b29a      	uxth	r2, r3
 80037de:	68bb      	ldr	r3, [r7, #8]
 80037e0:	801a      	strh	r2, [r3, #0]
		break;
 80037e2:	e00b      	b.n	80037fc <Touch_GetXYtouch+0x1c4>
	case TOUCH270:
		*x=(TOUCH_0_HEIGHT- touchy);
 80037e4:	697b      	ldr	r3, [r7, #20]
 80037e6:	b29b      	uxth	r3, r3
 80037e8:	f5c3 73a0 	rsb	r3, r3, #320	; 0x140
 80037ec:	b29a      	uxth	r2, r3
 80037ee:	68fb      	ldr	r3, [r7, #12]
 80037f0:	801a      	strh	r2, [r3, #0]
		*y=touchx;
 80037f2:	69bb      	ldr	r3, [r7, #24]
 80037f4:	b29a      	uxth	r2, r3
 80037f6:	68bb      	ldr	r3, [r7, #8]
 80037f8:	801a      	strh	r2, [r3, #0]
		break;
 80037fa:	bf00      	nop
	}

// set flag indicating there was a touch
	*isTouch=1;
 80037fc:	687b      	ldr	r3, [r7, #4]
 80037fe:	2201      	movs	r2, #1
 8003800:	701a      	strb	r2, [r3, #0]
	return;
 8003802:	bf00      	nop
}
 8003804:	3728      	adds	r7, #40	; 0x28
 8003806:	46bd      	mov	sp, r7
 8003808:	bd80      	pop	{r7, pc}
 800380a:	bf00      	nop
 800380c:	3c033c60 	.word	0x3c033c60
 8003810:	413ff7cf 	.word	0x413ff7cf
 8003814:	3c375643 	.word	0x3c375643
 8003818:	421c3a5e 	.word	0x421c3a5e
 800381c:	20000440 	.word	0x20000440

08003820 <Touch_GotATouch>:
 * 						(use "2" in main loop activating touchgfxSignalVSync()
 * @returns		1	if recorded a touch
 * 				0	if no touch recorded
 ***********************************************************/

uint8_t Touch_GotATouch(uint8_t reset) {
 8003820:	b580      	push	{r7, lr}
 8003822:	b084      	sub	sp, #16
 8003824:	af00      	add	r7, sp, #0
 8003826:	4603      	mov	r3, r0
 8003828:	71fb      	strb	r3, [r7, #7]
static uint32_t touchTime=0;
uint8_t result = Touch_PenDown;
 800382a:	4b10      	ldr	r3, [pc, #64]	; (800386c <Touch_GotATouch+0x4c>)
 800382c:	781b      	ldrb	r3, [r3, #0]
 800382e:	73fb      	strb	r3, [r7, #15]

//	if (result)
//		result=Touch_PollTouch();

	if (reset==2){
 8003830:	79fb      	ldrb	r3, [r7, #7]
 8003832:	2b02      	cmp	r3, #2
 8003834:	d10f      	bne.n	8003856 <Touch_GotATouch+0x36>
		if ((HAL_GetTick()-touchTime) >= TOUCHGFX_TIMING)
 8003836:	f000 f92f 	bl	8003a98 <HAL_GetTick>
 800383a:	4602      	mov	r2, r0
 800383c:	4b0c      	ldr	r3, [pc, #48]	; (8003870 <Touch_GotATouch+0x50>)
 800383e:	681b      	ldr	r3, [r3, #0]
 8003840:	1ad3      	subs	r3, r2, r3
 8003842:	2b3b      	cmp	r3, #59	; 0x3b
 8003844:	d905      	bls.n	8003852 <Touch_GotATouch+0x32>
			touchTime=HAL_GetTick();
 8003846:	f000 f927 	bl	8003a98 <HAL_GetTick>
 800384a:	4603      	mov	r3, r0
 800384c:	4a08      	ldr	r2, [pc, #32]	; (8003870 <Touch_GotATouch+0x50>)
 800384e:	6013      	str	r3, [r2, #0]
 8003850:	e001      	b.n	8003856 <Touch_GotATouch+0x36>
		else
			result=0;
 8003852:	2300      	movs	r3, #0
 8003854:	73fb      	strb	r3, [r7, #15]
	}
	if (reset==1)
 8003856:	79fb      	ldrb	r3, [r7, #7]
 8003858:	2b01      	cmp	r3, #1
 800385a:	d102      	bne.n	8003862 <Touch_GotATouch+0x42>
		Touch_PenDown=0;
 800385c:	4b03      	ldr	r3, [pc, #12]	; (800386c <Touch_GotATouch+0x4c>)
 800385e:	2200      	movs	r2, #0
 8003860:	701a      	strb	r2, [r3, #0]
	return result;
 8003862:	7bfb      	ldrb	r3, [r7, #15]
}
 8003864:	4618      	mov	r0, r3
 8003866:	3710      	adds	r7, #16
 8003868:	46bd      	mov	sp, r7
 800386a:	bd80      	pop	{r7, pc}
 800386c:	20000450 	.word	0x20000450
 8003870:	20000454 	.word	0x20000454

08003874 <Touch_TouchGFXSampleTouch>:
 *			then, into STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
 *			change "return false;"
 *			into:  "return ((bool) Touch_TouchGFXSampleTouch(&x, &y));"
 * 			that's enough for touch integration in TouchGFX
***********************************************************/
uint8_t Touch_TouchGFXSampleTouch(int32_t *x, int32_t *y){
 8003874:	b580      	push	{r7, lr}
 8003876:	b084      	sub	sp, #16
 8003878:	af00      	add	r7, sp, #0
 800387a:	6078      	str	r0, [r7, #4]
 800387c:	6039      	str	r1, [r7, #0]
	//	sTouchData result;
	uint8_t isTouch=0;				// preset to no touch
 800387e:	2300      	movs	r3, #0
 8003880:	73fb      	strb	r3, [r7, #15]
	uint16_t xx=0,yy=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX ones (int32_t)
 8003882:	2300      	movs	r3, #0
 8003884:	81bb      	strh	r3, [r7, #12]
 8003886:	2300      	movs	r3, #0
 8003888:	817b      	strh	r3, [r7, #10]
	static uint8_t flipTouch=0;		// switches 0/1, on every function call, until sensor is touched allowing to return key repeat
	static uint32_t touchTime=1; 	// tick value get on the first touch. 0 means display untouched.
	static uint16_t avgXX=0, avgYY=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX one (int32_t)
	static uint8_t repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;

	if (Touch_GotATouch(0)){				// polls interrupt flag not resetting it
 800388a:	2000      	movs	r0, #0
 800388c:	f7ff ffc8 	bl	8003820 <Touch_GotATouch>
 8003890:	4603      	mov	r3, r0
 8003892:	2b00      	cmp	r3, #0
 8003894:	d060      	beq.n	8003958 <Touch_TouchGFXSampleTouch+0xe4>
		Touch_GetXYtouch(&xx,&yy,&isTouch);	// get touch sensor position
 8003896:	f107 020f 	add.w	r2, r7, #15
 800389a:	f107 010a 	add.w	r1, r7, #10
 800389e:	f107 030c 	add.w	r3, r7, #12
 80038a2:	4618      	mov	r0, r3
 80038a4:	f7ff fec8 	bl	8003638 <Touch_GetXYtouch>
		if (!isTouch){						// received a "no touch"
 80038a8:	7bfb      	ldrb	r3, [r7, #15]
 80038aa:	2b00      	cmp	r3, #0
 80038ac:	d126      	bne.n	80038fc <Touch_TouchGFXSampleTouch+0x88>
			if (touchTime != 0){			// if previously touched
 80038ae:	4b2d      	ldr	r3, [pc, #180]	; (8003964 <Touch_TouchGFXSampleTouch+0xf0>)
 80038b0:	681b      	ldr	r3, [r3, #0]
 80038b2:	2b00      	cmp	r3, #0
 80038b4:	d050      	beq.n	8003958 <Touch_TouchGFXSampleTouch+0xe4>
				if ((repetition--)>TOUCHGFX_REPEAT_NO+1){		// n-repetition of last touch sending
 80038b6:	4b2c      	ldr	r3, [pc, #176]	; (8003968 <Touch_TouchGFXSampleTouch+0xf4>)
 80038b8:	781b      	ldrb	r3, [r3, #0]
 80038ba:	1e5a      	subs	r2, r3, #1
 80038bc:	b2d1      	uxtb	r1, r2
 80038be:	4a2a      	ldr	r2, [pc, #168]	; (8003968 <Touch_TouchGFXSampleTouch+0xf4>)
 80038c0:	7011      	strb	r1, [r2, #0]
 80038c2:	2b01      	cmp	r3, #1
 80038c4:	d90c      	bls.n	80038e0 <Touch_TouchGFXSampleTouch+0x6c>
					*x = avgXX;
 80038c6:	4b29      	ldr	r3, [pc, #164]	; (800396c <Touch_TouchGFXSampleTouch+0xf8>)
 80038c8:	881b      	ldrh	r3, [r3, #0]
 80038ca:	461a      	mov	r2, r3
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	601a      	str	r2, [r3, #0]
					*y = avgYY;
 80038d0:	4b27      	ldr	r3, [pc, #156]	; (8003970 <Touch_TouchGFXSampleTouch+0xfc>)
 80038d2:	881b      	ldrh	r3, [r3, #0]
 80038d4:	461a      	mov	r2, r3
 80038d6:	683b      	ldr	r3, [r7, #0]
 80038d8:	601a      	str	r2, [r3, #0]
					isTouch=1;
 80038da:	2301      	movs	r3, #1
 80038dc:	73fb      	strb	r3, [r7, #15]
 80038de:	e03b      	b.n	8003958 <Touch_TouchGFXSampleTouch+0xe4>
				} else if ((repetition==255)) {  // that's -1
 80038e0:	4b21      	ldr	r3, [pc, #132]	; (8003968 <Touch_TouchGFXSampleTouch+0xf4>)
 80038e2:	781b      	ldrb	r3, [r3, #0]
 80038e4:	2bff      	cmp	r3, #255	; 0xff
 80038e6:	d137      	bne.n	8003958 <Touch_TouchGFXSampleTouch+0xe4>
					touchTime=0;					// set display as untouched
 80038e8:	4b1e      	ldr	r3, [pc, #120]	; (8003964 <Touch_TouchGFXSampleTouch+0xf0>)
 80038ea:	2200      	movs	r2, #0
 80038ec:	601a      	str	r2, [r3, #0]
					Touch_GotATouch(1);				// reset interrupt touch flag
 80038ee:	2001      	movs	r0, #1
 80038f0:	f7ff ff96 	bl	8003820 <Touch_GotATouch>
					repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;  //reset repetition counter
 80038f4:	4b1c      	ldr	r3, [pc, #112]	; (8003968 <Touch_TouchGFXSampleTouch+0xf4>)
 80038f6:	2200      	movs	r2, #0
 80038f8:	701a      	strb	r2, [r3, #0]
 80038fa:	e02d      	b.n	8003958 <Touch_TouchGFXSampleTouch+0xe4>
				}
			}
		} else {					// display touched

			if (touchTime==0) {				// if previously untouched
 80038fc:	4b19      	ldr	r3, [pc, #100]	; (8003964 <Touch_TouchGFXSampleTouch+0xf0>)
 80038fe:	681b      	ldr	r3, [r3, #0]
 8003900:	2b00      	cmp	r3, #0
 8003902:	d10e      	bne.n	8003922 <Touch_TouchGFXSampleTouch+0xae>
				avgXX =(xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 8003904:	89ba      	ldrh	r2, [r7, #12]
 8003906:	4b19      	ldr	r3, [pc, #100]	; (800396c <Touch_TouchGFXSampleTouch+0xf8>)
 8003908:	801a      	strh	r2, [r3, #0]
				avgYY =(yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 800390a:	897a      	ldrh	r2, [r7, #10]
 800390c:	4b18      	ldr	r3, [pc, #96]	; (8003970 <Touch_TouchGFXSampleTouch+0xfc>)
 800390e:	801a      	strh	r2, [r3, #0]
				touchTime=HAL_GetTick();	// store tick value at touch time
 8003910:	f000 f8c2 	bl	8003a98 <HAL_GetTick>
 8003914:	4603      	mov	r3, r0
 8003916:	4a13      	ldr	r2, [pc, #76]	; (8003964 <Touch_TouchGFXSampleTouch+0xf0>)
 8003918:	6013      	str	r3, [r2, #0]
				flipTouch=1;				// set switch to send touch now
 800391a:	4b16      	ldr	r3, [pc, #88]	; (8003974 <Touch_TouchGFXSampleTouch+0x100>)
 800391c:	2201      	movs	r2, #1
 800391e:	701a      	strb	r2, [r3, #0]
 8003920:	e001      	b.n	8003926 <Touch_TouchGFXSampleTouch+0xb2>
			} else {						// not a new touch
				if (((HAL_GetTick()-touchTime)>DELAY_TO_KEY_REPEAT) && (DELAY_TO_KEY_REPEAT > 0)){	// if timeout to key repeat is over (0 means no key repeat)
 8003922:	f000 f8b9 	bl	8003a98 <HAL_GetTick>
					flipTouch=!flipTouch;	// alternate every time function is called
				} else
					if (DELAY_TO_KEY_REPEAT == 0)
						flipTouch=0;		// (DELAY_TO_KEY_REPEAT == 0) means a single pulse, "-1" keep pulse as long as touch
			}
			if (flipTouch) { 	// return position only if the switching flag is on
 8003926:	4b13      	ldr	r3, [pc, #76]	; (8003974 <Touch_TouchGFXSampleTouch+0x100>)
 8003928:	781b      	ldrb	r3, [r3, #0]
 800392a:	2b00      	cmp	r3, #0
 800392c:	d012      	beq.n	8003954 <Touch_TouchGFXSampleTouch+0xe0>
				*x=(((avgXX*(TOUCHGFX_MOVAVG-1)+((xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 800392e:	89bb      	ldrh	r3, [r7, #12]
 8003930:	461a      	mov	r2, r3
 8003932:	687b      	ldr	r3, [r7, #4]
 8003934:	601a      	str	r2, [r3, #0]
				*y=(((avgYY*(TOUCHGFX_MOVAVG-1)+((yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 8003936:	897b      	ldrh	r3, [r7, #10]
 8003938:	461a      	mov	r2, r3
 800393a:	683b      	ldr	r3, [r7, #0]
 800393c:	601a      	str	r2, [r3, #0]
				avgXX = *x;
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	681b      	ldr	r3, [r3, #0]
 8003942:	b29a      	uxth	r2, r3
 8003944:	4b09      	ldr	r3, [pc, #36]	; (800396c <Touch_TouchGFXSampleTouch+0xf8>)
 8003946:	801a      	strh	r2, [r3, #0]
				avgYY = *y;
 8003948:	683b      	ldr	r3, [r7, #0]
 800394a:	681b      	ldr	r3, [r3, #0]
 800394c:	b29a      	uxth	r2, r3
 800394e:	4b08      	ldr	r3, [pc, #32]	; (8003970 <Touch_TouchGFXSampleTouch+0xfc>)
 8003950:	801a      	strh	r2, [r3, #0]
 8003952:	e001      	b.n	8003958 <Touch_TouchGFXSampleTouch+0xe4>
			} else {			// otherwise return "no touch" from display
				isTouch = 0;
 8003954:	2300      	movs	r3, #0
 8003956:	73fb      	strb	r3, [r7, #15]
			}
		}
	}
	return isTouch;
 8003958:	7bfb      	ldrb	r3, [r7, #15]
}
 800395a:	4618      	mov	r0, r3
 800395c:	3710      	adds	r7, #16
 800395e:	46bd      	mov	sp, r7
 8003960:	bd80      	pop	{r7, pc}
 8003962:	bf00      	nop
 8003964:	2000000c 	.word	0x2000000c
 8003968:	20000458 	.word	0x20000458
 800396c:	2000045a 	.word	0x2000045a
 8003970:	2000045c 	.word	0x2000045c
 8003974:	2000045e 	.word	0x2000045e

08003978 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 8003978:	f8df d034 	ldr.w	sp, [pc, #52]	; 80039b0 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 800397c:	480d      	ldr	r0, [pc, #52]	; (80039b4 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 800397e:	490e      	ldr	r1, [pc, #56]	; (80039b8 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8003980:	4a0e      	ldr	r2, [pc, #56]	; (80039bc <LoopFillZerobss+0x1e>)
  movs r3, #0
 8003982:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8003984:	e002      	b.n	800398c <LoopCopyDataInit>

08003986 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8003986:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8003988:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800398a:	3304      	adds	r3, #4

0800398c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800398c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800398e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8003990:	d3f9      	bcc.n	8003986 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8003992:	4a0b      	ldr	r2, [pc, #44]	; (80039c0 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8003994:	4c0b      	ldr	r4, [pc, #44]	; (80039c4 <LoopFillZerobss+0x26>)
  movs r3, #0
 8003996:	2300      	movs	r3, #0
  b LoopFillZerobss
 8003998:	e001      	b.n	800399e <LoopFillZerobss>

0800399a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800399a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800399c:	3204      	adds	r2, #4

0800399e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800399e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80039a0:	d3fb      	bcc.n	800399a <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 80039a2:	f7ff fa85 	bl	8002eb0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80039a6:	f027 fed1 	bl	802b74c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80039aa:	f7fe fa7d 	bl	8001ea8 <main>
  bx  lr    
 80039ae:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 80039b0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80039b4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80039b8:	200000fc 	.word	0x200000fc
  ldr r2, =_sidata
 80039bc:	0804cd40 	.word	0x0804cd40
  ldr r2, =_sbss
 80039c0:	200000fc 	.word	0x200000fc
  ldr r4, =_ebss
 80039c4:	20002f60 	.word	0x20002f60

080039c8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80039c8:	e7fe      	b.n	80039c8 <ADC_IRQHandler>
	...

080039cc <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80039cc:	b580      	push	{r7, lr}
 80039ce:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80039d0:	4b0e      	ldr	r3, [pc, #56]	; (8003a0c <HAL_Init+0x40>)
 80039d2:	681b      	ldr	r3, [r3, #0]
 80039d4:	4a0d      	ldr	r2, [pc, #52]	; (8003a0c <HAL_Init+0x40>)
 80039d6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80039da:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80039dc:	4b0b      	ldr	r3, [pc, #44]	; (8003a0c <HAL_Init+0x40>)
 80039de:	681b      	ldr	r3, [r3, #0]
 80039e0:	4a0a      	ldr	r2, [pc, #40]	; (8003a0c <HAL_Init+0x40>)
 80039e2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80039e6:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80039e8:	4b08      	ldr	r3, [pc, #32]	; (8003a0c <HAL_Init+0x40>)
 80039ea:	681b      	ldr	r3, [r3, #0]
 80039ec:	4a07      	ldr	r2, [pc, #28]	; (8003a0c <HAL_Init+0x40>)
 80039ee:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80039f2:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80039f4:	2003      	movs	r0, #3
 80039f6:	f000 fcc5 	bl	8004384 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80039fa:	200f      	movs	r0, #15
 80039fc:	f000 f808 	bl	8003a10 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003a00:	f7fe fed4 	bl	80027ac <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8003a04:	2300      	movs	r3, #0
}
 8003a06:	4618      	mov	r0, r3
 8003a08:	bd80      	pop	{r7, pc}
 8003a0a:	bf00      	nop
 8003a0c:	40023c00 	.word	0x40023c00

08003a10 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8003a10:	b580      	push	{r7, lr}
 8003a12:	b082      	sub	sp, #8
 8003a14:	af00      	add	r7, sp, #0
 8003a16:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8003a18:	4b12      	ldr	r3, [pc, #72]	; (8003a64 <HAL_InitTick+0x54>)
 8003a1a:	681a      	ldr	r2, [r3, #0]
 8003a1c:	4b12      	ldr	r3, [pc, #72]	; (8003a68 <HAL_InitTick+0x58>)
 8003a1e:	781b      	ldrb	r3, [r3, #0]
 8003a20:	4619      	mov	r1, r3
 8003a22:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003a26:	fbb3 f3f1 	udiv	r3, r3, r1
 8003a2a:	fbb2 f3f3 	udiv	r3, r2, r3
 8003a2e:	4618      	mov	r0, r3
 8003a30:	f000 fceb 	bl	800440a <HAL_SYSTICK_Config>
 8003a34:	4603      	mov	r3, r0
 8003a36:	2b00      	cmp	r3, #0
 8003a38:	d001      	beq.n	8003a3e <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8003a3a:	2301      	movs	r3, #1
 8003a3c:	e00e      	b.n	8003a5c <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	2b0f      	cmp	r3, #15
 8003a42:	d80a      	bhi.n	8003a5a <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8003a44:	2200      	movs	r2, #0
 8003a46:	6879      	ldr	r1, [r7, #4]
 8003a48:	f04f 30ff 	mov.w	r0, #4294967295
 8003a4c:	f000 fca5 	bl	800439a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8003a50:	4a06      	ldr	r2, [pc, #24]	; (8003a6c <HAL_InitTick+0x5c>)
 8003a52:	687b      	ldr	r3, [r7, #4]
 8003a54:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8003a56:	2300      	movs	r3, #0
 8003a58:	e000      	b.n	8003a5c <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8003a5a:	2301      	movs	r3, #1
}
 8003a5c:	4618      	mov	r0, r3
 8003a5e:	3708      	adds	r7, #8
 8003a60:	46bd      	mov	sp, r7
 8003a62:	bd80      	pop	{r7, pc}
 8003a64:	20000004 	.word	0x20000004
 8003a68:	20000014 	.word	0x20000014
 8003a6c:	20000010 	.word	0x20000010

08003a70 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8003a70:	b480      	push	{r7}
 8003a72:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8003a74:	4b06      	ldr	r3, [pc, #24]	; (8003a90 <HAL_IncTick+0x20>)
 8003a76:	781b      	ldrb	r3, [r3, #0]
 8003a78:	461a      	mov	r2, r3
 8003a7a:	4b06      	ldr	r3, [pc, #24]	; (8003a94 <HAL_IncTick+0x24>)
 8003a7c:	681b      	ldr	r3, [r3, #0]
 8003a7e:	4413      	add	r3, r2
 8003a80:	4a04      	ldr	r2, [pc, #16]	; (8003a94 <HAL_IncTick+0x24>)
 8003a82:	6013      	str	r3, [r2, #0]
}
 8003a84:	bf00      	nop
 8003a86:	46bd      	mov	sp, r7
 8003a88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a8c:	4770      	bx	lr
 8003a8e:	bf00      	nop
 8003a90:	20000014 	.word	0x20000014
 8003a94:	20000460 	.word	0x20000460

08003a98 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8003a98:	b480      	push	{r7}
 8003a9a:	af00      	add	r7, sp, #0
  return uwTick;
 8003a9c:	4b03      	ldr	r3, [pc, #12]	; (8003aac <HAL_GetTick+0x14>)
 8003a9e:	681b      	ldr	r3, [r3, #0]
}
 8003aa0:	4618      	mov	r0, r3
 8003aa2:	46bd      	mov	sp, r7
 8003aa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003aa8:	4770      	bx	lr
 8003aaa:	bf00      	nop
 8003aac:	20000460 	.word	0x20000460

08003ab0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003ab0:	b580      	push	{r7, lr}
 8003ab2:	b084      	sub	sp, #16
 8003ab4:	af00      	add	r7, sp, #0
 8003ab6:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8003ab8:	f7ff ffee 	bl	8003a98 <HAL_GetTick>
 8003abc:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8003abe:	687b      	ldr	r3, [r7, #4]
 8003ac0:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003ac2:	68fb      	ldr	r3, [r7, #12]
 8003ac4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003ac8:	d005      	beq.n	8003ad6 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8003aca:	4b0a      	ldr	r3, [pc, #40]	; (8003af4 <HAL_Delay+0x44>)
 8003acc:	781b      	ldrb	r3, [r3, #0]
 8003ace:	461a      	mov	r2, r3
 8003ad0:	68fb      	ldr	r3, [r7, #12]
 8003ad2:	4413      	add	r3, r2
 8003ad4:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8003ad6:	bf00      	nop
 8003ad8:	f7ff ffde 	bl	8003a98 <HAL_GetTick>
 8003adc:	4602      	mov	r2, r0
 8003ade:	68bb      	ldr	r3, [r7, #8]
 8003ae0:	1ad3      	subs	r3, r2, r3
 8003ae2:	68fa      	ldr	r2, [r7, #12]
 8003ae4:	429a      	cmp	r2, r3
 8003ae6:	d8f7      	bhi.n	8003ad8 <HAL_Delay+0x28>
  {
  }
}
 8003ae8:	bf00      	nop
 8003aea:	bf00      	nop
 8003aec:	3710      	adds	r7, #16
 8003aee:	46bd      	mov	sp, r7
 8003af0:	bd80      	pop	{r7, pc}
 8003af2:	bf00      	nop
 8003af4:	20000014 	.word	0x20000014

08003af8 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8003af8:	b580      	push	{r7, lr}
 8003afa:	b084      	sub	sp, #16
 8003afc:	af00      	add	r7, sp, #0
 8003afe:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8003b00:	2300      	movs	r3, #0
 8003b02:	73fb      	strb	r3, [r7, #15]
  
  /* Check ADC handle */
  if(hadc == NULL)
 8003b04:	687b      	ldr	r3, [r7, #4]
 8003b06:	2b00      	cmp	r3, #0
 8003b08:	d101      	bne.n	8003b0e <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 8003b0a:	2301      	movs	r3, #1
 8003b0c:	e033      	b.n	8003b76 <HAL_ADC_Init+0x7e>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 8003b0e:	687b      	ldr	r3, [r7, #4]
 8003b10:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b12:	2b00      	cmp	r3, #0
 8003b14:	d109      	bne.n	8003b2a <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8003b16:	6878      	ldr	r0, [r7, #4]
 8003b18:	f7fe fe70 	bl	80027fc <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8003b1c:	687b      	ldr	r3, [r7, #4]
 8003b1e:	2200      	movs	r2, #0
 8003b20:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8003b22:	687b      	ldr	r3, [r7, #4]
 8003b24:	2200      	movs	r2, #0
 8003b26:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8003b2a:	687b      	ldr	r3, [r7, #4]
 8003b2c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b2e:	f003 0310 	and.w	r3, r3, #16
 8003b32:	2b00      	cmp	r3, #0
 8003b34:	d118      	bne.n	8003b68 <HAL_ADC_Init+0x70>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b3a:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8003b3e:	f023 0302 	bic.w	r3, r3, #2
 8003b42:	f043 0202 	orr.w	r2, r3, #2
 8003b46:	687b      	ldr	r3, [r7, #4]
 8003b48:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);
    
    /* Set ADC parameters */
    ADC_Init(hadc);
 8003b4a:	6878      	ldr	r0, [r7, #4]
 8003b4c:	f000 fa0c 	bl	8003f68 <ADC_Init>
    
    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 8003b50:	687b      	ldr	r3, [r7, #4]
 8003b52:	2200      	movs	r2, #0
 8003b54:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8003b56:	687b      	ldr	r3, [r7, #4]
 8003b58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b5a:	f023 0303 	bic.w	r3, r3, #3
 8003b5e:	f043 0201 	orr.w	r2, r3, #1
 8003b62:	687b      	ldr	r3, [r7, #4]
 8003b64:	641a      	str	r2, [r3, #64]	; 0x40
 8003b66:	e001      	b.n	8003b6c <HAL_ADC_Init+0x74>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 8003b68:	2301      	movs	r3, #1
 8003b6a:	73fb      	strb	r3, [r7, #15]
  }
  
  /* Release Lock */
  __HAL_UNLOCK(hadc);
 8003b6c:	687b      	ldr	r3, [r7, #4]
 8003b6e:	2200      	movs	r2, #0
 8003b70:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Return function status */
  return tmp_hal_status;
 8003b74:	7bfb      	ldrb	r3, [r7, #15]
}
 8003b76:	4618      	mov	r0, r3
 8003b78:	3710      	adds	r7, #16
 8003b7a:	46bd      	mov	sp, r7
 8003b7c:	bd80      	pop	{r7, pc}
	...

08003b80 <HAL_ADC_Start>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
{
 8003b80:	b480      	push	{r7}
 8003b82:	b085      	sub	sp, #20
 8003b84:	af00      	add	r7, sp, #0
 8003b86:	6078      	str	r0, [r7, #4]
  __IO uint32_t counter = 0U;
 8003b88:	2300      	movs	r3, #0
 8003b8a:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
  
  /* Process locked */
  __HAL_LOCK(hadc);
 8003b8c:	687b      	ldr	r3, [r7, #4]
 8003b8e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003b92:	2b01      	cmp	r3, #1
 8003b94:	d101      	bne.n	8003b9a <HAL_ADC_Start+0x1a>
 8003b96:	2302      	movs	r3, #2
 8003b98:	e097      	b.n	8003cca <HAL_ADC_Start+0x14a>
 8003b9a:	687b      	ldr	r3, [r7, #4]
 8003b9c:	2201      	movs	r2, #1
 8003b9e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during 
  Tstab time the ADC's stabilization */
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8003ba2:	687b      	ldr	r3, [r7, #4]
 8003ba4:	681b      	ldr	r3, [r3, #0]
 8003ba6:	689b      	ldr	r3, [r3, #8]
 8003ba8:	f003 0301 	and.w	r3, r3, #1
 8003bac:	2b01      	cmp	r3, #1
 8003bae:	d018      	beq.n	8003be2 <HAL_ADC_Start+0x62>
  {  
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	681b      	ldr	r3, [r3, #0]
 8003bb4:	689a      	ldr	r2, [r3, #8]
 8003bb6:	687b      	ldr	r3, [r7, #4]
 8003bb8:	681b      	ldr	r3, [r3, #0]
 8003bba:	f042 0201 	orr.w	r2, r2, #1
 8003bbe:	609a      	str	r2, [r3, #8]
    
    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8003bc0:	4b45      	ldr	r3, [pc, #276]	; (8003cd8 <HAL_ADC_Start+0x158>)
 8003bc2:	681b      	ldr	r3, [r3, #0]
 8003bc4:	4a45      	ldr	r2, [pc, #276]	; (8003cdc <HAL_ADC_Start+0x15c>)
 8003bc6:	fba2 2303 	umull	r2, r3, r2, r3
 8003bca:	0c9a      	lsrs	r2, r3, #18
 8003bcc:	4613      	mov	r3, r2
 8003bce:	005b      	lsls	r3, r3, #1
 8003bd0:	4413      	add	r3, r2
 8003bd2:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 8003bd4:	e002      	b.n	8003bdc <HAL_ADC_Start+0x5c>
    {
      counter--;
 8003bd6:	68bb      	ldr	r3, [r7, #8]
 8003bd8:	3b01      	subs	r3, #1
 8003bda:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 8003bdc:	68bb      	ldr	r3, [r7, #8]
 8003bde:	2b00      	cmp	r3, #0
 8003be0:	d1f9      	bne.n	8003bd6 <HAL_ADC_Start+0x56>
    }
  }
  
  /* Start conversion if ADC is effectively enabled */
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8003be2:	687b      	ldr	r3, [r7, #4]
 8003be4:	681b      	ldr	r3, [r3, #0]
 8003be6:	689b      	ldr	r3, [r3, #8]
 8003be8:	f003 0301 	and.w	r3, r3, #1
 8003bec:	2b01      	cmp	r3, #1
 8003bee:	d15f      	bne.n	8003cb0 <HAL_ADC_Start+0x130>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8003bf0:	687b      	ldr	r3, [r7, #4]
 8003bf2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003bf4:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8003bf8:	f023 0301 	bic.w	r3, r3, #1
 8003bfc:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8003c00:	687b      	ldr	r3, [r7, #4]
 8003c02:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);
    
    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8003c04:	687b      	ldr	r3, [r7, #4]
 8003c06:	681b      	ldr	r3, [r3, #0]
 8003c08:	685b      	ldr	r3, [r3, #4]
 8003c0a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003c0e:	2b00      	cmp	r3, #0
 8003c10:	d007      	beq.n	8003c22 <HAL_ADC_Start+0xa2>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8003c12:	687b      	ldr	r3, [r7, #4]
 8003c14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c16:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8003c1a:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8003c1e:	687b      	ldr	r3, [r7, #4]
 8003c20:	641a      	str	r2, [r3, #64]	; 0x40
    }
    
    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8003c22:	687b      	ldr	r3, [r7, #4]
 8003c24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c26:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003c2a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003c2e:	d106      	bne.n	8003c3e <HAL_ADC_Start+0xbe>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8003c30:	687b      	ldr	r3, [r7, #4]
 8003c32:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003c34:	f023 0206 	bic.w	r2, r3, #6
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	645a      	str	r2, [r3, #68]	; 0x44
 8003c3c:	e002      	b.n	8003c44 <HAL_ADC_Start+0xc4>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 8003c3e:	687b      	ldr	r3, [r7, #4]
 8003c40:	2200      	movs	r2, #0
 8003c42:	645a      	str	r2, [r3, #68]	; 0x44
    } 

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 8003c44:	687b      	ldr	r3, [r7, #4]
 8003c46:	2200      	movs	r2, #0
 8003c48:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8003c4c:	4b24      	ldr	r3, [pc, #144]	; (8003ce0 <HAL_ADC_Start+0x160>)
 8003c4e:	60fb      	str	r3, [r7, #12]

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8003c50:	687b      	ldr	r3, [r7, #4]
 8003c52:	681b      	ldr	r3, [r3, #0]
 8003c54:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8003c58:	601a      	str	r2, [r3, #0]
    
    /* Check if Multimode enabled */
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8003c5a:	68fb      	ldr	r3, [r7, #12]
 8003c5c:	685b      	ldr	r3, [r3, #4]
 8003c5e:	f003 031f 	and.w	r3, r3, #31
 8003c62:	2b00      	cmp	r3, #0
 8003c64:	d10f      	bne.n	8003c86 <HAL_ADC_Start+0x106>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	681b      	ldr	r3, [r3, #0]
 8003c6a:	689b      	ldr	r3, [r3, #8]
 8003c6c:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8003c70:	2b00      	cmp	r3, #0
 8003c72:	d129      	bne.n	8003cc8 <HAL_ADC_Start+0x148>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	681b      	ldr	r3, [r3, #0]
 8003c78:	689a      	ldr	r2, [r3, #8]
 8003c7a:	687b      	ldr	r3, [r7, #4]
 8003c7c:	681b      	ldr	r3, [r3, #0]
 8003c7e:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003c82:	609a      	str	r2, [r3, #8]
 8003c84:	e020      	b.n	8003cc8 <HAL_ADC_Start+0x148>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	681b      	ldr	r3, [r3, #0]
 8003c8a:	4a16      	ldr	r2, [pc, #88]	; (8003ce4 <HAL_ADC_Start+0x164>)
 8003c8c:	4293      	cmp	r3, r2
 8003c8e:	d11b      	bne.n	8003cc8 <HAL_ADC_Start+0x148>
 8003c90:	687b      	ldr	r3, [r7, #4]
 8003c92:	681b      	ldr	r3, [r3, #0]
 8003c94:	689b      	ldr	r3, [r3, #8]
 8003c96:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8003c9a:	2b00      	cmp	r3, #0
 8003c9c:	d114      	bne.n	8003cc8 <HAL_ADC_Start+0x148>
      {
        /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8003c9e:	687b      	ldr	r3, [r7, #4]
 8003ca0:	681b      	ldr	r3, [r3, #0]
 8003ca2:	689a      	ldr	r2, [r3, #8]
 8003ca4:	687b      	ldr	r3, [r7, #4]
 8003ca6:	681b      	ldr	r3, [r3, #0]
 8003ca8:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003cac:	609a      	str	r2, [r3, #8]
 8003cae:	e00b      	b.n	8003cc8 <HAL_ADC_Start+0x148>
    }
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8003cb0:	687b      	ldr	r3, [r7, #4]
 8003cb2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003cb4:	f043 0210 	orr.w	r2, r3, #16
 8003cb8:	687b      	ldr	r3, [r7, #4]
 8003cba:	641a      	str	r2, [r3, #64]	; 0x40

    /* Set ADC error code to ADC IP internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8003cbc:	687b      	ldr	r3, [r7, #4]
 8003cbe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003cc0:	f043 0201 	orr.w	r2, r3, #1
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	645a      	str	r2, [r3, #68]	; 0x44
  }
  
  /* Return function status */
  return HAL_OK;
 8003cc8:	2300      	movs	r3, #0
}
 8003cca:	4618      	mov	r0, r3
 8003ccc:	3714      	adds	r7, #20
 8003cce:	46bd      	mov	sp, r7
 8003cd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cd4:	4770      	bx	lr
 8003cd6:	bf00      	nop
 8003cd8:	20000004 	.word	0x20000004
 8003cdc:	431bde83 	.word	0x431bde83
 8003ce0:	40012300 	.word	0x40012300
 8003ce4:	40012000 	.word	0x40012000

08003ce8 <HAL_ADC_GetValue>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval Converted value
  */
uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
{       
 8003ce8:	b480      	push	{r7}
 8003cea:	b083      	sub	sp, #12
 8003cec:	af00      	add	r7, sp, #0
 8003cee:	6078      	str	r0, [r7, #4]
  /* Return the selected ADC converted value */ 
  return hadc->Instance->DR;
 8003cf0:	687b      	ldr	r3, [r7, #4]
 8003cf2:	681b      	ldr	r3, [r3, #0]
 8003cf4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
 8003cf6:	4618      	mov	r0, r3
 8003cf8:	370c      	adds	r7, #12
 8003cfa:	46bd      	mov	sp, r7
 8003cfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d00:	4770      	bx	lr
	...

08003d04 <HAL_ADC_ConfigChannel>:
  *         the configuration information for the specified ADC.
  * @param  sConfig ADC configuration structure. 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
{
 8003d04:	b480      	push	{r7}
 8003d06:	b085      	sub	sp, #20
 8003d08:	af00      	add	r7, sp, #0
 8003d0a:	6078      	str	r0, [r7, #4]
 8003d0c:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0U;
 8003d0e:	2300      	movs	r3, #0
 8003d10:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 8003d12:	687b      	ldr	r3, [r7, #4]
 8003d14:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003d18:	2b01      	cmp	r3, #1
 8003d1a:	d101      	bne.n	8003d20 <HAL_ADC_ConfigChannel+0x1c>
 8003d1c:	2302      	movs	r3, #2
 8003d1e:	e113      	b.n	8003f48 <HAL_ADC_ConfigChannel+0x244>
 8003d20:	687b      	ldr	r3, [r7, #4]
 8003d22:	2201      	movs	r2, #1
 8003d24:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 8003d28:	683b      	ldr	r3, [r7, #0]
 8003d2a:	681b      	ldr	r3, [r3, #0]
 8003d2c:	2b09      	cmp	r3, #9
 8003d2e:	d925      	bls.n	8003d7c <HAL_ADC_ConfigChannel+0x78>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8003d30:	687b      	ldr	r3, [r7, #4]
 8003d32:	681b      	ldr	r3, [r3, #0]
 8003d34:	68d9      	ldr	r1, [r3, #12]
 8003d36:	683b      	ldr	r3, [r7, #0]
 8003d38:	681b      	ldr	r3, [r3, #0]
 8003d3a:	b29b      	uxth	r3, r3
 8003d3c:	461a      	mov	r2, r3
 8003d3e:	4613      	mov	r3, r2
 8003d40:	005b      	lsls	r3, r3, #1
 8003d42:	4413      	add	r3, r2
 8003d44:	3b1e      	subs	r3, #30
 8003d46:	2207      	movs	r2, #7
 8003d48:	fa02 f303 	lsl.w	r3, r2, r3
 8003d4c:	43da      	mvns	r2, r3
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	681b      	ldr	r3, [r3, #0]
 8003d52:	400a      	ands	r2, r1
 8003d54:	60da      	str	r2, [r3, #12]
    
    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8003d56:	687b      	ldr	r3, [r7, #4]
 8003d58:	681b      	ldr	r3, [r3, #0]
 8003d5a:	68d9      	ldr	r1, [r3, #12]
 8003d5c:	683b      	ldr	r3, [r7, #0]
 8003d5e:	689a      	ldr	r2, [r3, #8]
 8003d60:	683b      	ldr	r3, [r7, #0]
 8003d62:	681b      	ldr	r3, [r3, #0]
 8003d64:	b29b      	uxth	r3, r3
 8003d66:	4618      	mov	r0, r3
 8003d68:	4603      	mov	r3, r0
 8003d6a:	005b      	lsls	r3, r3, #1
 8003d6c:	4403      	add	r3, r0
 8003d6e:	3b1e      	subs	r3, #30
 8003d70:	409a      	lsls	r2, r3
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	681b      	ldr	r3, [r3, #0]
 8003d76:	430a      	orrs	r2, r1
 8003d78:	60da      	str	r2, [r3, #12]
 8003d7a:	e022      	b.n	8003dc2 <HAL_ADC_ConfigChannel+0xbe>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8003d7c:	687b      	ldr	r3, [r7, #4]
 8003d7e:	681b      	ldr	r3, [r3, #0]
 8003d80:	6919      	ldr	r1, [r3, #16]
 8003d82:	683b      	ldr	r3, [r7, #0]
 8003d84:	681b      	ldr	r3, [r3, #0]
 8003d86:	b29b      	uxth	r3, r3
 8003d88:	461a      	mov	r2, r3
 8003d8a:	4613      	mov	r3, r2
 8003d8c:	005b      	lsls	r3, r3, #1
 8003d8e:	4413      	add	r3, r2
 8003d90:	2207      	movs	r2, #7
 8003d92:	fa02 f303 	lsl.w	r3, r2, r3
 8003d96:	43da      	mvns	r2, r3
 8003d98:	687b      	ldr	r3, [r7, #4]
 8003d9a:	681b      	ldr	r3, [r3, #0]
 8003d9c:	400a      	ands	r2, r1
 8003d9e:	611a      	str	r2, [r3, #16]
    
    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8003da0:	687b      	ldr	r3, [r7, #4]
 8003da2:	681b      	ldr	r3, [r3, #0]
 8003da4:	6919      	ldr	r1, [r3, #16]
 8003da6:	683b      	ldr	r3, [r7, #0]
 8003da8:	689a      	ldr	r2, [r3, #8]
 8003daa:	683b      	ldr	r3, [r7, #0]
 8003dac:	681b      	ldr	r3, [r3, #0]
 8003dae:	b29b      	uxth	r3, r3
 8003db0:	4618      	mov	r0, r3
 8003db2:	4603      	mov	r3, r0
 8003db4:	005b      	lsls	r3, r3, #1
 8003db6:	4403      	add	r3, r0
 8003db8:	409a      	lsls	r2, r3
 8003dba:	687b      	ldr	r3, [r7, #4]
 8003dbc:	681b      	ldr	r3, [r3, #0]
 8003dbe:	430a      	orrs	r2, r1
 8003dc0:	611a      	str	r2, [r3, #16]
  }
  
  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 8003dc2:	683b      	ldr	r3, [r7, #0]
 8003dc4:	685b      	ldr	r3, [r3, #4]
 8003dc6:	2b06      	cmp	r3, #6
 8003dc8:	d824      	bhi.n	8003e14 <HAL_ADC_ConfigChannel+0x110>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8003dca:	687b      	ldr	r3, [r7, #4]
 8003dcc:	681b      	ldr	r3, [r3, #0]
 8003dce:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8003dd0:	683b      	ldr	r3, [r7, #0]
 8003dd2:	685a      	ldr	r2, [r3, #4]
 8003dd4:	4613      	mov	r3, r2
 8003dd6:	009b      	lsls	r3, r3, #2
 8003dd8:	4413      	add	r3, r2
 8003dda:	3b05      	subs	r3, #5
 8003ddc:	221f      	movs	r2, #31
 8003dde:	fa02 f303 	lsl.w	r3, r2, r3
 8003de2:	43da      	mvns	r2, r3
 8003de4:	687b      	ldr	r3, [r7, #4]
 8003de6:	681b      	ldr	r3, [r3, #0]
 8003de8:	400a      	ands	r2, r1
 8003dea:	635a      	str	r2, [r3, #52]	; 0x34
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8003dec:	687b      	ldr	r3, [r7, #4]
 8003dee:	681b      	ldr	r3, [r3, #0]
 8003df0:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8003df2:	683b      	ldr	r3, [r7, #0]
 8003df4:	681b      	ldr	r3, [r3, #0]
 8003df6:	b29b      	uxth	r3, r3
 8003df8:	4618      	mov	r0, r3
 8003dfa:	683b      	ldr	r3, [r7, #0]
 8003dfc:	685a      	ldr	r2, [r3, #4]
 8003dfe:	4613      	mov	r3, r2
 8003e00:	009b      	lsls	r3, r3, #2
 8003e02:	4413      	add	r3, r2
 8003e04:	3b05      	subs	r3, #5
 8003e06:	fa00 f203 	lsl.w	r2, r0, r3
 8003e0a:	687b      	ldr	r3, [r7, #4]
 8003e0c:	681b      	ldr	r3, [r3, #0]
 8003e0e:	430a      	orrs	r2, r1
 8003e10:	635a      	str	r2, [r3, #52]	; 0x34
 8003e12:	e04c      	b.n	8003eae <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 8003e14:	683b      	ldr	r3, [r7, #0]
 8003e16:	685b      	ldr	r3, [r3, #4]
 8003e18:	2b0c      	cmp	r3, #12
 8003e1a:	d824      	bhi.n	8003e66 <HAL_ADC_ConfigChannel+0x162>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	681b      	ldr	r3, [r3, #0]
 8003e20:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8003e22:	683b      	ldr	r3, [r7, #0]
 8003e24:	685a      	ldr	r2, [r3, #4]
 8003e26:	4613      	mov	r3, r2
 8003e28:	009b      	lsls	r3, r3, #2
 8003e2a:	4413      	add	r3, r2
 8003e2c:	3b23      	subs	r3, #35	; 0x23
 8003e2e:	221f      	movs	r2, #31
 8003e30:	fa02 f303 	lsl.w	r3, r2, r3
 8003e34:	43da      	mvns	r2, r3
 8003e36:	687b      	ldr	r3, [r7, #4]
 8003e38:	681b      	ldr	r3, [r3, #0]
 8003e3a:	400a      	ands	r2, r1
 8003e3c:	631a      	str	r2, [r3, #48]	; 0x30
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8003e3e:	687b      	ldr	r3, [r7, #4]
 8003e40:	681b      	ldr	r3, [r3, #0]
 8003e42:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8003e44:	683b      	ldr	r3, [r7, #0]
 8003e46:	681b      	ldr	r3, [r3, #0]
 8003e48:	b29b      	uxth	r3, r3
 8003e4a:	4618      	mov	r0, r3
 8003e4c:	683b      	ldr	r3, [r7, #0]
 8003e4e:	685a      	ldr	r2, [r3, #4]
 8003e50:	4613      	mov	r3, r2
 8003e52:	009b      	lsls	r3, r3, #2
 8003e54:	4413      	add	r3, r2
 8003e56:	3b23      	subs	r3, #35	; 0x23
 8003e58:	fa00 f203 	lsl.w	r2, r0, r3
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	681b      	ldr	r3, [r3, #0]
 8003e60:	430a      	orrs	r2, r1
 8003e62:	631a      	str	r2, [r3, #48]	; 0x30
 8003e64:	e023      	b.n	8003eae <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8003e66:	687b      	ldr	r3, [r7, #4]
 8003e68:	681b      	ldr	r3, [r3, #0]
 8003e6a:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8003e6c:	683b      	ldr	r3, [r7, #0]
 8003e6e:	685a      	ldr	r2, [r3, #4]
 8003e70:	4613      	mov	r3, r2
 8003e72:	009b      	lsls	r3, r3, #2
 8003e74:	4413      	add	r3, r2
 8003e76:	3b41      	subs	r3, #65	; 0x41
 8003e78:	221f      	movs	r2, #31
 8003e7a:	fa02 f303 	lsl.w	r3, r2, r3
 8003e7e:	43da      	mvns	r2, r3
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	681b      	ldr	r3, [r3, #0]
 8003e84:	400a      	ands	r2, r1
 8003e86:	62da      	str	r2, [r3, #44]	; 0x2c
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8003e88:	687b      	ldr	r3, [r7, #4]
 8003e8a:	681b      	ldr	r3, [r3, #0]
 8003e8c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8003e8e:	683b      	ldr	r3, [r7, #0]
 8003e90:	681b      	ldr	r3, [r3, #0]
 8003e92:	b29b      	uxth	r3, r3
 8003e94:	4618      	mov	r0, r3
 8003e96:	683b      	ldr	r3, [r7, #0]
 8003e98:	685a      	ldr	r2, [r3, #4]
 8003e9a:	4613      	mov	r3, r2
 8003e9c:	009b      	lsls	r3, r3, #2
 8003e9e:	4413      	add	r3, r2
 8003ea0:	3b41      	subs	r3, #65	; 0x41
 8003ea2:	fa00 f203 	lsl.w	r2, r0, r3
 8003ea6:	687b      	ldr	r3, [r7, #4]
 8003ea8:	681b      	ldr	r3, [r3, #0]
 8003eaa:	430a      	orrs	r2, r1
 8003eac:	62da      	str	r2, [r3, #44]	; 0x2c
  }

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8003eae:	4b29      	ldr	r3, [pc, #164]	; (8003f54 <HAL_ADC_ConfigChannel+0x250>)
 8003eb0:	60fb      	str	r3, [r7, #12]

  /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8003eb2:	687b      	ldr	r3, [r7, #4]
 8003eb4:	681b      	ldr	r3, [r3, #0]
 8003eb6:	4a28      	ldr	r2, [pc, #160]	; (8003f58 <HAL_ADC_ConfigChannel+0x254>)
 8003eb8:	4293      	cmp	r3, r2
 8003eba:	d10f      	bne.n	8003edc <HAL_ADC_ConfigChannel+0x1d8>
 8003ebc:	683b      	ldr	r3, [r7, #0]
 8003ebe:	681b      	ldr	r3, [r3, #0]
 8003ec0:	2b12      	cmp	r3, #18
 8003ec2:	d10b      	bne.n	8003edc <HAL_ADC_ConfigChannel+0x1d8>
  {
    /* Disable the TEMPSENSOR channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/    
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8003ec4:	68fb      	ldr	r3, [r7, #12]
 8003ec6:	685b      	ldr	r3, [r3, #4]
 8003ec8:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 8003ecc:	68fb      	ldr	r3, [r7, #12]
 8003ece:	605a      	str	r2, [r3, #4]
    }
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8003ed0:	68fb      	ldr	r3, [r7, #12]
 8003ed2:	685b      	ldr	r3, [r3, #4]
 8003ed4:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8003ed8:	68fb      	ldr	r3, [r7, #12]
 8003eda:	605a      	str	r2, [r3, #4]
  }
  
  /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or 
     Channel_17 is selected for VREFINT enable TSVREFE */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8003edc:	687b      	ldr	r3, [r7, #4]
 8003ede:	681b      	ldr	r3, [r3, #0]
 8003ee0:	4a1d      	ldr	r2, [pc, #116]	; (8003f58 <HAL_ADC_ConfigChannel+0x254>)
 8003ee2:	4293      	cmp	r3, r2
 8003ee4:	d12b      	bne.n	8003f3e <HAL_ADC_ConfigChannel+0x23a>
 8003ee6:	683b      	ldr	r3, [r7, #0]
 8003ee8:	681b      	ldr	r3, [r3, #0]
 8003eea:	4a1c      	ldr	r2, [pc, #112]	; (8003f5c <HAL_ADC_ConfigChannel+0x258>)
 8003eec:	4293      	cmp	r3, r2
 8003eee:	d003      	beq.n	8003ef8 <HAL_ADC_ConfigChannel+0x1f4>
 8003ef0:	683b      	ldr	r3, [r7, #0]
 8003ef2:	681b      	ldr	r3, [r3, #0]
 8003ef4:	2b11      	cmp	r3, #17
 8003ef6:	d122      	bne.n	8003f3e <HAL_ADC_ConfigChannel+0x23a>
  {
    /* Disable the VBAT channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8003ef8:	68fb      	ldr	r3, [r7, #12]
 8003efa:	685b      	ldr	r3, [r3, #4]
 8003efc:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8003f00:	68fb      	ldr	r3, [r7, #12]
 8003f02:	605a      	str	r2, [r3, #4]
    }
    /* Enable the Temperature sensor and VREFINT channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8003f04:	68fb      	ldr	r3, [r7, #12]
 8003f06:	685b      	ldr	r3, [r3, #4]
 8003f08:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8003f0c:	68fb      	ldr	r3, [r7, #12]
 8003f0e:	605a      	str	r2, [r3, #4]
    
    if(sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8003f10:	683b      	ldr	r3, [r7, #0]
 8003f12:	681b      	ldr	r3, [r3, #0]
 8003f14:	4a11      	ldr	r2, [pc, #68]	; (8003f5c <HAL_ADC_ConfigChannel+0x258>)
 8003f16:	4293      	cmp	r3, r2
 8003f18:	d111      	bne.n	8003f3e <HAL_ADC_ConfigChannel+0x23a>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8003f1a:	4b11      	ldr	r3, [pc, #68]	; (8003f60 <HAL_ADC_ConfigChannel+0x25c>)
 8003f1c:	681b      	ldr	r3, [r3, #0]
 8003f1e:	4a11      	ldr	r2, [pc, #68]	; (8003f64 <HAL_ADC_ConfigChannel+0x260>)
 8003f20:	fba2 2303 	umull	r2, r3, r2, r3
 8003f24:	0c9a      	lsrs	r2, r3, #18
 8003f26:	4613      	mov	r3, r2
 8003f28:	009b      	lsls	r3, r3, #2
 8003f2a:	4413      	add	r3, r2
 8003f2c:	005b      	lsls	r3, r3, #1
 8003f2e:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 8003f30:	e002      	b.n	8003f38 <HAL_ADC_ConfigChannel+0x234>
      {
        counter--;
 8003f32:	68bb      	ldr	r3, [r7, #8]
 8003f34:	3b01      	subs	r3, #1
 8003f36:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 8003f38:	68bb      	ldr	r3, [r7, #8]
 8003f3a:	2b00      	cmp	r3, #0
 8003f3c:	d1f9      	bne.n	8003f32 <HAL_ADC_ConfigChannel+0x22e>
      }
    }
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	2200      	movs	r2, #0
 8003f42:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Return function status */
  return HAL_OK;
 8003f46:	2300      	movs	r3, #0
}
 8003f48:	4618      	mov	r0, r3
 8003f4a:	3714      	adds	r7, #20
 8003f4c:	46bd      	mov	sp, r7
 8003f4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f52:	4770      	bx	lr
 8003f54:	40012300 	.word	0x40012300
 8003f58:	40012000 	.word	0x40012000
 8003f5c:	10000012 	.word	0x10000012
 8003f60:	20000004 	.word	0x20000004
 8003f64:	431bde83 	.word	0x431bde83

08003f68 <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef* hadc)
{
 8003f68:	b480      	push	{r7}
 8003f6a:	b085      	sub	sp, #20
 8003f6c:	af00      	add	r7, sp, #0
 8003f6e:	6078      	str	r0, [r7, #4]
  
  /* Set ADC parameters */
  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8003f70:	4b79      	ldr	r3, [pc, #484]	; (8004158 <ADC_Init+0x1f0>)
 8003f72:	60fb      	str	r3, [r7, #12]
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8003f74:	68fb      	ldr	r3, [r7, #12]
 8003f76:	685b      	ldr	r3, [r3, #4]
 8003f78:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8003f7c:	68fb      	ldr	r3, [r7, #12]
 8003f7e:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8003f80:	68fb      	ldr	r3, [r7, #12]
 8003f82:	685a      	ldr	r2, [r3, #4]
 8003f84:	687b      	ldr	r3, [r7, #4]
 8003f86:	685b      	ldr	r3, [r3, #4]
 8003f88:	431a      	orrs	r2, r3
 8003f8a:	68fb      	ldr	r3, [r7, #12]
 8003f8c:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8003f8e:	687b      	ldr	r3, [r7, #4]
 8003f90:	681b      	ldr	r3, [r3, #0]
 8003f92:	685a      	ldr	r2, [r3, #4]
 8003f94:	687b      	ldr	r3, [r7, #4]
 8003f96:	681b      	ldr	r3, [r3, #0]
 8003f98:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003f9c:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8003f9e:	687b      	ldr	r3, [r7, #4]
 8003fa0:	681b      	ldr	r3, [r3, #0]
 8003fa2:	6859      	ldr	r1, [r3, #4]
 8003fa4:	687b      	ldr	r3, [r7, #4]
 8003fa6:	691b      	ldr	r3, [r3, #16]
 8003fa8:	021a      	lsls	r2, r3, #8
 8003faa:	687b      	ldr	r3, [r7, #4]
 8003fac:	681b      	ldr	r3, [r3, #0]
 8003fae:	430a      	orrs	r2, r1
 8003fb0:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	681b      	ldr	r3, [r3, #0]
 8003fb6:	685a      	ldr	r2, [r3, #4]
 8003fb8:	687b      	ldr	r3, [r7, #4]
 8003fba:	681b      	ldr	r3, [r3, #0]
 8003fbc:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8003fc0:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8003fc2:	687b      	ldr	r3, [r7, #4]
 8003fc4:	681b      	ldr	r3, [r3, #0]
 8003fc6:	6859      	ldr	r1, [r3, #4]
 8003fc8:	687b      	ldr	r3, [r7, #4]
 8003fca:	689a      	ldr	r2, [r3, #8]
 8003fcc:	687b      	ldr	r3, [r7, #4]
 8003fce:	681b      	ldr	r3, [r3, #0]
 8003fd0:	430a      	orrs	r2, r1
 8003fd2:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8003fd4:	687b      	ldr	r3, [r7, #4]
 8003fd6:	681b      	ldr	r3, [r3, #0]
 8003fd8:	689a      	ldr	r2, [r3, #8]
 8003fda:	687b      	ldr	r3, [r7, #4]
 8003fdc:	681b      	ldr	r3, [r3, #0]
 8003fde:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003fe2:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8003fe4:	687b      	ldr	r3, [r7, #4]
 8003fe6:	681b      	ldr	r3, [r3, #0]
 8003fe8:	6899      	ldr	r1, [r3, #8]
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	68da      	ldr	r2, [r3, #12]
 8003fee:	687b      	ldr	r3, [r7, #4]
 8003ff0:	681b      	ldr	r3, [r3, #0]
 8003ff2:	430a      	orrs	r2, r1
 8003ff4:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8003ff6:	687b      	ldr	r3, [r7, #4]
 8003ff8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003ffa:	4a58      	ldr	r2, [pc, #352]	; (800415c <ADC_Init+0x1f4>)
 8003ffc:	4293      	cmp	r3, r2
 8003ffe:	d022      	beq.n	8004046 <ADC_Init+0xde>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8004000:	687b      	ldr	r3, [r7, #4]
 8004002:	681b      	ldr	r3, [r3, #0]
 8004004:	689a      	ldr	r2, [r3, #8]
 8004006:	687b      	ldr	r3, [r7, #4]
 8004008:	681b      	ldr	r3, [r3, #0]
 800400a:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800400e:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8004010:	687b      	ldr	r3, [r7, #4]
 8004012:	681b      	ldr	r3, [r3, #0]
 8004014:	6899      	ldr	r1, [r3, #8]
 8004016:	687b      	ldr	r3, [r7, #4]
 8004018:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800401a:	687b      	ldr	r3, [r7, #4]
 800401c:	681b      	ldr	r3, [r3, #0]
 800401e:	430a      	orrs	r2, r1
 8004020:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8004022:	687b      	ldr	r3, [r7, #4]
 8004024:	681b      	ldr	r3, [r3, #0]
 8004026:	689a      	ldr	r2, [r3, #8]
 8004028:	687b      	ldr	r3, [r7, #4]
 800402a:	681b      	ldr	r3, [r3, #0]
 800402c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8004030:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8004032:	687b      	ldr	r3, [r7, #4]
 8004034:	681b      	ldr	r3, [r3, #0]
 8004036:	6899      	ldr	r1, [r3, #8]
 8004038:	687b      	ldr	r3, [r7, #4]
 800403a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800403c:	687b      	ldr	r3, [r7, #4]
 800403e:	681b      	ldr	r3, [r3, #0]
 8004040:	430a      	orrs	r2, r1
 8004042:	609a      	str	r2, [r3, #8]
 8004044:	e00f      	b.n	8004066 <ADC_Init+0xfe>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8004046:	687b      	ldr	r3, [r7, #4]
 8004048:	681b      	ldr	r3, [r3, #0]
 800404a:	689a      	ldr	r2, [r3, #8]
 800404c:	687b      	ldr	r3, [r7, #4]
 800404e:	681b      	ldr	r3, [r3, #0]
 8004050:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8004054:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8004056:	687b      	ldr	r3, [r7, #4]
 8004058:	681b      	ldr	r3, [r3, #0]
 800405a:	689a      	ldr	r2, [r3, #8]
 800405c:	687b      	ldr	r3, [r7, #4]
 800405e:	681b      	ldr	r3, [r3, #0]
 8004060:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8004064:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8004066:	687b      	ldr	r3, [r7, #4]
 8004068:	681b      	ldr	r3, [r3, #0]
 800406a:	689a      	ldr	r2, [r3, #8]
 800406c:	687b      	ldr	r3, [r7, #4]
 800406e:	681b      	ldr	r3, [r3, #0]
 8004070:	f022 0202 	bic.w	r2, r2, #2
 8004074:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8004076:	687b      	ldr	r3, [r7, #4]
 8004078:	681b      	ldr	r3, [r3, #0]
 800407a:	6899      	ldr	r1, [r3, #8]
 800407c:	687b      	ldr	r3, [r7, #4]
 800407e:	7e1b      	ldrb	r3, [r3, #24]
 8004080:	005a      	lsls	r2, r3, #1
 8004082:	687b      	ldr	r3, [r7, #4]
 8004084:	681b      	ldr	r3, [r3, #0]
 8004086:	430a      	orrs	r2, r1
 8004088:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 800408a:	687b      	ldr	r3, [r7, #4]
 800408c:	f893 3020 	ldrb.w	r3, [r3, #32]
 8004090:	2b00      	cmp	r3, #0
 8004092:	d01b      	beq.n	80040cc <ADC_Init+0x164>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8004094:	687b      	ldr	r3, [r7, #4]
 8004096:	681b      	ldr	r3, [r3, #0]
 8004098:	685a      	ldr	r2, [r3, #4]
 800409a:	687b      	ldr	r3, [r7, #4]
 800409c:	681b      	ldr	r3, [r3, #0]
 800409e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80040a2:	605a      	str	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 80040a4:	687b      	ldr	r3, [r7, #4]
 80040a6:	681b      	ldr	r3, [r3, #0]
 80040a8:	685a      	ldr	r2, [r3, #4]
 80040aa:	687b      	ldr	r3, [r7, #4]
 80040ac:	681b      	ldr	r3, [r3, #0]
 80040ae:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 80040b2:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 80040b4:	687b      	ldr	r3, [r7, #4]
 80040b6:	681b      	ldr	r3, [r3, #0]
 80040b8:	6859      	ldr	r1, [r3, #4]
 80040ba:	687b      	ldr	r3, [r7, #4]
 80040bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040be:	3b01      	subs	r3, #1
 80040c0:	035a      	lsls	r2, r3, #13
 80040c2:	687b      	ldr	r3, [r7, #4]
 80040c4:	681b      	ldr	r3, [r3, #0]
 80040c6:	430a      	orrs	r2, r1
 80040c8:	605a      	str	r2, [r3, #4]
 80040ca:	e007      	b.n	80040dc <ADC_Init+0x174>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 80040cc:	687b      	ldr	r3, [r7, #4]
 80040ce:	681b      	ldr	r3, [r3, #0]
 80040d0:	685a      	ldr	r2, [r3, #4]
 80040d2:	687b      	ldr	r3, [r7, #4]
 80040d4:	681b      	ldr	r3, [r3, #0]
 80040d6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80040da:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 80040dc:	687b      	ldr	r3, [r7, #4]
 80040de:	681b      	ldr	r3, [r3, #0]
 80040e0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	681b      	ldr	r3, [r3, #0]
 80040e6:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 80040ea:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 80040ec:	687b      	ldr	r3, [r7, #4]
 80040ee:	681b      	ldr	r3, [r3, #0]
 80040f0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80040f2:	687b      	ldr	r3, [r7, #4]
 80040f4:	69db      	ldr	r3, [r3, #28]
 80040f6:	3b01      	subs	r3, #1
 80040f8:	051a      	lsls	r2, r3, #20
 80040fa:	687b      	ldr	r3, [r7, #4]
 80040fc:	681b      	ldr	r3, [r3, #0]
 80040fe:	430a      	orrs	r2, r1
 8004100:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8004102:	687b      	ldr	r3, [r7, #4]
 8004104:	681b      	ldr	r3, [r3, #0]
 8004106:	689a      	ldr	r2, [r3, #8]
 8004108:	687b      	ldr	r3, [r7, #4]
 800410a:	681b      	ldr	r3, [r3, #0]
 800410c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8004110:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8004112:	687b      	ldr	r3, [r7, #4]
 8004114:	681b      	ldr	r3, [r3, #0]
 8004116:	6899      	ldr	r1, [r3, #8]
 8004118:	687b      	ldr	r3, [r7, #4]
 800411a:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 800411e:	025a      	lsls	r2, r3, #9
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	681b      	ldr	r3, [r3, #0]
 8004124:	430a      	orrs	r2, r1
 8004126:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8004128:	687b      	ldr	r3, [r7, #4]
 800412a:	681b      	ldr	r3, [r3, #0]
 800412c:	689a      	ldr	r2, [r3, #8]
 800412e:	687b      	ldr	r3, [r7, #4]
 8004130:	681b      	ldr	r3, [r3, #0]
 8004132:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004136:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8004138:	687b      	ldr	r3, [r7, #4]
 800413a:	681b      	ldr	r3, [r3, #0]
 800413c:	6899      	ldr	r1, [r3, #8]
 800413e:	687b      	ldr	r3, [r7, #4]
 8004140:	695b      	ldr	r3, [r3, #20]
 8004142:	029a      	lsls	r2, r3, #10
 8004144:	687b      	ldr	r3, [r7, #4]
 8004146:	681b      	ldr	r3, [r3, #0]
 8004148:	430a      	orrs	r2, r1
 800414a:	609a      	str	r2, [r3, #8]
}
 800414c:	bf00      	nop
 800414e:	3714      	adds	r7, #20
 8004150:	46bd      	mov	sp, r7
 8004152:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004156:	4770      	bx	lr
 8004158:	40012300 	.word	0x40012300
 800415c:	0f000001 	.word	0x0f000001

08004160 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8004160:	b480      	push	{r7}
 8004162:	b085      	sub	sp, #20
 8004164:	af00      	add	r7, sp, #0
 8004166:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8004168:	687b      	ldr	r3, [r7, #4]
 800416a:	f003 0307 	and.w	r3, r3, #7
 800416e:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004170:	4b0c      	ldr	r3, [pc, #48]	; (80041a4 <__NVIC_SetPriorityGrouping+0x44>)
 8004172:	68db      	ldr	r3, [r3, #12]
 8004174:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004176:	68ba      	ldr	r2, [r7, #8]
 8004178:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 800417c:	4013      	ands	r3, r2
 800417e:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004180:	68fb      	ldr	r3, [r7, #12]
 8004182:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8004184:	68bb      	ldr	r3, [r7, #8]
 8004186:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8004188:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800418c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004190:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8004192:	4a04      	ldr	r2, [pc, #16]	; (80041a4 <__NVIC_SetPriorityGrouping+0x44>)
 8004194:	68bb      	ldr	r3, [r7, #8]
 8004196:	60d3      	str	r3, [r2, #12]
}
 8004198:	bf00      	nop
 800419a:	3714      	adds	r7, #20
 800419c:	46bd      	mov	sp, r7
 800419e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041a2:	4770      	bx	lr
 80041a4:	e000ed00 	.word	0xe000ed00

080041a8 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 80041a8:	b480      	push	{r7}
 80041aa:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80041ac:	4b04      	ldr	r3, [pc, #16]	; (80041c0 <__NVIC_GetPriorityGrouping+0x18>)
 80041ae:	68db      	ldr	r3, [r3, #12]
 80041b0:	0a1b      	lsrs	r3, r3, #8
 80041b2:	f003 0307 	and.w	r3, r3, #7
}
 80041b6:	4618      	mov	r0, r3
 80041b8:	46bd      	mov	sp, r7
 80041ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041be:	4770      	bx	lr
 80041c0:	e000ed00 	.word	0xe000ed00

080041c4 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80041c4:	b480      	push	{r7}
 80041c6:	b083      	sub	sp, #12
 80041c8:	af00      	add	r7, sp, #0
 80041ca:	4603      	mov	r3, r0
 80041cc:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80041ce:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80041d2:	2b00      	cmp	r3, #0
 80041d4:	db0b      	blt.n	80041ee <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80041d6:	79fb      	ldrb	r3, [r7, #7]
 80041d8:	f003 021f 	and.w	r2, r3, #31
 80041dc:	4907      	ldr	r1, [pc, #28]	; (80041fc <__NVIC_EnableIRQ+0x38>)
 80041de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80041e2:	095b      	lsrs	r3, r3, #5
 80041e4:	2001      	movs	r0, #1
 80041e6:	fa00 f202 	lsl.w	r2, r0, r2
 80041ea:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 80041ee:	bf00      	nop
 80041f0:	370c      	adds	r7, #12
 80041f2:	46bd      	mov	sp, r7
 80041f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041f8:	4770      	bx	lr
 80041fa:	bf00      	nop
 80041fc:	e000e100 	.word	0xe000e100

08004200 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8004200:	b480      	push	{r7}
 8004202:	b083      	sub	sp, #12
 8004204:	af00      	add	r7, sp, #0
 8004206:	4603      	mov	r3, r0
 8004208:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800420a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800420e:	2b00      	cmp	r3, #0
 8004210:	db12      	blt.n	8004238 <__NVIC_DisableIRQ+0x38>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004212:	79fb      	ldrb	r3, [r7, #7]
 8004214:	f003 021f 	and.w	r2, r3, #31
 8004218:	490a      	ldr	r1, [pc, #40]	; (8004244 <__NVIC_DisableIRQ+0x44>)
 800421a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800421e:	095b      	lsrs	r3, r3, #5
 8004220:	2001      	movs	r0, #1
 8004222:	fa00 f202 	lsl.w	r2, r0, r2
 8004226:	3320      	adds	r3, #32
 8004228:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800422c:	f3bf 8f4f 	dsb	sy
}
 8004230:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8004232:	f3bf 8f6f 	isb	sy
}
 8004236:	bf00      	nop
    __DSB();
    __ISB();
  }
}
 8004238:	bf00      	nop
 800423a:	370c      	adds	r7, #12
 800423c:	46bd      	mov	sp, r7
 800423e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004242:	4770      	bx	lr
 8004244:	e000e100 	.word	0xe000e100

08004248 <__NVIC_ClearPendingIRQ>:
  \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 8004248:	b480      	push	{r7}
 800424a:	b083      	sub	sp, #12
 800424c:	af00      	add	r7, sp, #0
 800424e:	4603      	mov	r3, r0
 8004250:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8004252:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004256:	2b00      	cmp	r3, #0
 8004258:	db0c      	blt.n	8004274 <__NVIC_ClearPendingIRQ+0x2c>
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800425a:	79fb      	ldrb	r3, [r7, #7]
 800425c:	f003 021f 	and.w	r2, r3, #31
 8004260:	4907      	ldr	r1, [pc, #28]	; (8004280 <__NVIC_ClearPendingIRQ+0x38>)
 8004262:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004266:	095b      	lsrs	r3, r3, #5
 8004268:	2001      	movs	r0, #1
 800426a:	fa00 f202 	lsl.w	r2, r0, r2
 800426e:	3360      	adds	r3, #96	; 0x60
 8004270:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8004274:	bf00      	nop
 8004276:	370c      	adds	r7, #12
 8004278:	46bd      	mov	sp, r7
 800427a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800427e:	4770      	bx	lr
 8004280:	e000e100 	.word	0xe000e100

08004284 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8004284:	b480      	push	{r7}
 8004286:	b083      	sub	sp, #12
 8004288:	af00      	add	r7, sp, #0
 800428a:	4603      	mov	r3, r0
 800428c:	6039      	str	r1, [r7, #0]
 800428e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8004290:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004294:	2b00      	cmp	r3, #0
 8004296:	db0a      	blt.n	80042ae <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004298:	683b      	ldr	r3, [r7, #0]
 800429a:	b2da      	uxtb	r2, r3
 800429c:	490c      	ldr	r1, [pc, #48]	; (80042d0 <__NVIC_SetPriority+0x4c>)
 800429e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80042a2:	0112      	lsls	r2, r2, #4
 80042a4:	b2d2      	uxtb	r2, r2
 80042a6:	440b      	add	r3, r1
 80042a8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80042ac:	e00a      	b.n	80042c4 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80042ae:	683b      	ldr	r3, [r7, #0]
 80042b0:	b2da      	uxtb	r2, r3
 80042b2:	4908      	ldr	r1, [pc, #32]	; (80042d4 <__NVIC_SetPriority+0x50>)
 80042b4:	79fb      	ldrb	r3, [r7, #7]
 80042b6:	f003 030f 	and.w	r3, r3, #15
 80042ba:	3b04      	subs	r3, #4
 80042bc:	0112      	lsls	r2, r2, #4
 80042be:	b2d2      	uxtb	r2, r2
 80042c0:	440b      	add	r3, r1
 80042c2:	761a      	strb	r2, [r3, #24]
}
 80042c4:	bf00      	nop
 80042c6:	370c      	adds	r7, #12
 80042c8:	46bd      	mov	sp, r7
 80042ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042ce:	4770      	bx	lr
 80042d0:	e000e100 	.word	0xe000e100
 80042d4:	e000ed00 	.word	0xe000ed00

080042d8 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80042d8:	b480      	push	{r7}
 80042da:	b089      	sub	sp, #36	; 0x24
 80042dc:	af00      	add	r7, sp, #0
 80042de:	60f8      	str	r0, [r7, #12]
 80042e0:	60b9      	str	r1, [r7, #8]
 80042e2:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80042e4:	68fb      	ldr	r3, [r7, #12]
 80042e6:	f003 0307 	and.w	r3, r3, #7
 80042ea:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80042ec:	69fb      	ldr	r3, [r7, #28]
 80042ee:	f1c3 0307 	rsb	r3, r3, #7
 80042f2:	2b04      	cmp	r3, #4
 80042f4:	bf28      	it	cs
 80042f6:	2304      	movcs	r3, #4
 80042f8:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80042fa:	69fb      	ldr	r3, [r7, #28]
 80042fc:	3304      	adds	r3, #4
 80042fe:	2b06      	cmp	r3, #6
 8004300:	d902      	bls.n	8004308 <NVIC_EncodePriority+0x30>
 8004302:	69fb      	ldr	r3, [r7, #28]
 8004304:	3b03      	subs	r3, #3
 8004306:	e000      	b.n	800430a <NVIC_EncodePriority+0x32>
 8004308:	2300      	movs	r3, #0
 800430a:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800430c:	f04f 32ff 	mov.w	r2, #4294967295
 8004310:	69bb      	ldr	r3, [r7, #24]
 8004312:	fa02 f303 	lsl.w	r3, r2, r3
 8004316:	43da      	mvns	r2, r3
 8004318:	68bb      	ldr	r3, [r7, #8]
 800431a:	401a      	ands	r2, r3
 800431c:	697b      	ldr	r3, [r7, #20]
 800431e:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004320:	f04f 31ff 	mov.w	r1, #4294967295
 8004324:	697b      	ldr	r3, [r7, #20]
 8004326:	fa01 f303 	lsl.w	r3, r1, r3
 800432a:	43d9      	mvns	r1, r3
 800432c:	687b      	ldr	r3, [r7, #4]
 800432e:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004330:	4313      	orrs	r3, r2
         );
}
 8004332:	4618      	mov	r0, r3
 8004334:	3724      	adds	r7, #36	; 0x24
 8004336:	46bd      	mov	sp, r7
 8004338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800433c:	4770      	bx	lr
	...

08004340 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8004340:	b580      	push	{r7, lr}
 8004342:	b082      	sub	sp, #8
 8004344:	af00      	add	r7, sp, #0
 8004346:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8004348:	687b      	ldr	r3, [r7, #4]
 800434a:	3b01      	subs	r3, #1
 800434c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8004350:	d301      	bcc.n	8004356 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8004352:	2301      	movs	r3, #1
 8004354:	e00f      	b.n	8004376 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8004356:	4a0a      	ldr	r2, [pc, #40]	; (8004380 <SysTick_Config+0x40>)
 8004358:	687b      	ldr	r3, [r7, #4]
 800435a:	3b01      	subs	r3, #1
 800435c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800435e:	210f      	movs	r1, #15
 8004360:	f04f 30ff 	mov.w	r0, #4294967295
 8004364:	f7ff ff8e 	bl	8004284 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8004368:	4b05      	ldr	r3, [pc, #20]	; (8004380 <SysTick_Config+0x40>)
 800436a:	2200      	movs	r2, #0
 800436c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800436e:	4b04      	ldr	r3, [pc, #16]	; (8004380 <SysTick_Config+0x40>)
 8004370:	2207      	movs	r2, #7
 8004372:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8004374:	2300      	movs	r3, #0
}
 8004376:	4618      	mov	r0, r3
 8004378:	3708      	adds	r7, #8
 800437a:	46bd      	mov	sp, r7
 800437c:	bd80      	pop	{r7, pc}
 800437e:	bf00      	nop
 8004380:	e000e010 	.word	0xe000e010

08004384 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8004384:	b580      	push	{r7, lr}
 8004386:	b082      	sub	sp, #8
 8004388:	af00      	add	r7, sp, #0
 800438a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 800438c:	6878      	ldr	r0, [r7, #4]
 800438e:	f7ff fee7 	bl	8004160 <__NVIC_SetPriorityGrouping>
}
 8004392:	bf00      	nop
 8004394:	3708      	adds	r7, #8
 8004396:	46bd      	mov	sp, r7
 8004398:	bd80      	pop	{r7, pc}

0800439a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800439a:	b580      	push	{r7, lr}
 800439c:	b086      	sub	sp, #24
 800439e:	af00      	add	r7, sp, #0
 80043a0:	4603      	mov	r3, r0
 80043a2:	60b9      	str	r1, [r7, #8]
 80043a4:	607a      	str	r2, [r7, #4]
 80043a6:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 80043a8:	2300      	movs	r3, #0
 80043aa:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 80043ac:	f7ff fefc 	bl	80041a8 <__NVIC_GetPriorityGrouping>
 80043b0:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80043b2:	687a      	ldr	r2, [r7, #4]
 80043b4:	68b9      	ldr	r1, [r7, #8]
 80043b6:	6978      	ldr	r0, [r7, #20]
 80043b8:	f7ff ff8e 	bl	80042d8 <NVIC_EncodePriority>
 80043bc:	4602      	mov	r2, r0
 80043be:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80043c2:	4611      	mov	r1, r2
 80043c4:	4618      	mov	r0, r3
 80043c6:	f7ff ff5d 	bl	8004284 <__NVIC_SetPriority>
}
 80043ca:	bf00      	nop
 80043cc:	3718      	adds	r7, #24
 80043ce:	46bd      	mov	sp, r7
 80043d0:	bd80      	pop	{r7, pc}

080043d2 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80043d2:	b580      	push	{r7, lr}
 80043d4:	b082      	sub	sp, #8
 80043d6:	af00      	add	r7, sp, #0
 80043d8:	4603      	mov	r3, r0
 80043da:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80043dc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80043e0:	4618      	mov	r0, r3
 80043e2:	f7ff feef 	bl	80041c4 <__NVIC_EnableIRQ>
}
 80043e6:	bf00      	nop
 80043e8:	3708      	adds	r7, #8
 80043ea:	46bd      	mov	sp, r7
 80043ec:	bd80      	pop	{r7, pc}

080043ee <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 80043ee:	b580      	push	{r7, lr}
 80043f0:	b082      	sub	sp, #8
 80043f2:	af00      	add	r7, sp, #0
 80043f4:	4603      	mov	r3, r0
 80043f6:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 80043f8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80043fc:	4618      	mov	r0, r3
 80043fe:	f7ff feff 	bl	8004200 <__NVIC_DisableIRQ>
}
 8004402:	bf00      	nop
 8004404:	3708      	adds	r7, #8
 8004406:	46bd      	mov	sp, r7
 8004408:	bd80      	pop	{r7, pc}

0800440a <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800440a:	b580      	push	{r7, lr}
 800440c:	b082      	sub	sp, #8
 800440e:	af00      	add	r7, sp, #0
 8004410:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8004412:	6878      	ldr	r0, [r7, #4]
 8004414:	f7ff ff94 	bl	8004340 <SysTick_Config>
 8004418:	4603      	mov	r3, r0
}
 800441a:	4618      	mov	r0, r3
 800441c:	3708      	adds	r7, #8
 800441e:	46bd      	mov	sp, r7
 8004420:	bd80      	pop	{r7, pc}

08004422 <HAL_NVIC_ClearPendingIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 8004422:	b580      	push	{r7, lr}
 8004424:	b082      	sub	sp, #8
 8004426:	af00      	add	r7, sp, #0
 8004428:	4603      	mov	r3, r0
 800442a:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Clear pending interrupt */
  NVIC_ClearPendingIRQ(IRQn);
 800442c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004430:	4618      	mov	r0, r3
 8004432:	f7ff ff09 	bl	8004248 <__NVIC_ClearPendingIRQ>
}
 8004436:	bf00      	nop
 8004438:	3708      	adds	r7, #8
 800443a:	46bd      	mov	sp, r7
 800443c:	bd80      	pop	{r7, pc}

0800443e <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 800443e:	b580      	push	{r7, lr}
 8004440:	b082      	sub	sp, #8
 8004442:	af00      	add	r7, sp, #0
 8004444:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004446:	687b      	ldr	r3, [r7, #4]
 8004448:	2b00      	cmp	r3, #0
 800444a:	d101      	bne.n	8004450 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 800444c:	2301      	movs	r3, #1
 800444e:	e00e      	b.n	800446e <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004450:	687b      	ldr	r3, [r7, #4]
 8004452:	795b      	ldrb	r3, [r3, #5]
 8004454:	b2db      	uxtb	r3, r3
 8004456:	2b00      	cmp	r3, #0
 8004458:	d105      	bne.n	8004466 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800445a:	687b      	ldr	r3, [r7, #4]
 800445c:	2200      	movs	r2, #0
 800445e:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8004460:	6878      	ldr	r0, [r7, #4]
 8004462:	f7fe fa0f 	bl	8002884 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004466:	687b      	ldr	r3, [r7, #4]
 8004468:	2201      	movs	r2, #1
 800446a:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 800446c:	2300      	movs	r3, #0
}
 800446e:	4618      	mov	r0, r3
 8004470:	3708      	adds	r7, #8
 8004472:	46bd      	mov	sp, r7
 8004474:	bd80      	pop	{r7, pc}
	...

08004478 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 8004478:	b580      	push	{r7, lr}
 800447a:	b086      	sub	sp, #24
 800447c:	af00      	add	r7, sp, #0
 800447e:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0U;
 8004480:	2300      	movs	r3, #0
 8004482:	617b      	str	r3, [r7, #20]
  uint32_t tickstart = HAL_GetTick();
 8004484:	f7ff fb08 	bl	8003a98 <HAL_GetTick>
 8004488:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 800448a:	687b      	ldr	r3, [r7, #4]
 800448c:	2b00      	cmp	r3, #0
 800448e:	d101      	bne.n	8004494 <HAL_DMA_Init+0x1c>
  {
    return HAL_ERROR;
 8004490:	2301      	movs	r3, #1
 8004492:	e099      	b.n	80045c8 <HAL_DMA_Init+0x150>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
  }

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8004494:	687b      	ldr	r3, [r7, #4]
 8004496:	2202      	movs	r2, #2
 8004498:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 800449c:	687b      	ldr	r3, [r7, #4]
 800449e:	2200      	movs	r2, #0
 80044a0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 80044a4:	687b      	ldr	r3, [r7, #4]
 80044a6:	681b      	ldr	r3, [r3, #0]
 80044a8:	681a      	ldr	r2, [r3, #0]
 80044aa:	687b      	ldr	r3, [r7, #4]
 80044ac:	681b      	ldr	r3, [r3, #0]
 80044ae:	f022 0201 	bic.w	r2, r2, #1
 80044b2:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80044b4:	e00f      	b.n	80044d6 <HAL_DMA_Init+0x5e>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80044b6:	f7ff faef 	bl	8003a98 <HAL_GetTick>
 80044ba:	4602      	mov	r2, r0
 80044bc:	693b      	ldr	r3, [r7, #16]
 80044be:	1ad3      	subs	r3, r2, r3
 80044c0:	2b05      	cmp	r3, #5
 80044c2:	d908      	bls.n	80044d6 <HAL_DMA_Init+0x5e>
    {
      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80044c4:	687b      	ldr	r3, [r7, #4]
 80044c6:	2220      	movs	r2, #32
 80044c8:	655a      	str	r2, [r3, #84]	; 0x54
      
      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 80044ca:	687b      	ldr	r3, [r7, #4]
 80044cc:	2203      	movs	r2, #3
 80044ce:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
      
      return HAL_TIMEOUT;
 80044d2:	2303      	movs	r3, #3
 80044d4:	e078      	b.n	80045c8 <HAL_DMA_Init+0x150>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80044d6:	687b      	ldr	r3, [r7, #4]
 80044d8:	681b      	ldr	r3, [r3, #0]
 80044da:	681b      	ldr	r3, [r3, #0]
 80044dc:	f003 0301 	and.w	r3, r3, #1
 80044e0:	2b00      	cmp	r3, #0
 80044e2:	d1e8      	bne.n	80044b6 <HAL_DMA_Init+0x3e>
    }
  }
  
  /* Get the CR register value */
  tmp = hdma->Instance->CR;
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	681b      	ldr	r3, [r3, #0]
 80044e8:	681b      	ldr	r3, [r3, #0]
 80044ea:	617b      	str	r3, [r7, #20]

  /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80044ec:	697a      	ldr	r2, [r7, #20]
 80044ee:	4b38      	ldr	r3, [pc, #224]	; (80045d0 <HAL_DMA_Init+0x158>)
 80044f0:	4013      	ands	r3, r2
 80044f2:	617b      	str	r3, [r7, #20]
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80044f4:	687b      	ldr	r3, [r7, #4]
 80044f6:	685a      	ldr	r2, [r3, #4]
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	689b      	ldr	r3, [r3, #8]
 80044fc:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80044fe:	687b      	ldr	r3, [r7, #4]
 8004500:	68db      	ldr	r3, [r3, #12]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8004502:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8004504:	687b      	ldr	r3, [r7, #4]
 8004506:	691b      	ldr	r3, [r3, #16]
 8004508:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800450a:	687b      	ldr	r3, [r7, #4]
 800450c:	695b      	ldr	r3, [r3, #20]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800450e:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8004510:	687b      	ldr	r3, [r7, #4]
 8004512:	699b      	ldr	r3, [r3, #24]
 8004514:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 8004516:	687b      	ldr	r3, [r7, #4]
 8004518:	69db      	ldr	r3, [r3, #28]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800451a:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 800451c:	687b      	ldr	r3, [r7, #4]
 800451e:	6a1b      	ldr	r3, [r3, #32]
 8004520:	4313      	orrs	r3, r2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8004522:	697a      	ldr	r2, [r7, #20]
 8004524:	4313      	orrs	r3, r2
 8004526:	617b      	str	r3, [r7, #20]

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800452c:	2b04      	cmp	r3, #4
 800452e:	d107      	bne.n	8004540 <HAL_DMA_Init+0xc8>
  {
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004534:	687b      	ldr	r3, [r7, #4]
 8004536:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004538:	4313      	orrs	r3, r2
 800453a:	697a      	ldr	r2, [r7, #20]
 800453c:	4313      	orrs	r3, r2
 800453e:	617b      	str	r3, [r7, #20]
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 8004540:	687b      	ldr	r3, [r7, #4]
 8004542:	681b      	ldr	r3, [r3, #0]
 8004544:	697a      	ldr	r2, [r7, #20]
 8004546:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	681b      	ldr	r3, [r3, #0]
 800454c:	695b      	ldr	r3, [r3, #20]
 800454e:	617b      	str	r3, [r7, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8004550:	697b      	ldr	r3, [r7, #20]
 8004552:	f023 0307 	bic.w	r3, r3, #7
 8004556:	617b      	str	r3, [r7, #20]

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800455c:	697a      	ldr	r2, [r7, #20]
 800455e:	4313      	orrs	r3, r2
 8004560:	617b      	str	r3, [r7, #20]

  /* The FIFO threshold is not used when the FIFO mode is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8004562:	687b      	ldr	r3, [r7, #4]
 8004564:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004566:	2b04      	cmp	r3, #4
 8004568:	d117      	bne.n	800459a <HAL_DMA_Init+0x122>
  {
    /* Get the FIFO threshold */
    tmp |= hdma->Init.FIFOThreshold;
 800456a:	687b      	ldr	r3, [r7, #4]
 800456c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800456e:	697a      	ldr	r2, [r7, #20]
 8004570:	4313      	orrs	r3, r2
 8004572:	617b      	str	r3, [r7, #20]
    
    /* Check compatibility between FIFO threshold level and size of the memory burst */
    /* for INCR4, INCR8, INCR16 bursts */
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8004574:	687b      	ldr	r3, [r7, #4]
 8004576:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004578:	2b00      	cmp	r3, #0
 800457a:	d00e      	beq.n	800459a <HAL_DMA_Init+0x122>
    {
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 800457c:	6878      	ldr	r0, [r7, #4]
 800457e:	f000 fa91 	bl	8004aa4 <DMA_CheckFifoParam>
 8004582:	4603      	mov	r3, r0
 8004584:	2b00      	cmp	r3, #0
 8004586:	d008      	beq.n	800459a <HAL_DMA_Init+0x122>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8004588:	687b      	ldr	r3, [r7, #4]
 800458a:	2240      	movs	r2, #64	; 0x40
 800458c:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 800458e:	687b      	ldr	r3, [r7, #4]
 8004590:	2201      	movs	r2, #1
 8004592:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        
        return HAL_ERROR; 
 8004596:	2301      	movs	r3, #1
 8004598:	e016      	b.n	80045c8 <HAL_DMA_Init+0x150>
      }
    }
  }
  
  /* Write to DMA Stream FCR */
  hdma->Instance->FCR = tmp;
 800459a:	687b      	ldr	r3, [r7, #4]
 800459c:	681b      	ldr	r3, [r3, #0]
 800459e:	697a      	ldr	r2, [r7, #20]
 80045a0:	615a      	str	r2, [r3, #20]

  /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
     DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80045a2:	6878      	ldr	r0, [r7, #4]
 80045a4:	f000 fa48 	bl	8004a38 <DMA_CalcBaseAndBitshift>
 80045a8:	4603      	mov	r3, r0
 80045aa:	60fb      	str	r3, [r7, #12]
  
  /* Clear all interrupt flags */
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80045ac:	687b      	ldr	r3, [r7, #4]
 80045ae:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80045b0:	223f      	movs	r2, #63	; 0x3f
 80045b2:	409a      	lsls	r2, r3
 80045b4:	68fb      	ldr	r3, [r7, #12]
 80045b6:	609a      	str	r2, [r3, #8]

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80045b8:	687b      	ldr	r3, [r7, #4]
 80045ba:	2200      	movs	r2, #0
 80045bc:	655a      	str	r2, [r3, #84]	; 0x54
                                                                                     
  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 80045be:	687b      	ldr	r3, [r7, #4]
 80045c0:	2201      	movs	r2, #1
 80045c2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

  return HAL_OK;
 80045c6:	2300      	movs	r3, #0
}
 80045c8:	4618      	mov	r0, r3
 80045ca:	3718      	adds	r7, #24
 80045cc:	46bd      	mov	sp, r7
 80045ce:	bd80      	pop	{r7, pc}
 80045d0:	f010803f 	.word	0xf010803f

080045d4 <HAL_DMA_Start_IT>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 80045d4:	b580      	push	{r7, lr}
 80045d6:	b086      	sub	sp, #24
 80045d8:	af00      	add	r7, sp, #0
 80045da:	60f8      	str	r0, [r7, #12]
 80045dc:	60b9      	str	r1, [r7, #8]
 80045de:	607a      	str	r2, [r7, #4]
 80045e0:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80045e2:	2300      	movs	r3, #0
 80045e4:	75fb      	strb	r3, [r7, #23]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80045e6:	68fb      	ldr	r3, [r7, #12]
 80045e8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80045ea:	613b      	str	r3, [r7, #16]
  
  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 
  /* Process locked */
  __HAL_LOCK(hdma);
 80045ec:	68fb      	ldr	r3, [r7, #12]
 80045ee:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80045f2:	2b01      	cmp	r3, #1
 80045f4:	d101      	bne.n	80045fa <HAL_DMA_Start_IT+0x26>
 80045f6:	2302      	movs	r3, #2
 80045f8:	e040      	b.n	800467c <HAL_DMA_Start_IT+0xa8>
 80045fa:	68fb      	ldr	r3, [r7, #12]
 80045fc:	2201      	movs	r2, #1
 80045fe:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  
  if(HAL_DMA_STATE_READY == hdma->State)
 8004602:	68fb      	ldr	r3, [r7, #12]
 8004604:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004608:	b2db      	uxtb	r3, r3
 800460a:	2b01      	cmp	r3, #1
 800460c:	d12f      	bne.n	800466e <HAL_DMA_Start_IT+0x9a>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 800460e:	68fb      	ldr	r3, [r7, #12]
 8004610:	2202      	movs	r2, #2
 8004612:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004616:	68fb      	ldr	r3, [r7, #12]
 8004618:	2200      	movs	r2, #0
 800461a:	655a      	str	r2, [r3, #84]	; 0x54
    
    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 800461c:	683b      	ldr	r3, [r7, #0]
 800461e:	687a      	ldr	r2, [r7, #4]
 8004620:	68b9      	ldr	r1, [r7, #8]
 8004622:	68f8      	ldr	r0, [r7, #12]
 8004624:	f000 f9da 	bl	80049dc <DMA_SetConfig>
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8004628:	68fb      	ldr	r3, [r7, #12]
 800462a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800462c:	223f      	movs	r2, #63	; 0x3f
 800462e:	409a      	lsls	r2, r3
 8004630:	693b      	ldr	r3, [r7, #16]
 8004632:	609a      	str	r2, [r3, #8]
    
    /* Enable Common interrupts*/
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 8004634:	68fb      	ldr	r3, [r7, #12]
 8004636:	681b      	ldr	r3, [r3, #0]
 8004638:	681a      	ldr	r2, [r3, #0]
 800463a:	68fb      	ldr	r3, [r7, #12]
 800463c:	681b      	ldr	r3, [r3, #0]
 800463e:	f042 0216 	orr.w	r2, r2, #22
 8004642:	601a      	str	r2, [r3, #0]
    
    if(hdma->XferHalfCpltCallback != NULL)
 8004644:	68fb      	ldr	r3, [r7, #12]
 8004646:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004648:	2b00      	cmp	r3, #0
 800464a:	d007      	beq.n	800465c <HAL_DMA_Start_IT+0x88>
    {
      hdma->Instance->CR  |= DMA_IT_HT;
 800464c:	68fb      	ldr	r3, [r7, #12]
 800464e:	681b      	ldr	r3, [r3, #0]
 8004650:	681a      	ldr	r2, [r3, #0]
 8004652:	68fb      	ldr	r3, [r7, #12]
 8004654:	681b      	ldr	r3, [r3, #0]
 8004656:	f042 0208 	orr.w	r2, r2, #8
 800465a:	601a      	str	r2, [r3, #0]
    }
    
    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 800465c:	68fb      	ldr	r3, [r7, #12]
 800465e:	681b      	ldr	r3, [r3, #0]
 8004660:	681a      	ldr	r2, [r3, #0]
 8004662:	68fb      	ldr	r3, [r7, #12]
 8004664:	681b      	ldr	r3, [r3, #0]
 8004666:	f042 0201 	orr.w	r2, r2, #1
 800466a:	601a      	str	r2, [r3, #0]
 800466c:	e005      	b.n	800467a <HAL_DMA_Start_IT+0xa6>
  }
  else
  {
    /* Process unlocked */
    __HAL_UNLOCK(hdma);	  
 800466e:	68fb      	ldr	r3, [r7, #12]
 8004670:	2200      	movs	r2, #0
 8004672:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    /* Return error status */
    status = HAL_BUSY;
 8004676:	2302      	movs	r3, #2
 8004678:	75fb      	strb	r3, [r7, #23]
  }
  
  return status;
 800467a:	7dfb      	ldrb	r3, [r7, #23]
}
 800467c:	4618      	mov	r0, r3
 800467e:	3718      	adds	r7, #24
 8004680:	46bd      	mov	sp, r7
 8004682:	bd80      	pop	{r7, pc}

08004684 <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 8004684:	b480      	push	{r7}
 8004686:	b083      	sub	sp, #12
 8004688:	af00      	add	r7, sp, #0
 800468a:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004692:	b2db      	uxtb	r3, r3
 8004694:	2b02      	cmp	r3, #2
 8004696:	d004      	beq.n	80046a2 <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004698:	687b      	ldr	r3, [r7, #4]
 800469a:	2280      	movs	r2, #128	; 0x80
 800469c:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 800469e:	2301      	movs	r3, #1
 80046a0:	e00c      	b.n	80046bc <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 80046a2:	687b      	ldr	r3, [r7, #4]
 80046a4:	2205      	movs	r2, #5
 80046a6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 80046aa:	687b      	ldr	r3, [r7, #4]
 80046ac:	681b      	ldr	r3, [r3, #0]
 80046ae:	681a      	ldr	r2, [r3, #0]
 80046b0:	687b      	ldr	r3, [r7, #4]
 80046b2:	681b      	ldr	r3, [r3, #0]
 80046b4:	f022 0201 	bic.w	r2, r2, #1
 80046b8:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 80046ba:	2300      	movs	r3, #0
}
 80046bc:	4618      	mov	r0, r3
 80046be:	370c      	adds	r7, #12
 80046c0:	46bd      	mov	sp, r7
 80046c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046c6:	4770      	bx	lr

080046c8 <HAL_DMA_IRQHandler>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 80046c8:	b580      	push	{r7, lr}
 80046ca:	b086      	sub	sp, #24
 80046cc:	af00      	add	r7, sp, #0
 80046ce:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr;
  __IO uint32_t count = 0U;
 80046d0:	2300      	movs	r3, #0
 80046d2:	60bb      	str	r3, [r7, #8]
  uint32_t timeout = SystemCoreClock / 9600U;
 80046d4:	4b8e      	ldr	r3, [pc, #568]	; (8004910 <HAL_DMA_IRQHandler+0x248>)
 80046d6:	681b      	ldr	r3, [r3, #0]
 80046d8:	4a8e      	ldr	r2, [pc, #568]	; (8004914 <HAL_DMA_IRQHandler+0x24c>)
 80046da:	fba2 2303 	umull	r2, r3, r2, r3
 80046de:	0a9b      	lsrs	r3, r3, #10
 80046e0:	617b      	str	r3, [r7, #20]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80046e2:	687b      	ldr	r3, [r7, #4]
 80046e4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80046e6:	613b      	str	r3, [r7, #16]

  tmpisr = regs->ISR;
 80046e8:	693b      	ldr	r3, [r7, #16]
 80046ea:	681b      	ldr	r3, [r3, #0]
 80046ec:	60fb      	str	r3, [r7, #12]

  /* Transfer Error Interrupt management ***************************************/
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 80046ee:	687b      	ldr	r3, [r7, #4]
 80046f0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80046f2:	2208      	movs	r2, #8
 80046f4:	409a      	lsls	r2, r3
 80046f6:	68fb      	ldr	r3, [r7, #12]
 80046f8:	4013      	ands	r3, r2
 80046fa:	2b00      	cmp	r3, #0
 80046fc:	d01a      	beq.n	8004734 <HAL_DMA_IRQHandler+0x6c>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 80046fe:	687b      	ldr	r3, [r7, #4]
 8004700:	681b      	ldr	r3, [r3, #0]
 8004702:	681b      	ldr	r3, [r3, #0]
 8004704:	f003 0304 	and.w	r3, r3, #4
 8004708:	2b00      	cmp	r3, #0
 800470a:	d013      	beq.n	8004734 <HAL_DMA_IRQHandler+0x6c>
    {
      /* Disable the transfer error interrupt */
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 800470c:	687b      	ldr	r3, [r7, #4]
 800470e:	681b      	ldr	r3, [r3, #0]
 8004710:	681a      	ldr	r2, [r3, #0]
 8004712:	687b      	ldr	r3, [r7, #4]
 8004714:	681b      	ldr	r3, [r3, #0]
 8004716:	f022 0204 	bic.w	r2, r2, #4
 800471a:	601a      	str	r2, [r3, #0]
      
      /* Clear the transfer error flag */
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004720:	2208      	movs	r2, #8
 8004722:	409a      	lsls	r2, r3
 8004724:	693b      	ldr	r3, [r7, #16]
 8004726:	609a      	str	r2, [r3, #8]
      
      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8004728:	687b      	ldr	r3, [r7, #4]
 800472a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800472c:	f043 0201 	orr.w	r2, r3, #1
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* FIFO Error Interrupt management ******************************************/
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 8004734:	687b      	ldr	r3, [r7, #4]
 8004736:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004738:	2201      	movs	r2, #1
 800473a:	409a      	lsls	r2, r3
 800473c:	68fb      	ldr	r3, [r7, #12]
 800473e:	4013      	ands	r3, r2
 8004740:	2b00      	cmp	r3, #0
 8004742:	d012      	beq.n	800476a <HAL_DMA_IRQHandler+0xa2>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 8004744:	687b      	ldr	r3, [r7, #4]
 8004746:	681b      	ldr	r3, [r3, #0]
 8004748:	695b      	ldr	r3, [r3, #20]
 800474a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800474e:	2b00      	cmp	r3, #0
 8004750:	d00b      	beq.n	800476a <HAL_DMA_IRQHandler+0xa2>
    {
      /* Clear the FIFO error flag */
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 8004752:	687b      	ldr	r3, [r7, #4]
 8004754:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004756:	2201      	movs	r2, #1
 8004758:	409a      	lsls	r2, r3
 800475a:	693b      	ldr	r3, [r7, #16]
 800475c:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004762:	f043 0202 	orr.w	r2, r3, #2
 8004766:	687b      	ldr	r3, [r7, #4]
 8004768:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* Direct Mode Error Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 800476a:	687b      	ldr	r3, [r7, #4]
 800476c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800476e:	2204      	movs	r2, #4
 8004770:	409a      	lsls	r2, r3
 8004772:	68fb      	ldr	r3, [r7, #12]
 8004774:	4013      	ands	r3, r2
 8004776:	2b00      	cmp	r3, #0
 8004778:	d012      	beq.n	80047a0 <HAL_DMA_IRQHandler+0xd8>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 800477a:	687b      	ldr	r3, [r7, #4]
 800477c:	681b      	ldr	r3, [r3, #0]
 800477e:	681b      	ldr	r3, [r3, #0]
 8004780:	f003 0302 	and.w	r3, r3, #2
 8004784:	2b00      	cmp	r3, #0
 8004786:	d00b      	beq.n	80047a0 <HAL_DMA_IRQHandler+0xd8>
    {
      /* Clear the direct mode error flag */
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 8004788:	687b      	ldr	r3, [r7, #4]
 800478a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800478c:	2204      	movs	r2, #4
 800478e:	409a      	lsls	r2, r3
 8004790:	693b      	ldr	r3, [r7, #16]
 8004792:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004798:	f043 0204 	orr.w	r2, r3, #4
 800479c:	687b      	ldr	r3, [r7, #4]
 800479e:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* Half Transfer Complete Interrupt management ******************************/
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 80047a0:	687b      	ldr	r3, [r7, #4]
 80047a2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80047a4:	2210      	movs	r2, #16
 80047a6:	409a      	lsls	r2, r3
 80047a8:	68fb      	ldr	r3, [r7, #12]
 80047aa:	4013      	ands	r3, r2
 80047ac:	2b00      	cmp	r3, #0
 80047ae:	d043      	beq.n	8004838 <HAL_DMA_IRQHandler+0x170>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 80047b0:	687b      	ldr	r3, [r7, #4]
 80047b2:	681b      	ldr	r3, [r3, #0]
 80047b4:	681b      	ldr	r3, [r3, #0]
 80047b6:	f003 0308 	and.w	r3, r3, #8
 80047ba:	2b00      	cmp	r3, #0
 80047bc:	d03c      	beq.n	8004838 <HAL_DMA_IRQHandler+0x170>
    {
      /* Clear the half transfer complete flag */
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 80047be:	687b      	ldr	r3, [r7, #4]
 80047c0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80047c2:	2210      	movs	r2, #16
 80047c4:	409a      	lsls	r2, r3
 80047c6:	693b      	ldr	r3, [r7, #16]
 80047c8:	609a      	str	r2, [r3, #8]
      
      /* Multi_Buffering mode enabled */
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	681b      	ldr	r3, [r3, #0]
 80047ce:	681b      	ldr	r3, [r3, #0]
 80047d0:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80047d4:	2b00      	cmp	r3, #0
 80047d6:	d018      	beq.n	800480a <HAL_DMA_IRQHandler+0x142>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 80047d8:	687b      	ldr	r3, [r7, #4]
 80047da:	681b      	ldr	r3, [r3, #0]
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80047e2:	2b00      	cmp	r3, #0
 80047e4:	d108      	bne.n	80047f8 <HAL_DMA_IRQHandler+0x130>
        {
          if(hdma->XferHalfCpltCallback != NULL)
 80047e6:	687b      	ldr	r3, [r7, #4]
 80047e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80047ea:	2b00      	cmp	r3, #0
 80047ec:	d024      	beq.n	8004838 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 80047ee:	687b      	ldr	r3, [r7, #4]
 80047f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80047f2:	6878      	ldr	r0, [r7, #4]
 80047f4:	4798      	blx	r3
 80047f6:	e01f      	b.n	8004838 <HAL_DMA_IRQHandler+0x170>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80047fc:	2b00      	cmp	r3, #0
 80047fe:	d01b      	beq.n	8004838 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferM1HalfCpltCallback(hdma);
 8004800:	687b      	ldr	r3, [r7, #4]
 8004802:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004804:	6878      	ldr	r0, [r7, #4]
 8004806:	4798      	blx	r3
 8004808:	e016      	b.n	8004838 <HAL_DMA_IRQHandler+0x170>
        }
      }
      else
      {
        /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 800480a:	687b      	ldr	r3, [r7, #4]
 800480c:	681b      	ldr	r3, [r3, #0]
 800480e:	681b      	ldr	r3, [r3, #0]
 8004810:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004814:	2b00      	cmp	r3, #0
 8004816:	d107      	bne.n	8004828 <HAL_DMA_IRQHandler+0x160>
        {
          /* Disable the half transfer interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8004818:	687b      	ldr	r3, [r7, #4]
 800481a:	681b      	ldr	r3, [r3, #0]
 800481c:	681a      	ldr	r2, [r3, #0]
 800481e:	687b      	ldr	r3, [r7, #4]
 8004820:	681b      	ldr	r3, [r3, #0]
 8004822:	f022 0208 	bic.w	r2, r2, #8
 8004826:	601a      	str	r2, [r3, #0]
        }
        
        if(hdma->XferHalfCpltCallback != NULL)
 8004828:	687b      	ldr	r3, [r7, #4]
 800482a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800482c:	2b00      	cmp	r3, #0
 800482e:	d003      	beq.n	8004838 <HAL_DMA_IRQHandler+0x170>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 8004830:	687b      	ldr	r3, [r7, #4]
 8004832:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004834:	6878      	ldr	r0, [r7, #4]
 8004836:	4798      	blx	r3
        }
      }
    }
  }
  /* Transfer Complete Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8004838:	687b      	ldr	r3, [r7, #4]
 800483a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800483c:	2220      	movs	r2, #32
 800483e:	409a      	lsls	r2, r3
 8004840:	68fb      	ldr	r3, [r7, #12]
 8004842:	4013      	ands	r3, r2
 8004844:	2b00      	cmp	r3, #0
 8004846:	f000 808f 	beq.w	8004968 <HAL_DMA_IRQHandler+0x2a0>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 800484a:	687b      	ldr	r3, [r7, #4]
 800484c:	681b      	ldr	r3, [r3, #0]
 800484e:	681b      	ldr	r3, [r3, #0]
 8004850:	f003 0310 	and.w	r3, r3, #16
 8004854:	2b00      	cmp	r3, #0
 8004856:	f000 8087 	beq.w	8004968 <HAL_DMA_IRQHandler+0x2a0>
    {
      /* Clear the transfer complete flag */
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 800485a:	687b      	ldr	r3, [r7, #4]
 800485c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800485e:	2220      	movs	r2, #32
 8004860:	409a      	lsls	r2, r3
 8004862:	693b      	ldr	r3, [r7, #16]
 8004864:	609a      	str	r2, [r3, #8]
      
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8004866:	687b      	ldr	r3, [r7, #4]
 8004868:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800486c:	b2db      	uxtb	r3, r3
 800486e:	2b05      	cmp	r3, #5
 8004870:	d136      	bne.n	80048e0 <HAL_DMA_IRQHandler+0x218>
      {
        /* Disable all the transfer interrupts */
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8004872:	687b      	ldr	r3, [r7, #4]
 8004874:	681b      	ldr	r3, [r3, #0]
 8004876:	681a      	ldr	r2, [r3, #0]
 8004878:	687b      	ldr	r3, [r7, #4]
 800487a:	681b      	ldr	r3, [r3, #0]
 800487c:	f022 0216 	bic.w	r2, r2, #22
 8004880:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8004882:	687b      	ldr	r3, [r7, #4]
 8004884:	681b      	ldr	r3, [r3, #0]
 8004886:	695a      	ldr	r2, [r3, #20]
 8004888:	687b      	ldr	r3, [r7, #4]
 800488a:	681b      	ldr	r3, [r3, #0]
 800488c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004890:	615a      	str	r2, [r3, #20]
        
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8004892:	687b      	ldr	r3, [r7, #4]
 8004894:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004896:	2b00      	cmp	r3, #0
 8004898:	d103      	bne.n	80048a2 <HAL_DMA_IRQHandler+0x1da>
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800489e:	2b00      	cmp	r3, #0
 80048a0:	d007      	beq.n	80048b2 <HAL_DMA_IRQHandler+0x1ea>
        {
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 80048a2:	687b      	ldr	r3, [r7, #4]
 80048a4:	681b      	ldr	r3, [r3, #0]
 80048a6:	681a      	ldr	r2, [r3, #0]
 80048a8:	687b      	ldr	r3, [r7, #4]
 80048aa:	681b      	ldr	r3, [r3, #0]
 80048ac:	f022 0208 	bic.w	r2, r2, #8
 80048b0:	601a      	str	r2, [r3, #0]
        }

        /* Clear all interrupt flags at correct offset within the register */
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80048b6:	223f      	movs	r2, #63	; 0x3f
 80048b8:	409a      	lsls	r2, r3
 80048ba:	693b      	ldr	r3, [r7, #16]
 80048bc:	609a      	str	r2, [r3, #8]

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 80048be:	687b      	ldr	r3, [r7, #4]
 80048c0:	2201      	movs	r2, #1
 80048c2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 80048c6:	687b      	ldr	r3, [r7, #4]
 80048c8:	2200      	movs	r2, #0
 80048ca:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

        if(hdma->XferAbortCallback != NULL)
 80048ce:	687b      	ldr	r3, [r7, #4]
 80048d0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80048d2:	2b00      	cmp	r3, #0
 80048d4:	d07e      	beq.n	80049d4 <HAL_DMA_IRQHandler+0x30c>
        {
          hdma->XferAbortCallback(hdma);
 80048d6:	687b      	ldr	r3, [r7, #4]
 80048d8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80048da:	6878      	ldr	r0, [r7, #4]
 80048dc:	4798      	blx	r3
        }
        return;
 80048de:	e079      	b.n	80049d4 <HAL_DMA_IRQHandler+0x30c>
      }

      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80048e0:	687b      	ldr	r3, [r7, #4]
 80048e2:	681b      	ldr	r3, [r3, #0]
 80048e4:	681b      	ldr	r3, [r3, #0]
 80048e6:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80048ea:	2b00      	cmp	r3, #0
 80048ec:	d01d      	beq.n	800492a <HAL_DMA_IRQHandler+0x262>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 80048ee:	687b      	ldr	r3, [r7, #4]
 80048f0:	681b      	ldr	r3, [r3, #0]
 80048f2:	681b      	ldr	r3, [r3, #0]
 80048f4:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80048f8:	2b00      	cmp	r3, #0
 80048fa:	d10d      	bne.n	8004918 <HAL_DMA_IRQHandler+0x250>
        {
          if(hdma->XferM1CpltCallback != NULL)
 80048fc:	687b      	ldr	r3, [r7, #4]
 80048fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004900:	2b00      	cmp	r3, #0
 8004902:	d031      	beq.n	8004968 <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory1 */
            hdma->XferM1CpltCallback(hdma);
 8004904:	687b      	ldr	r3, [r7, #4]
 8004906:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004908:	6878      	ldr	r0, [r7, #4]
 800490a:	4798      	blx	r3
 800490c:	e02c      	b.n	8004968 <HAL_DMA_IRQHandler+0x2a0>
 800490e:	bf00      	nop
 8004910:	20000004 	.word	0x20000004
 8004914:	1b4e81b5 	.word	0x1b4e81b5
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 8004918:	687b      	ldr	r3, [r7, #4]
 800491a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800491c:	2b00      	cmp	r3, #0
 800491e:	d023      	beq.n	8004968 <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory0 */
            hdma->XferCpltCallback(hdma);
 8004920:	687b      	ldr	r3, [r7, #4]
 8004922:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004924:	6878      	ldr	r0, [r7, #4]
 8004926:	4798      	blx	r3
 8004928:	e01e      	b.n	8004968 <HAL_DMA_IRQHandler+0x2a0>
        }
      }
      /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
      else
      {
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 800492a:	687b      	ldr	r3, [r7, #4]
 800492c:	681b      	ldr	r3, [r3, #0]
 800492e:	681b      	ldr	r3, [r3, #0]
 8004930:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004934:	2b00      	cmp	r3, #0
 8004936:	d10f      	bne.n	8004958 <HAL_DMA_IRQHandler+0x290>
        {
          /* Disable the transfer complete interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 8004938:	687b      	ldr	r3, [r7, #4]
 800493a:	681b      	ldr	r3, [r3, #0]
 800493c:	681a      	ldr	r2, [r3, #0]
 800493e:	687b      	ldr	r3, [r7, #4]
 8004940:	681b      	ldr	r3, [r3, #0]
 8004942:	f022 0210 	bic.w	r2, r2, #16
 8004946:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8004948:	687b      	ldr	r3, [r7, #4]
 800494a:	2201      	movs	r2, #1
 800494c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 8004950:	687b      	ldr	r3, [r7, #4]
 8004952:	2200      	movs	r2, #0
 8004954:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        }

        if(hdma->XferCpltCallback != NULL)
 8004958:	687b      	ldr	r3, [r7, #4]
 800495a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800495c:	2b00      	cmp	r3, #0
 800495e:	d003      	beq.n	8004968 <HAL_DMA_IRQHandler+0x2a0>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 8004960:	687b      	ldr	r3, [r7, #4]
 8004962:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004964:	6878      	ldr	r0, [r7, #4]
 8004966:	4798      	blx	r3
      }
    }
  }
  
  /* manage error case */
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8004968:	687b      	ldr	r3, [r7, #4]
 800496a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800496c:	2b00      	cmp	r3, #0
 800496e:	d032      	beq.n	80049d6 <HAL_DMA_IRQHandler+0x30e>
  {
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 8004970:	687b      	ldr	r3, [r7, #4]
 8004972:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004974:	f003 0301 	and.w	r3, r3, #1
 8004978:	2b00      	cmp	r3, #0
 800497a:	d022      	beq.n	80049c2 <HAL_DMA_IRQHandler+0x2fa>
    {
      hdma->State = HAL_DMA_STATE_ABORT;
 800497c:	687b      	ldr	r3, [r7, #4]
 800497e:	2205      	movs	r2, #5
 8004980:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 8004984:	687b      	ldr	r3, [r7, #4]
 8004986:	681b      	ldr	r3, [r3, #0]
 8004988:	681a      	ldr	r2, [r3, #0]
 800498a:	687b      	ldr	r3, [r7, #4]
 800498c:	681b      	ldr	r3, [r3, #0]
 800498e:	f022 0201 	bic.w	r2, r2, #1
 8004992:	601a      	str	r2, [r3, #0]

      do
      {
        if (++count > timeout)
 8004994:	68bb      	ldr	r3, [r7, #8]
 8004996:	3301      	adds	r3, #1
 8004998:	60bb      	str	r3, [r7, #8]
 800499a:	697a      	ldr	r2, [r7, #20]
 800499c:	429a      	cmp	r2, r3
 800499e:	d307      	bcc.n	80049b0 <HAL_DMA_IRQHandler+0x2e8>
        {
          break;
        }
      }
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	681b      	ldr	r3, [r3, #0]
 80049a4:	681b      	ldr	r3, [r3, #0]
 80049a6:	f003 0301 	and.w	r3, r3, #1
 80049aa:	2b00      	cmp	r3, #0
 80049ac:	d1f2      	bne.n	8004994 <HAL_DMA_IRQHandler+0x2cc>
 80049ae:	e000      	b.n	80049b2 <HAL_DMA_IRQHandler+0x2ea>
          break;
 80049b0:	bf00      	nop

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 80049b2:	687b      	ldr	r3, [r7, #4]
 80049b4:	2201      	movs	r2, #1
 80049b6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 80049ba:	687b      	ldr	r3, [r7, #4]
 80049bc:	2200      	movs	r2, #0
 80049be:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }

    if(hdma->XferErrorCallback != NULL)
 80049c2:	687b      	ldr	r3, [r7, #4]
 80049c4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80049c6:	2b00      	cmp	r3, #0
 80049c8:	d005      	beq.n	80049d6 <HAL_DMA_IRQHandler+0x30e>
    {
      /* Transfer error callback */
      hdma->XferErrorCallback(hdma);
 80049ca:	687b      	ldr	r3, [r7, #4]
 80049cc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80049ce:	6878      	ldr	r0, [r7, #4]
 80049d0:	4798      	blx	r3
 80049d2:	e000      	b.n	80049d6 <HAL_DMA_IRQHandler+0x30e>
        return;
 80049d4:	bf00      	nop
    }
  }
}
 80049d6:	3718      	adds	r7, #24
 80049d8:	46bd      	mov	sp, r7
 80049da:	bd80      	pop	{r7, pc}

080049dc <DMA_SetConfig>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 80049dc:	b480      	push	{r7}
 80049de:	b085      	sub	sp, #20
 80049e0:	af00      	add	r7, sp, #0
 80049e2:	60f8      	str	r0, [r7, #12]
 80049e4:	60b9      	str	r1, [r7, #8]
 80049e6:	607a      	str	r2, [r7, #4]
 80049e8:	603b      	str	r3, [r7, #0]
  /* Clear DBM bit */
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 80049ea:	68fb      	ldr	r3, [r7, #12]
 80049ec:	681b      	ldr	r3, [r3, #0]
 80049ee:	681a      	ldr	r2, [r3, #0]
 80049f0:	68fb      	ldr	r3, [r7, #12]
 80049f2:	681b      	ldr	r3, [r3, #0]
 80049f4:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80049f8:	601a      	str	r2, [r3, #0]

  /* Configure DMA Stream data length */
  hdma->Instance->NDTR = DataLength;
 80049fa:	68fb      	ldr	r3, [r7, #12]
 80049fc:	681b      	ldr	r3, [r3, #0]
 80049fe:	683a      	ldr	r2, [r7, #0]
 8004a00:	605a      	str	r2, [r3, #4]

  /* Memory to Peripheral */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8004a02:	68fb      	ldr	r3, [r7, #12]
 8004a04:	689b      	ldr	r3, [r3, #8]
 8004a06:	2b40      	cmp	r3, #64	; 0x40
 8004a08:	d108      	bne.n	8004a1c <DMA_SetConfig+0x40>
  {
    /* Configure DMA Stream destination address */
    hdma->Instance->PAR = DstAddress;
 8004a0a:	68fb      	ldr	r3, [r7, #12]
 8004a0c:	681b      	ldr	r3, [r3, #0]
 8004a0e:	687a      	ldr	r2, [r7, #4]
 8004a10:	609a      	str	r2, [r3, #8]

    /* Configure DMA Stream source address */
    hdma->Instance->M0AR = SrcAddress;
 8004a12:	68fb      	ldr	r3, [r7, #12]
 8004a14:	681b      	ldr	r3, [r3, #0]
 8004a16:	68ba      	ldr	r2, [r7, #8]
 8004a18:	60da      	str	r2, [r3, #12]
    hdma->Instance->PAR = SrcAddress;

    /* Configure DMA Stream destination address */
    hdma->Instance->M0AR = DstAddress;
  }
}
 8004a1a:	e007      	b.n	8004a2c <DMA_SetConfig+0x50>
    hdma->Instance->PAR = SrcAddress;
 8004a1c:	68fb      	ldr	r3, [r7, #12]
 8004a1e:	681b      	ldr	r3, [r3, #0]
 8004a20:	68ba      	ldr	r2, [r7, #8]
 8004a22:	609a      	str	r2, [r3, #8]
    hdma->Instance->M0AR = DstAddress;
 8004a24:	68fb      	ldr	r3, [r7, #12]
 8004a26:	681b      	ldr	r3, [r3, #0]
 8004a28:	687a      	ldr	r2, [r7, #4]
 8004a2a:	60da      	str	r2, [r3, #12]
}
 8004a2c:	bf00      	nop
 8004a2e:	3714      	adds	r7, #20
 8004a30:	46bd      	mov	sp, r7
 8004a32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a36:	4770      	bx	lr

08004a38 <DMA_CalcBaseAndBitshift>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 8004a38:	b480      	push	{r7}
 8004a3a:	b085      	sub	sp, #20
 8004a3c:	af00      	add	r7, sp, #0
 8004a3e:	6078      	str	r0, [r7, #4]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8004a40:	687b      	ldr	r3, [r7, #4]
 8004a42:	681b      	ldr	r3, [r3, #0]
 8004a44:	b2db      	uxtb	r3, r3
 8004a46:	3b10      	subs	r3, #16
 8004a48:	4a14      	ldr	r2, [pc, #80]	; (8004a9c <DMA_CalcBaseAndBitshift+0x64>)
 8004a4a:	fba2 2303 	umull	r2, r3, r2, r3
 8004a4e:	091b      	lsrs	r3, r3, #4
 8004a50:	60fb      	str	r3, [r7, #12]
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8004a52:	4a13      	ldr	r2, [pc, #76]	; (8004aa0 <DMA_CalcBaseAndBitshift+0x68>)
 8004a54:	68fb      	ldr	r3, [r7, #12]
 8004a56:	4413      	add	r3, r2
 8004a58:	781b      	ldrb	r3, [r3, #0]
 8004a5a:	461a      	mov	r2, r3
 8004a5c:	687b      	ldr	r3, [r7, #4]
 8004a5e:	65da      	str	r2, [r3, #92]	; 0x5c
  
  if (stream_number > 3U)
 8004a60:	68fb      	ldr	r3, [r7, #12]
 8004a62:	2b03      	cmp	r3, #3
 8004a64:	d909      	bls.n	8004a7a <DMA_CalcBaseAndBitshift+0x42>
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8004a66:	687b      	ldr	r3, [r7, #4]
 8004a68:	681b      	ldr	r3, [r3, #0]
 8004a6a:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8004a6e:	f023 0303 	bic.w	r3, r3, #3
 8004a72:	1d1a      	adds	r2, r3, #4
 8004a74:	687b      	ldr	r3, [r7, #4]
 8004a76:	659a      	str	r2, [r3, #88]	; 0x58
 8004a78:	e007      	b.n	8004a8a <DMA_CalcBaseAndBitshift+0x52>
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 8004a7a:	687b      	ldr	r3, [r7, #4]
 8004a7c:	681b      	ldr	r3, [r3, #0]
 8004a7e:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8004a82:	f023 0303 	bic.w	r3, r3, #3
 8004a86:	687a      	ldr	r2, [r7, #4]
 8004a88:	6593      	str	r3, [r2, #88]	; 0x58
  }
  
  return hdma->StreamBaseAddress;
 8004a8a:	687b      	ldr	r3, [r7, #4]
 8004a8c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
}
 8004a8e:	4618      	mov	r0, r3
 8004a90:	3714      	adds	r7, #20
 8004a92:	46bd      	mov	sp, r7
 8004a94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a98:	4770      	bx	lr
 8004a9a:	bf00      	nop
 8004a9c:	aaaaaaab 	.word	0xaaaaaaab
 8004aa0:	0802dc74 	.word	0x0802dc74

08004aa4 <DMA_CheckFifoParam>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8004aa4:	b480      	push	{r7}
 8004aa6:	b085      	sub	sp, #20
 8004aa8:	af00      	add	r7, sp, #0
 8004aaa:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8004aac:	2300      	movs	r3, #0
 8004aae:	73fb      	strb	r3, [r7, #15]
  uint32_t tmp = hdma->Init.FIFOThreshold;
 8004ab0:	687b      	ldr	r3, [r7, #4]
 8004ab2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004ab4:	60bb      	str	r3, [r7, #8]
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8004ab6:	687b      	ldr	r3, [r7, #4]
 8004ab8:	699b      	ldr	r3, [r3, #24]
 8004aba:	2b00      	cmp	r3, #0
 8004abc:	d11f      	bne.n	8004afe <DMA_CheckFifoParam+0x5a>
  {
    switch (tmp)
 8004abe:	68bb      	ldr	r3, [r7, #8]
 8004ac0:	2b03      	cmp	r3, #3
 8004ac2:	d856      	bhi.n	8004b72 <DMA_CheckFifoParam+0xce>
 8004ac4:	a201      	add	r2, pc, #4	; (adr r2, 8004acc <DMA_CheckFifoParam+0x28>)
 8004ac6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004aca:	bf00      	nop
 8004acc:	08004add 	.word	0x08004add
 8004ad0:	08004aef 	.word	0x08004aef
 8004ad4:	08004add 	.word	0x08004add
 8004ad8:	08004b73 	.word	0x08004b73
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8004adc:	687b      	ldr	r3, [r7, #4]
 8004ade:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004ae0:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004ae4:	2b00      	cmp	r3, #0
 8004ae6:	d046      	beq.n	8004b76 <DMA_CheckFifoParam+0xd2>
      {
        status = HAL_ERROR;
 8004ae8:	2301      	movs	r3, #1
 8004aea:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8004aec:	e043      	b.n	8004b76 <DMA_CheckFifoParam+0xd2>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8004aee:	687b      	ldr	r3, [r7, #4]
 8004af0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004af2:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8004af6:	d140      	bne.n	8004b7a <DMA_CheckFifoParam+0xd6>
      {
        status = HAL_ERROR;
 8004af8:	2301      	movs	r3, #1
 8004afa:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8004afc:	e03d      	b.n	8004b7a <DMA_CheckFifoParam+0xd6>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8004afe:	687b      	ldr	r3, [r7, #4]
 8004b00:	699b      	ldr	r3, [r3, #24]
 8004b02:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004b06:	d121      	bne.n	8004b4c <DMA_CheckFifoParam+0xa8>
  {
    switch (tmp)
 8004b08:	68bb      	ldr	r3, [r7, #8]
 8004b0a:	2b03      	cmp	r3, #3
 8004b0c:	d837      	bhi.n	8004b7e <DMA_CheckFifoParam+0xda>
 8004b0e:	a201      	add	r2, pc, #4	; (adr r2, 8004b14 <DMA_CheckFifoParam+0x70>)
 8004b10:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004b14:	08004b25 	.word	0x08004b25
 8004b18:	08004b2b 	.word	0x08004b2b
 8004b1c:	08004b25 	.word	0x08004b25
 8004b20:	08004b3d 	.word	0x08004b3d
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
 8004b24:	2301      	movs	r3, #1
 8004b26:	73fb      	strb	r3, [r7, #15]
      break;
 8004b28:	e030      	b.n	8004b8c <DMA_CheckFifoParam+0xe8>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8004b2a:	687b      	ldr	r3, [r7, #4]
 8004b2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004b2e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004b32:	2b00      	cmp	r3, #0
 8004b34:	d025      	beq.n	8004b82 <DMA_CheckFifoParam+0xde>
      {
        status = HAL_ERROR;
 8004b36:	2301      	movs	r3, #1
 8004b38:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8004b3a:	e022      	b.n	8004b82 <DMA_CheckFifoParam+0xde>
    case DMA_FIFO_THRESHOLD_FULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8004b3c:	687b      	ldr	r3, [r7, #4]
 8004b3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004b40:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8004b44:	d11f      	bne.n	8004b86 <DMA_CheckFifoParam+0xe2>
      {
        status = HAL_ERROR;
 8004b46:	2301      	movs	r3, #1
 8004b48:	73fb      	strb	r3, [r7, #15]
      }
      break;   
 8004b4a:	e01c      	b.n	8004b86 <DMA_CheckFifoParam+0xe2>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8004b4c:	68bb      	ldr	r3, [r7, #8]
 8004b4e:	2b02      	cmp	r3, #2
 8004b50:	d903      	bls.n	8004b5a <DMA_CheckFifoParam+0xb6>
 8004b52:	68bb      	ldr	r3, [r7, #8]
 8004b54:	2b03      	cmp	r3, #3
 8004b56:	d003      	beq.n	8004b60 <DMA_CheckFifoParam+0xbc>
      {
        status = HAL_ERROR;
      }
      break;
    default:
      break;
 8004b58:	e018      	b.n	8004b8c <DMA_CheckFifoParam+0xe8>
      status = HAL_ERROR;
 8004b5a:	2301      	movs	r3, #1
 8004b5c:	73fb      	strb	r3, [r7, #15]
      break;
 8004b5e:	e015      	b.n	8004b8c <DMA_CheckFifoParam+0xe8>
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8004b60:	687b      	ldr	r3, [r7, #4]
 8004b62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004b64:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004b68:	2b00      	cmp	r3, #0
 8004b6a:	d00e      	beq.n	8004b8a <DMA_CheckFifoParam+0xe6>
        status = HAL_ERROR;
 8004b6c:	2301      	movs	r3, #1
 8004b6e:	73fb      	strb	r3, [r7, #15]
      break;
 8004b70:	e00b      	b.n	8004b8a <DMA_CheckFifoParam+0xe6>
      break;
 8004b72:	bf00      	nop
 8004b74:	e00a      	b.n	8004b8c <DMA_CheckFifoParam+0xe8>
      break;
 8004b76:	bf00      	nop
 8004b78:	e008      	b.n	8004b8c <DMA_CheckFifoParam+0xe8>
      break;
 8004b7a:	bf00      	nop
 8004b7c:	e006      	b.n	8004b8c <DMA_CheckFifoParam+0xe8>
      break;
 8004b7e:	bf00      	nop
 8004b80:	e004      	b.n	8004b8c <DMA_CheckFifoParam+0xe8>
      break;
 8004b82:	bf00      	nop
 8004b84:	e002      	b.n	8004b8c <DMA_CheckFifoParam+0xe8>
      break;   
 8004b86:	bf00      	nop
 8004b88:	e000      	b.n	8004b8c <DMA_CheckFifoParam+0xe8>
      break;
 8004b8a:	bf00      	nop
    }
  } 
  
  return status; 
 8004b8c:	7bfb      	ldrb	r3, [r7, #15]
}
 8004b8e:	4618      	mov	r0, r3
 8004b90:	3714      	adds	r7, #20
 8004b92:	46bd      	mov	sp, r7
 8004b94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b98:	4770      	bx	lr
 8004b9a:	bf00      	nop

08004b9c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004b9c:	b480      	push	{r7}
 8004b9e:	b089      	sub	sp, #36	; 0x24
 8004ba0:	af00      	add	r7, sp, #0
 8004ba2:	6078      	str	r0, [r7, #4]
 8004ba4:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8004ba6:	2300      	movs	r3, #0
 8004ba8:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8004baa:	2300      	movs	r3, #0
 8004bac:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8004bae:	2300      	movs	r3, #0
 8004bb0:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004bb2:	2300      	movs	r3, #0
 8004bb4:	61fb      	str	r3, [r7, #28]
 8004bb6:	e159      	b.n	8004e6c <HAL_GPIO_Init+0x2d0>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8004bb8:	2201      	movs	r2, #1
 8004bba:	69fb      	ldr	r3, [r7, #28]
 8004bbc:	fa02 f303 	lsl.w	r3, r2, r3
 8004bc0:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004bc2:	683b      	ldr	r3, [r7, #0]
 8004bc4:	681b      	ldr	r3, [r3, #0]
 8004bc6:	697a      	ldr	r2, [r7, #20]
 8004bc8:	4013      	ands	r3, r2
 8004bca:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8004bcc:	693a      	ldr	r2, [r7, #16]
 8004bce:	697b      	ldr	r3, [r7, #20]
 8004bd0:	429a      	cmp	r2, r3
 8004bd2:	f040 8148 	bne.w	8004e66 <HAL_GPIO_Init+0x2ca>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004bd6:	683b      	ldr	r3, [r7, #0]
 8004bd8:	685b      	ldr	r3, [r3, #4]
 8004bda:	f003 0303 	and.w	r3, r3, #3
 8004bde:	2b01      	cmp	r3, #1
 8004be0:	d005      	beq.n	8004bee <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004be2:	683b      	ldr	r3, [r7, #0]
 8004be4:	685b      	ldr	r3, [r3, #4]
 8004be6:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004bea:	2b02      	cmp	r3, #2
 8004bec:	d130      	bne.n	8004c50 <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8004bee:	687b      	ldr	r3, [r7, #4]
 8004bf0:	689b      	ldr	r3, [r3, #8]
 8004bf2:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004bf4:	69fb      	ldr	r3, [r7, #28]
 8004bf6:	005b      	lsls	r3, r3, #1
 8004bf8:	2203      	movs	r2, #3
 8004bfa:	fa02 f303 	lsl.w	r3, r2, r3
 8004bfe:	43db      	mvns	r3, r3
 8004c00:	69ba      	ldr	r2, [r7, #24]
 8004c02:	4013      	ands	r3, r2
 8004c04:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004c06:	683b      	ldr	r3, [r7, #0]
 8004c08:	68da      	ldr	r2, [r3, #12]
 8004c0a:	69fb      	ldr	r3, [r7, #28]
 8004c0c:	005b      	lsls	r3, r3, #1
 8004c0e:	fa02 f303 	lsl.w	r3, r2, r3
 8004c12:	69ba      	ldr	r2, [r7, #24]
 8004c14:	4313      	orrs	r3, r2
 8004c16:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8004c18:	687b      	ldr	r3, [r7, #4]
 8004c1a:	69ba      	ldr	r2, [r7, #24]
 8004c1c:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8004c1e:	687b      	ldr	r3, [r7, #4]
 8004c20:	685b      	ldr	r3, [r3, #4]
 8004c22:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004c24:	2201      	movs	r2, #1
 8004c26:	69fb      	ldr	r3, [r7, #28]
 8004c28:	fa02 f303 	lsl.w	r3, r2, r3
 8004c2c:	43db      	mvns	r3, r3
 8004c2e:	69ba      	ldr	r2, [r7, #24]
 8004c30:	4013      	ands	r3, r2
 8004c32:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004c34:	683b      	ldr	r3, [r7, #0]
 8004c36:	685b      	ldr	r3, [r3, #4]
 8004c38:	091b      	lsrs	r3, r3, #4
 8004c3a:	f003 0201 	and.w	r2, r3, #1
 8004c3e:	69fb      	ldr	r3, [r7, #28]
 8004c40:	fa02 f303 	lsl.w	r3, r2, r3
 8004c44:	69ba      	ldr	r2, [r7, #24]
 8004c46:	4313      	orrs	r3, r2
 8004c48:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8004c4a:	687b      	ldr	r3, [r7, #4]
 8004c4c:	69ba      	ldr	r2, [r7, #24]
 8004c4e:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004c50:	683b      	ldr	r3, [r7, #0]
 8004c52:	685b      	ldr	r3, [r3, #4]
 8004c54:	f003 0303 	and.w	r3, r3, #3
 8004c58:	2b03      	cmp	r3, #3
 8004c5a:	d017      	beq.n	8004c8c <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	68db      	ldr	r3, [r3, #12]
 8004c60:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004c62:	69fb      	ldr	r3, [r7, #28]
 8004c64:	005b      	lsls	r3, r3, #1
 8004c66:	2203      	movs	r2, #3
 8004c68:	fa02 f303 	lsl.w	r3, r2, r3
 8004c6c:	43db      	mvns	r3, r3
 8004c6e:	69ba      	ldr	r2, [r7, #24]
 8004c70:	4013      	ands	r3, r2
 8004c72:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004c74:	683b      	ldr	r3, [r7, #0]
 8004c76:	689a      	ldr	r2, [r3, #8]
 8004c78:	69fb      	ldr	r3, [r7, #28]
 8004c7a:	005b      	lsls	r3, r3, #1
 8004c7c:	fa02 f303 	lsl.w	r3, r2, r3
 8004c80:	69ba      	ldr	r2, [r7, #24]
 8004c82:	4313      	orrs	r3, r2
 8004c84:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 8004c86:	687b      	ldr	r3, [r7, #4]
 8004c88:	69ba      	ldr	r2, [r7, #24]
 8004c8a:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004c8c:	683b      	ldr	r3, [r7, #0]
 8004c8e:	685b      	ldr	r3, [r3, #4]
 8004c90:	f003 0303 	and.w	r3, r3, #3
 8004c94:	2b02      	cmp	r3, #2
 8004c96:	d123      	bne.n	8004ce0 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8004c98:	69fb      	ldr	r3, [r7, #28]
 8004c9a:	08da      	lsrs	r2, r3, #3
 8004c9c:	687b      	ldr	r3, [r7, #4]
 8004c9e:	3208      	adds	r2, #8
 8004ca0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004ca4:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004ca6:	69fb      	ldr	r3, [r7, #28]
 8004ca8:	f003 0307 	and.w	r3, r3, #7
 8004cac:	009b      	lsls	r3, r3, #2
 8004cae:	220f      	movs	r2, #15
 8004cb0:	fa02 f303 	lsl.w	r3, r2, r3
 8004cb4:	43db      	mvns	r3, r3
 8004cb6:	69ba      	ldr	r2, [r7, #24]
 8004cb8:	4013      	ands	r3, r2
 8004cba:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8004cbc:	683b      	ldr	r3, [r7, #0]
 8004cbe:	691a      	ldr	r2, [r3, #16]
 8004cc0:	69fb      	ldr	r3, [r7, #28]
 8004cc2:	f003 0307 	and.w	r3, r3, #7
 8004cc6:	009b      	lsls	r3, r3, #2
 8004cc8:	fa02 f303 	lsl.w	r3, r2, r3
 8004ccc:	69ba      	ldr	r2, [r7, #24]
 8004cce:	4313      	orrs	r3, r2
 8004cd0:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8004cd2:	69fb      	ldr	r3, [r7, #28]
 8004cd4:	08da      	lsrs	r2, r3, #3
 8004cd6:	687b      	ldr	r3, [r7, #4]
 8004cd8:	3208      	adds	r2, #8
 8004cda:	69b9      	ldr	r1, [r7, #24]
 8004cdc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	681b      	ldr	r3, [r3, #0]
 8004ce4:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004ce6:	69fb      	ldr	r3, [r7, #28]
 8004ce8:	005b      	lsls	r3, r3, #1
 8004cea:	2203      	movs	r2, #3
 8004cec:	fa02 f303 	lsl.w	r3, r2, r3
 8004cf0:	43db      	mvns	r3, r3
 8004cf2:	69ba      	ldr	r2, [r7, #24]
 8004cf4:	4013      	ands	r3, r2
 8004cf6:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004cf8:	683b      	ldr	r3, [r7, #0]
 8004cfa:	685b      	ldr	r3, [r3, #4]
 8004cfc:	f003 0203 	and.w	r2, r3, #3
 8004d00:	69fb      	ldr	r3, [r7, #28]
 8004d02:	005b      	lsls	r3, r3, #1
 8004d04:	fa02 f303 	lsl.w	r3, r2, r3
 8004d08:	69ba      	ldr	r2, [r7, #24]
 8004d0a:	4313      	orrs	r3, r2
 8004d0c:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8004d0e:	687b      	ldr	r3, [r7, #4]
 8004d10:	69ba      	ldr	r2, [r7, #24]
 8004d12:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004d14:	683b      	ldr	r3, [r7, #0]
 8004d16:	685b      	ldr	r3, [r3, #4]
 8004d18:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8004d1c:	2b00      	cmp	r3, #0
 8004d1e:	f000 80a2 	beq.w	8004e66 <HAL_GPIO_Init+0x2ca>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004d22:	2300      	movs	r3, #0
 8004d24:	60fb      	str	r3, [r7, #12]
 8004d26:	4b57      	ldr	r3, [pc, #348]	; (8004e84 <HAL_GPIO_Init+0x2e8>)
 8004d28:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004d2a:	4a56      	ldr	r2, [pc, #344]	; (8004e84 <HAL_GPIO_Init+0x2e8>)
 8004d2c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004d30:	6453      	str	r3, [r2, #68]	; 0x44
 8004d32:	4b54      	ldr	r3, [pc, #336]	; (8004e84 <HAL_GPIO_Init+0x2e8>)
 8004d34:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004d36:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004d3a:	60fb      	str	r3, [r7, #12]
 8004d3c:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8004d3e:	4a52      	ldr	r2, [pc, #328]	; (8004e88 <HAL_GPIO_Init+0x2ec>)
 8004d40:	69fb      	ldr	r3, [r7, #28]
 8004d42:	089b      	lsrs	r3, r3, #2
 8004d44:	3302      	adds	r3, #2
 8004d46:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004d4a:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004d4c:	69fb      	ldr	r3, [r7, #28]
 8004d4e:	f003 0303 	and.w	r3, r3, #3
 8004d52:	009b      	lsls	r3, r3, #2
 8004d54:	220f      	movs	r2, #15
 8004d56:	fa02 f303 	lsl.w	r3, r2, r3
 8004d5a:	43db      	mvns	r3, r3
 8004d5c:	69ba      	ldr	r2, [r7, #24]
 8004d5e:	4013      	ands	r3, r2
 8004d60:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004d62:	687b      	ldr	r3, [r7, #4]
 8004d64:	4a49      	ldr	r2, [pc, #292]	; (8004e8c <HAL_GPIO_Init+0x2f0>)
 8004d66:	4293      	cmp	r3, r2
 8004d68:	d019      	beq.n	8004d9e <HAL_GPIO_Init+0x202>
 8004d6a:	687b      	ldr	r3, [r7, #4]
 8004d6c:	4a48      	ldr	r2, [pc, #288]	; (8004e90 <HAL_GPIO_Init+0x2f4>)
 8004d6e:	4293      	cmp	r3, r2
 8004d70:	d013      	beq.n	8004d9a <HAL_GPIO_Init+0x1fe>
 8004d72:	687b      	ldr	r3, [r7, #4]
 8004d74:	4a47      	ldr	r2, [pc, #284]	; (8004e94 <HAL_GPIO_Init+0x2f8>)
 8004d76:	4293      	cmp	r3, r2
 8004d78:	d00d      	beq.n	8004d96 <HAL_GPIO_Init+0x1fa>
 8004d7a:	687b      	ldr	r3, [r7, #4]
 8004d7c:	4a46      	ldr	r2, [pc, #280]	; (8004e98 <HAL_GPIO_Init+0x2fc>)
 8004d7e:	4293      	cmp	r3, r2
 8004d80:	d007      	beq.n	8004d92 <HAL_GPIO_Init+0x1f6>
 8004d82:	687b      	ldr	r3, [r7, #4]
 8004d84:	4a45      	ldr	r2, [pc, #276]	; (8004e9c <HAL_GPIO_Init+0x300>)
 8004d86:	4293      	cmp	r3, r2
 8004d88:	d101      	bne.n	8004d8e <HAL_GPIO_Init+0x1f2>
 8004d8a:	2304      	movs	r3, #4
 8004d8c:	e008      	b.n	8004da0 <HAL_GPIO_Init+0x204>
 8004d8e:	2307      	movs	r3, #7
 8004d90:	e006      	b.n	8004da0 <HAL_GPIO_Init+0x204>
 8004d92:	2303      	movs	r3, #3
 8004d94:	e004      	b.n	8004da0 <HAL_GPIO_Init+0x204>
 8004d96:	2302      	movs	r3, #2
 8004d98:	e002      	b.n	8004da0 <HAL_GPIO_Init+0x204>
 8004d9a:	2301      	movs	r3, #1
 8004d9c:	e000      	b.n	8004da0 <HAL_GPIO_Init+0x204>
 8004d9e:	2300      	movs	r3, #0
 8004da0:	69fa      	ldr	r2, [r7, #28]
 8004da2:	f002 0203 	and.w	r2, r2, #3
 8004da6:	0092      	lsls	r2, r2, #2
 8004da8:	4093      	lsls	r3, r2
 8004daa:	69ba      	ldr	r2, [r7, #24]
 8004dac:	4313      	orrs	r3, r2
 8004dae:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004db0:	4935      	ldr	r1, [pc, #212]	; (8004e88 <HAL_GPIO_Init+0x2ec>)
 8004db2:	69fb      	ldr	r3, [r7, #28]
 8004db4:	089b      	lsrs	r3, r3, #2
 8004db6:	3302      	adds	r3, #2
 8004db8:	69ba      	ldr	r2, [r7, #24]
 8004dba:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004dbe:	4b38      	ldr	r3, [pc, #224]	; (8004ea0 <HAL_GPIO_Init+0x304>)
 8004dc0:	689b      	ldr	r3, [r3, #8]
 8004dc2:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004dc4:	693b      	ldr	r3, [r7, #16]
 8004dc6:	43db      	mvns	r3, r3
 8004dc8:	69ba      	ldr	r2, [r7, #24]
 8004dca:	4013      	ands	r3, r2
 8004dcc:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8004dce:	683b      	ldr	r3, [r7, #0]
 8004dd0:	685b      	ldr	r3, [r3, #4]
 8004dd2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004dd6:	2b00      	cmp	r3, #0
 8004dd8:	d003      	beq.n	8004de2 <HAL_GPIO_Init+0x246>
        {
          temp |= iocurrent;
 8004dda:	69ba      	ldr	r2, [r7, #24]
 8004ddc:	693b      	ldr	r3, [r7, #16]
 8004dde:	4313      	orrs	r3, r2
 8004de0:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8004de2:	4a2f      	ldr	r2, [pc, #188]	; (8004ea0 <HAL_GPIO_Init+0x304>)
 8004de4:	69bb      	ldr	r3, [r7, #24]
 8004de6:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8004de8:	4b2d      	ldr	r3, [pc, #180]	; (8004ea0 <HAL_GPIO_Init+0x304>)
 8004dea:	68db      	ldr	r3, [r3, #12]
 8004dec:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004dee:	693b      	ldr	r3, [r7, #16]
 8004df0:	43db      	mvns	r3, r3
 8004df2:	69ba      	ldr	r2, [r7, #24]
 8004df4:	4013      	ands	r3, r2
 8004df6:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8004df8:	683b      	ldr	r3, [r7, #0]
 8004dfa:	685b      	ldr	r3, [r3, #4]
 8004dfc:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004e00:	2b00      	cmp	r3, #0
 8004e02:	d003      	beq.n	8004e0c <HAL_GPIO_Init+0x270>
        {
          temp |= iocurrent;
 8004e04:	69ba      	ldr	r2, [r7, #24]
 8004e06:	693b      	ldr	r3, [r7, #16]
 8004e08:	4313      	orrs	r3, r2
 8004e0a:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8004e0c:	4a24      	ldr	r2, [pc, #144]	; (8004ea0 <HAL_GPIO_Init+0x304>)
 8004e0e:	69bb      	ldr	r3, [r7, #24]
 8004e10:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 8004e12:	4b23      	ldr	r3, [pc, #140]	; (8004ea0 <HAL_GPIO_Init+0x304>)
 8004e14:	685b      	ldr	r3, [r3, #4]
 8004e16:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004e18:	693b      	ldr	r3, [r7, #16]
 8004e1a:	43db      	mvns	r3, r3
 8004e1c:	69ba      	ldr	r2, [r7, #24]
 8004e1e:	4013      	ands	r3, r2
 8004e20:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8004e22:	683b      	ldr	r3, [r7, #0]
 8004e24:	685b      	ldr	r3, [r3, #4]
 8004e26:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004e2a:	2b00      	cmp	r3, #0
 8004e2c:	d003      	beq.n	8004e36 <HAL_GPIO_Init+0x29a>
        {
          temp |= iocurrent;
 8004e2e:	69ba      	ldr	r2, [r7, #24]
 8004e30:	693b      	ldr	r3, [r7, #16]
 8004e32:	4313      	orrs	r3, r2
 8004e34:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8004e36:	4a1a      	ldr	r2, [pc, #104]	; (8004ea0 <HAL_GPIO_Init+0x304>)
 8004e38:	69bb      	ldr	r3, [r7, #24]
 8004e3a:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004e3c:	4b18      	ldr	r3, [pc, #96]	; (8004ea0 <HAL_GPIO_Init+0x304>)
 8004e3e:	681b      	ldr	r3, [r3, #0]
 8004e40:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004e42:	693b      	ldr	r3, [r7, #16]
 8004e44:	43db      	mvns	r3, r3
 8004e46:	69ba      	ldr	r2, [r7, #24]
 8004e48:	4013      	ands	r3, r2
 8004e4a:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004e4c:	683b      	ldr	r3, [r7, #0]
 8004e4e:	685b      	ldr	r3, [r3, #4]
 8004e50:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004e54:	2b00      	cmp	r3, #0
 8004e56:	d003      	beq.n	8004e60 <HAL_GPIO_Init+0x2c4>
        {
          temp |= iocurrent;
 8004e58:	69ba      	ldr	r2, [r7, #24]
 8004e5a:	693b      	ldr	r3, [r7, #16]
 8004e5c:	4313      	orrs	r3, r2
 8004e5e:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8004e60:	4a0f      	ldr	r2, [pc, #60]	; (8004ea0 <HAL_GPIO_Init+0x304>)
 8004e62:	69bb      	ldr	r3, [r7, #24]
 8004e64:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004e66:	69fb      	ldr	r3, [r7, #28]
 8004e68:	3301      	adds	r3, #1
 8004e6a:	61fb      	str	r3, [r7, #28]
 8004e6c:	69fb      	ldr	r3, [r7, #28]
 8004e6e:	2b0f      	cmp	r3, #15
 8004e70:	f67f aea2 	bls.w	8004bb8 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8004e74:	bf00      	nop
 8004e76:	bf00      	nop
 8004e78:	3724      	adds	r7, #36	; 0x24
 8004e7a:	46bd      	mov	sp, r7
 8004e7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e80:	4770      	bx	lr
 8004e82:	bf00      	nop
 8004e84:	40023800 	.word	0x40023800
 8004e88:	40013800 	.word	0x40013800
 8004e8c:	40020000 	.word	0x40020000
 8004e90:	40020400 	.word	0x40020400
 8004e94:	40020800 	.word	0x40020800
 8004e98:	40020c00 	.word	0x40020c00
 8004e9c:	40021000 	.word	0x40021000
 8004ea0:	40013c00 	.word	0x40013c00

08004ea4 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8004ea4:	b480      	push	{r7}
 8004ea6:	b085      	sub	sp, #20
 8004ea8:	af00      	add	r7, sp, #0
 8004eaa:	6078      	str	r0, [r7, #4]
 8004eac:	460b      	mov	r3, r1
 8004eae:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004eb0:	687b      	ldr	r3, [r7, #4]
 8004eb2:	691a      	ldr	r2, [r3, #16]
 8004eb4:	887b      	ldrh	r3, [r7, #2]
 8004eb6:	4013      	ands	r3, r2
 8004eb8:	2b00      	cmp	r3, #0
 8004eba:	d002      	beq.n	8004ec2 <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 8004ebc:	2301      	movs	r3, #1
 8004ebe:	73fb      	strb	r3, [r7, #15]
 8004ec0:	e001      	b.n	8004ec6 <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 8004ec2:	2300      	movs	r3, #0
 8004ec4:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 8004ec6:	7bfb      	ldrb	r3, [r7, #15]
}
 8004ec8:	4618      	mov	r0, r3
 8004eca:	3714      	adds	r7, #20
 8004ecc:	46bd      	mov	sp, r7
 8004ece:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ed2:	4770      	bx	lr

08004ed4 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8004ed4:	b480      	push	{r7}
 8004ed6:	b083      	sub	sp, #12
 8004ed8:	af00      	add	r7, sp, #0
 8004eda:	6078      	str	r0, [r7, #4]
 8004edc:	460b      	mov	r3, r1
 8004ede:	807b      	strh	r3, [r7, #2]
 8004ee0:	4613      	mov	r3, r2
 8004ee2:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004ee4:	787b      	ldrb	r3, [r7, #1]
 8004ee6:	2b00      	cmp	r3, #0
 8004ee8:	d003      	beq.n	8004ef2 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8004eea:	887a      	ldrh	r2, [r7, #2]
 8004eec:	687b      	ldr	r3, [r7, #4]
 8004eee:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 8004ef0:	e003      	b.n	8004efa <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004ef2:	887b      	ldrh	r3, [r7, #2]
 8004ef4:	041a      	lsls	r2, r3, #16
 8004ef6:	687b      	ldr	r3, [r7, #4]
 8004ef8:	619a      	str	r2, [r3, #24]
}
 8004efa:	bf00      	nop
 8004efc:	370c      	adds	r7, #12
 8004efe:	46bd      	mov	sp, r7
 8004f00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f04:	4770      	bx	lr

08004f06 <HAL_GPIO_TogglePin>:
  *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427X devices.
  * @param  GPIO_Pin Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8004f06:	b480      	push	{r7}
 8004f08:	b085      	sub	sp, #20
 8004f0a:	af00      	add	r7, sp, #0
 8004f0c:	6078      	str	r0, [r7, #4]
 8004f0e:	460b      	mov	r3, r1
 8004f10:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004f12:	687b      	ldr	r3, [r7, #4]
 8004f14:	695b      	ldr	r3, [r3, #20]
 8004f16:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004f18:	887a      	ldrh	r2, [r7, #2]
 8004f1a:	68fb      	ldr	r3, [r7, #12]
 8004f1c:	4013      	ands	r3, r2
 8004f1e:	041a      	lsls	r2, r3, #16
 8004f20:	68fb      	ldr	r3, [r7, #12]
 8004f22:	43d9      	mvns	r1, r3
 8004f24:	887b      	ldrh	r3, [r7, #2]
 8004f26:	400b      	ands	r3, r1
 8004f28:	431a      	orrs	r2, r3
 8004f2a:	687b      	ldr	r3, [r7, #4]
 8004f2c:	619a      	str	r2, [r3, #24]
}
 8004f2e:	bf00      	nop
 8004f30:	3714      	adds	r7, #20
 8004f32:	46bd      	mov	sp, r7
 8004f34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f38:	4770      	bx	lr
	...

08004f3c <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 8004f3c:	b580      	push	{r7, lr}
 8004f3e:	b082      	sub	sp, #8
 8004f40:	af00      	add	r7, sp, #0
 8004f42:	4603      	mov	r3, r0
 8004f44:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8004f46:	4b08      	ldr	r3, [pc, #32]	; (8004f68 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004f48:	695a      	ldr	r2, [r3, #20]
 8004f4a:	88fb      	ldrh	r3, [r7, #6]
 8004f4c:	4013      	ands	r3, r2
 8004f4e:	2b00      	cmp	r3, #0
 8004f50:	d006      	beq.n	8004f60 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8004f52:	4a05      	ldr	r2, [pc, #20]	; (8004f68 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004f54:	88fb      	ldrh	r3, [r7, #6]
 8004f56:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8004f58:	88fb      	ldrh	r3, [r7, #6]
 8004f5a:	4618      	mov	r0, r3
 8004f5c:	f7fe fae0 	bl	8003520 <HAL_GPIO_EXTI_Callback>
  }
}
 8004f60:	bf00      	nop
 8004f62:	3708      	adds	r7, #8
 8004f64:	46bd      	mov	sp, r7
 8004f66:	bd80      	pop	{r7, pc}
 8004f68:	40013c00 	.word	0x40013c00

08004f6c <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8004f6c:	b580      	push	{r7, lr}
 8004f6e:	b084      	sub	sp, #16
 8004f70:	af00      	add	r7, sp, #0
 8004f72:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8004f74:	687b      	ldr	r3, [r7, #4]
 8004f76:	2b00      	cmp	r3, #0
 8004f78:	d101      	bne.n	8004f7e <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 8004f7a:	2301      	movs	r3, #1
 8004f7c:	e12b      	b.n	80051d6 <HAL_I2C_Init+0x26a>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004f7e:	687b      	ldr	r3, [r7, #4]
 8004f80:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004f84:	b2db      	uxtb	r3, r3
 8004f86:	2b00      	cmp	r3, #0
 8004f88:	d106      	bne.n	8004f98 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 8004f8a:	687b      	ldr	r3, [r7, #4]
 8004f8c:	2200      	movs	r2, #0
 8004f8e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 8004f92:	6878      	ldr	r0, [r7, #4]
 8004f94:	f7fd fc98 	bl	80028c8 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	2224      	movs	r2, #36	; 0x24
 8004f9c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8004fa0:	687b      	ldr	r3, [r7, #4]
 8004fa2:	681b      	ldr	r3, [r3, #0]
 8004fa4:	681a      	ldr	r2, [r3, #0]
 8004fa6:	687b      	ldr	r3, [r7, #4]
 8004fa8:	681b      	ldr	r3, [r3, #0]
 8004faa:	f022 0201 	bic.w	r2, r2, #1
 8004fae:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8004fb0:	687b      	ldr	r3, [r7, #4]
 8004fb2:	681b      	ldr	r3, [r3, #0]
 8004fb4:	681a      	ldr	r2, [r3, #0]
 8004fb6:	687b      	ldr	r3, [r7, #4]
 8004fb8:	681b      	ldr	r3, [r3, #0]
 8004fba:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004fbe:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8004fc0:	687b      	ldr	r3, [r7, #4]
 8004fc2:	681b      	ldr	r3, [r3, #0]
 8004fc4:	681a      	ldr	r2, [r3, #0]
 8004fc6:	687b      	ldr	r3, [r7, #4]
 8004fc8:	681b      	ldr	r3, [r3, #0]
 8004fca:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004fce:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8004fd0:	f002 f830 	bl	8007034 <HAL_RCC_GetPCLK1Freq>
 8004fd4:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004fd6:	687b      	ldr	r3, [r7, #4]
 8004fd8:	685b      	ldr	r3, [r3, #4]
 8004fda:	4a81      	ldr	r2, [pc, #516]	; (80051e0 <HAL_I2C_Init+0x274>)
 8004fdc:	4293      	cmp	r3, r2
 8004fde:	d807      	bhi.n	8004ff0 <HAL_I2C_Init+0x84>
 8004fe0:	68fb      	ldr	r3, [r7, #12]
 8004fe2:	4a80      	ldr	r2, [pc, #512]	; (80051e4 <HAL_I2C_Init+0x278>)
 8004fe4:	4293      	cmp	r3, r2
 8004fe6:	bf94      	ite	ls
 8004fe8:	2301      	movls	r3, #1
 8004fea:	2300      	movhi	r3, #0
 8004fec:	b2db      	uxtb	r3, r3
 8004fee:	e006      	b.n	8004ffe <HAL_I2C_Init+0x92>
 8004ff0:	68fb      	ldr	r3, [r7, #12]
 8004ff2:	4a7d      	ldr	r2, [pc, #500]	; (80051e8 <HAL_I2C_Init+0x27c>)
 8004ff4:	4293      	cmp	r3, r2
 8004ff6:	bf94      	ite	ls
 8004ff8:	2301      	movls	r3, #1
 8004ffa:	2300      	movhi	r3, #0
 8004ffc:	b2db      	uxtb	r3, r3
 8004ffe:	2b00      	cmp	r3, #0
 8005000:	d001      	beq.n	8005006 <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 8005002:	2301      	movs	r3, #1
 8005004:	e0e7      	b.n	80051d6 <HAL_I2C_Init+0x26a>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 8005006:	68fb      	ldr	r3, [r7, #12]
 8005008:	4a78      	ldr	r2, [pc, #480]	; (80051ec <HAL_I2C_Init+0x280>)
 800500a:	fba2 2303 	umull	r2, r3, r2, r3
 800500e:	0c9b      	lsrs	r3, r3, #18
 8005010:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005012:	687b      	ldr	r3, [r7, #4]
 8005014:	681b      	ldr	r3, [r3, #0]
 8005016:	685b      	ldr	r3, [r3, #4]
 8005018:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 800501c:	687b      	ldr	r3, [r7, #4]
 800501e:	681b      	ldr	r3, [r3, #0]
 8005020:	68ba      	ldr	r2, [r7, #8]
 8005022:	430a      	orrs	r2, r1
 8005024:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005026:	687b      	ldr	r3, [r7, #4]
 8005028:	681b      	ldr	r3, [r3, #0]
 800502a:	6a1b      	ldr	r3, [r3, #32]
 800502c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8005030:	687b      	ldr	r3, [r7, #4]
 8005032:	685b      	ldr	r3, [r3, #4]
 8005034:	4a6a      	ldr	r2, [pc, #424]	; (80051e0 <HAL_I2C_Init+0x274>)
 8005036:	4293      	cmp	r3, r2
 8005038:	d802      	bhi.n	8005040 <HAL_I2C_Init+0xd4>
 800503a:	68bb      	ldr	r3, [r7, #8]
 800503c:	3301      	adds	r3, #1
 800503e:	e009      	b.n	8005054 <HAL_I2C_Init+0xe8>
 8005040:	68bb      	ldr	r3, [r7, #8]
 8005042:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8005046:	fb02 f303 	mul.w	r3, r2, r3
 800504a:	4a69      	ldr	r2, [pc, #420]	; (80051f0 <HAL_I2C_Init+0x284>)
 800504c:	fba2 2303 	umull	r2, r3, r2, r3
 8005050:	099b      	lsrs	r3, r3, #6
 8005052:	3301      	adds	r3, #1
 8005054:	687a      	ldr	r2, [r7, #4]
 8005056:	6812      	ldr	r2, [r2, #0]
 8005058:	430b      	orrs	r3, r1
 800505a:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800505c:	687b      	ldr	r3, [r7, #4]
 800505e:	681b      	ldr	r3, [r3, #0]
 8005060:	69db      	ldr	r3, [r3, #28]
 8005062:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8005066:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800506a:	687b      	ldr	r3, [r7, #4]
 800506c:	685b      	ldr	r3, [r3, #4]
 800506e:	495c      	ldr	r1, [pc, #368]	; (80051e0 <HAL_I2C_Init+0x274>)
 8005070:	428b      	cmp	r3, r1
 8005072:	d819      	bhi.n	80050a8 <HAL_I2C_Init+0x13c>
 8005074:	68fb      	ldr	r3, [r7, #12]
 8005076:	1e59      	subs	r1, r3, #1
 8005078:	687b      	ldr	r3, [r7, #4]
 800507a:	685b      	ldr	r3, [r3, #4]
 800507c:	005b      	lsls	r3, r3, #1
 800507e:	fbb1 f3f3 	udiv	r3, r1, r3
 8005082:	1c59      	adds	r1, r3, #1
 8005084:	f640 73fc 	movw	r3, #4092	; 0xffc
 8005088:	400b      	ands	r3, r1
 800508a:	2b00      	cmp	r3, #0
 800508c:	d00a      	beq.n	80050a4 <HAL_I2C_Init+0x138>
 800508e:	68fb      	ldr	r3, [r7, #12]
 8005090:	1e59      	subs	r1, r3, #1
 8005092:	687b      	ldr	r3, [r7, #4]
 8005094:	685b      	ldr	r3, [r3, #4]
 8005096:	005b      	lsls	r3, r3, #1
 8005098:	fbb1 f3f3 	udiv	r3, r1, r3
 800509c:	3301      	adds	r3, #1
 800509e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80050a2:	e051      	b.n	8005148 <HAL_I2C_Init+0x1dc>
 80050a4:	2304      	movs	r3, #4
 80050a6:	e04f      	b.n	8005148 <HAL_I2C_Init+0x1dc>
 80050a8:	687b      	ldr	r3, [r7, #4]
 80050aa:	689b      	ldr	r3, [r3, #8]
 80050ac:	2b00      	cmp	r3, #0
 80050ae:	d111      	bne.n	80050d4 <HAL_I2C_Init+0x168>
 80050b0:	68fb      	ldr	r3, [r7, #12]
 80050b2:	1e58      	subs	r0, r3, #1
 80050b4:	687b      	ldr	r3, [r7, #4]
 80050b6:	6859      	ldr	r1, [r3, #4]
 80050b8:	460b      	mov	r3, r1
 80050ba:	005b      	lsls	r3, r3, #1
 80050bc:	440b      	add	r3, r1
 80050be:	fbb0 f3f3 	udiv	r3, r0, r3
 80050c2:	3301      	adds	r3, #1
 80050c4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80050c8:	2b00      	cmp	r3, #0
 80050ca:	bf0c      	ite	eq
 80050cc:	2301      	moveq	r3, #1
 80050ce:	2300      	movne	r3, #0
 80050d0:	b2db      	uxtb	r3, r3
 80050d2:	e012      	b.n	80050fa <HAL_I2C_Init+0x18e>
 80050d4:	68fb      	ldr	r3, [r7, #12]
 80050d6:	1e58      	subs	r0, r3, #1
 80050d8:	687b      	ldr	r3, [r7, #4]
 80050da:	6859      	ldr	r1, [r3, #4]
 80050dc:	460b      	mov	r3, r1
 80050de:	009b      	lsls	r3, r3, #2
 80050e0:	440b      	add	r3, r1
 80050e2:	0099      	lsls	r1, r3, #2
 80050e4:	440b      	add	r3, r1
 80050e6:	fbb0 f3f3 	udiv	r3, r0, r3
 80050ea:	3301      	adds	r3, #1
 80050ec:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80050f0:	2b00      	cmp	r3, #0
 80050f2:	bf0c      	ite	eq
 80050f4:	2301      	moveq	r3, #1
 80050f6:	2300      	movne	r3, #0
 80050f8:	b2db      	uxtb	r3, r3
 80050fa:	2b00      	cmp	r3, #0
 80050fc:	d001      	beq.n	8005102 <HAL_I2C_Init+0x196>
 80050fe:	2301      	movs	r3, #1
 8005100:	e022      	b.n	8005148 <HAL_I2C_Init+0x1dc>
 8005102:	687b      	ldr	r3, [r7, #4]
 8005104:	689b      	ldr	r3, [r3, #8]
 8005106:	2b00      	cmp	r3, #0
 8005108:	d10e      	bne.n	8005128 <HAL_I2C_Init+0x1bc>
 800510a:	68fb      	ldr	r3, [r7, #12]
 800510c:	1e58      	subs	r0, r3, #1
 800510e:	687b      	ldr	r3, [r7, #4]
 8005110:	6859      	ldr	r1, [r3, #4]
 8005112:	460b      	mov	r3, r1
 8005114:	005b      	lsls	r3, r3, #1
 8005116:	440b      	add	r3, r1
 8005118:	fbb0 f3f3 	udiv	r3, r0, r3
 800511c:	3301      	adds	r3, #1
 800511e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005122:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005126:	e00f      	b.n	8005148 <HAL_I2C_Init+0x1dc>
 8005128:	68fb      	ldr	r3, [r7, #12]
 800512a:	1e58      	subs	r0, r3, #1
 800512c:	687b      	ldr	r3, [r7, #4]
 800512e:	6859      	ldr	r1, [r3, #4]
 8005130:	460b      	mov	r3, r1
 8005132:	009b      	lsls	r3, r3, #2
 8005134:	440b      	add	r3, r1
 8005136:	0099      	lsls	r1, r3, #2
 8005138:	440b      	add	r3, r1
 800513a:	fbb0 f3f3 	udiv	r3, r0, r3
 800513e:	3301      	adds	r3, #1
 8005140:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005144:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005148:	6879      	ldr	r1, [r7, #4]
 800514a:	6809      	ldr	r1, [r1, #0]
 800514c:	4313      	orrs	r3, r2
 800514e:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8005150:	687b      	ldr	r3, [r7, #4]
 8005152:	681b      	ldr	r3, [r3, #0]
 8005154:	681b      	ldr	r3, [r3, #0]
 8005156:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 800515a:	687b      	ldr	r3, [r7, #4]
 800515c:	69da      	ldr	r2, [r3, #28]
 800515e:	687b      	ldr	r3, [r7, #4]
 8005160:	6a1b      	ldr	r3, [r3, #32]
 8005162:	431a      	orrs	r2, r3
 8005164:	687b      	ldr	r3, [r7, #4]
 8005166:	681b      	ldr	r3, [r3, #0]
 8005168:	430a      	orrs	r2, r1
 800516a:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800516c:	687b      	ldr	r3, [r7, #4]
 800516e:	681b      	ldr	r3, [r3, #0]
 8005170:	689b      	ldr	r3, [r3, #8]
 8005172:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8005176:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800517a:	687a      	ldr	r2, [r7, #4]
 800517c:	6911      	ldr	r1, [r2, #16]
 800517e:	687a      	ldr	r2, [r7, #4]
 8005180:	68d2      	ldr	r2, [r2, #12]
 8005182:	4311      	orrs	r1, r2
 8005184:	687a      	ldr	r2, [r7, #4]
 8005186:	6812      	ldr	r2, [r2, #0]
 8005188:	430b      	orrs	r3, r1
 800518a:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800518c:	687b      	ldr	r3, [r7, #4]
 800518e:	681b      	ldr	r3, [r3, #0]
 8005190:	68db      	ldr	r3, [r3, #12]
 8005192:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8005196:	687b      	ldr	r3, [r7, #4]
 8005198:	695a      	ldr	r2, [r3, #20]
 800519a:	687b      	ldr	r3, [r7, #4]
 800519c:	699b      	ldr	r3, [r3, #24]
 800519e:	431a      	orrs	r2, r3
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	681b      	ldr	r3, [r3, #0]
 80051a4:	430a      	orrs	r2, r1
 80051a6:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 80051a8:	687b      	ldr	r3, [r7, #4]
 80051aa:	681b      	ldr	r3, [r3, #0]
 80051ac:	681a      	ldr	r2, [r3, #0]
 80051ae:	687b      	ldr	r3, [r7, #4]
 80051b0:	681b      	ldr	r3, [r3, #0]
 80051b2:	f042 0201 	orr.w	r2, r2, #1
 80051b6:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80051b8:	687b      	ldr	r3, [r7, #4]
 80051ba:	2200      	movs	r2, #0
 80051bc:	641a      	str	r2, [r3, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	2220      	movs	r2, #32
 80051c2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80051c6:	687b      	ldr	r3, [r7, #4]
 80051c8:	2200      	movs	r2, #0
 80051ca:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80051cc:	687b      	ldr	r3, [r7, #4]
 80051ce:	2200      	movs	r2, #0
 80051d0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

  return HAL_OK;
 80051d4:	2300      	movs	r3, #0
}
 80051d6:	4618      	mov	r0, r3
 80051d8:	3710      	adds	r7, #16
 80051da:	46bd      	mov	sp, r7
 80051dc:	bd80      	pop	{r7, pc}
 80051de:	bf00      	nop
 80051e0:	000186a0 	.word	0x000186a0
 80051e4:	001e847f 	.word	0x001e847f
 80051e8:	003d08ff 	.word	0x003d08ff
 80051ec:	431bde83 	.word	0x431bde83
 80051f0:	10624dd3 	.word	0x10624dd3

080051f4 <HAL_I2C_Master_Transmit>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80051f4:	b580      	push	{r7, lr}
 80051f6:	b088      	sub	sp, #32
 80051f8:	af02      	add	r7, sp, #8
 80051fa:	60f8      	str	r0, [r7, #12]
 80051fc:	607a      	str	r2, [r7, #4]
 80051fe:	461a      	mov	r2, r3
 8005200:	460b      	mov	r3, r1
 8005202:	817b      	strh	r3, [r7, #10]
 8005204:	4613      	mov	r3, r2
 8005206:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8005208:	f7fe fc46 	bl	8003a98 <HAL_GetTick>
 800520c:	6178      	str	r0, [r7, #20]

  if (hi2c->State == HAL_I2C_STATE_READY)
 800520e:	68fb      	ldr	r3, [r7, #12]
 8005210:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005214:	b2db      	uxtb	r3, r3
 8005216:	2b20      	cmp	r3, #32
 8005218:	f040 80e0 	bne.w	80053dc <HAL_I2C_Master_Transmit+0x1e8>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800521c:	697b      	ldr	r3, [r7, #20]
 800521e:	9300      	str	r3, [sp, #0]
 8005220:	2319      	movs	r3, #25
 8005222:	2201      	movs	r2, #1
 8005224:	4970      	ldr	r1, [pc, #448]	; (80053e8 <HAL_I2C_Master_Transmit+0x1f4>)
 8005226:	68f8      	ldr	r0, [r7, #12]
 8005228:	f001 f8f6 	bl	8006418 <I2C_WaitOnFlagUntilTimeout>
 800522c:	4603      	mov	r3, r0
 800522e:	2b00      	cmp	r3, #0
 8005230:	d001      	beq.n	8005236 <HAL_I2C_Master_Transmit+0x42>
    {
      return HAL_BUSY;
 8005232:	2302      	movs	r3, #2
 8005234:	e0d3      	b.n	80053de <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005236:	68fb      	ldr	r3, [r7, #12]
 8005238:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800523c:	2b01      	cmp	r3, #1
 800523e:	d101      	bne.n	8005244 <HAL_I2C_Master_Transmit+0x50>
 8005240:	2302      	movs	r3, #2
 8005242:	e0cc      	b.n	80053de <HAL_I2C_Master_Transmit+0x1ea>
 8005244:	68fb      	ldr	r3, [r7, #12]
 8005246:	2201      	movs	r2, #1
 8005248:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800524c:	68fb      	ldr	r3, [r7, #12]
 800524e:	681b      	ldr	r3, [r3, #0]
 8005250:	681b      	ldr	r3, [r3, #0]
 8005252:	f003 0301 	and.w	r3, r3, #1
 8005256:	2b01      	cmp	r3, #1
 8005258:	d007      	beq.n	800526a <HAL_I2C_Master_Transmit+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 800525a:	68fb      	ldr	r3, [r7, #12]
 800525c:	681b      	ldr	r3, [r3, #0]
 800525e:	681a      	ldr	r2, [r3, #0]
 8005260:	68fb      	ldr	r3, [r7, #12]
 8005262:	681b      	ldr	r3, [r3, #0]
 8005264:	f042 0201 	orr.w	r2, r2, #1
 8005268:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800526a:	68fb      	ldr	r3, [r7, #12]
 800526c:	681b      	ldr	r3, [r3, #0]
 800526e:	681a      	ldr	r2, [r3, #0]
 8005270:	68fb      	ldr	r3, [r7, #12]
 8005272:	681b      	ldr	r3, [r3, #0]
 8005274:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005278:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 800527a:	68fb      	ldr	r3, [r7, #12]
 800527c:	2221      	movs	r2, #33	; 0x21
 800527e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 8005282:	68fb      	ldr	r3, [r7, #12]
 8005284:	2210      	movs	r2, #16
 8005286:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 800528a:	68fb      	ldr	r3, [r7, #12]
 800528c:	2200      	movs	r2, #0
 800528e:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 8005290:	68fb      	ldr	r3, [r7, #12]
 8005292:	687a      	ldr	r2, [r7, #4]
 8005294:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005296:	68fb      	ldr	r3, [r7, #12]
 8005298:	893a      	ldrh	r2, [r7, #8]
 800529a:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800529c:	68fb      	ldr	r3, [r7, #12]
 800529e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80052a0:	b29a      	uxth	r2, r3
 80052a2:	68fb      	ldr	r3, [r7, #12]
 80052a4:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80052a6:	68fb      	ldr	r3, [r7, #12]
 80052a8:	4a50      	ldr	r2, [pc, #320]	; (80053ec <HAL_I2C_Master_Transmit+0x1f8>)
 80052aa:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestWrite(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 80052ac:	8979      	ldrh	r1, [r7, #10]
 80052ae:	697b      	ldr	r3, [r7, #20]
 80052b0:	6a3a      	ldr	r2, [r7, #32]
 80052b2:	68f8      	ldr	r0, [r7, #12]
 80052b4:	f000 fde2 	bl	8005e7c <I2C_MasterRequestWrite>
 80052b8:	4603      	mov	r3, r0
 80052ba:	2b00      	cmp	r3, #0
 80052bc:	d001      	beq.n	80052c2 <HAL_I2C_Master_Transmit+0xce>
    {
      return HAL_ERROR;
 80052be:	2301      	movs	r3, #1
 80052c0:	e08d      	b.n	80053de <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80052c2:	2300      	movs	r3, #0
 80052c4:	613b      	str	r3, [r7, #16]
 80052c6:	68fb      	ldr	r3, [r7, #12]
 80052c8:	681b      	ldr	r3, [r3, #0]
 80052ca:	695b      	ldr	r3, [r3, #20]
 80052cc:	613b      	str	r3, [r7, #16]
 80052ce:	68fb      	ldr	r3, [r7, #12]
 80052d0:	681b      	ldr	r3, [r3, #0]
 80052d2:	699b      	ldr	r3, [r3, #24]
 80052d4:	613b      	str	r3, [r7, #16]
 80052d6:	693b      	ldr	r3, [r7, #16]

    while (hi2c->XferSize > 0U)
 80052d8:	e066      	b.n	80053a8 <HAL_I2C_Master_Transmit+0x1b4>
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80052da:	697a      	ldr	r2, [r7, #20]
 80052dc:	6a39      	ldr	r1, [r7, #32]
 80052de:	68f8      	ldr	r0, [r7, #12]
 80052e0:	f001 f970 	bl	80065c4 <I2C_WaitOnTXEFlagUntilTimeout>
 80052e4:	4603      	mov	r3, r0
 80052e6:	2b00      	cmp	r3, #0
 80052e8:	d00d      	beq.n	8005306 <HAL_I2C_Master_Transmit+0x112>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80052ea:	68fb      	ldr	r3, [r7, #12]
 80052ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80052ee:	2b04      	cmp	r3, #4
 80052f0:	d107      	bne.n	8005302 <HAL_I2C_Master_Transmit+0x10e>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80052f2:	68fb      	ldr	r3, [r7, #12]
 80052f4:	681b      	ldr	r3, [r3, #0]
 80052f6:	681a      	ldr	r2, [r3, #0]
 80052f8:	68fb      	ldr	r3, [r7, #12]
 80052fa:	681b      	ldr	r3, [r3, #0]
 80052fc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005300:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 8005302:	2301      	movs	r3, #1
 8005304:	e06b      	b.n	80053de <HAL_I2C_Master_Transmit+0x1ea>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005306:	68fb      	ldr	r3, [r7, #12]
 8005308:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800530a:	781a      	ldrb	r2, [r3, #0]
 800530c:	68fb      	ldr	r3, [r7, #12]
 800530e:	681b      	ldr	r3, [r3, #0]
 8005310:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8005312:	68fb      	ldr	r3, [r7, #12]
 8005314:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005316:	1c5a      	adds	r2, r3, #1
 8005318:	68fb      	ldr	r3, [r7, #12]
 800531a:	625a      	str	r2, [r3, #36]	; 0x24

      /* Update counter */
      hi2c->XferCount--;
 800531c:	68fb      	ldr	r3, [r7, #12]
 800531e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005320:	b29b      	uxth	r3, r3
 8005322:	3b01      	subs	r3, #1
 8005324:	b29a      	uxth	r2, r3
 8005326:	68fb      	ldr	r3, [r7, #12]
 8005328:	855a      	strh	r2, [r3, #42]	; 0x2a
      hi2c->XferSize--;
 800532a:	68fb      	ldr	r3, [r7, #12]
 800532c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800532e:	3b01      	subs	r3, #1
 8005330:	b29a      	uxth	r2, r3
 8005332:	68fb      	ldr	r3, [r7, #12]
 8005334:	851a      	strh	r2, [r3, #40]	; 0x28

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005336:	68fb      	ldr	r3, [r7, #12]
 8005338:	681b      	ldr	r3, [r3, #0]
 800533a:	695b      	ldr	r3, [r3, #20]
 800533c:	f003 0304 	and.w	r3, r3, #4
 8005340:	2b04      	cmp	r3, #4
 8005342:	d11b      	bne.n	800537c <HAL_I2C_Master_Transmit+0x188>
 8005344:	68fb      	ldr	r3, [r7, #12]
 8005346:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005348:	2b00      	cmp	r3, #0
 800534a:	d017      	beq.n	800537c <HAL_I2C_Master_Transmit+0x188>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800534c:	68fb      	ldr	r3, [r7, #12]
 800534e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005350:	781a      	ldrb	r2, [r3, #0]
 8005352:	68fb      	ldr	r3, [r7, #12]
 8005354:	681b      	ldr	r3, [r3, #0]
 8005356:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8005358:	68fb      	ldr	r3, [r7, #12]
 800535a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800535c:	1c5a      	adds	r2, r3, #1
 800535e:	68fb      	ldr	r3, [r7, #12]
 8005360:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferCount--;
 8005362:	68fb      	ldr	r3, [r7, #12]
 8005364:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005366:	b29b      	uxth	r3, r3
 8005368:	3b01      	subs	r3, #1
 800536a:	b29a      	uxth	r2, r3
 800536c:	68fb      	ldr	r3, [r7, #12]
 800536e:	855a      	strh	r2, [r3, #42]	; 0x2a
        hi2c->XferSize--;
 8005370:	68fb      	ldr	r3, [r7, #12]
 8005372:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005374:	3b01      	subs	r3, #1
 8005376:	b29a      	uxth	r2, r3
 8005378:	68fb      	ldr	r3, [r7, #12]
 800537a:	851a      	strh	r2, [r3, #40]	; 0x28
      }

      /* Wait until BTF flag is set */
      if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800537c:	697a      	ldr	r2, [r7, #20]
 800537e:	6a39      	ldr	r1, [r7, #32]
 8005380:	68f8      	ldr	r0, [r7, #12]
 8005382:	f001 f960 	bl	8006646 <I2C_WaitOnBTFFlagUntilTimeout>
 8005386:	4603      	mov	r3, r0
 8005388:	2b00      	cmp	r3, #0
 800538a:	d00d      	beq.n	80053a8 <HAL_I2C_Master_Transmit+0x1b4>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800538c:	68fb      	ldr	r3, [r7, #12]
 800538e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005390:	2b04      	cmp	r3, #4
 8005392:	d107      	bne.n	80053a4 <HAL_I2C_Master_Transmit+0x1b0>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005394:	68fb      	ldr	r3, [r7, #12]
 8005396:	681b      	ldr	r3, [r3, #0]
 8005398:	681a      	ldr	r2, [r3, #0]
 800539a:	68fb      	ldr	r3, [r7, #12]
 800539c:	681b      	ldr	r3, [r3, #0]
 800539e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80053a2:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 80053a4:	2301      	movs	r3, #1
 80053a6:	e01a      	b.n	80053de <HAL_I2C_Master_Transmit+0x1ea>
    while (hi2c->XferSize > 0U)
 80053a8:	68fb      	ldr	r3, [r7, #12]
 80053aa:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80053ac:	2b00      	cmp	r3, #0
 80053ae:	d194      	bne.n	80052da <HAL_I2C_Master_Transmit+0xe6>
      }
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80053b0:	68fb      	ldr	r3, [r7, #12]
 80053b2:	681b      	ldr	r3, [r3, #0]
 80053b4:	681a      	ldr	r2, [r3, #0]
 80053b6:	68fb      	ldr	r3, [r7, #12]
 80053b8:	681b      	ldr	r3, [r3, #0]
 80053ba:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80053be:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80053c0:	68fb      	ldr	r3, [r7, #12]
 80053c2:	2220      	movs	r2, #32
 80053c4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80053c8:	68fb      	ldr	r3, [r7, #12]
 80053ca:	2200      	movs	r2, #0
 80053cc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80053d0:	68fb      	ldr	r3, [r7, #12]
 80053d2:	2200      	movs	r2, #0
 80053d4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 80053d8:	2300      	movs	r3, #0
 80053da:	e000      	b.n	80053de <HAL_I2C_Master_Transmit+0x1ea>
  }
  else
  {
    return HAL_BUSY;
 80053dc:	2302      	movs	r3, #2
  }
}
 80053de:	4618      	mov	r0, r3
 80053e0:	3718      	adds	r7, #24
 80053e2:	46bd      	mov	sp, r7
 80053e4:	bd80      	pop	{r7, pc}
 80053e6:	bf00      	nop
 80053e8:	00100002 	.word	0x00100002
 80053ec:	ffff0000 	.word	0xffff0000

080053f0 <HAL_I2C_Master_Receive>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80053f0:	b580      	push	{r7, lr}
 80053f2:	b08c      	sub	sp, #48	; 0x30
 80053f4:	af02      	add	r7, sp, #8
 80053f6:	60f8      	str	r0, [r7, #12]
 80053f8:	607a      	str	r2, [r7, #4]
 80053fa:	461a      	mov	r2, r3
 80053fc:	460b      	mov	r3, r1
 80053fe:	817b      	strh	r3, [r7, #10]
 8005400:	4613      	mov	r3, r2
 8005402:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8005404:	f7fe fb48 	bl	8003a98 <HAL_GetTick>
 8005408:	6278      	str	r0, [r7, #36]	; 0x24

  if (hi2c->State == HAL_I2C_STATE_READY)
 800540a:	68fb      	ldr	r3, [r7, #12]
 800540c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005410:	b2db      	uxtb	r3, r3
 8005412:	2b20      	cmp	r3, #32
 8005414:	f040 820b 	bne.w	800582e <HAL_I2C_Master_Receive+0x43e>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005418:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800541a:	9300      	str	r3, [sp, #0]
 800541c:	2319      	movs	r3, #25
 800541e:	2201      	movs	r2, #1
 8005420:	497c      	ldr	r1, [pc, #496]	; (8005614 <HAL_I2C_Master_Receive+0x224>)
 8005422:	68f8      	ldr	r0, [r7, #12]
 8005424:	f000 fff8 	bl	8006418 <I2C_WaitOnFlagUntilTimeout>
 8005428:	4603      	mov	r3, r0
 800542a:	2b00      	cmp	r3, #0
 800542c:	d001      	beq.n	8005432 <HAL_I2C_Master_Receive+0x42>
    {
      return HAL_BUSY;
 800542e:	2302      	movs	r3, #2
 8005430:	e1fe      	b.n	8005830 <HAL_I2C_Master_Receive+0x440>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005432:	68fb      	ldr	r3, [r7, #12]
 8005434:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005438:	2b01      	cmp	r3, #1
 800543a:	d101      	bne.n	8005440 <HAL_I2C_Master_Receive+0x50>
 800543c:	2302      	movs	r3, #2
 800543e:	e1f7      	b.n	8005830 <HAL_I2C_Master_Receive+0x440>
 8005440:	68fb      	ldr	r3, [r7, #12]
 8005442:	2201      	movs	r2, #1
 8005444:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005448:	68fb      	ldr	r3, [r7, #12]
 800544a:	681b      	ldr	r3, [r3, #0]
 800544c:	681b      	ldr	r3, [r3, #0]
 800544e:	f003 0301 	and.w	r3, r3, #1
 8005452:	2b01      	cmp	r3, #1
 8005454:	d007      	beq.n	8005466 <HAL_I2C_Master_Receive+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8005456:	68fb      	ldr	r3, [r7, #12]
 8005458:	681b      	ldr	r3, [r3, #0]
 800545a:	681a      	ldr	r2, [r3, #0]
 800545c:	68fb      	ldr	r3, [r7, #12]
 800545e:	681b      	ldr	r3, [r3, #0]
 8005460:	f042 0201 	orr.w	r2, r2, #1
 8005464:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005466:	68fb      	ldr	r3, [r7, #12]
 8005468:	681b      	ldr	r3, [r3, #0]
 800546a:	681a      	ldr	r2, [r3, #0]
 800546c:	68fb      	ldr	r3, [r7, #12]
 800546e:	681b      	ldr	r3, [r3, #0]
 8005470:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005474:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 8005476:	68fb      	ldr	r3, [r7, #12]
 8005478:	2222      	movs	r2, #34	; 0x22
 800547a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 800547e:	68fb      	ldr	r3, [r7, #12]
 8005480:	2210      	movs	r2, #16
 8005482:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 8005486:	68fb      	ldr	r3, [r7, #12]
 8005488:	2200      	movs	r2, #0
 800548a:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 800548c:	68fb      	ldr	r3, [r7, #12]
 800548e:	687a      	ldr	r2, [r7, #4]
 8005490:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005492:	68fb      	ldr	r3, [r7, #12]
 8005494:	893a      	ldrh	r2, [r7, #8]
 8005496:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8005498:	68fb      	ldr	r3, [r7, #12]
 800549a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800549c:	b29a      	uxth	r2, r3
 800549e:	68fb      	ldr	r3, [r7, #12]
 80054a0:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80054a2:	68fb      	ldr	r3, [r7, #12]
 80054a4:	4a5c      	ldr	r2, [pc, #368]	; (8005618 <HAL_I2C_Master_Receive+0x228>)
 80054a6:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestRead(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 80054a8:	8979      	ldrh	r1, [r7, #10]
 80054aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80054ac:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80054ae:	68f8      	ldr	r0, [r7, #12]
 80054b0:	f000 fd66 	bl	8005f80 <I2C_MasterRequestRead>
 80054b4:	4603      	mov	r3, r0
 80054b6:	2b00      	cmp	r3, #0
 80054b8:	d001      	beq.n	80054be <HAL_I2C_Master_Receive+0xce>
    {
      return HAL_ERROR;
 80054ba:	2301      	movs	r3, #1
 80054bc:	e1b8      	b.n	8005830 <HAL_I2C_Master_Receive+0x440>
    }

    if (hi2c->XferSize == 0U)
 80054be:	68fb      	ldr	r3, [r7, #12]
 80054c0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80054c2:	2b00      	cmp	r3, #0
 80054c4:	d113      	bne.n	80054ee <HAL_I2C_Master_Receive+0xfe>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80054c6:	2300      	movs	r3, #0
 80054c8:	623b      	str	r3, [r7, #32]
 80054ca:	68fb      	ldr	r3, [r7, #12]
 80054cc:	681b      	ldr	r3, [r3, #0]
 80054ce:	695b      	ldr	r3, [r3, #20]
 80054d0:	623b      	str	r3, [r7, #32]
 80054d2:	68fb      	ldr	r3, [r7, #12]
 80054d4:	681b      	ldr	r3, [r3, #0]
 80054d6:	699b      	ldr	r3, [r3, #24]
 80054d8:	623b      	str	r3, [r7, #32]
 80054da:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80054dc:	68fb      	ldr	r3, [r7, #12]
 80054de:	681b      	ldr	r3, [r3, #0]
 80054e0:	681a      	ldr	r2, [r3, #0]
 80054e2:	68fb      	ldr	r3, [r7, #12]
 80054e4:	681b      	ldr	r3, [r3, #0]
 80054e6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80054ea:	601a      	str	r2, [r3, #0]
 80054ec:	e18c      	b.n	8005808 <HAL_I2C_Master_Receive+0x418>
    }
    else if (hi2c->XferSize == 1U)
 80054ee:	68fb      	ldr	r3, [r7, #12]
 80054f0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80054f2:	2b01      	cmp	r3, #1
 80054f4:	d11b      	bne.n	800552e <HAL_I2C_Master_Receive+0x13e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80054f6:	68fb      	ldr	r3, [r7, #12]
 80054f8:	681b      	ldr	r3, [r3, #0]
 80054fa:	681a      	ldr	r2, [r3, #0]
 80054fc:	68fb      	ldr	r3, [r7, #12]
 80054fe:	681b      	ldr	r3, [r3, #0]
 8005500:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005504:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005506:	2300      	movs	r3, #0
 8005508:	61fb      	str	r3, [r7, #28]
 800550a:	68fb      	ldr	r3, [r7, #12]
 800550c:	681b      	ldr	r3, [r3, #0]
 800550e:	695b      	ldr	r3, [r3, #20]
 8005510:	61fb      	str	r3, [r7, #28]
 8005512:	68fb      	ldr	r3, [r7, #12]
 8005514:	681b      	ldr	r3, [r3, #0]
 8005516:	699b      	ldr	r3, [r3, #24]
 8005518:	61fb      	str	r3, [r7, #28]
 800551a:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800551c:	68fb      	ldr	r3, [r7, #12]
 800551e:	681b      	ldr	r3, [r3, #0]
 8005520:	681a      	ldr	r2, [r3, #0]
 8005522:	68fb      	ldr	r3, [r7, #12]
 8005524:	681b      	ldr	r3, [r3, #0]
 8005526:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800552a:	601a      	str	r2, [r3, #0]
 800552c:	e16c      	b.n	8005808 <HAL_I2C_Master_Receive+0x418>
    }
    else if (hi2c->XferSize == 2U)
 800552e:	68fb      	ldr	r3, [r7, #12]
 8005530:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005532:	2b02      	cmp	r3, #2
 8005534:	d11b      	bne.n	800556e <HAL_I2C_Master_Receive+0x17e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005536:	68fb      	ldr	r3, [r7, #12]
 8005538:	681b      	ldr	r3, [r3, #0]
 800553a:	681a      	ldr	r2, [r3, #0]
 800553c:	68fb      	ldr	r3, [r7, #12]
 800553e:	681b      	ldr	r3, [r3, #0]
 8005540:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005544:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005546:	68fb      	ldr	r3, [r7, #12]
 8005548:	681b      	ldr	r3, [r3, #0]
 800554a:	681a      	ldr	r2, [r3, #0]
 800554c:	68fb      	ldr	r3, [r7, #12]
 800554e:	681b      	ldr	r3, [r3, #0]
 8005550:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005554:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005556:	2300      	movs	r3, #0
 8005558:	61bb      	str	r3, [r7, #24]
 800555a:	68fb      	ldr	r3, [r7, #12]
 800555c:	681b      	ldr	r3, [r3, #0]
 800555e:	695b      	ldr	r3, [r3, #20]
 8005560:	61bb      	str	r3, [r7, #24]
 8005562:	68fb      	ldr	r3, [r7, #12]
 8005564:	681b      	ldr	r3, [r3, #0]
 8005566:	699b      	ldr	r3, [r3, #24]
 8005568:	61bb      	str	r3, [r7, #24]
 800556a:	69bb      	ldr	r3, [r7, #24]
 800556c:	e14c      	b.n	8005808 <HAL_I2C_Master_Receive+0x418>
    }
    else
    {
      /* Enable Acknowledge */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800556e:	68fb      	ldr	r3, [r7, #12]
 8005570:	681b      	ldr	r3, [r3, #0]
 8005572:	681a      	ldr	r2, [r3, #0]
 8005574:	68fb      	ldr	r3, [r7, #12]
 8005576:	681b      	ldr	r3, [r3, #0]
 8005578:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800557c:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800557e:	2300      	movs	r3, #0
 8005580:	617b      	str	r3, [r7, #20]
 8005582:	68fb      	ldr	r3, [r7, #12]
 8005584:	681b      	ldr	r3, [r3, #0]
 8005586:	695b      	ldr	r3, [r3, #20]
 8005588:	617b      	str	r3, [r7, #20]
 800558a:	68fb      	ldr	r3, [r7, #12]
 800558c:	681b      	ldr	r3, [r3, #0]
 800558e:	699b      	ldr	r3, [r3, #24]
 8005590:	617b      	str	r3, [r7, #20]
 8005592:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 8005594:	e138      	b.n	8005808 <HAL_I2C_Master_Receive+0x418>
    {
      if (hi2c->XferSize <= 3U)
 8005596:	68fb      	ldr	r3, [r7, #12]
 8005598:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800559a:	2b03      	cmp	r3, #3
 800559c:	f200 80f1 	bhi.w	8005782 <HAL_I2C_Master_Receive+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 80055a0:	68fb      	ldr	r3, [r7, #12]
 80055a2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80055a4:	2b01      	cmp	r3, #1
 80055a6:	d123      	bne.n	80055f0 <HAL_I2C_Master_Receive+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80055a8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80055aa:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80055ac:	68f8      	ldr	r0, [r7, #12]
 80055ae:	f001 f88b 	bl	80066c8 <I2C_WaitOnRXNEFlagUntilTimeout>
 80055b2:	4603      	mov	r3, r0
 80055b4:	2b00      	cmp	r3, #0
 80055b6:	d001      	beq.n	80055bc <HAL_I2C_Master_Receive+0x1cc>
          {
            return HAL_ERROR;
 80055b8:	2301      	movs	r3, #1
 80055ba:	e139      	b.n	8005830 <HAL_I2C_Master_Receive+0x440>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80055bc:	68fb      	ldr	r3, [r7, #12]
 80055be:	681b      	ldr	r3, [r3, #0]
 80055c0:	691a      	ldr	r2, [r3, #16]
 80055c2:	68fb      	ldr	r3, [r7, #12]
 80055c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055c6:	b2d2      	uxtb	r2, r2
 80055c8:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80055ca:	68fb      	ldr	r3, [r7, #12]
 80055cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055ce:	1c5a      	adds	r2, r3, #1
 80055d0:	68fb      	ldr	r3, [r7, #12]
 80055d2:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80055d4:	68fb      	ldr	r3, [r7, #12]
 80055d6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80055d8:	3b01      	subs	r3, #1
 80055da:	b29a      	uxth	r2, r3
 80055dc:	68fb      	ldr	r3, [r7, #12]
 80055de:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 80055e0:	68fb      	ldr	r3, [r7, #12]
 80055e2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80055e4:	b29b      	uxth	r3, r3
 80055e6:	3b01      	subs	r3, #1
 80055e8:	b29a      	uxth	r2, r3
 80055ea:	68fb      	ldr	r3, [r7, #12]
 80055ec:	855a      	strh	r2, [r3, #42]	; 0x2a
 80055ee:	e10b      	b.n	8005808 <HAL_I2C_Master_Receive+0x418>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 80055f0:	68fb      	ldr	r3, [r7, #12]
 80055f2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80055f4:	2b02      	cmp	r3, #2
 80055f6:	d14e      	bne.n	8005696 <HAL_I2C_Master_Receive+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80055f8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80055fa:	9300      	str	r3, [sp, #0]
 80055fc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80055fe:	2200      	movs	r2, #0
 8005600:	4906      	ldr	r1, [pc, #24]	; (800561c <HAL_I2C_Master_Receive+0x22c>)
 8005602:	68f8      	ldr	r0, [r7, #12]
 8005604:	f000 ff08 	bl	8006418 <I2C_WaitOnFlagUntilTimeout>
 8005608:	4603      	mov	r3, r0
 800560a:	2b00      	cmp	r3, #0
 800560c:	d008      	beq.n	8005620 <HAL_I2C_Master_Receive+0x230>
          {
            return HAL_ERROR;
 800560e:	2301      	movs	r3, #1
 8005610:	e10e      	b.n	8005830 <HAL_I2C_Master_Receive+0x440>
 8005612:	bf00      	nop
 8005614:	00100002 	.word	0x00100002
 8005618:	ffff0000 	.word	0xffff0000
 800561c:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005620:	68fb      	ldr	r3, [r7, #12]
 8005622:	681b      	ldr	r3, [r3, #0]
 8005624:	681a      	ldr	r2, [r3, #0]
 8005626:	68fb      	ldr	r3, [r7, #12]
 8005628:	681b      	ldr	r3, [r3, #0]
 800562a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800562e:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005630:	68fb      	ldr	r3, [r7, #12]
 8005632:	681b      	ldr	r3, [r3, #0]
 8005634:	691a      	ldr	r2, [r3, #16]
 8005636:	68fb      	ldr	r3, [r7, #12]
 8005638:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800563a:	b2d2      	uxtb	r2, r2
 800563c:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800563e:	68fb      	ldr	r3, [r7, #12]
 8005640:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005642:	1c5a      	adds	r2, r3, #1
 8005644:	68fb      	ldr	r3, [r7, #12]
 8005646:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005648:	68fb      	ldr	r3, [r7, #12]
 800564a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800564c:	3b01      	subs	r3, #1
 800564e:	b29a      	uxth	r2, r3
 8005650:	68fb      	ldr	r3, [r7, #12]
 8005652:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005654:	68fb      	ldr	r3, [r7, #12]
 8005656:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005658:	b29b      	uxth	r3, r3
 800565a:	3b01      	subs	r3, #1
 800565c:	b29a      	uxth	r2, r3
 800565e:	68fb      	ldr	r3, [r7, #12]
 8005660:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005662:	68fb      	ldr	r3, [r7, #12]
 8005664:	681b      	ldr	r3, [r3, #0]
 8005666:	691a      	ldr	r2, [r3, #16]
 8005668:	68fb      	ldr	r3, [r7, #12]
 800566a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800566c:	b2d2      	uxtb	r2, r2
 800566e:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005670:	68fb      	ldr	r3, [r7, #12]
 8005672:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005674:	1c5a      	adds	r2, r3, #1
 8005676:	68fb      	ldr	r3, [r7, #12]
 8005678:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 800567a:	68fb      	ldr	r3, [r7, #12]
 800567c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800567e:	3b01      	subs	r3, #1
 8005680:	b29a      	uxth	r2, r3
 8005682:	68fb      	ldr	r3, [r7, #12]
 8005684:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005686:	68fb      	ldr	r3, [r7, #12]
 8005688:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800568a:	b29b      	uxth	r3, r3
 800568c:	3b01      	subs	r3, #1
 800568e:	b29a      	uxth	r2, r3
 8005690:	68fb      	ldr	r3, [r7, #12]
 8005692:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005694:	e0b8      	b.n	8005808 <HAL_I2C_Master_Receive+0x418>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005696:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005698:	9300      	str	r3, [sp, #0]
 800569a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800569c:	2200      	movs	r2, #0
 800569e:	4966      	ldr	r1, [pc, #408]	; (8005838 <HAL_I2C_Master_Receive+0x448>)
 80056a0:	68f8      	ldr	r0, [r7, #12]
 80056a2:	f000 feb9 	bl	8006418 <I2C_WaitOnFlagUntilTimeout>
 80056a6:	4603      	mov	r3, r0
 80056a8:	2b00      	cmp	r3, #0
 80056aa:	d001      	beq.n	80056b0 <HAL_I2C_Master_Receive+0x2c0>
          {
            return HAL_ERROR;
 80056ac:	2301      	movs	r3, #1
 80056ae:	e0bf      	b.n	8005830 <HAL_I2C_Master_Receive+0x440>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80056b0:	68fb      	ldr	r3, [r7, #12]
 80056b2:	681b      	ldr	r3, [r3, #0]
 80056b4:	681a      	ldr	r2, [r3, #0]
 80056b6:	68fb      	ldr	r3, [r7, #12]
 80056b8:	681b      	ldr	r3, [r3, #0]
 80056ba:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80056be:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80056c0:	68fb      	ldr	r3, [r7, #12]
 80056c2:	681b      	ldr	r3, [r3, #0]
 80056c4:	691a      	ldr	r2, [r3, #16]
 80056c6:	68fb      	ldr	r3, [r7, #12]
 80056c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056ca:	b2d2      	uxtb	r2, r2
 80056cc:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80056ce:	68fb      	ldr	r3, [r7, #12]
 80056d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056d2:	1c5a      	adds	r2, r3, #1
 80056d4:	68fb      	ldr	r3, [r7, #12]
 80056d6:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80056d8:	68fb      	ldr	r3, [r7, #12]
 80056da:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80056dc:	3b01      	subs	r3, #1
 80056de:	b29a      	uxth	r2, r3
 80056e0:	68fb      	ldr	r3, [r7, #12]
 80056e2:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 80056e4:	68fb      	ldr	r3, [r7, #12]
 80056e6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80056e8:	b29b      	uxth	r3, r3
 80056ea:	3b01      	subs	r3, #1
 80056ec:	b29a      	uxth	r2, r3
 80056ee:	68fb      	ldr	r3, [r7, #12]
 80056f0:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80056f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80056f4:	9300      	str	r3, [sp, #0]
 80056f6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80056f8:	2200      	movs	r2, #0
 80056fa:	494f      	ldr	r1, [pc, #316]	; (8005838 <HAL_I2C_Master_Receive+0x448>)
 80056fc:	68f8      	ldr	r0, [r7, #12]
 80056fe:	f000 fe8b 	bl	8006418 <I2C_WaitOnFlagUntilTimeout>
 8005702:	4603      	mov	r3, r0
 8005704:	2b00      	cmp	r3, #0
 8005706:	d001      	beq.n	800570c <HAL_I2C_Master_Receive+0x31c>
          {
            return HAL_ERROR;
 8005708:	2301      	movs	r3, #1
 800570a:	e091      	b.n	8005830 <HAL_I2C_Master_Receive+0x440>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800570c:	68fb      	ldr	r3, [r7, #12]
 800570e:	681b      	ldr	r3, [r3, #0]
 8005710:	681a      	ldr	r2, [r3, #0]
 8005712:	68fb      	ldr	r3, [r7, #12]
 8005714:	681b      	ldr	r3, [r3, #0]
 8005716:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800571a:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800571c:	68fb      	ldr	r3, [r7, #12]
 800571e:	681b      	ldr	r3, [r3, #0]
 8005720:	691a      	ldr	r2, [r3, #16]
 8005722:	68fb      	ldr	r3, [r7, #12]
 8005724:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005726:	b2d2      	uxtb	r2, r2
 8005728:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800572a:	68fb      	ldr	r3, [r7, #12]
 800572c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800572e:	1c5a      	adds	r2, r3, #1
 8005730:	68fb      	ldr	r3, [r7, #12]
 8005732:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005734:	68fb      	ldr	r3, [r7, #12]
 8005736:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005738:	3b01      	subs	r3, #1
 800573a:	b29a      	uxth	r2, r3
 800573c:	68fb      	ldr	r3, [r7, #12]
 800573e:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005740:	68fb      	ldr	r3, [r7, #12]
 8005742:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005744:	b29b      	uxth	r3, r3
 8005746:	3b01      	subs	r3, #1
 8005748:	b29a      	uxth	r2, r3
 800574a:	68fb      	ldr	r3, [r7, #12]
 800574c:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800574e:	68fb      	ldr	r3, [r7, #12]
 8005750:	681b      	ldr	r3, [r3, #0]
 8005752:	691a      	ldr	r2, [r3, #16]
 8005754:	68fb      	ldr	r3, [r7, #12]
 8005756:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005758:	b2d2      	uxtb	r2, r2
 800575a:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800575c:	68fb      	ldr	r3, [r7, #12]
 800575e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005760:	1c5a      	adds	r2, r3, #1
 8005762:	68fb      	ldr	r3, [r7, #12]
 8005764:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005766:	68fb      	ldr	r3, [r7, #12]
 8005768:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800576a:	3b01      	subs	r3, #1
 800576c:	b29a      	uxth	r2, r3
 800576e:	68fb      	ldr	r3, [r7, #12]
 8005770:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005772:	68fb      	ldr	r3, [r7, #12]
 8005774:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005776:	b29b      	uxth	r3, r3
 8005778:	3b01      	subs	r3, #1
 800577a:	b29a      	uxth	r2, r3
 800577c:	68fb      	ldr	r3, [r7, #12]
 800577e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005780:	e042      	b.n	8005808 <HAL_I2C_Master_Receive+0x418>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005782:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005784:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8005786:	68f8      	ldr	r0, [r7, #12]
 8005788:	f000 ff9e 	bl	80066c8 <I2C_WaitOnRXNEFlagUntilTimeout>
 800578c:	4603      	mov	r3, r0
 800578e:	2b00      	cmp	r3, #0
 8005790:	d001      	beq.n	8005796 <HAL_I2C_Master_Receive+0x3a6>
        {
          return HAL_ERROR;
 8005792:	2301      	movs	r3, #1
 8005794:	e04c      	b.n	8005830 <HAL_I2C_Master_Receive+0x440>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005796:	68fb      	ldr	r3, [r7, #12]
 8005798:	681b      	ldr	r3, [r3, #0]
 800579a:	691a      	ldr	r2, [r3, #16]
 800579c:	68fb      	ldr	r3, [r7, #12]
 800579e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057a0:	b2d2      	uxtb	r2, r2
 80057a2:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 80057a4:	68fb      	ldr	r3, [r7, #12]
 80057a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057a8:	1c5a      	adds	r2, r3, #1
 80057aa:	68fb      	ldr	r3, [r7, #12]
 80057ac:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferSize--;
 80057ae:	68fb      	ldr	r3, [r7, #12]
 80057b0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80057b2:	3b01      	subs	r3, #1
 80057b4:	b29a      	uxth	r2, r3
 80057b6:	68fb      	ldr	r3, [r7, #12]
 80057b8:	851a      	strh	r2, [r3, #40]	; 0x28
        hi2c->XferCount--;
 80057ba:	68fb      	ldr	r3, [r7, #12]
 80057bc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80057be:	b29b      	uxth	r3, r3
 80057c0:	3b01      	subs	r3, #1
 80057c2:	b29a      	uxth	r2, r3
 80057c4:	68fb      	ldr	r3, [r7, #12]
 80057c6:	855a      	strh	r2, [r3, #42]	; 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80057c8:	68fb      	ldr	r3, [r7, #12]
 80057ca:	681b      	ldr	r3, [r3, #0]
 80057cc:	695b      	ldr	r3, [r3, #20]
 80057ce:	f003 0304 	and.w	r3, r3, #4
 80057d2:	2b04      	cmp	r3, #4
 80057d4:	d118      	bne.n	8005808 <HAL_I2C_Master_Receive+0x418>
        {
          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80057d6:	68fb      	ldr	r3, [r7, #12]
 80057d8:	681b      	ldr	r3, [r3, #0]
 80057da:	691a      	ldr	r2, [r3, #16]
 80057dc:	68fb      	ldr	r3, [r7, #12]
 80057de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057e0:	b2d2      	uxtb	r2, r2
 80057e2:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80057e4:	68fb      	ldr	r3, [r7, #12]
 80057e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057e8:	1c5a      	adds	r2, r3, #1
 80057ea:	68fb      	ldr	r3, [r7, #12]
 80057ec:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80057ee:	68fb      	ldr	r3, [r7, #12]
 80057f0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80057f2:	3b01      	subs	r3, #1
 80057f4:	b29a      	uxth	r2, r3
 80057f6:	68fb      	ldr	r3, [r7, #12]
 80057f8:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 80057fa:	68fb      	ldr	r3, [r7, #12]
 80057fc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80057fe:	b29b      	uxth	r3, r3
 8005800:	3b01      	subs	r3, #1
 8005802:	b29a      	uxth	r2, r3
 8005804:	68fb      	ldr	r3, [r7, #12]
 8005806:	855a      	strh	r2, [r3, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8005808:	68fb      	ldr	r3, [r7, #12]
 800580a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800580c:	2b00      	cmp	r3, #0
 800580e:	f47f aec2 	bne.w	8005596 <HAL_I2C_Master_Receive+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 8005812:	68fb      	ldr	r3, [r7, #12]
 8005814:	2220      	movs	r2, #32
 8005816:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800581a:	68fb      	ldr	r3, [r7, #12]
 800581c:	2200      	movs	r2, #0
 800581e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005822:	68fb      	ldr	r3, [r7, #12]
 8005824:	2200      	movs	r2, #0
 8005826:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 800582a:	2300      	movs	r3, #0
 800582c:	e000      	b.n	8005830 <HAL_I2C_Master_Receive+0x440>
  }
  else
  {
    return HAL_BUSY;
 800582e:	2302      	movs	r3, #2
  }
}
 8005830:	4618      	mov	r0, r3
 8005832:	3728      	adds	r7, #40	; 0x28
 8005834:	46bd      	mov	sp, r7
 8005836:	bd80      	pop	{r7, pc}
 8005838:	00010004 	.word	0x00010004

0800583c <HAL_I2C_Mem_Write>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800583c:	b580      	push	{r7, lr}
 800583e:	b088      	sub	sp, #32
 8005840:	af02      	add	r7, sp, #8
 8005842:	60f8      	str	r0, [r7, #12]
 8005844:	4608      	mov	r0, r1
 8005846:	4611      	mov	r1, r2
 8005848:	461a      	mov	r2, r3
 800584a:	4603      	mov	r3, r0
 800584c:	817b      	strh	r3, [r7, #10]
 800584e:	460b      	mov	r3, r1
 8005850:	813b      	strh	r3, [r7, #8]
 8005852:	4613      	mov	r3, r2
 8005854:	80fb      	strh	r3, [r7, #6]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8005856:	f7fe f91f 	bl	8003a98 <HAL_GetTick>
 800585a:	6178      	str	r0, [r7, #20]

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800585c:	68fb      	ldr	r3, [r7, #12]
 800585e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005862:	b2db      	uxtb	r3, r3
 8005864:	2b20      	cmp	r3, #32
 8005866:	f040 80d9 	bne.w	8005a1c <HAL_I2C_Mem_Write+0x1e0>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800586a:	697b      	ldr	r3, [r7, #20]
 800586c:	9300      	str	r3, [sp, #0]
 800586e:	2319      	movs	r3, #25
 8005870:	2201      	movs	r2, #1
 8005872:	496d      	ldr	r1, [pc, #436]	; (8005a28 <HAL_I2C_Mem_Write+0x1ec>)
 8005874:	68f8      	ldr	r0, [r7, #12]
 8005876:	f000 fdcf 	bl	8006418 <I2C_WaitOnFlagUntilTimeout>
 800587a:	4603      	mov	r3, r0
 800587c:	2b00      	cmp	r3, #0
 800587e:	d001      	beq.n	8005884 <HAL_I2C_Mem_Write+0x48>
    {
      return HAL_BUSY;
 8005880:	2302      	movs	r3, #2
 8005882:	e0cc      	b.n	8005a1e <HAL_I2C_Mem_Write+0x1e2>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005884:	68fb      	ldr	r3, [r7, #12]
 8005886:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800588a:	2b01      	cmp	r3, #1
 800588c:	d101      	bne.n	8005892 <HAL_I2C_Mem_Write+0x56>
 800588e:	2302      	movs	r3, #2
 8005890:	e0c5      	b.n	8005a1e <HAL_I2C_Mem_Write+0x1e2>
 8005892:	68fb      	ldr	r3, [r7, #12]
 8005894:	2201      	movs	r2, #1
 8005896:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800589a:	68fb      	ldr	r3, [r7, #12]
 800589c:	681b      	ldr	r3, [r3, #0]
 800589e:	681b      	ldr	r3, [r3, #0]
 80058a0:	f003 0301 	and.w	r3, r3, #1
 80058a4:	2b01      	cmp	r3, #1
 80058a6:	d007      	beq.n	80058b8 <HAL_I2C_Mem_Write+0x7c>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 80058a8:	68fb      	ldr	r3, [r7, #12]
 80058aa:	681b      	ldr	r3, [r3, #0]
 80058ac:	681a      	ldr	r2, [r3, #0]
 80058ae:	68fb      	ldr	r3, [r7, #12]
 80058b0:	681b      	ldr	r3, [r3, #0]
 80058b2:	f042 0201 	orr.w	r2, r2, #1
 80058b6:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80058b8:	68fb      	ldr	r3, [r7, #12]
 80058ba:	681b      	ldr	r3, [r3, #0]
 80058bc:	681a      	ldr	r2, [r3, #0]
 80058be:	68fb      	ldr	r3, [r7, #12]
 80058c0:	681b      	ldr	r3, [r3, #0]
 80058c2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80058c6:	601a      	str	r2, [r3, #0]

    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80058c8:	68fb      	ldr	r3, [r7, #12]
 80058ca:	2221      	movs	r2, #33	; 0x21
 80058cc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80058d0:	68fb      	ldr	r3, [r7, #12]
 80058d2:	2240      	movs	r2, #64	; 0x40
 80058d4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80058d8:	68fb      	ldr	r3, [r7, #12]
 80058da:	2200      	movs	r2, #0
 80058dc:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 80058de:	68fb      	ldr	r3, [r7, #12]
 80058e0:	6a3a      	ldr	r2, [r7, #32]
 80058e2:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 80058e4:	68fb      	ldr	r3, [r7, #12]
 80058e6:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 80058e8:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80058ea:	68fb      	ldr	r3, [r7, #12]
 80058ec:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80058ee:	b29a      	uxth	r2, r3
 80058f0:	68fb      	ldr	r3, [r7, #12]
 80058f2:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80058f4:	68fb      	ldr	r3, [r7, #12]
 80058f6:	4a4d      	ldr	r2, [pc, #308]	; (8005a2c <HAL_I2C_Mem_Write+0x1f0>)
 80058f8:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80058fa:	88f8      	ldrh	r0, [r7, #6]
 80058fc:	893a      	ldrh	r2, [r7, #8]
 80058fe:	8979      	ldrh	r1, [r7, #10]
 8005900:	697b      	ldr	r3, [r7, #20]
 8005902:	9301      	str	r3, [sp, #4]
 8005904:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005906:	9300      	str	r3, [sp, #0]
 8005908:	4603      	mov	r3, r0
 800590a:	68f8      	ldr	r0, [r7, #12]
 800590c:	f000 fc06 	bl	800611c <I2C_RequestMemoryWrite>
 8005910:	4603      	mov	r3, r0
 8005912:	2b00      	cmp	r3, #0
 8005914:	d052      	beq.n	80059bc <HAL_I2C_Mem_Write+0x180>
    {
      return HAL_ERROR;
 8005916:	2301      	movs	r3, #1
 8005918:	e081      	b.n	8005a1e <HAL_I2C_Mem_Write+0x1e2>
    }

    while (hi2c->XferSize > 0U)
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800591a:	697a      	ldr	r2, [r7, #20]
 800591c:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800591e:	68f8      	ldr	r0, [r7, #12]
 8005920:	f000 fe50 	bl	80065c4 <I2C_WaitOnTXEFlagUntilTimeout>
 8005924:	4603      	mov	r3, r0
 8005926:	2b00      	cmp	r3, #0
 8005928:	d00d      	beq.n	8005946 <HAL_I2C_Mem_Write+0x10a>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800592a:	68fb      	ldr	r3, [r7, #12]
 800592c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800592e:	2b04      	cmp	r3, #4
 8005930:	d107      	bne.n	8005942 <HAL_I2C_Mem_Write+0x106>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005932:	68fb      	ldr	r3, [r7, #12]
 8005934:	681b      	ldr	r3, [r3, #0]
 8005936:	681a      	ldr	r2, [r3, #0]
 8005938:	68fb      	ldr	r3, [r7, #12]
 800593a:	681b      	ldr	r3, [r3, #0]
 800593c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005940:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 8005942:	2301      	movs	r3, #1
 8005944:	e06b      	b.n	8005a1e <HAL_I2C_Mem_Write+0x1e2>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005946:	68fb      	ldr	r3, [r7, #12]
 8005948:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800594a:	781a      	ldrb	r2, [r3, #0]
 800594c:	68fb      	ldr	r3, [r7, #12]
 800594e:	681b      	ldr	r3, [r3, #0]
 8005950:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8005952:	68fb      	ldr	r3, [r7, #12]
 8005954:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005956:	1c5a      	adds	r2, r3, #1
 8005958:	68fb      	ldr	r3, [r7, #12]
 800595a:	625a      	str	r2, [r3, #36]	; 0x24

      /* Update counter */
      hi2c->XferSize--;
 800595c:	68fb      	ldr	r3, [r7, #12]
 800595e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005960:	3b01      	subs	r3, #1
 8005962:	b29a      	uxth	r2, r3
 8005964:	68fb      	ldr	r3, [r7, #12]
 8005966:	851a      	strh	r2, [r3, #40]	; 0x28
      hi2c->XferCount--;
 8005968:	68fb      	ldr	r3, [r7, #12]
 800596a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800596c:	b29b      	uxth	r3, r3
 800596e:	3b01      	subs	r3, #1
 8005970:	b29a      	uxth	r2, r3
 8005972:	68fb      	ldr	r3, [r7, #12]
 8005974:	855a      	strh	r2, [r3, #42]	; 0x2a

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005976:	68fb      	ldr	r3, [r7, #12]
 8005978:	681b      	ldr	r3, [r3, #0]
 800597a:	695b      	ldr	r3, [r3, #20]
 800597c:	f003 0304 	and.w	r3, r3, #4
 8005980:	2b04      	cmp	r3, #4
 8005982:	d11b      	bne.n	80059bc <HAL_I2C_Mem_Write+0x180>
 8005984:	68fb      	ldr	r3, [r7, #12]
 8005986:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005988:	2b00      	cmp	r3, #0
 800598a:	d017      	beq.n	80059bc <HAL_I2C_Mem_Write+0x180>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800598c:	68fb      	ldr	r3, [r7, #12]
 800598e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005990:	781a      	ldrb	r2, [r3, #0]
 8005992:	68fb      	ldr	r3, [r7, #12]
 8005994:	681b      	ldr	r3, [r3, #0]
 8005996:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8005998:	68fb      	ldr	r3, [r7, #12]
 800599a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800599c:	1c5a      	adds	r2, r3, #1
 800599e:	68fb      	ldr	r3, [r7, #12]
 80059a0:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferSize--;
 80059a2:	68fb      	ldr	r3, [r7, #12]
 80059a4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80059a6:	3b01      	subs	r3, #1
 80059a8:	b29a      	uxth	r2, r3
 80059aa:	68fb      	ldr	r3, [r7, #12]
 80059ac:	851a      	strh	r2, [r3, #40]	; 0x28
        hi2c->XferCount--;
 80059ae:	68fb      	ldr	r3, [r7, #12]
 80059b0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80059b2:	b29b      	uxth	r3, r3
 80059b4:	3b01      	subs	r3, #1
 80059b6:	b29a      	uxth	r2, r3
 80059b8:	68fb      	ldr	r3, [r7, #12]
 80059ba:	855a      	strh	r2, [r3, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 80059bc:	68fb      	ldr	r3, [r7, #12]
 80059be:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80059c0:	2b00      	cmp	r3, #0
 80059c2:	d1aa      	bne.n	800591a <HAL_I2C_Mem_Write+0xde>
      }
    }

    /* Wait until BTF flag is set */
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80059c4:	697a      	ldr	r2, [r7, #20]
 80059c6:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80059c8:	68f8      	ldr	r0, [r7, #12]
 80059ca:	f000 fe3c 	bl	8006646 <I2C_WaitOnBTFFlagUntilTimeout>
 80059ce:	4603      	mov	r3, r0
 80059d0:	2b00      	cmp	r3, #0
 80059d2:	d00d      	beq.n	80059f0 <HAL_I2C_Mem_Write+0x1b4>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80059d4:	68fb      	ldr	r3, [r7, #12]
 80059d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80059d8:	2b04      	cmp	r3, #4
 80059da:	d107      	bne.n	80059ec <HAL_I2C_Mem_Write+0x1b0>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80059dc:	68fb      	ldr	r3, [r7, #12]
 80059de:	681b      	ldr	r3, [r3, #0]
 80059e0:	681a      	ldr	r2, [r3, #0]
 80059e2:	68fb      	ldr	r3, [r7, #12]
 80059e4:	681b      	ldr	r3, [r3, #0]
 80059e6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80059ea:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 80059ec:	2301      	movs	r3, #1
 80059ee:	e016      	b.n	8005a1e <HAL_I2C_Mem_Write+0x1e2>
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80059f0:	68fb      	ldr	r3, [r7, #12]
 80059f2:	681b      	ldr	r3, [r3, #0]
 80059f4:	681a      	ldr	r2, [r3, #0]
 80059f6:	68fb      	ldr	r3, [r7, #12]
 80059f8:	681b      	ldr	r3, [r3, #0]
 80059fa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80059fe:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005a00:	68fb      	ldr	r3, [r7, #12]
 8005a02:	2220      	movs	r2, #32
 8005a04:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005a08:	68fb      	ldr	r3, [r7, #12]
 8005a0a:	2200      	movs	r2, #0
 8005a0c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005a10:	68fb      	ldr	r3, [r7, #12]
 8005a12:	2200      	movs	r2, #0
 8005a14:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 8005a18:	2300      	movs	r3, #0
 8005a1a:	e000      	b.n	8005a1e <HAL_I2C_Mem_Write+0x1e2>
  }
  else
  {
    return HAL_BUSY;
 8005a1c:	2302      	movs	r3, #2
  }
}
 8005a1e:	4618      	mov	r0, r3
 8005a20:	3718      	adds	r7, #24
 8005a22:	46bd      	mov	sp, r7
 8005a24:	bd80      	pop	{r7, pc}
 8005a26:	bf00      	nop
 8005a28:	00100002 	.word	0x00100002
 8005a2c:	ffff0000 	.word	0xffff0000

08005a30 <HAL_I2C_Mem_Read>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8005a30:	b580      	push	{r7, lr}
 8005a32:	b08c      	sub	sp, #48	; 0x30
 8005a34:	af02      	add	r7, sp, #8
 8005a36:	60f8      	str	r0, [r7, #12]
 8005a38:	4608      	mov	r0, r1
 8005a3a:	4611      	mov	r1, r2
 8005a3c:	461a      	mov	r2, r3
 8005a3e:	4603      	mov	r3, r0
 8005a40:	817b      	strh	r3, [r7, #10]
 8005a42:	460b      	mov	r3, r1
 8005a44:	813b      	strh	r3, [r7, #8]
 8005a46:	4613      	mov	r3, r2
 8005a48:	80fb      	strh	r3, [r7, #6]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8005a4a:	f7fe f825 	bl	8003a98 <HAL_GetTick>
 8005a4e:	6278      	str	r0, [r7, #36]	; 0x24

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005a50:	68fb      	ldr	r3, [r7, #12]
 8005a52:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005a56:	b2db      	uxtb	r3, r3
 8005a58:	2b20      	cmp	r3, #32
 8005a5a:	f040 8208 	bne.w	8005e6e <HAL_I2C_Mem_Read+0x43e>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005a5e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005a60:	9300      	str	r3, [sp, #0]
 8005a62:	2319      	movs	r3, #25
 8005a64:	2201      	movs	r2, #1
 8005a66:	497b      	ldr	r1, [pc, #492]	; (8005c54 <HAL_I2C_Mem_Read+0x224>)
 8005a68:	68f8      	ldr	r0, [r7, #12]
 8005a6a:	f000 fcd5 	bl	8006418 <I2C_WaitOnFlagUntilTimeout>
 8005a6e:	4603      	mov	r3, r0
 8005a70:	2b00      	cmp	r3, #0
 8005a72:	d001      	beq.n	8005a78 <HAL_I2C_Mem_Read+0x48>
    {
      return HAL_BUSY;
 8005a74:	2302      	movs	r3, #2
 8005a76:	e1fb      	b.n	8005e70 <HAL_I2C_Mem_Read+0x440>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005a78:	68fb      	ldr	r3, [r7, #12]
 8005a7a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005a7e:	2b01      	cmp	r3, #1
 8005a80:	d101      	bne.n	8005a86 <HAL_I2C_Mem_Read+0x56>
 8005a82:	2302      	movs	r3, #2
 8005a84:	e1f4      	b.n	8005e70 <HAL_I2C_Mem_Read+0x440>
 8005a86:	68fb      	ldr	r3, [r7, #12]
 8005a88:	2201      	movs	r2, #1
 8005a8a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005a8e:	68fb      	ldr	r3, [r7, #12]
 8005a90:	681b      	ldr	r3, [r3, #0]
 8005a92:	681b      	ldr	r3, [r3, #0]
 8005a94:	f003 0301 	and.w	r3, r3, #1
 8005a98:	2b01      	cmp	r3, #1
 8005a9a:	d007      	beq.n	8005aac <HAL_I2C_Mem_Read+0x7c>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8005a9c:	68fb      	ldr	r3, [r7, #12]
 8005a9e:	681b      	ldr	r3, [r3, #0]
 8005aa0:	681a      	ldr	r2, [r3, #0]
 8005aa2:	68fb      	ldr	r3, [r7, #12]
 8005aa4:	681b      	ldr	r3, [r3, #0]
 8005aa6:	f042 0201 	orr.w	r2, r2, #1
 8005aaa:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005aac:	68fb      	ldr	r3, [r7, #12]
 8005aae:	681b      	ldr	r3, [r3, #0]
 8005ab0:	681a      	ldr	r2, [r3, #0]
 8005ab2:	68fb      	ldr	r3, [r7, #12]
 8005ab4:	681b      	ldr	r3, [r3, #0]
 8005ab6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005aba:	601a      	str	r2, [r3, #0]

    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005abc:	68fb      	ldr	r3, [r7, #12]
 8005abe:	2222      	movs	r2, #34	; 0x22
 8005ac0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005ac4:	68fb      	ldr	r3, [r7, #12]
 8005ac6:	2240      	movs	r2, #64	; 0x40
 8005ac8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005acc:	68fb      	ldr	r3, [r7, #12]
 8005ace:	2200      	movs	r2, #0
 8005ad0:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 8005ad2:	68fb      	ldr	r3, [r7, #12]
 8005ad4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005ad6:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005ad8:	68fb      	ldr	r3, [r7, #12]
 8005ada:	8eba      	ldrh	r2, [r7, #52]	; 0x34
 8005adc:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8005ade:	68fb      	ldr	r3, [r7, #12]
 8005ae0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005ae2:	b29a      	uxth	r2, r3
 8005ae4:	68fb      	ldr	r3, [r7, #12]
 8005ae6:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005ae8:	68fb      	ldr	r3, [r7, #12]
 8005aea:	4a5b      	ldr	r2, [pc, #364]	; (8005c58 <HAL_I2C_Mem_Read+0x228>)
 8005aec:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005aee:	88f8      	ldrh	r0, [r7, #6]
 8005af0:	893a      	ldrh	r2, [r7, #8]
 8005af2:	8979      	ldrh	r1, [r7, #10]
 8005af4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005af6:	9301      	str	r3, [sp, #4]
 8005af8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005afa:	9300      	str	r3, [sp, #0]
 8005afc:	4603      	mov	r3, r0
 8005afe:	68f8      	ldr	r0, [r7, #12]
 8005b00:	f000 fba2 	bl	8006248 <I2C_RequestMemoryRead>
 8005b04:	4603      	mov	r3, r0
 8005b06:	2b00      	cmp	r3, #0
 8005b08:	d001      	beq.n	8005b0e <HAL_I2C_Mem_Read+0xde>
    {
      return HAL_ERROR;
 8005b0a:	2301      	movs	r3, #1
 8005b0c:	e1b0      	b.n	8005e70 <HAL_I2C_Mem_Read+0x440>
    }

    if (hi2c->XferSize == 0U)
 8005b0e:	68fb      	ldr	r3, [r7, #12]
 8005b10:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005b12:	2b00      	cmp	r3, #0
 8005b14:	d113      	bne.n	8005b3e <HAL_I2C_Mem_Read+0x10e>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005b16:	2300      	movs	r3, #0
 8005b18:	623b      	str	r3, [r7, #32]
 8005b1a:	68fb      	ldr	r3, [r7, #12]
 8005b1c:	681b      	ldr	r3, [r3, #0]
 8005b1e:	695b      	ldr	r3, [r3, #20]
 8005b20:	623b      	str	r3, [r7, #32]
 8005b22:	68fb      	ldr	r3, [r7, #12]
 8005b24:	681b      	ldr	r3, [r3, #0]
 8005b26:	699b      	ldr	r3, [r3, #24]
 8005b28:	623b      	str	r3, [r7, #32]
 8005b2a:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005b2c:	68fb      	ldr	r3, [r7, #12]
 8005b2e:	681b      	ldr	r3, [r3, #0]
 8005b30:	681a      	ldr	r2, [r3, #0]
 8005b32:	68fb      	ldr	r3, [r7, #12]
 8005b34:	681b      	ldr	r3, [r3, #0]
 8005b36:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005b3a:	601a      	str	r2, [r3, #0]
 8005b3c:	e184      	b.n	8005e48 <HAL_I2C_Mem_Read+0x418>
    }
    else if (hi2c->XferSize == 1U)
 8005b3e:	68fb      	ldr	r3, [r7, #12]
 8005b40:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005b42:	2b01      	cmp	r3, #1
 8005b44:	d11b      	bne.n	8005b7e <HAL_I2C_Mem_Read+0x14e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005b46:	68fb      	ldr	r3, [r7, #12]
 8005b48:	681b      	ldr	r3, [r3, #0]
 8005b4a:	681a      	ldr	r2, [r3, #0]
 8005b4c:	68fb      	ldr	r3, [r7, #12]
 8005b4e:	681b      	ldr	r3, [r3, #0]
 8005b50:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005b54:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005b56:	2300      	movs	r3, #0
 8005b58:	61fb      	str	r3, [r7, #28]
 8005b5a:	68fb      	ldr	r3, [r7, #12]
 8005b5c:	681b      	ldr	r3, [r3, #0]
 8005b5e:	695b      	ldr	r3, [r3, #20]
 8005b60:	61fb      	str	r3, [r7, #28]
 8005b62:	68fb      	ldr	r3, [r7, #12]
 8005b64:	681b      	ldr	r3, [r3, #0]
 8005b66:	699b      	ldr	r3, [r3, #24]
 8005b68:	61fb      	str	r3, [r7, #28]
 8005b6a:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005b6c:	68fb      	ldr	r3, [r7, #12]
 8005b6e:	681b      	ldr	r3, [r3, #0]
 8005b70:	681a      	ldr	r2, [r3, #0]
 8005b72:	68fb      	ldr	r3, [r7, #12]
 8005b74:	681b      	ldr	r3, [r3, #0]
 8005b76:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005b7a:	601a      	str	r2, [r3, #0]
 8005b7c:	e164      	b.n	8005e48 <HAL_I2C_Mem_Read+0x418>
    }
    else if (hi2c->XferSize == 2U)
 8005b7e:	68fb      	ldr	r3, [r7, #12]
 8005b80:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005b82:	2b02      	cmp	r3, #2
 8005b84:	d11b      	bne.n	8005bbe <HAL_I2C_Mem_Read+0x18e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005b86:	68fb      	ldr	r3, [r7, #12]
 8005b88:	681b      	ldr	r3, [r3, #0]
 8005b8a:	681a      	ldr	r2, [r3, #0]
 8005b8c:	68fb      	ldr	r3, [r7, #12]
 8005b8e:	681b      	ldr	r3, [r3, #0]
 8005b90:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005b94:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005b96:	68fb      	ldr	r3, [r7, #12]
 8005b98:	681b      	ldr	r3, [r3, #0]
 8005b9a:	681a      	ldr	r2, [r3, #0]
 8005b9c:	68fb      	ldr	r3, [r7, #12]
 8005b9e:	681b      	ldr	r3, [r3, #0]
 8005ba0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005ba4:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005ba6:	2300      	movs	r3, #0
 8005ba8:	61bb      	str	r3, [r7, #24]
 8005baa:	68fb      	ldr	r3, [r7, #12]
 8005bac:	681b      	ldr	r3, [r3, #0]
 8005bae:	695b      	ldr	r3, [r3, #20]
 8005bb0:	61bb      	str	r3, [r7, #24]
 8005bb2:	68fb      	ldr	r3, [r7, #12]
 8005bb4:	681b      	ldr	r3, [r3, #0]
 8005bb6:	699b      	ldr	r3, [r3, #24]
 8005bb8:	61bb      	str	r3, [r7, #24]
 8005bba:	69bb      	ldr	r3, [r7, #24]
 8005bbc:	e144      	b.n	8005e48 <HAL_I2C_Mem_Read+0x418>
    }
    else
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005bbe:	2300      	movs	r3, #0
 8005bc0:	617b      	str	r3, [r7, #20]
 8005bc2:	68fb      	ldr	r3, [r7, #12]
 8005bc4:	681b      	ldr	r3, [r3, #0]
 8005bc6:	695b      	ldr	r3, [r3, #20]
 8005bc8:	617b      	str	r3, [r7, #20]
 8005bca:	68fb      	ldr	r3, [r7, #12]
 8005bcc:	681b      	ldr	r3, [r3, #0]
 8005bce:	699b      	ldr	r3, [r3, #24]
 8005bd0:	617b      	str	r3, [r7, #20]
 8005bd2:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 8005bd4:	e138      	b.n	8005e48 <HAL_I2C_Mem_Read+0x418>
    {
      if (hi2c->XferSize <= 3U)
 8005bd6:	68fb      	ldr	r3, [r7, #12]
 8005bd8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005bda:	2b03      	cmp	r3, #3
 8005bdc:	f200 80f1 	bhi.w	8005dc2 <HAL_I2C_Mem_Read+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 8005be0:	68fb      	ldr	r3, [r7, #12]
 8005be2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005be4:	2b01      	cmp	r3, #1
 8005be6:	d123      	bne.n	8005c30 <HAL_I2C_Mem_Read+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005be8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005bea:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8005bec:	68f8      	ldr	r0, [r7, #12]
 8005bee:	f000 fd6b 	bl	80066c8 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005bf2:	4603      	mov	r3, r0
 8005bf4:	2b00      	cmp	r3, #0
 8005bf6:	d001      	beq.n	8005bfc <HAL_I2C_Mem_Read+0x1cc>
          {
            return HAL_ERROR;
 8005bf8:	2301      	movs	r3, #1
 8005bfa:	e139      	b.n	8005e70 <HAL_I2C_Mem_Read+0x440>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005bfc:	68fb      	ldr	r3, [r7, #12]
 8005bfe:	681b      	ldr	r3, [r3, #0]
 8005c00:	691a      	ldr	r2, [r3, #16]
 8005c02:	68fb      	ldr	r3, [r7, #12]
 8005c04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c06:	b2d2      	uxtb	r2, r2
 8005c08:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005c0a:	68fb      	ldr	r3, [r7, #12]
 8005c0c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c0e:	1c5a      	adds	r2, r3, #1
 8005c10:	68fb      	ldr	r3, [r7, #12]
 8005c12:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005c14:	68fb      	ldr	r3, [r7, #12]
 8005c16:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005c18:	3b01      	subs	r3, #1
 8005c1a:	b29a      	uxth	r2, r3
 8005c1c:	68fb      	ldr	r3, [r7, #12]
 8005c1e:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005c20:	68fb      	ldr	r3, [r7, #12]
 8005c22:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005c24:	b29b      	uxth	r3, r3
 8005c26:	3b01      	subs	r3, #1
 8005c28:	b29a      	uxth	r2, r3
 8005c2a:	68fb      	ldr	r3, [r7, #12]
 8005c2c:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005c2e:	e10b      	b.n	8005e48 <HAL_I2C_Mem_Read+0x418>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 8005c30:	68fb      	ldr	r3, [r7, #12]
 8005c32:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005c34:	2b02      	cmp	r3, #2
 8005c36:	d14e      	bne.n	8005cd6 <HAL_I2C_Mem_Read+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005c38:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005c3a:	9300      	str	r3, [sp, #0]
 8005c3c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005c3e:	2200      	movs	r2, #0
 8005c40:	4906      	ldr	r1, [pc, #24]	; (8005c5c <HAL_I2C_Mem_Read+0x22c>)
 8005c42:	68f8      	ldr	r0, [r7, #12]
 8005c44:	f000 fbe8 	bl	8006418 <I2C_WaitOnFlagUntilTimeout>
 8005c48:	4603      	mov	r3, r0
 8005c4a:	2b00      	cmp	r3, #0
 8005c4c:	d008      	beq.n	8005c60 <HAL_I2C_Mem_Read+0x230>
          {
            return HAL_ERROR;
 8005c4e:	2301      	movs	r3, #1
 8005c50:	e10e      	b.n	8005e70 <HAL_I2C_Mem_Read+0x440>
 8005c52:	bf00      	nop
 8005c54:	00100002 	.word	0x00100002
 8005c58:	ffff0000 	.word	0xffff0000
 8005c5c:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005c60:	68fb      	ldr	r3, [r7, #12]
 8005c62:	681b      	ldr	r3, [r3, #0]
 8005c64:	681a      	ldr	r2, [r3, #0]
 8005c66:	68fb      	ldr	r3, [r7, #12]
 8005c68:	681b      	ldr	r3, [r3, #0]
 8005c6a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005c6e:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005c70:	68fb      	ldr	r3, [r7, #12]
 8005c72:	681b      	ldr	r3, [r3, #0]
 8005c74:	691a      	ldr	r2, [r3, #16]
 8005c76:	68fb      	ldr	r3, [r7, #12]
 8005c78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c7a:	b2d2      	uxtb	r2, r2
 8005c7c:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005c7e:	68fb      	ldr	r3, [r7, #12]
 8005c80:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c82:	1c5a      	adds	r2, r3, #1
 8005c84:	68fb      	ldr	r3, [r7, #12]
 8005c86:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005c88:	68fb      	ldr	r3, [r7, #12]
 8005c8a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005c8c:	3b01      	subs	r3, #1
 8005c8e:	b29a      	uxth	r2, r3
 8005c90:	68fb      	ldr	r3, [r7, #12]
 8005c92:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005c94:	68fb      	ldr	r3, [r7, #12]
 8005c96:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005c98:	b29b      	uxth	r3, r3
 8005c9a:	3b01      	subs	r3, #1
 8005c9c:	b29a      	uxth	r2, r3
 8005c9e:	68fb      	ldr	r3, [r7, #12]
 8005ca0:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005ca2:	68fb      	ldr	r3, [r7, #12]
 8005ca4:	681b      	ldr	r3, [r3, #0]
 8005ca6:	691a      	ldr	r2, [r3, #16]
 8005ca8:	68fb      	ldr	r3, [r7, #12]
 8005caa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005cac:	b2d2      	uxtb	r2, r2
 8005cae:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005cb0:	68fb      	ldr	r3, [r7, #12]
 8005cb2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005cb4:	1c5a      	adds	r2, r3, #1
 8005cb6:	68fb      	ldr	r3, [r7, #12]
 8005cb8:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005cba:	68fb      	ldr	r3, [r7, #12]
 8005cbc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005cbe:	3b01      	subs	r3, #1
 8005cc0:	b29a      	uxth	r2, r3
 8005cc2:	68fb      	ldr	r3, [r7, #12]
 8005cc4:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005cc6:	68fb      	ldr	r3, [r7, #12]
 8005cc8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005cca:	b29b      	uxth	r3, r3
 8005ccc:	3b01      	subs	r3, #1
 8005cce:	b29a      	uxth	r2, r3
 8005cd0:	68fb      	ldr	r3, [r7, #12]
 8005cd2:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005cd4:	e0b8      	b.n	8005e48 <HAL_I2C_Mem_Read+0x418>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005cd6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005cd8:	9300      	str	r3, [sp, #0]
 8005cda:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005cdc:	2200      	movs	r2, #0
 8005cde:	4966      	ldr	r1, [pc, #408]	; (8005e78 <HAL_I2C_Mem_Read+0x448>)
 8005ce0:	68f8      	ldr	r0, [r7, #12]
 8005ce2:	f000 fb99 	bl	8006418 <I2C_WaitOnFlagUntilTimeout>
 8005ce6:	4603      	mov	r3, r0
 8005ce8:	2b00      	cmp	r3, #0
 8005cea:	d001      	beq.n	8005cf0 <HAL_I2C_Mem_Read+0x2c0>
          {
            return HAL_ERROR;
 8005cec:	2301      	movs	r3, #1
 8005cee:	e0bf      	b.n	8005e70 <HAL_I2C_Mem_Read+0x440>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005cf0:	68fb      	ldr	r3, [r7, #12]
 8005cf2:	681b      	ldr	r3, [r3, #0]
 8005cf4:	681a      	ldr	r2, [r3, #0]
 8005cf6:	68fb      	ldr	r3, [r7, #12]
 8005cf8:	681b      	ldr	r3, [r3, #0]
 8005cfa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005cfe:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005d00:	68fb      	ldr	r3, [r7, #12]
 8005d02:	681b      	ldr	r3, [r3, #0]
 8005d04:	691a      	ldr	r2, [r3, #16]
 8005d06:	68fb      	ldr	r3, [r7, #12]
 8005d08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d0a:	b2d2      	uxtb	r2, r2
 8005d0c:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005d0e:	68fb      	ldr	r3, [r7, #12]
 8005d10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d12:	1c5a      	adds	r2, r3, #1
 8005d14:	68fb      	ldr	r3, [r7, #12]
 8005d16:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005d18:	68fb      	ldr	r3, [r7, #12]
 8005d1a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005d1c:	3b01      	subs	r3, #1
 8005d1e:	b29a      	uxth	r2, r3
 8005d20:	68fb      	ldr	r3, [r7, #12]
 8005d22:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005d24:	68fb      	ldr	r3, [r7, #12]
 8005d26:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005d28:	b29b      	uxth	r3, r3
 8005d2a:	3b01      	subs	r3, #1
 8005d2c:	b29a      	uxth	r2, r3
 8005d2e:	68fb      	ldr	r3, [r7, #12]
 8005d30:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005d32:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005d34:	9300      	str	r3, [sp, #0]
 8005d36:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005d38:	2200      	movs	r2, #0
 8005d3a:	494f      	ldr	r1, [pc, #316]	; (8005e78 <HAL_I2C_Mem_Read+0x448>)
 8005d3c:	68f8      	ldr	r0, [r7, #12]
 8005d3e:	f000 fb6b 	bl	8006418 <I2C_WaitOnFlagUntilTimeout>
 8005d42:	4603      	mov	r3, r0
 8005d44:	2b00      	cmp	r3, #0
 8005d46:	d001      	beq.n	8005d4c <HAL_I2C_Mem_Read+0x31c>
          {
            return HAL_ERROR;
 8005d48:	2301      	movs	r3, #1
 8005d4a:	e091      	b.n	8005e70 <HAL_I2C_Mem_Read+0x440>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005d4c:	68fb      	ldr	r3, [r7, #12]
 8005d4e:	681b      	ldr	r3, [r3, #0]
 8005d50:	681a      	ldr	r2, [r3, #0]
 8005d52:	68fb      	ldr	r3, [r7, #12]
 8005d54:	681b      	ldr	r3, [r3, #0]
 8005d56:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005d5a:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005d5c:	68fb      	ldr	r3, [r7, #12]
 8005d5e:	681b      	ldr	r3, [r3, #0]
 8005d60:	691a      	ldr	r2, [r3, #16]
 8005d62:	68fb      	ldr	r3, [r7, #12]
 8005d64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d66:	b2d2      	uxtb	r2, r2
 8005d68:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005d6a:	68fb      	ldr	r3, [r7, #12]
 8005d6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d6e:	1c5a      	adds	r2, r3, #1
 8005d70:	68fb      	ldr	r3, [r7, #12]
 8005d72:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005d74:	68fb      	ldr	r3, [r7, #12]
 8005d76:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005d78:	3b01      	subs	r3, #1
 8005d7a:	b29a      	uxth	r2, r3
 8005d7c:	68fb      	ldr	r3, [r7, #12]
 8005d7e:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005d80:	68fb      	ldr	r3, [r7, #12]
 8005d82:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005d84:	b29b      	uxth	r3, r3
 8005d86:	3b01      	subs	r3, #1
 8005d88:	b29a      	uxth	r2, r3
 8005d8a:	68fb      	ldr	r3, [r7, #12]
 8005d8c:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005d8e:	68fb      	ldr	r3, [r7, #12]
 8005d90:	681b      	ldr	r3, [r3, #0]
 8005d92:	691a      	ldr	r2, [r3, #16]
 8005d94:	68fb      	ldr	r3, [r7, #12]
 8005d96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d98:	b2d2      	uxtb	r2, r2
 8005d9a:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005d9c:	68fb      	ldr	r3, [r7, #12]
 8005d9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005da0:	1c5a      	adds	r2, r3, #1
 8005da2:	68fb      	ldr	r3, [r7, #12]
 8005da4:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005da6:	68fb      	ldr	r3, [r7, #12]
 8005da8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005daa:	3b01      	subs	r3, #1
 8005dac:	b29a      	uxth	r2, r3
 8005dae:	68fb      	ldr	r3, [r7, #12]
 8005db0:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005db2:	68fb      	ldr	r3, [r7, #12]
 8005db4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005db6:	b29b      	uxth	r3, r3
 8005db8:	3b01      	subs	r3, #1
 8005dba:	b29a      	uxth	r2, r3
 8005dbc:	68fb      	ldr	r3, [r7, #12]
 8005dbe:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005dc0:	e042      	b.n	8005e48 <HAL_I2C_Mem_Read+0x418>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005dc2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005dc4:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8005dc6:	68f8      	ldr	r0, [r7, #12]
 8005dc8:	f000 fc7e 	bl	80066c8 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005dcc:	4603      	mov	r3, r0
 8005dce:	2b00      	cmp	r3, #0
 8005dd0:	d001      	beq.n	8005dd6 <HAL_I2C_Mem_Read+0x3a6>
        {
          return HAL_ERROR;
 8005dd2:	2301      	movs	r3, #1
 8005dd4:	e04c      	b.n	8005e70 <HAL_I2C_Mem_Read+0x440>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005dd6:	68fb      	ldr	r3, [r7, #12]
 8005dd8:	681b      	ldr	r3, [r3, #0]
 8005dda:	691a      	ldr	r2, [r3, #16]
 8005ddc:	68fb      	ldr	r3, [r7, #12]
 8005dde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005de0:	b2d2      	uxtb	r2, r2
 8005de2:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8005de4:	68fb      	ldr	r3, [r7, #12]
 8005de6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005de8:	1c5a      	adds	r2, r3, #1
 8005dea:	68fb      	ldr	r3, [r7, #12]
 8005dec:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferSize--;
 8005dee:	68fb      	ldr	r3, [r7, #12]
 8005df0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005df2:	3b01      	subs	r3, #1
 8005df4:	b29a      	uxth	r2, r3
 8005df6:	68fb      	ldr	r3, [r7, #12]
 8005df8:	851a      	strh	r2, [r3, #40]	; 0x28
        hi2c->XferCount--;
 8005dfa:	68fb      	ldr	r3, [r7, #12]
 8005dfc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005dfe:	b29b      	uxth	r3, r3
 8005e00:	3b01      	subs	r3, #1
 8005e02:	b29a      	uxth	r2, r3
 8005e04:	68fb      	ldr	r3, [r7, #12]
 8005e06:	855a      	strh	r2, [r3, #42]	; 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005e08:	68fb      	ldr	r3, [r7, #12]
 8005e0a:	681b      	ldr	r3, [r3, #0]
 8005e0c:	695b      	ldr	r3, [r3, #20]
 8005e0e:	f003 0304 	and.w	r3, r3, #4
 8005e12:	2b04      	cmp	r3, #4
 8005e14:	d118      	bne.n	8005e48 <HAL_I2C_Mem_Read+0x418>
        {
          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005e16:	68fb      	ldr	r3, [r7, #12]
 8005e18:	681b      	ldr	r3, [r3, #0]
 8005e1a:	691a      	ldr	r2, [r3, #16]
 8005e1c:	68fb      	ldr	r3, [r7, #12]
 8005e1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e20:	b2d2      	uxtb	r2, r2
 8005e22:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005e24:	68fb      	ldr	r3, [r7, #12]
 8005e26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e28:	1c5a      	adds	r2, r3, #1
 8005e2a:	68fb      	ldr	r3, [r7, #12]
 8005e2c:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005e2e:	68fb      	ldr	r3, [r7, #12]
 8005e30:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005e32:	3b01      	subs	r3, #1
 8005e34:	b29a      	uxth	r2, r3
 8005e36:	68fb      	ldr	r3, [r7, #12]
 8005e38:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005e3a:	68fb      	ldr	r3, [r7, #12]
 8005e3c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005e3e:	b29b      	uxth	r3, r3
 8005e40:	3b01      	subs	r3, #1
 8005e42:	b29a      	uxth	r2, r3
 8005e44:	68fb      	ldr	r3, [r7, #12]
 8005e46:	855a      	strh	r2, [r3, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8005e48:	68fb      	ldr	r3, [r7, #12]
 8005e4a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005e4c:	2b00      	cmp	r3, #0
 8005e4e:	f47f aec2 	bne.w	8005bd6 <HAL_I2C_Mem_Read+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 8005e52:	68fb      	ldr	r3, [r7, #12]
 8005e54:	2220      	movs	r2, #32
 8005e56:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005e5a:	68fb      	ldr	r3, [r7, #12]
 8005e5c:	2200      	movs	r2, #0
 8005e5e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005e62:	68fb      	ldr	r3, [r7, #12]
 8005e64:	2200      	movs	r2, #0
 8005e66:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 8005e6a:	2300      	movs	r3, #0
 8005e6c:	e000      	b.n	8005e70 <HAL_I2C_Mem_Read+0x440>
  }
  else
  {
    return HAL_BUSY;
 8005e6e:	2302      	movs	r3, #2
  }
}
 8005e70:	4618      	mov	r0, r3
 8005e72:	3728      	adds	r7, #40	; 0x28
 8005e74:	46bd      	mov	sp, r7
 8005e76:	bd80      	pop	{r7, pc}
 8005e78:	00010004 	.word	0x00010004

08005e7c <I2C_MasterRequestWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8005e7c:	b580      	push	{r7, lr}
 8005e7e:	b088      	sub	sp, #32
 8005e80:	af02      	add	r7, sp, #8
 8005e82:	60f8      	str	r0, [r7, #12]
 8005e84:	607a      	str	r2, [r7, #4]
 8005e86:	603b      	str	r3, [r7, #0]
 8005e88:	460b      	mov	r3, r1
 8005e8a:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8005e8c:	68fb      	ldr	r3, [r7, #12]
 8005e8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005e90:	617b      	str	r3, [r7, #20]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8005e92:	697b      	ldr	r3, [r7, #20]
 8005e94:	2b08      	cmp	r3, #8
 8005e96:	d006      	beq.n	8005ea6 <I2C_MasterRequestWrite+0x2a>
 8005e98:	697b      	ldr	r3, [r7, #20]
 8005e9a:	2b01      	cmp	r3, #1
 8005e9c:	d003      	beq.n	8005ea6 <I2C_MasterRequestWrite+0x2a>
 8005e9e:	697b      	ldr	r3, [r7, #20]
 8005ea0:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8005ea4:	d108      	bne.n	8005eb8 <I2C_MasterRequestWrite+0x3c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005ea6:	68fb      	ldr	r3, [r7, #12]
 8005ea8:	681b      	ldr	r3, [r3, #0]
 8005eaa:	681a      	ldr	r2, [r3, #0]
 8005eac:	68fb      	ldr	r3, [r7, #12]
 8005eae:	681b      	ldr	r3, [r3, #0]
 8005eb0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005eb4:	601a      	str	r2, [r3, #0]
 8005eb6:	e00b      	b.n	8005ed0 <I2C_MasterRequestWrite+0x54>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 8005eb8:	68fb      	ldr	r3, [r7, #12]
 8005eba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ebc:	2b12      	cmp	r3, #18
 8005ebe:	d107      	bne.n	8005ed0 <I2C_MasterRequestWrite+0x54>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005ec0:	68fb      	ldr	r3, [r7, #12]
 8005ec2:	681b      	ldr	r3, [r3, #0]
 8005ec4:	681a      	ldr	r2, [r3, #0]
 8005ec6:	68fb      	ldr	r3, [r7, #12]
 8005ec8:	681b      	ldr	r3, [r3, #0]
 8005eca:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005ece:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005ed0:	683b      	ldr	r3, [r7, #0]
 8005ed2:	9300      	str	r3, [sp, #0]
 8005ed4:	687b      	ldr	r3, [r7, #4]
 8005ed6:	2200      	movs	r2, #0
 8005ed8:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8005edc:	68f8      	ldr	r0, [r7, #12]
 8005ede:	f000 fa9b 	bl	8006418 <I2C_WaitOnFlagUntilTimeout>
 8005ee2:	4603      	mov	r3, r0
 8005ee4:	2b00      	cmp	r3, #0
 8005ee6:	d00d      	beq.n	8005f04 <I2C_MasterRequestWrite+0x88>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005ee8:	68fb      	ldr	r3, [r7, #12]
 8005eea:	681b      	ldr	r3, [r3, #0]
 8005eec:	681b      	ldr	r3, [r3, #0]
 8005eee:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005ef2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005ef6:	d103      	bne.n	8005f00 <I2C_MasterRequestWrite+0x84>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005ef8:	68fb      	ldr	r3, [r7, #12]
 8005efa:	f44f 7200 	mov.w	r2, #512	; 0x200
 8005efe:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8005f00:	2303      	movs	r3, #3
 8005f02:	e035      	b.n	8005f70 <I2C_MasterRequestWrite+0xf4>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8005f04:	68fb      	ldr	r3, [r7, #12]
 8005f06:	691b      	ldr	r3, [r3, #16]
 8005f08:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8005f0c:	d108      	bne.n	8005f20 <I2C_MasterRequestWrite+0xa4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005f0e:	897b      	ldrh	r3, [r7, #10]
 8005f10:	b2db      	uxtb	r3, r3
 8005f12:	461a      	mov	r2, r3
 8005f14:	68fb      	ldr	r3, [r7, #12]
 8005f16:	681b      	ldr	r3, [r3, #0]
 8005f18:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8005f1c:	611a      	str	r2, [r3, #16]
 8005f1e:	e01b      	b.n	8005f58 <I2C_MasterRequestWrite+0xdc>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8005f20:	897b      	ldrh	r3, [r7, #10]
 8005f22:	11db      	asrs	r3, r3, #7
 8005f24:	b2db      	uxtb	r3, r3
 8005f26:	f003 0306 	and.w	r3, r3, #6
 8005f2a:	b2db      	uxtb	r3, r3
 8005f2c:	f063 030f 	orn	r3, r3, #15
 8005f30:	b2da      	uxtb	r2, r3
 8005f32:	68fb      	ldr	r3, [r7, #12]
 8005f34:	681b      	ldr	r3, [r3, #0]
 8005f36:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8005f38:	683b      	ldr	r3, [r7, #0]
 8005f3a:	687a      	ldr	r2, [r7, #4]
 8005f3c:	490e      	ldr	r1, [pc, #56]	; (8005f78 <I2C_MasterRequestWrite+0xfc>)
 8005f3e:	68f8      	ldr	r0, [r7, #12]
 8005f40:	f000 fac1 	bl	80064c6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005f44:	4603      	mov	r3, r0
 8005f46:	2b00      	cmp	r3, #0
 8005f48:	d001      	beq.n	8005f4e <I2C_MasterRequestWrite+0xd2>
    {
      return HAL_ERROR;
 8005f4a:	2301      	movs	r3, #1
 8005f4c:	e010      	b.n	8005f70 <I2C_MasterRequestWrite+0xf4>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8005f4e:	897b      	ldrh	r3, [r7, #10]
 8005f50:	b2da      	uxtb	r2, r3
 8005f52:	68fb      	ldr	r3, [r7, #12]
 8005f54:	681b      	ldr	r3, [r3, #0]
 8005f56:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005f58:	683b      	ldr	r3, [r7, #0]
 8005f5a:	687a      	ldr	r2, [r7, #4]
 8005f5c:	4907      	ldr	r1, [pc, #28]	; (8005f7c <I2C_MasterRequestWrite+0x100>)
 8005f5e:	68f8      	ldr	r0, [r7, #12]
 8005f60:	f000 fab1 	bl	80064c6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005f64:	4603      	mov	r3, r0
 8005f66:	2b00      	cmp	r3, #0
 8005f68:	d001      	beq.n	8005f6e <I2C_MasterRequestWrite+0xf2>
  {
    return HAL_ERROR;
 8005f6a:	2301      	movs	r3, #1
 8005f6c:	e000      	b.n	8005f70 <I2C_MasterRequestWrite+0xf4>
  }

  return HAL_OK;
 8005f6e:	2300      	movs	r3, #0
}
 8005f70:	4618      	mov	r0, r3
 8005f72:	3718      	adds	r7, #24
 8005f74:	46bd      	mov	sp, r7
 8005f76:	bd80      	pop	{r7, pc}
 8005f78:	00010008 	.word	0x00010008
 8005f7c:	00010002 	.word	0x00010002

08005f80 <I2C_MasterRequestRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8005f80:	b580      	push	{r7, lr}
 8005f82:	b088      	sub	sp, #32
 8005f84:	af02      	add	r7, sp, #8
 8005f86:	60f8      	str	r0, [r7, #12]
 8005f88:	607a      	str	r2, [r7, #4]
 8005f8a:	603b      	str	r3, [r7, #0]
 8005f8c:	460b      	mov	r3, r1
 8005f8e:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8005f90:	68fb      	ldr	r3, [r7, #12]
 8005f92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005f94:	617b      	str	r3, [r7, #20]

  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005f96:	68fb      	ldr	r3, [r7, #12]
 8005f98:	681b      	ldr	r3, [r3, #0]
 8005f9a:	681a      	ldr	r2, [r3, #0]
 8005f9c:	68fb      	ldr	r3, [r7, #12]
 8005f9e:	681b      	ldr	r3, [r3, #0]
 8005fa0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005fa4:	601a      	str	r2, [r3, #0]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME)  || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8005fa6:	697b      	ldr	r3, [r7, #20]
 8005fa8:	2b08      	cmp	r3, #8
 8005faa:	d006      	beq.n	8005fba <I2C_MasterRequestRead+0x3a>
 8005fac:	697b      	ldr	r3, [r7, #20]
 8005fae:	2b01      	cmp	r3, #1
 8005fb0:	d003      	beq.n	8005fba <I2C_MasterRequestRead+0x3a>
 8005fb2:	697b      	ldr	r3, [r7, #20]
 8005fb4:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8005fb8:	d108      	bne.n	8005fcc <I2C_MasterRequestRead+0x4c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005fba:	68fb      	ldr	r3, [r7, #12]
 8005fbc:	681b      	ldr	r3, [r3, #0]
 8005fbe:	681a      	ldr	r2, [r3, #0]
 8005fc0:	68fb      	ldr	r3, [r7, #12]
 8005fc2:	681b      	ldr	r3, [r3, #0]
 8005fc4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005fc8:	601a      	str	r2, [r3, #0]
 8005fca:	e00b      	b.n	8005fe4 <I2C_MasterRequestRead+0x64>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
 8005fcc:	68fb      	ldr	r3, [r7, #12]
 8005fce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005fd0:	2b11      	cmp	r3, #17
 8005fd2:	d107      	bne.n	8005fe4 <I2C_MasterRequestRead+0x64>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005fd4:	68fb      	ldr	r3, [r7, #12]
 8005fd6:	681b      	ldr	r3, [r3, #0]
 8005fd8:	681a      	ldr	r2, [r3, #0]
 8005fda:	68fb      	ldr	r3, [r7, #12]
 8005fdc:	681b      	ldr	r3, [r3, #0]
 8005fde:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005fe2:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005fe4:	683b      	ldr	r3, [r7, #0]
 8005fe6:	9300      	str	r3, [sp, #0]
 8005fe8:	687b      	ldr	r3, [r7, #4]
 8005fea:	2200      	movs	r2, #0
 8005fec:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8005ff0:	68f8      	ldr	r0, [r7, #12]
 8005ff2:	f000 fa11 	bl	8006418 <I2C_WaitOnFlagUntilTimeout>
 8005ff6:	4603      	mov	r3, r0
 8005ff8:	2b00      	cmp	r3, #0
 8005ffa:	d00d      	beq.n	8006018 <I2C_MasterRequestRead+0x98>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005ffc:	68fb      	ldr	r3, [r7, #12]
 8005ffe:	681b      	ldr	r3, [r3, #0]
 8006000:	681b      	ldr	r3, [r3, #0]
 8006002:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006006:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800600a:	d103      	bne.n	8006014 <I2C_MasterRequestRead+0x94>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800600c:	68fb      	ldr	r3, [r7, #12]
 800600e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8006012:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8006014:	2303      	movs	r3, #3
 8006016:	e079      	b.n	800610c <I2C_MasterRequestRead+0x18c>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8006018:	68fb      	ldr	r3, [r7, #12]
 800601a:	691b      	ldr	r3, [r3, #16]
 800601c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8006020:	d108      	bne.n	8006034 <I2C_MasterRequestRead+0xb4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8006022:	897b      	ldrh	r3, [r7, #10]
 8006024:	b2db      	uxtb	r3, r3
 8006026:	f043 0301 	orr.w	r3, r3, #1
 800602a:	b2da      	uxtb	r2, r3
 800602c:	68fb      	ldr	r3, [r7, #12]
 800602e:	681b      	ldr	r3, [r3, #0]
 8006030:	611a      	str	r2, [r3, #16]
 8006032:	e05f      	b.n	80060f4 <I2C_MasterRequestRead+0x174>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8006034:	897b      	ldrh	r3, [r7, #10]
 8006036:	11db      	asrs	r3, r3, #7
 8006038:	b2db      	uxtb	r3, r3
 800603a:	f003 0306 	and.w	r3, r3, #6
 800603e:	b2db      	uxtb	r3, r3
 8006040:	f063 030f 	orn	r3, r3, #15
 8006044:	b2da      	uxtb	r2, r3
 8006046:	68fb      	ldr	r3, [r7, #12]
 8006048:	681b      	ldr	r3, [r3, #0]
 800604a:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 800604c:	683b      	ldr	r3, [r7, #0]
 800604e:	687a      	ldr	r2, [r7, #4]
 8006050:	4930      	ldr	r1, [pc, #192]	; (8006114 <I2C_MasterRequestRead+0x194>)
 8006052:	68f8      	ldr	r0, [r7, #12]
 8006054:	f000 fa37 	bl	80064c6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006058:	4603      	mov	r3, r0
 800605a:	2b00      	cmp	r3, #0
 800605c:	d001      	beq.n	8006062 <I2C_MasterRequestRead+0xe2>
    {
      return HAL_ERROR;
 800605e:	2301      	movs	r3, #1
 8006060:	e054      	b.n	800610c <I2C_MasterRequestRead+0x18c>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8006062:	897b      	ldrh	r3, [r7, #10]
 8006064:	b2da      	uxtb	r2, r3
 8006066:	68fb      	ldr	r3, [r7, #12]
 8006068:	681b      	ldr	r3, [r3, #0]
 800606a:	611a      	str	r2, [r3, #16]

    /* Wait until ADDR flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800606c:	683b      	ldr	r3, [r7, #0]
 800606e:	687a      	ldr	r2, [r7, #4]
 8006070:	4929      	ldr	r1, [pc, #164]	; (8006118 <I2C_MasterRequestRead+0x198>)
 8006072:	68f8      	ldr	r0, [r7, #12]
 8006074:	f000 fa27 	bl	80064c6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006078:	4603      	mov	r3, r0
 800607a:	2b00      	cmp	r3, #0
 800607c:	d001      	beq.n	8006082 <I2C_MasterRequestRead+0x102>
    {
      return HAL_ERROR;
 800607e:	2301      	movs	r3, #1
 8006080:	e044      	b.n	800610c <I2C_MasterRequestRead+0x18c>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006082:	2300      	movs	r3, #0
 8006084:	613b      	str	r3, [r7, #16]
 8006086:	68fb      	ldr	r3, [r7, #12]
 8006088:	681b      	ldr	r3, [r3, #0]
 800608a:	695b      	ldr	r3, [r3, #20]
 800608c:	613b      	str	r3, [r7, #16]
 800608e:	68fb      	ldr	r3, [r7, #12]
 8006090:	681b      	ldr	r3, [r3, #0]
 8006092:	699b      	ldr	r3, [r3, #24]
 8006094:	613b      	str	r3, [r7, #16]
 8006096:	693b      	ldr	r3, [r7, #16]

    /* Generate Restart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006098:	68fb      	ldr	r3, [r7, #12]
 800609a:	681b      	ldr	r3, [r3, #0]
 800609c:	681a      	ldr	r2, [r3, #0]
 800609e:	68fb      	ldr	r3, [r7, #12]
 80060a0:	681b      	ldr	r3, [r3, #0]
 80060a2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80060a6:	601a      	str	r2, [r3, #0]

    /* Wait until SB flag is set */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80060a8:	683b      	ldr	r3, [r7, #0]
 80060aa:	9300      	str	r3, [sp, #0]
 80060ac:	687b      	ldr	r3, [r7, #4]
 80060ae:	2200      	movs	r2, #0
 80060b0:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80060b4:	68f8      	ldr	r0, [r7, #12]
 80060b6:	f000 f9af 	bl	8006418 <I2C_WaitOnFlagUntilTimeout>
 80060ba:	4603      	mov	r3, r0
 80060bc:	2b00      	cmp	r3, #0
 80060be:	d00d      	beq.n	80060dc <I2C_MasterRequestRead+0x15c>
    {
      if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80060c0:	68fb      	ldr	r3, [r7, #12]
 80060c2:	681b      	ldr	r3, [r3, #0]
 80060c4:	681b      	ldr	r3, [r3, #0]
 80060c6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80060ca:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80060ce:	d103      	bne.n	80060d8 <I2C_MasterRequestRead+0x158>
      {
        hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80060d0:	68fb      	ldr	r3, [r7, #12]
 80060d2:	f44f 7200 	mov.w	r2, #512	; 0x200
 80060d6:	641a      	str	r2, [r3, #64]	; 0x40
      }
      return HAL_TIMEOUT;
 80060d8:	2303      	movs	r3, #3
 80060da:	e017      	b.n	800610c <I2C_MasterRequestRead+0x18c>
    }

    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_READ(DevAddress);
 80060dc:	897b      	ldrh	r3, [r7, #10]
 80060de:	11db      	asrs	r3, r3, #7
 80060e0:	b2db      	uxtb	r3, r3
 80060e2:	f003 0306 	and.w	r3, r3, #6
 80060e6:	b2db      	uxtb	r3, r3
 80060e8:	f063 030e 	orn	r3, r3, #14
 80060ec:	b2da      	uxtb	r2, r3
 80060ee:	68fb      	ldr	r3, [r7, #12]
 80060f0:	681b      	ldr	r3, [r3, #0]
 80060f2:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80060f4:	683b      	ldr	r3, [r7, #0]
 80060f6:	687a      	ldr	r2, [r7, #4]
 80060f8:	4907      	ldr	r1, [pc, #28]	; (8006118 <I2C_MasterRequestRead+0x198>)
 80060fa:	68f8      	ldr	r0, [r7, #12]
 80060fc:	f000 f9e3 	bl	80064c6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006100:	4603      	mov	r3, r0
 8006102:	2b00      	cmp	r3, #0
 8006104:	d001      	beq.n	800610a <I2C_MasterRequestRead+0x18a>
  {
    return HAL_ERROR;
 8006106:	2301      	movs	r3, #1
 8006108:	e000      	b.n	800610c <I2C_MasterRequestRead+0x18c>
  }

  return HAL_OK;
 800610a:	2300      	movs	r3, #0
}
 800610c:	4618      	mov	r0, r3
 800610e:	3718      	adds	r7, #24
 8006110:	46bd      	mov	sp, r7
 8006112:	bd80      	pop	{r7, pc}
 8006114:	00010008 	.word	0x00010008
 8006118:	00010002 	.word	0x00010002

0800611c <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800611c:	b580      	push	{r7, lr}
 800611e:	b088      	sub	sp, #32
 8006120:	af02      	add	r7, sp, #8
 8006122:	60f8      	str	r0, [r7, #12]
 8006124:	4608      	mov	r0, r1
 8006126:	4611      	mov	r1, r2
 8006128:	461a      	mov	r2, r3
 800612a:	4603      	mov	r3, r0
 800612c:	817b      	strh	r3, [r7, #10]
 800612e:	460b      	mov	r3, r1
 8006130:	813b      	strh	r3, [r7, #8]
 8006132:	4613      	mov	r3, r2
 8006134:	80fb      	strh	r3, [r7, #6]
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006136:	68fb      	ldr	r3, [r7, #12]
 8006138:	681b      	ldr	r3, [r3, #0]
 800613a:	681a      	ldr	r2, [r3, #0]
 800613c:	68fb      	ldr	r3, [r7, #12]
 800613e:	681b      	ldr	r3, [r3, #0]
 8006140:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006144:	601a      	str	r2, [r3, #0]

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006146:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006148:	9300      	str	r3, [sp, #0]
 800614a:	6a3b      	ldr	r3, [r7, #32]
 800614c:	2200      	movs	r2, #0
 800614e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8006152:	68f8      	ldr	r0, [r7, #12]
 8006154:	f000 f960 	bl	8006418 <I2C_WaitOnFlagUntilTimeout>
 8006158:	4603      	mov	r3, r0
 800615a:	2b00      	cmp	r3, #0
 800615c:	d00d      	beq.n	800617a <I2C_RequestMemoryWrite+0x5e>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800615e:	68fb      	ldr	r3, [r7, #12]
 8006160:	681b      	ldr	r3, [r3, #0]
 8006162:	681b      	ldr	r3, [r3, #0]
 8006164:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006168:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800616c:	d103      	bne.n	8006176 <I2C_RequestMemoryWrite+0x5a>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800616e:	68fb      	ldr	r3, [r7, #12]
 8006170:	f44f 7200 	mov.w	r2, #512	; 0x200
 8006174:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8006176:	2303      	movs	r3, #3
 8006178:	e05f      	b.n	800623a <I2C_RequestMemoryWrite+0x11e>
  }

  /* Send slave address */
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800617a:	897b      	ldrh	r3, [r7, #10]
 800617c:	b2db      	uxtb	r3, r3
 800617e:	461a      	mov	r2, r3
 8006180:	68fb      	ldr	r3, [r7, #12]
 8006182:	681b      	ldr	r3, [r3, #0]
 8006184:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8006188:	611a      	str	r2, [r3, #16]

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800618a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800618c:	6a3a      	ldr	r2, [r7, #32]
 800618e:	492d      	ldr	r1, [pc, #180]	; (8006244 <I2C_RequestMemoryWrite+0x128>)
 8006190:	68f8      	ldr	r0, [r7, #12]
 8006192:	f000 f998 	bl	80064c6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006196:	4603      	mov	r3, r0
 8006198:	2b00      	cmp	r3, #0
 800619a:	d001      	beq.n	80061a0 <I2C_RequestMemoryWrite+0x84>
  {
    return HAL_ERROR;
 800619c:	2301      	movs	r3, #1
 800619e:	e04c      	b.n	800623a <I2C_RequestMemoryWrite+0x11e>
  }

  /* Clear ADDR flag */
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80061a0:	2300      	movs	r3, #0
 80061a2:	617b      	str	r3, [r7, #20]
 80061a4:	68fb      	ldr	r3, [r7, #12]
 80061a6:	681b      	ldr	r3, [r3, #0]
 80061a8:	695b      	ldr	r3, [r3, #20]
 80061aa:	617b      	str	r3, [r7, #20]
 80061ac:	68fb      	ldr	r3, [r7, #12]
 80061ae:	681b      	ldr	r3, [r3, #0]
 80061b0:	699b      	ldr	r3, [r3, #24]
 80061b2:	617b      	str	r3, [r7, #20]
 80061b4:	697b      	ldr	r3, [r7, #20]

  /* Wait until TXE flag is set */
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80061b6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80061b8:	6a39      	ldr	r1, [r7, #32]
 80061ba:	68f8      	ldr	r0, [r7, #12]
 80061bc:	f000 fa02 	bl	80065c4 <I2C_WaitOnTXEFlagUntilTimeout>
 80061c0:	4603      	mov	r3, r0
 80061c2:	2b00      	cmp	r3, #0
 80061c4:	d00d      	beq.n	80061e2 <I2C_RequestMemoryWrite+0xc6>
  {
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80061c6:	68fb      	ldr	r3, [r7, #12]
 80061c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80061ca:	2b04      	cmp	r3, #4
 80061cc:	d107      	bne.n	80061de <I2C_RequestMemoryWrite+0xc2>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80061ce:	68fb      	ldr	r3, [r7, #12]
 80061d0:	681b      	ldr	r3, [r3, #0]
 80061d2:	681a      	ldr	r2, [r3, #0]
 80061d4:	68fb      	ldr	r3, [r7, #12]
 80061d6:	681b      	ldr	r3, [r3, #0]
 80061d8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80061dc:	601a      	str	r2, [r3, #0]
    }
    return HAL_ERROR;
 80061de:	2301      	movs	r3, #1
 80061e0:	e02b      	b.n	800623a <I2C_RequestMemoryWrite+0x11e>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80061e2:	88fb      	ldrh	r3, [r7, #6]
 80061e4:	2b01      	cmp	r3, #1
 80061e6:	d105      	bne.n	80061f4 <I2C_RequestMemoryWrite+0xd8>
  {
    /* Send Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80061e8:	893b      	ldrh	r3, [r7, #8]
 80061ea:	b2da      	uxtb	r2, r3
 80061ec:	68fb      	ldr	r3, [r7, #12]
 80061ee:	681b      	ldr	r3, [r3, #0]
 80061f0:	611a      	str	r2, [r3, #16]
 80061f2:	e021      	b.n	8006238 <I2C_RequestMemoryWrite+0x11c>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80061f4:	893b      	ldrh	r3, [r7, #8]
 80061f6:	0a1b      	lsrs	r3, r3, #8
 80061f8:	b29b      	uxth	r3, r3
 80061fa:	b2da      	uxtb	r2, r3
 80061fc:	68fb      	ldr	r3, [r7, #12]
 80061fe:	681b      	ldr	r3, [r3, #0]
 8006200:	611a      	str	r2, [r3, #16]

    /* Wait until TXE flag is set */
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006202:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006204:	6a39      	ldr	r1, [r7, #32]
 8006206:	68f8      	ldr	r0, [r7, #12]
 8006208:	f000 f9dc 	bl	80065c4 <I2C_WaitOnTXEFlagUntilTimeout>
 800620c:	4603      	mov	r3, r0
 800620e:	2b00      	cmp	r3, #0
 8006210:	d00d      	beq.n	800622e <I2C_RequestMemoryWrite+0x112>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006212:	68fb      	ldr	r3, [r7, #12]
 8006214:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006216:	2b04      	cmp	r3, #4
 8006218:	d107      	bne.n	800622a <I2C_RequestMemoryWrite+0x10e>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800621a:	68fb      	ldr	r3, [r7, #12]
 800621c:	681b      	ldr	r3, [r3, #0]
 800621e:	681a      	ldr	r2, [r3, #0]
 8006220:	68fb      	ldr	r3, [r7, #12]
 8006222:	681b      	ldr	r3, [r3, #0]
 8006224:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006228:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 800622a:	2301      	movs	r3, #1
 800622c:	e005      	b.n	800623a <I2C_RequestMemoryWrite+0x11e>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800622e:	893b      	ldrh	r3, [r7, #8]
 8006230:	b2da      	uxtb	r2, r3
 8006232:	68fb      	ldr	r3, [r7, #12]
 8006234:	681b      	ldr	r3, [r3, #0]
 8006236:	611a      	str	r2, [r3, #16]
  }

  return HAL_OK;
 8006238:	2300      	movs	r3, #0
}
 800623a:	4618      	mov	r0, r3
 800623c:	3718      	adds	r7, #24
 800623e:	46bd      	mov	sp, r7
 8006240:	bd80      	pop	{r7, pc}
 8006242:	bf00      	nop
 8006244:	00010002 	.word	0x00010002

08006248 <I2C_RequestMemoryRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 8006248:	b580      	push	{r7, lr}
 800624a:	b088      	sub	sp, #32
 800624c:	af02      	add	r7, sp, #8
 800624e:	60f8      	str	r0, [r7, #12]
 8006250:	4608      	mov	r0, r1
 8006252:	4611      	mov	r1, r2
 8006254:	461a      	mov	r2, r3
 8006256:	4603      	mov	r3, r0
 8006258:	817b      	strh	r3, [r7, #10]
 800625a:	460b      	mov	r3, r1
 800625c:	813b      	strh	r3, [r7, #8]
 800625e:	4613      	mov	r3, r2
 8006260:	80fb      	strh	r3, [r7, #6]
  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006262:	68fb      	ldr	r3, [r7, #12]
 8006264:	681b      	ldr	r3, [r3, #0]
 8006266:	681a      	ldr	r2, [r3, #0]
 8006268:	68fb      	ldr	r3, [r7, #12]
 800626a:	681b      	ldr	r3, [r3, #0]
 800626c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006270:	601a      	str	r2, [r3, #0]

  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006272:	68fb      	ldr	r3, [r7, #12]
 8006274:	681b      	ldr	r3, [r3, #0]
 8006276:	681a      	ldr	r2, [r3, #0]
 8006278:	68fb      	ldr	r3, [r7, #12]
 800627a:	681b      	ldr	r3, [r3, #0]
 800627c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006280:	601a      	str	r2, [r3, #0]

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006282:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006284:	9300      	str	r3, [sp, #0]
 8006286:	6a3b      	ldr	r3, [r7, #32]
 8006288:	2200      	movs	r2, #0
 800628a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800628e:	68f8      	ldr	r0, [r7, #12]
 8006290:	f000 f8c2 	bl	8006418 <I2C_WaitOnFlagUntilTimeout>
 8006294:	4603      	mov	r3, r0
 8006296:	2b00      	cmp	r3, #0
 8006298:	d00d      	beq.n	80062b6 <I2C_RequestMemoryRead+0x6e>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800629a:	68fb      	ldr	r3, [r7, #12]
 800629c:	681b      	ldr	r3, [r3, #0]
 800629e:	681b      	ldr	r3, [r3, #0]
 80062a0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80062a4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80062a8:	d103      	bne.n	80062b2 <I2C_RequestMemoryRead+0x6a>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80062aa:	68fb      	ldr	r3, [r7, #12]
 80062ac:	f44f 7200 	mov.w	r2, #512	; 0x200
 80062b0:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 80062b2:	2303      	movs	r3, #3
 80062b4:	e0aa      	b.n	800640c <I2C_RequestMemoryRead+0x1c4>
  }

  /* Send slave address */
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80062b6:	897b      	ldrh	r3, [r7, #10]
 80062b8:	b2db      	uxtb	r3, r3
 80062ba:	461a      	mov	r2, r3
 80062bc:	68fb      	ldr	r3, [r7, #12]
 80062be:	681b      	ldr	r3, [r3, #0]
 80062c0:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 80062c4:	611a      	str	r2, [r3, #16]

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80062c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80062c8:	6a3a      	ldr	r2, [r7, #32]
 80062ca:	4952      	ldr	r1, [pc, #328]	; (8006414 <I2C_RequestMemoryRead+0x1cc>)
 80062cc:	68f8      	ldr	r0, [r7, #12]
 80062ce:	f000 f8fa 	bl	80064c6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80062d2:	4603      	mov	r3, r0
 80062d4:	2b00      	cmp	r3, #0
 80062d6:	d001      	beq.n	80062dc <I2C_RequestMemoryRead+0x94>
  {
    return HAL_ERROR;
 80062d8:	2301      	movs	r3, #1
 80062da:	e097      	b.n	800640c <I2C_RequestMemoryRead+0x1c4>
  }

  /* Clear ADDR flag */
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80062dc:	2300      	movs	r3, #0
 80062de:	617b      	str	r3, [r7, #20]
 80062e0:	68fb      	ldr	r3, [r7, #12]
 80062e2:	681b      	ldr	r3, [r3, #0]
 80062e4:	695b      	ldr	r3, [r3, #20]
 80062e6:	617b      	str	r3, [r7, #20]
 80062e8:	68fb      	ldr	r3, [r7, #12]
 80062ea:	681b      	ldr	r3, [r3, #0]
 80062ec:	699b      	ldr	r3, [r3, #24]
 80062ee:	617b      	str	r3, [r7, #20]
 80062f0:	697b      	ldr	r3, [r7, #20]

  /* Wait until TXE flag is set */
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80062f2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80062f4:	6a39      	ldr	r1, [r7, #32]
 80062f6:	68f8      	ldr	r0, [r7, #12]
 80062f8:	f000 f964 	bl	80065c4 <I2C_WaitOnTXEFlagUntilTimeout>
 80062fc:	4603      	mov	r3, r0
 80062fe:	2b00      	cmp	r3, #0
 8006300:	d00d      	beq.n	800631e <I2C_RequestMemoryRead+0xd6>
  {
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006302:	68fb      	ldr	r3, [r7, #12]
 8006304:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006306:	2b04      	cmp	r3, #4
 8006308:	d107      	bne.n	800631a <I2C_RequestMemoryRead+0xd2>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800630a:	68fb      	ldr	r3, [r7, #12]
 800630c:	681b      	ldr	r3, [r3, #0]
 800630e:	681a      	ldr	r2, [r3, #0]
 8006310:	68fb      	ldr	r3, [r7, #12]
 8006312:	681b      	ldr	r3, [r3, #0]
 8006314:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006318:	601a      	str	r2, [r3, #0]
    }
    return HAL_ERROR;
 800631a:	2301      	movs	r3, #1
 800631c:	e076      	b.n	800640c <I2C_RequestMemoryRead+0x1c4>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800631e:	88fb      	ldrh	r3, [r7, #6]
 8006320:	2b01      	cmp	r3, #1
 8006322:	d105      	bne.n	8006330 <I2C_RequestMemoryRead+0xe8>
  {
    /* Send Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006324:	893b      	ldrh	r3, [r7, #8]
 8006326:	b2da      	uxtb	r2, r3
 8006328:	68fb      	ldr	r3, [r7, #12]
 800632a:	681b      	ldr	r3, [r3, #0]
 800632c:	611a      	str	r2, [r3, #16]
 800632e:	e021      	b.n	8006374 <I2C_RequestMemoryRead+0x12c>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006330:	893b      	ldrh	r3, [r7, #8]
 8006332:	0a1b      	lsrs	r3, r3, #8
 8006334:	b29b      	uxth	r3, r3
 8006336:	b2da      	uxtb	r2, r3
 8006338:	68fb      	ldr	r3, [r7, #12]
 800633a:	681b      	ldr	r3, [r3, #0]
 800633c:	611a      	str	r2, [r3, #16]

    /* Wait until TXE flag is set */
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800633e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006340:	6a39      	ldr	r1, [r7, #32]
 8006342:	68f8      	ldr	r0, [r7, #12]
 8006344:	f000 f93e 	bl	80065c4 <I2C_WaitOnTXEFlagUntilTimeout>
 8006348:	4603      	mov	r3, r0
 800634a:	2b00      	cmp	r3, #0
 800634c:	d00d      	beq.n	800636a <I2C_RequestMemoryRead+0x122>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800634e:	68fb      	ldr	r3, [r7, #12]
 8006350:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006352:	2b04      	cmp	r3, #4
 8006354:	d107      	bne.n	8006366 <I2C_RequestMemoryRead+0x11e>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006356:	68fb      	ldr	r3, [r7, #12]
 8006358:	681b      	ldr	r3, [r3, #0]
 800635a:	681a      	ldr	r2, [r3, #0]
 800635c:	68fb      	ldr	r3, [r7, #12]
 800635e:	681b      	ldr	r3, [r3, #0]
 8006360:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006364:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 8006366:	2301      	movs	r3, #1
 8006368:	e050      	b.n	800640c <I2C_RequestMemoryRead+0x1c4>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800636a:	893b      	ldrh	r3, [r7, #8]
 800636c:	b2da      	uxtb	r2, r3
 800636e:	68fb      	ldr	r3, [r7, #12]
 8006370:	681b      	ldr	r3, [r3, #0]
 8006372:	611a      	str	r2, [r3, #16]
  }

  /* Wait until TXE flag is set */
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006374:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006376:	6a39      	ldr	r1, [r7, #32]
 8006378:	68f8      	ldr	r0, [r7, #12]
 800637a:	f000 f923 	bl	80065c4 <I2C_WaitOnTXEFlagUntilTimeout>
 800637e:	4603      	mov	r3, r0
 8006380:	2b00      	cmp	r3, #0
 8006382:	d00d      	beq.n	80063a0 <I2C_RequestMemoryRead+0x158>
  {
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006384:	68fb      	ldr	r3, [r7, #12]
 8006386:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006388:	2b04      	cmp	r3, #4
 800638a:	d107      	bne.n	800639c <I2C_RequestMemoryRead+0x154>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800638c:	68fb      	ldr	r3, [r7, #12]
 800638e:	681b      	ldr	r3, [r3, #0]
 8006390:	681a      	ldr	r2, [r3, #0]
 8006392:	68fb      	ldr	r3, [r7, #12]
 8006394:	681b      	ldr	r3, [r3, #0]
 8006396:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800639a:	601a      	str	r2, [r3, #0]
    }
    return HAL_ERROR;
 800639c:	2301      	movs	r3, #1
 800639e:	e035      	b.n	800640c <I2C_RequestMemoryRead+0x1c4>
  }

  /* Generate Restart */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80063a0:	68fb      	ldr	r3, [r7, #12]
 80063a2:	681b      	ldr	r3, [r3, #0]
 80063a4:	681a      	ldr	r2, [r3, #0]
 80063a6:	68fb      	ldr	r3, [r7, #12]
 80063a8:	681b      	ldr	r3, [r3, #0]
 80063aa:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80063ae:	601a      	str	r2, [r3, #0]

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80063b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80063b2:	9300      	str	r3, [sp, #0]
 80063b4:	6a3b      	ldr	r3, [r7, #32]
 80063b6:	2200      	movs	r2, #0
 80063b8:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80063bc:	68f8      	ldr	r0, [r7, #12]
 80063be:	f000 f82b 	bl	8006418 <I2C_WaitOnFlagUntilTimeout>
 80063c2:	4603      	mov	r3, r0
 80063c4:	2b00      	cmp	r3, #0
 80063c6:	d00d      	beq.n	80063e4 <I2C_RequestMemoryRead+0x19c>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80063c8:	68fb      	ldr	r3, [r7, #12]
 80063ca:	681b      	ldr	r3, [r3, #0]
 80063cc:	681b      	ldr	r3, [r3, #0]
 80063ce:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80063d2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80063d6:	d103      	bne.n	80063e0 <I2C_RequestMemoryRead+0x198>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80063d8:	68fb      	ldr	r3, [r7, #12]
 80063da:	f44f 7200 	mov.w	r2, #512	; 0x200
 80063de:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 80063e0:	2303      	movs	r3, #3
 80063e2:	e013      	b.n	800640c <I2C_RequestMemoryRead+0x1c4>
  }

  /* Send slave address */
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80063e4:	897b      	ldrh	r3, [r7, #10]
 80063e6:	b2db      	uxtb	r3, r3
 80063e8:	f043 0301 	orr.w	r3, r3, #1
 80063ec:	b2da      	uxtb	r2, r3
 80063ee:	68fb      	ldr	r3, [r7, #12]
 80063f0:	681b      	ldr	r3, [r3, #0]
 80063f2:	611a      	str	r2, [r3, #16]

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80063f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80063f6:	6a3a      	ldr	r2, [r7, #32]
 80063f8:	4906      	ldr	r1, [pc, #24]	; (8006414 <I2C_RequestMemoryRead+0x1cc>)
 80063fa:	68f8      	ldr	r0, [r7, #12]
 80063fc:	f000 f863 	bl	80064c6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006400:	4603      	mov	r3, r0
 8006402:	2b00      	cmp	r3, #0
 8006404:	d001      	beq.n	800640a <I2C_RequestMemoryRead+0x1c2>
  {
    return HAL_ERROR;
 8006406:	2301      	movs	r3, #1
 8006408:	e000      	b.n	800640c <I2C_RequestMemoryRead+0x1c4>
  }

  return HAL_OK;
 800640a:	2300      	movs	r3, #0
}
 800640c:	4618      	mov	r0, r3
 800640e:	3718      	adds	r7, #24
 8006410:	46bd      	mov	sp, r7
 8006412:	bd80      	pop	{r7, pc}
 8006414:	00010002 	.word	0x00010002

08006418 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 8006418:	b580      	push	{r7, lr}
 800641a:	b084      	sub	sp, #16
 800641c:	af00      	add	r7, sp, #0
 800641e:	60f8      	str	r0, [r7, #12]
 8006420:	60b9      	str	r1, [r7, #8]
 8006422:	603b      	str	r3, [r7, #0]
 8006424:	4613      	mov	r3, r2
 8006426:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8006428:	e025      	b.n	8006476 <I2C_WaitOnFlagUntilTimeout+0x5e>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800642a:	683b      	ldr	r3, [r7, #0]
 800642c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006430:	d021      	beq.n	8006476 <I2C_WaitOnFlagUntilTimeout+0x5e>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006432:	f7fd fb31 	bl	8003a98 <HAL_GetTick>
 8006436:	4602      	mov	r2, r0
 8006438:	69bb      	ldr	r3, [r7, #24]
 800643a:	1ad3      	subs	r3, r2, r3
 800643c:	683a      	ldr	r2, [r7, #0]
 800643e:	429a      	cmp	r2, r3
 8006440:	d302      	bcc.n	8006448 <I2C_WaitOnFlagUntilTimeout+0x30>
 8006442:	683b      	ldr	r3, [r7, #0]
 8006444:	2b00      	cmp	r3, #0
 8006446:	d116      	bne.n	8006476 <I2C_WaitOnFlagUntilTimeout+0x5e>
      {
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006448:	68fb      	ldr	r3, [r7, #12]
 800644a:	2200      	movs	r2, #0
 800644c:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800644e:	68fb      	ldr	r3, [r7, #12]
 8006450:	2220      	movs	r2, #32
 8006452:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8006456:	68fb      	ldr	r3, [r7, #12]
 8006458:	2200      	movs	r2, #0
 800645a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800645e:	68fb      	ldr	r3, [r7, #12]
 8006460:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006462:	f043 0220 	orr.w	r2, r3, #32
 8006466:	68fb      	ldr	r3, [r7, #12]
 8006468:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 800646a:	68fb      	ldr	r3, [r7, #12]
 800646c:	2200      	movs	r2, #0
 800646e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 8006472:	2301      	movs	r3, #1
 8006474:	e023      	b.n	80064be <I2C_WaitOnFlagUntilTimeout+0xa6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8006476:	68bb      	ldr	r3, [r7, #8]
 8006478:	0c1b      	lsrs	r3, r3, #16
 800647a:	b2db      	uxtb	r3, r3
 800647c:	2b01      	cmp	r3, #1
 800647e:	d10d      	bne.n	800649c <I2C_WaitOnFlagUntilTimeout+0x84>
 8006480:	68fb      	ldr	r3, [r7, #12]
 8006482:	681b      	ldr	r3, [r3, #0]
 8006484:	695b      	ldr	r3, [r3, #20]
 8006486:	43da      	mvns	r2, r3
 8006488:	68bb      	ldr	r3, [r7, #8]
 800648a:	4013      	ands	r3, r2
 800648c:	b29b      	uxth	r3, r3
 800648e:	2b00      	cmp	r3, #0
 8006490:	bf0c      	ite	eq
 8006492:	2301      	moveq	r3, #1
 8006494:	2300      	movne	r3, #0
 8006496:	b2db      	uxtb	r3, r3
 8006498:	461a      	mov	r2, r3
 800649a:	e00c      	b.n	80064b6 <I2C_WaitOnFlagUntilTimeout+0x9e>
 800649c:	68fb      	ldr	r3, [r7, #12]
 800649e:	681b      	ldr	r3, [r3, #0]
 80064a0:	699b      	ldr	r3, [r3, #24]
 80064a2:	43da      	mvns	r2, r3
 80064a4:	68bb      	ldr	r3, [r7, #8]
 80064a6:	4013      	ands	r3, r2
 80064a8:	b29b      	uxth	r3, r3
 80064aa:	2b00      	cmp	r3, #0
 80064ac:	bf0c      	ite	eq
 80064ae:	2301      	moveq	r3, #1
 80064b0:	2300      	movne	r3, #0
 80064b2:	b2db      	uxtb	r3, r3
 80064b4:	461a      	mov	r2, r3
 80064b6:	79fb      	ldrb	r3, [r7, #7]
 80064b8:	429a      	cmp	r2, r3
 80064ba:	d0b6      	beq.n	800642a <I2C_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 80064bc:	2300      	movs	r3, #0
}
 80064be:	4618      	mov	r0, r3
 80064c0:	3710      	adds	r7, #16
 80064c2:	46bd      	mov	sp, r7
 80064c4:	bd80      	pop	{r7, pc}

080064c6 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 80064c6:	b580      	push	{r7, lr}
 80064c8:	b084      	sub	sp, #16
 80064ca:	af00      	add	r7, sp, #0
 80064cc:	60f8      	str	r0, [r7, #12]
 80064ce:	60b9      	str	r1, [r7, #8]
 80064d0:	607a      	str	r2, [r7, #4]
 80064d2:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80064d4:	e051      	b.n	800657a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80064d6:	68fb      	ldr	r3, [r7, #12]
 80064d8:	681b      	ldr	r3, [r3, #0]
 80064da:	695b      	ldr	r3, [r3, #20]
 80064dc:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80064e0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80064e4:	d123      	bne.n	800652e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80064e6:	68fb      	ldr	r3, [r7, #12]
 80064e8:	681b      	ldr	r3, [r3, #0]
 80064ea:	681a      	ldr	r2, [r3, #0]
 80064ec:	68fb      	ldr	r3, [r7, #12]
 80064ee:	681b      	ldr	r3, [r3, #0]
 80064f0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80064f4:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80064f6:	68fb      	ldr	r3, [r7, #12]
 80064f8:	681b      	ldr	r3, [r3, #0]
 80064fa:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80064fe:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8006500:	68fb      	ldr	r3, [r7, #12]
 8006502:	2200      	movs	r2, #0
 8006504:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006506:	68fb      	ldr	r3, [r7, #12]
 8006508:	2220      	movs	r2, #32
 800650a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800650e:	68fb      	ldr	r3, [r7, #12]
 8006510:	2200      	movs	r2, #0
 8006512:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006516:	68fb      	ldr	r3, [r7, #12]
 8006518:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800651a:	f043 0204 	orr.w	r2, r3, #4
 800651e:	68fb      	ldr	r3, [r7, #12]
 8006520:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8006522:	68fb      	ldr	r3, [r7, #12]
 8006524:	2200      	movs	r2, #0
 8006526:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 800652a:	2301      	movs	r3, #1
 800652c:	e046      	b.n	80065bc <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800652e:	687b      	ldr	r3, [r7, #4]
 8006530:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006534:	d021      	beq.n	800657a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006536:	f7fd faaf 	bl	8003a98 <HAL_GetTick>
 800653a:	4602      	mov	r2, r0
 800653c:	683b      	ldr	r3, [r7, #0]
 800653e:	1ad3      	subs	r3, r2, r3
 8006540:	687a      	ldr	r2, [r7, #4]
 8006542:	429a      	cmp	r2, r3
 8006544:	d302      	bcc.n	800654c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8006546:	687b      	ldr	r3, [r7, #4]
 8006548:	2b00      	cmp	r3, #0
 800654a:	d116      	bne.n	800657a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 800654c:	68fb      	ldr	r3, [r7, #12]
 800654e:	2200      	movs	r2, #0
 8006550:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006552:	68fb      	ldr	r3, [r7, #12]
 8006554:	2220      	movs	r2, #32
 8006556:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800655a:	68fb      	ldr	r3, [r7, #12]
 800655c:	2200      	movs	r2, #0
 800655e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006562:	68fb      	ldr	r3, [r7, #12]
 8006564:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006566:	f043 0220 	orr.w	r2, r3, #32
 800656a:	68fb      	ldr	r3, [r7, #12]
 800656c:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 800656e:	68fb      	ldr	r3, [r7, #12]
 8006570:	2200      	movs	r2, #0
 8006572:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 8006576:	2301      	movs	r3, #1
 8006578:	e020      	b.n	80065bc <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800657a:	68bb      	ldr	r3, [r7, #8]
 800657c:	0c1b      	lsrs	r3, r3, #16
 800657e:	b2db      	uxtb	r3, r3
 8006580:	2b01      	cmp	r3, #1
 8006582:	d10c      	bne.n	800659e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8006584:	68fb      	ldr	r3, [r7, #12]
 8006586:	681b      	ldr	r3, [r3, #0]
 8006588:	695b      	ldr	r3, [r3, #20]
 800658a:	43da      	mvns	r2, r3
 800658c:	68bb      	ldr	r3, [r7, #8]
 800658e:	4013      	ands	r3, r2
 8006590:	b29b      	uxth	r3, r3
 8006592:	2b00      	cmp	r3, #0
 8006594:	bf14      	ite	ne
 8006596:	2301      	movne	r3, #1
 8006598:	2300      	moveq	r3, #0
 800659a:	b2db      	uxtb	r3, r3
 800659c:	e00b      	b.n	80065b6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 800659e:	68fb      	ldr	r3, [r7, #12]
 80065a0:	681b      	ldr	r3, [r3, #0]
 80065a2:	699b      	ldr	r3, [r3, #24]
 80065a4:	43da      	mvns	r2, r3
 80065a6:	68bb      	ldr	r3, [r7, #8]
 80065a8:	4013      	ands	r3, r2
 80065aa:	b29b      	uxth	r3, r3
 80065ac:	2b00      	cmp	r3, #0
 80065ae:	bf14      	ite	ne
 80065b0:	2301      	movne	r3, #1
 80065b2:	2300      	moveq	r3, #0
 80065b4:	b2db      	uxtb	r3, r3
 80065b6:	2b00      	cmp	r3, #0
 80065b8:	d18d      	bne.n	80064d6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
      }
    }
  }
  return HAL_OK;
 80065ba:	2300      	movs	r3, #0
}
 80065bc:	4618      	mov	r0, r3
 80065be:	3710      	adds	r7, #16
 80065c0:	46bd      	mov	sp, r7
 80065c2:	bd80      	pop	{r7, pc}

080065c4 <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 80065c4:	b580      	push	{r7, lr}
 80065c6:	b084      	sub	sp, #16
 80065c8:	af00      	add	r7, sp, #0
 80065ca:	60f8      	str	r0, [r7, #12]
 80065cc:	60b9      	str	r1, [r7, #8]
 80065ce:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80065d0:	e02d      	b.n	800662e <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80065d2:	68f8      	ldr	r0, [r7, #12]
 80065d4:	f000 f8ce 	bl	8006774 <I2C_IsAcknowledgeFailed>
 80065d8:	4603      	mov	r3, r0
 80065da:	2b00      	cmp	r3, #0
 80065dc:	d001      	beq.n	80065e2 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 80065de:	2301      	movs	r3, #1
 80065e0:	e02d      	b.n	800663e <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80065e2:	68bb      	ldr	r3, [r7, #8]
 80065e4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80065e8:	d021      	beq.n	800662e <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80065ea:	f7fd fa55 	bl	8003a98 <HAL_GetTick>
 80065ee:	4602      	mov	r2, r0
 80065f0:	687b      	ldr	r3, [r7, #4]
 80065f2:	1ad3      	subs	r3, r2, r3
 80065f4:	68ba      	ldr	r2, [r7, #8]
 80065f6:	429a      	cmp	r2, r3
 80065f8:	d302      	bcc.n	8006600 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 80065fa:	68bb      	ldr	r3, [r7, #8]
 80065fc:	2b00      	cmp	r3, #0
 80065fe:	d116      	bne.n	800662e <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006600:	68fb      	ldr	r3, [r7, #12]
 8006602:	2200      	movs	r2, #0
 8006604:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006606:	68fb      	ldr	r3, [r7, #12]
 8006608:	2220      	movs	r2, #32
 800660a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800660e:	68fb      	ldr	r3, [r7, #12]
 8006610:	2200      	movs	r2, #0
 8006612:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006616:	68fb      	ldr	r3, [r7, #12]
 8006618:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800661a:	f043 0220 	orr.w	r2, r3, #32
 800661e:	68fb      	ldr	r3, [r7, #12]
 8006620:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8006622:	68fb      	ldr	r3, [r7, #12]
 8006624:	2200      	movs	r2, #0
 8006626:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 800662a:	2301      	movs	r3, #1
 800662c:	e007      	b.n	800663e <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800662e:	68fb      	ldr	r3, [r7, #12]
 8006630:	681b      	ldr	r3, [r3, #0]
 8006632:	695b      	ldr	r3, [r3, #20]
 8006634:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006638:	2b80      	cmp	r3, #128	; 0x80
 800663a:	d1ca      	bne.n	80065d2 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 800663c:	2300      	movs	r3, #0
}
 800663e:	4618      	mov	r0, r3
 8006640:	3710      	adds	r7, #16
 8006642:	46bd      	mov	sp, r7
 8006644:	bd80      	pop	{r7, pc}

08006646 <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8006646:	b580      	push	{r7, lr}
 8006648:	b084      	sub	sp, #16
 800664a:	af00      	add	r7, sp, #0
 800664c:	60f8      	str	r0, [r7, #12]
 800664e:	60b9      	str	r1, [r7, #8]
 8006650:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8006652:	e02d      	b.n	80066b0 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8006654:	68f8      	ldr	r0, [r7, #12]
 8006656:	f000 f88d 	bl	8006774 <I2C_IsAcknowledgeFailed>
 800665a:	4603      	mov	r3, r0
 800665c:	2b00      	cmp	r3, #0
 800665e:	d001      	beq.n	8006664 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 8006660:	2301      	movs	r3, #1
 8006662:	e02d      	b.n	80066c0 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8006664:	68bb      	ldr	r3, [r7, #8]
 8006666:	f1b3 3fff 	cmp.w	r3, #4294967295
 800666a:	d021      	beq.n	80066b0 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800666c:	f7fd fa14 	bl	8003a98 <HAL_GetTick>
 8006670:	4602      	mov	r2, r0
 8006672:	687b      	ldr	r3, [r7, #4]
 8006674:	1ad3      	subs	r3, r2, r3
 8006676:	68ba      	ldr	r2, [r7, #8]
 8006678:	429a      	cmp	r2, r3
 800667a:	d302      	bcc.n	8006682 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 800667c:	68bb      	ldr	r3, [r7, #8]
 800667e:	2b00      	cmp	r3, #0
 8006680:	d116      	bne.n	80066b0 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006682:	68fb      	ldr	r3, [r7, #12]
 8006684:	2200      	movs	r2, #0
 8006686:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006688:	68fb      	ldr	r3, [r7, #12]
 800668a:	2220      	movs	r2, #32
 800668c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006690:	68fb      	ldr	r3, [r7, #12]
 8006692:	2200      	movs	r2, #0
 8006694:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006698:	68fb      	ldr	r3, [r7, #12]
 800669a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800669c:	f043 0220 	orr.w	r2, r3, #32
 80066a0:	68fb      	ldr	r3, [r7, #12]
 80066a2:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80066a4:	68fb      	ldr	r3, [r7, #12]
 80066a6:	2200      	movs	r2, #0
 80066a8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 80066ac:	2301      	movs	r3, #1
 80066ae:	e007      	b.n	80066c0 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80066b0:	68fb      	ldr	r3, [r7, #12]
 80066b2:	681b      	ldr	r3, [r3, #0]
 80066b4:	695b      	ldr	r3, [r3, #20]
 80066b6:	f003 0304 	and.w	r3, r3, #4
 80066ba:	2b04      	cmp	r3, #4
 80066bc:	d1ca      	bne.n	8006654 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 80066be:	2300      	movs	r3, #0
}
 80066c0:	4618      	mov	r0, r3
 80066c2:	3710      	adds	r7, #16
 80066c4:	46bd      	mov	sp, r7
 80066c6:	bd80      	pop	{r7, pc}

080066c8 <I2C_WaitOnRXNEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 80066c8:	b580      	push	{r7, lr}
 80066ca:	b084      	sub	sp, #16
 80066cc:	af00      	add	r7, sp, #0
 80066ce:	60f8      	str	r0, [r7, #12]
 80066d0:	60b9      	str	r1, [r7, #8]
 80066d2:	607a      	str	r2, [r7, #4]

  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80066d4:	e042      	b.n	800675c <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
  {
    /* Check if a STOPF is detected */
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80066d6:	68fb      	ldr	r3, [r7, #12]
 80066d8:	681b      	ldr	r3, [r3, #0]
 80066da:	695b      	ldr	r3, [r3, #20]
 80066dc:	f003 0310 	and.w	r3, r3, #16
 80066e0:	2b10      	cmp	r3, #16
 80066e2:	d119      	bne.n	8006718 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80066e4:	68fb      	ldr	r3, [r7, #12]
 80066e6:	681b      	ldr	r3, [r3, #0]
 80066e8:	f06f 0210 	mvn.w	r2, #16
 80066ec:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 80066ee:	68fb      	ldr	r3, [r7, #12]
 80066f0:	2200      	movs	r2, #0
 80066f2:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80066f4:	68fb      	ldr	r3, [r7, #12]
 80066f6:	2220      	movs	r2, #32
 80066f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80066fc:	68fb      	ldr	r3, [r7, #12]
 80066fe:	2200      	movs	r2, #0
 8006700:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8006704:	68fb      	ldr	r3, [r7, #12]
 8006706:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006708:	68fb      	ldr	r3, [r7, #12]
 800670a:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 800670c:	68fb      	ldr	r3, [r7, #12]
 800670e:	2200      	movs	r2, #0
 8006710:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 8006714:	2301      	movs	r3, #1
 8006716:	e029      	b.n	800676c <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006718:	f7fd f9be 	bl	8003a98 <HAL_GetTick>
 800671c:	4602      	mov	r2, r0
 800671e:	687b      	ldr	r3, [r7, #4]
 8006720:	1ad3      	subs	r3, r2, r3
 8006722:	68ba      	ldr	r2, [r7, #8]
 8006724:	429a      	cmp	r2, r3
 8006726:	d302      	bcc.n	800672e <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8006728:	68bb      	ldr	r3, [r7, #8]
 800672a:	2b00      	cmp	r3, #0
 800672c:	d116      	bne.n	800675c <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
    {
      hi2c->PreviousState       = I2C_STATE_NONE;
 800672e:	68fb      	ldr	r3, [r7, #12]
 8006730:	2200      	movs	r2, #0
 8006732:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006734:	68fb      	ldr	r3, [r7, #12]
 8006736:	2220      	movs	r2, #32
 8006738:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800673c:	68fb      	ldr	r3, [r7, #12]
 800673e:	2200      	movs	r2, #0
 8006740:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006744:	68fb      	ldr	r3, [r7, #12]
 8006746:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006748:	f043 0220 	orr.w	r2, r3, #32
 800674c:	68fb      	ldr	r3, [r7, #12]
 800674e:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8006750:	68fb      	ldr	r3, [r7, #12]
 8006752:	2200      	movs	r2, #0
 8006754:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 8006758:	2301      	movs	r3, #1
 800675a:	e007      	b.n	800676c <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800675c:	68fb      	ldr	r3, [r7, #12]
 800675e:	681b      	ldr	r3, [r3, #0]
 8006760:	695b      	ldr	r3, [r3, #20]
 8006762:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006766:	2b40      	cmp	r3, #64	; 0x40
 8006768:	d1b5      	bne.n	80066d6 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
    }
  }
  return HAL_OK;
 800676a:	2300      	movs	r3, #0
}
 800676c:	4618      	mov	r0, r3
 800676e:	3710      	adds	r7, #16
 8006770:	46bd      	mov	sp, r7
 8006772:	bd80      	pop	{r7, pc}

08006774 <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 8006774:	b480      	push	{r7}
 8006776:	b083      	sub	sp, #12
 8006778:	af00      	add	r7, sp, #0
 800677a:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800677c:	687b      	ldr	r3, [r7, #4]
 800677e:	681b      	ldr	r3, [r3, #0]
 8006780:	695b      	ldr	r3, [r3, #20]
 8006782:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8006786:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800678a:	d11b      	bne.n	80067c4 <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800678c:	687b      	ldr	r3, [r7, #4]
 800678e:	681b      	ldr	r3, [r3, #0]
 8006790:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8006794:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 8006796:	687b      	ldr	r3, [r7, #4]
 8006798:	2200      	movs	r2, #0
 800679a:	631a      	str	r2, [r3, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800679c:	687b      	ldr	r3, [r7, #4]
 800679e:	2220      	movs	r2, #32
 80067a0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80067a4:	687b      	ldr	r3, [r7, #4]
 80067a6:	2200      	movs	r2, #0
 80067a8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80067ac:	687b      	ldr	r3, [r7, #4]
 80067ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80067b0:	f043 0204 	orr.w	r2, r3, #4
 80067b4:	687b      	ldr	r3, [r7, #4]
 80067b6:	641a      	str	r2, [r3, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80067b8:	687b      	ldr	r3, [r7, #4]
 80067ba:	2200      	movs	r2, #0
 80067bc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_ERROR;
 80067c0:	2301      	movs	r3, #1
 80067c2:	e000      	b.n	80067c6 <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 80067c4:	2300      	movs	r3, #0
}
 80067c6:	4618      	mov	r0, r3
 80067c8:	370c      	adds	r7, #12
 80067ca:	46bd      	mov	sp, r7
 80067cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067d0:	4770      	bx	lr
	...

080067d4 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80067d4:	b580      	push	{r7, lr}
 80067d6:	b086      	sub	sp, #24
 80067d8:	af00      	add	r7, sp, #0
 80067da:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80067dc:	687b      	ldr	r3, [r7, #4]
 80067de:	2b00      	cmp	r3, #0
 80067e0:	d101      	bne.n	80067e6 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 80067e2:	2301      	movs	r3, #1
 80067e4:	e267      	b.n	8006cb6 <HAL_RCC_OscConfig+0x4e2>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80067e6:	687b      	ldr	r3, [r7, #4]
 80067e8:	681b      	ldr	r3, [r3, #0]
 80067ea:	f003 0301 	and.w	r3, r3, #1
 80067ee:	2b00      	cmp	r3, #0
 80067f0:	d075      	beq.n	80068de <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80067f2:	4b88      	ldr	r3, [pc, #544]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 80067f4:	689b      	ldr	r3, [r3, #8]
 80067f6:	f003 030c 	and.w	r3, r3, #12
 80067fa:	2b04      	cmp	r3, #4
 80067fc:	d00c      	beq.n	8006818 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80067fe:	4b85      	ldr	r3, [pc, #532]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 8006800:	689b      	ldr	r3, [r3, #8]
 8006802:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8006806:	2b08      	cmp	r3, #8
 8006808:	d112      	bne.n	8006830 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800680a:	4b82      	ldr	r3, [pc, #520]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 800680c:	685b      	ldr	r3, [r3, #4]
 800680e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006812:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8006816:	d10b      	bne.n	8006830 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006818:	4b7e      	ldr	r3, [pc, #504]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 800681a:	681b      	ldr	r3, [r3, #0]
 800681c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006820:	2b00      	cmp	r3, #0
 8006822:	d05b      	beq.n	80068dc <HAL_RCC_OscConfig+0x108>
 8006824:	687b      	ldr	r3, [r7, #4]
 8006826:	685b      	ldr	r3, [r3, #4]
 8006828:	2b00      	cmp	r3, #0
 800682a:	d157      	bne.n	80068dc <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 800682c:	2301      	movs	r3, #1
 800682e:	e242      	b.n	8006cb6 <HAL_RCC_OscConfig+0x4e2>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006830:	687b      	ldr	r3, [r7, #4]
 8006832:	685b      	ldr	r3, [r3, #4]
 8006834:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006838:	d106      	bne.n	8006848 <HAL_RCC_OscConfig+0x74>
 800683a:	4b76      	ldr	r3, [pc, #472]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 800683c:	681b      	ldr	r3, [r3, #0]
 800683e:	4a75      	ldr	r2, [pc, #468]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 8006840:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006844:	6013      	str	r3, [r2, #0]
 8006846:	e01d      	b.n	8006884 <HAL_RCC_OscConfig+0xb0>
 8006848:	687b      	ldr	r3, [r7, #4]
 800684a:	685b      	ldr	r3, [r3, #4]
 800684c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8006850:	d10c      	bne.n	800686c <HAL_RCC_OscConfig+0x98>
 8006852:	4b70      	ldr	r3, [pc, #448]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 8006854:	681b      	ldr	r3, [r3, #0]
 8006856:	4a6f      	ldr	r2, [pc, #444]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 8006858:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800685c:	6013      	str	r3, [r2, #0]
 800685e:	4b6d      	ldr	r3, [pc, #436]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 8006860:	681b      	ldr	r3, [r3, #0]
 8006862:	4a6c      	ldr	r2, [pc, #432]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 8006864:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006868:	6013      	str	r3, [r2, #0]
 800686a:	e00b      	b.n	8006884 <HAL_RCC_OscConfig+0xb0>
 800686c:	4b69      	ldr	r3, [pc, #420]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 800686e:	681b      	ldr	r3, [r3, #0]
 8006870:	4a68      	ldr	r2, [pc, #416]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 8006872:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006876:	6013      	str	r3, [r2, #0]
 8006878:	4b66      	ldr	r3, [pc, #408]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 800687a:	681b      	ldr	r3, [r3, #0]
 800687c:	4a65      	ldr	r2, [pc, #404]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 800687e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006882:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006884:	687b      	ldr	r3, [r7, #4]
 8006886:	685b      	ldr	r3, [r3, #4]
 8006888:	2b00      	cmp	r3, #0
 800688a:	d013      	beq.n	80068b4 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800688c:	f7fd f904 	bl	8003a98 <HAL_GetTick>
 8006890:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006892:	e008      	b.n	80068a6 <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006894:	f7fd f900 	bl	8003a98 <HAL_GetTick>
 8006898:	4602      	mov	r2, r0
 800689a:	693b      	ldr	r3, [r7, #16]
 800689c:	1ad3      	subs	r3, r2, r3
 800689e:	2b64      	cmp	r3, #100	; 0x64
 80068a0:	d901      	bls.n	80068a6 <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 80068a2:	2303      	movs	r3, #3
 80068a4:	e207      	b.n	8006cb6 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80068a6:	4b5b      	ldr	r3, [pc, #364]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 80068a8:	681b      	ldr	r3, [r3, #0]
 80068aa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80068ae:	2b00      	cmp	r3, #0
 80068b0:	d0f0      	beq.n	8006894 <HAL_RCC_OscConfig+0xc0>
 80068b2:	e014      	b.n	80068de <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80068b4:	f7fd f8f0 	bl	8003a98 <HAL_GetTick>
 80068b8:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80068ba:	e008      	b.n	80068ce <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80068bc:	f7fd f8ec 	bl	8003a98 <HAL_GetTick>
 80068c0:	4602      	mov	r2, r0
 80068c2:	693b      	ldr	r3, [r7, #16]
 80068c4:	1ad3      	subs	r3, r2, r3
 80068c6:	2b64      	cmp	r3, #100	; 0x64
 80068c8:	d901      	bls.n	80068ce <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 80068ca:	2303      	movs	r3, #3
 80068cc:	e1f3      	b.n	8006cb6 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80068ce:	4b51      	ldr	r3, [pc, #324]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 80068d0:	681b      	ldr	r3, [r3, #0]
 80068d2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80068d6:	2b00      	cmp	r3, #0
 80068d8:	d1f0      	bne.n	80068bc <HAL_RCC_OscConfig+0xe8>
 80068da:	e000      	b.n	80068de <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80068dc:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80068de:	687b      	ldr	r3, [r7, #4]
 80068e0:	681b      	ldr	r3, [r3, #0]
 80068e2:	f003 0302 	and.w	r3, r3, #2
 80068e6:	2b00      	cmp	r3, #0
 80068e8:	d063      	beq.n	80069b2 <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80068ea:	4b4a      	ldr	r3, [pc, #296]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 80068ec:	689b      	ldr	r3, [r3, #8]
 80068ee:	f003 030c 	and.w	r3, r3, #12
 80068f2:	2b00      	cmp	r3, #0
 80068f4:	d00b      	beq.n	800690e <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80068f6:	4b47      	ldr	r3, [pc, #284]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 80068f8:	689b      	ldr	r3, [r3, #8]
 80068fa:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80068fe:	2b08      	cmp	r3, #8
 8006900:	d11c      	bne.n	800693c <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006902:	4b44      	ldr	r3, [pc, #272]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 8006904:	685b      	ldr	r3, [r3, #4]
 8006906:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800690a:	2b00      	cmp	r3, #0
 800690c:	d116      	bne.n	800693c <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800690e:	4b41      	ldr	r3, [pc, #260]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 8006910:	681b      	ldr	r3, [r3, #0]
 8006912:	f003 0302 	and.w	r3, r3, #2
 8006916:	2b00      	cmp	r3, #0
 8006918:	d005      	beq.n	8006926 <HAL_RCC_OscConfig+0x152>
 800691a:	687b      	ldr	r3, [r7, #4]
 800691c:	68db      	ldr	r3, [r3, #12]
 800691e:	2b01      	cmp	r3, #1
 8006920:	d001      	beq.n	8006926 <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 8006922:	2301      	movs	r3, #1
 8006924:	e1c7      	b.n	8006cb6 <HAL_RCC_OscConfig+0x4e2>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006926:	4b3b      	ldr	r3, [pc, #236]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 8006928:	681b      	ldr	r3, [r3, #0]
 800692a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800692e:	687b      	ldr	r3, [r7, #4]
 8006930:	691b      	ldr	r3, [r3, #16]
 8006932:	00db      	lsls	r3, r3, #3
 8006934:	4937      	ldr	r1, [pc, #220]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 8006936:	4313      	orrs	r3, r2
 8006938:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800693a:	e03a      	b.n	80069b2 <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800693c:	687b      	ldr	r3, [r7, #4]
 800693e:	68db      	ldr	r3, [r3, #12]
 8006940:	2b00      	cmp	r3, #0
 8006942:	d020      	beq.n	8006986 <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8006944:	4b34      	ldr	r3, [pc, #208]	; (8006a18 <HAL_RCC_OscConfig+0x244>)
 8006946:	2201      	movs	r2, #1
 8006948:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800694a:	f7fd f8a5 	bl	8003a98 <HAL_GetTick>
 800694e:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006950:	e008      	b.n	8006964 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006952:	f7fd f8a1 	bl	8003a98 <HAL_GetTick>
 8006956:	4602      	mov	r2, r0
 8006958:	693b      	ldr	r3, [r7, #16]
 800695a:	1ad3      	subs	r3, r2, r3
 800695c:	2b02      	cmp	r3, #2
 800695e:	d901      	bls.n	8006964 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8006960:	2303      	movs	r3, #3
 8006962:	e1a8      	b.n	8006cb6 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006964:	4b2b      	ldr	r3, [pc, #172]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 8006966:	681b      	ldr	r3, [r3, #0]
 8006968:	f003 0302 	and.w	r3, r3, #2
 800696c:	2b00      	cmp	r3, #0
 800696e:	d0f0      	beq.n	8006952 <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006970:	4b28      	ldr	r3, [pc, #160]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 8006972:	681b      	ldr	r3, [r3, #0]
 8006974:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8006978:	687b      	ldr	r3, [r7, #4]
 800697a:	691b      	ldr	r3, [r3, #16]
 800697c:	00db      	lsls	r3, r3, #3
 800697e:	4925      	ldr	r1, [pc, #148]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 8006980:	4313      	orrs	r3, r2
 8006982:	600b      	str	r3, [r1, #0]
 8006984:	e015      	b.n	80069b2 <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8006986:	4b24      	ldr	r3, [pc, #144]	; (8006a18 <HAL_RCC_OscConfig+0x244>)
 8006988:	2200      	movs	r2, #0
 800698a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800698c:	f7fd f884 	bl	8003a98 <HAL_GetTick>
 8006990:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006992:	e008      	b.n	80069a6 <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006994:	f7fd f880 	bl	8003a98 <HAL_GetTick>
 8006998:	4602      	mov	r2, r0
 800699a:	693b      	ldr	r3, [r7, #16]
 800699c:	1ad3      	subs	r3, r2, r3
 800699e:	2b02      	cmp	r3, #2
 80069a0:	d901      	bls.n	80069a6 <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 80069a2:	2303      	movs	r3, #3
 80069a4:	e187      	b.n	8006cb6 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80069a6:	4b1b      	ldr	r3, [pc, #108]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 80069a8:	681b      	ldr	r3, [r3, #0]
 80069aa:	f003 0302 	and.w	r3, r3, #2
 80069ae:	2b00      	cmp	r3, #0
 80069b0:	d1f0      	bne.n	8006994 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80069b2:	687b      	ldr	r3, [r7, #4]
 80069b4:	681b      	ldr	r3, [r3, #0]
 80069b6:	f003 0308 	and.w	r3, r3, #8
 80069ba:	2b00      	cmp	r3, #0
 80069bc:	d036      	beq.n	8006a2c <HAL_RCC_OscConfig+0x258>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80069be:	687b      	ldr	r3, [r7, #4]
 80069c0:	695b      	ldr	r3, [r3, #20]
 80069c2:	2b00      	cmp	r3, #0
 80069c4:	d016      	beq.n	80069f4 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80069c6:	4b15      	ldr	r3, [pc, #84]	; (8006a1c <HAL_RCC_OscConfig+0x248>)
 80069c8:	2201      	movs	r2, #1
 80069ca:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80069cc:	f7fd f864 	bl	8003a98 <HAL_GetTick>
 80069d0:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80069d2:	e008      	b.n	80069e6 <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80069d4:	f7fd f860 	bl	8003a98 <HAL_GetTick>
 80069d8:	4602      	mov	r2, r0
 80069da:	693b      	ldr	r3, [r7, #16]
 80069dc:	1ad3      	subs	r3, r2, r3
 80069de:	2b02      	cmp	r3, #2
 80069e0:	d901      	bls.n	80069e6 <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 80069e2:	2303      	movs	r3, #3
 80069e4:	e167      	b.n	8006cb6 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80069e6:	4b0b      	ldr	r3, [pc, #44]	; (8006a14 <HAL_RCC_OscConfig+0x240>)
 80069e8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80069ea:	f003 0302 	and.w	r3, r3, #2
 80069ee:	2b00      	cmp	r3, #0
 80069f0:	d0f0      	beq.n	80069d4 <HAL_RCC_OscConfig+0x200>
 80069f2:	e01b      	b.n	8006a2c <HAL_RCC_OscConfig+0x258>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80069f4:	4b09      	ldr	r3, [pc, #36]	; (8006a1c <HAL_RCC_OscConfig+0x248>)
 80069f6:	2200      	movs	r2, #0
 80069f8:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80069fa:	f7fd f84d 	bl	8003a98 <HAL_GetTick>
 80069fe:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006a00:	e00e      	b.n	8006a20 <HAL_RCC_OscConfig+0x24c>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006a02:	f7fd f849 	bl	8003a98 <HAL_GetTick>
 8006a06:	4602      	mov	r2, r0
 8006a08:	693b      	ldr	r3, [r7, #16]
 8006a0a:	1ad3      	subs	r3, r2, r3
 8006a0c:	2b02      	cmp	r3, #2
 8006a0e:	d907      	bls.n	8006a20 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 8006a10:	2303      	movs	r3, #3
 8006a12:	e150      	b.n	8006cb6 <HAL_RCC_OscConfig+0x4e2>
 8006a14:	40023800 	.word	0x40023800
 8006a18:	42470000 	.word	0x42470000
 8006a1c:	42470e80 	.word	0x42470e80
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006a20:	4b88      	ldr	r3, [pc, #544]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006a22:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8006a24:	f003 0302 	and.w	r3, r3, #2
 8006a28:	2b00      	cmp	r3, #0
 8006a2a:	d1ea      	bne.n	8006a02 <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006a2c:	687b      	ldr	r3, [r7, #4]
 8006a2e:	681b      	ldr	r3, [r3, #0]
 8006a30:	f003 0304 	and.w	r3, r3, #4
 8006a34:	2b00      	cmp	r3, #0
 8006a36:	f000 8097 	beq.w	8006b68 <HAL_RCC_OscConfig+0x394>
  {
    FlagStatus       pwrclkchanged = RESET;
 8006a3a:	2300      	movs	r3, #0
 8006a3c:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006a3e:	4b81      	ldr	r3, [pc, #516]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006a40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a42:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006a46:	2b00      	cmp	r3, #0
 8006a48:	d10f      	bne.n	8006a6a <HAL_RCC_OscConfig+0x296>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8006a4a:	2300      	movs	r3, #0
 8006a4c:	60bb      	str	r3, [r7, #8]
 8006a4e:	4b7d      	ldr	r3, [pc, #500]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006a50:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a52:	4a7c      	ldr	r2, [pc, #496]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006a54:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8006a58:	6413      	str	r3, [r2, #64]	; 0x40
 8006a5a:	4b7a      	ldr	r3, [pc, #488]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006a5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a5e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006a62:	60bb      	str	r3, [r7, #8]
 8006a64:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8006a66:	2301      	movs	r3, #1
 8006a68:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006a6a:	4b77      	ldr	r3, [pc, #476]	; (8006c48 <HAL_RCC_OscConfig+0x474>)
 8006a6c:	681b      	ldr	r3, [r3, #0]
 8006a6e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006a72:	2b00      	cmp	r3, #0
 8006a74:	d118      	bne.n	8006aa8 <HAL_RCC_OscConfig+0x2d4>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8006a76:	4b74      	ldr	r3, [pc, #464]	; (8006c48 <HAL_RCC_OscConfig+0x474>)
 8006a78:	681b      	ldr	r3, [r3, #0]
 8006a7a:	4a73      	ldr	r2, [pc, #460]	; (8006c48 <HAL_RCC_OscConfig+0x474>)
 8006a7c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006a80:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8006a82:	f7fd f809 	bl	8003a98 <HAL_GetTick>
 8006a86:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006a88:	e008      	b.n	8006a9c <HAL_RCC_OscConfig+0x2c8>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006a8a:	f7fd f805 	bl	8003a98 <HAL_GetTick>
 8006a8e:	4602      	mov	r2, r0
 8006a90:	693b      	ldr	r3, [r7, #16]
 8006a92:	1ad3      	subs	r3, r2, r3
 8006a94:	2b02      	cmp	r3, #2
 8006a96:	d901      	bls.n	8006a9c <HAL_RCC_OscConfig+0x2c8>
        {
          return HAL_TIMEOUT;
 8006a98:	2303      	movs	r3, #3
 8006a9a:	e10c      	b.n	8006cb6 <HAL_RCC_OscConfig+0x4e2>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006a9c:	4b6a      	ldr	r3, [pc, #424]	; (8006c48 <HAL_RCC_OscConfig+0x474>)
 8006a9e:	681b      	ldr	r3, [r3, #0]
 8006aa0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006aa4:	2b00      	cmp	r3, #0
 8006aa6:	d0f0      	beq.n	8006a8a <HAL_RCC_OscConfig+0x2b6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006aa8:	687b      	ldr	r3, [r7, #4]
 8006aaa:	689b      	ldr	r3, [r3, #8]
 8006aac:	2b01      	cmp	r3, #1
 8006aae:	d106      	bne.n	8006abe <HAL_RCC_OscConfig+0x2ea>
 8006ab0:	4b64      	ldr	r3, [pc, #400]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006ab2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006ab4:	4a63      	ldr	r2, [pc, #396]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006ab6:	f043 0301 	orr.w	r3, r3, #1
 8006aba:	6713      	str	r3, [r2, #112]	; 0x70
 8006abc:	e01c      	b.n	8006af8 <HAL_RCC_OscConfig+0x324>
 8006abe:	687b      	ldr	r3, [r7, #4]
 8006ac0:	689b      	ldr	r3, [r3, #8]
 8006ac2:	2b05      	cmp	r3, #5
 8006ac4:	d10c      	bne.n	8006ae0 <HAL_RCC_OscConfig+0x30c>
 8006ac6:	4b5f      	ldr	r3, [pc, #380]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006ac8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006aca:	4a5e      	ldr	r2, [pc, #376]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006acc:	f043 0304 	orr.w	r3, r3, #4
 8006ad0:	6713      	str	r3, [r2, #112]	; 0x70
 8006ad2:	4b5c      	ldr	r3, [pc, #368]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006ad4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006ad6:	4a5b      	ldr	r2, [pc, #364]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006ad8:	f043 0301 	orr.w	r3, r3, #1
 8006adc:	6713      	str	r3, [r2, #112]	; 0x70
 8006ade:	e00b      	b.n	8006af8 <HAL_RCC_OscConfig+0x324>
 8006ae0:	4b58      	ldr	r3, [pc, #352]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006ae2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006ae4:	4a57      	ldr	r2, [pc, #348]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006ae6:	f023 0301 	bic.w	r3, r3, #1
 8006aea:	6713      	str	r3, [r2, #112]	; 0x70
 8006aec:	4b55      	ldr	r3, [pc, #340]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006aee:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006af0:	4a54      	ldr	r2, [pc, #336]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006af2:	f023 0304 	bic.w	r3, r3, #4
 8006af6:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8006af8:	687b      	ldr	r3, [r7, #4]
 8006afa:	689b      	ldr	r3, [r3, #8]
 8006afc:	2b00      	cmp	r3, #0
 8006afe:	d015      	beq.n	8006b2c <HAL_RCC_OscConfig+0x358>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8006b00:	f7fc ffca 	bl	8003a98 <HAL_GetTick>
 8006b04:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006b06:	e00a      	b.n	8006b1e <HAL_RCC_OscConfig+0x34a>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006b08:	f7fc ffc6 	bl	8003a98 <HAL_GetTick>
 8006b0c:	4602      	mov	r2, r0
 8006b0e:	693b      	ldr	r3, [r7, #16]
 8006b10:	1ad3      	subs	r3, r2, r3
 8006b12:	f241 3288 	movw	r2, #5000	; 0x1388
 8006b16:	4293      	cmp	r3, r2
 8006b18:	d901      	bls.n	8006b1e <HAL_RCC_OscConfig+0x34a>
        {
          return HAL_TIMEOUT;
 8006b1a:	2303      	movs	r3, #3
 8006b1c:	e0cb      	b.n	8006cb6 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006b1e:	4b49      	ldr	r3, [pc, #292]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006b20:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006b22:	f003 0302 	and.w	r3, r3, #2
 8006b26:	2b00      	cmp	r3, #0
 8006b28:	d0ee      	beq.n	8006b08 <HAL_RCC_OscConfig+0x334>
 8006b2a:	e014      	b.n	8006b56 <HAL_RCC_OscConfig+0x382>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8006b2c:	f7fc ffb4 	bl	8003a98 <HAL_GetTick>
 8006b30:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006b32:	e00a      	b.n	8006b4a <HAL_RCC_OscConfig+0x376>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006b34:	f7fc ffb0 	bl	8003a98 <HAL_GetTick>
 8006b38:	4602      	mov	r2, r0
 8006b3a:	693b      	ldr	r3, [r7, #16]
 8006b3c:	1ad3      	subs	r3, r2, r3
 8006b3e:	f241 3288 	movw	r2, #5000	; 0x1388
 8006b42:	4293      	cmp	r3, r2
 8006b44:	d901      	bls.n	8006b4a <HAL_RCC_OscConfig+0x376>
        {
          return HAL_TIMEOUT;
 8006b46:	2303      	movs	r3, #3
 8006b48:	e0b5      	b.n	8006cb6 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006b4a:	4b3e      	ldr	r3, [pc, #248]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006b4c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006b4e:	f003 0302 	and.w	r3, r3, #2
 8006b52:	2b00      	cmp	r3, #0
 8006b54:	d1ee      	bne.n	8006b34 <HAL_RCC_OscConfig+0x360>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8006b56:	7dfb      	ldrb	r3, [r7, #23]
 8006b58:	2b01      	cmp	r3, #1
 8006b5a:	d105      	bne.n	8006b68 <HAL_RCC_OscConfig+0x394>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8006b5c:	4b39      	ldr	r3, [pc, #228]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006b5e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006b60:	4a38      	ldr	r2, [pc, #224]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006b62:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006b66:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006b68:	687b      	ldr	r3, [r7, #4]
 8006b6a:	699b      	ldr	r3, [r3, #24]
 8006b6c:	2b00      	cmp	r3, #0
 8006b6e:	f000 80a1 	beq.w	8006cb4 <HAL_RCC_OscConfig+0x4e0>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8006b72:	4b34      	ldr	r3, [pc, #208]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006b74:	689b      	ldr	r3, [r3, #8]
 8006b76:	f003 030c 	and.w	r3, r3, #12
 8006b7a:	2b08      	cmp	r3, #8
 8006b7c:	d05c      	beq.n	8006c38 <HAL_RCC_OscConfig+0x464>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006b7e:	687b      	ldr	r3, [r7, #4]
 8006b80:	699b      	ldr	r3, [r3, #24]
 8006b82:	2b02      	cmp	r3, #2
 8006b84:	d141      	bne.n	8006c0a <HAL_RCC_OscConfig+0x436>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8006b86:	4b31      	ldr	r3, [pc, #196]	; (8006c4c <HAL_RCC_OscConfig+0x478>)
 8006b88:	2200      	movs	r2, #0
 8006b8a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8006b8c:	f7fc ff84 	bl	8003a98 <HAL_GetTick>
 8006b90:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006b92:	e008      	b.n	8006ba6 <HAL_RCC_OscConfig+0x3d2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006b94:	f7fc ff80 	bl	8003a98 <HAL_GetTick>
 8006b98:	4602      	mov	r2, r0
 8006b9a:	693b      	ldr	r3, [r7, #16]
 8006b9c:	1ad3      	subs	r3, r2, r3
 8006b9e:	2b02      	cmp	r3, #2
 8006ba0:	d901      	bls.n	8006ba6 <HAL_RCC_OscConfig+0x3d2>
          {
            return HAL_TIMEOUT;
 8006ba2:	2303      	movs	r3, #3
 8006ba4:	e087      	b.n	8006cb6 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006ba6:	4b27      	ldr	r3, [pc, #156]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006ba8:	681b      	ldr	r3, [r3, #0]
 8006baa:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006bae:	2b00      	cmp	r3, #0
 8006bb0:	d1f0      	bne.n	8006b94 <HAL_RCC_OscConfig+0x3c0>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8006bb2:	687b      	ldr	r3, [r7, #4]
 8006bb4:	69da      	ldr	r2, [r3, #28]
 8006bb6:	687b      	ldr	r3, [r7, #4]
 8006bb8:	6a1b      	ldr	r3, [r3, #32]
 8006bba:	431a      	orrs	r2, r3
 8006bbc:	687b      	ldr	r3, [r7, #4]
 8006bbe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006bc0:	019b      	lsls	r3, r3, #6
 8006bc2:	431a      	orrs	r2, r3
 8006bc4:	687b      	ldr	r3, [r7, #4]
 8006bc6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006bc8:	085b      	lsrs	r3, r3, #1
 8006bca:	3b01      	subs	r3, #1
 8006bcc:	041b      	lsls	r3, r3, #16
 8006bce:	431a      	orrs	r2, r3
 8006bd0:	687b      	ldr	r3, [r7, #4]
 8006bd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006bd4:	061b      	lsls	r3, r3, #24
 8006bd6:	491b      	ldr	r1, [pc, #108]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006bd8:	4313      	orrs	r3, r2
 8006bda:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8006bdc:	4b1b      	ldr	r3, [pc, #108]	; (8006c4c <HAL_RCC_OscConfig+0x478>)
 8006bde:	2201      	movs	r2, #1
 8006be0:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8006be2:	f7fc ff59 	bl	8003a98 <HAL_GetTick>
 8006be6:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006be8:	e008      	b.n	8006bfc <HAL_RCC_OscConfig+0x428>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006bea:	f7fc ff55 	bl	8003a98 <HAL_GetTick>
 8006bee:	4602      	mov	r2, r0
 8006bf0:	693b      	ldr	r3, [r7, #16]
 8006bf2:	1ad3      	subs	r3, r2, r3
 8006bf4:	2b02      	cmp	r3, #2
 8006bf6:	d901      	bls.n	8006bfc <HAL_RCC_OscConfig+0x428>
          {
            return HAL_TIMEOUT;
 8006bf8:	2303      	movs	r3, #3
 8006bfa:	e05c      	b.n	8006cb6 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006bfc:	4b11      	ldr	r3, [pc, #68]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006bfe:	681b      	ldr	r3, [r3, #0]
 8006c00:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006c04:	2b00      	cmp	r3, #0
 8006c06:	d0f0      	beq.n	8006bea <HAL_RCC_OscConfig+0x416>
 8006c08:	e054      	b.n	8006cb4 <HAL_RCC_OscConfig+0x4e0>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8006c0a:	4b10      	ldr	r3, [pc, #64]	; (8006c4c <HAL_RCC_OscConfig+0x478>)
 8006c0c:	2200      	movs	r2, #0
 8006c0e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8006c10:	f7fc ff42 	bl	8003a98 <HAL_GetTick>
 8006c14:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006c16:	e008      	b.n	8006c2a <HAL_RCC_OscConfig+0x456>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006c18:	f7fc ff3e 	bl	8003a98 <HAL_GetTick>
 8006c1c:	4602      	mov	r2, r0
 8006c1e:	693b      	ldr	r3, [r7, #16]
 8006c20:	1ad3      	subs	r3, r2, r3
 8006c22:	2b02      	cmp	r3, #2
 8006c24:	d901      	bls.n	8006c2a <HAL_RCC_OscConfig+0x456>
          {
            return HAL_TIMEOUT;
 8006c26:	2303      	movs	r3, #3
 8006c28:	e045      	b.n	8006cb6 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006c2a:	4b06      	ldr	r3, [pc, #24]	; (8006c44 <HAL_RCC_OscConfig+0x470>)
 8006c2c:	681b      	ldr	r3, [r3, #0]
 8006c2e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006c32:	2b00      	cmp	r3, #0
 8006c34:	d1f0      	bne.n	8006c18 <HAL_RCC_OscConfig+0x444>
 8006c36:	e03d      	b.n	8006cb4 <HAL_RCC_OscConfig+0x4e0>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8006c38:	687b      	ldr	r3, [r7, #4]
 8006c3a:	699b      	ldr	r3, [r3, #24]
 8006c3c:	2b01      	cmp	r3, #1
 8006c3e:	d107      	bne.n	8006c50 <HAL_RCC_OscConfig+0x47c>
      {
        return HAL_ERROR;
 8006c40:	2301      	movs	r3, #1
 8006c42:	e038      	b.n	8006cb6 <HAL_RCC_OscConfig+0x4e2>
 8006c44:	40023800 	.word	0x40023800
 8006c48:	40007000 	.word	0x40007000
 8006c4c:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8006c50:	4b1b      	ldr	r3, [pc, #108]	; (8006cc0 <HAL_RCC_OscConfig+0x4ec>)
 8006c52:	685b      	ldr	r3, [r3, #4]
 8006c54:	60fb      	str	r3, [r7, #12]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006c56:	687b      	ldr	r3, [r7, #4]
 8006c58:	699b      	ldr	r3, [r3, #24]
 8006c5a:	2b01      	cmp	r3, #1
 8006c5c:	d028      	beq.n	8006cb0 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006c5e:	68fb      	ldr	r3, [r7, #12]
 8006c60:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8006c64:	687b      	ldr	r3, [r7, #4]
 8006c66:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006c68:	429a      	cmp	r2, r3
 8006c6a:	d121      	bne.n	8006cb0 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006c6c:	68fb      	ldr	r3, [r7, #12]
 8006c6e:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8006c72:	687b      	ldr	r3, [r7, #4]
 8006c74:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006c76:	429a      	cmp	r2, r3
 8006c78:	d11a      	bne.n	8006cb0 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006c7a:	68fa      	ldr	r2, [r7, #12]
 8006c7c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8006c80:	4013      	ands	r3, r2
 8006c82:	687a      	ldr	r2, [r7, #4]
 8006c84:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8006c86:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006c88:	4293      	cmp	r3, r2
 8006c8a:	d111      	bne.n	8006cb0 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006c8c:	68fb      	ldr	r3, [r7, #12]
 8006c8e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8006c92:	687b      	ldr	r3, [r7, #4]
 8006c94:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006c96:	085b      	lsrs	r3, r3, #1
 8006c98:	3b01      	subs	r3, #1
 8006c9a:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006c9c:	429a      	cmp	r2, r3
 8006c9e:	d107      	bne.n	8006cb0 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8006ca0:	68fb      	ldr	r3, [r7, #12]
 8006ca2:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8006ca6:	687b      	ldr	r3, [r7, #4]
 8006ca8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006caa:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006cac:	429a      	cmp	r2, r3
 8006cae:	d001      	beq.n	8006cb4 <HAL_RCC_OscConfig+0x4e0>
#endif
        {
          return HAL_ERROR;
 8006cb0:	2301      	movs	r3, #1
 8006cb2:	e000      	b.n	8006cb6 <HAL_RCC_OscConfig+0x4e2>
        }
      }
    }
  }
  return HAL_OK;
 8006cb4:	2300      	movs	r3, #0
}
 8006cb6:	4618      	mov	r0, r3
 8006cb8:	3718      	adds	r7, #24
 8006cba:	46bd      	mov	sp, r7
 8006cbc:	bd80      	pop	{r7, pc}
 8006cbe:	bf00      	nop
 8006cc0:	40023800 	.word	0x40023800

08006cc4 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8006cc4:	b580      	push	{r7, lr}
 8006cc6:	b084      	sub	sp, #16
 8006cc8:	af00      	add	r7, sp, #0
 8006cca:	6078      	str	r0, [r7, #4]
 8006ccc:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8006cce:	687b      	ldr	r3, [r7, #4]
 8006cd0:	2b00      	cmp	r3, #0
 8006cd2:	d101      	bne.n	8006cd8 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8006cd4:	2301      	movs	r3, #1
 8006cd6:	e0cc      	b.n	8006e72 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8006cd8:	4b68      	ldr	r3, [pc, #416]	; (8006e7c <HAL_RCC_ClockConfig+0x1b8>)
 8006cda:	681b      	ldr	r3, [r3, #0]
 8006cdc:	f003 0307 	and.w	r3, r3, #7
 8006ce0:	683a      	ldr	r2, [r7, #0]
 8006ce2:	429a      	cmp	r2, r3
 8006ce4:	d90c      	bls.n	8006d00 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006ce6:	4b65      	ldr	r3, [pc, #404]	; (8006e7c <HAL_RCC_ClockConfig+0x1b8>)
 8006ce8:	683a      	ldr	r2, [r7, #0]
 8006cea:	b2d2      	uxtb	r2, r2
 8006cec:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006cee:	4b63      	ldr	r3, [pc, #396]	; (8006e7c <HAL_RCC_ClockConfig+0x1b8>)
 8006cf0:	681b      	ldr	r3, [r3, #0]
 8006cf2:	f003 0307 	and.w	r3, r3, #7
 8006cf6:	683a      	ldr	r2, [r7, #0]
 8006cf8:	429a      	cmp	r2, r3
 8006cfa:	d001      	beq.n	8006d00 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 8006cfc:	2301      	movs	r3, #1
 8006cfe:	e0b8      	b.n	8006e72 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006d00:	687b      	ldr	r3, [r7, #4]
 8006d02:	681b      	ldr	r3, [r3, #0]
 8006d04:	f003 0302 	and.w	r3, r3, #2
 8006d08:	2b00      	cmp	r3, #0
 8006d0a:	d020      	beq.n	8006d4e <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006d0c:	687b      	ldr	r3, [r7, #4]
 8006d0e:	681b      	ldr	r3, [r3, #0]
 8006d10:	f003 0304 	and.w	r3, r3, #4
 8006d14:	2b00      	cmp	r3, #0
 8006d16:	d005      	beq.n	8006d24 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006d18:	4b59      	ldr	r3, [pc, #356]	; (8006e80 <HAL_RCC_ClockConfig+0x1bc>)
 8006d1a:	689b      	ldr	r3, [r3, #8]
 8006d1c:	4a58      	ldr	r2, [pc, #352]	; (8006e80 <HAL_RCC_ClockConfig+0x1bc>)
 8006d1e:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8006d22:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006d24:	687b      	ldr	r3, [r7, #4]
 8006d26:	681b      	ldr	r3, [r3, #0]
 8006d28:	f003 0308 	and.w	r3, r3, #8
 8006d2c:	2b00      	cmp	r3, #0
 8006d2e:	d005      	beq.n	8006d3c <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8006d30:	4b53      	ldr	r3, [pc, #332]	; (8006e80 <HAL_RCC_ClockConfig+0x1bc>)
 8006d32:	689b      	ldr	r3, [r3, #8]
 8006d34:	4a52      	ldr	r2, [pc, #328]	; (8006e80 <HAL_RCC_ClockConfig+0x1bc>)
 8006d36:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8006d3a:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8006d3c:	4b50      	ldr	r3, [pc, #320]	; (8006e80 <HAL_RCC_ClockConfig+0x1bc>)
 8006d3e:	689b      	ldr	r3, [r3, #8]
 8006d40:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8006d44:	687b      	ldr	r3, [r7, #4]
 8006d46:	689b      	ldr	r3, [r3, #8]
 8006d48:	494d      	ldr	r1, [pc, #308]	; (8006e80 <HAL_RCC_ClockConfig+0x1bc>)
 8006d4a:	4313      	orrs	r3, r2
 8006d4c:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006d4e:	687b      	ldr	r3, [r7, #4]
 8006d50:	681b      	ldr	r3, [r3, #0]
 8006d52:	f003 0301 	and.w	r3, r3, #1
 8006d56:	2b00      	cmp	r3, #0
 8006d58:	d044      	beq.n	8006de4 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006d5a:	687b      	ldr	r3, [r7, #4]
 8006d5c:	685b      	ldr	r3, [r3, #4]
 8006d5e:	2b01      	cmp	r3, #1
 8006d60:	d107      	bne.n	8006d72 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006d62:	4b47      	ldr	r3, [pc, #284]	; (8006e80 <HAL_RCC_ClockConfig+0x1bc>)
 8006d64:	681b      	ldr	r3, [r3, #0]
 8006d66:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006d6a:	2b00      	cmp	r3, #0
 8006d6c:	d119      	bne.n	8006da2 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8006d6e:	2301      	movs	r3, #1
 8006d70:	e07f      	b.n	8006e72 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006d72:	687b      	ldr	r3, [r7, #4]
 8006d74:	685b      	ldr	r3, [r3, #4]
 8006d76:	2b02      	cmp	r3, #2
 8006d78:	d003      	beq.n	8006d82 <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 8006d7a:	687b      	ldr	r3, [r7, #4]
 8006d7c:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006d7e:	2b03      	cmp	r3, #3
 8006d80:	d107      	bne.n	8006d92 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006d82:	4b3f      	ldr	r3, [pc, #252]	; (8006e80 <HAL_RCC_ClockConfig+0x1bc>)
 8006d84:	681b      	ldr	r3, [r3, #0]
 8006d86:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006d8a:	2b00      	cmp	r3, #0
 8006d8c:	d109      	bne.n	8006da2 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8006d8e:	2301      	movs	r3, #1
 8006d90:	e06f      	b.n	8006e72 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006d92:	4b3b      	ldr	r3, [pc, #236]	; (8006e80 <HAL_RCC_ClockConfig+0x1bc>)
 8006d94:	681b      	ldr	r3, [r3, #0]
 8006d96:	f003 0302 	and.w	r3, r3, #2
 8006d9a:	2b00      	cmp	r3, #0
 8006d9c:	d101      	bne.n	8006da2 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8006d9e:	2301      	movs	r3, #1
 8006da0:	e067      	b.n	8006e72 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006da2:	4b37      	ldr	r3, [pc, #220]	; (8006e80 <HAL_RCC_ClockConfig+0x1bc>)
 8006da4:	689b      	ldr	r3, [r3, #8]
 8006da6:	f023 0203 	bic.w	r2, r3, #3
 8006daa:	687b      	ldr	r3, [r7, #4]
 8006dac:	685b      	ldr	r3, [r3, #4]
 8006dae:	4934      	ldr	r1, [pc, #208]	; (8006e80 <HAL_RCC_ClockConfig+0x1bc>)
 8006db0:	4313      	orrs	r3, r2
 8006db2:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8006db4:	f7fc fe70 	bl	8003a98 <HAL_GetTick>
 8006db8:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006dba:	e00a      	b.n	8006dd2 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006dbc:	f7fc fe6c 	bl	8003a98 <HAL_GetTick>
 8006dc0:	4602      	mov	r2, r0
 8006dc2:	68fb      	ldr	r3, [r7, #12]
 8006dc4:	1ad3      	subs	r3, r2, r3
 8006dc6:	f241 3288 	movw	r2, #5000	; 0x1388
 8006dca:	4293      	cmp	r3, r2
 8006dcc:	d901      	bls.n	8006dd2 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8006dce:	2303      	movs	r3, #3
 8006dd0:	e04f      	b.n	8006e72 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006dd2:	4b2b      	ldr	r3, [pc, #172]	; (8006e80 <HAL_RCC_ClockConfig+0x1bc>)
 8006dd4:	689b      	ldr	r3, [r3, #8]
 8006dd6:	f003 020c 	and.w	r2, r3, #12
 8006dda:	687b      	ldr	r3, [r7, #4]
 8006ddc:	685b      	ldr	r3, [r3, #4]
 8006dde:	009b      	lsls	r3, r3, #2
 8006de0:	429a      	cmp	r2, r3
 8006de2:	d1eb      	bne.n	8006dbc <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8006de4:	4b25      	ldr	r3, [pc, #148]	; (8006e7c <HAL_RCC_ClockConfig+0x1b8>)
 8006de6:	681b      	ldr	r3, [r3, #0]
 8006de8:	f003 0307 	and.w	r3, r3, #7
 8006dec:	683a      	ldr	r2, [r7, #0]
 8006dee:	429a      	cmp	r2, r3
 8006df0:	d20c      	bcs.n	8006e0c <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006df2:	4b22      	ldr	r3, [pc, #136]	; (8006e7c <HAL_RCC_ClockConfig+0x1b8>)
 8006df4:	683a      	ldr	r2, [r7, #0]
 8006df6:	b2d2      	uxtb	r2, r2
 8006df8:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006dfa:	4b20      	ldr	r3, [pc, #128]	; (8006e7c <HAL_RCC_ClockConfig+0x1b8>)
 8006dfc:	681b      	ldr	r3, [r3, #0]
 8006dfe:	f003 0307 	and.w	r3, r3, #7
 8006e02:	683a      	ldr	r2, [r7, #0]
 8006e04:	429a      	cmp	r2, r3
 8006e06:	d001      	beq.n	8006e0c <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8006e08:	2301      	movs	r3, #1
 8006e0a:	e032      	b.n	8006e72 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006e0c:	687b      	ldr	r3, [r7, #4]
 8006e0e:	681b      	ldr	r3, [r3, #0]
 8006e10:	f003 0304 	and.w	r3, r3, #4
 8006e14:	2b00      	cmp	r3, #0
 8006e16:	d008      	beq.n	8006e2a <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8006e18:	4b19      	ldr	r3, [pc, #100]	; (8006e80 <HAL_RCC_ClockConfig+0x1bc>)
 8006e1a:	689b      	ldr	r3, [r3, #8]
 8006e1c:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8006e20:	687b      	ldr	r3, [r7, #4]
 8006e22:	68db      	ldr	r3, [r3, #12]
 8006e24:	4916      	ldr	r1, [pc, #88]	; (8006e80 <HAL_RCC_ClockConfig+0x1bc>)
 8006e26:	4313      	orrs	r3, r2
 8006e28:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006e2a:	687b      	ldr	r3, [r7, #4]
 8006e2c:	681b      	ldr	r3, [r3, #0]
 8006e2e:	f003 0308 	and.w	r3, r3, #8
 8006e32:	2b00      	cmp	r3, #0
 8006e34:	d009      	beq.n	8006e4a <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8006e36:	4b12      	ldr	r3, [pc, #72]	; (8006e80 <HAL_RCC_ClockConfig+0x1bc>)
 8006e38:	689b      	ldr	r3, [r3, #8]
 8006e3a:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8006e3e:	687b      	ldr	r3, [r7, #4]
 8006e40:	691b      	ldr	r3, [r3, #16]
 8006e42:	00db      	lsls	r3, r3, #3
 8006e44:	490e      	ldr	r1, [pc, #56]	; (8006e80 <HAL_RCC_ClockConfig+0x1bc>)
 8006e46:	4313      	orrs	r3, r2
 8006e48:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8006e4a:	f000 f821 	bl	8006e90 <HAL_RCC_GetSysClockFreq>
 8006e4e:	4602      	mov	r2, r0
 8006e50:	4b0b      	ldr	r3, [pc, #44]	; (8006e80 <HAL_RCC_ClockConfig+0x1bc>)
 8006e52:	689b      	ldr	r3, [r3, #8]
 8006e54:	091b      	lsrs	r3, r3, #4
 8006e56:	f003 030f 	and.w	r3, r3, #15
 8006e5a:	490a      	ldr	r1, [pc, #40]	; (8006e84 <HAL_RCC_ClockConfig+0x1c0>)
 8006e5c:	5ccb      	ldrb	r3, [r1, r3]
 8006e5e:	fa22 f303 	lsr.w	r3, r2, r3
 8006e62:	4a09      	ldr	r2, [pc, #36]	; (8006e88 <HAL_RCC_ClockConfig+0x1c4>)
 8006e64:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 8006e66:	4b09      	ldr	r3, [pc, #36]	; (8006e8c <HAL_RCC_ClockConfig+0x1c8>)
 8006e68:	681b      	ldr	r3, [r3, #0]
 8006e6a:	4618      	mov	r0, r3
 8006e6c:	f7fc fdd0 	bl	8003a10 <HAL_InitTick>

  return HAL_OK;
 8006e70:	2300      	movs	r3, #0
}
 8006e72:	4618      	mov	r0, r3
 8006e74:	3710      	adds	r7, #16
 8006e76:	46bd      	mov	sp, r7
 8006e78:	bd80      	pop	{r7, pc}
 8006e7a:	bf00      	nop
 8006e7c:	40023c00 	.word	0x40023c00
 8006e80:	40023800 	.word	0x40023800
 8006e84:	0802dc5c 	.word	0x0802dc5c
 8006e88:	20000004 	.word	0x20000004
 8006e8c:	20000010 	.word	0x20000010

08006e90 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8006e90:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8006e94:	b090      	sub	sp, #64	; 0x40
 8006e96:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 8006e98:	2300      	movs	r3, #0
 8006e9a:	637b      	str	r3, [r7, #52]	; 0x34
 8006e9c:	2300      	movs	r3, #0
 8006e9e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006ea0:	2300      	movs	r3, #0
 8006ea2:	633b      	str	r3, [r7, #48]	; 0x30
  uint32_t sysclockfreq = 0U;
 8006ea4:	2300      	movs	r3, #0
 8006ea6:	63bb      	str	r3, [r7, #56]	; 0x38

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006ea8:	4b59      	ldr	r3, [pc, #356]	; (8007010 <HAL_RCC_GetSysClockFreq+0x180>)
 8006eaa:	689b      	ldr	r3, [r3, #8]
 8006eac:	f003 030c 	and.w	r3, r3, #12
 8006eb0:	2b08      	cmp	r3, #8
 8006eb2:	d00d      	beq.n	8006ed0 <HAL_RCC_GetSysClockFreq+0x40>
 8006eb4:	2b08      	cmp	r3, #8
 8006eb6:	f200 80a1 	bhi.w	8006ffc <HAL_RCC_GetSysClockFreq+0x16c>
 8006eba:	2b00      	cmp	r3, #0
 8006ebc:	d002      	beq.n	8006ec4 <HAL_RCC_GetSysClockFreq+0x34>
 8006ebe:	2b04      	cmp	r3, #4
 8006ec0:	d003      	beq.n	8006eca <HAL_RCC_GetSysClockFreq+0x3a>
 8006ec2:	e09b      	b.n	8006ffc <HAL_RCC_GetSysClockFreq+0x16c>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8006ec4:	4b53      	ldr	r3, [pc, #332]	; (8007014 <HAL_RCC_GetSysClockFreq+0x184>)
 8006ec6:	63bb      	str	r3, [r7, #56]	; 0x38
       break;
 8006ec8:	e09b      	b.n	8007002 <HAL_RCC_GetSysClockFreq+0x172>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8006eca:	4b53      	ldr	r3, [pc, #332]	; (8007018 <HAL_RCC_GetSysClockFreq+0x188>)
 8006ecc:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8006ece:	e098      	b.n	8007002 <HAL_RCC_GetSysClockFreq+0x172>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006ed0:	4b4f      	ldr	r3, [pc, #316]	; (8007010 <HAL_RCC_GetSysClockFreq+0x180>)
 8006ed2:	685b      	ldr	r3, [r3, #4]
 8006ed4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8006ed8:	637b      	str	r3, [r7, #52]	; 0x34
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006eda:	4b4d      	ldr	r3, [pc, #308]	; (8007010 <HAL_RCC_GetSysClockFreq+0x180>)
 8006edc:	685b      	ldr	r3, [r3, #4]
 8006ede:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006ee2:	2b00      	cmp	r3, #0
 8006ee4:	d028      	beq.n	8006f38 <HAL_RCC_GetSysClockFreq+0xa8>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006ee6:	4b4a      	ldr	r3, [pc, #296]	; (8007010 <HAL_RCC_GetSysClockFreq+0x180>)
 8006ee8:	685b      	ldr	r3, [r3, #4]
 8006eea:	099b      	lsrs	r3, r3, #6
 8006eec:	2200      	movs	r2, #0
 8006eee:	623b      	str	r3, [r7, #32]
 8006ef0:	627a      	str	r2, [r7, #36]	; 0x24
 8006ef2:	6a3b      	ldr	r3, [r7, #32]
 8006ef4:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8006ef8:	2100      	movs	r1, #0
 8006efa:	4b47      	ldr	r3, [pc, #284]	; (8007018 <HAL_RCC_GetSysClockFreq+0x188>)
 8006efc:	fb03 f201 	mul.w	r2, r3, r1
 8006f00:	2300      	movs	r3, #0
 8006f02:	fb00 f303 	mul.w	r3, r0, r3
 8006f06:	4413      	add	r3, r2
 8006f08:	4a43      	ldr	r2, [pc, #268]	; (8007018 <HAL_RCC_GetSysClockFreq+0x188>)
 8006f0a:	fba0 1202 	umull	r1, r2, r0, r2
 8006f0e:	62fa      	str	r2, [r7, #44]	; 0x2c
 8006f10:	460a      	mov	r2, r1
 8006f12:	62ba      	str	r2, [r7, #40]	; 0x28
 8006f14:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8006f16:	4413      	add	r3, r2
 8006f18:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006f1a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006f1c:	2200      	movs	r2, #0
 8006f1e:	61bb      	str	r3, [r7, #24]
 8006f20:	61fa      	str	r2, [r7, #28]
 8006f22:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8006f26:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8006f2a:	f7f9 feb5 	bl	8000c98 <__aeabi_uldivmod>
 8006f2e:	4602      	mov	r2, r0
 8006f30:	460b      	mov	r3, r1
 8006f32:	4613      	mov	r3, r2
 8006f34:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006f36:	e053      	b.n	8006fe0 <HAL_RCC_GetSysClockFreq+0x150>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006f38:	4b35      	ldr	r3, [pc, #212]	; (8007010 <HAL_RCC_GetSysClockFreq+0x180>)
 8006f3a:	685b      	ldr	r3, [r3, #4]
 8006f3c:	099b      	lsrs	r3, r3, #6
 8006f3e:	2200      	movs	r2, #0
 8006f40:	613b      	str	r3, [r7, #16]
 8006f42:	617a      	str	r2, [r7, #20]
 8006f44:	693b      	ldr	r3, [r7, #16]
 8006f46:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8006f4a:	f04f 0b00 	mov.w	fp, #0
 8006f4e:	4652      	mov	r2, sl
 8006f50:	465b      	mov	r3, fp
 8006f52:	f04f 0000 	mov.w	r0, #0
 8006f56:	f04f 0100 	mov.w	r1, #0
 8006f5a:	0159      	lsls	r1, r3, #5
 8006f5c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8006f60:	0150      	lsls	r0, r2, #5
 8006f62:	4602      	mov	r2, r0
 8006f64:	460b      	mov	r3, r1
 8006f66:	ebb2 080a 	subs.w	r8, r2, sl
 8006f6a:	eb63 090b 	sbc.w	r9, r3, fp
 8006f6e:	f04f 0200 	mov.w	r2, #0
 8006f72:	f04f 0300 	mov.w	r3, #0
 8006f76:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8006f7a:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8006f7e:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8006f82:	ebb2 0408 	subs.w	r4, r2, r8
 8006f86:	eb63 0509 	sbc.w	r5, r3, r9
 8006f8a:	f04f 0200 	mov.w	r2, #0
 8006f8e:	f04f 0300 	mov.w	r3, #0
 8006f92:	00eb      	lsls	r3, r5, #3
 8006f94:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8006f98:	00e2      	lsls	r2, r4, #3
 8006f9a:	4614      	mov	r4, r2
 8006f9c:	461d      	mov	r5, r3
 8006f9e:	eb14 030a 	adds.w	r3, r4, sl
 8006fa2:	603b      	str	r3, [r7, #0]
 8006fa4:	eb45 030b 	adc.w	r3, r5, fp
 8006fa8:	607b      	str	r3, [r7, #4]
 8006faa:	f04f 0200 	mov.w	r2, #0
 8006fae:	f04f 0300 	mov.w	r3, #0
 8006fb2:	e9d7 4500 	ldrd	r4, r5, [r7]
 8006fb6:	4629      	mov	r1, r5
 8006fb8:	028b      	lsls	r3, r1, #10
 8006fba:	4621      	mov	r1, r4
 8006fbc:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8006fc0:	4621      	mov	r1, r4
 8006fc2:	028a      	lsls	r2, r1, #10
 8006fc4:	4610      	mov	r0, r2
 8006fc6:	4619      	mov	r1, r3
 8006fc8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006fca:	2200      	movs	r2, #0
 8006fcc:	60bb      	str	r3, [r7, #8]
 8006fce:	60fa      	str	r2, [r7, #12]
 8006fd0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8006fd4:	f7f9 fe60 	bl	8000c98 <__aeabi_uldivmod>
 8006fd8:	4602      	mov	r2, r0
 8006fda:	460b      	mov	r3, r1
 8006fdc:	4613      	mov	r3, r2
 8006fde:	63fb      	str	r3, [r7, #60]	; 0x3c
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8006fe0:	4b0b      	ldr	r3, [pc, #44]	; (8007010 <HAL_RCC_GetSysClockFreq+0x180>)
 8006fe2:	685b      	ldr	r3, [r3, #4]
 8006fe4:	0c1b      	lsrs	r3, r3, #16
 8006fe6:	f003 0303 	and.w	r3, r3, #3
 8006fea:	3301      	adds	r3, #1
 8006fec:	005b      	lsls	r3, r3, #1
 8006fee:	633b      	str	r3, [r7, #48]	; 0x30

      sysclockfreq = pllvco/pllp;
 8006ff0:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8006ff2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006ff4:	fbb2 f3f3 	udiv	r3, r2, r3
 8006ff8:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8006ffa:	e002      	b.n	8007002 <HAL_RCC_GetSysClockFreq+0x172>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8006ffc:	4b05      	ldr	r3, [pc, #20]	; (8007014 <HAL_RCC_GetSysClockFreq+0x184>)
 8006ffe:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8007000:	bf00      	nop
    }
  }
  return sysclockfreq;
 8007002:	6bbb      	ldr	r3, [r7, #56]	; 0x38
}
 8007004:	4618      	mov	r0, r3
 8007006:	3740      	adds	r7, #64	; 0x40
 8007008:	46bd      	mov	sp, r7
 800700a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800700e:	bf00      	nop
 8007010:	40023800 	.word	0x40023800
 8007014:	00f42400 	.word	0x00f42400
 8007018:	017d7840 	.word	0x017d7840

0800701c <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 800701c:	b480      	push	{r7}
 800701e:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8007020:	4b03      	ldr	r3, [pc, #12]	; (8007030 <HAL_RCC_GetHCLKFreq+0x14>)
 8007022:	681b      	ldr	r3, [r3, #0]
}
 8007024:	4618      	mov	r0, r3
 8007026:	46bd      	mov	sp, r7
 8007028:	f85d 7b04 	ldr.w	r7, [sp], #4
 800702c:	4770      	bx	lr
 800702e:	bf00      	nop
 8007030:	20000004 	.word	0x20000004

08007034 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8007034:	b580      	push	{r7, lr}
 8007036:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8007038:	f7ff fff0 	bl	800701c <HAL_RCC_GetHCLKFreq>
 800703c:	4602      	mov	r2, r0
 800703e:	4b05      	ldr	r3, [pc, #20]	; (8007054 <HAL_RCC_GetPCLK1Freq+0x20>)
 8007040:	689b      	ldr	r3, [r3, #8]
 8007042:	0a9b      	lsrs	r3, r3, #10
 8007044:	f003 0307 	and.w	r3, r3, #7
 8007048:	4903      	ldr	r1, [pc, #12]	; (8007058 <HAL_RCC_GetPCLK1Freq+0x24>)
 800704a:	5ccb      	ldrb	r3, [r1, r3]
 800704c:	fa22 f303 	lsr.w	r3, r2, r3
}
 8007050:	4618      	mov	r0, r3
 8007052:	bd80      	pop	{r7, pc}
 8007054:	40023800 	.word	0x40023800
 8007058:	0802dc6c 	.word	0x0802dc6c

0800705c <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 800705c:	b580      	push	{r7, lr}
 800705e:	b082      	sub	sp, #8
 8007060:	af00      	add	r7, sp, #0
 8007062:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8007064:	687b      	ldr	r3, [r7, #4]
 8007066:	2b00      	cmp	r3, #0
 8007068:	d101      	bne.n	800706e <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 800706a:	2301      	movs	r3, #1
 800706c:	e07b      	b.n	8007166 <HAL_SPI_Init+0x10a>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800706e:	687b      	ldr	r3, [r7, #4]
 8007070:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007072:	2b00      	cmp	r3, #0
 8007074:	d108      	bne.n	8007088 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007076:	687b      	ldr	r3, [r7, #4]
 8007078:	685b      	ldr	r3, [r3, #4]
 800707a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800707e:	d009      	beq.n	8007094 <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8007080:	687b      	ldr	r3, [r7, #4]
 8007082:	2200      	movs	r2, #0
 8007084:	61da      	str	r2, [r3, #28]
 8007086:	e005      	b.n	8007094 <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8007088:	687b      	ldr	r3, [r7, #4]
 800708a:	2200      	movs	r2, #0
 800708c:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800708e:	687b      	ldr	r3, [r7, #4]
 8007090:	2200      	movs	r2, #0
 8007092:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8007094:	687b      	ldr	r3, [r7, #4]
 8007096:	2200      	movs	r2, #0
 8007098:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 800709a:	687b      	ldr	r3, [r7, #4]
 800709c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80070a0:	b2db      	uxtb	r3, r3
 80070a2:	2b00      	cmp	r3, #0
 80070a4:	d106      	bne.n	80070b4 <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 80070a6:	687b      	ldr	r3, [r7, #4]
 80070a8:	2200      	movs	r2, #0
 80070aa:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 80070ae:	6878      	ldr	r0, [r7, #4]
 80070b0:	f7fb fc96 	bl	80029e0 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 80070b4:	687b      	ldr	r3, [r7, #4]
 80070b6:	2202      	movs	r2, #2
 80070b8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 80070bc:	687b      	ldr	r3, [r7, #4]
 80070be:	681b      	ldr	r3, [r3, #0]
 80070c0:	681a      	ldr	r2, [r3, #0]
 80070c2:	687b      	ldr	r3, [r7, #4]
 80070c4:	681b      	ldr	r3, [r3, #0]
 80070c6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80070ca:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80070cc:	687b      	ldr	r3, [r7, #4]
 80070ce:	685b      	ldr	r3, [r3, #4]
 80070d0:	f403 7282 	and.w	r2, r3, #260	; 0x104
 80070d4:	687b      	ldr	r3, [r7, #4]
 80070d6:	689b      	ldr	r3, [r3, #8]
 80070d8:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 80070dc:	431a      	orrs	r2, r3
 80070de:	687b      	ldr	r3, [r7, #4]
 80070e0:	68db      	ldr	r3, [r3, #12]
 80070e2:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80070e6:	431a      	orrs	r2, r3
 80070e8:	687b      	ldr	r3, [r7, #4]
 80070ea:	691b      	ldr	r3, [r3, #16]
 80070ec:	f003 0302 	and.w	r3, r3, #2
 80070f0:	431a      	orrs	r2, r3
 80070f2:	687b      	ldr	r3, [r7, #4]
 80070f4:	695b      	ldr	r3, [r3, #20]
 80070f6:	f003 0301 	and.w	r3, r3, #1
 80070fa:	431a      	orrs	r2, r3
 80070fc:	687b      	ldr	r3, [r7, #4]
 80070fe:	699b      	ldr	r3, [r3, #24]
 8007100:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8007104:	431a      	orrs	r2, r3
 8007106:	687b      	ldr	r3, [r7, #4]
 8007108:	69db      	ldr	r3, [r3, #28]
 800710a:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800710e:	431a      	orrs	r2, r3
 8007110:	687b      	ldr	r3, [r7, #4]
 8007112:	6a1b      	ldr	r3, [r3, #32]
 8007114:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007118:	ea42 0103 	orr.w	r1, r2, r3
 800711c:	687b      	ldr	r3, [r7, #4]
 800711e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007120:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8007124:	687b      	ldr	r3, [r7, #4]
 8007126:	681b      	ldr	r3, [r3, #0]
 8007128:	430a      	orrs	r2, r1
 800712a:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800712c:	687b      	ldr	r3, [r7, #4]
 800712e:	699b      	ldr	r3, [r3, #24]
 8007130:	0c1b      	lsrs	r3, r3, #16
 8007132:	f003 0104 	and.w	r1, r3, #4
 8007136:	687b      	ldr	r3, [r7, #4]
 8007138:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800713a:	f003 0210 	and.w	r2, r3, #16
 800713e:	687b      	ldr	r3, [r7, #4]
 8007140:	681b      	ldr	r3, [r3, #0]
 8007142:	430a      	orrs	r2, r1
 8007144:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8007146:	687b      	ldr	r3, [r7, #4]
 8007148:	681b      	ldr	r3, [r3, #0]
 800714a:	69da      	ldr	r2, [r3, #28]
 800714c:	687b      	ldr	r3, [r7, #4]
 800714e:	681b      	ldr	r3, [r3, #0]
 8007150:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007154:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007156:	687b      	ldr	r3, [r7, #4]
 8007158:	2200      	movs	r2, #0
 800715a:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800715c:	687b      	ldr	r3, [r7, #4]
 800715e:	2201      	movs	r2, #1
 8007160:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  return HAL_OK;
 8007164:	2300      	movs	r3, #0
}
 8007166:	4618      	mov	r0, r3
 8007168:	3708      	adds	r7, #8
 800716a:	46bd      	mov	sp, r7
 800716c:	bd80      	pop	{r7, pc}

0800716e <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800716e:	b580      	push	{r7, lr}
 8007170:	b088      	sub	sp, #32
 8007172:	af00      	add	r7, sp, #0
 8007174:	60f8      	str	r0, [r7, #12]
 8007176:	60b9      	str	r1, [r7, #8]
 8007178:	603b      	str	r3, [r7, #0]
 800717a:	4613      	mov	r3, r2
 800717c:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 800717e:	2300      	movs	r3, #0
 8007180:	77fb      	strb	r3, [r7, #31]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8007182:	68fb      	ldr	r3, [r7, #12]
 8007184:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8007188:	2b01      	cmp	r3, #1
 800718a:	d101      	bne.n	8007190 <HAL_SPI_Transmit+0x22>
 800718c:	2302      	movs	r3, #2
 800718e:	e126      	b.n	80073de <HAL_SPI_Transmit+0x270>
 8007190:	68fb      	ldr	r3, [r7, #12]
 8007192:	2201      	movs	r2, #1
 8007194:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8007198:	f7fc fc7e 	bl	8003a98 <HAL_GetTick>
 800719c:	61b8      	str	r0, [r7, #24]
  initial_TxXferCount = Size;
 800719e:	88fb      	ldrh	r3, [r7, #6]
 80071a0:	82fb      	strh	r3, [r7, #22]

  if (hspi->State != HAL_SPI_STATE_READY)
 80071a2:	68fb      	ldr	r3, [r7, #12]
 80071a4:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80071a8:	b2db      	uxtb	r3, r3
 80071aa:	2b01      	cmp	r3, #1
 80071ac:	d002      	beq.n	80071b4 <HAL_SPI_Transmit+0x46>
  {
    errorcode = HAL_BUSY;
 80071ae:	2302      	movs	r3, #2
 80071b0:	77fb      	strb	r3, [r7, #31]
    goto error;
 80071b2:	e10b      	b.n	80073cc <HAL_SPI_Transmit+0x25e>
  }

  if ((pData == NULL) || (Size == 0U))
 80071b4:	68bb      	ldr	r3, [r7, #8]
 80071b6:	2b00      	cmp	r3, #0
 80071b8:	d002      	beq.n	80071c0 <HAL_SPI_Transmit+0x52>
 80071ba:	88fb      	ldrh	r3, [r7, #6]
 80071bc:	2b00      	cmp	r3, #0
 80071be:	d102      	bne.n	80071c6 <HAL_SPI_Transmit+0x58>
  {
    errorcode = HAL_ERROR;
 80071c0:	2301      	movs	r3, #1
 80071c2:	77fb      	strb	r3, [r7, #31]
    goto error;
 80071c4:	e102      	b.n	80073cc <HAL_SPI_Transmit+0x25e>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80071c6:	68fb      	ldr	r3, [r7, #12]
 80071c8:	2203      	movs	r2, #3
 80071ca:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80071ce:	68fb      	ldr	r3, [r7, #12]
 80071d0:	2200      	movs	r2, #0
 80071d2:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 80071d4:	68fb      	ldr	r3, [r7, #12]
 80071d6:	68ba      	ldr	r2, [r7, #8]
 80071d8:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 80071da:	68fb      	ldr	r3, [r7, #12]
 80071dc:	88fa      	ldrh	r2, [r7, #6]
 80071de:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 80071e0:	68fb      	ldr	r3, [r7, #12]
 80071e2:	88fa      	ldrh	r2, [r7, #6]
 80071e4:	86da      	strh	r2, [r3, #54]	; 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80071e6:	68fb      	ldr	r3, [r7, #12]
 80071e8:	2200      	movs	r2, #0
 80071ea:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 80071ec:	68fb      	ldr	r3, [r7, #12]
 80071ee:	2200      	movs	r2, #0
 80071f0:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 80071f2:	68fb      	ldr	r3, [r7, #12]
 80071f4:	2200      	movs	r2, #0
 80071f6:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxISR       = NULL;
 80071f8:	68fb      	ldr	r3, [r7, #12]
 80071fa:	2200      	movs	r2, #0
 80071fc:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 80071fe:	68fb      	ldr	r3, [r7, #12]
 8007200:	2200      	movs	r2, #0
 8007202:	641a      	str	r2, [r3, #64]	; 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007204:	68fb      	ldr	r3, [r7, #12]
 8007206:	689b      	ldr	r3, [r3, #8]
 8007208:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800720c:	d10f      	bne.n	800722e <HAL_SPI_Transmit+0xc0>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 800720e:	68fb      	ldr	r3, [r7, #12]
 8007210:	681b      	ldr	r3, [r3, #0]
 8007212:	681a      	ldr	r2, [r3, #0]
 8007214:	68fb      	ldr	r3, [r7, #12]
 8007216:	681b      	ldr	r3, [r3, #0]
 8007218:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800721c:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 800721e:	68fb      	ldr	r3, [r7, #12]
 8007220:	681b      	ldr	r3, [r3, #0]
 8007222:	681a      	ldr	r2, [r3, #0]
 8007224:	68fb      	ldr	r3, [r7, #12]
 8007226:	681b      	ldr	r3, [r3, #0]
 8007228:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800722c:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800722e:	68fb      	ldr	r3, [r7, #12]
 8007230:	681b      	ldr	r3, [r3, #0]
 8007232:	681b      	ldr	r3, [r3, #0]
 8007234:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007238:	2b40      	cmp	r3, #64	; 0x40
 800723a:	d007      	beq.n	800724c <HAL_SPI_Transmit+0xde>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 800723c:	68fb      	ldr	r3, [r7, #12]
 800723e:	681b      	ldr	r3, [r3, #0]
 8007240:	681a      	ldr	r2, [r3, #0]
 8007242:	68fb      	ldr	r3, [r7, #12]
 8007244:	681b      	ldr	r3, [r3, #0]
 8007246:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800724a:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800724c:	68fb      	ldr	r3, [r7, #12]
 800724e:	68db      	ldr	r3, [r3, #12]
 8007250:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007254:	d14b      	bne.n	80072ee <HAL_SPI_Transmit+0x180>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007256:	68fb      	ldr	r3, [r7, #12]
 8007258:	685b      	ldr	r3, [r3, #4]
 800725a:	2b00      	cmp	r3, #0
 800725c:	d002      	beq.n	8007264 <HAL_SPI_Transmit+0xf6>
 800725e:	8afb      	ldrh	r3, [r7, #22]
 8007260:	2b01      	cmp	r3, #1
 8007262:	d13e      	bne.n	80072e2 <HAL_SPI_Transmit+0x174>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007264:	68fb      	ldr	r3, [r7, #12]
 8007266:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007268:	881a      	ldrh	r2, [r3, #0]
 800726a:	68fb      	ldr	r3, [r7, #12]
 800726c:	681b      	ldr	r3, [r3, #0]
 800726e:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007270:	68fb      	ldr	r3, [r7, #12]
 8007272:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007274:	1c9a      	adds	r2, r3, #2
 8007276:	68fb      	ldr	r3, [r7, #12]
 8007278:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 800727a:	68fb      	ldr	r3, [r7, #12]
 800727c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800727e:	b29b      	uxth	r3, r3
 8007280:	3b01      	subs	r3, #1
 8007282:	b29a      	uxth	r2, r3
 8007284:	68fb      	ldr	r3, [r7, #12]
 8007286:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8007288:	e02b      	b.n	80072e2 <HAL_SPI_Transmit+0x174>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800728a:	68fb      	ldr	r3, [r7, #12]
 800728c:	681b      	ldr	r3, [r3, #0]
 800728e:	689b      	ldr	r3, [r3, #8]
 8007290:	f003 0302 	and.w	r3, r3, #2
 8007294:	2b02      	cmp	r3, #2
 8007296:	d112      	bne.n	80072be <HAL_SPI_Transmit+0x150>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007298:	68fb      	ldr	r3, [r7, #12]
 800729a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800729c:	881a      	ldrh	r2, [r3, #0]
 800729e:	68fb      	ldr	r3, [r7, #12]
 80072a0:	681b      	ldr	r3, [r3, #0]
 80072a2:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80072a4:	68fb      	ldr	r3, [r7, #12]
 80072a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80072a8:	1c9a      	adds	r2, r3, #2
 80072aa:	68fb      	ldr	r3, [r7, #12]
 80072ac:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 80072ae:	68fb      	ldr	r3, [r7, #12]
 80072b0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80072b2:	b29b      	uxth	r3, r3
 80072b4:	3b01      	subs	r3, #1
 80072b6:	b29a      	uxth	r2, r3
 80072b8:	68fb      	ldr	r3, [r7, #12]
 80072ba:	86da      	strh	r2, [r3, #54]	; 0x36
 80072bc:	e011      	b.n	80072e2 <HAL_SPI_Transmit+0x174>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80072be:	f7fc fbeb 	bl	8003a98 <HAL_GetTick>
 80072c2:	4602      	mov	r2, r0
 80072c4:	69bb      	ldr	r3, [r7, #24]
 80072c6:	1ad3      	subs	r3, r2, r3
 80072c8:	683a      	ldr	r2, [r7, #0]
 80072ca:	429a      	cmp	r2, r3
 80072cc:	d803      	bhi.n	80072d6 <HAL_SPI_Transmit+0x168>
 80072ce:	683b      	ldr	r3, [r7, #0]
 80072d0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80072d4:	d102      	bne.n	80072dc <HAL_SPI_Transmit+0x16e>
 80072d6:	683b      	ldr	r3, [r7, #0]
 80072d8:	2b00      	cmp	r3, #0
 80072da:	d102      	bne.n	80072e2 <HAL_SPI_Transmit+0x174>
        {
          errorcode = HAL_TIMEOUT;
 80072dc:	2303      	movs	r3, #3
 80072de:	77fb      	strb	r3, [r7, #31]
          goto error;
 80072e0:	e074      	b.n	80073cc <HAL_SPI_Transmit+0x25e>
    while (hspi->TxXferCount > 0U)
 80072e2:	68fb      	ldr	r3, [r7, #12]
 80072e4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80072e6:	b29b      	uxth	r3, r3
 80072e8:	2b00      	cmp	r3, #0
 80072ea:	d1ce      	bne.n	800728a <HAL_SPI_Transmit+0x11c>
 80072ec:	e04c      	b.n	8007388 <HAL_SPI_Transmit+0x21a>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80072ee:	68fb      	ldr	r3, [r7, #12]
 80072f0:	685b      	ldr	r3, [r3, #4]
 80072f2:	2b00      	cmp	r3, #0
 80072f4:	d002      	beq.n	80072fc <HAL_SPI_Transmit+0x18e>
 80072f6:	8afb      	ldrh	r3, [r7, #22]
 80072f8:	2b01      	cmp	r3, #1
 80072fa:	d140      	bne.n	800737e <HAL_SPI_Transmit+0x210>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80072fc:	68fb      	ldr	r3, [r7, #12]
 80072fe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8007300:	68fb      	ldr	r3, [r7, #12]
 8007302:	681b      	ldr	r3, [r3, #0]
 8007304:	330c      	adds	r3, #12
 8007306:	7812      	ldrb	r2, [r2, #0]
 8007308:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800730a:	68fb      	ldr	r3, [r7, #12]
 800730c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800730e:	1c5a      	adds	r2, r3, #1
 8007310:	68fb      	ldr	r3, [r7, #12]
 8007312:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8007314:	68fb      	ldr	r3, [r7, #12]
 8007316:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007318:	b29b      	uxth	r3, r3
 800731a:	3b01      	subs	r3, #1
 800731c:	b29a      	uxth	r2, r3
 800731e:	68fb      	ldr	r3, [r7, #12]
 8007320:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while (hspi->TxXferCount > 0U)
 8007322:	e02c      	b.n	800737e <HAL_SPI_Transmit+0x210>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007324:	68fb      	ldr	r3, [r7, #12]
 8007326:	681b      	ldr	r3, [r3, #0]
 8007328:	689b      	ldr	r3, [r3, #8]
 800732a:	f003 0302 	and.w	r3, r3, #2
 800732e:	2b02      	cmp	r3, #2
 8007330:	d113      	bne.n	800735a <HAL_SPI_Transmit+0x1ec>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007332:	68fb      	ldr	r3, [r7, #12]
 8007334:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8007336:	68fb      	ldr	r3, [r7, #12]
 8007338:	681b      	ldr	r3, [r3, #0]
 800733a:	330c      	adds	r3, #12
 800733c:	7812      	ldrb	r2, [r2, #0]
 800733e:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8007340:	68fb      	ldr	r3, [r7, #12]
 8007342:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007344:	1c5a      	adds	r2, r3, #1
 8007346:	68fb      	ldr	r3, [r7, #12]
 8007348:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 800734a:	68fb      	ldr	r3, [r7, #12]
 800734c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800734e:	b29b      	uxth	r3, r3
 8007350:	3b01      	subs	r3, #1
 8007352:	b29a      	uxth	r2, r3
 8007354:	68fb      	ldr	r3, [r7, #12]
 8007356:	86da      	strh	r2, [r3, #54]	; 0x36
 8007358:	e011      	b.n	800737e <HAL_SPI_Transmit+0x210>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800735a:	f7fc fb9d 	bl	8003a98 <HAL_GetTick>
 800735e:	4602      	mov	r2, r0
 8007360:	69bb      	ldr	r3, [r7, #24]
 8007362:	1ad3      	subs	r3, r2, r3
 8007364:	683a      	ldr	r2, [r7, #0]
 8007366:	429a      	cmp	r2, r3
 8007368:	d803      	bhi.n	8007372 <HAL_SPI_Transmit+0x204>
 800736a:	683b      	ldr	r3, [r7, #0]
 800736c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007370:	d102      	bne.n	8007378 <HAL_SPI_Transmit+0x20a>
 8007372:	683b      	ldr	r3, [r7, #0]
 8007374:	2b00      	cmp	r3, #0
 8007376:	d102      	bne.n	800737e <HAL_SPI_Transmit+0x210>
        {
          errorcode = HAL_TIMEOUT;
 8007378:	2303      	movs	r3, #3
 800737a:	77fb      	strb	r3, [r7, #31]
          goto error;
 800737c:	e026      	b.n	80073cc <HAL_SPI_Transmit+0x25e>
    while (hspi->TxXferCount > 0U)
 800737e:	68fb      	ldr	r3, [r7, #12]
 8007380:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007382:	b29b      	uxth	r3, r3
 8007384:	2b00      	cmp	r3, #0
 8007386:	d1cd      	bne.n	8007324 <HAL_SPI_Transmit+0x1b6>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007388:	69ba      	ldr	r2, [r7, #24]
 800738a:	6839      	ldr	r1, [r7, #0]
 800738c:	68f8      	ldr	r0, [r7, #12]
 800738e:	f000 fe15 	bl	8007fbc <SPI_EndRxTxTransaction>
 8007392:	4603      	mov	r3, r0
 8007394:	2b00      	cmp	r3, #0
 8007396:	d002      	beq.n	800739e <HAL_SPI_Transmit+0x230>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007398:	68fb      	ldr	r3, [r7, #12]
 800739a:	2220      	movs	r2, #32
 800739c:	655a      	str	r2, [r3, #84]	; 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800739e:	68fb      	ldr	r3, [r7, #12]
 80073a0:	689b      	ldr	r3, [r3, #8]
 80073a2:	2b00      	cmp	r3, #0
 80073a4:	d10a      	bne.n	80073bc <HAL_SPI_Transmit+0x24e>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80073a6:	2300      	movs	r3, #0
 80073a8:	613b      	str	r3, [r7, #16]
 80073aa:	68fb      	ldr	r3, [r7, #12]
 80073ac:	681b      	ldr	r3, [r3, #0]
 80073ae:	68db      	ldr	r3, [r3, #12]
 80073b0:	613b      	str	r3, [r7, #16]
 80073b2:	68fb      	ldr	r3, [r7, #12]
 80073b4:	681b      	ldr	r3, [r3, #0]
 80073b6:	689b      	ldr	r3, [r3, #8]
 80073b8:	613b      	str	r3, [r7, #16]
 80073ba:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80073bc:	68fb      	ldr	r3, [r7, #12]
 80073be:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80073c0:	2b00      	cmp	r3, #0
 80073c2:	d002      	beq.n	80073ca <HAL_SPI_Transmit+0x25c>
  {
    errorcode = HAL_ERROR;
 80073c4:	2301      	movs	r3, #1
 80073c6:	77fb      	strb	r3, [r7, #31]
 80073c8:	e000      	b.n	80073cc <HAL_SPI_Transmit+0x25e>
  }

error:
 80073ca:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 80073cc:	68fb      	ldr	r3, [r7, #12]
 80073ce:	2201      	movs	r2, #1
 80073d0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 80073d4:	68fb      	ldr	r3, [r7, #12]
 80073d6:	2200      	movs	r2, #0
 80073d8:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 80073dc:	7ffb      	ldrb	r3, [r7, #31]
}
 80073de:	4618      	mov	r0, r3
 80073e0:	3720      	adds	r7, #32
 80073e2:	46bd      	mov	sp, r7
 80073e4:	bd80      	pop	{r7, pc}

080073e6 <HAL_SPI_Receive>:
  * @param  Size amount of data to be received
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80073e6:	b580      	push	{r7, lr}
 80073e8:	b088      	sub	sp, #32
 80073ea:	af02      	add	r7, sp, #8
 80073ec:	60f8      	str	r0, [r7, #12]
 80073ee:	60b9      	str	r1, [r7, #8]
 80073f0:	603b      	str	r3, [r7, #0]
 80073f2:	4613      	mov	r3, r2
 80073f4:	80fb      	strh	r3, [r7, #6]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 80073f6:	2300      	movs	r3, #0
 80073f8:	75fb      	strb	r3, [r7, #23]

  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80073fa:	68fb      	ldr	r3, [r7, #12]
 80073fc:	685b      	ldr	r3, [r3, #4]
 80073fe:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007402:	d112      	bne.n	800742a <HAL_SPI_Receive+0x44>
 8007404:	68fb      	ldr	r3, [r7, #12]
 8007406:	689b      	ldr	r3, [r3, #8]
 8007408:	2b00      	cmp	r3, #0
 800740a:	d10e      	bne.n	800742a <HAL_SPI_Receive+0x44>
  {
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800740c:	68fb      	ldr	r3, [r7, #12]
 800740e:	2204      	movs	r2, #4
 8007410:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
    /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line */
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8007414:	88fa      	ldrh	r2, [r7, #6]
 8007416:	683b      	ldr	r3, [r7, #0]
 8007418:	9300      	str	r3, [sp, #0]
 800741a:	4613      	mov	r3, r2
 800741c:	68ba      	ldr	r2, [r7, #8]
 800741e:	68b9      	ldr	r1, [r7, #8]
 8007420:	68f8      	ldr	r0, [r7, #12]
 8007422:	f000 f8f1 	bl	8007608 <HAL_SPI_TransmitReceive>
 8007426:	4603      	mov	r3, r0
 8007428:	e0ea      	b.n	8007600 <HAL_SPI_Receive+0x21a>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 800742a:	68fb      	ldr	r3, [r7, #12]
 800742c:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8007430:	2b01      	cmp	r3, #1
 8007432:	d101      	bne.n	8007438 <HAL_SPI_Receive+0x52>
 8007434:	2302      	movs	r3, #2
 8007436:	e0e3      	b.n	8007600 <HAL_SPI_Receive+0x21a>
 8007438:	68fb      	ldr	r3, [r7, #12]
 800743a:	2201      	movs	r2, #1
 800743c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8007440:	f7fc fb2a 	bl	8003a98 <HAL_GetTick>
 8007444:	6138      	str	r0, [r7, #16]

  if (hspi->State != HAL_SPI_STATE_READY)
 8007446:	68fb      	ldr	r3, [r7, #12]
 8007448:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800744c:	b2db      	uxtb	r3, r3
 800744e:	2b01      	cmp	r3, #1
 8007450:	d002      	beq.n	8007458 <HAL_SPI_Receive+0x72>
  {
    errorcode = HAL_BUSY;
 8007452:	2302      	movs	r3, #2
 8007454:	75fb      	strb	r3, [r7, #23]
    goto error;
 8007456:	e0ca      	b.n	80075ee <HAL_SPI_Receive+0x208>
  }

  if ((pData == NULL) || (Size == 0U))
 8007458:	68bb      	ldr	r3, [r7, #8]
 800745a:	2b00      	cmp	r3, #0
 800745c:	d002      	beq.n	8007464 <HAL_SPI_Receive+0x7e>
 800745e:	88fb      	ldrh	r3, [r7, #6]
 8007460:	2b00      	cmp	r3, #0
 8007462:	d102      	bne.n	800746a <HAL_SPI_Receive+0x84>
  {
    errorcode = HAL_ERROR;
 8007464:	2301      	movs	r3, #1
 8007466:	75fb      	strb	r3, [r7, #23]
    goto error;
 8007468:	e0c1      	b.n	80075ee <HAL_SPI_Receive+0x208>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800746a:	68fb      	ldr	r3, [r7, #12]
 800746c:	2204      	movs	r2, #4
 800746e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007472:	68fb      	ldr	r3, [r7, #12]
 8007474:	2200      	movs	r2, #0
 8007476:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8007478:	68fb      	ldr	r3, [r7, #12]
 800747a:	68ba      	ldr	r2, [r7, #8]
 800747c:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = Size;
 800747e:	68fb      	ldr	r3, [r7, #12]
 8007480:	88fa      	ldrh	r2, [r7, #6]
 8007482:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = Size;
 8007484:	68fb      	ldr	r3, [r7, #12]
 8007486:	88fa      	ldrh	r2, [r7, #6]
 8007488:	87da      	strh	r2, [r3, #62]	; 0x3e

  /*Init field not used in handle to zero */
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800748a:	68fb      	ldr	r3, [r7, #12]
 800748c:	2200      	movs	r2, #0
 800748e:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 8007490:	68fb      	ldr	r3, [r7, #12]
 8007492:	2200      	movs	r2, #0
 8007494:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = 0U;
 8007496:	68fb      	ldr	r3, [r7, #12]
 8007498:	2200      	movs	r2, #0
 800749a:	86da      	strh	r2, [r3, #54]	; 0x36
  hspi->RxISR       = NULL;
 800749c:	68fb      	ldr	r3, [r7, #12]
 800749e:	2200      	movs	r2, #0
 80074a0:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->TxISR       = NULL;
 80074a2:	68fb      	ldr	r3, [r7, #12]
 80074a4:	2200      	movs	r2, #0
 80074a6:	645a      	str	r2, [r3, #68]	; 0x44
    hspi->RxXferCount--;
  }
#endif /* USE_SPI_CRC */

  /* Configure communication direction: 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80074a8:	68fb      	ldr	r3, [r7, #12]
 80074aa:	689b      	ldr	r3, [r3, #8]
 80074ac:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80074b0:	d10f      	bne.n	80074d2 <HAL_SPI_Receive+0xec>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 80074b2:	68fb      	ldr	r3, [r7, #12]
 80074b4:	681b      	ldr	r3, [r3, #0]
 80074b6:	681a      	ldr	r2, [r3, #0]
 80074b8:	68fb      	ldr	r3, [r7, #12]
 80074ba:	681b      	ldr	r3, [r3, #0]
 80074bc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80074c0:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 80074c2:	68fb      	ldr	r3, [r7, #12]
 80074c4:	681b      	ldr	r3, [r3, #0]
 80074c6:	681a      	ldr	r2, [r3, #0]
 80074c8:	68fb      	ldr	r3, [r7, #12]
 80074ca:	681b      	ldr	r3, [r3, #0]
 80074cc:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80074d0:	601a      	str	r2, [r3, #0]
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80074d2:	68fb      	ldr	r3, [r7, #12]
 80074d4:	681b      	ldr	r3, [r3, #0]
 80074d6:	681b      	ldr	r3, [r3, #0]
 80074d8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80074dc:	2b40      	cmp	r3, #64	; 0x40
 80074de:	d007      	beq.n	80074f0 <HAL_SPI_Receive+0x10a>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80074e0:	68fb      	ldr	r3, [r7, #12]
 80074e2:	681b      	ldr	r3, [r3, #0]
 80074e4:	681a      	ldr	r2, [r3, #0]
 80074e6:	68fb      	ldr	r3, [r7, #12]
 80074e8:	681b      	ldr	r3, [r3, #0]
 80074ea:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80074ee:	601a      	str	r2, [r3, #0]
  }

  /* Receive data in 8 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 80074f0:	68fb      	ldr	r3, [r7, #12]
 80074f2:	68db      	ldr	r3, [r3, #12]
 80074f4:	2b00      	cmp	r3, #0
 80074f6:	d162      	bne.n	80075be <HAL_SPI_Receive+0x1d8>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
 80074f8:	e02e      	b.n	8007558 <HAL_SPI_Receive+0x172>
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80074fa:	68fb      	ldr	r3, [r7, #12]
 80074fc:	681b      	ldr	r3, [r3, #0]
 80074fe:	689b      	ldr	r3, [r3, #8]
 8007500:	f003 0301 	and.w	r3, r3, #1
 8007504:	2b01      	cmp	r3, #1
 8007506:	d115      	bne.n	8007534 <HAL_SPI_Receive+0x14e>
      {
        /* read the received data */
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8007508:	68fb      	ldr	r3, [r7, #12]
 800750a:	681b      	ldr	r3, [r3, #0]
 800750c:	f103 020c 	add.w	r2, r3, #12
 8007510:	68fb      	ldr	r3, [r7, #12]
 8007512:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007514:	7812      	ldrb	r2, [r2, #0]
 8007516:	b2d2      	uxtb	r2, r2
 8007518:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800751a:	68fb      	ldr	r3, [r7, #12]
 800751c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800751e:	1c5a      	adds	r2, r3, #1
 8007520:	68fb      	ldr	r3, [r7, #12]
 8007522:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 8007524:	68fb      	ldr	r3, [r7, #12]
 8007526:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007528:	b29b      	uxth	r3, r3
 800752a:	3b01      	subs	r3, #1
 800752c:	b29a      	uxth	r2, r3
 800752e:	68fb      	ldr	r3, [r7, #12]
 8007530:	87da      	strh	r2, [r3, #62]	; 0x3e
 8007532:	e011      	b.n	8007558 <HAL_SPI_Receive+0x172>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007534:	f7fc fab0 	bl	8003a98 <HAL_GetTick>
 8007538:	4602      	mov	r2, r0
 800753a:	693b      	ldr	r3, [r7, #16]
 800753c:	1ad3      	subs	r3, r2, r3
 800753e:	683a      	ldr	r2, [r7, #0]
 8007540:	429a      	cmp	r2, r3
 8007542:	d803      	bhi.n	800754c <HAL_SPI_Receive+0x166>
 8007544:	683b      	ldr	r3, [r7, #0]
 8007546:	f1b3 3fff 	cmp.w	r3, #4294967295
 800754a:	d102      	bne.n	8007552 <HAL_SPI_Receive+0x16c>
 800754c:	683b      	ldr	r3, [r7, #0]
 800754e:	2b00      	cmp	r3, #0
 8007550:	d102      	bne.n	8007558 <HAL_SPI_Receive+0x172>
        {
          errorcode = HAL_TIMEOUT;
 8007552:	2303      	movs	r3, #3
 8007554:	75fb      	strb	r3, [r7, #23]
          goto error;
 8007556:	e04a      	b.n	80075ee <HAL_SPI_Receive+0x208>
    while (hspi->RxXferCount > 0U)
 8007558:	68fb      	ldr	r3, [r7, #12]
 800755a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800755c:	b29b      	uxth	r3, r3
 800755e:	2b00      	cmp	r3, #0
 8007560:	d1cb      	bne.n	80074fa <HAL_SPI_Receive+0x114>
 8007562:	e031      	b.n	80075c8 <HAL_SPI_Receive+0x1e2>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007564:	68fb      	ldr	r3, [r7, #12]
 8007566:	681b      	ldr	r3, [r3, #0]
 8007568:	689b      	ldr	r3, [r3, #8]
 800756a:	f003 0301 	and.w	r3, r3, #1
 800756e:	2b01      	cmp	r3, #1
 8007570:	d113      	bne.n	800759a <HAL_SPI_Receive+0x1b4>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007572:	68fb      	ldr	r3, [r7, #12]
 8007574:	681b      	ldr	r3, [r3, #0]
 8007576:	68da      	ldr	r2, [r3, #12]
 8007578:	68fb      	ldr	r3, [r7, #12]
 800757a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800757c:	b292      	uxth	r2, r2
 800757e:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007580:	68fb      	ldr	r3, [r7, #12]
 8007582:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007584:	1c9a      	adds	r2, r3, #2
 8007586:	68fb      	ldr	r3, [r7, #12]
 8007588:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 800758a:	68fb      	ldr	r3, [r7, #12]
 800758c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800758e:	b29b      	uxth	r3, r3
 8007590:	3b01      	subs	r3, #1
 8007592:	b29a      	uxth	r2, r3
 8007594:	68fb      	ldr	r3, [r7, #12]
 8007596:	87da      	strh	r2, [r3, #62]	; 0x3e
 8007598:	e011      	b.n	80075be <HAL_SPI_Receive+0x1d8>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800759a:	f7fc fa7d 	bl	8003a98 <HAL_GetTick>
 800759e:	4602      	mov	r2, r0
 80075a0:	693b      	ldr	r3, [r7, #16]
 80075a2:	1ad3      	subs	r3, r2, r3
 80075a4:	683a      	ldr	r2, [r7, #0]
 80075a6:	429a      	cmp	r2, r3
 80075a8:	d803      	bhi.n	80075b2 <HAL_SPI_Receive+0x1cc>
 80075aa:	683b      	ldr	r3, [r7, #0]
 80075ac:	f1b3 3fff 	cmp.w	r3, #4294967295
 80075b0:	d102      	bne.n	80075b8 <HAL_SPI_Receive+0x1d2>
 80075b2:	683b      	ldr	r3, [r7, #0]
 80075b4:	2b00      	cmp	r3, #0
 80075b6:	d102      	bne.n	80075be <HAL_SPI_Receive+0x1d8>
        {
          errorcode = HAL_TIMEOUT;
 80075b8:	2303      	movs	r3, #3
 80075ba:	75fb      	strb	r3, [r7, #23]
          goto error;
 80075bc:	e017      	b.n	80075ee <HAL_SPI_Receive+0x208>
    while (hspi->RxXferCount > 0U)
 80075be:	68fb      	ldr	r3, [r7, #12]
 80075c0:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80075c2:	b29b      	uxth	r3, r3
 80075c4:	2b00      	cmp	r3, #0
 80075c6:	d1cd      	bne.n	8007564 <HAL_SPI_Receive+0x17e>
    UNUSED(tmpreg);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80075c8:	693a      	ldr	r2, [r7, #16]
 80075ca:	6839      	ldr	r1, [r7, #0]
 80075cc:	68f8      	ldr	r0, [r7, #12]
 80075ce:	f000 fc8f 	bl	8007ef0 <SPI_EndRxTransaction>
 80075d2:	4603      	mov	r3, r0
 80075d4:	2b00      	cmp	r3, #0
 80075d6:	d002      	beq.n	80075de <HAL_SPI_Receive+0x1f8>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80075d8:	68fb      	ldr	r3, [r7, #12]
 80075da:	2220      	movs	r2, #32
 80075dc:	655a      	str	r2, [r3, #84]	; 0x54
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
    __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
  }
#endif /* USE_SPI_CRC */

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80075de:	68fb      	ldr	r3, [r7, #12]
 80075e0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80075e2:	2b00      	cmp	r3, #0
 80075e4:	d002      	beq.n	80075ec <HAL_SPI_Receive+0x206>
  {
    errorcode = HAL_ERROR;
 80075e6:	2301      	movs	r3, #1
 80075e8:	75fb      	strb	r3, [r7, #23]
 80075ea:	e000      	b.n	80075ee <HAL_SPI_Receive+0x208>
  }

error :
 80075ec:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 80075ee:	68fb      	ldr	r3, [r7, #12]
 80075f0:	2201      	movs	r2, #1
 80075f2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80075f6:	68fb      	ldr	r3, [r7, #12]
 80075f8:	2200      	movs	r2, #0
 80075fa:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 80075fe:	7dfb      	ldrb	r3, [r7, #23]
}
 8007600:	4618      	mov	r0, r3
 8007602:	3718      	adds	r7, #24
 8007604:	46bd      	mov	sp, r7
 8007606:	bd80      	pop	{r7, pc}

08007608 <HAL_SPI_TransmitReceive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxData, uint16_t Size,
                                          uint32_t Timeout)
{
 8007608:	b580      	push	{r7, lr}
 800760a:	b08c      	sub	sp, #48	; 0x30
 800760c:	af00      	add	r7, sp, #0
 800760e:	60f8      	str	r0, [r7, #12]
 8007610:	60b9      	str	r1, [r7, #8]
 8007612:	607a      	str	r2, [r7, #4]
 8007614:	807b      	strh	r3, [r7, #2]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */

  /* Variable used to alternate Rx and Tx during transfer */
  uint32_t             txallowed = 1U;
 8007616:	2301      	movs	r3, #1
 8007618:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800761a:	2300      	movs	r3, #0
 800761c:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8007620:	68fb      	ldr	r3, [r7, #12]
 8007622:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8007626:	2b01      	cmp	r3, #1
 8007628:	d101      	bne.n	800762e <HAL_SPI_TransmitReceive+0x26>
 800762a:	2302      	movs	r3, #2
 800762c:	e18a      	b.n	8007944 <HAL_SPI_TransmitReceive+0x33c>
 800762e:	68fb      	ldr	r3, [r7, #12]
 8007630:	2201      	movs	r2, #1
 8007632:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8007636:	f7fc fa2f 	bl	8003a98 <HAL_GetTick>
 800763a:	6278      	str	r0, [r7, #36]	; 0x24

  /* Init temporary variables */
  tmp_state           = hspi->State;
 800763c:	68fb      	ldr	r3, [r7, #12]
 800763e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8007642:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
  tmp_mode            = hspi->Init.Mode;
 8007646:	68fb      	ldr	r3, [r7, #12]
 8007648:	685b      	ldr	r3, [r3, #4]
 800764a:	61fb      	str	r3, [r7, #28]
  initial_TxXferCount = Size;
 800764c:	887b      	ldrh	r3, [r7, #2]
 800764e:	837b      	strh	r3, [r7, #26]

  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007650:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8007654:	2b01      	cmp	r3, #1
 8007656:	d00f      	beq.n	8007678 <HAL_SPI_TransmitReceive+0x70>
 8007658:	69fb      	ldr	r3, [r7, #28]
 800765a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800765e:	d107      	bne.n	8007670 <HAL_SPI_TransmitReceive+0x68>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8007660:	68fb      	ldr	r3, [r7, #12]
 8007662:	689b      	ldr	r3, [r3, #8]
 8007664:	2b00      	cmp	r3, #0
 8007666:	d103      	bne.n	8007670 <HAL_SPI_TransmitReceive+0x68>
 8007668:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800766c:	2b04      	cmp	r3, #4
 800766e:	d003      	beq.n	8007678 <HAL_SPI_TransmitReceive+0x70>
  {
    errorcode = HAL_BUSY;
 8007670:	2302      	movs	r3, #2
 8007672:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    goto error;
 8007676:	e15b      	b.n	8007930 <HAL_SPI_TransmitReceive+0x328>
  }

  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8007678:	68bb      	ldr	r3, [r7, #8]
 800767a:	2b00      	cmp	r3, #0
 800767c:	d005      	beq.n	800768a <HAL_SPI_TransmitReceive+0x82>
 800767e:	687b      	ldr	r3, [r7, #4]
 8007680:	2b00      	cmp	r3, #0
 8007682:	d002      	beq.n	800768a <HAL_SPI_TransmitReceive+0x82>
 8007684:	887b      	ldrh	r3, [r7, #2]
 8007686:	2b00      	cmp	r3, #0
 8007688:	d103      	bne.n	8007692 <HAL_SPI_TransmitReceive+0x8a>
  {
    errorcode = HAL_ERROR;
 800768a:	2301      	movs	r3, #1
 800768c:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    goto error;
 8007690:	e14e      	b.n	8007930 <HAL_SPI_TransmitReceive+0x328>
  }

  /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007692:	68fb      	ldr	r3, [r7, #12]
 8007694:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8007698:	b2db      	uxtb	r3, r3
 800769a:	2b04      	cmp	r3, #4
 800769c:	d003      	beq.n	80076a6 <HAL_SPI_TransmitReceive+0x9e>
  {
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800769e:	68fb      	ldr	r3, [r7, #12]
 80076a0:	2205      	movs	r2, #5
 80076a2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  }

  /* Set the transaction information */
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80076a6:	68fb      	ldr	r3, [r7, #12]
 80076a8:	2200      	movs	r2, #0
 80076aa:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 80076ac:	68fb      	ldr	r3, [r7, #12]
 80076ae:	687a      	ldr	r2, [r7, #4]
 80076b0:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferCount = Size;
 80076b2:	68fb      	ldr	r3, [r7, #12]
 80076b4:	887a      	ldrh	r2, [r7, #2]
 80076b6:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->RxXferSize  = Size;
 80076b8:	68fb      	ldr	r3, [r7, #12]
 80076ba:	887a      	ldrh	r2, [r7, #2]
 80076bc:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 80076be:	68fb      	ldr	r3, [r7, #12]
 80076c0:	68ba      	ldr	r2, [r7, #8]
 80076c2:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferCount = Size;
 80076c4:	68fb      	ldr	r3, [r7, #12]
 80076c6:	887a      	ldrh	r2, [r7, #2]
 80076c8:	86da      	strh	r2, [r3, #54]	; 0x36
  hspi->TxXferSize  = Size;
 80076ca:	68fb      	ldr	r3, [r7, #12]
 80076cc:	887a      	ldrh	r2, [r7, #2]
 80076ce:	869a      	strh	r2, [r3, #52]	; 0x34

  /*Init field not used in handle to zero */
  hspi->RxISR       = NULL;
 80076d0:	68fb      	ldr	r3, [r7, #12]
 80076d2:	2200      	movs	r2, #0
 80076d4:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->TxISR       = NULL;
 80076d6:	68fb      	ldr	r3, [r7, #12]
 80076d8:	2200      	movs	r2, #0
 80076da:	645a      	str	r2, [r3, #68]	; 0x44
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80076dc:	68fb      	ldr	r3, [r7, #12]
 80076de:	681b      	ldr	r3, [r3, #0]
 80076e0:	681b      	ldr	r3, [r3, #0]
 80076e2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80076e6:	2b40      	cmp	r3, #64	; 0x40
 80076e8:	d007      	beq.n	80076fa <HAL_SPI_TransmitReceive+0xf2>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80076ea:	68fb      	ldr	r3, [r7, #12]
 80076ec:	681b      	ldr	r3, [r3, #0]
 80076ee:	681a      	ldr	r2, [r3, #0]
 80076f0:	68fb      	ldr	r3, [r7, #12]
 80076f2:	681b      	ldr	r3, [r3, #0]
 80076f4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80076f8:	601a      	str	r2, [r3, #0]
  }

  /* Transmit and Receive data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80076fa:	68fb      	ldr	r3, [r7, #12]
 80076fc:	68db      	ldr	r3, [r3, #12]
 80076fe:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007702:	d178      	bne.n	80077f6 <HAL_SPI_TransmitReceive+0x1ee>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007704:	68fb      	ldr	r3, [r7, #12]
 8007706:	685b      	ldr	r3, [r3, #4]
 8007708:	2b00      	cmp	r3, #0
 800770a:	d002      	beq.n	8007712 <HAL_SPI_TransmitReceive+0x10a>
 800770c:	8b7b      	ldrh	r3, [r7, #26]
 800770e:	2b01      	cmp	r3, #1
 8007710:	d166      	bne.n	80077e0 <HAL_SPI_TransmitReceive+0x1d8>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007712:	68fb      	ldr	r3, [r7, #12]
 8007714:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007716:	881a      	ldrh	r2, [r3, #0]
 8007718:	68fb      	ldr	r3, [r7, #12]
 800771a:	681b      	ldr	r3, [r3, #0]
 800771c:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800771e:	68fb      	ldr	r3, [r7, #12]
 8007720:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007722:	1c9a      	adds	r2, r3, #2
 8007724:	68fb      	ldr	r3, [r7, #12]
 8007726:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8007728:	68fb      	ldr	r3, [r7, #12]
 800772a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800772c:	b29b      	uxth	r3, r3
 800772e:	3b01      	subs	r3, #1
 8007730:	b29a      	uxth	r2, r3
 8007732:	68fb      	ldr	r3, [r7, #12]
 8007734:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007736:	e053      	b.n	80077e0 <HAL_SPI_TransmitReceive+0x1d8>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007738:	68fb      	ldr	r3, [r7, #12]
 800773a:	681b      	ldr	r3, [r3, #0]
 800773c:	689b      	ldr	r3, [r3, #8]
 800773e:	f003 0302 	and.w	r3, r3, #2
 8007742:	2b02      	cmp	r3, #2
 8007744:	d11b      	bne.n	800777e <HAL_SPI_TransmitReceive+0x176>
 8007746:	68fb      	ldr	r3, [r7, #12]
 8007748:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800774a:	b29b      	uxth	r3, r3
 800774c:	2b00      	cmp	r3, #0
 800774e:	d016      	beq.n	800777e <HAL_SPI_TransmitReceive+0x176>
 8007750:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007752:	2b01      	cmp	r3, #1
 8007754:	d113      	bne.n	800777e <HAL_SPI_TransmitReceive+0x176>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007756:	68fb      	ldr	r3, [r7, #12]
 8007758:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800775a:	881a      	ldrh	r2, [r3, #0]
 800775c:	68fb      	ldr	r3, [r7, #12]
 800775e:	681b      	ldr	r3, [r3, #0]
 8007760:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007762:	68fb      	ldr	r3, [r7, #12]
 8007764:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007766:	1c9a      	adds	r2, r3, #2
 8007768:	68fb      	ldr	r3, [r7, #12]
 800776a:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 800776c:	68fb      	ldr	r3, [r7, #12]
 800776e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007770:	b29b      	uxth	r3, r3
 8007772:	3b01      	subs	r3, #1
 8007774:	b29a      	uxth	r2, r3
 8007776:	68fb      	ldr	r3, [r7, #12]
 8007778:	86da      	strh	r2, [r3, #54]	; 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 800777a:	2300      	movs	r3, #0
 800777c:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
#endif /* USE_SPI_CRC */
      }

      /* Check RXNE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800777e:	68fb      	ldr	r3, [r7, #12]
 8007780:	681b      	ldr	r3, [r3, #0]
 8007782:	689b      	ldr	r3, [r3, #8]
 8007784:	f003 0301 	and.w	r3, r3, #1
 8007788:	2b01      	cmp	r3, #1
 800778a:	d119      	bne.n	80077c0 <HAL_SPI_TransmitReceive+0x1b8>
 800778c:	68fb      	ldr	r3, [r7, #12]
 800778e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007790:	b29b      	uxth	r3, r3
 8007792:	2b00      	cmp	r3, #0
 8007794:	d014      	beq.n	80077c0 <HAL_SPI_TransmitReceive+0x1b8>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007796:	68fb      	ldr	r3, [r7, #12]
 8007798:	681b      	ldr	r3, [r3, #0]
 800779a:	68da      	ldr	r2, [r3, #12]
 800779c:	68fb      	ldr	r3, [r7, #12]
 800779e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80077a0:	b292      	uxth	r2, r2
 80077a2:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80077a4:	68fb      	ldr	r3, [r7, #12]
 80077a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80077a8:	1c9a      	adds	r2, r3, #2
 80077aa:	68fb      	ldr	r3, [r7, #12]
 80077ac:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 80077ae:	68fb      	ldr	r3, [r7, #12]
 80077b0:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80077b2:	b29b      	uxth	r3, r3
 80077b4:	3b01      	subs	r3, #1
 80077b6:	b29a      	uxth	r2, r3
 80077b8:	68fb      	ldr	r3, [r7, #12]
 80077ba:	87da      	strh	r2, [r3, #62]	; 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 80077bc:	2301      	movs	r3, #1
 80077be:	62fb      	str	r3, [r7, #44]	; 0x2c
      }
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 80077c0:	f7fc f96a 	bl	8003a98 <HAL_GetTick>
 80077c4:	4602      	mov	r2, r0
 80077c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80077c8:	1ad3      	subs	r3, r2, r3
 80077ca:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80077cc:	429a      	cmp	r2, r3
 80077ce:	d807      	bhi.n	80077e0 <HAL_SPI_TransmitReceive+0x1d8>
 80077d0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80077d2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80077d6:	d003      	beq.n	80077e0 <HAL_SPI_TransmitReceive+0x1d8>
      {
        errorcode = HAL_TIMEOUT;
 80077d8:	2303      	movs	r3, #3
 80077da:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
        goto error;
 80077de:	e0a7      	b.n	8007930 <HAL_SPI_TransmitReceive+0x328>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80077e0:	68fb      	ldr	r3, [r7, #12]
 80077e2:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80077e4:	b29b      	uxth	r3, r3
 80077e6:	2b00      	cmp	r3, #0
 80077e8:	d1a6      	bne.n	8007738 <HAL_SPI_TransmitReceive+0x130>
 80077ea:	68fb      	ldr	r3, [r7, #12]
 80077ec:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80077ee:	b29b      	uxth	r3, r3
 80077f0:	2b00      	cmp	r3, #0
 80077f2:	d1a1      	bne.n	8007738 <HAL_SPI_TransmitReceive+0x130>
 80077f4:	e07c      	b.n	80078f0 <HAL_SPI_TransmitReceive+0x2e8>
    }
  }
  /* Transmit and Receive data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80077f6:	68fb      	ldr	r3, [r7, #12]
 80077f8:	685b      	ldr	r3, [r3, #4]
 80077fa:	2b00      	cmp	r3, #0
 80077fc:	d002      	beq.n	8007804 <HAL_SPI_TransmitReceive+0x1fc>
 80077fe:	8b7b      	ldrh	r3, [r7, #26]
 8007800:	2b01      	cmp	r3, #1
 8007802:	d16b      	bne.n	80078dc <HAL_SPI_TransmitReceive+0x2d4>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007804:	68fb      	ldr	r3, [r7, #12]
 8007806:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8007808:	68fb      	ldr	r3, [r7, #12]
 800780a:	681b      	ldr	r3, [r3, #0]
 800780c:	330c      	adds	r3, #12
 800780e:	7812      	ldrb	r2, [r2, #0]
 8007810:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8007812:	68fb      	ldr	r3, [r7, #12]
 8007814:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007816:	1c5a      	adds	r2, r3, #1
 8007818:	68fb      	ldr	r3, [r7, #12]
 800781a:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 800781c:	68fb      	ldr	r3, [r7, #12]
 800781e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007820:	b29b      	uxth	r3, r3
 8007822:	3b01      	subs	r3, #1
 8007824:	b29a      	uxth	r2, r3
 8007826:	68fb      	ldr	r3, [r7, #12]
 8007828:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800782a:	e057      	b.n	80078dc <HAL_SPI_TransmitReceive+0x2d4>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800782c:	68fb      	ldr	r3, [r7, #12]
 800782e:	681b      	ldr	r3, [r3, #0]
 8007830:	689b      	ldr	r3, [r3, #8]
 8007832:	f003 0302 	and.w	r3, r3, #2
 8007836:	2b02      	cmp	r3, #2
 8007838:	d11c      	bne.n	8007874 <HAL_SPI_TransmitReceive+0x26c>
 800783a:	68fb      	ldr	r3, [r7, #12]
 800783c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800783e:	b29b      	uxth	r3, r3
 8007840:	2b00      	cmp	r3, #0
 8007842:	d017      	beq.n	8007874 <HAL_SPI_TransmitReceive+0x26c>
 8007844:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007846:	2b01      	cmp	r3, #1
 8007848:	d114      	bne.n	8007874 <HAL_SPI_TransmitReceive+0x26c>
      {
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800784a:	68fb      	ldr	r3, [r7, #12]
 800784c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800784e:	68fb      	ldr	r3, [r7, #12]
 8007850:	681b      	ldr	r3, [r3, #0]
 8007852:	330c      	adds	r3, #12
 8007854:	7812      	ldrb	r2, [r2, #0]
 8007856:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr++;
 8007858:	68fb      	ldr	r3, [r7, #12]
 800785a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800785c:	1c5a      	adds	r2, r3, #1
 800785e:	68fb      	ldr	r3, [r7, #12]
 8007860:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8007862:	68fb      	ldr	r3, [r7, #12]
 8007864:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007866:	b29b      	uxth	r3, r3
 8007868:	3b01      	subs	r3, #1
 800786a:	b29a      	uxth	r2, r3
 800786c:	68fb      	ldr	r3, [r7, #12]
 800786e:	86da      	strh	r2, [r3, #54]	; 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8007870:	2300      	movs	r3, #0
 8007872:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
#endif /* USE_SPI_CRC */
      }

      /* Wait until RXNE flag is reset */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007874:	68fb      	ldr	r3, [r7, #12]
 8007876:	681b      	ldr	r3, [r3, #0]
 8007878:	689b      	ldr	r3, [r3, #8]
 800787a:	f003 0301 	and.w	r3, r3, #1
 800787e:	2b01      	cmp	r3, #1
 8007880:	d119      	bne.n	80078b6 <HAL_SPI_TransmitReceive+0x2ae>
 8007882:	68fb      	ldr	r3, [r7, #12]
 8007884:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007886:	b29b      	uxth	r3, r3
 8007888:	2b00      	cmp	r3, #0
 800788a:	d014      	beq.n	80078b6 <HAL_SPI_TransmitReceive+0x2ae>
      {
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800788c:	68fb      	ldr	r3, [r7, #12]
 800788e:	681b      	ldr	r3, [r3, #0]
 8007890:	68da      	ldr	r2, [r3, #12]
 8007892:	68fb      	ldr	r3, [r7, #12]
 8007894:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007896:	b2d2      	uxtb	r2, r2
 8007898:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800789a:	68fb      	ldr	r3, [r7, #12]
 800789c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800789e:	1c5a      	adds	r2, r3, #1
 80078a0:	68fb      	ldr	r3, [r7, #12]
 80078a2:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 80078a4:	68fb      	ldr	r3, [r7, #12]
 80078a6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80078a8:	b29b      	uxth	r3, r3
 80078aa:	3b01      	subs	r3, #1
 80078ac:	b29a      	uxth	r2, r3
 80078ae:	68fb      	ldr	r3, [r7, #12]
 80078b0:	87da      	strh	r2, [r3, #62]	; 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 80078b2:	2301      	movs	r3, #1
 80078b4:	62fb      	str	r3, [r7, #44]	; 0x2c
      }
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 80078b6:	f7fc f8ef 	bl	8003a98 <HAL_GetTick>
 80078ba:	4602      	mov	r2, r0
 80078bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80078be:	1ad3      	subs	r3, r2, r3
 80078c0:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80078c2:	429a      	cmp	r2, r3
 80078c4:	d803      	bhi.n	80078ce <HAL_SPI_TransmitReceive+0x2c6>
 80078c6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80078c8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80078cc:	d102      	bne.n	80078d4 <HAL_SPI_TransmitReceive+0x2cc>
 80078ce:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80078d0:	2b00      	cmp	r3, #0
 80078d2:	d103      	bne.n	80078dc <HAL_SPI_TransmitReceive+0x2d4>
      {
        errorcode = HAL_TIMEOUT;
 80078d4:	2303      	movs	r3, #3
 80078d6:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
        goto error;
 80078da:	e029      	b.n	8007930 <HAL_SPI_TransmitReceive+0x328>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80078dc:	68fb      	ldr	r3, [r7, #12]
 80078de:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80078e0:	b29b      	uxth	r3, r3
 80078e2:	2b00      	cmp	r3, #0
 80078e4:	d1a2      	bne.n	800782c <HAL_SPI_TransmitReceive+0x224>
 80078e6:	68fb      	ldr	r3, [r7, #12]
 80078e8:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80078ea:	b29b      	uxth	r3, r3
 80078ec:	2b00      	cmp	r3, #0
 80078ee:	d19d      	bne.n	800782c <HAL_SPI_TransmitReceive+0x224>
    errorcode = HAL_ERROR;
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80078f0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80078f2:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 80078f4:	68f8      	ldr	r0, [r7, #12]
 80078f6:	f000 fb61 	bl	8007fbc <SPI_EndRxTxTransaction>
 80078fa:	4603      	mov	r3, r0
 80078fc:	2b00      	cmp	r3, #0
 80078fe:	d006      	beq.n	800790e <HAL_SPI_TransmitReceive+0x306>
  {
    errorcode = HAL_ERROR;
 8007900:	2301      	movs	r3, #1
 8007902:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007906:	68fb      	ldr	r3, [r7, #12]
 8007908:	2220      	movs	r2, #32
 800790a:	655a      	str	r2, [r3, #84]	; 0x54
    goto error;
 800790c:	e010      	b.n	8007930 <HAL_SPI_TransmitReceive+0x328>
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800790e:	68fb      	ldr	r3, [r7, #12]
 8007910:	689b      	ldr	r3, [r3, #8]
 8007912:	2b00      	cmp	r3, #0
 8007914:	d10b      	bne.n	800792e <HAL_SPI_TransmitReceive+0x326>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007916:	2300      	movs	r3, #0
 8007918:	617b      	str	r3, [r7, #20]
 800791a:	68fb      	ldr	r3, [r7, #12]
 800791c:	681b      	ldr	r3, [r3, #0]
 800791e:	68db      	ldr	r3, [r3, #12]
 8007920:	617b      	str	r3, [r7, #20]
 8007922:	68fb      	ldr	r3, [r7, #12]
 8007924:	681b      	ldr	r3, [r3, #0]
 8007926:	689b      	ldr	r3, [r3, #8]
 8007928:	617b      	str	r3, [r7, #20]
 800792a:	697b      	ldr	r3, [r7, #20]
 800792c:	e000      	b.n	8007930 <HAL_SPI_TransmitReceive+0x328>
  }

error :
 800792e:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 8007930:	68fb      	ldr	r3, [r7, #12]
 8007932:	2201      	movs	r2, #1
 8007934:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007938:	68fb      	ldr	r3, [r7, #12]
 800793a:	2200      	movs	r2, #0
 800793c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 8007940:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
}
 8007944:	4618      	mov	r0, r3
 8007946:	3730      	adds	r7, #48	; 0x30
 8007948:	46bd      	mov	sp, r7
 800794a:	bd80      	pop	{r7, pc}

0800794c <HAL_SPI_Transmit_DMA>:
  * @param  pData pointer to data buffer
  * @param  Size amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
{
 800794c:	b580      	push	{r7, lr}
 800794e:	b086      	sub	sp, #24
 8007950:	af00      	add	r7, sp, #0
 8007952:	60f8      	str	r0, [r7, #12]
 8007954:	60b9      	str	r1, [r7, #8]
 8007956:	4613      	mov	r3, r2
 8007958:	80fb      	strh	r3, [r7, #6]
  HAL_StatusTypeDef errorcode = HAL_OK;
 800795a:	2300      	movs	r3, #0
 800795c:	75fb      	strb	r3, [r7, #23]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 800795e:	68fb      	ldr	r3, [r7, #12]
 8007960:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8007964:	2b01      	cmp	r3, #1
 8007966:	d101      	bne.n	800796c <HAL_SPI_Transmit_DMA+0x20>
 8007968:	2302      	movs	r3, #2
 800796a:	e09b      	b.n	8007aa4 <HAL_SPI_Transmit_DMA+0x158>
 800796c:	68fb      	ldr	r3, [r7, #12]
 800796e:	2201      	movs	r2, #1
 8007970:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  if (hspi->State != HAL_SPI_STATE_READY)
 8007974:	68fb      	ldr	r3, [r7, #12]
 8007976:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800797a:	b2db      	uxtb	r3, r3
 800797c:	2b01      	cmp	r3, #1
 800797e:	d002      	beq.n	8007986 <HAL_SPI_Transmit_DMA+0x3a>
  {
    errorcode = HAL_BUSY;
 8007980:	2302      	movs	r3, #2
 8007982:	75fb      	strb	r3, [r7, #23]
    goto error;
 8007984:	e089      	b.n	8007a9a <HAL_SPI_Transmit_DMA+0x14e>
  }

  if ((pData == NULL) || (Size == 0U))
 8007986:	68bb      	ldr	r3, [r7, #8]
 8007988:	2b00      	cmp	r3, #0
 800798a:	d002      	beq.n	8007992 <HAL_SPI_Transmit_DMA+0x46>
 800798c:	88fb      	ldrh	r3, [r7, #6]
 800798e:	2b00      	cmp	r3, #0
 8007990:	d102      	bne.n	8007998 <HAL_SPI_Transmit_DMA+0x4c>
  {
    errorcode = HAL_ERROR;
 8007992:	2301      	movs	r3, #1
 8007994:	75fb      	strb	r3, [r7, #23]
    goto error;
 8007996:	e080      	b.n	8007a9a <HAL_SPI_Transmit_DMA+0x14e>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8007998:	68fb      	ldr	r3, [r7, #12]
 800799a:	2203      	movs	r2, #3
 800799c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80079a0:	68fb      	ldr	r3, [r7, #12]
 80079a2:	2200      	movs	r2, #0
 80079a4:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 80079a6:	68fb      	ldr	r3, [r7, #12]
 80079a8:	68ba      	ldr	r2, [r7, #8]
 80079aa:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 80079ac:	68fb      	ldr	r3, [r7, #12]
 80079ae:	88fa      	ldrh	r2, [r7, #6]
 80079b0:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 80079b2:	68fb      	ldr	r3, [r7, #12]
 80079b4:	88fa      	ldrh	r2, [r7, #6]
 80079b6:	86da      	strh	r2, [r3, #54]	; 0x36

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80079b8:	68fb      	ldr	r3, [r7, #12]
 80079ba:	2200      	movs	r2, #0
 80079bc:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->TxISR       = NULL;
 80079be:	68fb      	ldr	r3, [r7, #12]
 80079c0:	2200      	movs	r2, #0
 80079c2:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 80079c4:	68fb      	ldr	r3, [r7, #12]
 80079c6:	2200      	movs	r2, #0
 80079c8:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->RxXferSize  = 0U;
 80079ca:	68fb      	ldr	r3, [r7, #12]
 80079cc:	2200      	movs	r2, #0
 80079ce:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 80079d0:	68fb      	ldr	r3, [r7, #12]
 80079d2:	2200      	movs	r2, #0
 80079d4:	87da      	strh	r2, [r3, #62]	; 0x3e

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80079d6:	68fb      	ldr	r3, [r7, #12]
 80079d8:	689b      	ldr	r3, [r3, #8]
 80079da:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80079de:	d10f      	bne.n	8007a00 <HAL_SPI_Transmit_DMA+0xb4>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 80079e0:	68fb      	ldr	r3, [r7, #12]
 80079e2:	681b      	ldr	r3, [r3, #0]
 80079e4:	681a      	ldr	r2, [r3, #0]
 80079e6:	68fb      	ldr	r3, [r7, #12]
 80079e8:	681b      	ldr	r3, [r3, #0]
 80079ea:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80079ee:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 80079f0:	68fb      	ldr	r3, [r7, #12]
 80079f2:	681b      	ldr	r3, [r3, #0]
 80079f4:	681a      	ldr	r2, [r3, #0]
 80079f6:	68fb      	ldr	r3, [r7, #12]
 80079f8:	681b      	ldr	r3, [r3, #0]
 80079fa:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80079fe:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 8007a00:	68fb      	ldr	r3, [r7, #12]
 8007a02:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007a04:	4a29      	ldr	r2, [pc, #164]	; (8007aac <HAL_SPI_Transmit_DMA+0x160>)
 8007a06:	641a      	str	r2, [r3, #64]	; 0x40

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 8007a08:	68fb      	ldr	r3, [r7, #12]
 8007a0a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007a0c:	4a28      	ldr	r2, [pc, #160]	; (8007ab0 <HAL_SPI_Transmit_DMA+0x164>)
 8007a0e:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 8007a10:	68fb      	ldr	r3, [r7, #12]
 8007a12:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007a14:	4a27      	ldr	r2, [pc, #156]	; (8007ab4 <HAL_SPI_Transmit_DMA+0x168>)
 8007a16:	64da      	str	r2, [r3, #76]	; 0x4c

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 8007a18:	68fb      	ldr	r3, [r7, #12]
 8007a1a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007a1c:	2200      	movs	r2, #0
 8007a1e:	651a      	str	r2, [r3, #80]	; 0x50

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 8007a20:	68fb      	ldr	r3, [r7, #12]
 8007a22:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8007a24:	68fb      	ldr	r3, [r7, #12]
 8007a26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007a28:	4619      	mov	r1, r3
 8007a2a:	68fb      	ldr	r3, [r7, #12]
 8007a2c:	681b      	ldr	r3, [r3, #0]
 8007a2e:	330c      	adds	r3, #12
 8007a30:	461a      	mov	r2, r3
                                 hspi->TxXferCount))
 8007a32:	68fb      	ldr	r3, [r7, #12]
 8007a34:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007a36:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 8007a38:	f7fc fdcc 	bl	80045d4 <HAL_DMA_Start_IT>
 8007a3c:	4603      	mov	r3, r0
 8007a3e:	2b00      	cmp	r3, #0
 8007a40:	d00c      	beq.n	8007a5c <HAL_SPI_Transmit_DMA+0x110>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8007a42:	68fb      	ldr	r3, [r7, #12]
 8007a44:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007a46:	f043 0210 	orr.w	r2, r3, #16
 8007a4a:	68fb      	ldr	r3, [r7, #12]
 8007a4c:	655a      	str	r2, [r3, #84]	; 0x54
    errorcode = HAL_ERROR;
 8007a4e:	2301      	movs	r3, #1
 8007a50:	75fb      	strb	r3, [r7, #23]

    hspi->State = HAL_SPI_STATE_READY;
 8007a52:	68fb      	ldr	r3, [r7, #12]
 8007a54:	2201      	movs	r2, #1
 8007a56:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
    goto error;
 8007a5a:	e01e      	b.n	8007a9a <HAL_SPI_Transmit_DMA+0x14e>
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007a5c:	68fb      	ldr	r3, [r7, #12]
 8007a5e:	681b      	ldr	r3, [r3, #0]
 8007a60:	681b      	ldr	r3, [r3, #0]
 8007a62:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007a66:	2b40      	cmp	r3, #64	; 0x40
 8007a68:	d007      	beq.n	8007a7a <HAL_SPI_Transmit_DMA+0x12e>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8007a6a:	68fb      	ldr	r3, [r7, #12]
 8007a6c:	681b      	ldr	r3, [r3, #0]
 8007a6e:	681a      	ldr	r2, [r3, #0]
 8007a70:	68fb      	ldr	r3, [r7, #12]
 8007a72:	681b      	ldr	r3, [r3, #0]
 8007a74:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8007a78:	601a      	str	r2, [r3, #0]
  }

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 8007a7a:	68fb      	ldr	r3, [r7, #12]
 8007a7c:	681b      	ldr	r3, [r3, #0]
 8007a7e:	685a      	ldr	r2, [r3, #4]
 8007a80:	68fb      	ldr	r3, [r7, #12]
 8007a82:	681b      	ldr	r3, [r3, #0]
 8007a84:	f042 0220 	orr.w	r2, r2, #32
 8007a88:	605a      	str	r2, [r3, #4]

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 8007a8a:	68fb      	ldr	r3, [r7, #12]
 8007a8c:	681b      	ldr	r3, [r3, #0]
 8007a8e:	685a      	ldr	r2, [r3, #4]
 8007a90:	68fb      	ldr	r3, [r7, #12]
 8007a92:	681b      	ldr	r3, [r3, #0]
 8007a94:	f042 0202 	orr.w	r2, r2, #2
 8007a98:	605a      	str	r2, [r3, #4]

error :
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8007a9a:	68fb      	ldr	r3, [r7, #12]
 8007a9c:	2200      	movs	r2, #0
 8007a9e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 8007aa2:	7dfb      	ldrb	r3, [r7, #23]
}
 8007aa4:	4618      	mov	r0, r3
 8007aa6:	3718      	adds	r7, #24
 8007aa8:	46bd      	mov	sp, r7
 8007aaa:	bd80      	pop	{r7, pc}
 8007aac:	08007d5d 	.word	0x08007d5d
 8007ab0:	08007cb5 	.word	0x08007cb5
 8007ab4:	08007d79 	.word	0x08007d79

08007ab8 <HAL_SPI_IRQHandler>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 8007ab8:	b580      	push	{r7, lr}
 8007aba:	b088      	sub	sp, #32
 8007abc:	af00      	add	r7, sp, #0
 8007abe:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->CR2;
 8007ac0:	687b      	ldr	r3, [r7, #4]
 8007ac2:	681b      	ldr	r3, [r3, #0]
 8007ac4:	685b      	ldr	r3, [r3, #4]
 8007ac6:	61fb      	str	r3, [r7, #28]
  uint32_t itflag   = hspi->Instance->SR;
 8007ac8:	687b      	ldr	r3, [r7, #4]
 8007aca:	681b      	ldr	r3, [r3, #0]
 8007acc:	689b      	ldr	r3, [r3, #8]
 8007ace:	61bb      	str	r3, [r7, #24]

  /* SPI in mode Receiver ----------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8007ad0:	69bb      	ldr	r3, [r7, #24]
 8007ad2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007ad6:	2b00      	cmp	r3, #0
 8007ad8:	d10e      	bne.n	8007af8 <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8007ada:	69bb      	ldr	r3, [r7, #24]
 8007adc:	f003 0301 	and.w	r3, r3, #1
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8007ae0:	2b00      	cmp	r3, #0
 8007ae2:	d009      	beq.n	8007af8 <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8007ae4:	69fb      	ldr	r3, [r7, #28]
 8007ae6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007aea:	2b00      	cmp	r3, #0
 8007aec:	d004      	beq.n	8007af8 <HAL_SPI_IRQHandler+0x40>
  {
    hspi->RxISR(hspi);
 8007aee:	687b      	ldr	r3, [r7, #4]
 8007af0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007af2:	6878      	ldr	r0, [r7, #4]
 8007af4:	4798      	blx	r3
    return;
 8007af6:	e0ce      	b.n	8007c96 <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE) != RESET))
 8007af8:	69bb      	ldr	r3, [r7, #24]
 8007afa:	f003 0302 	and.w	r3, r3, #2
 8007afe:	2b00      	cmp	r3, #0
 8007b00:	d009      	beq.n	8007b16 <HAL_SPI_IRQHandler+0x5e>
 8007b02:	69fb      	ldr	r3, [r7, #28]
 8007b04:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007b08:	2b00      	cmp	r3, #0
 8007b0a:	d004      	beq.n	8007b16 <HAL_SPI_IRQHandler+0x5e>
  {
    hspi->TxISR(hspi);
 8007b0c:	687b      	ldr	r3, [r7, #4]
 8007b0e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007b10:	6878      	ldr	r0, [r7, #4]
 8007b12:	4798      	blx	r3
    return;
 8007b14:	e0bf      	b.n	8007c96 <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8007b16:	69bb      	ldr	r3, [r7, #24]
 8007b18:	f003 0320 	and.w	r3, r3, #32
 8007b1c:	2b00      	cmp	r3, #0
 8007b1e:	d10a      	bne.n	8007b36 <HAL_SPI_IRQHandler+0x7e>
 8007b20:	69bb      	ldr	r3, [r7, #24]
 8007b22:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007b26:	2b00      	cmp	r3, #0
 8007b28:	d105      	bne.n	8007b36 <HAL_SPI_IRQHandler+0x7e>
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 8007b2a:	69bb      	ldr	r3, [r7, #24]
 8007b2c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007b30:	2b00      	cmp	r3, #0
 8007b32:	f000 80b0 	beq.w	8007c96 <HAL_SPI_IRQHandler+0x1de>
 8007b36:	69fb      	ldr	r3, [r7, #28]
 8007b38:	f003 0320 	and.w	r3, r3, #32
 8007b3c:	2b00      	cmp	r3, #0
 8007b3e:	f000 80aa 	beq.w	8007c96 <HAL_SPI_IRQHandler+0x1de>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8007b42:	69bb      	ldr	r3, [r7, #24]
 8007b44:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007b48:	2b00      	cmp	r3, #0
 8007b4a:	d023      	beq.n	8007b94 <HAL_SPI_IRQHandler+0xdc>
    {
      if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 8007b4c:	687b      	ldr	r3, [r7, #4]
 8007b4e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8007b52:	b2db      	uxtb	r3, r3
 8007b54:	2b03      	cmp	r3, #3
 8007b56:	d011      	beq.n	8007b7c <HAL_SPI_IRQHandler+0xc4>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 8007b58:	687b      	ldr	r3, [r7, #4]
 8007b5a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007b5c:	f043 0204 	orr.w	r2, r3, #4
 8007b60:	687b      	ldr	r3, [r7, #4]
 8007b62:	655a      	str	r2, [r3, #84]	; 0x54
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007b64:	2300      	movs	r3, #0
 8007b66:	617b      	str	r3, [r7, #20]
 8007b68:	687b      	ldr	r3, [r7, #4]
 8007b6a:	681b      	ldr	r3, [r3, #0]
 8007b6c:	68db      	ldr	r3, [r3, #12]
 8007b6e:	617b      	str	r3, [r7, #20]
 8007b70:	687b      	ldr	r3, [r7, #4]
 8007b72:	681b      	ldr	r3, [r3, #0]
 8007b74:	689b      	ldr	r3, [r3, #8]
 8007b76:	617b      	str	r3, [r7, #20]
 8007b78:	697b      	ldr	r3, [r7, #20]
 8007b7a:	e00b      	b.n	8007b94 <HAL_SPI_IRQHandler+0xdc>
      }
      else
      {
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007b7c:	2300      	movs	r3, #0
 8007b7e:	613b      	str	r3, [r7, #16]
 8007b80:	687b      	ldr	r3, [r7, #4]
 8007b82:	681b      	ldr	r3, [r3, #0]
 8007b84:	68db      	ldr	r3, [r3, #12]
 8007b86:	613b      	str	r3, [r7, #16]
 8007b88:	687b      	ldr	r3, [r7, #4]
 8007b8a:	681b      	ldr	r3, [r3, #0]
 8007b8c:	689b      	ldr	r3, [r3, #8]
 8007b8e:	613b      	str	r3, [r7, #16]
 8007b90:	693b      	ldr	r3, [r7, #16]
        return;
 8007b92:	e080      	b.n	8007c96 <HAL_SPI_IRQHandler+0x1de>
      }
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 8007b94:	69bb      	ldr	r3, [r7, #24]
 8007b96:	f003 0320 	and.w	r3, r3, #32
 8007b9a:	2b00      	cmp	r3, #0
 8007b9c:	d014      	beq.n	8007bc8 <HAL_SPI_IRQHandler+0x110>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 8007b9e:	687b      	ldr	r3, [r7, #4]
 8007ba0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007ba2:	f043 0201 	orr.w	r2, r3, #1
 8007ba6:	687b      	ldr	r3, [r7, #4]
 8007ba8:	655a      	str	r2, [r3, #84]	; 0x54
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 8007baa:	2300      	movs	r3, #0
 8007bac:	60fb      	str	r3, [r7, #12]
 8007bae:	687b      	ldr	r3, [r7, #4]
 8007bb0:	681b      	ldr	r3, [r3, #0]
 8007bb2:	689b      	ldr	r3, [r3, #8]
 8007bb4:	60fb      	str	r3, [r7, #12]
 8007bb6:	687b      	ldr	r3, [r7, #4]
 8007bb8:	681b      	ldr	r3, [r3, #0]
 8007bba:	681a      	ldr	r2, [r3, #0]
 8007bbc:	687b      	ldr	r3, [r7, #4]
 8007bbe:	681b      	ldr	r3, [r3, #0]
 8007bc0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007bc4:	601a      	str	r2, [r3, #0]
 8007bc6:	68fb      	ldr	r3, [r7, #12]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
 8007bc8:	69bb      	ldr	r3, [r7, #24]
 8007bca:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007bce:	2b00      	cmp	r3, #0
 8007bd0:	d00c      	beq.n	8007bec <HAL_SPI_IRQHandler+0x134>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 8007bd2:	687b      	ldr	r3, [r7, #4]
 8007bd4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007bd6:	f043 0208 	orr.w	r2, r3, #8
 8007bda:	687b      	ldr	r3, [r7, #4]
 8007bdc:	655a      	str	r2, [r3, #84]	; 0x54
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 8007bde:	2300      	movs	r3, #0
 8007be0:	60bb      	str	r3, [r7, #8]
 8007be2:	687b      	ldr	r3, [r7, #4]
 8007be4:	681b      	ldr	r3, [r3, #0]
 8007be6:	689b      	ldr	r3, [r3, #8]
 8007be8:	60bb      	str	r3, [r7, #8]
 8007bea:	68bb      	ldr	r3, [r7, #8]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007bec:	687b      	ldr	r3, [r7, #4]
 8007bee:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007bf0:	2b00      	cmp	r3, #0
 8007bf2:	d04f      	beq.n	8007c94 <HAL_SPI_IRQHandler+0x1dc>
    {
      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 8007bf4:	687b      	ldr	r3, [r7, #4]
 8007bf6:	681b      	ldr	r3, [r3, #0]
 8007bf8:	685a      	ldr	r2, [r3, #4]
 8007bfa:	687b      	ldr	r3, [r7, #4]
 8007bfc:	681b      	ldr	r3, [r3, #0]
 8007bfe:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007c02:	605a      	str	r2, [r3, #4]

      hspi->State = HAL_SPI_STATE_READY;
 8007c04:	687b      	ldr	r3, [r7, #4]
 8007c06:	2201      	movs	r2, #1
 8007c08:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
      /* Disable the SPI DMA requests if enabled */
      if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
 8007c0c:	69fb      	ldr	r3, [r7, #28]
 8007c0e:	f003 0302 	and.w	r3, r3, #2
 8007c12:	2b00      	cmp	r3, #0
 8007c14:	d104      	bne.n	8007c20 <HAL_SPI_IRQHandler+0x168>
 8007c16:	69fb      	ldr	r3, [r7, #28]
 8007c18:	f003 0301 	and.w	r3, r3, #1
 8007c1c:	2b00      	cmp	r3, #0
 8007c1e:	d034      	beq.n	8007c8a <HAL_SPI_IRQHandler+0x1d2>
      {
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 8007c20:	687b      	ldr	r3, [r7, #4]
 8007c22:	681b      	ldr	r3, [r3, #0]
 8007c24:	685a      	ldr	r2, [r3, #4]
 8007c26:	687b      	ldr	r3, [r7, #4]
 8007c28:	681b      	ldr	r3, [r3, #0]
 8007c2a:	f022 0203 	bic.w	r2, r2, #3
 8007c2e:	605a      	str	r2, [r3, #4]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 8007c30:	687b      	ldr	r3, [r7, #4]
 8007c32:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007c34:	2b00      	cmp	r3, #0
 8007c36:	d011      	beq.n	8007c5c <HAL_SPI_IRQHandler+0x1a4>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 8007c38:	687b      	ldr	r3, [r7, #4]
 8007c3a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007c3c:	4a17      	ldr	r2, [pc, #92]	; (8007c9c <HAL_SPI_IRQHandler+0x1e4>)
 8007c3e:	651a      	str	r2, [r3, #80]	; 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 8007c40:	687b      	ldr	r3, [r7, #4]
 8007c42:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007c44:	4618      	mov	r0, r3
 8007c46:	f7fc fd1d 	bl	8004684 <HAL_DMA_Abort_IT>
 8007c4a:	4603      	mov	r3, r0
 8007c4c:	2b00      	cmp	r3, #0
 8007c4e:	d005      	beq.n	8007c5c <HAL_SPI_IRQHandler+0x1a4>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8007c50:	687b      	ldr	r3, [r7, #4]
 8007c52:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007c54:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8007c58:	687b      	ldr	r3, [r7, #4]
 8007c5a:	655a      	str	r2, [r3, #84]	; 0x54
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 8007c5c:	687b      	ldr	r3, [r7, #4]
 8007c5e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007c60:	2b00      	cmp	r3, #0
 8007c62:	d016      	beq.n	8007c92 <HAL_SPI_IRQHandler+0x1da>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 8007c64:	687b      	ldr	r3, [r7, #4]
 8007c66:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007c68:	4a0c      	ldr	r2, [pc, #48]	; (8007c9c <HAL_SPI_IRQHandler+0x1e4>)
 8007c6a:	651a      	str	r2, [r3, #80]	; 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 8007c6c:	687b      	ldr	r3, [r7, #4]
 8007c6e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007c70:	4618      	mov	r0, r3
 8007c72:	f7fc fd07 	bl	8004684 <HAL_DMA_Abort_IT>
 8007c76:	4603      	mov	r3, r0
 8007c78:	2b00      	cmp	r3, #0
 8007c7a:	d00a      	beq.n	8007c92 <HAL_SPI_IRQHandler+0x1da>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8007c7c:	687b      	ldr	r3, [r7, #4]
 8007c7e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007c80:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8007c84:	687b      	ldr	r3, [r7, #4]
 8007c86:	655a      	str	r2, [r3, #84]	; 0x54
        if (hspi->hdmatx != NULL)
 8007c88:	e003      	b.n	8007c92 <HAL_SPI_IRQHandler+0x1da>
      {
        /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
        hspi->ErrorCallback(hspi);
#else
        HAL_SPI_ErrorCallback(hspi);
 8007c8a:	6878      	ldr	r0, [r7, #4]
 8007c8c:	f7fb fad6 	bl	800323c <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      }
    }
    return;
 8007c90:	e000      	b.n	8007c94 <HAL_SPI_IRQHandler+0x1dc>
        if (hspi->hdmatx != NULL)
 8007c92:	bf00      	nop
    return;
 8007c94:	bf00      	nop
  }
}
 8007c96:	3720      	adds	r7, #32
 8007c98:	46bd      	mov	sp, r7
 8007c9a:	bd80      	pop	{r7, pc}
 8007c9c:	08007db9 	.word	0x08007db9

08007ca0 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 8007ca0:	b480      	push	{r7}
 8007ca2:	b083      	sub	sp, #12
 8007ca4:	af00      	add	r7, sp, #0
 8007ca6:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 8007ca8:	bf00      	nop
 8007caa:	370c      	adds	r7, #12
 8007cac:	46bd      	mov	sp, r7
 8007cae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cb2:	4770      	bx	lr

08007cb4 <SPI_DMATransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 8007cb4:	b580      	push	{r7, lr}
 8007cb6:	b086      	sub	sp, #24
 8007cb8:	af00      	add	r7, sp, #0
 8007cba:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8007cbc:	687b      	ldr	r3, [r7, #4]
 8007cbe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007cc0:	617b      	str	r3, [r7, #20]
  uint32_t tickstart;

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8007cc2:	f7fb fee9 	bl	8003a98 <HAL_GetTick>
 8007cc6:	6138      	str	r0, [r7, #16]

  /* DMA Normal Mode */
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 8007cc8:	687b      	ldr	r3, [r7, #4]
 8007cca:	681b      	ldr	r3, [r3, #0]
 8007ccc:	681b      	ldr	r3, [r3, #0]
 8007cce:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007cd2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007cd6:	d03b      	beq.n	8007d50 <SPI_DMATransmitCplt+0x9c>
  {
    /* Disable ERR interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 8007cd8:	697b      	ldr	r3, [r7, #20]
 8007cda:	681b      	ldr	r3, [r3, #0]
 8007cdc:	685a      	ldr	r2, [r3, #4]
 8007cde:	697b      	ldr	r3, [r7, #20]
 8007ce0:	681b      	ldr	r3, [r3, #0]
 8007ce2:	f022 0220 	bic.w	r2, r2, #32
 8007ce6:	605a      	str	r2, [r3, #4]

    /* Disable Tx DMA Request */
    CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 8007ce8:	697b      	ldr	r3, [r7, #20]
 8007cea:	681b      	ldr	r3, [r3, #0]
 8007cec:	685a      	ldr	r2, [r3, #4]
 8007cee:	697b      	ldr	r3, [r7, #20]
 8007cf0:	681b      	ldr	r3, [r3, #0]
 8007cf2:	f022 0202 	bic.w	r2, r2, #2
 8007cf6:	605a      	str	r2, [r3, #4]

    /* Check the end of the transaction */
    if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 8007cf8:	693a      	ldr	r2, [r7, #16]
 8007cfa:	2164      	movs	r1, #100	; 0x64
 8007cfc:	6978      	ldr	r0, [r7, #20]
 8007cfe:	f000 f95d 	bl	8007fbc <SPI_EndRxTxTransaction>
 8007d02:	4603      	mov	r3, r0
 8007d04:	2b00      	cmp	r3, #0
 8007d06:	d005      	beq.n	8007d14 <SPI_DMATransmitCplt+0x60>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007d08:	697b      	ldr	r3, [r7, #20]
 8007d0a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007d0c:	f043 0220 	orr.w	r2, r3, #32
 8007d10:	697b      	ldr	r3, [r7, #20]
 8007d12:	655a      	str	r2, [r3, #84]	; 0x54
    }

    /* Clear overrun flag in 2 Lines communication mode because received data is not read */
    if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007d14:	697b      	ldr	r3, [r7, #20]
 8007d16:	689b      	ldr	r3, [r3, #8]
 8007d18:	2b00      	cmp	r3, #0
 8007d1a:	d10a      	bne.n	8007d32 <SPI_DMATransmitCplt+0x7e>
    {
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007d1c:	2300      	movs	r3, #0
 8007d1e:	60fb      	str	r3, [r7, #12]
 8007d20:	697b      	ldr	r3, [r7, #20]
 8007d22:	681b      	ldr	r3, [r3, #0]
 8007d24:	68db      	ldr	r3, [r3, #12]
 8007d26:	60fb      	str	r3, [r7, #12]
 8007d28:	697b      	ldr	r3, [r7, #20]
 8007d2a:	681b      	ldr	r3, [r3, #0]
 8007d2c:	689b      	ldr	r3, [r3, #8]
 8007d2e:	60fb      	str	r3, [r7, #12]
 8007d30:	68fb      	ldr	r3, [r7, #12]
    }

    hspi->TxXferCount = 0U;
 8007d32:	697b      	ldr	r3, [r7, #20]
 8007d34:	2200      	movs	r2, #0
 8007d36:	86da      	strh	r2, [r3, #54]	; 0x36
    hspi->State = HAL_SPI_STATE_READY;
 8007d38:	697b      	ldr	r3, [r7, #20]
 8007d3a:	2201      	movs	r2, #1
 8007d3c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007d40:	697b      	ldr	r3, [r7, #20]
 8007d42:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007d44:	2b00      	cmp	r3, #0
 8007d46:	d003      	beq.n	8007d50 <SPI_DMATransmitCplt+0x9c>
    {
      /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 8007d48:	6978      	ldr	r0, [r7, #20]
 8007d4a:	f7fb fa77 	bl	800323c <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 8007d4e:	e002      	b.n	8007d56 <SPI_DMATransmitCplt+0xa2>
  }
  /* Call user Tx complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxCpltCallback(hspi);
#else
  HAL_SPI_TxCpltCallback(hspi);
 8007d50:	6978      	ldr	r0, [r7, #20]
 8007d52:	f7fb fa89 	bl	8003268 <HAL_SPI_TxCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8007d56:	3718      	adds	r7, #24
 8007d58:	46bd      	mov	sp, r7
 8007d5a:	bd80      	pop	{r7, pc}

08007d5c <SPI_DMAHalfTransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
{
 8007d5c:	b580      	push	{r7, lr}
 8007d5e:	b084      	sub	sp, #16
 8007d60:	af00      	add	r7, sp, #0
 8007d62:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8007d64:	687b      	ldr	r3, [r7, #4]
 8007d66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007d68:	60fb      	str	r3, [r7, #12]

  /* Call user Tx half complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 8007d6a:	68f8      	ldr	r0, [r7, #12]
 8007d6c:	f7ff ff98 	bl	8007ca0 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8007d70:	bf00      	nop
 8007d72:	3710      	adds	r7, #16
 8007d74:	46bd      	mov	sp, r7
 8007d76:	bd80      	pop	{r7, pc}

08007d78 <SPI_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 8007d78:	b580      	push	{r7, lr}
 8007d7a:	b084      	sub	sp, #16
 8007d7c:	af00      	add	r7, sp, #0
 8007d7e:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8007d80:	687b      	ldr	r3, [r7, #4]
 8007d82:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007d84:	60fb      	str	r3, [r7, #12]

  /* Stop the disable DMA transfer on SPI side */
  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 8007d86:	68fb      	ldr	r3, [r7, #12]
 8007d88:	681b      	ldr	r3, [r3, #0]
 8007d8a:	685a      	ldr	r2, [r3, #4]
 8007d8c:	68fb      	ldr	r3, [r7, #12]
 8007d8e:	681b      	ldr	r3, [r3, #0]
 8007d90:	f022 0203 	bic.w	r2, r2, #3
 8007d94:	605a      	str	r2, [r3, #4]

  SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8007d96:	68fb      	ldr	r3, [r7, #12]
 8007d98:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007d9a:	f043 0210 	orr.w	r2, r3, #16
 8007d9e:	68fb      	ldr	r3, [r7, #12]
 8007da0:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State = HAL_SPI_STATE_READY;
 8007da2:	68fb      	ldr	r3, [r7, #12]
 8007da4:	2201      	movs	r2, #1
 8007da6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8007daa:	68f8      	ldr	r0, [r7, #12]
 8007dac:	f7fb fa46 	bl	800323c <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8007db0:	bf00      	nop
 8007db2:	3710      	adds	r7, #16
 8007db4:	46bd      	mov	sp, r7
 8007db6:	bd80      	pop	{r7, pc}

08007db8 <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8007db8:	b580      	push	{r7, lr}
 8007dba:	b084      	sub	sp, #16
 8007dbc:	af00      	add	r7, sp, #0
 8007dbe:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8007dc0:	687b      	ldr	r3, [r7, #4]
 8007dc2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007dc4:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = 0U;
 8007dc6:	68fb      	ldr	r3, [r7, #12]
 8007dc8:	2200      	movs	r2, #0
 8007dca:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 8007dcc:	68fb      	ldr	r3, [r7, #12]
 8007dce:	2200      	movs	r2, #0
 8007dd0:	86da      	strh	r2, [r3, #54]	; 0x36

  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8007dd2:	68f8      	ldr	r0, [r7, #12]
 8007dd4:	f7fb fa32 	bl	800323c <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8007dd8:	bf00      	nop
 8007dda:	3710      	adds	r7, #16
 8007ddc:	46bd      	mov	sp, r7
 8007dde:	bd80      	pop	{r7, pc}

08007de0 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8007de0:	b580      	push	{r7, lr}
 8007de2:	b088      	sub	sp, #32
 8007de4:	af00      	add	r7, sp, #0
 8007de6:	60f8      	str	r0, [r7, #12]
 8007de8:	60b9      	str	r1, [r7, #8]
 8007dea:	603b      	str	r3, [r7, #0]
 8007dec:	4613      	mov	r3, r2
 8007dee:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8007df0:	f7fb fe52 	bl	8003a98 <HAL_GetTick>
 8007df4:	4602      	mov	r2, r0
 8007df6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007df8:	1a9b      	subs	r3, r3, r2
 8007dfa:	683a      	ldr	r2, [r7, #0]
 8007dfc:	4413      	add	r3, r2
 8007dfe:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8007e00:	f7fb fe4a 	bl	8003a98 <HAL_GetTick>
 8007e04:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8007e06:	4b39      	ldr	r3, [pc, #228]	; (8007eec <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8007e08:	681b      	ldr	r3, [r3, #0]
 8007e0a:	015b      	lsls	r3, r3, #5
 8007e0c:	0d1b      	lsrs	r3, r3, #20
 8007e0e:	69fa      	ldr	r2, [r7, #28]
 8007e10:	fb02 f303 	mul.w	r3, r2, r3
 8007e14:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007e16:	e054      	b.n	8007ec2 <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 8007e18:	683b      	ldr	r3, [r7, #0]
 8007e1a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007e1e:	d050      	beq.n	8007ec2 <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8007e20:	f7fb fe3a 	bl	8003a98 <HAL_GetTick>
 8007e24:	4602      	mov	r2, r0
 8007e26:	69bb      	ldr	r3, [r7, #24]
 8007e28:	1ad3      	subs	r3, r2, r3
 8007e2a:	69fa      	ldr	r2, [r7, #28]
 8007e2c:	429a      	cmp	r2, r3
 8007e2e:	d902      	bls.n	8007e36 <SPI_WaitFlagStateUntilTimeout+0x56>
 8007e30:	69fb      	ldr	r3, [r7, #28]
 8007e32:	2b00      	cmp	r3, #0
 8007e34:	d13d      	bne.n	8007eb2 <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8007e36:	68fb      	ldr	r3, [r7, #12]
 8007e38:	681b      	ldr	r3, [r3, #0]
 8007e3a:	685a      	ldr	r2, [r3, #4]
 8007e3c:	68fb      	ldr	r3, [r7, #12]
 8007e3e:	681b      	ldr	r3, [r3, #0]
 8007e40:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007e44:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007e46:	68fb      	ldr	r3, [r7, #12]
 8007e48:	685b      	ldr	r3, [r3, #4]
 8007e4a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007e4e:	d111      	bne.n	8007e74 <SPI_WaitFlagStateUntilTimeout+0x94>
 8007e50:	68fb      	ldr	r3, [r7, #12]
 8007e52:	689b      	ldr	r3, [r3, #8]
 8007e54:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007e58:	d004      	beq.n	8007e64 <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007e5a:	68fb      	ldr	r3, [r7, #12]
 8007e5c:	689b      	ldr	r3, [r3, #8]
 8007e5e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007e62:	d107      	bne.n	8007e74 <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8007e64:	68fb      	ldr	r3, [r7, #12]
 8007e66:	681b      	ldr	r3, [r3, #0]
 8007e68:	681a      	ldr	r2, [r3, #0]
 8007e6a:	68fb      	ldr	r3, [r7, #12]
 8007e6c:	681b      	ldr	r3, [r3, #0]
 8007e6e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007e72:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007e74:	68fb      	ldr	r3, [r7, #12]
 8007e76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007e78:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007e7c:	d10f      	bne.n	8007e9e <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 8007e7e:	68fb      	ldr	r3, [r7, #12]
 8007e80:	681b      	ldr	r3, [r3, #0]
 8007e82:	681a      	ldr	r2, [r3, #0]
 8007e84:	68fb      	ldr	r3, [r7, #12]
 8007e86:	681b      	ldr	r3, [r3, #0]
 8007e88:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007e8c:	601a      	str	r2, [r3, #0]
 8007e8e:	68fb      	ldr	r3, [r7, #12]
 8007e90:	681b      	ldr	r3, [r3, #0]
 8007e92:	681a      	ldr	r2, [r3, #0]
 8007e94:	68fb      	ldr	r3, [r7, #12]
 8007e96:	681b      	ldr	r3, [r3, #0]
 8007e98:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007e9c:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8007e9e:	68fb      	ldr	r3, [r7, #12]
 8007ea0:	2201      	movs	r2, #1
 8007ea2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8007ea6:	68fb      	ldr	r3, [r7, #12]
 8007ea8:	2200      	movs	r2, #0
 8007eaa:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

        return HAL_TIMEOUT;
 8007eae:	2303      	movs	r3, #3
 8007eb0:	e017      	b.n	8007ee2 <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8007eb2:	697b      	ldr	r3, [r7, #20]
 8007eb4:	2b00      	cmp	r3, #0
 8007eb6:	d101      	bne.n	8007ebc <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 8007eb8:	2300      	movs	r3, #0
 8007eba:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8007ebc:	697b      	ldr	r3, [r7, #20]
 8007ebe:	3b01      	subs	r3, #1
 8007ec0:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007ec2:	68fb      	ldr	r3, [r7, #12]
 8007ec4:	681b      	ldr	r3, [r3, #0]
 8007ec6:	689a      	ldr	r2, [r3, #8]
 8007ec8:	68bb      	ldr	r3, [r7, #8]
 8007eca:	4013      	ands	r3, r2
 8007ecc:	68ba      	ldr	r2, [r7, #8]
 8007ece:	429a      	cmp	r2, r3
 8007ed0:	bf0c      	ite	eq
 8007ed2:	2301      	moveq	r3, #1
 8007ed4:	2300      	movne	r3, #0
 8007ed6:	b2db      	uxtb	r3, r3
 8007ed8:	461a      	mov	r2, r3
 8007eda:	79fb      	ldrb	r3, [r7, #7]
 8007edc:	429a      	cmp	r2, r3
 8007ede:	d19b      	bne.n	8007e18 <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8007ee0:	2300      	movs	r3, #0
}
 8007ee2:	4618      	mov	r0, r3
 8007ee4:	3720      	adds	r7, #32
 8007ee6:	46bd      	mov	sp, r7
 8007ee8:	bd80      	pop	{r7, pc}
 8007eea:	bf00      	nop
 8007eec:	20000004 	.word	0x20000004

08007ef0 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8007ef0:	b580      	push	{r7, lr}
 8007ef2:	b086      	sub	sp, #24
 8007ef4:	af02      	add	r7, sp, #8
 8007ef6:	60f8      	str	r0, [r7, #12]
 8007ef8:	60b9      	str	r1, [r7, #8]
 8007efa:	607a      	str	r2, [r7, #4]
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007efc:	68fb      	ldr	r3, [r7, #12]
 8007efe:	685b      	ldr	r3, [r3, #4]
 8007f00:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007f04:	d111      	bne.n	8007f2a <SPI_EndRxTransaction+0x3a>
 8007f06:	68fb      	ldr	r3, [r7, #12]
 8007f08:	689b      	ldr	r3, [r3, #8]
 8007f0a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007f0e:	d004      	beq.n	8007f1a <SPI_EndRxTransaction+0x2a>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007f10:	68fb      	ldr	r3, [r7, #12]
 8007f12:	689b      	ldr	r3, [r3, #8]
 8007f14:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007f18:	d107      	bne.n	8007f2a <SPI_EndRxTransaction+0x3a>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8007f1a:	68fb      	ldr	r3, [r7, #12]
 8007f1c:	681b      	ldr	r3, [r3, #0]
 8007f1e:	681a      	ldr	r2, [r3, #0]
 8007f20:	68fb      	ldr	r3, [r7, #12]
 8007f22:	681b      	ldr	r3, [r3, #0]
 8007f24:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007f28:	601a      	str	r2, [r3, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007f2a:	68fb      	ldr	r3, [r7, #12]
 8007f2c:	685b      	ldr	r3, [r3, #4]
 8007f2e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007f32:	d12a      	bne.n	8007f8a <SPI_EndRxTransaction+0x9a>
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007f34:	68fb      	ldr	r3, [r7, #12]
 8007f36:	689b      	ldr	r3, [r3, #8]
 8007f38:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007f3c:	d012      	beq.n	8007f64 <SPI_EndRxTransaction+0x74>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007f3e:	687b      	ldr	r3, [r7, #4]
 8007f40:	9300      	str	r3, [sp, #0]
 8007f42:	68bb      	ldr	r3, [r7, #8]
 8007f44:	2200      	movs	r2, #0
 8007f46:	2180      	movs	r1, #128	; 0x80
 8007f48:	68f8      	ldr	r0, [r7, #12]
 8007f4a:	f7ff ff49 	bl	8007de0 <SPI_WaitFlagStateUntilTimeout>
 8007f4e:	4603      	mov	r3, r0
 8007f50:	2b00      	cmp	r3, #0
 8007f52:	d02d      	beq.n	8007fb0 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007f54:	68fb      	ldr	r3, [r7, #12]
 8007f56:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007f58:	f043 0220 	orr.w	r2, r3, #32
 8007f5c:	68fb      	ldr	r3, [r7, #12]
 8007f5e:	655a      	str	r2, [r3, #84]	; 0x54
        return HAL_TIMEOUT;
 8007f60:	2303      	movs	r3, #3
 8007f62:	e026      	b.n	8007fb2 <SPI_EndRxTransaction+0xc2>
      }
    }
    else
    {
      /* Wait the RXNE reset */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007f64:	687b      	ldr	r3, [r7, #4]
 8007f66:	9300      	str	r3, [sp, #0]
 8007f68:	68bb      	ldr	r3, [r7, #8]
 8007f6a:	2200      	movs	r2, #0
 8007f6c:	2101      	movs	r1, #1
 8007f6e:	68f8      	ldr	r0, [r7, #12]
 8007f70:	f7ff ff36 	bl	8007de0 <SPI_WaitFlagStateUntilTimeout>
 8007f74:	4603      	mov	r3, r0
 8007f76:	2b00      	cmp	r3, #0
 8007f78:	d01a      	beq.n	8007fb0 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007f7a:	68fb      	ldr	r3, [r7, #12]
 8007f7c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007f7e:	f043 0220 	orr.w	r2, r3, #32
 8007f82:	68fb      	ldr	r3, [r7, #12]
 8007f84:	655a      	str	r2, [r3, #84]	; 0x54
        return HAL_TIMEOUT;
 8007f86:	2303      	movs	r3, #3
 8007f88:	e013      	b.n	8007fb2 <SPI_EndRxTransaction+0xc2>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007f8a:	687b      	ldr	r3, [r7, #4]
 8007f8c:	9300      	str	r3, [sp, #0]
 8007f8e:	68bb      	ldr	r3, [r7, #8]
 8007f90:	2200      	movs	r2, #0
 8007f92:	2101      	movs	r1, #1
 8007f94:	68f8      	ldr	r0, [r7, #12]
 8007f96:	f7ff ff23 	bl	8007de0 <SPI_WaitFlagStateUntilTimeout>
 8007f9a:	4603      	mov	r3, r0
 8007f9c:	2b00      	cmp	r3, #0
 8007f9e:	d007      	beq.n	8007fb0 <SPI_EndRxTransaction+0xc0>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007fa0:	68fb      	ldr	r3, [r7, #12]
 8007fa2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007fa4:	f043 0220 	orr.w	r2, r3, #32
 8007fa8:	68fb      	ldr	r3, [r7, #12]
 8007faa:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 8007fac:	2303      	movs	r3, #3
 8007fae:	e000      	b.n	8007fb2 <SPI_EndRxTransaction+0xc2>
    }
  }
  return HAL_OK;
 8007fb0:	2300      	movs	r3, #0
}
 8007fb2:	4618      	mov	r0, r3
 8007fb4:	3710      	adds	r7, #16
 8007fb6:	46bd      	mov	sp, r7
 8007fb8:	bd80      	pop	{r7, pc}
	...

08007fbc <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8007fbc:	b580      	push	{r7, lr}
 8007fbe:	b088      	sub	sp, #32
 8007fc0:	af02      	add	r7, sp, #8
 8007fc2:	60f8      	str	r0, [r7, #12]
 8007fc4:	60b9      	str	r1, [r7, #8]
 8007fc6:	607a      	str	r2, [r7, #4]
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007fc8:	4b1b      	ldr	r3, [pc, #108]	; (8008038 <SPI_EndRxTxTransaction+0x7c>)
 8007fca:	681b      	ldr	r3, [r3, #0]
 8007fcc:	4a1b      	ldr	r2, [pc, #108]	; (800803c <SPI_EndRxTxTransaction+0x80>)
 8007fce:	fba2 2303 	umull	r2, r3, r2, r3
 8007fd2:	0d5b      	lsrs	r3, r3, #21
 8007fd4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8007fd8:	fb02 f303 	mul.w	r3, r2, r3
 8007fdc:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007fde:	68fb      	ldr	r3, [r7, #12]
 8007fe0:	685b      	ldr	r3, [r3, #4]
 8007fe2:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007fe6:	d112      	bne.n	800800e <SPI_EndRxTxTransaction+0x52>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007fe8:	687b      	ldr	r3, [r7, #4]
 8007fea:	9300      	str	r3, [sp, #0]
 8007fec:	68bb      	ldr	r3, [r7, #8]
 8007fee:	2200      	movs	r2, #0
 8007ff0:	2180      	movs	r1, #128	; 0x80
 8007ff2:	68f8      	ldr	r0, [r7, #12]
 8007ff4:	f7ff fef4 	bl	8007de0 <SPI_WaitFlagStateUntilTimeout>
 8007ff8:	4603      	mov	r3, r0
 8007ffa:	2b00      	cmp	r3, #0
 8007ffc:	d016      	beq.n	800802c <SPI_EndRxTxTransaction+0x70>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007ffe:	68fb      	ldr	r3, [r7, #12]
 8008000:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008002:	f043 0220 	orr.w	r2, r3, #32
 8008006:	68fb      	ldr	r3, [r7, #12]
 8008008:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 800800a:	2303      	movs	r3, #3
 800800c:	e00f      	b.n	800802e <SPI_EndRxTxTransaction+0x72>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 800800e:	697b      	ldr	r3, [r7, #20]
 8008010:	2b00      	cmp	r3, #0
 8008012:	d00a      	beq.n	800802a <SPI_EndRxTxTransaction+0x6e>
      {
        break;
      }
      count--;
 8008014:	697b      	ldr	r3, [r7, #20]
 8008016:	3b01      	subs	r3, #1
 8008018:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800801a:	68fb      	ldr	r3, [r7, #12]
 800801c:	681b      	ldr	r3, [r3, #0]
 800801e:	689b      	ldr	r3, [r3, #8]
 8008020:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008024:	2b80      	cmp	r3, #128	; 0x80
 8008026:	d0f2      	beq.n	800800e <SPI_EndRxTxTransaction+0x52>
 8008028:	e000      	b.n	800802c <SPI_EndRxTxTransaction+0x70>
        break;
 800802a:	bf00      	nop
  }

  return HAL_OK;
 800802c:	2300      	movs	r3, #0
}
 800802e:	4618      	mov	r0, r3
 8008030:	3718      	adds	r7, #24
 8008032:	46bd      	mov	sp, r7
 8008034:	bd80      	pop	{r7, pc}
 8008036:	bf00      	nop
 8008038:	20000004 	.word	0x20000004
 800803c:	165e9f81 	.word	0x165e9f81

08008040 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8008040:	b580      	push	{r7, lr}
 8008042:	b082      	sub	sp, #8
 8008044:	af00      	add	r7, sp, #0
 8008046:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8008048:	687b      	ldr	r3, [r7, #4]
 800804a:	2b00      	cmp	r3, #0
 800804c:	d101      	bne.n	8008052 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 800804e:	2301      	movs	r3, #1
 8008050:	e041      	b.n	80080d6 <HAL_TIM_Base_Init+0x96>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8008052:	687b      	ldr	r3, [r7, #4]
 8008054:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8008058:	b2db      	uxtb	r3, r3
 800805a:	2b00      	cmp	r3, #0
 800805c:	d106      	bne.n	800806c <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 800805e:	687b      	ldr	r3, [r7, #4]
 8008060:	2200      	movs	r2, #0
 8008062:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8008066:	6878      	ldr	r0, [r7, #4]
 8008068:	f7fa fd5c 	bl	8002b24 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800806c:	687b      	ldr	r3, [r7, #4]
 800806e:	2202      	movs	r2, #2
 8008070:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008074:	687b      	ldr	r3, [r7, #4]
 8008076:	681a      	ldr	r2, [r3, #0]
 8008078:	687b      	ldr	r3, [r7, #4]
 800807a:	3304      	adds	r3, #4
 800807c:	4619      	mov	r1, r3
 800807e:	4610      	mov	r0, r2
 8008080:	f000 fc78 	bl	8008974 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8008084:	687b      	ldr	r3, [r7, #4]
 8008086:	2201      	movs	r2, #1
 8008088:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800808c:	687b      	ldr	r3, [r7, #4]
 800808e:	2201      	movs	r2, #1
 8008090:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008094:	687b      	ldr	r3, [r7, #4]
 8008096:	2201      	movs	r2, #1
 8008098:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800809c:	687b      	ldr	r3, [r7, #4]
 800809e:	2201      	movs	r2, #1
 80080a0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80080a4:	687b      	ldr	r3, [r7, #4]
 80080a6:	2201      	movs	r2, #1
 80080a8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80080ac:	687b      	ldr	r3, [r7, #4]
 80080ae:	2201      	movs	r2, #1
 80080b0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80080b4:	687b      	ldr	r3, [r7, #4]
 80080b6:	2201      	movs	r2, #1
 80080b8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80080bc:	687b      	ldr	r3, [r7, #4]
 80080be:	2201      	movs	r2, #1
 80080c0:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80080c4:	687b      	ldr	r3, [r7, #4]
 80080c6:	2201      	movs	r2, #1
 80080c8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 80080cc:	687b      	ldr	r3, [r7, #4]
 80080ce:	2201      	movs	r2, #1
 80080d0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 80080d4:	2300      	movs	r3, #0
}
 80080d6:	4618      	mov	r0, r3
 80080d8:	3708      	adds	r7, #8
 80080da:	46bd      	mov	sp, r7
 80080dc:	bd80      	pop	{r7, pc}
	...

080080e0 <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 80080e0:	b480      	push	{r7}
 80080e2:	b085      	sub	sp, #20
 80080e4:	af00      	add	r7, sp, #0
 80080e6:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80080e8:	687b      	ldr	r3, [r7, #4]
 80080ea:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80080ee:	b2db      	uxtb	r3, r3
 80080f0:	2b01      	cmp	r3, #1
 80080f2:	d001      	beq.n	80080f8 <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 80080f4:	2301      	movs	r3, #1
 80080f6:	e044      	b.n	8008182 <HAL_TIM_Base_Start_IT+0xa2>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80080f8:	687b      	ldr	r3, [r7, #4]
 80080fa:	2202      	movs	r2, #2
 80080fc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8008100:	687b      	ldr	r3, [r7, #4]
 8008102:	681b      	ldr	r3, [r3, #0]
 8008104:	68da      	ldr	r2, [r3, #12]
 8008106:	687b      	ldr	r3, [r7, #4]
 8008108:	681b      	ldr	r3, [r3, #0]
 800810a:	f042 0201 	orr.w	r2, r2, #1
 800810e:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8008110:	687b      	ldr	r3, [r7, #4]
 8008112:	681b      	ldr	r3, [r3, #0]
 8008114:	4a1e      	ldr	r2, [pc, #120]	; (8008190 <HAL_TIM_Base_Start_IT+0xb0>)
 8008116:	4293      	cmp	r3, r2
 8008118:	d018      	beq.n	800814c <HAL_TIM_Base_Start_IT+0x6c>
 800811a:	687b      	ldr	r3, [r7, #4]
 800811c:	681b      	ldr	r3, [r3, #0]
 800811e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008122:	d013      	beq.n	800814c <HAL_TIM_Base_Start_IT+0x6c>
 8008124:	687b      	ldr	r3, [r7, #4]
 8008126:	681b      	ldr	r3, [r3, #0]
 8008128:	4a1a      	ldr	r2, [pc, #104]	; (8008194 <HAL_TIM_Base_Start_IT+0xb4>)
 800812a:	4293      	cmp	r3, r2
 800812c:	d00e      	beq.n	800814c <HAL_TIM_Base_Start_IT+0x6c>
 800812e:	687b      	ldr	r3, [r7, #4]
 8008130:	681b      	ldr	r3, [r3, #0]
 8008132:	4a19      	ldr	r2, [pc, #100]	; (8008198 <HAL_TIM_Base_Start_IT+0xb8>)
 8008134:	4293      	cmp	r3, r2
 8008136:	d009      	beq.n	800814c <HAL_TIM_Base_Start_IT+0x6c>
 8008138:	687b      	ldr	r3, [r7, #4]
 800813a:	681b      	ldr	r3, [r3, #0]
 800813c:	4a17      	ldr	r2, [pc, #92]	; (800819c <HAL_TIM_Base_Start_IT+0xbc>)
 800813e:	4293      	cmp	r3, r2
 8008140:	d004      	beq.n	800814c <HAL_TIM_Base_Start_IT+0x6c>
 8008142:	687b      	ldr	r3, [r7, #4]
 8008144:	681b      	ldr	r3, [r3, #0]
 8008146:	4a16      	ldr	r2, [pc, #88]	; (80081a0 <HAL_TIM_Base_Start_IT+0xc0>)
 8008148:	4293      	cmp	r3, r2
 800814a:	d111      	bne.n	8008170 <HAL_TIM_Base_Start_IT+0x90>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800814c:	687b      	ldr	r3, [r7, #4]
 800814e:	681b      	ldr	r3, [r3, #0]
 8008150:	689b      	ldr	r3, [r3, #8]
 8008152:	f003 0307 	and.w	r3, r3, #7
 8008156:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8008158:	68fb      	ldr	r3, [r7, #12]
 800815a:	2b06      	cmp	r3, #6
 800815c:	d010      	beq.n	8008180 <HAL_TIM_Base_Start_IT+0xa0>
    {
      __HAL_TIM_ENABLE(htim);
 800815e:	687b      	ldr	r3, [r7, #4]
 8008160:	681b      	ldr	r3, [r3, #0]
 8008162:	681a      	ldr	r2, [r3, #0]
 8008164:	687b      	ldr	r3, [r7, #4]
 8008166:	681b      	ldr	r3, [r3, #0]
 8008168:	f042 0201 	orr.w	r2, r2, #1
 800816c:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800816e:	e007      	b.n	8008180 <HAL_TIM_Base_Start_IT+0xa0>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8008170:	687b      	ldr	r3, [r7, #4]
 8008172:	681b      	ldr	r3, [r3, #0]
 8008174:	681a      	ldr	r2, [r3, #0]
 8008176:	687b      	ldr	r3, [r7, #4]
 8008178:	681b      	ldr	r3, [r3, #0]
 800817a:	f042 0201 	orr.w	r2, r2, #1
 800817e:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8008180:	2300      	movs	r3, #0
}
 8008182:	4618      	mov	r0, r3
 8008184:	3714      	adds	r7, #20
 8008186:	46bd      	mov	sp, r7
 8008188:	f85d 7b04 	ldr.w	r7, [sp], #4
 800818c:	4770      	bx	lr
 800818e:	bf00      	nop
 8008190:	40010000 	.word	0x40010000
 8008194:	40000400 	.word	0x40000400
 8008198:	40000800 	.word	0x40000800
 800819c:	40000c00 	.word	0x40000c00
 80081a0:	40014000 	.word	0x40014000

080081a4 <HAL_TIM_Base_Stop_IT>:
  * @brief  Stops the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Stop_IT(TIM_HandleTypeDef *htim)
{
 80081a4:	b480      	push	{r7}
 80081a6:	b083      	sub	sp, #12
 80081a8:	af00      	add	r7, sp, #0
 80081aa:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Disable the TIM Update interrupt */
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_UPDATE);
 80081ac:	687b      	ldr	r3, [r7, #4]
 80081ae:	681b      	ldr	r3, [r3, #0]
 80081b0:	68da      	ldr	r2, [r3, #12]
 80081b2:	687b      	ldr	r3, [r7, #4]
 80081b4:	681b      	ldr	r3, [r3, #0]
 80081b6:	f022 0201 	bic.w	r2, r2, #1
 80081ba:	60da      	str	r2, [r3, #12]

  /* Disable the Peripheral */
  __HAL_TIM_DISABLE(htim);
 80081bc:	687b      	ldr	r3, [r7, #4]
 80081be:	681b      	ldr	r3, [r3, #0]
 80081c0:	6a1a      	ldr	r2, [r3, #32]
 80081c2:	f241 1311 	movw	r3, #4369	; 0x1111
 80081c6:	4013      	ands	r3, r2
 80081c8:	2b00      	cmp	r3, #0
 80081ca:	d10f      	bne.n	80081ec <HAL_TIM_Base_Stop_IT+0x48>
 80081cc:	687b      	ldr	r3, [r7, #4]
 80081ce:	681b      	ldr	r3, [r3, #0]
 80081d0:	6a1a      	ldr	r2, [r3, #32]
 80081d2:	f240 4344 	movw	r3, #1092	; 0x444
 80081d6:	4013      	ands	r3, r2
 80081d8:	2b00      	cmp	r3, #0
 80081da:	d107      	bne.n	80081ec <HAL_TIM_Base_Stop_IT+0x48>
 80081dc:	687b      	ldr	r3, [r7, #4]
 80081de:	681b      	ldr	r3, [r3, #0]
 80081e0:	681a      	ldr	r2, [r3, #0]
 80081e2:	687b      	ldr	r3, [r7, #4]
 80081e4:	681b      	ldr	r3, [r3, #0]
 80081e6:	f022 0201 	bic.w	r2, r2, #1
 80081ea:	601a      	str	r2, [r3, #0]

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_READY;
 80081ec:	687b      	ldr	r3, [r7, #4]
 80081ee:	2201      	movs	r2, #1
 80081f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Return function status */
  return HAL_OK;
 80081f4:	2300      	movs	r3, #0
}
 80081f6:	4618      	mov	r0, r3
 80081f8:	370c      	adds	r7, #12
 80081fa:	46bd      	mov	sp, r7
 80081fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008200:	4770      	bx	lr

08008202 <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 8008202:	b580      	push	{r7, lr}
 8008204:	b082      	sub	sp, #8
 8008206:	af00      	add	r7, sp, #0
 8008208:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800820a:	687b      	ldr	r3, [r7, #4]
 800820c:	2b00      	cmp	r3, #0
 800820e:	d101      	bne.n	8008214 <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 8008210:	2301      	movs	r3, #1
 8008212:	e041      	b.n	8008298 <HAL_TIM_PWM_Init+0x96>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8008214:	687b      	ldr	r3, [r7, #4]
 8008216:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800821a:	b2db      	uxtb	r3, r3
 800821c:	2b00      	cmp	r3, #0
 800821e:	d106      	bne.n	800822e <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8008220:	687b      	ldr	r3, [r7, #4]
 8008222:	2200      	movs	r2, #0
 8008224:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 8008228:	6878      	ldr	r0, [r7, #4]
 800822a:	f7fa fc5b 	bl	8002ae4 <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800822e:	687b      	ldr	r3, [r7, #4]
 8008230:	2202      	movs	r2, #2
 8008232:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008236:	687b      	ldr	r3, [r7, #4]
 8008238:	681a      	ldr	r2, [r3, #0]
 800823a:	687b      	ldr	r3, [r7, #4]
 800823c:	3304      	adds	r3, #4
 800823e:	4619      	mov	r1, r3
 8008240:	4610      	mov	r0, r2
 8008242:	f000 fb97 	bl	8008974 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8008246:	687b      	ldr	r3, [r7, #4]
 8008248:	2201      	movs	r2, #1
 800824a:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800824e:	687b      	ldr	r3, [r7, #4]
 8008250:	2201      	movs	r2, #1
 8008252:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008256:	687b      	ldr	r3, [r7, #4]
 8008258:	2201      	movs	r2, #1
 800825a:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800825e:	687b      	ldr	r3, [r7, #4]
 8008260:	2201      	movs	r2, #1
 8008262:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008266:	687b      	ldr	r3, [r7, #4]
 8008268:	2201      	movs	r2, #1
 800826a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800826e:	687b      	ldr	r3, [r7, #4]
 8008270:	2201      	movs	r2, #1
 8008272:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8008276:	687b      	ldr	r3, [r7, #4]
 8008278:	2201      	movs	r2, #1
 800827a:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800827e:	687b      	ldr	r3, [r7, #4]
 8008280:	2201      	movs	r2, #1
 8008282:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8008286:	687b      	ldr	r3, [r7, #4]
 8008288:	2201      	movs	r2, #1
 800828a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 800828e:	687b      	ldr	r3, [r7, #4]
 8008290:	2201      	movs	r2, #1
 8008292:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8008296:	2300      	movs	r3, #0
}
 8008298:	4618      	mov	r0, r3
 800829a:	3708      	adds	r7, #8
 800829c:	46bd      	mov	sp, r7
 800829e:	bd80      	pop	{r7, pc}

080082a0 <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 80082a0:	b580      	push	{r7, lr}
 80082a2:	b084      	sub	sp, #16
 80082a4:	af00      	add	r7, sp, #0
 80082a6:	6078      	str	r0, [r7, #4]
 80082a8:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 80082aa:	683b      	ldr	r3, [r7, #0]
 80082ac:	2b00      	cmp	r3, #0
 80082ae:	d109      	bne.n	80082c4 <HAL_TIM_PWM_Start+0x24>
 80082b0:	687b      	ldr	r3, [r7, #4]
 80082b2:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80082b6:	b2db      	uxtb	r3, r3
 80082b8:	2b01      	cmp	r3, #1
 80082ba:	bf14      	ite	ne
 80082bc:	2301      	movne	r3, #1
 80082be:	2300      	moveq	r3, #0
 80082c0:	b2db      	uxtb	r3, r3
 80082c2:	e022      	b.n	800830a <HAL_TIM_PWM_Start+0x6a>
 80082c4:	683b      	ldr	r3, [r7, #0]
 80082c6:	2b04      	cmp	r3, #4
 80082c8:	d109      	bne.n	80082de <HAL_TIM_PWM_Start+0x3e>
 80082ca:	687b      	ldr	r3, [r7, #4]
 80082cc:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 80082d0:	b2db      	uxtb	r3, r3
 80082d2:	2b01      	cmp	r3, #1
 80082d4:	bf14      	ite	ne
 80082d6:	2301      	movne	r3, #1
 80082d8:	2300      	moveq	r3, #0
 80082da:	b2db      	uxtb	r3, r3
 80082dc:	e015      	b.n	800830a <HAL_TIM_PWM_Start+0x6a>
 80082de:	683b      	ldr	r3, [r7, #0]
 80082e0:	2b08      	cmp	r3, #8
 80082e2:	d109      	bne.n	80082f8 <HAL_TIM_PWM_Start+0x58>
 80082e4:	687b      	ldr	r3, [r7, #4]
 80082e6:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80082ea:	b2db      	uxtb	r3, r3
 80082ec:	2b01      	cmp	r3, #1
 80082ee:	bf14      	ite	ne
 80082f0:	2301      	movne	r3, #1
 80082f2:	2300      	moveq	r3, #0
 80082f4:	b2db      	uxtb	r3, r3
 80082f6:	e008      	b.n	800830a <HAL_TIM_PWM_Start+0x6a>
 80082f8:	687b      	ldr	r3, [r7, #4]
 80082fa:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80082fe:	b2db      	uxtb	r3, r3
 8008300:	2b01      	cmp	r3, #1
 8008302:	bf14      	ite	ne
 8008304:	2301      	movne	r3, #1
 8008306:	2300      	moveq	r3, #0
 8008308:	b2db      	uxtb	r3, r3
 800830a:	2b00      	cmp	r3, #0
 800830c:	d001      	beq.n	8008312 <HAL_TIM_PWM_Start+0x72>
  {
    return HAL_ERROR;
 800830e:	2301      	movs	r3, #1
 8008310:	e068      	b.n	80083e4 <HAL_TIM_PWM_Start+0x144>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 8008312:	683b      	ldr	r3, [r7, #0]
 8008314:	2b00      	cmp	r3, #0
 8008316:	d104      	bne.n	8008322 <HAL_TIM_PWM_Start+0x82>
 8008318:	687b      	ldr	r3, [r7, #4]
 800831a:	2202      	movs	r2, #2
 800831c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008320:	e013      	b.n	800834a <HAL_TIM_PWM_Start+0xaa>
 8008322:	683b      	ldr	r3, [r7, #0]
 8008324:	2b04      	cmp	r3, #4
 8008326:	d104      	bne.n	8008332 <HAL_TIM_PWM_Start+0x92>
 8008328:	687b      	ldr	r3, [r7, #4]
 800832a:	2202      	movs	r2, #2
 800832c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8008330:	e00b      	b.n	800834a <HAL_TIM_PWM_Start+0xaa>
 8008332:	683b      	ldr	r3, [r7, #0]
 8008334:	2b08      	cmp	r3, #8
 8008336:	d104      	bne.n	8008342 <HAL_TIM_PWM_Start+0xa2>
 8008338:	687b      	ldr	r3, [r7, #4]
 800833a:	2202      	movs	r2, #2
 800833c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008340:	e003      	b.n	800834a <HAL_TIM_PWM_Start+0xaa>
 8008342:	687b      	ldr	r3, [r7, #4]
 8008344:	2202      	movs	r2, #2
 8008346:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 800834a:	687b      	ldr	r3, [r7, #4]
 800834c:	681b      	ldr	r3, [r3, #0]
 800834e:	2201      	movs	r2, #1
 8008350:	6839      	ldr	r1, [r7, #0]
 8008352:	4618      	mov	r0, r3
 8008354:	f000 fdb4 	bl	8008ec0 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8008358:	687b      	ldr	r3, [r7, #4]
 800835a:	681b      	ldr	r3, [r3, #0]
 800835c:	4a23      	ldr	r2, [pc, #140]	; (80083ec <HAL_TIM_PWM_Start+0x14c>)
 800835e:	4293      	cmp	r3, r2
 8008360:	d107      	bne.n	8008372 <HAL_TIM_PWM_Start+0xd2>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 8008362:	687b      	ldr	r3, [r7, #4]
 8008364:	681b      	ldr	r3, [r3, #0]
 8008366:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8008368:	687b      	ldr	r3, [r7, #4]
 800836a:	681b      	ldr	r3, [r3, #0]
 800836c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8008370:	645a      	str	r2, [r3, #68]	; 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8008372:	687b      	ldr	r3, [r7, #4]
 8008374:	681b      	ldr	r3, [r3, #0]
 8008376:	4a1d      	ldr	r2, [pc, #116]	; (80083ec <HAL_TIM_PWM_Start+0x14c>)
 8008378:	4293      	cmp	r3, r2
 800837a:	d018      	beq.n	80083ae <HAL_TIM_PWM_Start+0x10e>
 800837c:	687b      	ldr	r3, [r7, #4]
 800837e:	681b      	ldr	r3, [r3, #0]
 8008380:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008384:	d013      	beq.n	80083ae <HAL_TIM_PWM_Start+0x10e>
 8008386:	687b      	ldr	r3, [r7, #4]
 8008388:	681b      	ldr	r3, [r3, #0]
 800838a:	4a19      	ldr	r2, [pc, #100]	; (80083f0 <HAL_TIM_PWM_Start+0x150>)
 800838c:	4293      	cmp	r3, r2
 800838e:	d00e      	beq.n	80083ae <HAL_TIM_PWM_Start+0x10e>
 8008390:	687b      	ldr	r3, [r7, #4]
 8008392:	681b      	ldr	r3, [r3, #0]
 8008394:	4a17      	ldr	r2, [pc, #92]	; (80083f4 <HAL_TIM_PWM_Start+0x154>)
 8008396:	4293      	cmp	r3, r2
 8008398:	d009      	beq.n	80083ae <HAL_TIM_PWM_Start+0x10e>
 800839a:	687b      	ldr	r3, [r7, #4]
 800839c:	681b      	ldr	r3, [r3, #0]
 800839e:	4a16      	ldr	r2, [pc, #88]	; (80083f8 <HAL_TIM_PWM_Start+0x158>)
 80083a0:	4293      	cmp	r3, r2
 80083a2:	d004      	beq.n	80083ae <HAL_TIM_PWM_Start+0x10e>
 80083a4:	687b      	ldr	r3, [r7, #4]
 80083a6:	681b      	ldr	r3, [r3, #0]
 80083a8:	4a14      	ldr	r2, [pc, #80]	; (80083fc <HAL_TIM_PWM_Start+0x15c>)
 80083aa:	4293      	cmp	r3, r2
 80083ac:	d111      	bne.n	80083d2 <HAL_TIM_PWM_Start+0x132>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80083ae:	687b      	ldr	r3, [r7, #4]
 80083b0:	681b      	ldr	r3, [r3, #0]
 80083b2:	689b      	ldr	r3, [r3, #8]
 80083b4:	f003 0307 	and.w	r3, r3, #7
 80083b8:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80083ba:	68fb      	ldr	r3, [r7, #12]
 80083bc:	2b06      	cmp	r3, #6
 80083be:	d010      	beq.n	80083e2 <HAL_TIM_PWM_Start+0x142>
    {
      __HAL_TIM_ENABLE(htim);
 80083c0:	687b      	ldr	r3, [r7, #4]
 80083c2:	681b      	ldr	r3, [r3, #0]
 80083c4:	681a      	ldr	r2, [r3, #0]
 80083c6:	687b      	ldr	r3, [r7, #4]
 80083c8:	681b      	ldr	r3, [r3, #0]
 80083ca:	f042 0201 	orr.w	r2, r2, #1
 80083ce:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80083d0:	e007      	b.n	80083e2 <HAL_TIM_PWM_Start+0x142>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 80083d2:	687b      	ldr	r3, [r7, #4]
 80083d4:	681b      	ldr	r3, [r3, #0]
 80083d6:	681a      	ldr	r2, [r3, #0]
 80083d8:	687b      	ldr	r3, [r7, #4]
 80083da:	681b      	ldr	r3, [r3, #0]
 80083dc:	f042 0201 	orr.w	r2, r2, #1
 80083e0:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80083e2:	2300      	movs	r3, #0
}
 80083e4:	4618      	mov	r0, r3
 80083e6:	3710      	adds	r7, #16
 80083e8:	46bd      	mov	sp, r7
 80083ea:	bd80      	pop	{r7, pc}
 80083ec:	40010000 	.word	0x40010000
 80083f0:	40000400 	.word	0x40000400
 80083f4:	40000800 	.word	0x40000800
 80083f8:	40000c00 	.word	0x40000c00
 80083fc:	40014000 	.word	0x40014000

08008400 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 8008400:	b580      	push	{r7, lr}
 8008402:	b082      	sub	sp, #8
 8008404:	af00      	add	r7, sp, #0
 8008406:	6078      	str	r0, [r7, #4]
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8008408:	687b      	ldr	r3, [r7, #4]
 800840a:	681b      	ldr	r3, [r3, #0]
 800840c:	691b      	ldr	r3, [r3, #16]
 800840e:	f003 0302 	and.w	r3, r3, #2
 8008412:	2b02      	cmp	r3, #2
 8008414:	d122      	bne.n	800845c <HAL_TIM_IRQHandler+0x5c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8008416:	687b      	ldr	r3, [r7, #4]
 8008418:	681b      	ldr	r3, [r3, #0]
 800841a:	68db      	ldr	r3, [r3, #12]
 800841c:	f003 0302 	and.w	r3, r3, #2
 8008420:	2b02      	cmp	r3, #2
 8008422:	d11b      	bne.n	800845c <HAL_TIM_IRQHandler+0x5c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8008424:	687b      	ldr	r3, [r7, #4]
 8008426:	681b      	ldr	r3, [r3, #0]
 8008428:	f06f 0202 	mvn.w	r2, #2
 800842c:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800842e:	687b      	ldr	r3, [r7, #4]
 8008430:	2201      	movs	r2, #1
 8008432:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8008434:	687b      	ldr	r3, [r7, #4]
 8008436:	681b      	ldr	r3, [r3, #0]
 8008438:	699b      	ldr	r3, [r3, #24]
 800843a:	f003 0303 	and.w	r3, r3, #3
 800843e:	2b00      	cmp	r3, #0
 8008440:	d003      	beq.n	800844a <HAL_TIM_IRQHandler+0x4a>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8008442:	6878      	ldr	r0, [r7, #4]
 8008444:	f000 fa77 	bl	8008936 <HAL_TIM_IC_CaptureCallback>
 8008448:	e005      	b.n	8008456 <HAL_TIM_IRQHandler+0x56>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800844a:	6878      	ldr	r0, [r7, #4]
 800844c:	f000 fa69 	bl	8008922 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008450:	6878      	ldr	r0, [r7, #4]
 8008452:	f000 fa7a 	bl	800894a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008456:	687b      	ldr	r3, [r7, #4]
 8008458:	2200      	movs	r2, #0
 800845a:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800845c:	687b      	ldr	r3, [r7, #4]
 800845e:	681b      	ldr	r3, [r3, #0]
 8008460:	691b      	ldr	r3, [r3, #16]
 8008462:	f003 0304 	and.w	r3, r3, #4
 8008466:	2b04      	cmp	r3, #4
 8008468:	d122      	bne.n	80084b0 <HAL_TIM_IRQHandler+0xb0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800846a:	687b      	ldr	r3, [r7, #4]
 800846c:	681b      	ldr	r3, [r3, #0]
 800846e:	68db      	ldr	r3, [r3, #12]
 8008470:	f003 0304 	and.w	r3, r3, #4
 8008474:	2b04      	cmp	r3, #4
 8008476:	d11b      	bne.n	80084b0 <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8008478:	687b      	ldr	r3, [r7, #4]
 800847a:	681b      	ldr	r3, [r3, #0]
 800847c:	f06f 0204 	mvn.w	r2, #4
 8008480:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8008482:	687b      	ldr	r3, [r7, #4]
 8008484:	2202      	movs	r2, #2
 8008486:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8008488:	687b      	ldr	r3, [r7, #4]
 800848a:	681b      	ldr	r3, [r3, #0]
 800848c:	699b      	ldr	r3, [r3, #24]
 800848e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8008492:	2b00      	cmp	r3, #0
 8008494:	d003      	beq.n	800849e <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008496:	6878      	ldr	r0, [r7, #4]
 8008498:	f000 fa4d 	bl	8008936 <HAL_TIM_IC_CaptureCallback>
 800849c:	e005      	b.n	80084aa <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800849e:	6878      	ldr	r0, [r7, #4]
 80084a0:	f000 fa3f 	bl	8008922 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80084a4:	6878      	ldr	r0, [r7, #4]
 80084a6:	f000 fa50 	bl	800894a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80084aa:	687b      	ldr	r3, [r7, #4]
 80084ac:	2200      	movs	r2, #0
 80084ae:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80084b0:	687b      	ldr	r3, [r7, #4]
 80084b2:	681b      	ldr	r3, [r3, #0]
 80084b4:	691b      	ldr	r3, [r3, #16]
 80084b6:	f003 0308 	and.w	r3, r3, #8
 80084ba:	2b08      	cmp	r3, #8
 80084bc:	d122      	bne.n	8008504 <HAL_TIM_IRQHandler+0x104>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80084be:	687b      	ldr	r3, [r7, #4]
 80084c0:	681b      	ldr	r3, [r3, #0]
 80084c2:	68db      	ldr	r3, [r3, #12]
 80084c4:	f003 0308 	and.w	r3, r3, #8
 80084c8:	2b08      	cmp	r3, #8
 80084ca:	d11b      	bne.n	8008504 <HAL_TIM_IRQHandler+0x104>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80084cc:	687b      	ldr	r3, [r7, #4]
 80084ce:	681b      	ldr	r3, [r3, #0]
 80084d0:	f06f 0208 	mvn.w	r2, #8
 80084d4:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80084d6:	687b      	ldr	r3, [r7, #4]
 80084d8:	2204      	movs	r2, #4
 80084da:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80084dc:	687b      	ldr	r3, [r7, #4]
 80084de:	681b      	ldr	r3, [r3, #0]
 80084e0:	69db      	ldr	r3, [r3, #28]
 80084e2:	f003 0303 	and.w	r3, r3, #3
 80084e6:	2b00      	cmp	r3, #0
 80084e8:	d003      	beq.n	80084f2 <HAL_TIM_IRQHandler+0xf2>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80084ea:	6878      	ldr	r0, [r7, #4]
 80084ec:	f000 fa23 	bl	8008936 <HAL_TIM_IC_CaptureCallback>
 80084f0:	e005      	b.n	80084fe <HAL_TIM_IRQHandler+0xfe>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80084f2:	6878      	ldr	r0, [r7, #4]
 80084f4:	f000 fa15 	bl	8008922 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80084f8:	6878      	ldr	r0, [r7, #4]
 80084fa:	f000 fa26 	bl	800894a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80084fe:	687b      	ldr	r3, [r7, #4]
 8008500:	2200      	movs	r2, #0
 8008502:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8008504:	687b      	ldr	r3, [r7, #4]
 8008506:	681b      	ldr	r3, [r3, #0]
 8008508:	691b      	ldr	r3, [r3, #16]
 800850a:	f003 0310 	and.w	r3, r3, #16
 800850e:	2b10      	cmp	r3, #16
 8008510:	d122      	bne.n	8008558 <HAL_TIM_IRQHandler+0x158>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8008512:	687b      	ldr	r3, [r7, #4]
 8008514:	681b      	ldr	r3, [r3, #0]
 8008516:	68db      	ldr	r3, [r3, #12]
 8008518:	f003 0310 	and.w	r3, r3, #16
 800851c:	2b10      	cmp	r3, #16
 800851e:	d11b      	bne.n	8008558 <HAL_TIM_IRQHandler+0x158>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8008520:	687b      	ldr	r3, [r7, #4]
 8008522:	681b      	ldr	r3, [r3, #0]
 8008524:	f06f 0210 	mvn.w	r2, #16
 8008528:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800852a:	687b      	ldr	r3, [r7, #4]
 800852c:	2208      	movs	r2, #8
 800852e:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008530:	687b      	ldr	r3, [r7, #4]
 8008532:	681b      	ldr	r3, [r3, #0]
 8008534:	69db      	ldr	r3, [r3, #28]
 8008536:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800853a:	2b00      	cmp	r3, #0
 800853c:	d003      	beq.n	8008546 <HAL_TIM_IRQHandler+0x146>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800853e:	6878      	ldr	r0, [r7, #4]
 8008540:	f000 f9f9 	bl	8008936 <HAL_TIM_IC_CaptureCallback>
 8008544:	e005      	b.n	8008552 <HAL_TIM_IRQHandler+0x152>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8008546:	6878      	ldr	r0, [r7, #4]
 8008548:	f000 f9eb 	bl	8008922 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800854c:	6878      	ldr	r0, [r7, #4]
 800854e:	f000 f9fc 	bl	800894a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008552:	687b      	ldr	r3, [r7, #4]
 8008554:	2200      	movs	r2, #0
 8008556:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8008558:	687b      	ldr	r3, [r7, #4]
 800855a:	681b      	ldr	r3, [r3, #0]
 800855c:	691b      	ldr	r3, [r3, #16]
 800855e:	f003 0301 	and.w	r3, r3, #1
 8008562:	2b01      	cmp	r3, #1
 8008564:	d10e      	bne.n	8008584 <HAL_TIM_IRQHandler+0x184>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8008566:	687b      	ldr	r3, [r7, #4]
 8008568:	681b      	ldr	r3, [r3, #0]
 800856a:	68db      	ldr	r3, [r3, #12]
 800856c:	f003 0301 	and.w	r3, r3, #1
 8008570:	2b01      	cmp	r3, #1
 8008572:	d107      	bne.n	8008584 <HAL_TIM_IRQHandler+0x184>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8008574:	687b      	ldr	r3, [r7, #4]
 8008576:	681b      	ldr	r3, [r3, #0]
 8008578:	f06f 0201 	mvn.w	r2, #1
 800857c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800857e:	6878      	ldr	r0, [r7, #4]
 8008580:	f7fa ff8e 	bl	80034a0 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8008584:	687b      	ldr	r3, [r7, #4]
 8008586:	681b      	ldr	r3, [r3, #0]
 8008588:	691b      	ldr	r3, [r3, #16]
 800858a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800858e:	2b80      	cmp	r3, #128	; 0x80
 8008590:	d10e      	bne.n	80085b0 <HAL_TIM_IRQHandler+0x1b0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8008592:	687b      	ldr	r3, [r7, #4]
 8008594:	681b      	ldr	r3, [r3, #0]
 8008596:	68db      	ldr	r3, [r3, #12]
 8008598:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800859c:	2b80      	cmp	r3, #128	; 0x80
 800859e:	d107      	bne.n	80085b0 <HAL_TIM_IRQHandler+0x1b0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 80085a0:	687b      	ldr	r3, [r7, #4]
 80085a2:	681b      	ldr	r3, [r3, #0]
 80085a4:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80085a8:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 80085aa:	6878      	ldr	r0, [r7, #4]
 80085ac:	f000 fd26 	bl	8008ffc <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 80085b0:	687b      	ldr	r3, [r7, #4]
 80085b2:	681b      	ldr	r3, [r3, #0]
 80085b4:	691b      	ldr	r3, [r3, #16]
 80085b6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80085ba:	2b40      	cmp	r3, #64	; 0x40
 80085bc:	d10e      	bne.n	80085dc <HAL_TIM_IRQHandler+0x1dc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 80085be:	687b      	ldr	r3, [r7, #4]
 80085c0:	681b      	ldr	r3, [r3, #0]
 80085c2:	68db      	ldr	r3, [r3, #12]
 80085c4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80085c8:	2b40      	cmp	r3, #64	; 0x40
 80085ca:	d107      	bne.n	80085dc <HAL_TIM_IRQHandler+0x1dc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80085cc:	687b      	ldr	r3, [r7, #4]
 80085ce:	681b      	ldr	r3, [r3, #0]
 80085d0:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80085d4:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 80085d6:	6878      	ldr	r0, [r7, #4]
 80085d8:	f000 f9c1 	bl	800895e <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80085dc:	687b      	ldr	r3, [r7, #4]
 80085de:	681b      	ldr	r3, [r3, #0]
 80085e0:	691b      	ldr	r3, [r3, #16]
 80085e2:	f003 0320 	and.w	r3, r3, #32
 80085e6:	2b20      	cmp	r3, #32
 80085e8:	d10e      	bne.n	8008608 <HAL_TIM_IRQHandler+0x208>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80085ea:	687b      	ldr	r3, [r7, #4]
 80085ec:	681b      	ldr	r3, [r3, #0]
 80085ee:	68db      	ldr	r3, [r3, #12]
 80085f0:	f003 0320 	and.w	r3, r3, #32
 80085f4:	2b20      	cmp	r3, #32
 80085f6:	d107      	bne.n	8008608 <HAL_TIM_IRQHandler+0x208>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80085f8:	687b      	ldr	r3, [r7, #4]
 80085fa:	681b      	ldr	r3, [r3, #0]
 80085fc:	f06f 0220 	mvn.w	r2, #32
 8008600:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8008602:	6878      	ldr	r0, [r7, #4]
 8008604:	f000 fcf0 	bl	8008fe8 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8008608:	bf00      	nop
 800860a:	3708      	adds	r7, #8
 800860c:	46bd      	mov	sp, r7
 800860e:	bd80      	pop	{r7, pc}

08008610 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 8008610:	b580      	push	{r7, lr}
 8008612:	b086      	sub	sp, #24
 8008614:	af00      	add	r7, sp, #0
 8008616:	60f8      	str	r0, [r7, #12]
 8008618:	60b9      	str	r1, [r7, #8]
 800861a:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800861c:	2300      	movs	r3, #0
 800861e:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 8008620:	68fb      	ldr	r3, [r7, #12]
 8008622:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008626:	2b01      	cmp	r3, #1
 8008628:	d101      	bne.n	800862e <HAL_TIM_PWM_ConfigChannel+0x1e>
 800862a:	2302      	movs	r3, #2
 800862c:	e0ae      	b.n	800878c <HAL_TIM_PWM_ConfigChannel+0x17c>
 800862e:	68fb      	ldr	r3, [r7, #12]
 8008630:	2201      	movs	r2, #1
 8008632:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  switch (Channel)
 8008636:	687b      	ldr	r3, [r7, #4]
 8008638:	2b0c      	cmp	r3, #12
 800863a:	f200 809f 	bhi.w	800877c <HAL_TIM_PWM_ConfigChannel+0x16c>
 800863e:	a201      	add	r2, pc, #4	; (adr r2, 8008644 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8008640:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008644:	08008679 	.word	0x08008679
 8008648:	0800877d 	.word	0x0800877d
 800864c:	0800877d 	.word	0x0800877d
 8008650:	0800877d 	.word	0x0800877d
 8008654:	080086b9 	.word	0x080086b9
 8008658:	0800877d 	.word	0x0800877d
 800865c:	0800877d 	.word	0x0800877d
 8008660:	0800877d 	.word	0x0800877d
 8008664:	080086fb 	.word	0x080086fb
 8008668:	0800877d 	.word	0x0800877d
 800866c:	0800877d 	.word	0x0800877d
 8008670:	0800877d 	.word	0x0800877d
 8008674:	0800873b 	.word	0x0800873b
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8008678:	68fb      	ldr	r3, [r7, #12]
 800867a:	681b      	ldr	r3, [r3, #0]
 800867c:	68b9      	ldr	r1, [r7, #8]
 800867e:	4618      	mov	r0, r3
 8008680:	f000 f9f8 	bl	8008a74 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8008684:	68fb      	ldr	r3, [r7, #12]
 8008686:	681b      	ldr	r3, [r3, #0]
 8008688:	699a      	ldr	r2, [r3, #24]
 800868a:	68fb      	ldr	r3, [r7, #12]
 800868c:	681b      	ldr	r3, [r3, #0]
 800868e:	f042 0208 	orr.w	r2, r2, #8
 8008692:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 8008694:	68fb      	ldr	r3, [r7, #12]
 8008696:	681b      	ldr	r3, [r3, #0]
 8008698:	699a      	ldr	r2, [r3, #24]
 800869a:	68fb      	ldr	r3, [r7, #12]
 800869c:	681b      	ldr	r3, [r3, #0]
 800869e:	f022 0204 	bic.w	r2, r2, #4
 80086a2:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 80086a4:	68fb      	ldr	r3, [r7, #12]
 80086a6:	681b      	ldr	r3, [r3, #0]
 80086a8:	6999      	ldr	r1, [r3, #24]
 80086aa:	68bb      	ldr	r3, [r7, #8]
 80086ac:	691a      	ldr	r2, [r3, #16]
 80086ae:	68fb      	ldr	r3, [r7, #12]
 80086b0:	681b      	ldr	r3, [r3, #0]
 80086b2:	430a      	orrs	r2, r1
 80086b4:	619a      	str	r2, [r3, #24]
      break;
 80086b6:	e064      	b.n	8008782 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 80086b8:	68fb      	ldr	r3, [r7, #12]
 80086ba:	681b      	ldr	r3, [r3, #0]
 80086bc:	68b9      	ldr	r1, [r7, #8]
 80086be:	4618      	mov	r0, r3
 80086c0:	f000 fa3e 	bl	8008b40 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 80086c4:	68fb      	ldr	r3, [r7, #12]
 80086c6:	681b      	ldr	r3, [r3, #0]
 80086c8:	699a      	ldr	r2, [r3, #24]
 80086ca:	68fb      	ldr	r3, [r7, #12]
 80086cc:	681b      	ldr	r3, [r3, #0]
 80086ce:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80086d2:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 80086d4:	68fb      	ldr	r3, [r7, #12]
 80086d6:	681b      	ldr	r3, [r3, #0]
 80086d8:	699a      	ldr	r2, [r3, #24]
 80086da:	68fb      	ldr	r3, [r7, #12]
 80086dc:	681b      	ldr	r3, [r3, #0]
 80086de:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80086e2:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 80086e4:	68fb      	ldr	r3, [r7, #12]
 80086e6:	681b      	ldr	r3, [r3, #0]
 80086e8:	6999      	ldr	r1, [r3, #24]
 80086ea:	68bb      	ldr	r3, [r7, #8]
 80086ec:	691b      	ldr	r3, [r3, #16]
 80086ee:	021a      	lsls	r2, r3, #8
 80086f0:	68fb      	ldr	r3, [r7, #12]
 80086f2:	681b      	ldr	r3, [r3, #0]
 80086f4:	430a      	orrs	r2, r1
 80086f6:	619a      	str	r2, [r3, #24]
      break;
 80086f8:	e043      	b.n	8008782 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 80086fa:	68fb      	ldr	r3, [r7, #12]
 80086fc:	681b      	ldr	r3, [r3, #0]
 80086fe:	68b9      	ldr	r1, [r7, #8]
 8008700:	4618      	mov	r0, r3
 8008702:	f000 fa89 	bl	8008c18 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8008706:	68fb      	ldr	r3, [r7, #12]
 8008708:	681b      	ldr	r3, [r3, #0]
 800870a:	69da      	ldr	r2, [r3, #28]
 800870c:	68fb      	ldr	r3, [r7, #12]
 800870e:	681b      	ldr	r3, [r3, #0]
 8008710:	f042 0208 	orr.w	r2, r2, #8
 8008714:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8008716:	68fb      	ldr	r3, [r7, #12]
 8008718:	681b      	ldr	r3, [r3, #0]
 800871a:	69da      	ldr	r2, [r3, #28]
 800871c:	68fb      	ldr	r3, [r7, #12]
 800871e:	681b      	ldr	r3, [r3, #0]
 8008720:	f022 0204 	bic.w	r2, r2, #4
 8008724:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8008726:	68fb      	ldr	r3, [r7, #12]
 8008728:	681b      	ldr	r3, [r3, #0]
 800872a:	69d9      	ldr	r1, [r3, #28]
 800872c:	68bb      	ldr	r3, [r7, #8]
 800872e:	691a      	ldr	r2, [r3, #16]
 8008730:	68fb      	ldr	r3, [r7, #12]
 8008732:	681b      	ldr	r3, [r3, #0]
 8008734:	430a      	orrs	r2, r1
 8008736:	61da      	str	r2, [r3, #28]
      break;
 8008738:	e023      	b.n	8008782 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800873a:	68fb      	ldr	r3, [r7, #12]
 800873c:	681b      	ldr	r3, [r3, #0]
 800873e:	68b9      	ldr	r1, [r7, #8]
 8008740:	4618      	mov	r0, r3
 8008742:	f000 fad3 	bl	8008cec <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8008746:	68fb      	ldr	r3, [r7, #12]
 8008748:	681b      	ldr	r3, [r3, #0]
 800874a:	69da      	ldr	r2, [r3, #28]
 800874c:	68fb      	ldr	r3, [r7, #12]
 800874e:	681b      	ldr	r3, [r3, #0]
 8008750:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8008754:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8008756:	68fb      	ldr	r3, [r7, #12]
 8008758:	681b      	ldr	r3, [r3, #0]
 800875a:	69da      	ldr	r2, [r3, #28]
 800875c:	68fb      	ldr	r3, [r7, #12]
 800875e:	681b      	ldr	r3, [r3, #0]
 8008760:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008764:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8008766:	68fb      	ldr	r3, [r7, #12]
 8008768:	681b      	ldr	r3, [r3, #0]
 800876a:	69d9      	ldr	r1, [r3, #28]
 800876c:	68bb      	ldr	r3, [r7, #8]
 800876e:	691b      	ldr	r3, [r3, #16]
 8008770:	021a      	lsls	r2, r3, #8
 8008772:	68fb      	ldr	r3, [r7, #12]
 8008774:	681b      	ldr	r3, [r3, #0]
 8008776:	430a      	orrs	r2, r1
 8008778:	61da      	str	r2, [r3, #28]
      break;
 800877a:	e002      	b.n	8008782 <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      status = HAL_ERROR;
 800877c:	2301      	movs	r3, #1
 800877e:	75fb      	strb	r3, [r7, #23]
      break;
 8008780:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 8008782:	68fb      	ldr	r3, [r7, #12]
 8008784:	2200      	movs	r2, #0
 8008786:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 800878a:	7dfb      	ldrb	r3, [r7, #23]
}
 800878c:	4618      	mov	r0, r3
 800878e:	3718      	adds	r7, #24
 8008790:	46bd      	mov	sp, r7
 8008792:	bd80      	pop	{r7, pc}

08008794 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 8008794:	b580      	push	{r7, lr}
 8008796:	b084      	sub	sp, #16
 8008798:	af00      	add	r7, sp, #0
 800879a:	6078      	str	r0, [r7, #4]
 800879c:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 800879e:	2300      	movs	r3, #0
 80087a0:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 80087a2:	687b      	ldr	r3, [r7, #4]
 80087a4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80087a8:	2b01      	cmp	r3, #1
 80087aa:	d101      	bne.n	80087b0 <HAL_TIM_ConfigClockSource+0x1c>
 80087ac:	2302      	movs	r3, #2
 80087ae:	e0b4      	b.n	800891a <HAL_TIM_ConfigClockSource+0x186>
 80087b0:	687b      	ldr	r3, [r7, #4]
 80087b2:	2201      	movs	r2, #1
 80087b4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 80087b8:	687b      	ldr	r3, [r7, #4]
 80087ba:	2202      	movs	r2, #2
 80087bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 80087c0:	687b      	ldr	r3, [r7, #4]
 80087c2:	681b      	ldr	r3, [r3, #0]
 80087c4:	689b      	ldr	r3, [r3, #8]
 80087c6:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 80087c8:	68bb      	ldr	r3, [r7, #8]
 80087ca:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 80087ce:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80087d0:	68bb      	ldr	r3, [r7, #8]
 80087d2:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80087d6:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 80087d8:	687b      	ldr	r3, [r7, #4]
 80087da:	681b      	ldr	r3, [r3, #0]
 80087dc:	68ba      	ldr	r2, [r7, #8]
 80087de:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 80087e0:	683b      	ldr	r3, [r7, #0]
 80087e2:	681b      	ldr	r3, [r3, #0]
 80087e4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80087e8:	d03e      	beq.n	8008868 <HAL_TIM_ConfigClockSource+0xd4>
 80087ea:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80087ee:	f200 8087 	bhi.w	8008900 <HAL_TIM_ConfigClockSource+0x16c>
 80087f2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80087f6:	f000 8086 	beq.w	8008906 <HAL_TIM_ConfigClockSource+0x172>
 80087fa:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80087fe:	d87f      	bhi.n	8008900 <HAL_TIM_ConfigClockSource+0x16c>
 8008800:	2b70      	cmp	r3, #112	; 0x70
 8008802:	d01a      	beq.n	800883a <HAL_TIM_ConfigClockSource+0xa6>
 8008804:	2b70      	cmp	r3, #112	; 0x70
 8008806:	d87b      	bhi.n	8008900 <HAL_TIM_ConfigClockSource+0x16c>
 8008808:	2b60      	cmp	r3, #96	; 0x60
 800880a:	d050      	beq.n	80088ae <HAL_TIM_ConfigClockSource+0x11a>
 800880c:	2b60      	cmp	r3, #96	; 0x60
 800880e:	d877      	bhi.n	8008900 <HAL_TIM_ConfigClockSource+0x16c>
 8008810:	2b50      	cmp	r3, #80	; 0x50
 8008812:	d03c      	beq.n	800888e <HAL_TIM_ConfigClockSource+0xfa>
 8008814:	2b50      	cmp	r3, #80	; 0x50
 8008816:	d873      	bhi.n	8008900 <HAL_TIM_ConfigClockSource+0x16c>
 8008818:	2b40      	cmp	r3, #64	; 0x40
 800881a:	d058      	beq.n	80088ce <HAL_TIM_ConfigClockSource+0x13a>
 800881c:	2b40      	cmp	r3, #64	; 0x40
 800881e:	d86f      	bhi.n	8008900 <HAL_TIM_ConfigClockSource+0x16c>
 8008820:	2b30      	cmp	r3, #48	; 0x30
 8008822:	d064      	beq.n	80088ee <HAL_TIM_ConfigClockSource+0x15a>
 8008824:	2b30      	cmp	r3, #48	; 0x30
 8008826:	d86b      	bhi.n	8008900 <HAL_TIM_ConfigClockSource+0x16c>
 8008828:	2b20      	cmp	r3, #32
 800882a:	d060      	beq.n	80088ee <HAL_TIM_ConfigClockSource+0x15a>
 800882c:	2b20      	cmp	r3, #32
 800882e:	d867      	bhi.n	8008900 <HAL_TIM_ConfigClockSource+0x16c>
 8008830:	2b00      	cmp	r3, #0
 8008832:	d05c      	beq.n	80088ee <HAL_TIM_ConfigClockSource+0x15a>
 8008834:	2b10      	cmp	r3, #16
 8008836:	d05a      	beq.n	80088ee <HAL_TIM_ConfigClockSource+0x15a>
 8008838:	e062      	b.n	8008900 <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 800883a:	687b      	ldr	r3, [r7, #4]
 800883c:	6818      	ldr	r0, [r3, #0]
 800883e:	683b      	ldr	r3, [r7, #0]
 8008840:	6899      	ldr	r1, [r3, #8]
 8008842:	683b      	ldr	r3, [r7, #0]
 8008844:	685a      	ldr	r2, [r3, #4]
 8008846:	683b      	ldr	r3, [r7, #0]
 8008848:	68db      	ldr	r3, [r3, #12]
 800884a:	f000 fb19 	bl	8008e80 <TIM_ETR_SetConfig>
                        sClockSourceConfig->ClockPrescaler,
                        sClockSourceConfig->ClockPolarity,
                        sClockSourceConfig->ClockFilter);

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 800884e:	687b      	ldr	r3, [r7, #4]
 8008850:	681b      	ldr	r3, [r3, #0]
 8008852:	689b      	ldr	r3, [r3, #8]
 8008854:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8008856:	68bb      	ldr	r3, [r7, #8]
 8008858:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800885c:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 800885e:	687b      	ldr	r3, [r7, #4]
 8008860:	681b      	ldr	r3, [r3, #0]
 8008862:	68ba      	ldr	r2, [r7, #8]
 8008864:	609a      	str	r2, [r3, #8]
      break;
 8008866:	e04f      	b.n	8008908 <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8008868:	687b      	ldr	r3, [r7, #4]
 800886a:	6818      	ldr	r0, [r3, #0]
 800886c:	683b      	ldr	r3, [r7, #0]
 800886e:	6899      	ldr	r1, [r3, #8]
 8008870:	683b      	ldr	r3, [r7, #0]
 8008872:	685a      	ldr	r2, [r3, #4]
 8008874:	683b      	ldr	r3, [r7, #0]
 8008876:	68db      	ldr	r3, [r3, #12]
 8008878:	f000 fb02 	bl	8008e80 <TIM_ETR_SetConfig>
                        sClockSourceConfig->ClockPrescaler,
                        sClockSourceConfig->ClockPolarity,
                        sClockSourceConfig->ClockFilter);
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800887c:	687b      	ldr	r3, [r7, #4]
 800887e:	681b      	ldr	r3, [r3, #0]
 8008880:	689a      	ldr	r2, [r3, #8]
 8008882:	687b      	ldr	r3, [r7, #4]
 8008884:	681b      	ldr	r3, [r3, #0]
 8008886:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800888a:	609a      	str	r2, [r3, #8]
      break;
 800888c:	e03c      	b.n	8008908 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 800888e:	687b      	ldr	r3, [r7, #4]
 8008890:	6818      	ldr	r0, [r3, #0]
 8008892:	683b      	ldr	r3, [r7, #0]
 8008894:	6859      	ldr	r1, [r3, #4]
 8008896:	683b      	ldr	r3, [r7, #0]
 8008898:	68db      	ldr	r3, [r3, #12]
 800889a:	461a      	mov	r2, r3
 800889c:	f000 fa76 	bl	8008d8c <TIM_TI1_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 80088a0:	687b      	ldr	r3, [r7, #4]
 80088a2:	681b      	ldr	r3, [r3, #0]
 80088a4:	2150      	movs	r1, #80	; 0x50
 80088a6:	4618      	mov	r0, r3
 80088a8:	f000 facf 	bl	8008e4a <TIM_ITRx_SetConfig>
      break;
 80088ac:	e02c      	b.n	8008908 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 80088ae:	687b      	ldr	r3, [r7, #4]
 80088b0:	6818      	ldr	r0, [r3, #0]
 80088b2:	683b      	ldr	r3, [r7, #0]
 80088b4:	6859      	ldr	r1, [r3, #4]
 80088b6:	683b      	ldr	r3, [r7, #0]
 80088b8:	68db      	ldr	r3, [r3, #12]
 80088ba:	461a      	mov	r2, r3
 80088bc:	f000 fa95 	bl	8008dea <TIM_TI2_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 80088c0:	687b      	ldr	r3, [r7, #4]
 80088c2:	681b      	ldr	r3, [r3, #0]
 80088c4:	2160      	movs	r1, #96	; 0x60
 80088c6:	4618      	mov	r0, r3
 80088c8:	f000 fabf 	bl	8008e4a <TIM_ITRx_SetConfig>
      break;
 80088cc:	e01c      	b.n	8008908 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 80088ce:	687b      	ldr	r3, [r7, #4]
 80088d0:	6818      	ldr	r0, [r3, #0]
 80088d2:	683b      	ldr	r3, [r7, #0]
 80088d4:	6859      	ldr	r1, [r3, #4]
 80088d6:	683b      	ldr	r3, [r7, #0]
 80088d8:	68db      	ldr	r3, [r3, #12]
 80088da:	461a      	mov	r2, r3
 80088dc:	f000 fa56 	bl	8008d8c <TIM_TI1_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 80088e0:	687b      	ldr	r3, [r7, #4]
 80088e2:	681b      	ldr	r3, [r3, #0]
 80088e4:	2140      	movs	r1, #64	; 0x40
 80088e6:	4618      	mov	r0, r3
 80088e8:	f000 faaf 	bl	8008e4a <TIM_ITRx_SetConfig>
      break;
 80088ec:	e00c      	b.n	8008908 <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 80088ee:	687b      	ldr	r3, [r7, #4]
 80088f0:	681a      	ldr	r2, [r3, #0]
 80088f2:	683b      	ldr	r3, [r7, #0]
 80088f4:	681b      	ldr	r3, [r3, #0]
 80088f6:	4619      	mov	r1, r3
 80088f8:	4610      	mov	r0, r2
 80088fa:	f000 faa6 	bl	8008e4a <TIM_ITRx_SetConfig>
      break;
 80088fe:	e003      	b.n	8008908 <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 8008900:	2301      	movs	r3, #1
 8008902:	73fb      	strb	r3, [r7, #15]
      break;
 8008904:	e000      	b.n	8008908 <HAL_TIM_ConfigClockSource+0x174>
      break;
 8008906:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 8008908:	687b      	ldr	r3, [r7, #4]
 800890a:	2201      	movs	r2, #1
 800890c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8008910:	687b      	ldr	r3, [r7, #4]
 8008912:	2200      	movs	r2, #0
 8008914:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 8008918:	7bfb      	ldrb	r3, [r7, #15]
}
 800891a:	4618      	mov	r0, r3
 800891c:	3710      	adds	r7, #16
 800891e:	46bd      	mov	sp, r7
 8008920:	bd80      	pop	{r7, pc}

08008922 <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 8008922:	b480      	push	{r7}
 8008924:	b083      	sub	sp, #12
 8008926:	af00      	add	r7, sp, #0
 8008928:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 800892a:	bf00      	nop
 800892c:	370c      	adds	r7, #12
 800892e:	46bd      	mov	sp, r7
 8008930:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008934:	4770      	bx	lr

08008936 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8008936:	b480      	push	{r7}
 8008938:	b083      	sub	sp, #12
 800893a:	af00      	add	r7, sp, #0
 800893c:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 800893e:	bf00      	nop
 8008940:	370c      	adds	r7, #12
 8008942:	46bd      	mov	sp, r7
 8008944:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008948:	4770      	bx	lr

0800894a <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 800894a:	b480      	push	{r7}
 800894c:	b083      	sub	sp, #12
 800894e:	af00      	add	r7, sp, #0
 8008950:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 8008952:	bf00      	nop
 8008954:	370c      	adds	r7, #12
 8008956:	46bd      	mov	sp, r7
 8008958:	f85d 7b04 	ldr.w	r7, [sp], #4
 800895c:	4770      	bx	lr

0800895e <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 800895e:	b480      	push	{r7}
 8008960:	b083      	sub	sp, #12
 8008962:	af00      	add	r7, sp, #0
 8008964:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 8008966:	bf00      	nop
 8008968:	370c      	adds	r7, #12
 800896a:	46bd      	mov	sp, r7
 800896c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008970:	4770      	bx	lr
	...

08008974 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
 8008974:	b480      	push	{r7}
 8008976:	b085      	sub	sp, #20
 8008978:	af00      	add	r7, sp, #0
 800897a:	6078      	str	r0, [r7, #4]
 800897c:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 800897e:	687b      	ldr	r3, [r7, #4]
 8008980:	681b      	ldr	r3, [r3, #0]
 8008982:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8008984:	687b      	ldr	r3, [r7, #4]
 8008986:	4a34      	ldr	r2, [pc, #208]	; (8008a58 <TIM_Base_SetConfig+0xe4>)
 8008988:	4293      	cmp	r3, r2
 800898a:	d00f      	beq.n	80089ac <TIM_Base_SetConfig+0x38>
 800898c:	687b      	ldr	r3, [r7, #4]
 800898e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008992:	d00b      	beq.n	80089ac <TIM_Base_SetConfig+0x38>
 8008994:	687b      	ldr	r3, [r7, #4]
 8008996:	4a31      	ldr	r2, [pc, #196]	; (8008a5c <TIM_Base_SetConfig+0xe8>)
 8008998:	4293      	cmp	r3, r2
 800899a:	d007      	beq.n	80089ac <TIM_Base_SetConfig+0x38>
 800899c:	687b      	ldr	r3, [r7, #4]
 800899e:	4a30      	ldr	r2, [pc, #192]	; (8008a60 <TIM_Base_SetConfig+0xec>)
 80089a0:	4293      	cmp	r3, r2
 80089a2:	d003      	beq.n	80089ac <TIM_Base_SetConfig+0x38>
 80089a4:	687b      	ldr	r3, [r7, #4]
 80089a6:	4a2f      	ldr	r2, [pc, #188]	; (8008a64 <TIM_Base_SetConfig+0xf0>)
 80089a8:	4293      	cmp	r3, r2
 80089aa:	d108      	bne.n	80089be <TIM_Base_SetConfig+0x4a>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80089ac:	68fb      	ldr	r3, [r7, #12]
 80089ae:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80089b2:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 80089b4:	683b      	ldr	r3, [r7, #0]
 80089b6:	685b      	ldr	r3, [r3, #4]
 80089b8:	68fa      	ldr	r2, [r7, #12]
 80089ba:	4313      	orrs	r3, r2
 80089bc:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80089be:	687b      	ldr	r3, [r7, #4]
 80089c0:	4a25      	ldr	r2, [pc, #148]	; (8008a58 <TIM_Base_SetConfig+0xe4>)
 80089c2:	4293      	cmp	r3, r2
 80089c4:	d01b      	beq.n	80089fe <TIM_Base_SetConfig+0x8a>
 80089c6:	687b      	ldr	r3, [r7, #4]
 80089c8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80089cc:	d017      	beq.n	80089fe <TIM_Base_SetConfig+0x8a>
 80089ce:	687b      	ldr	r3, [r7, #4]
 80089d0:	4a22      	ldr	r2, [pc, #136]	; (8008a5c <TIM_Base_SetConfig+0xe8>)
 80089d2:	4293      	cmp	r3, r2
 80089d4:	d013      	beq.n	80089fe <TIM_Base_SetConfig+0x8a>
 80089d6:	687b      	ldr	r3, [r7, #4]
 80089d8:	4a21      	ldr	r2, [pc, #132]	; (8008a60 <TIM_Base_SetConfig+0xec>)
 80089da:	4293      	cmp	r3, r2
 80089dc:	d00f      	beq.n	80089fe <TIM_Base_SetConfig+0x8a>
 80089de:	687b      	ldr	r3, [r7, #4]
 80089e0:	4a20      	ldr	r2, [pc, #128]	; (8008a64 <TIM_Base_SetConfig+0xf0>)
 80089e2:	4293      	cmp	r3, r2
 80089e4:	d00b      	beq.n	80089fe <TIM_Base_SetConfig+0x8a>
 80089e6:	687b      	ldr	r3, [r7, #4]
 80089e8:	4a1f      	ldr	r2, [pc, #124]	; (8008a68 <TIM_Base_SetConfig+0xf4>)
 80089ea:	4293      	cmp	r3, r2
 80089ec:	d007      	beq.n	80089fe <TIM_Base_SetConfig+0x8a>
 80089ee:	687b      	ldr	r3, [r7, #4]
 80089f0:	4a1e      	ldr	r2, [pc, #120]	; (8008a6c <TIM_Base_SetConfig+0xf8>)
 80089f2:	4293      	cmp	r3, r2
 80089f4:	d003      	beq.n	80089fe <TIM_Base_SetConfig+0x8a>
 80089f6:	687b      	ldr	r3, [r7, #4]
 80089f8:	4a1d      	ldr	r2, [pc, #116]	; (8008a70 <TIM_Base_SetConfig+0xfc>)
 80089fa:	4293      	cmp	r3, r2
 80089fc:	d108      	bne.n	8008a10 <TIM_Base_SetConfig+0x9c>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 80089fe:	68fb      	ldr	r3, [r7, #12]
 8008a00:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008a04:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008a06:	683b      	ldr	r3, [r7, #0]
 8008a08:	68db      	ldr	r3, [r3, #12]
 8008a0a:	68fa      	ldr	r2, [r7, #12]
 8008a0c:	4313      	orrs	r3, r2
 8008a0e:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008a10:	68fb      	ldr	r3, [r7, #12]
 8008a12:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8008a16:	683b      	ldr	r3, [r7, #0]
 8008a18:	695b      	ldr	r3, [r3, #20]
 8008a1a:	4313      	orrs	r3, r2
 8008a1c:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8008a1e:	687b      	ldr	r3, [r7, #4]
 8008a20:	68fa      	ldr	r2, [r7, #12]
 8008a22:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8008a24:	683b      	ldr	r3, [r7, #0]
 8008a26:	689a      	ldr	r2, [r3, #8]
 8008a28:	687b      	ldr	r3, [r7, #4]
 8008a2a:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8008a2c:	683b      	ldr	r3, [r7, #0]
 8008a2e:	681a      	ldr	r2, [r3, #0]
 8008a30:	687b      	ldr	r3, [r7, #4]
 8008a32:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8008a34:	687b      	ldr	r3, [r7, #4]
 8008a36:	4a08      	ldr	r2, [pc, #32]	; (8008a58 <TIM_Base_SetConfig+0xe4>)
 8008a38:	4293      	cmp	r3, r2
 8008a3a:	d103      	bne.n	8008a44 <TIM_Base_SetConfig+0xd0>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8008a3c:	683b      	ldr	r3, [r7, #0]
 8008a3e:	691a      	ldr	r2, [r3, #16]
 8008a40:	687b      	ldr	r3, [r7, #4]
 8008a42:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8008a44:	687b      	ldr	r3, [r7, #4]
 8008a46:	2201      	movs	r2, #1
 8008a48:	615a      	str	r2, [r3, #20]
}
 8008a4a:	bf00      	nop
 8008a4c:	3714      	adds	r7, #20
 8008a4e:	46bd      	mov	sp, r7
 8008a50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a54:	4770      	bx	lr
 8008a56:	bf00      	nop
 8008a58:	40010000 	.word	0x40010000
 8008a5c:	40000400 	.word	0x40000400
 8008a60:	40000800 	.word	0x40000800
 8008a64:	40000c00 	.word	0x40000c00
 8008a68:	40014000 	.word	0x40014000
 8008a6c:	40014400 	.word	0x40014400
 8008a70:	40014800 	.word	0x40014800

08008a74 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8008a74:	b480      	push	{r7}
 8008a76:	b087      	sub	sp, #28
 8008a78:	af00      	add	r7, sp, #0
 8008a7a:	6078      	str	r0, [r7, #4]
 8008a7c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8008a7e:	687b      	ldr	r3, [r7, #4]
 8008a80:	6a1b      	ldr	r3, [r3, #32]
 8008a82:	f023 0201 	bic.w	r2, r3, #1
 8008a86:	687b      	ldr	r3, [r7, #4]
 8008a88:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8008a8a:	687b      	ldr	r3, [r7, #4]
 8008a8c:	6a1b      	ldr	r3, [r3, #32]
 8008a8e:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008a90:	687b      	ldr	r3, [r7, #4]
 8008a92:	685b      	ldr	r3, [r3, #4]
 8008a94:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8008a96:	687b      	ldr	r3, [r7, #4]
 8008a98:	699b      	ldr	r3, [r3, #24]
 8008a9a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 8008a9c:	68fb      	ldr	r3, [r7, #12]
 8008a9e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008aa2:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8008aa4:	68fb      	ldr	r3, [r7, #12]
 8008aa6:	f023 0303 	bic.w	r3, r3, #3
 8008aaa:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8008aac:	683b      	ldr	r3, [r7, #0]
 8008aae:	681b      	ldr	r3, [r3, #0]
 8008ab0:	68fa      	ldr	r2, [r7, #12]
 8008ab2:	4313      	orrs	r3, r2
 8008ab4:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 8008ab6:	697b      	ldr	r3, [r7, #20]
 8008ab8:	f023 0302 	bic.w	r3, r3, #2
 8008abc:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8008abe:	683b      	ldr	r3, [r7, #0]
 8008ac0:	689b      	ldr	r3, [r3, #8]
 8008ac2:	697a      	ldr	r2, [r7, #20]
 8008ac4:	4313      	orrs	r3, r2
 8008ac6:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8008ac8:	687b      	ldr	r3, [r7, #4]
 8008aca:	4a1c      	ldr	r2, [pc, #112]	; (8008b3c <TIM_OC1_SetConfig+0xc8>)
 8008acc:	4293      	cmp	r3, r2
 8008ace:	d10c      	bne.n	8008aea <TIM_OC1_SetConfig+0x76>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 8008ad0:	697b      	ldr	r3, [r7, #20]
 8008ad2:	f023 0308 	bic.w	r3, r3, #8
 8008ad6:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8008ad8:	683b      	ldr	r3, [r7, #0]
 8008ada:	68db      	ldr	r3, [r3, #12]
 8008adc:	697a      	ldr	r2, [r7, #20]
 8008ade:	4313      	orrs	r3, r2
 8008ae0:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 8008ae2:	697b      	ldr	r3, [r7, #20]
 8008ae4:	f023 0304 	bic.w	r3, r3, #4
 8008ae8:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008aea:	687b      	ldr	r3, [r7, #4]
 8008aec:	4a13      	ldr	r2, [pc, #76]	; (8008b3c <TIM_OC1_SetConfig+0xc8>)
 8008aee:	4293      	cmp	r3, r2
 8008af0:	d111      	bne.n	8008b16 <TIM_OC1_SetConfig+0xa2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 8008af2:	693b      	ldr	r3, [r7, #16]
 8008af4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8008af8:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8008afa:	693b      	ldr	r3, [r7, #16]
 8008afc:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8008b00:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 8008b02:	683b      	ldr	r3, [r7, #0]
 8008b04:	695b      	ldr	r3, [r3, #20]
 8008b06:	693a      	ldr	r2, [r7, #16]
 8008b08:	4313      	orrs	r3, r2
 8008b0a:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8008b0c:	683b      	ldr	r3, [r7, #0]
 8008b0e:	699b      	ldr	r3, [r3, #24]
 8008b10:	693a      	ldr	r2, [r7, #16]
 8008b12:	4313      	orrs	r3, r2
 8008b14:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8008b16:	687b      	ldr	r3, [r7, #4]
 8008b18:	693a      	ldr	r2, [r7, #16]
 8008b1a:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8008b1c:	687b      	ldr	r3, [r7, #4]
 8008b1e:	68fa      	ldr	r2, [r7, #12]
 8008b20:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8008b22:	683b      	ldr	r3, [r7, #0]
 8008b24:	685a      	ldr	r2, [r3, #4]
 8008b26:	687b      	ldr	r3, [r7, #4]
 8008b28:	635a      	str	r2, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008b2a:	687b      	ldr	r3, [r7, #4]
 8008b2c:	697a      	ldr	r2, [r7, #20]
 8008b2e:	621a      	str	r2, [r3, #32]
}
 8008b30:	bf00      	nop
 8008b32:	371c      	adds	r7, #28
 8008b34:	46bd      	mov	sp, r7
 8008b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b3a:	4770      	bx	lr
 8008b3c:	40010000 	.word	0x40010000

08008b40 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8008b40:	b480      	push	{r7}
 8008b42:	b087      	sub	sp, #28
 8008b44:	af00      	add	r7, sp, #0
 8008b46:	6078      	str	r0, [r7, #4]
 8008b48:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8008b4a:	687b      	ldr	r3, [r7, #4]
 8008b4c:	6a1b      	ldr	r3, [r3, #32]
 8008b4e:	f023 0210 	bic.w	r2, r3, #16
 8008b52:	687b      	ldr	r3, [r7, #4]
 8008b54:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8008b56:	687b      	ldr	r3, [r7, #4]
 8008b58:	6a1b      	ldr	r3, [r3, #32]
 8008b5a:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008b5c:	687b      	ldr	r3, [r7, #4]
 8008b5e:	685b      	ldr	r3, [r3, #4]
 8008b60:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8008b62:	687b      	ldr	r3, [r7, #4]
 8008b64:	699b      	ldr	r3, [r3, #24]
 8008b66:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 8008b68:	68fb      	ldr	r3, [r7, #12]
 8008b6a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008b6e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8008b70:	68fb      	ldr	r3, [r7, #12]
 8008b72:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008b76:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8008b78:	683b      	ldr	r3, [r7, #0]
 8008b7a:	681b      	ldr	r3, [r3, #0]
 8008b7c:	021b      	lsls	r3, r3, #8
 8008b7e:	68fa      	ldr	r2, [r7, #12]
 8008b80:	4313      	orrs	r3, r2
 8008b82:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8008b84:	697b      	ldr	r3, [r7, #20]
 8008b86:	f023 0320 	bic.w	r3, r3, #32
 8008b8a:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8008b8c:	683b      	ldr	r3, [r7, #0]
 8008b8e:	689b      	ldr	r3, [r3, #8]
 8008b90:	011b      	lsls	r3, r3, #4
 8008b92:	697a      	ldr	r2, [r7, #20]
 8008b94:	4313      	orrs	r3, r2
 8008b96:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8008b98:	687b      	ldr	r3, [r7, #4]
 8008b9a:	4a1e      	ldr	r2, [pc, #120]	; (8008c14 <TIM_OC2_SetConfig+0xd4>)
 8008b9c:	4293      	cmp	r3, r2
 8008b9e:	d10d      	bne.n	8008bbc <TIM_OC2_SetConfig+0x7c>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 8008ba0:	697b      	ldr	r3, [r7, #20]
 8008ba2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008ba6:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8008ba8:	683b      	ldr	r3, [r7, #0]
 8008baa:	68db      	ldr	r3, [r3, #12]
 8008bac:	011b      	lsls	r3, r3, #4
 8008bae:	697a      	ldr	r2, [r7, #20]
 8008bb0:	4313      	orrs	r3, r2
 8008bb2:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 8008bb4:	697b      	ldr	r3, [r7, #20]
 8008bb6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8008bba:	617b      	str	r3, [r7, #20]

  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008bbc:	687b      	ldr	r3, [r7, #4]
 8008bbe:	4a15      	ldr	r2, [pc, #84]	; (8008c14 <TIM_OC2_SetConfig+0xd4>)
 8008bc0:	4293      	cmp	r3, r2
 8008bc2:	d113      	bne.n	8008bec <TIM_OC2_SetConfig+0xac>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 8008bc4:	693b      	ldr	r3, [r7, #16]
 8008bc6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8008bca:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8008bcc:	693b      	ldr	r3, [r7, #16]
 8008bce:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8008bd2:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 8008bd4:	683b      	ldr	r3, [r7, #0]
 8008bd6:	695b      	ldr	r3, [r3, #20]
 8008bd8:	009b      	lsls	r3, r3, #2
 8008bda:	693a      	ldr	r2, [r7, #16]
 8008bdc:	4313      	orrs	r3, r2
 8008bde:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8008be0:	683b      	ldr	r3, [r7, #0]
 8008be2:	699b      	ldr	r3, [r3, #24]
 8008be4:	009b      	lsls	r3, r3, #2
 8008be6:	693a      	ldr	r2, [r7, #16]
 8008be8:	4313      	orrs	r3, r2
 8008bea:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8008bec:	687b      	ldr	r3, [r7, #4]
 8008bee:	693a      	ldr	r2, [r7, #16]
 8008bf0:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8008bf2:	687b      	ldr	r3, [r7, #4]
 8008bf4:	68fa      	ldr	r2, [r7, #12]
 8008bf6:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 8008bf8:	683b      	ldr	r3, [r7, #0]
 8008bfa:	685a      	ldr	r2, [r3, #4]
 8008bfc:	687b      	ldr	r3, [r7, #4]
 8008bfe:	639a      	str	r2, [r3, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008c00:	687b      	ldr	r3, [r7, #4]
 8008c02:	697a      	ldr	r2, [r7, #20]
 8008c04:	621a      	str	r2, [r3, #32]
}
 8008c06:	bf00      	nop
 8008c08:	371c      	adds	r7, #28
 8008c0a:	46bd      	mov	sp, r7
 8008c0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c10:	4770      	bx	lr
 8008c12:	bf00      	nop
 8008c14:	40010000 	.word	0x40010000

08008c18 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8008c18:	b480      	push	{r7}
 8008c1a:	b087      	sub	sp, #28
 8008c1c:	af00      	add	r7, sp, #0
 8008c1e:	6078      	str	r0, [r7, #4]
 8008c20:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8008c22:	687b      	ldr	r3, [r7, #4]
 8008c24:	6a1b      	ldr	r3, [r3, #32]
 8008c26:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8008c2a:	687b      	ldr	r3, [r7, #4]
 8008c2c:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8008c2e:	687b      	ldr	r3, [r7, #4]
 8008c30:	6a1b      	ldr	r3, [r3, #32]
 8008c32:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008c34:	687b      	ldr	r3, [r7, #4]
 8008c36:	685b      	ldr	r3, [r3, #4]
 8008c38:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8008c3a:	687b      	ldr	r3, [r7, #4]
 8008c3c:	69db      	ldr	r3, [r3, #28]
 8008c3e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 8008c40:	68fb      	ldr	r3, [r7, #12]
 8008c42:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008c46:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8008c48:	68fb      	ldr	r3, [r7, #12]
 8008c4a:	f023 0303 	bic.w	r3, r3, #3
 8008c4e:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8008c50:	683b      	ldr	r3, [r7, #0]
 8008c52:	681b      	ldr	r3, [r3, #0]
 8008c54:	68fa      	ldr	r2, [r7, #12]
 8008c56:	4313      	orrs	r3, r2
 8008c58:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 8008c5a:	697b      	ldr	r3, [r7, #20]
 8008c5c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8008c60:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8008c62:	683b      	ldr	r3, [r7, #0]
 8008c64:	689b      	ldr	r3, [r3, #8]
 8008c66:	021b      	lsls	r3, r3, #8
 8008c68:	697a      	ldr	r2, [r7, #20]
 8008c6a:	4313      	orrs	r3, r2
 8008c6c:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8008c6e:	687b      	ldr	r3, [r7, #4]
 8008c70:	4a1d      	ldr	r2, [pc, #116]	; (8008ce8 <TIM_OC3_SetConfig+0xd0>)
 8008c72:	4293      	cmp	r3, r2
 8008c74:	d10d      	bne.n	8008c92 <TIM_OC3_SetConfig+0x7a>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 8008c76:	697b      	ldr	r3, [r7, #20]
 8008c78:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8008c7c:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8008c7e:	683b      	ldr	r3, [r7, #0]
 8008c80:	68db      	ldr	r3, [r3, #12]
 8008c82:	021b      	lsls	r3, r3, #8
 8008c84:	697a      	ldr	r2, [r7, #20]
 8008c86:	4313      	orrs	r3, r2
 8008c88:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 8008c8a:	697b      	ldr	r3, [r7, #20]
 8008c8c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8008c90:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008c92:	687b      	ldr	r3, [r7, #4]
 8008c94:	4a14      	ldr	r2, [pc, #80]	; (8008ce8 <TIM_OC3_SetConfig+0xd0>)
 8008c96:	4293      	cmp	r3, r2
 8008c98:	d113      	bne.n	8008cc2 <TIM_OC3_SetConfig+0xaa>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 8008c9a:	693b      	ldr	r3, [r7, #16]
 8008c9c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8008ca0:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8008ca2:	693b      	ldr	r3, [r7, #16]
 8008ca4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8008ca8:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8008caa:	683b      	ldr	r3, [r7, #0]
 8008cac:	695b      	ldr	r3, [r3, #20]
 8008cae:	011b      	lsls	r3, r3, #4
 8008cb0:	693a      	ldr	r2, [r7, #16]
 8008cb2:	4313      	orrs	r3, r2
 8008cb4:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8008cb6:	683b      	ldr	r3, [r7, #0]
 8008cb8:	699b      	ldr	r3, [r3, #24]
 8008cba:	011b      	lsls	r3, r3, #4
 8008cbc:	693a      	ldr	r2, [r7, #16]
 8008cbe:	4313      	orrs	r3, r2
 8008cc0:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8008cc2:	687b      	ldr	r3, [r7, #4]
 8008cc4:	693a      	ldr	r2, [r7, #16]
 8008cc6:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8008cc8:	687b      	ldr	r3, [r7, #4]
 8008cca:	68fa      	ldr	r2, [r7, #12]
 8008ccc:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8008cce:	683b      	ldr	r3, [r7, #0]
 8008cd0:	685a      	ldr	r2, [r3, #4]
 8008cd2:	687b      	ldr	r3, [r7, #4]
 8008cd4:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008cd6:	687b      	ldr	r3, [r7, #4]
 8008cd8:	697a      	ldr	r2, [r7, #20]
 8008cda:	621a      	str	r2, [r3, #32]
}
 8008cdc:	bf00      	nop
 8008cde:	371c      	adds	r7, #28
 8008ce0:	46bd      	mov	sp, r7
 8008ce2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ce6:	4770      	bx	lr
 8008ce8:	40010000 	.word	0x40010000

08008cec <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8008cec:	b480      	push	{r7}
 8008cee:	b087      	sub	sp, #28
 8008cf0:	af00      	add	r7, sp, #0
 8008cf2:	6078      	str	r0, [r7, #4]
 8008cf4:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8008cf6:	687b      	ldr	r3, [r7, #4]
 8008cf8:	6a1b      	ldr	r3, [r3, #32]
 8008cfa:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8008cfe:	687b      	ldr	r3, [r7, #4]
 8008d00:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8008d02:	687b      	ldr	r3, [r7, #4]
 8008d04:	6a1b      	ldr	r3, [r3, #32]
 8008d06:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008d08:	687b      	ldr	r3, [r7, #4]
 8008d0a:	685b      	ldr	r3, [r3, #4]
 8008d0c:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8008d0e:	687b      	ldr	r3, [r7, #4]
 8008d10:	69db      	ldr	r3, [r3, #28]
 8008d12:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 8008d14:	68fb      	ldr	r3, [r7, #12]
 8008d16:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008d1a:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8008d1c:	68fb      	ldr	r3, [r7, #12]
 8008d1e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008d22:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8008d24:	683b      	ldr	r3, [r7, #0]
 8008d26:	681b      	ldr	r3, [r3, #0]
 8008d28:	021b      	lsls	r3, r3, #8
 8008d2a:	68fa      	ldr	r2, [r7, #12]
 8008d2c:	4313      	orrs	r3, r2
 8008d2e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 8008d30:	693b      	ldr	r3, [r7, #16]
 8008d32:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8008d36:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8008d38:	683b      	ldr	r3, [r7, #0]
 8008d3a:	689b      	ldr	r3, [r3, #8]
 8008d3c:	031b      	lsls	r3, r3, #12
 8008d3e:	693a      	ldr	r2, [r7, #16]
 8008d40:	4313      	orrs	r3, r2
 8008d42:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008d44:	687b      	ldr	r3, [r7, #4]
 8008d46:	4a10      	ldr	r2, [pc, #64]	; (8008d88 <TIM_OC4_SetConfig+0x9c>)
 8008d48:	4293      	cmp	r3, r2
 8008d4a:	d109      	bne.n	8008d60 <TIM_OC4_SetConfig+0x74>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8008d4c:	697b      	ldr	r3, [r7, #20]
 8008d4e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8008d52:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8008d54:	683b      	ldr	r3, [r7, #0]
 8008d56:	695b      	ldr	r3, [r3, #20]
 8008d58:	019b      	lsls	r3, r3, #6
 8008d5a:	697a      	ldr	r2, [r7, #20]
 8008d5c:	4313      	orrs	r3, r2
 8008d5e:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8008d60:	687b      	ldr	r3, [r7, #4]
 8008d62:	697a      	ldr	r2, [r7, #20]
 8008d64:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8008d66:	687b      	ldr	r3, [r7, #4]
 8008d68:	68fa      	ldr	r2, [r7, #12]
 8008d6a:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8008d6c:	683b      	ldr	r3, [r7, #0]
 8008d6e:	685a      	ldr	r2, [r3, #4]
 8008d70:	687b      	ldr	r3, [r7, #4]
 8008d72:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008d74:	687b      	ldr	r3, [r7, #4]
 8008d76:	693a      	ldr	r2, [r7, #16]
 8008d78:	621a      	str	r2, [r3, #32]
}
 8008d7a:	bf00      	nop
 8008d7c:	371c      	adds	r7, #28
 8008d7e:	46bd      	mov	sp, r7
 8008d80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d84:	4770      	bx	lr
 8008d86:	bf00      	nop
 8008d88:	40010000 	.word	0x40010000

08008d8c <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8008d8c:	b480      	push	{r7}
 8008d8e:	b087      	sub	sp, #28
 8008d90:	af00      	add	r7, sp, #0
 8008d92:	60f8      	str	r0, [r7, #12]
 8008d94:	60b9      	str	r1, [r7, #8]
 8008d96:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8008d98:	68fb      	ldr	r3, [r7, #12]
 8008d9a:	6a1b      	ldr	r3, [r3, #32]
 8008d9c:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8008d9e:	68fb      	ldr	r3, [r7, #12]
 8008da0:	6a1b      	ldr	r3, [r3, #32]
 8008da2:	f023 0201 	bic.w	r2, r3, #1
 8008da6:	68fb      	ldr	r3, [r7, #12]
 8008da8:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8008daa:	68fb      	ldr	r3, [r7, #12]
 8008dac:	699b      	ldr	r3, [r3, #24]
 8008dae:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8008db0:	693b      	ldr	r3, [r7, #16]
 8008db2:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8008db6:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8008db8:	687b      	ldr	r3, [r7, #4]
 8008dba:	011b      	lsls	r3, r3, #4
 8008dbc:	693a      	ldr	r2, [r7, #16]
 8008dbe:	4313      	orrs	r3, r2
 8008dc0:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8008dc2:	697b      	ldr	r3, [r7, #20]
 8008dc4:	f023 030a 	bic.w	r3, r3, #10
 8008dc8:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8008dca:	697a      	ldr	r2, [r7, #20]
 8008dcc:	68bb      	ldr	r3, [r7, #8]
 8008dce:	4313      	orrs	r3, r2
 8008dd0:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8008dd2:	68fb      	ldr	r3, [r7, #12]
 8008dd4:	693a      	ldr	r2, [r7, #16]
 8008dd6:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8008dd8:	68fb      	ldr	r3, [r7, #12]
 8008dda:	697a      	ldr	r2, [r7, #20]
 8008ddc:	621a      	str	r2, [r3, #32]
}
 8008dde:	bf00      	nop
 8008de0:	371c      	adds	r7, #28
 8008de2:	46bd      	mov	sp, r7
 8008de4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008de8:	4770      	bx	lr

08008dea <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8008dea:	b480      	push	{r7}
 8008dec:	b087      	sub	sp, #28
 8008dee:	af00      	add	r7, sp, #0
 8008df0:	60f8      	str	r0, [r7, #12]
 8008df2:	60b9      	str	r1, [r7, #8]
 8008df4:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8008df6:	68fb      	ldr	r3, [r7, #12]
 8008df8:	6a1b      	ldr	r3, [r3, #32]
 8008dfa:	f023 0210 	bic.w	r2, r3, #16
 8008dfe:	68fb      	ldr	r3, [r7, #12]
 8008e00:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8008e02:	68fb      	ldr	r3, [r7, #12]
 8008e04:	699b      	ldr	r3, [r3, #24]
 8008e06:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 8008e08:	68fb      	ldr	r3, [r7, #12]
 8008e0a:	6a1b      	ldr	r3, [r3, #32]
 8008e0c:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8008e0e:	697b      	ldr	r3, [r7, #20]
 8008e10:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8008e14:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8008e16:	687b      	ldr	r3, [r7, #4]
 8008e18:	031b      	lsls	r3, r3, #12
 8008e1a:	697a      	ldr	r2, [r7, #20]
 8008e1c:	4313      	orrs	r3, r2
 8008e1e:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8008e20:	693b      	ldr	r3, [r7, #16]
 8008e22:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8008e26:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity << 4U);
 8008e28:	68bb      	ldr	r3, [r7, #8]
 8008e2a:	011b      	lsls	r3, r3, #4
 8008e2c:	693a      	ldr	r2, [r7, #16]
 8008e2e:	4313      	orrs	r3, r2
 8008e30:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8008e32:	68fb      	ldr	r3, [r7, #12]
 8008e34:	697a      	ldr	r2, [r7, #20]
 8008e36:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8008e38:	68fb      	ldr	r3, [r7, #12]
 8008e3a:	693a      	ldr	r2, [r7, #16]
 8008e3c:	621a      	str	r2, [r3, #32]
}
 8008e3e:	bf00      	nop
 8008e40:	371c      	adds	r7, #28
 8008e42:	46bd      	mov	sp, r7
 8008e44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e48:	4770      	bx	lr

08008e4a <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8008e4a:	b480      	push	{r7}
 8008e4c:	b085      	sub	sp, #20
 8008e4e:	af00      	add	r7, sp, #0
 8008e50:	6078      	str	r0, [r7, #4]
 8008e52:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8008e54:	687b      	ldr	r3, [r7, #4]
 8008e56:	689b      	ldr	r3, [r3, #8]
 8008e58:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8008e5a:	68fb      	ldr	r3, [r7, #12]
 8008e5c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008e60:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8008e62:	683a      	ldr	r2, [r7, #0]
 8008e64:	68fb      	ldr	r3, [r7, #12]
 8008e66:	4313      	orrs	r3, r2
 8008e68:	f043 0307 	orr.w	r3, r3, #7
 8008e6c:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8008e6e:	687b      	ldr	r3, [r7, #4]
 8008e70:	68fa      	ldr	r2, [r7, #12]
 8008e72:	609a      	str	r2, [r3, #8]
}
 8008e74:	bf00      	nop
 8008e76:	3714      	adds	r7, #20
 8008e78:	46bd      	mov	sp, r7
 8008e7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e7e:	4770      	bx	lr

08008e80 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8008e80:	b480      	push	{r7}
 8008e82:	b087      	sub	sp, #28
 8008e84:	af00      	add	r7, sp, #0
 8008e86:	60f8      	str	r0, [r7, #12]
 8008e88:	60b9      	str	r1, [r7, #8]
 8008e8a:	607a      	str	r2, [r7, #4]
 8008e8c:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8008e8e:	68fb      	ldr	r3, [r7, #12]
 8008e90:	689b      	ldr	r3, [r3, #8]
 8008e92:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8008e94:	697b      	ldr	r3, [r7, #20]
 8008e96:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8008e9a:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8008e9c:	683b      	ldr	r3, [r7, #0]
 8008e9e:	021a      	lsls	r2, r3, #8
 8008ea0:	687b      	ldr	r3, [r7, #4]
 8008ea2:	431a      	orrs	r2, r3
 8008ea4:	68bb      	ldr	r3, [r7, #8]
 8008ea6:	4313      	orrs	r3, r2
 8008ea8:	697a      	ldr	r2, [r7, #20]
 8008eaa:	4313      	orrs	r3, r2
 8008eac:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8008eae:	68fb      	ldr	r3, [r7, #12]
 8008eb0:	697a      	ldr	r2, [r7, #20]
 8008eb2:	609a      	str	r2, [r3, #8]
}
 8008eb4:	bf00      	nop
 8008eb6:	371c      	adds	r7, #28
 8008eb8:	46bd      	mov	sp, r7
 8008eba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ebe:	4770      	bx	lr

08008ec0 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8008ec0:	b480      	push	{r7}
 8008ec2:	b087      	sub	sp, #28
 8008ec4:	af00      	add	r7, sp, #0
 8008ec6:	60f8      	str	r0, [r7, #12]
 8008ec8:	60b9      	str	r1, [r7, #8]
 8008eca:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8008ecc:	68bb      	ldr	r3, [r7, #8]
 8008ece:	f003 031f 	and.w	r3, r3, #31
 8008ed2:	2201      	movs	r2, #1
 8008ed4:	fa02 f303 	lsl.w	r3, r2, r3
 8008ed8:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8008eda:	68fb      	ldr	r3, [r7, #12]
 8008edc:	6a1a      	ldr	r2, [r3, #32]
 8008ede:	697b      	ldr	r3, [r7, #20]
 8008ee0:	43db      	mvns	r3, r3
 8008ee2:	401a      	ands	r2, r3
 8008ee4:	68fb      	ldr	r3, [r7, #12]
 8008ee6:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8008ee8:	68fb      	ldr	r3, [r7, #12]
 8008eea:	6a1a      	ldr	r2, [r3, #32]
 8008eec:	68bb      	ldr	r3, [r7, #8]
 8008eee:	f003 031f 	and.w	r3, r3, #31
 8008ef2:	6879      	ldr	r1, [r7, #4]
 8008ef4:	fa01 f303 	lsl.w	r3, r1, r3
 8008ef8:	431a      	orrs	r2, r3
 8008efa:	68fb      	ldr	r3, [r7, #12]
 8008efc:	621a      	str	r2, [r3, #32]
}
 8008efe:	bf00      	nop
 8008f00:	371c      	adds	r7, #28
 8008f02:	46bd      	mov	sp, r7
 8008f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f08:	4770      	bx	lr
	...

08008f0c <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8008f0c:	b480      	push	{r7}
 8008f0e:	b085      	sub	sp, #20
 8008f10:	af00      	add	r7, sp, #0
 8008f12:	6078      	str	r0, [r7, #4]
 8008f14:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8008f16:	687b      	ldr	r3, [r7, #4]
 8008f18:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008f1c:	2b01      	cmp	r3, #1
 8008f1e:	d101      	bne.n	8008f24 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8008f20:	2302      	movs	r3, #2
 8008f22:	e050      	b.n	8008fc6 <HAL_TIMEx_MasterConfigSynchronization+0xba>
 8008f24:	687b      	ldr	r3, [r7, #4]
 8008f26:	2201      	movs	r2, #1
 8008f28:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008f2c:	687b      	ldr	r3, [r7, #4]
 8008f2e:	2202      	movs	r2, #2
 8008f30:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8008f34:	687b      	ldr	r3, [r7, #4]
 8008f36:	681b      	ldr	r3, [r3, #0]
 8008f38:	685b      	ldr	r3, [r3, #4]
 8008f3a:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8008f3c:	687b      	ldr	r3, [r7, #4]
 8008f3e:	681b      	ldr	r3, [r3, #0]
 8008f40:	689b      	ldr	r3, [r3, #8]
 8008f42:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8008f44:	68fb      	ldr	r3, [r7, #12]
 8008f46:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008f4a:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8008f4c:	683b      	ldr	r3, [r7, #0]
 8008f4e:	681b      	ldr	r3, [r3, #0]
 8008f50:	68fa      	ldr	r2, [r7, #12]
 8008f52:	4313      	orrs	r3, r2
 8008f54:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8008f56:	687b      	ldr	r3, [r7, #4]
 8008f58:	681b      	ldr	r3, [r3, #0]
 8008f5a:	68fa      	ldr	r2, [r7, #12]
 8008f5c:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8008f5e:	687b      	ldr	r3, [r7, #4]
 8008f60:	681b      	ldr	r3, [r3, #0]
 8008f62:	4a1c      	ldr	r2, [pc, #112]	; (8008fd4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 8008f64:	4293      	cmp	r3, r2
 8008f66:	d018      	beq.n	8008f9a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8008f68:	687b      	ldr	r3, [r7, #4]
 8008f6a:	681b      	ldr	r3, [r3, #0]
 8008f6c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008f70:	d013      	beq.n	8008f9a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8008f72:	687b      	ldr	r3, [r7, #4]
 8008f74:	681b      	ldr	r3, [r3, #0]
 8008f76:	4a18      	ldr	r2, [pc, #96]	; (8008fd8 <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 8008f78:	4293      	cmp	r3, r2
 8008f7a:	d00e      	beq.n	8008f9a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8008f7c:	687b      	ldr	r3, [r7, #4]
 8008f7e:	681b      	ldr	r3, [r3, #0]
 8008f80:	4a16      	ldr	r2, [pc, #88]	; (8008fdc <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8008f82:	4293      	cmp	r3, r2
 8008f84:	d009      	beq.n	8008f9a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8008f86:	687b      	ldr	r3, [r7, #4]
 8008f88:	681b      	ldr	r3, [r3, #0]
 8008f8a:	4a15      	ldr	r2, [pc, #84]	; (8008fe0 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 8008f8c:	4293      	cmp	r3, r2
 8008f8e:	d004      	beq.n	8008f9a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8008f90:	687b      	ldr	r3, [r7, #4]
 8008f92:	681b      	ldr	r3, [r3, #0]
 8008f94:	4a13      	ldr	r2, [pc, #76]	; (8008fe4 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 8008f96:	4293      	cmp	r3, r2
 8008f98:	d10c      	bne.n	8008fb4 <HAL_TIMEx_MasterConfigSynchronization+0xa8>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8008f9a:	68bb      	ldr	r3, [r7, #8]
 8008f9c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008fa0:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008fa2:	683b      	ldr	r3, [r7, #0]
 8008fa4:	685b      	ldr	r3, [r3, #4]
 8008fa6:	68ba      	ldr	r2, [r7, #8]
 8008fa8:	4313      	orrs	r3, r2
 8008faa:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8008fac:	687b      	ldr	r3, [r7, #4]
 8008fae:	681b      	ldr	r3, [r3, #0]
 8008fb0:	68ba      	ldr	r2, [r7, #8]
 8008fb2:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8008fb4:	687b      	ldr	r3, [r7, #4]
 8008fb6:	2201      	movs	r2, #1
 8008fb8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8008fbc:	687b      	ldr	r3, [r7, #4]
 8008fbe:	2200      	movs	r2, #0
 8008fc0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8008fc4:	2300      	movs	r3, #0
}
 8008fc6:	4618      	mov	r0, r3
 8008fc8:	3714      	adds	r7, #20
 8008fca:	46bd      	mov	sp, r7
 8008fcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fd0:	4770      	bx	lr
 8008fd2:	bf00      	nop
 8008fd4:	40010000 	.word	0x40010000
 8008fd8:	40000400 	.word	0x40000400
 8008fdc:	40000800 	.word	0x40000800
 8008fe0:	40000c00 	.word	0x40000c00
 8008fe4:	40014000 	.word	0x40014000

08008fe8 <HAL_TIMEx_CommutCallback>:
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 8008fe8:	b480      	push	{r7}
 8008fea:	b083      	sub	sp, #12
 8008fec:	af00      	add	r7, sp, #0
 8008fee:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 8008ff0:	bf00      	nop
 8008ff2:	370c      	adds	r7, #12
 8008ff4:	46bd      	mov	sp, r7
 8008ff6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ffa:	4770      	bx	lr

08008ffc <HAL_TIMEx_BreakCallback>:
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8008ffc:	b480      	push	{r7}
 8008ffe:	b083      	sub	sp, #12
 8009000:	af00      	add	r7, sp, #0
 8009002:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 8009004:	bf00      	nop
 8009006:	370c      	adds	r7, #12
 8009008:	46bd      	mov	sp, r7
 800900a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800900e:	4770      	bx	lr

08009010 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8009010:	b580      	push	{r7, lr}
 8009012:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8009014:	f008 fb5e 	bl	80116d4 <touchgfx_components_init>
  touchgfx_init();
 8009018:	f008 fb32 	bl	8011680 <touchgfx_init>
}
 800901c:	bf00      	nop
 800901e:	bd80      	pop	{r7, pc}

08009020 <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 8009020:	b580      	push	{r7, lr}
 8009022:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8009024:	f008 fb5e 	bl	80116e4 <touchgfx_taskEntry>
}
 8009028:	bf00      	nop
 800902a:	bd80      	pop	{r7, pc}

0800902c <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 800902c:	b480      	push	{r7}
 800902e:	b083      	sub	sp, #12
 8009030:	af00      	add	r7, sp, #0
 8009032:	6078      	str	r0, [r7, #4]
    {
 8009034:	4a04      	ldr	r2, [pc, #16]	; (8009048 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 8009036:	687b      	ldr	r3, [r7, #4]
 8009038:	601a      	str	r2, [r3, #0]
    }
 800903a:	687b      	ldr	r3, [r7, #4]
 800903c:	4618      	mov	r0, r3
 800903e:	370c      	adds	r7, #12
 8009040:	46bd      	mov	sp, r7
 8009042:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009046:	4770      	bx	lr
 8009048:	0802dc98 	.word	0x0802dc98

0800904c <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 800904c:	b580      	push	{r7, lr}
 800904e:	b082      	sub	sp, #8
 8009050:	af00      	add	r7, sp, #0
 8009052:	6078      	str	r0, [r7, #4]
    }
 8009054:	6878      	ldr	r0, [r7, #4]
 8009056:	f7ff ffe9 	bl	800902c <_ZN8touchgfx12FontProviderD1Ev>
 800905a:	2104      	movs	r1, #4
 800905c:	6878      	ldr	r0, [r7, #4]
 800905e:	f021 f8d6 	bl	802a20e <_ZdlPvj>
 8009062:	687b      	ldr	r3, [r7, #4]
 8009064:	4618      	mov	r0, r3
 8009066:	3708      	adds	r7, #8
 8009068:	46bd      	mov	sp, r7
 800906a:	bd80      	pop	{r7, pc}

0800906c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800906c:	b580      	push	{r7, lr}
 800906e:	b082      	sub	sp, #8
 8009070:	af00      	add	r7, sp, #0
 8009072:	6078      	str	r0, [r7, #4]
 8009074:	460b      	mov	r3, r1
 8009076:	807b      	strh	r3, [r7, #2]
    switch (typography)
 8009078:	887b      	ldrh	r3, [r7, #2]
 800907a:	2b02      	cmp	r3, #2
 800907c:	d010      	beq.n	80090a0 <_ZN23ApplicationFontProvider7getFontEt+0x34>
 800907e:	2b02      	cmp	r3, #2
 8009080:	dc13      	bgt.n	80090aa <_ZN23ApplicationFontProvider7getFontEt+0x3e>
 8009082:	2b00      	cmp	r3, #0
 8009084:	d002      	beq.n	800908c <_ZN23ApplicationFontProvider7getFontEt+0x20>
 8009086:	2b01      	cmp	r3, #1
 8009088:	d005      	beq.n	8009096 <_ZN23ApplicationFontProvider7getFontEt+0x2a>
 800908a:	e00e      	b.n	80090aa <_ZN23ApplicationFontProvider7getFontEt+0x3e>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800908c:	f006 fd50 	bl	800fb30 <_ZN17TypedTextDatabase8getFontsEv>
 8009090:	4603      	mov	r3, r0
 8009092:	681b      	ldr	r3, [r3, #0]
 8009094:	e00a      	b.n	80090ac <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8009096:	f006 fd4b 	bl	800fb30 <_ZN17TypedTextDatabase8getFontsEv>
 800909a:	4603      	mov	r3, r0
 800909c:	685b      	ldr	r3, [r3, #4]
 800909e:	e005      	b.n	80090ac <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80090a0:	f006 fd46 	bl	800fb30 <_ZN17TypedTextDatabase8getFontsEv>
 80090a4:	4603      	mov	r3, r0
 80090a6:	689b      	ldr	r3, [r3, #8]
 80090a8:	e000      	b.n	80090ac <_ZN23ApplicationFontProvider7getFontEt+0x40>
    default:
        return 0;
 80090aa:	2300      	movs	r3, #0
    }
}
 80090ac:	4618      	mov	r0, r3
 80090ae:	3708      	adds	r7, #8
 80090b0:	46bd      	mov	sp, r7
 80090b2:	bd80      	pop	{r7, pc}

080090b4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80090b4:	b580      	push	{r7, lr}
 80090b6:	b082      	sub	sp, #8
 80090b8:	af00      	add	r7, sp, #0
 80090ba:	6078      	str	r0, [r7, #4]
 80090bc:	4a05      	ldr	r2, [pc, #20]	; (80090d4 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 80090be:	687b      	ldr	r3, [r7, #4]
 80090c0:	601a      	str	r2, [r3, #0]
 80090c2:	687b      	ldr	r3, [r7, #4]
 80090c4:	4618      	mov	r0, r3
 80090c6:	f7ff ffb1 	bl	800902c <_ZN8touchgfx12FontProviderD1Ev>
 80090ca:	687b      	ldr	r3, [r7, #4]
 80090cc:	4618      	mov	r0, r3
 80090ce:	3708      	adds	r7, #8
 80090d0:	46bd      	mov	sp, r7
 80090d2:	bd80      	pop	{r7, pc}
 80090d4:	0802dc84 	.word	0x0802dc84

080090d8 <_ZN23ApplicationFontProviderD0Ev>:
 80090d8:	b580      	push	{r7, lr}
 80090da:	b082      	sub	sp, #8
 80090dc:	af00      	add	r7, sp, #0
 80090de:	6078      	str	r0, [r7, #4]
 80090e0:	6878      	ldr	r0, [r7, #4]
 80090e2:	f7ff ffe7 	bl	80090b4 <_ZN23ApplicationFontProviderD1Ev>
 80090e6:	2104      	movs	r1, #4
 80090e8:	6878      	ldr	r0, [r7, #4]
 80090ea:	f021 f890 	bl	802a20e <_ZdlPvj>
 80090ee:	687b      	ldr	r3, [r7, #4]
 80090f0:	4618      	mov	r0, r3
 80090f2:	3708      	adds	r7, #8
 80090f4:	46bd      	mov	sp, r7
 80090f6:	bd80      	pop	{r7, pc}

080090f8 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 80090f8:	b480      	push	{r7}
 80090fa:	b083      	sub	sp, #12
 80090fc:	af00      	add	r7, sp, #0
 80090fe:	6078      	str	r0, [r7, #4]
    {
 8009100:	4a04      	ldr	r2, [pc, #16]	; (8009114 <_ZN8touchgfx4FontD1Ev+0x1c>)
 8009102:	687b      	ldr	r3, [r7, #4]
 8009104:	601a      	str	r2, [r3, #0]
    }
 8009106:	687b      	ldr	r3, [r7, #4]
 8009108:	4618      	mov	r0, r3
 800910a:	370c      	adds	r7, #12
 800910c:	46bd      	mov	sp, r7
 800910e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009112:	4770      	bx	lr
 8009114:	0802e48c 	.word	0x0802e48c

08009118 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 8009118:	b580      	push	{r7, lr}
 800911a:	b082      	sub	sp, #8
 800911c:	af00      	add	r7, sp, #0
 800911e:	6078      	str	r0, [r7, #4]
    }
 8009120:	6878      	ldr	r0, [r7, #4]
 8009122:	f7ff ffe9 	bl	80090f8 <_ZN8touchgfx4FontD1Ev>
 8009126:	2114      	movs	r1, #20
 8009128:	6878      	ldr	r0, [r7, #4]
 800912a:	f021 f870 	bl	802a20e <_ZdlPvj>
 800912e:	687b      	ldr	r3, [r7, #4]
 8009130:	4618      	mov	r0, r3
 8009132:	3708      	adds	r7, #8
 8009134:	46bd      	mov	sp, r7
 8009136:	bd80      	pop	{r7, pc}

08009138 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8009138:	b590      	push	{r4, r7, lr}
 800913a:	b087      	sub	sp, #28
 800913c:	af00      	add	r7, sp, #0
 800913e:	6078      	str	r0, [r7, #4]
 8009140:	460b      	mov	r3, r1
 8009142:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 8009144:	887b      	ldrh	r3, [r7, #2]
 8009146:	2b00      	cmp	r3, #0
 8009148:	d101      	bne.n	800914e <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 800914a:	2300      	movs	r3, #0
 800914c:	e010      	b.n	8009170 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 800914e:	2300      	movs	r3, #0
 8009150:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 8009152:	2300      	movs	r3, #0
 8009154:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8009156:	687b      	ldr	r3, [r7, #4]
 8009158:	681b      	ldr	r3, [r3, #0]
 800915a:	3308      	adds	r3, #8
 800915c:	681c      	ldr	r4, [r3, #0]
 800915e:	f107 030f 	add.w	r3, r7, #15
 8009162:	f107 0210 	add.w	r2, r7, #16
 8009166:	8879      	ldrh	r1, [r7, #2]
 8009168:	6878      	ldr	r0, [r7, #4]
 800916a:	47a0      	blx	r4
 800916c:	6178      	str	r0, [r7, #20]
        return glyph;
 800916e:	697b      	ldr	r3, [r7, #20]
    }
 8009170:	4618      	mov	r0, r3
 8009172:	371c      	adds	r7, #28
 8009174:	46bd      	mov	sp, r7
 8009176:	bd90      	pop	{r4, r7, pc}

08009178 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 8009178:	b480      	push	{r7}
 800917a:	b083      	sub	sp, #12
 800917c:	af00      	add	r7, sp, #0
 800917e:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 8009180:	687b      	ldr	r3, [r7, #4]
 8009182:	89db      	ldrh	r3, [r3, #14]
    }
 8009184:	4618      	mov	r0, r3
 8009186:	370c      	adds	r7, #12
 8009188:	46bd      	mov	sp, r7
 800918a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800918e:	4770      	bx	lr

08009190 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 8009190:	b480      	push	{r7}
 8009192:	b083      	sub	sp, #12
 8009194:	af00      	add	r7, sp, #0
 8009196:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 8009198:	687b      	ldr	r3, [r7, #4]
 800919a:	8a1b      	ldrh	r3, [r3, #16]
    }
 800919c:	4618      	mov	r0, r3
 800919e:	370c      	adds	r7, #12
 80091a0:	46bd      	mov	sp, r7
 80091a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091a6:	4770      	bx	lr

080091a8 <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 80091a8:	b480      	push	{r7}
 80091aa:	b083      	sub	sp, #12
 80091ac:	af00      	add	r7, sp, #0
 80091ae:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 80091b0:	687b      	ldr	r3, [r7, #4]
 80091b2:	88db      	ldrh	r3, [r3, #6]
    }
 80091b4:	4618      	mov	r0, r3
 80091b6:	370c      	adds	r7, #12
 80091b8:	46bd      	mov	sp, r7
 80091ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091be:	4770      	bx	lr

080091c0 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 80091c0:	b480      	push	{r7}
 80091c2:	b083      	sub	sp, #12
 80091c4:	af00      	add	r7, sp, #0
 80091c6:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 80091c8:	687b      	ldr	r3, [r7, #4]
 80091ca:	889b      	ldrh	r3, [r3, #4]
    }
 80091cc:	4618      	mov	r0, r3
 80091ce:	370c      	adds	r7, #12
 80091d0:	46bd      	mov	sp, r7
 80091d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091d6:	4770      	bx	lr

080091d8 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 80091d8:	b480      	push	{r7}
 80091da:	b083      	sub	sp, #12
 80091dc:	af00      	add	r7, sp, #0
 80091de:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 80091e0:	687b      	ldr	r3, [r7, #4]
 80091e2:	7a9b      	ldrb	r3, [r3, #10]
 80091e4:	f3c3 0306 	ubfx	r3, r3, #0, #7
 80091e8:	b2db      	uxtb	r3, r3
    }
 80091ea:	4618      	mov	r0, r3
 80091ec:	370c      	adds	r7, #12
 80091ee:	46bd      	mov	sp, r7
 80091f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091f4:	4770      	bx	lr

080091f6 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 80091f6:	b480      	push	{r7}
 80091f8:	b083      	sub	sp, #12
 80091fa:	af00      	add	r7, sp, #0
 80091fc:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 80091fe:	687b      	ldr	r3, [r7, #4]
 8009200:	7a9b      	ldrb	r3, [r3, #10]
 8009202:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8009206:	b2db      	uxtb	r3, r3
    }
 8009208:	4618      	mov	r0, r3
 800920a:	370c      	adds	r7, #12
 800920c:	46bd      	mov	sp, r7
 800920e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009212:	4770      	bx	lr

08009214 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 8009214:	b580      	push	{r7, lr}
 8009216:	b082      	sub	sp, #8
 8009218:	af00      	add	r7, sp, #0
 800921a:	6078      	str	r0, [r7, #4]
 800921c:	4a05      	ldr	r2, [pc, #20]	; (8009234 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 800921e:	687b      	ldr	r3, [r7, #4]
 8009220:	601a      	str	r2, [r3, #0]
 8009222:	687b      	ldr	r3, [r7, #4]
 8009224:	4618      	mov	r0, r3
 8009226:	f7ff ff67 	bl	80090f8 <_ZN8touchgfx4FontD1Ev>
 800922a:	687b      	ldr	r3, [r7, #4]
 800922c:	4618      	mov	r0, r3
 800922e:	3708      	adds	r7, #8
 8009230:	46bd      	mov	sp, r7
 8009232:	bd80      	pop	{r7, pc}
 8009234:	0802f8c0 	.word	0x0802f8c0

08009238 <_ZN8touchgfx9ConstFontD0Ev>:
 8009238:	b580      	push	{r7, lr}
 800923a:	b082      	sub	sp, #8
 800923c:	af00      	add	r7, sp, #0
 800923e:	6078      	str	r0, [r7, #4]
 8009240:	6878      	ldr	r0, [r7, #4]
 8009242:	f7ff ffe7 	bl	8009214 <_ZN8touchgfx9ConstFontD1Ev>
 8009246:	211c      	movs	r1, #28
 8009248:	6878      	ldr	r0, [r7, #4]
 800924a:	f020 ffe0 	bl	802a20e <_ZdlPvj>
 800924e:	687b      	ldr	r3, [r7, #4]
 8009250:	4618      	mov	r0, r3
 8009252:	3708      	adds	r7, #8
 8009254:	46bd      	mov	sp, r7
 8009256:	bd80      	pop	{r7, pc}

08009258 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 8009258:	b580      	push	{r7, lr}
 800925a:	b082      	sub	sp, #8
 800925c:	af00      	add	r7, sp, #0
 800925e:	6078      	str	r0, [r7, #4]
 8009260:	4a05      	ldr	r2, [pc, #20]	; (8009278 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 8009262:	687b      	ldr	r3, [r7, #4]
 8009264:	601a      	str	r2, [r3, #0]
 8009266:	687b      	ldr	r3, [r7, #4]
 8009268:	4618      	mov	r0, r3
 800926a:	f7ff ffd3 	bl	8009214 <_ZN8touchgfx9ConstFontD1Ev>
 800926e:	687b      	ldr	r3, [r7, #4]
 8009270:	4618      	mov	r0, r3
 8009272:	3708      	adds	r7, #8
 8009274:	46bd      	mov	sp, r7
 8009276:	bd80      	pop	{r7, pc}
 8009278:	0802dcbc 	.word	0x0802dcbc

0800927c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800927c:	b580      	push	{r7, lr}
 800927e:	b082      	sub	sp, #8
 8009280:	af00      	add	r7, sp, #0
 8009282:	6078      	str	r0, [r7, #4]
 8009284:	6878      	ldr	r0, [r7, #4]
 8009286:	f7ff ffe7 	bl	8009258 <_ZN8touchgfx13GeneratedFontD1Ev>
 800928a:	212c      	movs	r1, #44	; 0x2c
 800928c:	6878      	ldr	r0, [r7, #4]
 800928e:	f020 ffbe 	bl	802a20e <_ZdlPvj>
 8009292:	687b      	ldr	r3, [r7, #4]
 8009294:	4618      	mov	r0, r3
 8009296:	3708      	adds	r7, #8
 8009298:	46bd      	mov	sp, r7
 800929a:	bd80      	pop	{r7, pc}

0800929c <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 800929c:	b480      	push	{r7}
 800929e:	b083      	sub	sp, #12
 80092a0:	af00      	add	r7, sp, #0
 80092a2:	6078      	str	r0, [r7, #4]
    {
 80092a4:	4a04      	ldr	r2, [pc, #16]	; (80092b8 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 80092a6:	687b      	ldr	r3, [r7, #4]
 80092a8:	601a      	str	r2, [r3, #0]
    }
 80092aa:	687b      	ldr	r3, [r7, #4]
 80092ac:	4618      	mov	r0, r3
 80092ae:	370c      	adds	r7, #12
 80092b0:	46bd      	mov	sp, r7
 80092b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092b6:	4770      	bx	lr
 80092b8:	0802dcac 	.word	0x0802dcac

080092bc <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80092bc:	b580      	push	{r7, lr}
 80092be:	b082      	sub	sp, #8
 80092c0:	af00      	add	r7, sp, #0
 80092c2:	6078      	str	r0, [r7, #4]
    }
 80092c4:	6878      	ldr	r0, [r7, #4]
 80092c6:	f7ff ffe9 	bl	800929c <_ZN8touchgfx9TypedTextD1Ev>
 80092ca:	2108      	movs	r1, #8
 80092cc:	6878      	ldr	r0, [r7, #4]
 80092ce:	f020 ff9e 	bl	802a20e <_ZdlPvj>
 80092d2:	687b      	ldr	r3, [r7, #4]
 80092d4:	4618      	mov	r0, r3
 80092d6:	3708      	adds	r7, #8
 80092d8:	46bd      	mov	sp, r7
 80092da:	bd80      	pop	{r7, pc}

080092dc <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 80092dc:	b480      	push	{r7}
 80092de:	b083      	sub	sp, #12
 80092e0:	af00      	add	r7, sp, #0
 80092e2:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 80092e4:	687b      	ldr	r3, [r7, #4]
 80092e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    }
 80092e8:	4618      	mov	r0, r3
 80092ea:	370c      	adds	r7, #12
 80092ec:	46bd      	mov	sp, r7
 80092ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092f2:	4770      	bx	lr

080092f4 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 80092f4:	b480      	push	{r7}
 80092f6:	b083      	sub	sp, #12
 80092f8:	af00      	add	r7, sp, #0
 80092fa:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 80092fc:	687b      	ldr	r3, [r7, #4]
 80092fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 8009300:	4618      	mov	r0, r3
 8009302:	370c      	adds	r7, #12
 8009304:	46bd      	mov	sp, r7
 8009306:	f85d 7b04 	ldr.w	r7, [sp], #4
 800930a:	4770      	bx	lr

0800930c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800930c:	b580      	push	{r7, lr}
 800930e:	b08e      	sub	sp, #56	; 0x38
 8009310:	af0a      	add	r7, sp, #40	; 0x28
 8009312:	60f8      	str	r0, [r7, #12]
 8009314:	60b9      	str	r1, [r7, #8]
 8009316:	4611      	mov	r1, r2
 8009318:	461a      	mov	r2, r3
 800931a:	460b      	mov	r3, r1
 800931c:	80fb      	strh	r3, [r7, #6]
 800931e:	4613      	mov	r3, r2
 8009320:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 8009322:	68f8      	ldr	r0, [r7, #12]
 8009324:	88b9      	ldrh	r1, [r7, #4]
 8009326:	88fa      	ldrh	r2, [r7, #6]
 8009328:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 800932c:	9308      	str	r3, [sp, #32]
 800932e:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 8009330:	9307      	str	r3, [sp, #28]
 8009332:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 8009336:	9306      	str	r3, [sp, #24]
 8009338:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800933c:	9305      	str	r3, [sp, #20]
 800933e:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8009342:	9304      	str	r3, [sp, #16]
 8009344:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8009348:	9303      	str	r3, [sp, #12]
 800934a:	f897 3020 	ldrb.w	r3, [r7, #32]
 800934e:	9302      	str	r3, [sp, #8]
 8009350:	7f3b      	ldrb	r3, [r7, #28]
 8009352:	9301      	str	r3, [sp, #4]
 8009354:	8b3b      	ldrh	r3, [r7, #24]
 8009356:	9300      	str	r3, [sp, #0]
 8009358:	460b      	mov	r3, r1
 800935a:	68b9      	ldr	r1, [r7, #8]
 800935c:	f010 fe68 	bl	801a030 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8009360:	4a09      	ldr	r2, [pc, #36]	; (8009388 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 8009362:	68fb      	ldr	r3, [r7, #12]
 8009364:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 8009366:	68fb      	ldr	r3, [r7, #12]
 8009368:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800936a:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 800936c:	68fb      	ldr	r3, [r7, #12]
 800936e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8009370:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 8009372:	68fb      	ldr	r3, [r7, #12]
 8009374:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8009376:	625a      	str	r2, [r3, #36]	; 0x24
      arabicTable(formsTable)
 8009378:	68fb      	ldr	r3, [r7, #12]
 800937a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800937c:	629a      	str	r2, [r3, #40]	; 0x28
{
}
 800937e:	68fb      	ldr	r3, [r7, #12]
 8009380:	4618      	mov	r0, r3
 8009382:	3710      	adds	r7, #16
 8009384:	46bd      	mov	sp, r7
 8009386:	bd80      	pop	{r7, pc}
 8009388:	0802dcbc 	.word	0x0802dcbc

0800938c <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 800938c:	b480      	push	{r7}
 800938e:	b085      	sub	sp, #20
 8009390:	af00      	add	r7, sp, #0
 8009392:	6078      	str	r0, [r7, #4]
 8009394:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 8009396:	687b      	ldr	r3, [r7, #4]
 8009398:	69db      	ldr	r3, [r3, #28]
 800939a:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800939c:	683b      	ldr	r3, [r7, #0]
 800939e:	889b      	ldrh	r3, [r3, #4]
 80093a0:	0adb      	lsrs	r3, r3, #11
 80093a2:	b29b      	uxth	r3, r3
 80093a4:	009b      	lsls	r3, r3, #2
 80093a6:	68fa      	ldr	r2, [r7, #12]
 80093a8:	4413      	add	r3, r2
 80093aa:	681a      	ldr	r2, [r3, #0]
 80093ac:	683b      	ldr	r3, [r7, #0]
 80093ae:	681b      	ldr	r3, [r3, #0]
 80093b0:	4413      	add	r3, r2
}
 80093b2:	4618      	mov	r0, r3
 80093b4:	3714      	adds	r7, #20
 80093b6:	46bd      	mov	sp, r7
 80093b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093bc:	4770      	bx	lr

080093be <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80093be:	b480      	push	{r7}
 80093c0:	b089      	sub	sp, #36	; 0x24
 80093c2:	af00      	add	r7, sp, #0
 80093c4:	60f8      	str	r0, [r7, #12]
 80093c6:	460b      	mov	r3, r1
 80093c8:	607a      	str	r2, [r7, #4]
 80093ca:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 80093cc:	687b      	ldr	r3, [r7, #4]
 80093ce:	2b00      	cmp	r3, #0
 80093d0:	d003      	beq.n	80093da <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80093d2:	687b      	ldr	r3, [r7, #4]
 80093d4:	7b1b      	ldrb	r3, [r3, #12]
 80093d6:	2b00      	cmp	r3, #0
 80093d8:	d101      	bne.n	80093de <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 80093da:	2300      	movs	r3, #0
 80093dc:	e031      	b.n	8009442 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80093de:	68fb      	ldr	r3, [r7, #12]
 80093e0:	6a1a      	ldr	r2, [r3, #32]
 80093e2:	687b      	ldr	r3, [r7, #4]
 80093e4:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80093e6:	697b      	ldr	r3, [r7, #20]
 80093e8:	7b5b      	ldrb	r3, [r3, #13]
 80093ea:	021b      	lsls	r3, r3, #8
 80093ec:	b21b      	sxth	r3, r3
 80093ee:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80093f2:	b219      	sxth	r1, r3
 80093f4:	697b      	ldr	r3, [r7, #20]
 80093f6:	7adb      	ldrb	r3, [r3, #11]
 80093f8:	b21b      	sxth	r3, r3
 80093fa:	430b      	orrs	r3, r1
 80093fc:	b21b      	sxth	r3, r3
 80093fe:	b29b      	uxth	r3, r3
 8009400:	009b      	lsls	r3, r3, #2
 8009402:	4413      	add	r3, r2
 8009404:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8009406:	687b      	ldr	r3, [r7, #4]
 8009408:	7b1b      	ldrb	r3, [r3, #12]
 800940a:	837b      	strh	r3, [r7, #26]
 800940c:	e013      	b.n	8009436 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 800940e:	69fb      	ldr	r3, [r7, #28]
 8009410:	881b      	ldrh	r3, [r3, #0]
 8009412:	897a      	ldrh	r2, [r7, #10]
 8009414:	429a      	cmp	r2, r3
 8009416:	d103      	bne.n	8009420 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 8009418:	69fb      	ldr	r3, [r7, #28]
 800941a:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800941e:	e010      	b.n	8009442 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 8009420:	69fb      	ldr	r3, [r7, #28]
 8009422:	881b      	ldrh	r3, [r3, #0]
 8009424:	897a      	ldrh	r2, [r7, #10]
 8009426:	429a      	cmp	r2, r3
 8009428:	d309      	bcc.n	800943e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800942a:	8b7b      	ldrh	r3, [r7, #26]
 800942c:	3b01      	subs	r3, #1
 800942e:	837b      	strh	r3, [r7, #26]
 8009430:	69fb      	ldr	r3, [r7, #28]
 8009432:	3304      	adds	r3, #4
 8009434:	61fb      	str	r3, [r7, #28]
 8009436:	8b7b      	ldrh	r3, [r7, #26]
 8009438:	2b00      	cmp	r3, #0
 800943a:	d1e8      	bne.n	800940e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 800943c:	e000      	b.n	8009440 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 800943e:	bf00      	nop
        }
    }
    return 0;
 8009440:	2300      	movs	r3, #0
}
 8009442:	4618      	mov	r0, r3
 8009444:	3724      	adds	r7, #36	; 0x24
 8009446:	46bd      	mov	sp, r7
 8009448:	f85d 7b04 	ldr.w	r7, [sp], #4
 800944c:	4770      	bx	lr
	...

08009450 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8009450:	b580      	push	{r7, lr}
 8009452:	af00      	add	r7, sp, #0
 8009454:	4801      	ldr	r0, [pc, #4]	; (800945c <__tcf_0+0xc>)
 8009456:	f7ff feff 	bl	8009258 <_ZN8touchgfx13GeneratedFontD1Ev>
 800945a:	bd80      	pop	{r7, pc}
 800945c:	20000464 	.word	0x20000464

08009460 <_Z23getFont_verdana_10_4bppv>:
{
 8009460:	b580      	push	{r7, lr}
 8009462:	b08e      	sub	sp, #56	; 0x38
 8009464:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8009466:	4b21      	ldr	r3, [pc, #132]	; (80094ec <_Z23getFont_verdana_10_4bppv+0x8c>)
 8009468:	681b      	ldr	r3, [r3, #0]
 800946a:	f3bf 8f5b 	dmb	ish
 800946e:	f003 0301 	and.w	r3, r3, #1
 8009472:	2b00      	cmp	r3, #0
 8009474:	bf0c      	ite	eq
 8009476:	2301      	moveq	r3, #1
 8009478:	2300      	movne	r3, #0
 800947a:	b2db      	uxtb	r3, r3
 800947c:	2b00      	cmp	r3, #0
 800947e:	d030      	beq.n	80094e2 <_Z23getFont_verdana_10_4bppv+0x82>
 8009480:	481a      	ldr	r0, [pc, #104]	; (80094ec <_Z23getFont_verdana_10_4bppv+0x8c>)
 8009482:	f020 fec6 	bl	802a212 <__cxa_guard_acquire>
 8009486:	4603      	mov	r3, r0
 8009488:	2b00      	cmp	r3, #0
 800948a:	bf14      	ite	ne
 800948c:	2301      	movne	r3, #1
 800948e:	2300      	moveq	r3, #0
 8009490:	b2db      	uxtb	r3, r3
 8009492:	2b00      	cmp	r3, #0
 8009494:	d025      	beq.n	80094e2 <_Z23getFont_verdana_10_4bppv+0x82>
 8009496:	2300      	movs	r3, #0
 8009498:	930c      	str	r3, [sp, #48]	; 0x30
 800949a:	2300      	movs	r3, #0
 800949c:	930b      	str	r3, [sp, #44]	; 0x2c
 800949e:	2300      	movs	r3, #0
 80094a0:	930a      	str	r3, [sp, #40]	; 0x28
 80094a2:	233f      	movs	r3, #63	; 0x3f
 80094a4:	9309      	str	r3, [sp, #36]	; 0x24
 80094a6:	4b12      	ldr	r3, [pc, #72]	; (80094f0 <_Z23getFont_verdana_10_4bppv+0x90>)
 80094a8:	9308      	str	r3, [sp, #32]
 80094aa:	4b12      	ldr	r3, [pc, #72]	; (80094f4 <_Z23getFont_verdana_10_4bppv+0x94>)
 80094ac:	9307      	str	r3, [sp, #28]
 80094ae:	2300      	movs	r3, #0
 80094b0:	9306      	str	r3, [sp, #24]
 80094b2:	2300      	movs	r3, #0
 80094b4:	9305      	str	r3, [sp, #20]
 80094b6:	2301      	movs	r3, #1
 80094b8:	9304      	str	r3, [sp, #16]
 80094ba:	2304      	movs	r3, #4
 80094bc:	9303      	str	r3, [sp, #12]
 80094be:	2300      	movs	r3, #0
 80094c0:	9302      	str	r3, [sp, #8]
 80094c2:	2300      	movs	r3, #0
 80094c4:	9301      	str	r3, [sp, #4]
 80094c6:	230a      	movs	r3, #10
 80094c8:	9300      	str	r3, [sp, #0]
 80094ca:	230a      	movs	r3, #10
 80094cc:	2201      	movs	r2, #1
 80094ce:	490a      	ldr	r1, [pc, #40]	; (80094f8 <_Z23getFont_verdana_10_4bppv+0x98>)
 80094d0:	480a      	ldr	r0, [pc, #40]	; (80094fc <_Z23getFont_verdana_10_4bppv+0x9c>)
 80094d2:	f7ff ff1b 	bl	800930c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80094d6:	480a      	ldr	r0, [pc, #40]	; (8009500 <_Z23getFont_verdana_10_4bppv+0xa0>)
 80094d8:	f021 fea8 	bl	802b22c <atexit>
 80094dc:	4803      	ldr	r0, [pc, #12]	; (80094ec <_Z23getFont_verdana_10_4bppv+0x8c>)
 80094de:	f020 fea4 	bl	802a22a <__cxa_guard_release>
    return verdana_10_4bpp;
 80094e2:	4b06      	ldr	r3, [pc, #24]	; (80094fc <_Z23getFont_verdana_10_4bppv+0x9c>)
}
 80094e4:	4618      	mov	r0, r3
 80094e6:	46bd      	mov	sp, r7
 80094e8:	bd80      	pop	{r7, pc}
 80094ea:	bf00      	nop
 80094ec:	20000490 	.word	0x20000490
 80094f0:	08034b50 	.word	0x08034b50
 80094f4:	08034d6c 	.word	0x08034d6c
 80094f8:	08034420 	.word	0x08034420
 80094fc:	20000464 	.word	0x20000464
 8009500:	08009451 	.word	0x08009451

08009504 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 95, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 0, 0, 0, 0);
 8009504:	b580      	push	{r7, lr}
 8009506:	af00      	add	r7, sp, #0
 8009508:	4801      	ldr	r0, [pc, #4]	; (8009510 <__tcf_0+0xc>)
 800950a:	f7ff fea5 	bl	8009258 <_ZN8touchgfx13GeneratedFontD1Ev>
 800950e:	bd80      	pop	{r7, pc}
 8009510:	20000494 	.word	0x20000494

08009514 <_Z23getFont_verdana_20_4bppv>:
{
 8009514:	b580      	push	{r7, lr}
 8009516:	b08e      	sub	sp, #56	; 0x38
 8009518:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 95, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 0, 0, 0, 0);
 800951a:	4b21      	ldr	r3, [pc, #132]	; (80095a0 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800951c:	681b      	ldr	r3, [r3, #0]
 800951e:	f3bf 8f5b 	dmb	ish
 8009522:	f003 0301 	and.w	r3, r3, #1
 8009526:	2b00      	cmp	r3, #0
 8009528:	bf0c      	ite	eq
 800952a:	2301      	moveq	r3, #1
 800952c:	2300      	movne	r3, #0
 800952e:	b2db      	uxtb	r3, r3
 8009530:	2b00      	cmp	r3, #0
 8009532:	d030      	beq.n	8009596 <_Z23getFont_verdana_20_4bppv+0x82>
 8009534:	481a      	ldr	r0, [pc, #104]	; (80095a0 <_Z23getFont_verdana_20_4bppv+0x8c>)
 8009536:	f020 fe6c 	bl	802a212 <__cxa_guard_acquire>
 800953a:	4603      	mov	r3, r0
 800953c:	2b00      	cmp	r3, #0
 800953e:	bf14      	ite	ne
 8009540:	2301      	movne	r3, #1
 8009542:	2300      	moveq	r3, #0
 8009544:	b2db      	uxtb	r3, r3
 8009546:	2b00      	cmp	r3, #0
 8009548:	d025      	beq.n	8009596 <_Z23getFont_verdana_20_4bppv+0x82>
 800954a:	2300      	movs	r3, #0
 800954c:	930c      	str	r3, [sp, #48]	; 0x30
 800954e:	2300      	movs	r3, #0
 8009550:	930b      	str	r3, [sp, #44]	; 0x2c
 8009552:	2300      	movs	r3, #0
 8009554:	930a      	str	r3, [sp, #40]	; 0x28
 8009556:	2300      	movs	r3, #0
 8009558:	9309      	str	r3, [sp, #36]	; 0x24
 800955a:	4b12      	ldr	r3, [pc, #72]	; (80095a4 <_Z23getFont_verdana_20_4bppv+0x90>)
 800955c:	9308      	str	r3, [sp, #32]
 800955e:	4b12      	ldr	r3, [pc, #72]	; (80095a8 <_Z23getFont_verdana_20_4bppv+0x94>)
 8009560:	9307      	str	r3, [sp, #28]
 8009562:	2301      	movs	r3, #1
 8009564:	9306      	str	r3, [sp, #24]
 8009566:	2301      	movs	r3, #1
 8009568:	9305      	str	r3, [sp, #20]
 800956a:	2301      	movs	r3, #1
 800956c:	9304      	str	r3, [sp, #16]
 800956e:	2304      	movs	r3, #4
 8009570:	9303      	str	r3, [sp, #12]
 8009572:	2300      	movs	r3, #0
 8009574:	9302      	str	r3, [sp, #8]
 8009576:	2300      	movs	r3, #0
 8009578:	9301      	str	r3, [sp, #4]
 800957a:	2314      	movs	r3, #20
 800957c:	9300      	str	r3, [sp, #0]
 800957e:	2318      	movs	r3, #24
 8009580:	225f      	movs	r2, #95	; 0x5f
 8009582:	490a      	ldr	r1, [pc, #40]	; (80095ac <_Z23getFont_verdana_20_4bppv+0x98>)
 8009584:	480a      	ldr	r0, [pc, #40]	; (80095b0 <_Z23getFont_verdana_20_4bppv+0x9c>)
 8009586:	f7ff fec1 	bl	800930c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800958a:	480a      	ldr	r0, [pc, #40]	; (80095b4 <_Z23getFont_verdana_20_4bppv+0xa0>)
 800958c:	f021 fe4e 	bl	802b22c <atexit>
 8009590:	4803      	ldr	r0, [pc, #12]	; (80095a0 <_Z23getFont_verdana_20_4bppv+0x8c>)
 8009592:	f020 fe4a 	bl	802a22a <__cxa_guard_release>
    return verdana_20_4bpp;
 8009596:	4b06      	ldr	r3, [pc, #24]	; (80095b0 <_Z23getFont_verdana_20_4bppv+0x9c>)
}
 8009598:	4618      	mov	r0, r3
 800959a:	46bd      	mov	sp, r7
 800959c:	bd80      	pop	{r7, pc}
 800959e:	bf00      	nop
 80095a0:	200004c0 	.word	0x200004c0
 80095a4:	08034b54 	.word	0x08034b54
 80095a8:	08034d70 	.word	0x08034d70
 80095ac:	08034430 	.word	0x08034430
 80095b0:	20000494 	.word	0x20000494
 80095b4:	08009505 	.word	0x08009505

080095b8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 35, 48, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80095b8:	b580      	push	{r7, lr}
 80095ba:	af00      	add	r7, sp, #0
 80095bc:	4801      	ldr	r0, [pc, #4]	; (80095c4 <__tcf_0+0xc>)
 80095be:	f7ff fe4b 	bl	8009258 <_ZN8touchgfx13GeneratedFontD1Ev>
 80095c2:	bd80      	pop	{r7, pc}
 80095c4:	200004c4 	.word	0x200004c4

080095c8 <_Z23getFont_verdana_40_4bppv>:
{
 80095c8:	b580      	push	{r7, lr}
 80095ca:	b08e      	sub	sp, #56	; 0x38
 80095cc:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 35, 48, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80095ce:	4b21      	ldr	r3, [pc, #132]	; (8009654 <_Z23getFont_verdana_40_4bppv+0x8c>)
 80095d0:	681b      	ldr	r3, [r3, #0]
 80095d2:	f3bf 8f5b 	dmb	ish
 80095d6:	f003 0301 	and.w	r3, r3, #1
 80095da:	2b00      	cmp	r3, #0
 80095dc:	bf0c      	ite	eq
 80095de:	2301      	moveq	r3, #1
 80095e0:	2300      	movne	r3, #0
 80095e2:	b2db      	uxtb	r3, r3
 80095e4:	2b00      	cmp	r3, #0
 80095e6:	d030      	beq.n	800964a <_Z23getFont_verdana_40_4bppv+0x82>
 80095e8:	481a      	ldr	r0, [pc, #104]	; (8009654 <_Z23getFont_verdana_40_4bppv+0x8c>)
 80095ea:	f020 fe12 	bl	802a212 <__cxa_guard_acquire>
 80095ee:	4603      	mov	r3, r0
 80095f0:	2b00      	cmp	r3, #0
 80095f2:	bf14      	ite	ne
 80095f4:	2301      	movne	r3, #1
 80095f6:	2300      	moveq	r3, #0
 80095f8:	b2db      	uxtb	r3, r3
 80095fa:	2b00      	cmp	r3, #0
 80095fc:	d025      	beq.n	800964a <_Z23getFont_verdana_40_4bppv+0x82>
 80095fe:	2300      	movs	r3, #0
 8009600:	930c      	str	r3, [sp, #48]	; 0x30
 8009602:	2300      	movs	r3, #0
 8009604:	930b      	str	r3, [sp, #44]	; 0x2c
 8009606:	2300      	movs	r3, #0
 8009608:	930a      	str	r3, [sp, #40]	; 0x28
 800960a:	233f      	movs	r3, #63	; 0x3f
 800960c:	9309      	str	r3, [sp, #36]	; 0x24
 800960e:	4b12      	ldr	r3, [pc, #72]	; (8009658 <_Z23getFont_verdana_40_4bppv+0x90>)
 8009610:	9308      	str	r3, [sp, #32]
 8009612:	4b12      	ldr	r3, [pc, #72]	; (800965c <_Z23getFont_verdana_40_4bppv+0x94>)
 8009614:	9307      	str	r3, [sp, #28]
 8009616:	2301      	movs	r3, #1
 8009618:	9306      	str	r3, [sp, #24]
 800961a:	2300      	movs	r3, #0
 800961c:	9305      	str	r3, [sp, #20]
 800961e:	2301      	movs	r3, #1
 8009620:	9304      	str	r3, [sp, #16]
 8009622:	2304      	movs	r3, #4
 8009624:	9303      	str	r3, [sp, #12]
 8009626:	2300      	movs	r3, #0
 8009628:	9302      	str	r3, [sp, #8]
 800962a:	2300      	movs	r3, #0
 800962c:	9301      	str	r3, [sp, #4]
 800962e:	2328      	movs	r3, #40	; 0x28
 8009630:	9300      	str	r3, [sp, #0]
 8009632:	2330      	movs	r3, #48	; 0x30
 8009634:	2223      	movs	r2, #35	; 0x23
 8009636:	490a      	ldr	r1, [pc, #40]	; (8009660 <_Z23getFont_verdana_40_4bppv+0x98>)
 8009638:	480a      	ldr	r0, [pc, #40]	; (8009664 <_Z23getFont_verdana_40_4bppv+0x9c>)
 800963a:	f7ff fe67 	bl	800930c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800963e:	480a      	ldr	r0, [pc, #40]	; (8009668 <_Z23getFont_verdana_40_4bppv+0xa0>)
 8009640:	f021 fdf4 	bl	802b22c <atexit>
 8009644:	4803      	ldr	r0, [pc, #12]	; (8009654 <_Z23getFont_verdana_40_4bppv+0x8c>)
 8009646:	f020 fdf0 	bl	802a22a <__cxa_guard_release>
    return verdana_40_4bpp;
 800964a:	4b06      	ldr	r3, [pc, #24]	; (8009664 <_Z23getFont_verdana_40_4bppv+0x9c>)
}
 800964c:	4618      	mov	r0, r3
 800964e:	46bd      	mov	sp, r7
 8009650:	bd80      	pop	{r7, pc}
 8009652:	bf00      	nop
 8009654:	200004f0 	.word	0x200004f0
 8009658:	08034cf8 	.word	0x08034cf8
 800965c:	08034d74 	.word	0x08034d74
 8009660:	08034964 	.word	0x08034964
 8009664:	200004c4 	.word	0x200004c4
 8009668:	080095b9 	.word	0x080095b9

0800966c <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 800966c:	b480      	push	{r7}
 800966e:	b083      	sub	sp, #12
 8009670:	af00      	add	r7, sp, #0
 8009672:	6078      	str	r0, [r7, #4]
 8009674:	6039      	str	r1, [r7, #0]
        : color(col)
 8009676:	687b      	ldr	r3, [r7, #4]
 8009678:	683a      	ldr	r2, [r7, #0]
 800967a:	601a      	str	r2, [r3, #0]
    {
    }
 800967c:	687b      	ldr	r3, [r7, #4]
 800967e:	4618      	mov	r0, r3
 8009680:	370c      	adds	r7, #12
 8009682:	46bd      	mov	sp, r7
 8009684:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009688:	4770      	bx	lr

0800968a <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 800968a:	b480      	push	{r7}
 800968c:	b083      	sub	sp, #12
 800968e:	af00      	add	r7, sp, #0
 8009690:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 8009692:	687b      	ldr	r3, [r7, #4]
 8009694:	2200      	movs	r2, #0
 8009696:	801a      	strh	r2, [r3, #0]
 8009698:	687b      	ldr	r3, [r7, #4]
 800969a:	2200      	movs	r2, #0
 800969c:	805a      	strh	r2, [r3, #2]
 800969e:	687b      	ldr	r3, [r7, #4]
 80096a0:	2200      	movs	r2, #0
 80096a2:	809a      	strh	r2, [r3, #4]
 80096a4:	687b      	ldr	r3, [r7, #4]
 80096a6:	2200      	movs	r2, #0
 80096a8:	80da      	strh	r2, [r3, #6]
    {
    }
 80096aa:	687b      	ldr	r3, [r7, #4]
 80096ac:	4618      	mov	r0, r3
 80096ae:	370c      	adds	r7, #12
 80096b0:	46bd      	mov	sp, r7
 80096b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096b6:	4770      	bx	lr

080096b8 <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 80096b8:	b480      	push	{r7}
 80096ba:	b085      	sub	sp, #20
 80096bc:	af00      	add	r7, sp, #0
 80096be:	60f8      	str	r0, [r7, #12]
 80096c0:	4608      	mov	r0, r1
 80096c2:	4611      	mov	r1, r2
 80096c4:	461a      	mov	r2, r3
 80096c6:	4603      	mov	r3, r0
 80096c8:	817b      	strh	r3, [r7, #10]
 80096ca:	460b      	mov	r3, r1
 80096cc:	813b      	strh	r3, [r7, #8]
 80096ce:	4613      	mov	r3, r2
 80096d0:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80096d2:	68fb      	ldr	r3, [r7, #12]
 80096d4:	897a      	ldrh	r2, [r7, #10]
 80096d6:	801a      	strh	r2, [r3, #0]
 80096d8:	68fb      	ldr	r3, [r7, #12]
 80096da:	893a      	ldrh	r2, [r7, #8]
 80096dc:	805a      	strh	r2, [r3, #2]
 80096de:	68fb      	ldr	r3, [r7, #12]
 80096e0:	88fa      	ldrh	r2, [r7, #6]
 80096e2:	809a      	strh	r2, [r3, #4]
 80096e4:	68fb      	ldr	r3, [r7, #12]
 80096e6:	8b3a      	ldrh	r2, [r7, #24]
 80096e8:	80da      	strh	r2, [r3, #6]
    {
    }
 80096ea:	68fb      	ldr	r3, [r7, #12]
 80096ec:	4618      	mov	r0, r3
 80096ee:	3714      	adds	r7, #20
 80096f0:	46bd      	mov	sp, r7
 80096f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096f6:	4770      	bx	lr

080096f8 <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 80096f8:	b480      	push	{r7}
 80096fa:	b083      	sub	sp, #12
 80096fc:	af00      	add	r7, sp, #0
 80096fe:	6078      	str	r0, [r7, #4]
 8009700:	460b      	mov	r3, r1
 8009702:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 8009704:	687b      	ldr	r3, [r7, #4]
 8009706:	887a      	ldrh	r2, [r7, #2]
 8009708:	801a      	strh	r2, [r3, #0]
    {
    }
 800970a:	687b      	ldr	r3, [r7, #4]
 800970c:	4618      	mov	r0, r3
 800970e:	370c      	adds	r7, #12
 8009710:	46bd      	mov	sp, r7
 8009712:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009716:	4770      	bx	lr

08009718 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 8009718:	b580      	push	{r7, lr}
 800971a:	b082      	sub	sp, #8
 800971c:	af00      	add	r7, sp, #0
 800971e:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 8009720:	4a14      	ldr	r2, [pc, #80]	; (8009774 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 8009722:	687b      	ldr	r3, [r7, #4]
 8009724:	601a      	str	r2, [r3, #0]
        : rect(),
 8009726:	687b      	ldr	r3, [r7, #4]
 8009728:	3304      	adds	r3, #4
 800972a:	4618      	mov	r0, r3
 800972c:	f7ff ffad 	bl	800968a <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 8009730:	687b      	ldr	r3, [r7, #4]
 8009732:	330c      	adds	r3, #12
 8009734:	4618      	mov	r0, r3
 8009736:	f7ff ffa8 	bl	800968a <_ZN8touchgfx4RectC1Ev>
          parent(0),
 800973a:	687b      	ldr	r3, [r7, #4]
 800973c:	2200      	movs	r2, #0
 800973e:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 8009740:	687b      	ldr	r3, [r7, #4]
 8009742:	2200      	movs	r2, #0
 8009744:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 8009746:	687b      	ldr	r3, [r7, #4]
 8009748:	2200      	movs	r2, #0
 800974a:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 800974c:	687b      	ldr	r3, [r7, #4]
 800974e:	2200      	movs	r2, #0
 8009750:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 8009752:	687b      	ldr	r3, [r7, #4]
 8009754:	2200      	movs	r2, #0
 8009756:	845a      	strh	r2, [r3, #34]	; 0x22
          touchable(false),
 8009758:	687b      	ldr	r3, [r7, #4]
 800975a:	2200      	movs	r2, #0
 800975c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
          visible(true)
 8009760:	687b      	ldr	r3, [r7, #4]
 8009762:	2201      	movs	r2, #1
 8009764:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 8009768:	687b      	ldr	r3, [r7, #4]
 800976a:	4618      	mov	r0, r3
 800976c:	3708      	adds	r7, #8
 800976e:	46bd      	mov	sp, r7
 8009770:	bd80      	pop	{r7, pc}
 8009772:	bf00      	nop
 8009774:	0802f858 	.word	0x0802f858

08009778 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 8009778:	b480      	push	{r7}
 800977a:	b083      	sub	sp, #12
 800977c:	af00      	add	r7, sp, #0
 800977e:	6078      	str	r0, [r7, #4]
    {
 8009780:	4a04      	ldr	r2, [pc, #16]	; (8009794 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 8009782:	687b      	ldr	r3, [r7, #4]
 8009784:	601a      	str	r2, [r3, #0]
    }
 8009786:	687b      	ldr	r3, [r7, #4]
 8009788:	4618      	mov	r0, r3
 800978a:	370c      	adds	r7, #12
 800978c:	46bd      	mov	sp, r7
 800978e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009792:	4770      	bx	lr
 8009794:	0802f858 	.word	0x0802f858

08009798 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 8009798:	b580      	push	{r7, lr}
 800979a:	b082      	sub	sp, #8
 800979c:	af00      	add	r7, sp, #0
 800979e:	6078      	str	r0, [r7, #4]
    }
 80097a0:	6878      	ldr	r0, [r7, #4]
 80097a2:	f7ff ffe9 	bl	8009778 <_ZN8touchgfx8DrawableD1Ev>
 80097a6:	2128      	movs	r1, #40	; 0x28
 80097a8:	6878      	ldr	r0, [r7, #4]
 80097aa:	f020 fd30 	bl	802a20e <_ZdlPvj>
 80097ae:	687b      	ldr	r3, [r7, #4]
 80097b0:	4618      	mov	r0, r3
 80097b2:	3708      	adds	r7, #8
 80097b4:	46bd      	mov	sp, r7
 80097b6:	bd80      	pop	{r7, pc}

080097b8 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 80097b8:	b580      	push	{r7, lr}
 80097ba:	b082      	sub	sp, #8
 80097bc:	af00      	add	r7, sp, #0
 80097be:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 80097c0:	687b      	ldr	r3, [r7, #4]
 80097c2:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 80097c6:	2b00      	cmp	r3, #0
 80097c8:	d005      	beq.n	80097d6 <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 80097ca:	687b      	ldr	r3, [r7, #4]
 80097cc:	681b      	ldr	r3, [r3, #0]
 80097ce:	3314      	adds	r3, #20
 80097d0:	681b      	ldr	r3, [r3, #0]
 80097d2:	6878      	ldr	r0, [r7, #4]
 80097d4:	4798      	blx	r3
        }
    }
 80097d6:	bf00      	nop
 80097d8:	3708      	adds	r7, #8
 80097da:	46bd      	mov	sp, r7
 80097dc:	bd80      	pop	{r7, pc}

080097de <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 80097de:	b480      	push	{r7}
 80097e0:	b083      	sub	sp, #12
 80097e2:	af00      	add	r7, sp, #0
 80097e4:	6078      	str	r0, [r7, #4]
    {
        return 0;
 80097e6:	2300      	movs	r3, #0
    }
 80097e8:	4618      	mov	r0, r3
 80097ea:	370c      	adds	r7, #12
 80097ec:	46bd      	mov	sp, r7
 80097ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097f2:	4770      	bx	lr

080097f4 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80097f4:	b580      	push	{r7, lr}
 80097f6:	b084      	sub	sp, #16
 80097f8:	af00      	add	r7, sp, #0
 80097fa:	60f8      	str	r0, [r7, #12]
 80097fc:	4608      	mov	r0, r1
 80097fe:	4611      	mov	r1, r2
 8009800:	461a      	mov	r2, r3
 8009802:	4603      	mov	r3, r0
 8009804:	817b      	strh	r3, [r7, #10]
 8009806:	460b      	mov	r3, r1
 8009808:	813b      	strh	r3, [r7, #8]
 800980a:	4613      	mov	r3, r2
 800980c:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800980e:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8009812:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8009816:	4619      	mov	r1, r3
 8009818:	68f8      	ldr	r0, [r7, #12]
 800981a:	f000 f82a 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800981e:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 8009822:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8009826:	4619      	mov	r1, r3
 8009828:	68f8      	ldr	r0, [r7, #12]
 800982a:	f000 f87e 	bl	800992a <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800982e:	bf00      	nop
 8009830:	3710      	adds	r7, #16
 8009832:	46bd      	mov	sp, r7
 8009834:	bd80      	pop	{r7, pc}

08009836 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 8009836:	b480      	push	{r7}
 8009838:	b083      	sub	sp, #12
 800983a:	af00      	add	r7, sp, #0
 800983c:	6078      	str	r0, [r7, #4]
 800983e:	460b      	mov	r3, r1
 8009840:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 8009842:	687b      	ldr	r3, [r7, #4]
 8009844:	887a      	ldrh	r2, [r7, #2]
 8009846:	809a      	strh	r2, [r3, #4]
    }
 8009848:	bf00      	nop
 800984a:	370c      	adds	r7, #12
 800984c:	46bd      	mov	sp, r7
 800984e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009852:	4770      	bx	lr

08009854 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 8009854:	b480      	push	{r7}
 8009856:	b083      	sub	sp, #12
 8009858:	af00      	add	r7, sp, #0
 800985a:	6078      	str	r0, [r7, #4]
 800985c:	460b      	mov	r3, r1
 800985e:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 8009860:	687b      	ldr	r3, [r7, #4]
 8009862:	887a      	ldrh	r2, [r7, #2]
 8009864:	80da      	strh	r2, [r3, #6]
    }
 8009866:	bf00      	nop
 8009868:	370c      	adds	r7, #12
 800986a:	46bd      	mov	sp, r7
 800986c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009870:	4770      	bx	lr

08009872 <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 8009872:	b580      	push	{r7, lr}
 8009874:	b082      	sub	sp, #8
 8009876:	af00      	add	r7, sp, #0
 8009878:	6078      	str	r0, [r7, #4]
 800987a:	460b      	mov	r3, r1
 800987c:	807b      	strh	r3, [r7, #2]
 800987e:	4613      	mov	r3, r2
 8009880:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 8009882:	687b      	ldr	r3, [r7, #4]
 8009884:	681b      	ldr	r3, [r3, #0]
 8009886:	3330      	adds	r3, #48	; 0x30
 8009888:	681b      	ldr	r3, [r3, #0]
 800988a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800988e:	4611      	mov	r1, r2
 8009890:	6878      	ldr	r0, [r7, #4]
 8009892:	4798      	blx	r3
        setY(y);
 8009894:	687b      	ldr	r3, [r7, #4]
 8009896:	681b      	ldr	r3, [r3, #0]
 8009898:	3334      	adds	r3, #52	; 0x34
 800989a:	681b      	ldr	r3, [r3, #0]
 800989c:	f9b7 2000 	ldrsh.w	r2, [r7]
 80098a0:	4611      	mov	r1, r2
 80098a2:	6878      	ldr	r0, [r7, #4]
 80098a4:	4798      	blx	r3
    }
 80098a6:	bf00      	nop
 80098a8:	3708      	adds	r7, #8
 80098aa:	46bd      	mov	sp, r7
 80098ac:	bd80      	pop	{r7, pc}

080098ae <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 80098ae:	b480      	push	{r7}
 80098b0:	b083      	sub	sp, #12
 80098b2:	af00      	add	r7, sp, #0
 80098b4:	6078      	str	r0, [r7, #4]
 80098b6:	460b      	mov	r3, r1
 80098b8:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 80098ba:	687b      	ldr	r3, [r7, #4]
 80098bc:	887a      	ldrh	r2, [r7, #2]
 80098be:	811a      	strh	r2, [r3, #8]
    }
 80098c0:	bf00      	nop
 80098c2:	370c      	adds	r7, #12
 80098c4:	46bd      	mov	sp, r7
 80098c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098ca:	4770      	bx	lr

080098cc <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 80098cc:	b480      	push	{r7}
 80098ce:	b083      	sub	sp, #12
 80098d0:	af00      	add	r7, sp, #0
 80098d2:	6078      	str	r0, [r7, #4]
 80098d4:	460b      	mov	r3, r1
 80098d6:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 80098d8:	687b      	ldr	r3, [r7, #4]
 80098da:	887a      	ldrh	r2, [r7, #2]
 80098dc:	815a      	strh	r2, [r3, #10]
    }
 80098de:	bf00      	nop
 80098e0:	370c      	adds	r7, #12
 80098e2:	46bd      	mov	sp, r7
 80098e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098e8:	4770      	bx	lr

080098ea <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 80098ea:	b480      	push	{r7}
 80098ec:	b083      	sub	sp, #12
 80098ee:	af00      	add	r7, sp, #0
 80098f0:	6078      	str	r0, [r7, #4]
    {
    }
 80098f2:	bf00      	nop
 80098f4:	370c      	adds	r7, #12
 80098f6:	46bd      	mov	sp, r7
 80098f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098fc:	4770      	bx	lr

080098fe <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 80098fe:	b480      	push	{r7}
 8009900:	b083      	sub	sp, #12
 8009902:	af00      	add	r7, sp, #0
 8009904:	6078      	str	r0, [r7, #4]
 8009906:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009908:	bf00      	nop
 800990a:	370c      	adds	r7, #12
 800990c:	46bd      	mov	sp, r7
 800990e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009912:	4770      	bx	lr

08009914 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8009914:	b480      	push	{r7}
 8009916:	b083      	sub	sp, #12
 8009918:	af00      	add	r7, sp, #0
 800991a:	6078      	str	r0, [r7, #4]
 800991c:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800991e:	bf00      	nop
 8009920:	370c      	adds	r7, #12
 8009922:	46bd      	mov	sp, r7
 8009924:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009928:	4770      	bx	lr

0800992a <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 800992a:	b580      	push	{r7, lr}
 800992c:	b082      	sub	sp, #8
 800992e:	af00      	add	r7, sp, #0
 8009930:	6078      	str	r0, [r7, #4]
 8009932:	460b      	mov	r3, r1
 8009934:	807b      	strh	r3, [r7, #2]
 8009936:	4613      	mov	r3, r2
 8009938:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 800993a:	687b      	ldr	r3, [r7, #4]
 800993c:	681b      	ldr	r3, [r3, #0]
 800993e:	3338      	adds	r3, #56	; 0x38
 8009940:	681b      	ldr	r3, [r3, #0]
 8009942:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8009946:	4611      	mov	r1, r2
 8009948:	6878      	ldr	r0, [r7, #4]
 800994a:	4798      	blx	r3
        setHeight(height);
 800994c:	687b      	ldr	r3, [r7, #4]
 800994e:	681b      	ldr	r3, [r3, #0]
 8009950:	333c      	adds	r3, #60	; 0x3c
 8009952:	681b      	ldr	r3, [r3, #0]
 8009954:	f9b7 2000 	ldrsh.w	r2, [r7]
 8009958:	4611      	mov	r1, r2
 800995a:	6878      	ldr	r0, [r7, #4]
 800995c:	4798      	blx	r3
    }
 800995e:	bf00      	nop
 8009960:	3708      	adds	r7, #8
 8009962:	46bd      	mov	sp, r7
 8009964:	bd80      	pop	{r7, pc}

08009966 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8009966:	b480      	push	{r7}
 8009968:	b083      	sub	sp, #12
 800996a:	af00      	add	r7, sp, #0
 800996c:	6078      	str	r0, [r7, #4]
 800996e:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009970:	bf00      	nop
 8009972:	370c      	adds	r7, #12
 8009974:	46bd      	mov	sp, r7
 8009976:	f85d 7b04 	ldr.w	r7, [sp], #4
 800997a:	4770      	bx	lr

0800997c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 800997c:	b480      	push	{r7}
 800997e:	b083      	sub	sp, #12
 8009980:	af00      	add	r7, sp, #0
 8009982:	6078      	str	r0, [r7, #4]
    {
    }
 8009984:	bf00      	nop
 8009986:	370c      	adds	r7, #12
 8009988:	46bd      	mov	sp, r7
 800998a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800998e:	4770      	bx	lr

08009990 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 8009990:	b480      	push	{r7}
 8009992:	b083      	sub	sp, #12
 8009994:	af00      	add	r7, sp, #0
 8009996:	6078      	str	r0, [r7, #4]
    {
        return visible;
 8009998:	687b      	ldr	r3, [r7, #4]
 800999a:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 800999e:	4618      	mov	r0, r3
 80099a0:	370c      	adds	r7, #12
 80099a2:	46bd      	mov	sp, r7
 80099a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099a8:	4770      	bx	lr

080099aa <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 80099aa:	b480      	push	{r7}
 80099ac:	b083      	sub	sp, #12
 80099ae:	af00      	add	r7, sp, #0
 80099b0:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 80099b2:	687b      	ldr	r3, [r7, #4]
 80099b4:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 80099b8:	4618      	mov	r0, r3
 80099ba:	370c      	adds	r7, #12
 80099bc:	46bd      	mov	sp, r7
 80099be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099c2:	4770      	bx	lr

080099c4 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80099c4:	b580      	push	{r7, lr}
 80099c6:	b082      	sub	sp, #8
 80099c8:	af00      	add	r7, sp, #0
 80099ca:	6078      	str	r0, [r7, #4]
 80099cc:	460b      	mov	r3, r1
 80099ce:	807b      	strh	r3, [r7, #2]
 80099d0:	4613      	mov	r3, r2
 80099d2:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 80099d4:	687b      	ldr	r3, [r7, #4]
 80099d6:	681b      	ldr	r3, [r3, #0]
 80099d8:	3354      	adds	r3, #84	; 0x54
 80099da:	681b      	ldr	r3, [r3, #0]
 80099dc:	8879      	ldrh	r1, [r7, #2]
 80099de:	687a      	ldr	r2, [r7, #4]
 80099e0:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 80099e4:	b292      	uxth	r2, r2
 80099e6:	1a8a      	subs	r2, r1, r2
 80099e8:	b292      	uxth	r2, r2
 80099ea:	b210      	sxth	r0, r2
 80099ec:	8839      	ldrh	r1, [r7, #0]
 80099ee:	687a      	ldr	r2, [r7, #4]
 80099f0:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 80099f4:	b292      	uxth	r2, r2
 80099f6:	1a8a      	subs	r2, r1, r2
 80099f8:	b292      	uxth	r2, r2
 80099fa:	b212      	sxth	r2, r2
 80099fc:	4601      	mov	r1, r0
 80099fe:	6878      	ldr	r0, [r7, #4]
 8009a00:	4798      	blx	r3
    }
 8009a02:	bf00      	nop
 8009a04:	3708      	adds	r7, #8
 8009a06:	46bd      	mov	sp, r7
 8009a08:	bd80      	pop	{r7, pc}

08009a0a <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 8009a0a:	b480      	push	{r7}
 8009a0c:	b083      	sub	sp, #12
 8009a0e:	af00      	add	r7, sp, #0
 8009a10:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8009a12:	687b      	ldr	r3, [r7, #4]
 8009a14:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009a18:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8009a1a:	687b      	ldr	r3, [r7, #4]
 8009a1c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009a20:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 8009a22:	687b      	ldr	r3, [r7, #4]
 8009a24:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009a28:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 8009a2a:	bf00      	nop
 8009a2c:	370c      	adds	r7, #12
 8009a2e:	46bd      	mov	sp, r7
 8009a30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a34:	4770      	bx	lr

08009a36 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 8009a36:	b580      	push	{r7, lr}
 8009a38:	b084      	sub	sp, #16
 8009a3a:	af00      	add	r7, sp, #0
 8009a3c:	60f8      	str	r0, [r7, #12]
 8009a3e:	60b9      	str	r1, [r7, #8]
 8009a40:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 8009a42:	68f8      	ldr	r0, [r7, #12]
 8009a44:	f7ff ffe1 	bl	8009a0a <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 8009a48:	687b      	ldr	r3, [r7, #4]
 8009a4a:	681a      	ldr	r2, [r3, #0]
 8009a4c:	68fb      	ldr	r3, [r7, #12]
 8009a4e:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 8009a50:	687b      	ldr	r3, [r7, #4]
 8009a52:	68fa      	ldr	r2, [r7, #12]
 8009a54:	601a      	str	r2, [r3, #0]
    }
 8009a56:	bf00      	nop
 8009a58:	3710      	adds	r7, #16
 8009a5a:	46bd      	mov	sp, r7
 8009a5c:	bd80      	pop	{r7, pc}
	...

08009a60 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 8009a60:	b580      	push	{r7, lr}
 8009a62:	b082      	sub	sp, #8
 8009a64:	af00      	add	r7, sp, #0
 8009a66:	6078      	str	r0, [r7, #4]
    {
 8009a68:	4a06      	ldr	r2, [pc, #24]	; (8009a84 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 8009a6a:	687b      	ldr	r3, [r7, #4]
 8009a6c:	601a      	str	r2, [r3, #0]
 8009a6e:	687b      	ldr	r3, [r7, #4]
 8009a70:	3304      	adds	r3, #4
 8009a72:	4618      	mov	r0, r3
 8009a74:	f000 fdca 	bl	800a60c <_ZN8touchgfx9ContainerD1Ev>
    }
 8009a78:	687b      	ldr	r3, [r7, #4]
 8009a7a:	4618      	mov	r0, r3
 8009a7c:	3708      	adds	r7, #8
 8009a7e:	46bd      	mov	sp, r7
 8009a80:	bd80      	pop	{r7, pc}
 8009a82:	bf00      	nop
 8009a84:	0802f95c 	.word	0x0802f95c

08009a88 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 8009a88:	b580      	push	{r7, lr}
 8009a8a:	b082      	sub	sp, #8
 8009a8c:	af00      	add	r7, sp, #0
 8009a8e:	6078      	str	r0, [r7, #4]
    }
 8009a90:	6878      	ldr	r0, [r7, #4]
 8009a92:	f7ff ffe5 	bl	8009a60 <_ZN8touchgfx6ScreenD1Ev>
 8009a96:	213c      	movs	r1, #60	; 0x3c
 8009a98:	6878      	ldr	r0, [r7, #4]
 8009a9a:	f020 fbb8 	bl	802a20e <_ZdlPvj>
 8009a9e:	687b      	ldr	r3, [r7, #4]
 8009aa0:	4618      	mov	r0, r3
 8009aa2:	3708      	adds	r7, #8
 8009aa4:	46bd      	mov	sp, r7
 8009aa6:	bd80      	pop	{r7, pc}

08009aa8 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 8009aa8:	b480      	push	{r7}
 8009aaa:	b083      	sub	sp, #12
 8009aac:	af00      	add	r7, sp, #0
 8009aae:	6078      	str	r0, [r7, #4]
    {
    }
 8009ab0:	bf00      	nop
 8009ab2:	370c      	adds	r7, #12
 8009ab4:	46bd      	mov	sp, r7
 8009ab6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009aba:	4770      	bx	lr

08009abc <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 8009abc:	b480      	push	{r7}
 8009abe:	b083      	sub	sp, #12
 8009ac0:	af00      	add	r7, sp, #0
 8009ac2:	6078      	str	r0, [r7, #4]
    {
    }
 8009ac4:	bf00      	nop
 8009ac6:	370c      	adds	r7, #12
 8009ac8:	46bd      	mov	sp, r7
 8009aca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ace:	4770      	bx	lr

08009ad0 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 8009ad0:	b480      	push	{r7}
 8009ad2:	b083      	sub	sp, #12
 8009ad4:	af00      	add	r7, sp, #0
 8009ad6:	6078      	str	r0, [r7, #4]
    {
    }
 8009ad8:	bf00      	nop
 8009ada:	370c      	adds	r7, #12
 8009adc:	46bd      	mov	sp, r7
 8009ade:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ae2:	4770      	bx	lr

08009ae4 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 8009ae4:	b480      	push	{r7}
 8009ae6:	b083      	sub	sp, #12
 8009ae8:	af00      	add	r7, sp, #0
 8009aea:	6078      	str	r0, [r7, #4]
    {
    }
 8009aec:	bf00      	nop
 8009aee:	370c      	adds	r7, #12
 8009af0:	46bd      	mov	sp, r7
 8009af2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009af6:	4770      	bx	lr

08009af8 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 8009af8:	b480      	push	{r7}
 8009afa:	b083      	sub	sp, #12
 8009afc:	af00      	add	r7, sp, #0
 8009afe:	6078      	str	r0, [r7, #4]
 8009b00:	460b      	mov	r3, r1
 8009b02:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 8009b04:	bf00      	nop
 8009b06:	370c      	adds	r7, #12
 8009b08:	46bd      	mov	sp, r7
 8009b0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b0e:	4770      	bx	lr

08009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 8009b10:	b580      	push	{r7, lr}
 8009b12:	b082      	sub	sp, #8
 8009b14:	af00      	add	r7, sp, #0
 8009b16:	6078      	str	r0, [r7, #4]
 8009b18:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 8009b1a:	687b      	ldr	r3, [r7, #4]
 8009b1c:	3304      	adds	r3, #4
 8009b1e:	6839      	ldr	r1, [r7, #0]
 8009b20:	4618      	mov	r0, r3
 8009b22:	f008 ff9f 	bl	8012a64 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8009b26:	bf00      	nop
 8009b28:	3708      	adds	r7, #8
 8009b2a:	46bd      	mov	sp, r7
 8009b2c:	bd80      	pop	{r7, pc}

08009b2e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 8009b2e:	b580      	push	{r7, lr}
 8009b30:	b084      	sub	sp, #16
 8009b32:	af00      	add	r7, sp, #0
 8009b34:	60f8      	str	r0, [r7, #12]
 8009b36:	607b      	str	r3, [r7, #4]
 8009b38:	460b      	mov	r3, r1
 8009b3a:	817b      	strh	r3, [r7, #10]
 8009b3c:	4613      	mov	r3, r2
 8009b3e:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 8009b40:	68fb      	ldr	r3, [r7, #12]
 8009b42:	4618      	mov	r0, r3
 8009b44:	f7ff ff24 	bl	8009990 <_ZNK8touchgfx8Drawable9isVisibleEv>
 8009b48:	4603      	mov	r3, r0
 8009b4a:	2b00      	cmp	r3, #0
 8009b4c:	d008      	beq.n	8009b60 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8009b4e:	68fb      	ldr	r3, [r7, #12]
 8009b50:	4618      	mov	r0, r3
 8009b52:	f7ff ff2a 	bl	80099aa <_ZNK8touchgfx8Drawable11isTouchableEv>
 8009b56:	4603      	mov	r3, r0
 8009b58:	2b00      	cmp	r3, #0
 8009b5a:	d001      	beq.n	8009b60 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8009b5c:	2301      	movs	r3, #1
 8009b5e:	e000      	b.n	8009b62 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 8009b60:	2300      	movs	r3, #0
 8009b62:	2b00      	cmp	r3, #0
 8009b64:	d002      	beq.n	8009b6c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 8009b66:	68fa      	ldr	r2, [r7, #12]
 8009b68:	687b      	ldr	r3, [r7, #4]
 8009b6a:	601a      	str	r2, [r3, #0]
        }
    }
 8009b6c:	bf00      	nop
 8009b6e:	3710      	adds	r7, #16
 8009b70:	46bd      	mov	sp, r7
 8009b72:	bd80      	pop	{r7, pc}

08009b74 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 8009b74:	b580      	push	{r7, lr}
 8009b76:	b082      	sub	sp, #8
 8009b78:	af00      	add	r7, sp, #0
 8009b7a:	6078      	str	r0, [r7, #4]
 8009b7c:	687b      	ldr	r3, [r7, #4]
 8009b7e:	4618      	mov	r0, r3
 8009b80:	f7ff fdca 	bl	8009718 <_ZN8touchgfx8DrawableC1Ev>
 8009b84:	4a03      	ldr	r2, [pc, #12]	; (8009b94 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8009b86:	687b      	ldr	r3, [r7, #4]
 8009b88:	601a      	str	r2, [r3, #0]
 8009b8a:	687b      	ldr	r3, [r7, #4]
 8009b8c:	4618      	mov	r0, r3
 8009b8e:	3708      	adds	r7, #8
 8009b90:	46bd      	mov	sp, r7
 8009b92:	bd80      	pop	{r7, pc}
 8009b94:	0802de44 	.word	0x0802de44

08009b98 <_ZN8touchgfx6WidgetD1Ev>:
 8009b98:	b580      	push	{r7, lr}
 8009b9a:	b082      	sub	sp, #8
 8009b9c:	af00      	add	r7, sp, #0
 8009b9e:	6078      	str	r0, [r7, #4]
 8009ba0:	4a05      	ldr	r2, [pc, #20]	; (8009bb8 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 8009ba2:	687b      	ldr	r3, [r7, #4]
 8009ba4:	601a      	str	r2, [r3, #0]
 8009ba6:	687b      	ldr	r3, [r7, #4]
 8009ba8:	4618      	mov	r0, r3
 8009baa:	f7ff fde5 	bl	8009778 <_ZN8touchgfx8DrawableD1Ev>
 8009bae:	687b      	ldr	r3, [r7, #4]
 8009bb0:	4618      	mov	r0, r3
 8009bb2:	3708      	adds	r7, #8
 8009bb4:	46bd      	mov	sp, r7
 8009bb6:	bd80      	pop	{r7, pc}
 8009bb8:	0802de44 	.word	0x0802de44

08009bbc <_ZN8touchgfx6WidgetD0Ev>:
 8009bbc:	b580      	push	{r7, lr}
 8009bbe:	b082      	sub	sp, #8
 8009bc0:	af00      	add	r7, sp, #0
 8009bc2:	6078      	str	r0, [r7, #4]
 8009bc4:	6878      	ldr	r0, [r7, #4]
 8009bc6:	f7ff ffe7 	bl	8009b98 <_ZN8touchgfx6WidgetD1Ev>
 8009bca:	2128      	movs	r1, #40	; 0x28
 8009bcc:	6878      	ldr	r0, [r7, #4]
 8009bce:	f020 fb1e 	bl	802a20e <_ZdlPvj>
 8009bd2:	687b      	ldr	r3, [r7, #4]
 8009bd4:	4618      	mov	r0, r3
 8009bd6:	3708      	adds	r7, #8
 8009bd8:	46bd      	mov	sp, r7
 8009bda:	bd80      	pop	{r7, pc}

08009bdc <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 8009bdc:	b580      	push	{r7, lr}
 8009bde:	b082      	sub	sp, #8
 8009be0:	af00      	add	r7, sp, #0
 8009be2:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 8009be4:	687b      	ldr	r3, [r7, #4]
 8009be6:	4618      	mov	r0, r3
 8009be8:	2326      	movs	r3, #38	; 0x26
 8009bea:	461a      	mov	r2, r3
 8009bec:	2100      	movs	r1, #0
 8009bee:	f021 fd04 	bl	802b5fa <memset>
 8009bf2:	687b      	ldr	r3, [r7, #4]
 8009bf4:	4618      	mov	r0, r3
 8009bf6:	f7ff ffbd 	bl	8009b74 <_ZN8touchgfx6WidgetC1Ev>
 8009bfa:	4a09      	ldr	r2, [pc, #36]	; (8009c20 <_ZN8touchgfx3BoxC1Ev+0x44>)
 8009bfc:	687b      	ldr	r3, [r7, #4]
 8009bfe:	601a      	str	r2, [r3, #0]
 8009c00:	687b      	ldr	r3, [r7, #4]
 8009c02:	22ff      	movs	r2, #255	; 0xff
 8009c04:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 8009c08:	687b      	ldr	r3, [r7, #4]
 8009c0a:	3328      	adds	r3, #40	; 0x28
 8009c0c:	2100      	movs	r1, #0
 8009c0e:	4618      	mov	r0, r3
 8009c10:	f7ff fd2c 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
    {
    }
 8009c14:	687b      	ldr	r3, [r7, #4]
 8009c16:	4618      	mov	r0, r3
 8009c18:	3708      	adds	r7, #8
 8009c1a:	46bd      	mov	sp, r7
 8009c1c:	bd80      	pop	{r7, pc}
 8009c1e:	bf00      	nop
 8009c20:	0802f3fc 	.word	0x0802f3fc

08009c24 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 8009c24:	b480      	push	{r7}
 8009c26:	b083      	sub	sp, #12
 8009c28:	af00      	add	r7, sp, #0
 8009c2a:	6078      	str	r0, [r7, #4]
 8009c2c:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 8009c2e:	687b      	ldr	r3, [r7, #4]
 8009c30:	683a      	ldr	r2, [r7, #0]
 8009c32:	629a      	str	r2, [r3, #40]	; 0x28
    }
 8009c34:	bf00      	nop
 8009c36:	370c      	adds	r7, #12
 8009c38:	46bd      	mov	sp, r7
 8009c3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c3e:	4770      	bx	lr

08009c40 <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 8009c40:	b480      	push	{r7}
 8009c42:	b083      	sub	sp, #12
 8009c44:	af00      	add	r7, sp, #0
 8009c46:	6078      	str	r0, [r7, #4]
 8009c48:	460b      	mov	r3, r1
 8009c4a:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 8009c4c:	4a06      	ldr	r2, [pc, #24]	; (8009c68 <_ZN8touchgfx9TypedTextC1Et+0x28>)
 8009c4e:	687b      	ldr	r3, [r7, #4]
 8009c50:	601a      	str	r2, [r3, #0]
 8009c52:	687b      	ldr	r3, [r7, #4]
 8009c54:	887a      	ldrh	r2, [r7, #2]
 8009c56:	809a      	strh	r2, [r3, #4]
    }
 8009c58:	687b      	ldr	r3, [r7, #4]
 8009c5a:	4618      	mov	r0, r3
 8009c5c:	370c      	adds	r7, #12
 8009c5e:	46bd      	mov	sp, r7
 8009c60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c64:	4770      	bx	lr
 8009c66:	bf00      	nop
 8009c68:	0802dcac 	.word	0x0802dcac

08009c6c <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8009c6c:	b580      	push	{r7, lr}
 8009c6e:	b082      	sub	sp, #8
 8009c70:	af00      	add	r7, sp, #0
 8009c72:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8009c74:	687b      	ldr	r3, [r7, #4]
 8009c76:	4618      	mov	r0, r3
 8009c78:	2326      	movs	r3, #38	; 0x26
 8009c7a:	461a      	mov	r2, r3
 8009c7c:	2100      	movs	r1, #0
 8009c7e:	f021 fcbc 	bl	802b5fa <memset>
 8009c82:	687b      	ldr	r3, [r7, #4]
 8009c84:	4618      	mov	r0, r3
 8009c86:	f7ff ff75 	bl	8009b74 <_ZN8touchgfx6WidgetC1Ev>
 8009c8a:	4a16      	ldr	r2, [pc, #88]	; (8009ce4 <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 8009c8c:	687b      	ldr	r3, [r7, #4]
 8009c8e:	601a      	str	r2, [r3, #0]
 8009c90:	687b      	ldr	r3, [r7, #4]
 8009c92:	3328      	adds	r3, #40	; 0x28
 8009c94:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8009c98:	4618      	mov	r0, r3
 8009c9a:	f7ff ffd1 	bl	8009c40 <_ZN8touchgfx9TypedTextC1Et>
 8009c9e:	687b      	ldr	r3, [r7, #4]
 8009ca0:	3330      	adds	r3, #48	; 0x30
 8009ca2:	2100      	movs	r1, #0
 8009ca4:	4618      	mov	r0, r3
 8009ca6:	f7ff fce1 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 8009caa:	687b      	ldr	r3, [r7, #4]
 8009cac:	2200      	movs	r2, #0
 8009cae:	869a      	strh	r2, [r3, #52]	; 0x34
 8009cb0:	687b      	ldr	r3, [r7, #4]
 8009cb2:	22ff      	movs	r2, #255	; 0xff
 8009cb4:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 8009cb8:	687b      	ldr	r3, [r7, #4]
 8009cba:	2200      	movs	r2, #0
 8009cbc:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 8009cc0:	687b      	ldr	r3, [r7, #4]
 8009cc2:	2200      	movs	r2, #0
 8009cc4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8009cc8:	687b      	ldr	r3, [r7, #4]
 8009cca:	2200      	movs	r2, #0
 8009ccc:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8009cd0:	687b      	ldr	r3, [r7, #4]
 8009cd2:	333c      	adds	r3, #60	; 0x3c
 8009cd4:	4618      	mov	r0, r3
 8009cd6:	f000 f8f0 	bl	8009eba <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 8009cda:	687b      	ldr	r3, [r7, #4]
 8009cdc:	4618      	mov	r0, r3
 8009cde:	3708      	adds	r7, #8
 8009ce0:	46bd      	mov	sp, r7
 8009ce2:	bd80      	pop	{r7, pc}
 8009ce4:	0802f36c 	.word	0x0802f36c

08009ce8 <_ZN8touchgfx8TextArea8setWidthEs>:

    virtual void setWidth(int16_t width)
 8009ce8:	b590      	push	{r4, r7, lr}
 8009cea:	b087      	sub	sp, #28
 8009cec:	af00      	add	r7, sp, #0
 8009cee:	6178      	str	r0, [r7, #20]
 8009cf0:	460b      	mov	r3, r1
 8009cf2:	827b      	strh	r3, [r7, #18]
    {
        Widget::setWidth(width);
 8009cf4:	697b      	ldr	r3, [r7, #20]
 8009cf6:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8009cfa:	4611      	mov	r1, r2
 8009cfc:	4618      	mov	r0, r3
 8009cfe:	f7ff fdd6 	bl	80098ae <_ZN8touchgfx8Drawable8setWidthEs>
        boundingArea = calculateBoundingArea();
 8009d02:	697b      	ldr	r3, [r7, #20]
 8009d04:	681b      	ldr	r3, [r3, #0]
 8009d06:	3384      	adds	r3, #132	; 0x84
 8009d08:	681b      	ldr	r3, [r3, #0]
 8009d0a:	697c      	ldr	r4, [r7, #20]
 8009d0c:	463a      	mov	r2, r7
 8009d0e:	6979      	ldr	r1, [r7, #20]
 8009d10:	4610      	mov	r0, r2
 8009d12:	4798      	blx	r3
 8009d14:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 8009d18:	463a      	mov	r2, r7
 8009d1a:	ca07      	ldmia	r2, {r0, r1, r2}
 8009d1c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 8009d20:	bf00      	nop
 8009d22:	371c      	adds	r7, #28
 8009d24:	46bd      	mov	sp, r7
 8009d26:	bd90      	pop	{r4, r7, pc}

08009d28 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8009d28:	b590      	push	{r4, r7, lr}
 8009d2a:	b087      	sub	sp, #28
 8009d2c:	af00      	add	r7, sp, #0
 8009d2e:	6178      	str	r0, [r7, #20]
 8009d30:	460b      	mov	r3, r1
 8009d32:	827b      	strh	r3, [r7, #18]
    {
        Widget::setHeight(height);
 8009d34:	697b      	ldr	r3, [r7, #20]
 8009d36:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8009d3a:	4611      	mov	r1, r2
 8009d3c:	4618      	mov	r0, r3
 8009d3e:	f7ff fdc5 	bl	80098cc <_ZN8touchgfx8Drawable9setHeightEs>
        boundingArea = calculateBoundingArea();
 8009d42:	697b      	ldr	r3, [r7, #20]
 8009d44:	681b      	ldr	r3, [r3, #0]
 8009d46:	3384      	adds	r3, #132	; 0x84
 8009d48:	681b      	ldr	r3, [r3, #0]
 8009d4a:	697c      	ldr	r4, [r7, #20]
 8009d4c:	463a      	mov	r2, r7
 8009d4e:	6979      	ldr	r1, [r7, #20]
 8009d50:	4610      	mov	r0, r2
 8009d52:	4798      	blx	r3
 8009d54:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 8009d58:	463a      	mov	r2, r7
 8009d5a:	ca07      	ldmia	r2, {r0, r1, r2}
 8009d5c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 8009d60:	bf00      	nop
 8009d62:	371c      	adds	r7, #28
 8009d64:	46bd      	mov	sp, r7
 8009d66:	bd90      	pop	{r4, r7, pc}

08009d68 <_ZNK8touchgfx8TextArea12getSolidRectEv>:

    virtual Rect getSolidRect() const
 8009d68:	b580      	push	{r7, lr}
 8009d6a:	b082      	sub	sp, #8
 8009d6c:	af00      	add	r7, sp, #0
 8009d6e:	6078      	str	r0, [r7, #4]
 8009d70:	6039      	str	r1, [r7, #0]
    {
        return Rect();
 8009d72:	6878      	ldr	r0, [r7, #4]
 8009d74:	f7ff fc89 	bl	800968a <_ZN8touchgfx4RectC1Ev>
    }
 8009d78:	6878      	ldr	r0, [r7, #4]
 8009d7a:	3708      	adds	r7, #8
 8009d7c:	46bd      	mov	sp, r7
 8009d7e:	bd80      	pop	{r7, pc}

08009d80 <_ZN8touchgfx8TextArea8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
 8009d80:	b480      	push	{r7}
 8009d82:	b083      	sub	sp, #12
 8009d84:	af00      	add	r7, sp, #0
 8009d86:	6078      	str	r0, [r7, #4]
 8009d88:	460b      	mov	r3, r1
 8009d8a:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 8009d8c:	687b      	ldr	r3, [r7, #4]
 8009d8e:	78fa      	ldrb	r2, [r7, #3]
 8009d90:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
    }
 8009d94:	bf00      	nop
 8009d96:	370c      	adds	r7, #12
 8009d98:	46bd      	mov	sp, r7
 8009d9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d9e:	4770      	bx	lr

08009da0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
     *
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setBaselineY(int16_t baselineY)
 8009da0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009da2:	b085      	sub	sp, #20
 8009da4:	af00      	add	r7, sp, #0
 8009da6:	6078      	str	r0, [r7, #4]
 8009da8:	460b      	mov	r3, r1
 8009daa:	807b      	strh	r3, [r7, #2]
    {
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8009dac:	687e      	ldr	r6, [r7, #4]
 8009dae:	687b      	ldr	r3, [r7, #4]
 8009db0:	681b      	ldr	r3, [r3, #0]
 8009db2:	3334      	adds	r3, #52	; 0x34
 8009db4:	681c      	ldr	r4, [r3, #0]
 8009db6:	887d      	ldrh	r5, [r7, #2]
 8009db8:	6878      	ldr	r0, [r7, #4]
 8009dba:	f000 f867 	bl	8009e8c <_ZNK8touchgfx8TextArea12getTypedTextEv>
 8009dbe:	4603      	mov	r3, r0
 8009dc0:	60fb      	str	r3, [r7, #12]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009dc2:	4b1c      	ldr	r3, [pc, #112]	; (8009e34 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 8009dc4:	681b      	ldr	r3, [r3, #0]
 8009dc6:	2b00      	cmp	r3, #0
 8009dc8:	d105      	bne.n	8009dd6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x36>
 8009dca:	4b1b      	ldr	r3, [pc, #108]	; (8009e38 <_ZN8touchgfx8TextArea12setBaselineYEs+0x98>)
 8009dcc:	4a1b      	ldr	r2, [pc, #108]	; (8009e3c <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 8009dce:	216c      	movs	r1, #108	; 0x6c
 8009dd0:	481b      	ldr	r0, [pc, #108]	; (8009e40 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 8009dd2:	f021 fa0d 	bl	802b1f0 <__assert_func>
 8009dd6:	68fb      	ldr	r3, [r7, #12]
 8009dd8:	60bb      	str	r3, [r7, #8]
        return typedTextId < numberOfTypedTexts;
 8009dda:	68bb      	ldr	r3, [r7, #8]
 8009ddc:	889a      	ldrh	r2, [r3, #4]
 8009dde:	4b19      	ldr	r3, [pc, #100]	; (8009e44 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa4>)
 8009de0:	881b      	ldrh	r3, [r3, #0]
 8009de2:	429a      	cmp	r2, r3
 8009de4:	bf34      	ite	cc
 8009de6:	2301      	movcc	r3, #1
 8009de8:	2300      	movcs	r3, #0
 8009dea:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009dec:	2b00      	cmp	r3, #0
 8009dee:	d105      	bne.n	8009dfc <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>
 8009df0:	4b15      	ldr	r3, [pc, #84]	; (8009e48 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa8>)
 8009df2:	4a12      	ldr	r2, [pc, #72]	; (8009e3c <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 8009df4:	216d      	movs	r1, #109	; 0x6d
 8009df6:	4812      	ldr	r0, [pc, #72]	; (8009e40 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 8009df8:	f021 f9fa 	bl	802b1f0 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8009dfc:	4b13      	ldr	r3, [pc, #76]	; (8009e4c <_ZN8touchgfx8TextArea12setBaselineYEs+0xac>)
 8009dfe:	681a      	ldr	r2, [r3, #0]
 8009e00:	4b0c      	ldr	r3, [pc, #48]	; (8009e34 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 8009e02:	6819      	ldr	r1, [r3, #0]
 8009e04:	68fb      	ldr	r3, [r7, #12]
 8009e06:	889b      	ldrh	r3, [r3, #4]
 8009e08:	005b      	lsls	r3, r3, #1
 8009e0a:	440b      	add	r3, r1
 8009e0c:	781b      	ldrb	r3, [r3, #0]
 8009e0e:	009b      	lsls	r3, r3, #2
 8009e10:	4413      	add	r3, r2
 8009e12:	681b      	ldr	r3, [r3, #0]
 8009e14:	681a      	ldr	r2, [r3, #0]
 8009e16:	3230      	adds	r2, #48	; 0x30
 8009e18:	6812      	ldr	r2, [r2, #0]
 8009e1a:	4618      	mov	r0, r3
 8009e1c:	4790      	blx	r2
 8009e1e:	4603      	mov	r3, r0
 8009e20:	1aeb      	subs	r3, r5, r3
 8009e22:	b29b      	uxth	r3, r3
 8009e24:	b21b      	sxth	r3, r3
 8009e26:	4619      	mov	r1, r3
 8009e28:	4630      	mov	r0, r6
 8009e2a:	47a0      	blx	r4
    }
 8009e2c:	bf00      	nop
 8009e2e:	3714      	adds	r7, #20
 8009e30:	46bd      	mov	sp, r7
 8009e32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009e34:	20002380 	.word	0x20002380
 8009e38:	0802c264 	.word	0x0802c264
 8009e3c:	0802c2a8 	.word	0x0802c2a8
 8009e40:	0802c2e4 	.word	0x0802c2e4
 8009e44:	20002384 	.word	0x20002384
 8009e48:	0802c328 	.word	0x0802c328
 8009e4c:	20002388 	.word	0x20002388

08009e50 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8009e50:	b580      	push	{r7, lr}
 8009e52:	b082      	sub	sp, #8
 8009e54:	af00      	add	r7, sp, #0
 8009e56:	6078      	str	r0, [r7, #4]
 8009e58:	460b      	mov	r3, r1
 8009e5a:	807b      	strh	r3, [r7, #2]
 8009e5c:	4613      	mov	r3, r2
 8009e5e:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 8009e60:	687a      	ldr	r2, [r7, #4]
 8009e62:	687b      	ldr	r3, [r7, #4]
 8009e64:	681b      	ldr	r3, [r3, #0]
 8009e66:	3330      	adds	r3, #48	; 0x30
 8009e68:	681b      	ldr	r3, [r3, #0]
 8009e6a:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 8009e6e:	4610      	mov	r0, r2
 8009e70:	4798      	blx	r3
        setBaselineY(baselineY);
 8009e72:	687b      	ldr	r3, [r7, #4]
 8009e74:	681b      	ldr	r3, [r3, #0]
 8009e76:	3364      	adds	r3, #100	; 0x64
 8009e78:	681b      	ldr	r3, [r3, #0]
 8009e7a:	f9b7 2000 	ldrsh.w	r2, [r7]
 8009e7e:	4611      	mov	r1, r2
 8009e80:	6878      	ldr	r0, [r7, #4]
 8009e82:	4798      	blx	r3
    }
 8009e84:	bf00      	nop
 8009e86:	3708      	adds	r7, #8
 8009e88:	46bd      	mov	sp, r7
 8009e8a:	bd80      	pop	{r7, pc}

08009e8c <_ZNK8touchgfx8TextArea12getTypedTextEv>:
    /**
     * Gets the TypedText of the text area.
     *
     * @return The currently used TypedText.
     */
    const TypedText& getTypedText() const
 8009e8c:	b480      	push	{r7}
 8009e8e:	b083      	sub	sp, #12
 8009e90:	af00      	add	r7, sp, #0
 8009e92:	6078      	str	r0, [r7, #4]
    {
        return typedText;
 8009e94:	687b      	ldr	r3, [r7, #4]
 8009e96:	3328      	adds	r3, #40	; 0x28
    }
 8009e98:	4618      	mov	r0, r3
 8009e9a:	370c      	adds	r7, #12
 8009e9c:	46bd      	mov	sp, r7
 8009e9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ea2:	4770      	bx	lr

08009ea4 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     *
     * @return A pointer to the second wildcard, if this text area has two wildcards, otherwise 0.
     *
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
 8009ea4:	b480      	push	{r7}
 8009ea6:	b083      	sub	sp, #12
 8009ea8:	af00      	add	r7, sp, #0
 8009eaa:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8009eac:	2300      	movs	r3, #0
    }
 8009eae:	4618      	mov	r0, r3
 8009eb0:	370c      	adds	r7, #12
 8009eb2:	46bd      	mov	sp, r7
 8009eb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009eb8:	4770      	bx	lr

08009eba <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 8009eba:	b580      	push	{r7, lr}
 8009ebc:	b084      	sub	sp, #16
 8009ebe:	af02      	add	r7, sp, #8
 8009ec0:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8009ec2:	6878      	ldr	r0, [r7, #4]
 8009ec4:	f04f 33ff 	mov.w	r3, #4294967295
 8009ec8:	9300      	str	r3, [sp, #0]
 8009eca:	f04f 33ff 	mov.w	r3, #4294967295
 8009ece:	2200      	movs	r2, #0
 8009ed0:	2100      	movs	r1, #0
 8009ed2:	f7ff fbf1 	bl	80096b8 <_ZN8touchgfx4RectC1Essss>
              text(0)
 8009ed6:	687b      	ldr	r3, [r7, #4]
 8009ed8:	2200      	movs	r2, #0
 8009eda:	609a      	str	r2, [r3, #8]
        {
        }
 8009edc:	687b      	ldr	r3, [r7, #4]
 8009ede:	4618      	mov	r0, r3
 8009ee0:	3708      	adds	r7, #8
 8009ee2:	46bd      	mov	sp, r7
 8009ee4:	bd80      	pop	{r7, pc}
	...

08009ee8 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 8009ee8:	b580      	push	{r7, lr}
 8009eea:	b082      	sub	sp, #8
 8009eec:	af00      	add	r7, sp, #0
 8009eee:	6078      	str	r0, [r7, #4]
 8009ef0:	4a08      	ldr	r2, [pc, #32]	; (8009f14 <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 8009ef2:	687b      	ldr	r3, [r7, #4]
 8009ef4:	601a      	str	r2, [r3, #0]
 8009ef6:	687b      	ldr	r3, [r7, #4]
 8009ef8:	3328      	adds	r3, #40	; 0x28
 8009efa:	4618      	mov	r0, r3
 8009efc:	f7ff f9ce 	bl	800929c <_ZN8touchgfx9TypedTextD1Ev>
 8009f00:	687b      	ldr	r3, [r7, #4]
 8009f02:	4618      	mov	r0, r3
 8009f04:	f7ff fe48 	bl	8009b98 <_ZN8touchgfx6WidgetD1Ev>
 8009f08:	687b      	ldr	r3, [r7, #4]
 8009f0a:	4618      	mov	r0, r3
 8009f0c:	3708      	adds	r7, #8
 8009f0e:	46bd      	mov	sp, r7
 8009f10:	bd80      	pop	{r7, pc}
 8009f12:	bf00      	nop
 8009f14:	0802f36c 	.word	0x0802f36c

08009f18 <_ZN8touchgfx8TextAreaD0Ev>:
 8009f18:	b580      	push	{r7, lr}
 8009f1a:	b082      	sub	sp, #8
 8009f1c:	af00      	add	r7, sp, #0
 8009f1e:	6078      	str	r0, [r7, #4]
 8009f20:	6878      	ldr	r0, [r7, #4]
 8009f22:	f7ff ffe1 	bl	8009ee8 <_ZN8touchgfx8TextAreaD1Ev>
 8009f26:	2148      	movs	r1, #72	; 0x48
 8009f28:	6878      	ldr	r0, [r7, #4]
 8009f2a:	f020 f970 	bl	802a20e <_ZdlPvj>
 8009f2e:	687b      	ldr	r3, [r7, #4]
 8009f30:	4618      	mov	r0, r3
 8009f32:	3708      	adds	r7, #8
 8009f34:	46bd      	mov	sp, r7
 8009f36:	bd80      	pop	{r7, pc}

08009f38 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    {
    }

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 8009f38:	b580      	push	{r7, lr}
 8009f3a:	b082      	sub	sp, #8
 8009f3c:	af00      	add	r7, sp, #0
 8009f3e:	6078      	str	r0, [r7, #4]
    {
        Widget::invalidateContent();
 8009f40:	687b      	ldr	r3, [r7, #4]
 8009f42:	4618      	mov	r0, r3
 8009f44:	f7ff fc38 	bl	80097b8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8009f48:	bf00      	nop
 8009f4a:	3708      	adds	r7, #8
 8009f4c:	46bd      	mov	sp, r7
 8009f4e:	bd80      	pop	{r7, pc}

08009f50 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 8009f50:	b580      	push	{r7, lr}
 8009f52:	b082      	sub	sp, #8
 8009f54:	af00      	add	r7, sp, #0
 8009f56:	6078      	str	r0, [r7, #4]
 8009f58:	6039      	str	r1, [r7, #0]
    {
        return TextArea::BoundingArea();
 8009f5a:	6878      	ldr	r0, [r7, #4]
 8009f5c:	f7ff ffad 	bl	8009eba <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8009f60:	6878      	ldr	r0, [r7, #4]
 8009f62:	3708      	adds	r7, #8
 8009f64:	46bd      	mov	sp, r7
 8009f66:	bd80      	pop	{r7, pc}

08009f68 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
class TextAreaWithWildcardBase : public TextArea
 8009f68:	b580      	push	{r7, lr}
 8009f6a:	b082      	sub	sp, #8
 8009f6c:	af00      	add	r7, sp, #0
 8009f6e:	6078      	str	r0, [r7, #4]
 8009f70:	4a05      	ldr	r2, [pc, #20]	; (8009f88 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev+0x20>)
 8009f72:	687b      	ldr	r3, [r7, #4]
 8009f74:	601a      	str	r2, [r3, #0]
 8009f76:	687b      	ldr	r3, [r7, #4]
 8009f78:	4618      	mov	r0, r3
 8009f7a:	f7ff ffb5 	bl	8009ee8 <_ZN8touchgfx8TextAreaD1Ev>
 8009f7e:	687b      	ldr	r3, [r7, #4]
 8009f80:	4618      	mov	r0, r3
 8009f82:	3708      	adds	r7, #8
 8009f84:	46bd      	mov	sp, r7
 8009f86:	bd80      	pop	{r7, pc}
 8009f88:	0802f5c0 	.word	0x0802f5c0

08009f8c <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 8009f8c:	b580      	push	{r7, lr}
 8009f8e:	b082      	sub	sp, #8
 8009f90:	af00      	add	r7, sp, #0
 8009f92:	6078      	str	r0, [r7, #4]
 8009f94:	6878      	ldr	r0, [r7, #4]
 8009f96:	f7ff ffe7 	bl	8009f68 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 8009f9a:	2148      	movs	r1, #72	; 0x48
 8009f9c:	6878      	ldr	r0, [r7, #4]
 8009f9e:	f020 f936 	bl	802a20e <_ZdlPvj>
 8009fa2:	687b      	ldr	r3, [r7, #4]
 8009fa4:	4618      	mov	r0, r3
 8009fa6:	3708      	adds	r7, #8
 8009fa8:	46bd      	mov	sp, r7
 8009faa:	bd80      	pop	{r7, pc}

08009fac <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    void setWildcard1(const Unicode::UnicodeChar* value)
    {
        wc1 = value;
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
 8009fac:	b480      	push	{r7}
 8009fae:	b083      	sub	sp, #12
 8009fb0:	af00      	add	r7, sp, #0
 8009fb2:	6078      	str	r0, [r7, #4]
    {
        return wc1;
 8009fb4:	687b      	ldr	r3, [r7, #4]
 8009fb6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    }
 8009fb8:	4618      	mov	r0, r3
 8009fba:	370c      	adds	r7, #12
 8009fbc:	46bd      	mov	sp, r7
 8009fbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fc2:	4770      	bx	lr

08009fc4 <_ZN8touchgfx12DigitalClock14setDisplayModeENS0_11DisplayModeE>:
     *
     * @param  dm The new display mode.
     *
     * @see DisplayMode, getDisplayMode
     */
    virtual void setDisplayMode(DisplayMode dm)
 8009fc4:	b480      	push	{r7}
 8009fc6:	b083      	sub	sp, #12
 8009fc8:	af00      	add	r7, sp, #0
 8009fca:	6078      	str	r0, [r7, #4]
 8009fcc:	460b      	mov	r3, r1
 8009fce:	70fb      	strb	r3, [r7, #3]
    {
        displayMode = dm;
 8009fd0:	687b      	ldr	r3, [r7, #4]
 8009fd2:	78fa      	ldrb	r2, [r7, #3]
 8009fd4:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
    }
 8009fd8:	bf00      	nop
 8009fda:	370c      	adds	r7, #12
 8009fdc:	46bd      	mov	sp, r7
 8009fde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fe2:	4770      	bx	lr

08009fe4 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     * @param  callback The callback to be executed. The callback will be executed with a
     *                  reference to the AbstractButton.
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
 8009fe4:	b480      	push	{r7}
 8009fe6:	b083      	sub	sp, #12
 8009fe8:	af00      	add	r7, sp, #0
 8009fea:	6078      	str	r0, [r7, #4]
 8009fec:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 8009fee:	687b      	ldr	r3, [r7, #4]
 8009ff0:	683a      	ldr	r2, [r7, #0]
 8009ff2:	629a      	str	r2, [r3, #40]	; 0x28
    }
 8009ff4:	bf00      	nop
 8009ff6:	370c      	adds	r7, #12
 8009ff8:	46bd      	mov	sp, r7
 8009ffa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ffe:	4770      	bx	lr

0800a000 <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
 800a000:	b580      	push	{r7, lr}
 800a002:	b082      	sub	sp, #8
 800a004:	af00      	add	r7, sp, #0
 800a006:	6078      	str	r0, [r7, #4]
 800a008:	4a05      	ldr	r2, [pc, #20]	; (800a020 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 800a00a:	687b      	ldr	r3, [r7, #4]
 800a00c:	601a      	str	r2, [r3, #0]
 800a00e:	687b      	ldr	r3, [r7, #4]
 800a010:	4618      	mov	r0, r3
 800a012:	f7ff fdc1 	bl	8009b98 <_ZN8touchgfx6WidgetD1Ev>
 800a016:	687b      	ldr	r3, [r7, #4]
 800a018:	4618      	mov	r0, r3
 800a01a:	3708      	adds	r7, #8
 800a01c:	46bd      	mov	sp, r7
 800a01e:	bd80      	pop	{r7, pc}
 800a020:	0802f178 	.word	0x0802f178

0800a024 <_ZN8touchgfx14AbstractButtonD0Ev>:
 800a024:	b580      	push	{r7, lr}
 800a026:	b082      	sub	sp, #8
 800a028:	af00      	add	r7, sp, #0
 800a02a:	6078      	str	r0, [r7, #4]
 800a02c:	6878      	ldr	r0, [r7, #4]
 800a02e:	f7ff ffe7 	bl	800a000 <_ZN8touchgfx14AbstractButtonD1Ev>
 800a032:	2130      	movs	r1, #48	; 0x30
 800a034:	6878      	ldr	r0, [r7, #4]
 800a036:	f020 f8ea 	bl	802a20e <_ZdlPvj>
 800a03a:	687b      	ldr	r3, [r7, #4]
 800a03c:	4618      	mov	r0, r3
 800a03e:	3708      	adds	r7, #8
 800a040:	46bd      	mov	sp, r7
 800a042:	bd80      	pop	{r7, pc}

0800a044 <_ZN8touchgfx14ButtonWithIcon8setIconXEs>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
 800a044:	b480      	push	{r7}
 800a046:	b083      	sub	sp, #12
 800a048:	af00      	add	r7, sp, #0
 800a04a:	6078      	str	r0, [r7, #4]
 800a04c:	460b      	mov	r3, r1
 800a04e:	807b      	strh	r3, [r7, #2]
    {
        iconX = x;
 800a050:	687b      	ldr	r3, [r7, #4]
 800a052:	887a      	ldrh	r2, [r7, #2]
 800a054:	871a      	strh	r2, [r3, #56]	; 0x38
    }
 800a056:	bf00      	nop
 800a058:	370c      	adds	r7, #12
 800a05a:	46bd      	mov	sp, r7
 800a05c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a060:	4770      	bx	lr

0800a062 <_ZN8touchgfx14ButtonWithIcon8setIconYEs>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconY(int16_t y)
 800a062:	b480      	push	{r7}
 800a064:	b083      	sub	sp, #12
 800a066:	af00      	add	r7, sp, #0
 800a068:	6078      	str	r0, [r7, #4]
 800a06a:	460b      	mov	r3, r1
 800a06c:	807b      	strh	r3, [r7, #2]
    {
        iconY = y;
 800a06e:	687b      	ldr	r3, [r7, #4]
 800a070:	887a      	ldrh	r2, [r7, #2]
 800a072:	875a      	strh	r2, [r3, #58]	; 0x3a
    }
 800a074:	bf00      	nop
 800a076:	370c      	adds	r7, #12
 800a078:	46bd      	mov	sp, r7
 800a07a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a07e:	4770      	bx	lr

0800a080 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The values set are overwritten on a subsequent call to setBitmaps.
     */
    void setIconXY(int16_t x, int16_t y)
 800a080:	b580      	push	{r7, lr}
 800a082:	b082      	sub	sp, #8
 800a084:	af00      	add	r7, sp, #0
 800a086:	6078      	str	r0, [r7, #4]
 800a088:	460b      	mov	r3, r1
 800a08a:	807b      	strh	r3, [r7, #2]
 800a08c:	4613      	mov	r3, r2
 800a08e:	803b      	strh	r3, [r7, #0]
    {
        setIconX(x);
 800a090:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800a094:	4619      	mov	r1, r3
 800a096:	6878      	ldr	r0, [r7, #4]
 800a098:	f7ff ffd4 	bl	800a044 <_ZN8touchgfx14ButtonWithIcon8setIconXEs>
        setIconY(y);
 800a09c:	f9b7 3000 	ldrsh.w	r3, [r7]
 800a0a0:	4619      	mov	r1, r3
 800a0a2:	6878      	ldr	r0, [r7, #4]
 800a0a4:	f7ff ffdd 	bl	800a062 <_ZN8touchgfx14ButtonWithIcon8setIconYEs>
    }
 800a0a8:	bf00      	nop
 800a0aa:	3708      	adds	r7, #8
 800a0ac:	46bd      	mov	sp, r7
 800a0ae:	bd80      	pop	{r7, pc}

0800a0b0 <_ZN19ClockScreenViewBase11applicationEv>:
    ClockScreenViewBase();
    virtual ~ClockScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800a0b0:	b580      	push	{r7, lr}
 800a0b2:	b082      	sub	sp, #8
 800a0b4:	af00      	add	r7, sp, #0
 800a0b6:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800a0b8:	f00e fe4c 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 800a0bc:	4603      	mov	r3, r0
    }
 800a0be:	4618      	mov	r0, r3
 800a0c0:	3708      	adds	r7, #8
 800a0c2:	46bd      	mov	sp, r7
 800a0c4:	bd80      	pop	{r7, pc}
	...

0800a0c8 <_ZN8touchgfx4ViewI20ClockScreenPresenterED1Ev>:
 * @see Screen
 *
 * @note All views in the application must be a subclass of this type.
 */
template <class T>
class View : public Screen
 800a0c8:	b580      	push	{r7, lr}
 800a0ca:	b082      	sub	sp, #8
 800a0cc:	af00      	add	r7, sp, #0
 800a0ce:	6078      	str	r0, [r7, #4]
 800a0d0:	4a05      	ldr	r2, [pc, #20]	; (800a0e8 <_ZN8touchgfx4ViewI20ClockScreenPresenterED1Ev+0x20>)
 800a0d2:	687b      	ldr	r3, [r7, #4]
 800a0d4:	601a      	str	r2, [r3, #0]
 800a0d6:	687b      	ldr	r3, [r7, #4]
 800a0d8:	4618      	mov	r0, r3
 800a0da:	f7ff fcc1 	bl	8009a60 <_ZN8touchgfx6ScreenD1Ev>
 800a0de:	687b      	ldr	r3, [r7, #4]
 800a0e0:	4618      	mov	r0, r3
 800a0e2:	3708      	adds	r7, #8
 800a0e4:	46bd      	mov	sp, r7
 800a0e6:	bd80      	pop	{r7, pc}
 800a0e8:	0802dd68 	.word	0x0802dd68

0800a0ec <_ZN8touchgfx4ViewI20ClockScreenPresenterED0Ev>:
 800a0ec:	b580      	push	{r7, lr}
 800a0ee:	b082      	sub	sp, #8
 800a0f0:	af00      	add	r7, sp, #0
 800a0f2:	6078      	str	r0, [r7, #4]
 800a0f4:	6878      	ldr	r0, [r7, #4]
 800a0f6:	f7ff ffe7 	bl	800a0c8 <_ZN8touchgfx4ViewI20ClockScreenPresenterED1Ev>
 800a0fa:	2140      	movs	r1, #64	; 0x40
 800a0fc:	6878      	ldr	r0, [r7, #4]
 800a0fe:	f020 f886 	bl	802a20e <_ZdlPvj>
 800a102:	687b      	ldr	r3, [r7, #4]
 800a104:	4618      	mov	r0, r3
 800a106:	3708      	adds	r7, #8
 800a108:	46bd      	mov	sp, r7
 800a10a:	bd80      	pop	{r7, pc}

0800a10c <_ZN19ClockScreenViewBaseC1Ev>:
#include <gui_generated/clockscreen_screen/ClockScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

ClockScreenViewBase::ClockScreenViewBase() :
 800a10c:	b590      	push	{r4, r7, lr}
 800a10e:	b09d      	sub	sp, #116	; 0x74
 800a110:	af02      	add	r7, sp, #8
 800a112:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &ClockScreenViewBase::buttonCallbackHandler)
 800a114:	697b      	ldr	r3, [r7, #20]
 800a116:	4618      	mov	r0, r3
 800a118:	f000 f9ce 	bl	800a4b8 <_ZN8touchgfx4ViewI20ClockScreenPresenterEC1Ev>
 800a11c:	4ab4      	ldr	r2, [pc, #720]	; (800a3f0 <_ZN19ClockScreenViewBaseC1Ev+0x2e4>)
 800a11e:	697b      	ldr	r3, [r7, #20]
 800a120:	601a      	str	r2, [r3, #0]
 800a122:	697b      	ldr	r3, [r7, #20]
 800a124:	3340      	adds	r3, #64	; 0x40
 800a126:	4618      	mov	r0, r3
 800a128:	f7ff fd58 	bl	8009bdc <_ZN8touchgfx3BoxC1Ev>
 800a12c:	697b      	ldr	r3, [r7, #20]
 800a12e:	336c      	adds	r3, #108	; 0x6c
 800a130:	4618      	mov	r0, r3
 800a132:	f7ff fd9b 	bl	8009c6c <_ZN8touchgfx8TextAreaC1Ev>
 800a136:	697b      	ldr	r3, [r7, #20]
 800a138:	33b4      	adds	r3, #180	; 0xb4
 800a13a:	4618      	mov	r0, r3
 800a13c:	f008 fbd0 	bl	80128e0 <_ZN8touchgfx12DigitalClockC1Ev>
 800a140:	697b      	ldr	r3, [r7, #20]
 800a142:	f503 73a6 	add.w	r3, r3, #332	; 0x14c
 800a146:	4618      	mov	r0, r3
 800a148:	f00c f9ea 	bl	8016520 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800a14c:	697b      	ldr	r3, [r7, #20]
 800a14e:	f503 70c4 	add.w	r0, r3, #392	; 0x188
 800a152:	4ba8      	ldr	r3, [pc, #672]	; (800a3f4 <_ZN19ClockScreenViewBaseC1Ev+0x2e8>)
 800a154:	61fb      	str	r3, [r7, #28]
 800a156:	2300      	movs	r3, #0
 800a158:	623b      	str	r3, [r7, #32]
 800a15a:	f107 031c 	add.w	r3, r7, #28
 800a15e:	cb0c      	ldmia	r3, {r2, r3}
 800a160:	6979      	ldr	r1, [r7, #20]
 800a162:	f000 f9cf 	bl	800a504 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800a166:	697b      	ldr	r3, [r7, #20]
 800a168:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800a16c:	23f0      	movs	r3, #240	; 0xf0
 800a16e:	9300      	str	r3, [sp, #0]
 800a170:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800a174:	2200      	movs	r2, #0
 800a176:	2100      	movs	r1, #0
 800a178:	f7ff fb3c 	bl	80097f4 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800a17c:	697b      	ldr	r3, [r7, #20]
 800a17e:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800a182:	2300      	movs	r3, #0
 800a184:	f887 3054 	strb.w	r3, [r7, #84]	; 0x54
 800a188:	2300      	movs	r3, #0
 800a18a:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
 800a18e:	2300      	movs	r3, #0
 800a190:	f887 3052 	strb.w	r3, [r7, #82]	; 0x52
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800a194:	f897 3054 	ldrb.w	r3, [r7, #84]	; 0x54
 800a198:	041b      	lsls	r3, r3, #16
 800a19a:	461a      	mov	r2, r3
 800a19c:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 800a1a0:	021b      	lsls	r3, r3, #8
 800a1a2:	431a      	orrs	r2, r3
 800a1a4:	f897 3052 	ldrb.w	r3, [r7, #82]	; 0x52
 800a1a8:	4313      	orrs	r3, r2
 800a1aa:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800a1ae:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800a1b2:	4611      	mov	r1, r2
 800a1b4:	4618      	mov	r0, r3
 800a1b6:	f7ff fa59 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800a1ba:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800a1bc:	4619      	mov	r1, r3
 800a1be:	4620      	mov	r0, r4
 800a1c0:	f7ff fd30 	bl	8009c24 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800a1c4:	697a      	ldr	r2, [r7, #20]
 800a1c6:	697b      	ldr	r3, [r7, #20]
 800a1c8:	3340      	adds	r3, #64	; 0x40
 800a1ca:	4619      	mov	r1, r3
 800a1cc:	4610      	mov	r0, r2
 800a1ce:	f7ff fc9f 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Clock_text.setXY(106, 10);
 800a1d2:	697b      	ldr	r3, [r7, #20]
 800a1d4:	336c      	adds	r3, #108	; 0x6c
 800a1d6:	220a      	movs	r2, #10
 800a1d8:	216a      	movs	r1, #106	; 0x6a
 800a1da:	4618      	mov	r0, r3
 800a1dc:	f7ff fb49 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
    Clock_text.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
 800a1e0:	697b      	ldr	r3, [r7, #20]
 800a1e2:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800a1e6:	23f2      	movs	r3, #242	; 0xf2
 800a1e8:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 800a1ec:	23ae      	movs	r3, #174	; 0xae
 800a1ee:	f887 3056 	strb.w	r3, [r7, #86]	; 0x56
 800a1f2:	23ae      	movs	r3, #174	; 0xae
 800a1f4:	f887 3055 	strb.w	r3, [r7, #85]	; 0x55
 800a1f8:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 800a1fc:	041b      	lsls	r3, r3, #16
 800a1fe:	461a      	mov	r2, r3
 800a200:	f897 3056 	ldrb.w	r3, [r7, #86]	; 0x56
 800a204:	021b      	lsls	r3, r3, #8
 800a206:	431a      	orrs	r2, r3
 800a208:	f897 3055 	ldrb.w	r3, [r7, #85]	; 0x55
 800a20c:	4313      	orrs	r3, r2
 800a20e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800a212:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800a216:	4611      	mov	r1, r2
 800a218:	4618      	mov	r0, r3
 800a21a:	f7ff fa27 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800a21e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800a220:	65bc      	str	r4, [r7, #88]	; 0x58
 800a222:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800a224:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800a226:	69ba      	ldr	r2, [r7, #24]
 800a228:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800a22a:	bf00      	nop
    Clock_text.setLinespacing(0);
 800a22c:	697b      	ldr	r3, [r7, #20]
 800a22e:	336c      	adds	r3, #108	; 0x6c
 800a230:	663b      	str	r3, [r7, #96]	; 0x60
 800a232:	2300      	movs	r3, #0
 800a234:	f8a7 305e 	strh.w	r3, [r7, #94]	; 0x5e
        linespace = space;
 800a238:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a23a:	f8b7 205e 	ldrh.w	r2, [r7, #94]	; 0x5e
 800a23e:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800a240:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a242:	681b      	ldr	r3, [r3, #0]
 800a244:	3384      	adds	r3, #132	; 0x84
 800a246:	681b      	ldr	r3, [r3, #0]
 800a248:	6e3c      	ldr	r4, [r7, #96]	; 0x60
 800a24a:	463a      	mov	r2, r7
 800a24c:	6e39      	ldr	r1, [r7, #96]	; 0x60
 800a24e:	4610      	mov	r0, r2
 800a250:	4798      	blx	r3
 800a252:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800a256:	463a      	mov	r2, r7
 800a258:	ca07      	ldmia	r2, {r0, r1, r2}
 800a25a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a25e:	bf00      	nop
    Clock_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XHQB));
 800a260:	697b      	ldr	r3, [r7, #20]
 800a262:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800a266:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800a26a:	210b      	movs	r1, #11
 800a26c:	4618      	mov	r0, r3
 800a26e:	f7ff fce7 	bl	8009c40 <_ZN8touchgfx9TypedTextC1Et>
 800a272:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800a276:	4619      	mov	r1, r3
 800a278:	4620      	mov	r0, r4
 800a27a:	f00b fd3b 	bl	8015cf4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a27e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800a282:	4618      	mov	r0, r3
 800a284:	f7ff f80a 	bl	800929c <_ZN8touchgfx9TypedTextD1Ev>
    add(Clock_text);
 800a288:	697a      	ldr	r2, [r7, #20]
 800a28a:	697b      	ldr	r3, [r7, #20]
 800a28c:	336c      	adds	r3, #108	; 0x6c
 800a28e:	4619      	mov	r1, r3
 800a290:	4610      	mov	r0, r2
 800a292:	f7ff fc3d 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Clock.setPosition(89, 93, 196, 55);
 800a296:	697b      	ldr	r3, [r7, #20]
 800a298:	f103 00b4 	add.w	r0, r3, #180	; 0xb4
 800a29c:	2337      	movs	r3, #55	; 0x37
 800a29e:	9300      	str	r3, [sp, #0]
 800a2a0:	23c4      	movs	r3, #196	; 0xc4
 800a2a2:	225d      	movs	r2, #93	; 0x5d
 800a2a4:	2159      	movs	r1, #89	; 0x59
 800a2a6:	f7ff faa5 	bl	80097f4 <_ZN8touchgfx8Drawable11setPositionEssss>
    Clock.setColor(touchgfx::Color::getColorFromRGB(237, 157, 157));
 800a2aa:	697b      	ldr	r3, [r7, #20]
 800a2ac:	f103 04b4 	add.w	r4, r3, #180	; 0xb4
 800a2b0:	23ed      	movs	r3, #237	; 0xed
 800a2b2:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 800a2b6:	239d      	movs	r3, #157	; 0x9d
 800a2b8:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
 800a2bc:	239d      	movs	r3, #157	; 0x9d
 800a2be:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 800a2c2:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800a2c6:	041b      	lsls	r3, r3, #16
 800a2c8:	461a      	mov	r2, r3
 800a2ca:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 800a2ce:	021b      	lsls	r3, r3, #8
 800a2d0:	431a      	orrs	r2, r3
 800a2d2:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 800a2d6:	4313      	orrs	r3, r2
 800a2d8:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800a2dc:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800a2e0:	4611      	mov	r1, r2
 800a2e2:	4618      	mov	r0, r3
 800a2e4:	f7ff f9c2 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800a2e8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800a2ea:	4619      	mov	r1, r3
 800a2ec:	4620      	mov	r0, r4
 800a2ee:	f008 fa3d 	bl	801276c <_ZN8touchgfx12DigitalClock8setColorENS_9colortypeE>
    Clock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8RXH));
 800a2f2:	697b      	ldr	r3, [r7, #20]
 800a2f4:	f103 04b4 	add.w	r4, r3, #180	; 0xb4
 800a2f8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800a2fc:	210a      	movs	r1, #10
 800a2fe:	4618      	mov	r0, r3
 800a300:	f7ff fc9e 	bl	8009c40 <_ZN8touchgfx9TypedTextC1Et>
 800a304:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800a308:	4619      	mov	r1, r3
 800a30a:	4620      	mov	r0, r4
 800a30c:	f008 fa39 	bl	8012782 <_ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE>
 800a310:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800a314:	4618      	mov	r0, r3
 800a316:	f7fe ffc1 	bl	800929c <_ZN8touchgfx9TypedTextD1Ev>
    Clock.displayLeadingZeroForHourIndicator(true);
 800a31a:	697b      	ldr	r3, [r7, #20]
 800a31c:	33b4      	adds	r3, #180	; 0xb4
 800a31e:	2101      	movs	r1, #1
 800a320:	4618      	mov	r0, r3
 800a322:	f008 fb2b 	bl	801297c <_ZN8touchgfx12DigitalClock34displayLeadingZeroForHourIndicatorEb>
    Clock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR);
 800a326:	697b      	ldr	r3, [r7, #20]
 800a328:	33b4      	adds	r3, #180	; 0xb4
 800a32a:	2103      	movs	r1, #3
 800a32c:	4618      	mov	r0, r3
 800a32e:	f7ff fe49 	bl	8009fc4 <_ZN8touchgfx12DigitalClock14setDisplayModeENS0_11DisplayModeE>
    Clock.setTime24Hour(10, 10, 0);
 800a332:	697b      	ldr	r3, [r7, #20]
 800a334:	f103 00b4 	add.w	r0, r3, #180	; 0xb4
 800a338:	2300      	movs	r3, #0
 800a33a:	220a      	movs	r2, #10
 800a33c:	210a      	movs	r1, #10
 800a33e:	f008 fb20 	bl	8012982 <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>
    add(Clock);
 800a342:	697a      	ldr	r2, [r7, #20]
 800a344:	697b      	ldr	r3, [r7, #20]
 800a346:	33b4      	adds	r3, #180	; 0xb4
 800a348:	4619      	mov	r1, r3
 800a34a:	4610      	mov	r0, r2
 800a34c:	f7ff fbe0 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Back_button.setXY(12, 90);
 800a350:	697b      	ldr	r3, [r7, #20]
 800a352:	f503 73a6 	add.w	r3, r3, #332	; 0x14c
 800a356:	225a      	movs	r2, #90	; 0x5a
 800a358:	210c      	movs	r1, #12
 800a35a:	4618      	mov	r0, r3
 800a35c:	f7ff fa89 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
    Back_button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
 800a360:	697b      	ldr	r3, [r7, #20]
 800a362:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
 800a366:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800a36a:	2100      	movs	r1, #0
 800a36c:	4618      	mov	r0, r3
 800a36e:	f7ff f9c3 	bl	80096f8 <_ZN8touchgfx6BitmapC1Et>
 800a372:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800a376:	2101      	movs	r1, #1
 800a378:	4618      	mov	r0, r3
 800a37a:	f7ff f9bd 	bl	80096f8 <_ZN8touchgfx6BitmapC1Et>
 800a37e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800a382:	2104      	movs	r1, #4
 800a384:	4618      	mov	r0, r3
 800a386:	f7ff f9b7 	bl	80096f8 <_ZN8touchgfx6BitmapC1Et>
 800a38a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800a38e:	2104      	movs	r1, #4
 800a390:	4618      	mov	r0, r3
 800a392:	f7ff f9b1 	bl	80096f8 <_ZN8touchgfx6BitmapC1Et>
 800a396:	f107 003c 	add.w	r0, r7, #60	; 0x3c
 800a39a:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800a39e:	f107 0134 	add.w	r1, r7, #52	; 0x34
 800a3a2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800a3a6:	9300      	str	r3, [sp, #0]
 800a3a8:	4603      	mov	r3, r0
 800a3aa:	4620      	mov	r0, r4
 800a3ac:	f00c f822 	bl	80163f4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    Back_button.setIconXY(5, 5);
 800a3b0:	697b      	ldr	r3, [r7, #20]
 800a3b2:	f503 73a6 	add.w	r3, r3, #332	; 0x14c
 800a3b6:	2205      	movs	r2, #5
 800a3b8:	2105      	movs	r1, #5
 800a3ba:	4618      	mov	r0, r3
 800a3bc:	f7ff fe60 	bl	800a080 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    Back_button.setAction(buttonCallback);
 800a3c0:	697b      	ldr	r3, [r7, #20]
 800a3c2:	f503 72a6 	add.w	r2, r3, #332	; 0x14c
 800a3c6:	697b      	ldr	r3, [r7, #20]
 800a3c8:	f503 73c4 	add.w	r3, r3, #392	; 0x188
 800a3cc:	4619      	mov	r1, r3
 800a3ce:	4610      	mov	r0, r2
 800a3d0:	f7ff fe08 	bl	8009fe4 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(Back_button);
 800a3d4:	697a      	ldr	r2, [r7, #20]
 800a3d6:	697b      	ldr	r3, [r7, #20]
 800a3d8:	f503 73a6 	add.w	r3, r3, #332	; 0x14c
 800a3dc:	4619      	mov	r1, r3
 800a3de:	4610      	mov	r0, r2
 800a3e0:	f7ff fb96 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800a3e4:	697b      	ldr	r3, [r7, #20]
 800a3e6:	4618      	mov	r0, r3
 800a3e8:	376c      	adds	r7, #108	; 0x6c
 800a3ea:	46bd      	mov	sp, r7
 800a3ec:	bd90      	pop	{r4, r7, pc}
 800a3ee:	bf00      	nop
 800a3f0:	0802dd1c 	.word	0x0802dd1c
 800a3f4:	0800a48b 	.word	0x0800a48b

0800a3f8 <_ZN19ClockScreenViewBaseD1Ev>:

ClockScreenViewBase::~ClockScreenViewBase()
 800a3f8:	b580      	push	{r7, lr}
 800a3fa:	b082      	sub	sp, #8
 800a3fc:	af00      	add	r7, sp, #0
 800a3fe:	6078      	str	r0, [r7, #4]
 800a400:	4a13      	ldr	r2, [pc, #76]	; (800a450 <_ZN19ClockScreenViewBaseD1Ev+0x58>)
 800a402:	687b      	ldr	r3, [r7, #4]
 800a404:	601a      	str	r2, [r3, #0]
 800a406:	687b      	ldr	r3, [r7, #4]
 800a408:	f503 73c4 	add.w	r3, r3, #392	; 0x188
 800a40c:	4618      	mov	r0, r3
 800a40e:	f000 f8b9 	bl	800a584 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800a412:	687b      	ldr	r3, [r7, #4]
 800a414:	f503 73a6 	add.w	r3, r3, #332	; 0x14c
 800a418:	4618      	mov	r0, r3
 800a41a:	f000 f9a7 	bl	800a76c <_ZN8touchgfx14ButtonWithIconD1Ev>
 800a41e:	687b      	ldr	r3, [r7, #4]
 800a420:	33b4      	adds	r3, #180	; 0xb4
 800a422:	4618      	mov	r0, r3
 800a424:	f000 f958 	bl	800a6d8 <_ZN8touchgfx12DigitalClockD1Ev>
 800a428:	687b      	ldr	r3, [r7, #4]
 800a42a:	336c      	adds	r3, #108	; 0x6c
 800a42c:	4618      	mov	r0, r3
 800a42e:	f7ff fd5b 	bl	8009ee8 <_ZN8touchgfx8TextAreaD1Ev>
 800a432:	687b      	ldr	r3, [r7, #4]
 800a434:	3340      	adds	r3, #64	; 0x40
 800a436:	4618      	mov	r0, r3
 800a438:	f000 f90a 	bl	800a650 <_ZN8touchgfx3BoxD1Ev>
 800a43c:	687b      	ldr	r3, [r7, #4]
 800a43e:	4618      	mov	r0, r3
 800a440:	f7ff fe42 	bl	800a0c8 <_ZN8touchgfx4ViewI20ClockScreenPresenterED1Ev>
{

}
 800a444:	687b      	ldr	r3, [r7, #4]
 800a446:	4618      	mov	r0, r3
 800a448:	3708      	adds	r7, #8
 800a44a:	46bd      	mov	sp, r7
 800a44c:	bd80      	pop	{r7, pc}
 800a44e:	bf00      	nop
 800a450:	0802dd1c 	.word	0x0802dd1c

0800a454 <_ZN19ClockScreenViewBaseD0Ev>:
ClockScreenViewBase::~ClockScreenViewBase()
 800a454:	b580      	push	{r7, lr}
 800a456:	b082      	sub	sp, #8
 800a458:	af00      	add	r7, sp, #0
 800a45a:	6078      	str	r0, [r7, #4]
}
 800a45c:	6878      	ldr	r0, [r7, #4]
 800a45e:	f7ff ffcb 	bl	800a3f8 <_ZN19ClockScreenViewBaseD1Ev>
 800a462:	f44f 71cc 	mov.w	r1, #408	; 0x198
 800a466:	6878      	ldr	r0, [r7, #4]
 800a468:	f01f fed1 	bl	802a20e <_ZdlPvj>
 800a46c:	687b      	ldr	r3, [r7, #4]
 800a46e:	4618      	mov	r0, r3
 800a470:	3708      	adds	r7, #8
 800a472:	46bd      	mov	sp, r7
 800a474:	bd80      	pop	{r7, pc}

0800a476 <_ZN19ClockScreenViewBase11setupScreenEv>:

void ClockScreenViewBase::setupScreen()
{
 800a476:	b480      	push	{r7}
 800a478:	b083      	sub	sp, #12
 800a47a:	af00      	add	r7, sp, #0
 800a47c:	6078      	str	r0, [r7, #4]

}
 800a47e:	bf00      	nop
 800a480:	370c      	adds	r7, #12
 800a482:	46bd      	mov	sp, r7
 800a484:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a488:	4770      	bx	lr

0800a48a <_ZN19ClockScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void ClockScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800a48a:	b580      	push	{r7, lr}
 800a48c:	b082      	sub	sp, #8
 800a48e:	af00      	add	r7, sp, #0
 800a490:	6078      	str	r0, [r7, #4]
 800a492:	6039      	str	r1, [r7, #0]
    if (&src == &Back_button)
 800a494:	687b      	ldr	r3, [r7, #4]
 800a496:	f503 73a6 	add.w	r3, r3, #332	; 0x14c
 800a49a:	683a      	ldr	r2, [r7, #0]
 800a49c:	429a      	cmp	r2, r3
 800a49e:	d106      	bne.n	800a4ae <_ZN19ClockScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x24>
    {
        //ClockToMain
        //When Back_button clicked change screen to MainScreen
        //Go to MainScreen with screen transition towards West
        application().gotoMainScreenScreenSlideTransitionWest();
 800a4a0:	6878      	ldr	r0, [r7, #4]
 800a4a2:	f7ff fe05 	bl	800a0b0 <_ZN19ClockScreenViewBase11applicationEv>
 800a4a6:	4603      	mov	r3, r0
 800a4a8:	4618      	mov	r0, r3
 800a4aa:	f000 fce5 	bl	800ae78 <_ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionWestEv>
    }
}
 800a4ae:	bf00      	nop
 800a4b0:	3708      	adds	r7, #8
 800a4b2:	46bd      	mov	sp, r7
 800a4b4:	bd80      	pop	{r7, pc}
	...

0800a4b8 <_ZN8touchgfx4ViewI20ClockScreenPresenterEC1Ev>:
{
public:
    View()
 800a4b8:	b580      	push	{r7, lr}
 800a4ba:	b082      	sub	sp, #8
 800a4bc:	af00      	add	r7, sp, #0
 800a4be:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800a4c0:	687b      	ldr	r3, [r7, #4]
 800a4c2:	4618      	mov	r0, r3
 800a4c4:	f010 f854 	bl	801a570 <_ZN8touchgfx6ScreenC1Ev>
 800a4c8:	4a05      	ldr	r2, [pc, #20]	; (800a4e0 <_ZN8touchgfx4ViewI20ClockScreenPresenterEC1Ev+0x28>)
 800a4ca:	687b      	ldr	r3, [r7, #4]
 800a4cc:	601a      	str	r2, [r3, #0]
 800a4ce:	687b      	ldr	r3, [r7, #4]
 800a4d0:	2200      	movs	r2, #0
 800a4d2:	63da      	str	r2, [r3, #60]	; 0x3c
    {
    }
 800a4d4:	687b      	ldr	r3, [r7, #4]
 800a4d6:	4618      	mov	r0, r3
 800a4d8:	3708      	adds	r7, #8
 800a4da:	46bd      	mov	sp, r7
 800a4dc:	bd80      	pop	{r7, pc}
 800a4de:	bf00      	nop
 800a4e0:	0802dd68 	.word	0x0802dd68

0800a4e4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>:
 *
 * @note As with Callback, this class exists in four versions to support callback functions
 *       taking zero, one, two or three arguments.
 */
template <class T1>
class GenericCallback<T1, void, void>
 800a4e4:	b480      	push	{r7}
 800a4e6:	b083      	sub	sp, #12
 800a4e8:	af00      	add	r7, sp, #0
 800a4ea:	6078      	str	r0, [r7, #4]
 800a4ec:	4a04      	ldr	r2, [pc, #16]	; (800a500 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev+0x1c>)
 800a4ee:	687b      	ldr	r3, [r7, #4]
 800a4f0:	601a      	str	r2, [r3, #0]
 800a4f2:	687b      	ldr	r3, [r7, #4]
 800a4f4:	4618      	mov	r0, r3
 800a4f6:	370c      	adds	r7, #12
 800a4f8:	46bd      	mov	sp, r7
 800a4fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4fe:	4770      	bx	lr
 800a500:	0802dd9c 	.word	0x0802dd9c

0800a504 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_1 Address of member function. This is the version where function takes one
     *                       argument.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800a504:	b580      	push	{r7, lr}
 800a506:	b084      	sub	sp, #16
 800a508:	af00      	add	r7, sp, #0
 800a50a:	60f8      	str	r0, [r7, #12]
 800a50c:	60b9      	str	r1, [r7, #8]
 800a50e:	4639      	mov	r1, r7
 800a510:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800a514:	68fb      	ldr	r3, [r7, #12]
 800a516:	4618      	mov	r0, r3
 800a518:	f7ff ffe4 	bl	800a4e4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800a51c:	4a08      	ldr	r2, [pc, #32]	; (800a540 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800a51e:	68fb      	ldr	r3, [r7, #12]
 800a520:	601a      	str	r2, [r3, #0]
 800a522:	68fb      	ldr	r3, [r7, #12]
 800a524:	68ba      	ldr	r2, [r7, #8]
 800a526:	605a      	str	r2, [r3, #4]
 800a528:	68fb      	ldr	r3, [r7, #12]
 800a52a:	3308      	adds	r3, #8
 800a52c:	463a      	mov	r2, r7
 800a52e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800a532:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800a536:	68fb      	ldr	r3, [r7, #12]
 800a538:	4618      	mov	r0, r3
 800a53a:	3710      	adds	r7, #16
 800a53c:	46bd      	mov	sp, r7
 800a53e:	bd80      	pop	{r7, pc}
 800a540:	0802dd50 	.word	0x0802dd50

0800a544 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>:
    virtual ~GenericCallback()
 800a544:	b480      	push	{r7}
 800a546:	b083      	sub	sp, #12
 800a548:	af00      	add	r7, sp, #0
 800a54a:	6078      	str	r0, [r7, #4]
    }
 800a54c:	4a04      	ldr	r2, [pc, #16]	; (800a560 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev+0x1c>)
 800a54e:	687b      	ldr	r3, [r7, #4]
 800a550:	601a      	str	r2, [r3, #0]
 800a552:	687b      	ldr	r3, [r7, #4]
 800a554:	4618      	mov	r0, r3
 800a556:	370c      	adds	r7, #12
 800a558:	46bd      	mov	sp, r7
 800a55a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a55e:	4770      	bx	lr
 800a560:	0802dd9c 	.word	0x0802dd9c

0800a564 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev>:
    virtual ~GenericCallback()
 800a564:	b580      	push	{r7, lr}
 800a566:	b082      	sub	sp, #8
 800a568:	af00      	add	r7, sp, #0
 800a56a:	6078      	str	r0, [r7, #4]
    }
 800a56c:	6878      	ldr	r0, [r7, #4]
 800a56e:	f7ff ffe9 	bl	800a544 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800a572:	2104      	movs	r1, #4
 800a574:	6878      	ldr	r0, [r7, #4]
 800a576:	f01f fe4a 	bl	802a20e <_ZdlPvj>
 800a57a:	687b      	ldr	r3, [r7, #4]
 800a57c:	4618      	mov	r0, r3
 800a57e:	3708      	adds	r7, #8
 800a580:	46bd      	mov	sp, r7
 800a582:	bd80      	pop	{r7, pc}

0800a584 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800a584:	b580      	push	{r7, lr}
 800a586:	b082      	sub	sp, #8
 800a588:	af00      	add	r7, sp, #0
 800a58a:	6078      	str	r0, [r7, #4]
 800a58c:	4a05      	ldr	r2, [pc, #20]	; (800a5a4 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800a58e:	687b      	ldr	r3, [r7, #4]
 800a590:	601a      	str	r2, [r3, #0]
 800a592:	687b      	ldr	r3, [r7, #4]
 800a594:	4618      	mov	r0, r3
 800a596:	f7ff ffd5 	bl	800a544 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800a59a:	687b      	ldr	r3, [r7, #4]
 800a59c:	4618      	mov	r0, r3
 800a59e:	3708      	adds	r7, #8
 800a5a0:	46bd      	mov	sp, r7
 800a5a2:	bd80      	pop	{r7, pc}
 800a5a4:	0802dd50 	.word	0x0802dd50

0800a5a8 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800a5a8:	b580      	push	{r7, lr}
 800a5aa:	b082      	sub	sp, #8
 800a5ac:	af00      	add	r7, sp, #0
 800a5ae:	6078      	str	r0, [r7, #4]
 800a5b0:	6878      	ldr	r0, [r7, #4]
 800a5b2:	f7ff ffe7 	bl	800a584 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800a5b6:	2110      	movs	r1, #16
 800a5b8:	6878      	ldr	r0, [r7, #4]
 800a5ba:	f01f fe28 	bl	802a20e <_ZdlPvj>
 800a5be:	687b      	ldr	r3, [r7, #4]
 800a5c0:	4618      	mov	r0, r3
 800a5c2:	3708      	adds	r7, #8
 800a5c4:	46bd      	mov	sp, r7
 800a5c6:	bd80      	pop	{r7, pc}

0800a5c8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800a5c8:	b580      	push	{r7, lr}
 800a5ca:	b082      	sub	sp, #8
 800a5cc:	af00      	add	r7, sp, #0
 800a5ce:	6078      	str	r0, [r7, #4]
 800a5d0:	4a05      	ldr	r2, [pc, #20]	; (800a5e8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 800a5d2:	687b      	ldr	r3, [r7, #4]
 800a5d4:	601a      	str	r2, [r3, #0]
 800a5d6:	687b      	ldr	r3, [r7, #4]
 800a5d8:	4618      	mov	r0, r3
 800a5da:	f7ff fcc5 	bl	8009f68 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800a5de:	687b      	ldr	r3, [r7, #4]
 800a5e0:	4618      	mov	r0, r3
 800a5e2:	3708      	adds	r7, #8
 800a5e4:	46bd      	mov	sp, r7
 800a5e6:	bd80      	pop	{r7, pc}
 800a5e8:	0802ddb4 	.word	0x0802ddb4

0800a5ec <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800a5ec:	b580      	push	{r7, lr}
 800a5ee:	b082      	sub	sp, #8
 800a5f0:	af00      	add	r7, sp, #0
 800a5f2:	6078      	str	r0, [r7, #4]
 800a5f4:	6878      	ldr	r0, [r7, #4]
 800a5f6:	f7ff ffe7 	bl	800a5c8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800a5fa:	214c      	movs	r1, #76	; 0x4c
 800a5fc:	6878      	ldr	r0, [r7, #4]
 800a5fe:	f01f fe06 	bl	802a20e <_ZdlPvj>
 800a602:	687b      	ldr	r3, [r7, #4]
 800a604:	4618      	mov	r0, r3
 800a606:	3708      	adds	r7, #8
 800a608:	46bd      	mov	sp, r7
 800a60a:	bd80      	pop	{r7, pc}

0800a60c <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
 800a60c:	b580      	push	{r7, lr}
 800a60e:	b082      	sub	sp, #8
 800a610:	af00      	add	r7, sp, #0
 800a612:	6078      	str	r0, [r7, #4]
 800a614:	4a05      	ldr	r2, [pc, #20]	; (800a62c <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800a616:	687b      	ldr	r3, [r7, #4]
 800a618:	601a      	str	r2, [r3, #0]
 800a61a:	687b      	ldr	r3, [r7, #4]
 800a61c:	4618      	mov	r0, r3
 800a61e:	f7ff f8ab 	bl	8009778 <_ZN8touchgfx8DrawableD1Ev>
 800a622:	687b      	ldr	r3, [r7, #4]
 800a624:	4618      	mov	r0, r3
 800a626:	3708      	adds	r7, #8
 800a628:	46bd      	mov	sp, r7
 800a62a:	bd80      	pop	{r7, pc}
 800a62c:	0802ede8 	.word	0x0802ede8

0800a630 <_ZN8touchgfx9ContainerD0Ev>:
 800a630:	b580      	push	{r7, lr}
 800a632:	b082      	sub	sp, #8
 800a634:	af00      	add	r7, sp, #0
 800a636:	6078      	str	r0, [r7, #4]
 800a638:	6878      	ldr	r0, [r7, #4]
 800a63a:	f7ff ffe7 	bl	800a60c <_ZN8touchgfx9ContainerD1Ev>
 800a63e:	212c      	movs	r1, #44	; 0x2c
 800a640:	6878      	ldr	r0, [r7, #4]
 800a642:	f01f fde4 	bl	802a20e <_ZdlPvj>
 800a646:	687b      	ldr	r3, [r7, #4]
 800a648:	4618      	mov	r0, r3
 800a64a:	3708      	adds	r7, #8
 800a64c:	46bd      	mov	sp, r7
 800a64e:	bd80      	pop	{r7, pc}

0800a650 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800a650:	b580      	push	{r7, lr}
 800a652:	b082      	sub	sp, #8
 800a654:	af00      	add	r7, sp, #0
 800a656:	6078      	str	r0, [r7, #4]
 800a658:	4a05      	ldr	r2, [pc, #20]	; (800a670 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800a65a:	687b      	ldr	r3, [r7, #4]
 800a65c:	601a      	str	r2, [r3, #0]
 800a65e:	687b      	ldr	r3, [r7, #4]
 800a660:	4618      	mov	r0, r3
 800a662:	f7ff fa99 	bl	8009b98 <_ZN8touchgfx6WidgetD1Ev>
 800a666:	687b      	ldr	r3, [r7, #4]
 800a668:	4618      	mov	r0, r3
 800a66a:	3708      	adds	r7, #8
 800a66c:	46bd      	mov	sp, r7
 800a66e:	bd80      	pop	{r7, pc}
 800a670:	0802f3fc 	.word	0x0802f3fc

0800a674 <_ZN8touchgfx3BoxD0Ev>:
 800a674:	b580      	push	{r7, lr}
 800a676:	b082      	sub	sp, #8
 800a678:	af00      	add	r7, sp, #0
 800a67a:	6078      	str	r0, [r7, #4]
 800a67c:	6878      	ldr	r0, [r7, #4]
 800a67e:	f7ff ffe7 	bl	800a650 <_ZN8touchgfx3BoxD1Ev>
 800a682:	212c      	movs	r1, #44	; 0x2c
 800a684:	6878      	ldr	r0, [r7, #4]
 800a686:	f01f fdc2 	bl	802a20e <_ZdlPvj>
 800a68a:	687b      	ldr	r3, [r7, #4]
 800a68c:	4618      	mov	r0, r3
 800a68e:	3708      	adds	r7, #8
 800a690:	46bd      	mov	sp, r7
 800a692:	bd80      	pop	{r7, pc}

0800a694 <_ZN8touchgfx13AbstractClockD1Ev>:
 * Superclass of clock widgets. Allows the hour, minute and second of the clock to be set and
 * read.
 *
 * @see AnalogClock, DigitalClock
 */
class AbstractClock : public Container
 800a694:	b580      	push	{r7, lr}
 800a696:	b082      	sub	sp, #8
 800a698:	af00      	add	r7, sp, #0
 800a69a:	6078      	str	r0, [r7, #4]
 800a69c:	4a05      	ldr	r2, [pc, #20]	; (800a6b4 <_ZN8touchgfx13AbstractClockD1Ev+0x20>)
 800a69e:	687b      	ldr	r3, [r7, #4]
 800a6a0:	601a      	str	r2, [r3, #0]
 800a6a2:	687b      	ldr	r3, [r7, #4]
 800a6a4:	4618      	mov	r0, r3
 800a6a6:	f7ff ffb1 	bl	800a60c <_ZN8touchgfx9ContainerD1Ev>
 800a6aa:	687b      	ldr	r3, [r7, #4]
 800a6ac:	4618      	mov	r0, r3
 800a6ae:	3708      	adds	r7, #8
 800a6b0:	46bd      	mov	sp, r7
 800a6b2:	bd80      	pop	{r7, pc}
 800a6b4:	0802ed4c 	.word	0x0802ed4c

0800a6b8 <_ZN8touchgfx13AbstractClockD0Ev>:
 800a6b8:	b580      	push	{r7, lr}
 800a6ba:	b082      	sub	sp, #8
 800a6bc:	af00      	add	r7, sp, #0
 800a6be:	6078      	str	r0, [r7, #4]
 800a6c0:	6878      	ldr	r0, [r7, #4]
 800a6c2:	f7ff ffe7 	bl	800a694 <_ZN8touchgfx13AbstractClockD1Ev>
 800a6c6:	2130      	movs	r1, #48	; 0x30
 800a6c8:	6878      	ldr	r0, [r7, #4]
 800a6ca:	f01f fda0 	bl	802a20e <_ZdlPvj>
 800a6ce:	687b      	ldr	r3, [r7, #4]
 800a6d0:	4618      	mov	r0, r3
 800a6d2:	3708      	adds	r7, #8
 800a6d4:	46bd      	mov	sp, r7
 800a6d6:	bd80      	pop	{r7, pc}

0800a6d8 <_ZN8touchgfx12DigitalClockD1Ev>:
class DigitalClock : public AbstractClock
 800a6d8:	b580      	push	{r7, lr}
 800a6da:	b082      	sub	sp, #8
 800a6dc:	af00      	add	r7, sp, #0
 800a6de:	6078      	str	r0, [r7, #4]
 800a6e0:	4a08      	ldr	r2, [pc, #32]	; (800a704 <_ZN8touchgfx12DigitalClockD1Ev+0x2c>)
 800a6e2:	687b      	ldr	r3, [r7, #4]
 800a6e4:	601a      	str	r2, [r3, #0]
 800a6e6:	687b      	ldr	r3, [r7, #4]
 800a6e8:	3334      	adds	r3, #52	; 0x34
 800a6ea:	4618      	mov	r0, r3
 800a6ec:	f7ff ff6c 	bl	800a5c8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800a6f0:	687b      	ldr	r3, [r7, #4]
 800a6f2:	4618      	mov	r0, r3
 800a6f4:	f7ff ffce 	bl	800a694 <_ZN8touchgfx13AbstractClockD1Ev>
 800a6f8:	687b      	ldr	r3, [r7, #4]
 800a6fa:	4618      	mov	r0, r3
 800a6fc:	3708      	adds	r7, #8
 800a6fe:	46bd      	mov	sp, r7
 800a700:	bd80      	pop	{r7, pc}
 800a702:	bf00      	nop
 800a704:	0802ec8c 	.word	0x0802ec8c

0800a708 <_ZN8touchgfx12DigitalClockD0Ev>:
 800a708:	b580      	push	{r7, lr}
 800a70a:	b082      	sub	sp, #8
 800a70c:	af00      	add	r7, sp, #0
 800a70e:	6078      	str	r0, [r7, #4]
 800a710:	6878      	ldr	r0, [r7, #4]
 800a712:	f7ff ffe1 	bl	800a6d8 <_ZN8touchgfx12DigitalClockD1Ev>
 800a716:	2198      	movs	r1, #152	; 0x98
 800a718:	6878      	ldr	r0, [r7, #4]
 800a71a:	f01f fd78 	bl	802a20e <_ZdlPvj>
 800a71e:	687b      	ldr	r3, [r7, #4]
 800a720:	4618      	mov	r0, r3
 800a722:	3708      	adds	r7, #8
 800a724:	46bd      	mov	sp, r7
 800a726:	bd80      	pop	{r7, pc}

0800a728 <_ZN8touchgfx6ButtonD1Ev>:
{
/**
 * A button with two images. One image showing the unpressed button and one image showing the
 * pressed state.
 */
class Button : public AbstractButton
 800a728:	b580      	push	{r7, lr}
 800a72a:	b082      	sub	sp, #8
 800a72c:	af00      	add	r7, sp, #0
 800a72e:	6078      	str	r0, [r7, #4]
 800a730:	4a05      	ldr	r2, [pc, #20]	; (800a748 <_ZN8touchgfx6ButtonD1Ev+0x20>)
 800a732:	687b      	ldr	r3, [r7, #4]
 800a734:	601a      	str	r2, [r3, #0]
 800a736:	687b      	ldr	r3, [r7, #4]
 800a738:	4618      	mov	r0, r3
 800a73a:	f7ff fc61 	bl	800a000 <_ZN8touchgfx14AbstractButtonD1Ev>
 800a73e:	687b      	ldr	r3, [r7, #4]
 800a740:	4618      	mov	r0, r3
 800a742:	3708      	adds	r7, #8
 800a744:	46bd      	mov	sp, r7
 800a746:	bd80      	pop	{r7, pc}
 800a748:	0802f54c 	.word	0x0802f54c

0800a74c <_ZN8touchgfx6ButtonD0Ev>:
 800a74c:	b580      	push	{r7, lr}
 800a74e:	b082      	sub	sp, #8
 800a750:	af00      	add	r7, sp, #0
 800a752:	6078      	str	r0, [r7, #4]
 800a754:	6878      	ldr	r0, [r7, #4]
 800a756:	f7ff ffe7 	bl	800a728 <_ZN8touchgfx6ButtonD1Ev>
 800a75a:	2134      	movs	r1, #52	; 0x34
 800a75c:	6878      	ldr	r0, [r7, #4]
 800a75e:	f01f fd56 	bl	802a20e <_ZdlPvj>
 800a762:	687b      	ldr	r3, [r7, #4]
 800a764:	4618      	mov	r0, r3
 800a766:	3708      	adds	r7, #8
 800a768:	46bd      	mov	sp, r7
 800a76a:	bd80      	pop	{r7, pc}

0800a76c <_ZN8touchgfx14ButtonWithIconD1Ev>:
class ButtonWithIcon : public Button
 800a76c:	b580      	push	{r7, lr}
 800a76e:	b082      	sub	sp, #8
 800a770:	af00      	add	r7, sp, #0
 800a772:	6078      	str	r0, [r7, #4]
 800a774:	4a05      	ldr	r2, [pc, #20]	; (800a78c <_ZN8touchgfx14ButtonWithIconD1Ev+0x20>)
 800a776:	687b      	ldr	r3, [r7, #4]
 800a778:	601a      	str	r2, [r3, #0]
 800a77a:	687b      	ldr	r3, [r7, #4]
 800a77c:	4618      	mov	r0, r3
 800a77e:	f7ff ffd3 	bl	800a728 <_ZN8touchgfx6ButtonD1Ev>
 800a782:	687b      	ldr	r3, [r7, #4]
 800a784:	4618      	mov	r0, r3
 800a786:	3708      	adds	r7, #8
 800a788:	46bd      	mov	sp, r7
 800a78a:	bd80      	pop	{r7, pc}
 800a78c:	0802f6b8 	.word	0x0802f6b8

0800a790 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800a790:	b580      	push	{r7, lr}
 800a792:	b082      	sub	sp, #8
 800a794:	af00      	add	r7, sp, #0
 800a796:	6078      	str	r0, [r7, #4]
 800a798:	6878      	ldr	r0, [r7, #4]
 800a79a:	f7ff ffe7 	bl	800a76c <_ZN8touchgfx14ButtonWithIconD1Ev>
 800a79e:	213c      	movs	r1, #60	; 0x3c
 800a7a0:	6878      	ldr	r0, [r7, #4]
 800a7a2:	f01f fd34 	bl	802a20e <_ZdlPvj>
 800a7a6:	687b      	ldr	r3, [r7, #4]
 800a7a8:	4618      	mov	r0, r3
 800a7aa:	3708      	adds	r7, #8
 800a7ac:	46bd      	mov	sp, r7
 800a7ae:	bd80      	pop	{r7, pc}

0800a7b0 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 800a7b0:	b580      	push	{r7, lr}
 800a7b2:	b082      	sub	sp, #8
 800a7b4:	af00      	add	r7, sp, #0
 800a7b6:	6078      	str	r0, [r7, #4]
 800a7b8:	6039      	str	r1, [r7, #0]
    {
        (pobject->*pmemfun)(t1);
 800a7ba:	687b      	ldr	r3, [r7, #4]
 800a7bc:	685b      	ldr	r3, [r3, #4]
 800a7be:	687a      	ldr	r2, [r7, #4]
 800a7c0:	68d2      	ldr	r2, [r2, #12]
 800a7c2:	1052      	asrs	r2, r2, #1
 800a7c4:	1898      	adds	r0, r3, r2
 800a7c6:	687b      	ldr	r3, [r7, #4]
 800a7c8:	68db      	ldr	r3, [r3, #12]
 800a7ca:	f003 0301 	and.w	r3, r3, #1
 800a7ce:	2b00      	cmp	r3, #0
 800a7d0:	d102      	bne.n	800a7d8 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800a7d2:	687b      	ldr	r3, [r7, #4]
 800a7d4:	689b      	ldr	r3, [r3, #8]
 800a7d6:	e00a      	b.n	800a7ee <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800a7d8:	687b      	ldr	r3, [r7, #4]
 800a7da:	685b      	ldr	r3, [r3, #4]
 800a7dc:	687a      	ldr	r2, [r7, #4]
 800a7de:	68d2      	ldr	r2, [r2, #12]
 800a7e0:	1052      	asrs	r2, r2, #1
 800a7e2:	4413      	add	r3, r2
 800a7e4:	681b      	ldr	r3, [r3, #0]
 800a7e6:	687a      	ldr	r2, [r7, #4]
 800a7e8:	6892      	ldr	r2, [r2, #8]
 800a7ea:	4413      	add	r3, r2
 800a7ec:	681b      	ldr	r3, [r3, #0]
 800a7ee:	6839      	ldr	r1, [r7, #0]
 800a7f0:	4798      	blx	r3
    }
 800a7f2:	bf00      	nop
 800a7f4:	3708      	adds	r7, #8
 800a7f6:	46bd      	mov	sp, r7
 800a7f8:	bd80      	pop	{r7, pc}

0800a7fa <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    /**
     * Query if this object is valid.
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
 800a7fa:	b480      	push	{r7}
 800a7fc:	b083      	sub	sp, #12
 800a7fe:	af00      	add	r7, sp, #0
 800a800:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800a802:	687b      	ldr	r3, [r7, #4]
 800a804:	685b      	ldr	r3, [r3, #4]
 800a806:	2b00      	cmp	r3, #0
 800a808:	d010      	beq.n	800a82c <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800a80a:	687b      	ldr	r3, [r7, #4]
 800a80c:	689b      	ldr	r3, [r3, #8]
 800a80e:	2b00      	cmp	r3, #0
 800a810:	d107      	bne.n	800a822 <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800a812:	687b      	ldr	r3, [r7, #4]
 800a814:	68db      	ldr	r3, [r3, #12]
 800a816:	f003 0301 	and.w	r3, r3, #1
 800a81a:	2b00      	cmp	r3, #0
 800a81c:	d101      	bne.n	800a822 <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800a81e:	2301      	movs	r3, #1
 800a820:	e000      	b.n	800a824 <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800a822:	2300      	movs	r3, #0
 800a824:	2b01      	cmp	r3, #1
 800a826:	d001      	beq.n	800a82c <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800a828:	2301      	movs	r3, #1
 800a82a:	e000      	b.n	800a82e <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800a82c:	2300      	movs	r3, #0
    }
 800a82e:	4618      	mov	r0, r3
 800a830:	370c      	adds	r7, #12
 800a832:	46bd      	mov	sp, r7
 800a834:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a838:	4770      	bx	lr

0800a83a <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800a83a:	b480      	push	{r7}
 800a83c:	b083      	sub	sp, #12
 800a83e:	af00      	add	r7, sp, #0
 800a840:	6078      	str	r0, [r7, #4]
 800a842:	6039      	str	r1, [r7, #0]
 800a844:	683b      	ldr	r3, [r7, #0]
 800a846:	4618      	mov	r0, r3
 800a848:	370c      	adds	r7, #12
 800a84a:	46bd      	mov	sp, r7
 800a84c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a850:	4770      	bx	lr

0800a852 <_ZN8touchgfx8Drawable14getNextSiblingEv>:
    Drawable* getNextSibling()
 800a852:	b480      	push	{r7}
 800a854:	b083      	sub	sp, #12
 800a856:	af00      	add	r7, sp, #0
 800a858:	6078      	str	r0, [r7, #4]
        return nextSibling;
 800a85a:	687b      	ldr	r3, [r7, #4]
 800a85c:	699b      	ldr	r3, [r3, #24]
    }
 800a85e:	4618      	mov	r0, r3
 800a860:	370c      	adds	r7, #12
 800a862:	46bd      	mov	sp, r7
 800a864:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a868:	4770      	bx	lr

0800a86a <_ZNK8touchgfx8Drawable4getXEv>:
    int16_t getX() const
 800a86a:	b480      	push	{r7}
 800a86c:	b083      	sub	sp, #12
 800a86e:	af00      	add	r7, sp, #0
 800a870:	6078      	str	r0, [r7, #4]
        return rect.x;
 800a872:	687b      	ldr	r3, [r7, #4]
 800a874:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
    }
 800a878:	4618      	mov	r0, r3
 800a87a:	370c      	adds	r7, #12
 800a87c:	46bd      	mov	sp, r7
 800a87e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a882:	4770      	bx	lr

0800a884 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800a884:	b480      	push	{r7}
 800a886:	b083      	sub	sp, #12
 800a888:	af00      	add	r7, sp, #0
 800a88a:	6078      	str	r0, [r7, #4]
 800a88c:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800a88e:	bf00      	nop
 800a890:	370c      	adds	r7, #12
 800a892:	46bd      	mov	sp, r7
 800a894:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a898:	4770      	bx	lr

0800a89a <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800a89a:	b480      	push	{r7}
 800a89c:	b083      	sub	sp, #12
 800a89e:	af00      	add	r7, sp, #0
 800a8a0:	6078      	str	r0, [r7, #4]
 800a8a2:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800a8a4:	bf00      	nop
 800a8a6:	370c      	adds	r7, #12
 800a8a8:	46bd      	mov	sp, r7
 800a8aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8ae:	4770      	bx	lr

0800a8b0 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800a8b0:	b480      	push	{r7}
 800a8b2:	b083      	sub	sp, #12
 800a8b4:	af00      	add	r7, sp, #0
 800a8b6:	6078      	str	r0, [r7, #4]
 800a8b8:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800a8ba:	bf00      	nop
 800a8bc:	370c      	adds	r7, #12
 800a8be:	46bd      	mov	sp, r7
 800a8c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8c4:	4770      	bx	lr

0800a8c6 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800a8c6:	b480      	push	{r7}
 800a8c8:	b083      	sub	sp, #12
 800a8ca:	af00      	add	r7, sp, #0
 800a8cc:	6078      	str	r0, [r7, #4]
 800a8ce:	460b      	mov	r3, r1
 800a8d0:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 800a8d2:	bf00      	nop
 800a8d4:	370c      	adds	r7, #12
 800a8d6:	46bd      	mov	sp, r7
 800a8d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8dc:	4770      	bx	lr

0800a8de <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 800a8de:	b480      	push	{r7}
 800a8e0:	b083      	sub	sp, #12
 800a8e2:	af00      	add	r7, sp, #0
 800a8e4:	6078      	str	r0, [r7, #4]
    {
    }
 800a8e6:	bf00      	nop
 800a8e8:	370c      	adds	r7, #12
 800a8ea:	46bd      	mov	sp, r7
 800a8ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8f0:	4770      	bx	lr

0800a8f2 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 800a8f2:	b480      	push	{r7}
 800a8f4:	b083      	sub	sp, #12
 800a8f6:	af00      	add	r7, sp, #0
 800a8f8:	6078      	str	r0, [r7, #4]
    {
    }
 800a8fa:	bf00      	nop
 800a8fc:	370c      	adds	r7, #12
 800a8fe:	46bd      	mov	sp, r7
 800a900:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a904:	4770      	bx	lr
	...

0800a908 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 800a908:	b480      	push	{r7}
 800a90a:	b083      	sub	sp, #12
 800a90c:	af00      	add	r7, sp, #0
 800a90e:	6078      	str	r0, [r7, #4]
    {
 800a910:	4a04      	ldr	r2, [pc, #16]	; (800a924 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800a912:	687b      	ldr	r3, [r7, #4]
 800a914:	601a      	str	r2, [r3, #0]
    }
 800a916:	687b      	ldr	r3, [r7, #4]
 800a918:	4618      	mov	r0, r3
 800a91a:	370c      	adds	r7, #12
 800a91c:	46bd      	mov	sp, r7
 800a91e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a922:	4770      	bx	lr
 800a924:	0802e014 	.word	0x0802e014

0800a928 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800a928:	b580      	push	{r7, lr}
 800a92a:	b082      	sub	sp, #8
 800a92c:	af00      	add	r7, sp, #0
 800a92e:	6078      	str	r0, [r7, #4]
    }
 800a930:	6878      	ldr	r0, [r7, #4]
 800a932:	f7ff ffe9 	bl	800a908 <_ZN8touchgfx15UIEventListenerD1Ev>
 800a936:	2104      	movs	r1, #4
 800a938:	6878      	ldr	r0, [r7, #4]
 800a93a:	f01f fc68 	bl	802a20e <_ZdlPvj>
 800a93e:	687b      	ldr	r3, [r7, #4]
 800a940:	4618      	mov	r0, r3
 800a942:	3708      	adds	r7, #8
 800a944:	46bd      	mov	sp, r7
 800a946:	bd80      	pop	{r7, pc}

0800a948 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 800a948:	b480      	push	{r7}
 800a94a:	b083      	sub	sp, #12
 800a94c:	af00      	add	r7, sp, #0
 800a94e:	6078      	str	r0, [r7, #4]
    {
    }
 800a950:	bf00      	nop
 800a952:	370c      	adds	r7, #12
 800a954:	46bd      	mov	sp, r7
 800a956:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a95a:	4770      	bx	lr

0800a95c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 800a95c:	b480      	push	{r7}
 800a95e:	b083      	sub	sp, #12
 800a960:	af00      	add	r7, sp, #0
 800a962:	6078      	str	r0, [r7, #4]
 800a964:	460b      	mov	r3, r1
 800a966:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 800a968:	bf00      	nop
 800a96a:	370c      	adds	r7, #12
 800a96c:	46bd      	mov	sp, r7
 800a96e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a972:	4770      	bx	lr

0800a974 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 800a974:	b480      	push	{r7}
 800a976:	b083      	sub	sp, #12
 800a978:	af00      	add	r7, sp, #0
 800a97a:	6078      	str	r0, [r7, #4]
 800a97c:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800a97e:	687b      	ldr	r3, [r7, #4]
 800a980:	683a      	ldr	r2, [r7, #0]
 800a982:	f503 7398 	add.w	r3, r3, #304	; 0x130
 800a986:	6810      	ldr	r0, [r2, #0]
 800a988:	6851      	ldr	r1, [r2, #4]
 800a98a:	c303      	stmia	r3!, {r0, r1}
    }
 800a98c:	bf00      	nop
 800a98e:	370c      	adds	r7, #12
 800a990:	46bd      	mov	sp, r7
 800a992:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a996:	4770      	bx	lr

0800a998 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800a998:	b580      	push	{r7, lr}
 800a99a:	b082      	sub	sp, #8
 800a99c:	af00      	add	r7, sp, #0
 800a99e:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 800a9a0:	687b      	ldr	r3, [r7, #4]
 800a9a2:	3304      	adds	r3, #4
 800a9a4:	4618      	mov	r0, r3
 800a9a6:	f00e fa13 	bl	8018dd0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800a9aa:	bf00      	nop
 800a9ac:	3708      	adds	r7, #8
 800a9ae:	46bd      	mov	sp, r7
 800a9b0:	bd80      	pop	{r7, pc}
	...

0800a9b4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
    virtual ~GenericCallback()
 800a9b4:	b480      	push	{r7}
 800a9b6:	b083      	sub	sp, #12
 800a9b8:	af00      	add	r7, sp, #0
 800a9ba:	6078      	str	r0, [r7, #4]
    {
 800a9bc:	4a04      	ldr	r2, [pc, #16]	; (800a9d0 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 800a9be:	687b      	ldr	r3, [r7, #4]
 800a9c0:	601a      	str	r2, [r3, #0]
    }
 800a9c2:	687b      	ldr	r3, [r7, #4]
 800a9c4:	4618      	mov	r0, r3
 800a9c6:	370c      	adds	r7, #12
 800a9c8:	46bd      	mov	sp, r7
 800a9ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9ce:	4770      	bx	lr
 800a9d0:	0802dffc 	.word	0x0802dffc

0800a9d4 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 800a9d4:	b580      	push	{r7, lr}
 800a9d6:	b082      	sub	sp, #8
 800a9d8:	af00      	add	r7, sp, #0
 800a9da:	6078      	str	r0, [r7, #4]
    }
 800a9dc:	6878      	ldr	r0, [r7, #4]
 800a9de:	f7ff ffe9 	bl	800a9b4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800a9e2:	2104      	movs	r1, #4
 800a9e4:	6878      	ldr	r0, [r7, #4]
 800a9e6:	f01f fc12 	bl	802a20e <_ZdlPvj>
 800a9ea:	687b      	ldr	r3, [r7, #4]
 800a9ec:	4618      	mov	r0, r3
 800a9ee:	3708      	adds	r7, #8
 800a9f0:	46bd      	mov	sp, r7
 800a9f2:	bd80      	pop	{r7, pc}

0800a9f4 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 800a9f4:	b480      	push	{r7}
 800a9f6:	af00      	add	r7, sp, #0
    {
        return instance;
 800a9f8:	4b03      	ldr	r3, [pc, #12]	; (800aa08 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800a9fa:	681b      	ldr	r3, [r3, #0]
    }
 800a9fc:	4618      	mov	r0, r3
 800a9fe:	46bd      	mov	sp, r7
 800aa00:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa04:	4770      	bx	lr
 800aa06:	bf00      	nop
 800aa08:	20002328 	.word	0x20002328

0800aa0c <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 800aa0c:	b480      	push	{r7}
 800aa0e:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800aa10:	4b0b      	ldr	r3, [pc, #44]	; (800aa40 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800aa12:	681b      	ldr	r3, [r3, #0]
 800aa14:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 800aa18:	2b00      	cmp	r3, #0
 800aa1a:	d008      	beq.n	800aa2e <_ZN8touchgfx3HAL3lcdEv+0x22>
 800aa1c:	4b08      	ldr	r3, [pc, #32]	; (800aa40 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800aa1e:	681b      	ldr	r3, [r3, #0]
 800aa20:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800aa22:	2b00      	cmp	r3, #0
 800aa24:	d003      	beq.n	800aa2e <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 800aa26:	4b06      	ldr	r3, [pc, #24]	; (800aa40 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800aa28:	681b      	ldr	r3, [r3, #0]
 800aa2a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800aa2c:	e002      	b.n	800aa34 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800aa2e:	4b04      	ldr	r3, [pc, #16]	; (800aa40 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800aa30:	681b      	ldr	r3, [r3, #0]
 800aa32:	689b      	ldr	r3, [r3, #8]
    }
 800aa34:	4618      	mov	r0, r3
 800aa36:	46bd      	mov	sp, r7
 800aa38:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa3c:	4770      	bx	lr
 800aa3e:	bf00      	nop
 800aa40:	20002328 	.word	0x20002328

0800aa44 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 800aa44:	b480      	push	{r7}
 800aa46:	b083      	sub	sp, #12
 800aa48:	af00      	add	r7, sp, #0
 800aa4a:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 800aa4c:	4a07      	ldr	r2, [pc, #28]	; (800aa6c <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800aa4e:	687b      	ldr	r3, [r7, #4]
 800aa50:	601a      	str	r2, [r3, #0]
 800aa52:	687b      	ldr	r3, [r7, #4]
 800aa54:	2200      	movs	r2, #0
 800aa56:	605a      	str	r2, [r3, #4]
 800aa58:	687b      	ldr	r3, [r7, #4]
 800aa5a:	2200      	movs	r2, #0
 800aa5c:	721a      	strb	r2, [r3, #8]
    {
    }
 800aa5e:	687b      	ldr	r3, [r7, #4]
 800aa60:	4618      	mov	r0, r3
 800aa62:	370c      	adds	r7, #12
 800aa64:	46bd      	mov	sp, r7
 800aa66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa6a:	4770      	bx	lr
 800aa6c:	0802dfd8 	.word	0x0802dfd8

0800aa70 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 800aa70:	b480      	push	{r7}
 800aa72:	b083      	sub	sp, #12
 800aa74:	af00      	add	r7, sp, #0
 800aa76:	6078      	str	r0, [r7, #4]
    {
 800aa78:	4a04      	ldr	r2, [pc, #16]	; (800aa8c <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800aa7a:	687b      	ldr	r3, [r7, #4]
 800aa7c:	601a      	str	r2, [r3, #0]
    }
 800aa7e:	687b      	ldr	r3, [r7, #4]
 800aa80:	4618      	mov	r0, r3
 800aa82:	370c      	adds	r7, #12
 800aa84:	46bd      	mov	sp, r7
 800aa86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa8a:	4770      	bx	lr
 800aa8c:	0802dfd8 	.word	0x0802dfd8

0800aa90 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800aa90:	b580      	push	{r7, lr}
 800aa92:	b082      	sub	sp, #8
 800aa94:	af00      	add	r7, sp, #0
 800aa96:	6078      	str	r0, [r7, #4]
    }
 800aa98:	6878      	ldr	r0, [r7, #4]
 800aa9a:	f7ff ffe9 	bl	800aa70 <_ZN8touchgfx10TransitionD1Ev>
 800aa9e:	210c      	movs	r1, #12
 800aaa0:	6878      	ldr	r0, [r7, #4]
 800aaa2:	f01f fbb4 	bl	802a20e <_ZdlPvj>
 800aaa6:	687b      	ldr	r3, [r7, #4]
 800aaa8:	4618      	mov	r0, r3
 800aaaa:	3708      	adds	r7, #8
 800aaac:	46bd      	mov	sp, r7
 800aaae:	bd80      	pop	{r7, pc}

0800aab0 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 800aab0:	b480      	push	{r7}
 800aab2:	b083      	sub	sp, #12
 800aab4:	af00      	add	r7, sp, #0
 800aab6:	6078      	str	r0, [r7, #4]
    {
    }
 800aab8:	bf00      	nop
 800aaba:	370c      	adds	r7, #12
 800aabc:	46bd      	mov	sp, r7
 800aabe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aac2:	4770      	bx	lr

0800aac4 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 800aac4:	b480      	push	{r7}
 800aac6:	b083      	sub	sp, #12
 800aac8:	af00      	add	r7, sp, #0
 800aaca:	6078      	str	r0, [r7, #4]
    {
    }
 800aacc:	bf00      	nop
 800aace:	370c      	adds	r7, #12
 800aad0:	46bd      	mov	sp, r7
 800aad2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aad6:	4770      	bx	lr

0800aad8 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 800aad8:	b480      	push	{r7}
 800aada:	b083      	sub	sp, #12
 800aadc:	af00      	add	r7, sp, #0
 800aade:	6078      	str	r0, [r7, #4]
    {
    }
 800aae0:	bf00      	nop
 800aae2:	370c      	adds	r7, #12
 800aae4:	46bd      	mov	sp, r7
 800aae6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aaea:	4770      	bx	lr

0800aaec <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 800aaec:	b580      	push	{r7, lr}
 800aaee:	b082      	sub	sp, #8
 800aaf0:	af00      	add	r7, sp, #0
 800aaf2:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 800aaf4:	f00e f92e 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 800aaf8:	4603      	mov	r3, r0
 800aafa:	681a      	ldr	r2, [r3, #0]
 800aafc:	323c      	adds	r2, #60	; 0x3c
 800aafe:	6812      	ldr	r2, [r2, #0]
 800ab00:	4618      	mov	r0, r3
 800ab02:	4790      	blx	r2
    }
 800ab04:	bf00      	nop
 800ab06:	3708      	adds	r7, #8
 800ab08:	46bd      	mov	sp, r7
 800ab0a:	bd80      	pop	{r7, pc}

0800ab0c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 800ab0c:	b480      	push	{r7}
 800ab0e:	b083      	sub	sp, #12
 800ab10:	af00      	add	r7, sp, #0
 800ab12:	6078      	str	r0, [r7, #4]
 800ab14:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800ab16:	687b      	ldr	r3, [r7, #4]
 800ab18:	683a      	ldr	r2, [r7, #0]
 800ab1a:	605a      	str	r2, [r3, #4]
    }
 800ab1c:	bf00      	nop
 800ab1e:	370c      	adds	r7, #12
 800ab20:	46bd      	mov	sp, r7
 800ab22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab26:	4770      	bx	lr

0800ab28 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 800ab28:	b580      	push	{r7, lr}
 800ab2a:	b082      	sub	sp, #8
 800ab2c:	af00      	add	r7, sp, #0
 800ab2e:	6078      	str	r0, [r7, #4]
 800ab30:	4a05      	ldr	r2, [pc, #20]	; (800ab48 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800ab32:	687b      	ldr	r3, [r7, #4]
 800ab34:	601a      	str	r2, [r3, #0]
 800ab36:	687b      	ldr	r3, [r7, #4]
 800ab38:	4618      	mov	r0, r3
 800ab3a:	f7ff fee5 	bl	800a908 <_ZN8touchgfx15UIEventListenerD1Ev>
 800ab3e:	687b      	ldr	r3, [r7, #4]
 800ab40:	4618      	mov	r0, r3
 800ab42:	3708      	adds	r7, #8
 800ab44:	46bd      	mov	sp, r7
 800ab46:	bd80      	pop	{r7, pc}
 800ab48:	0802f804 	.word	0x0802f804

0800ab4c <_ZN8touchgfx11ApplicationD0Ev>:
 800ab4c:	b580      	push	{r7, lr}
 800ab4e:	b082      	sub	sp, #8
 800ab50:	af00      	add	r7, sp, #0
 800ab52:	6078      	str	r0, [r7, #4]
 800ab54:	6878      	ldr	r0, [r7, #4]
 800ab56:	f7ff ffe7 	bl	800ab28 <_ZN8touchgfx11ApplicationD1Ev>
 800ab5a:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800ab5e:	6878      	ldr	r0, [r7, #4]
 800ab60:	f01f fb55 	bl	802a20e <_ZdlPvj>
 800ab64:	687b      	ldr	r3, [r7, #4]
 800ab66:	4618      	mov	r0, r3
 800ab68:	3708      	adds	r7, #8
 800ab6a:	46bd      	mov	sp, r7
 800ab6c:	bd80      	pop	{r7, pc}
	...

0800ab70 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 800ab70:	b580      	push	{r7, lr}
 800ab72:	b082      	sub	sp, #8
 800ab74:	af00      	add	r7, sp, #0
 800ab76:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 800ab78:	687b      	ldr	r3, [r7, #4]
 800ab7a:	4618      	mov	r0, r3
 800ab7c:	f00e f9f6 	bl	8018f6c <_ZN8touchgfx11ApplicationC1Ev>
 800ab80:	4a09      	ldr	r2, [pc, #36]	; (800aba8 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800ab82:	687b      	ldr	r3, [r7, #4]
 800ab84:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 800ab86:	687b      	ldr	r3, [r7, #4]
 800ab88:	2200      	movs	r2, #0
 800ab8a:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
          pendingScreenTransitionCallback(0)
 800ab8e:	687b      	ldr	r3, [r7, #4]
 800ab90:	2200      	movs	r2, #0
 800ab92:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
    {
        instance = this;
 800ab96:	687b      	ldr	r3, [r7, #4]
 800ab98:	4a04      	ldr	r2, [pc, #16]	; (800abac <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800ab9a:	6013      	str	r3, [r2, #0]
    }
 800ab9c:	687b      	ldr	r3, [r7, #4]
 800ab9e:	4618      	mov	r0, r3
 800aba0:	3708      	adds	r7, #8
 800aba2:	46bd      	mov	sp, r7
 800aba4:	bd80      	pop	{r7, pc}
 800aba6:	bf00      	nop
 800aba8:	0802df84 	.word	0x0802df84
 800abac:	2000237c 	.word	0x2000237c

0800abb0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800abb0:	b580      	push	{r7, lr}
 800abb2:	b082      	sub	sp, #8
 800abb4:	af00      	add	r7, sp, #0
 800abb6:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 800abb8:	6878      	ldr	r0, [r7, #4]
 800abba:	f000 f804 	bl	800abc6 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800abbe:	bf00      	nop
 800abc0:	3708      	adds	r7, #8
 800abc2:	46bd      	mov	sp, r7
 800abc4:	bd80      	pop	{r7, pc}

0800abc6 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800abc6:	b580      	push	{r7, lr}
 800abc8:	b082      	sub	sp, #8
 800abca:	af00      	add	r7, sp, #0
 800abcc:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800abce:	687b      	ldr	r3, [r7, #4]
 800abd0:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800abd4:	2b00      	cmp	r3, #0
 800abd6:	d00f      	beq.n	800abf8 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800abd8:	687b      	ldr	r3, [r7, #4]
 800abda:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800abde:	687b      	ldr	r3, [r7, #4]
 800abe0:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800abe4:	681b      	ldr	r3, [r3, #0]
 800abe6:	330c      	adds	r3, #12
 800abe8:	681b      	ldr	r3, [r3, #0]
 800abea:	4610      	mov	r0, r2
 800abec:	4798      	blx	r3
 800abee:	4603      	mov	r3, r0
 800abf0:	2b00      	cmp	r3, #0
 800abf2:	d001      	beq.n	800abf8 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800abf4:	2301      	movs	r3, #1
 800abf6:	e000      	b.n	800abfa <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 800abf8:	2300      	movs	r3, #0
 800abfa:	2b00      	cmp	r3, #0
 800abfc:	d00e      	beq.n	800ac1c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 800abfe:	687b      	ldr	r3, [r7, #4]
 800ac00:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800ac04:	687b      	ldr	r3, [r7, #4]
 800ac06:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800ac0a:	681b      	ldr	r3, [r3, #0]
 800ac0c:	3308      	adds	r3, #8
 800ac0e:	681b      	ldr	r3, [r3, #0]
 800ac10:	4610      	mov	r0, r2
 800ac12:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800ac14:	687b      	ldr	r3, [r7, #4]
 800ac16:	2200      	movs	r2, #0
 800ac18:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
        }
    }
 800ac1c:	bf00      	nop
 800ac1e:	3708      	adds	r7, #8
 800ac20:	46bd      	mov	sp, r7
 800ac22:	bd80      	pop	{r7, pc}

0800ac24 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 800ac24:	b480      	push	{r7}
 800ac26:	b083      	sub	sp, #12
 800ac28:	af00      	add	r7, sp, #0
 800ac2a:	6078      	str	r0, [r7, #4]
 800ac2c:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800ac2e:	687b      	ldr	r3, [r7, #4]
 800ac30:	683a      	ldr	r2, [r7, #0]
 800ac32:	601a      	str	r2, [r3, #0]
    }
 800ac34:	bf00      	nop
 800ac36:	370c      	adds	r7, #12
 800ac38:	46bd      	mov	sp, r7
 800ac3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac3e:	4770      	bx	lr

0800ac40 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 800ac40:	b580      	push	{r7, lr}
 800ac42:	b082      	sub	sp, #8
 800ac44:	af00      	add	r7, sp, #0
 800ac46:	6078      	str	r0, [r7, #4]
 800ac48:	4a05      	ldr	r2, [pc, #20]	; (800ac60 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800ac4a:	687b      	ldr	r3, [r7, #4]
 800ac4c:	601a      	str	r2, [r3, #0]
 800ac4e:	687b      	ldr	r3, [r7, #4]
 800ac50:	4618      	mov	r0, r3
 800ac52:	f7ff ff69 	bl	800ab28 <_ZN8touchgfx11ApplicationD1Ev>
 800ac56:	687b      	ldr	r3, [r7, #4]
 800ac58:	4618      	mov	r0, r3
 800ac5a:	3708      	adds	r7, #8
 800ac5c:	46bd      	mov	sp, r7
 800ac5e:	bd80      	pop	{r7, pc}
 800ac60:	0802df84 	.word	0x0802df84

0800ac64 <_ZN8touchgfx14MVPApplicationD0Ev>:
 800ac64:	b580      	push	{r7, lr}
 800ac66:	b082      	sub	sp, #8
 800ac68:	af00      	add	r7, sp, #0
 800ac6a:	6078      	str	r0, [r7, #4]
 800ac6c:	6878      	ldr	r0, [r7, #4]
 800ac6e:	f7ff ffe7 	bl	800ac40 <_ZN8touchgfx14MVPApplicationD1Ev>
 800ac72:	f44f 71a2 	mov.w	r1, #324	; 0x144
 800ac76:	6878      	ldr	r0, [r7, #4]
 800ac78:	f01f fac9 	bl	802a20e <_ZdlPvj>
 800ac7c:	687b      	ldr	r3, [r7, #4]
 800ac7e:	4618      	mov	r0, r3
 800ac80:	3708      	adds	r7, #8
 800ac82:	46bd      	mov	sp, r7
 800ac84:	bd80      	pop	{r7, pc}
	...

0800ac88 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800ac88:	b580      	push	{r7, lr}
 800ac8a:	b082      	sub	sp, #8
 800ac8c:	af00      	add	r7, sp, #0
 800ac8e:	6078      	str	r0, [r7, #4]
 800ac90:	4a08      	ldr	r2, [pc, #32]	; (800acb4 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800ac92:	687b      	ldr	r3, [r7, #4]
 800ac94:	601a      	str	r2, [r3, #0]
 800ac96:	687b      	ldr	r3, [r7, #4]
 800ac98:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800ac9c:	4618      	mov	r0, r3
 800ac9e:	f001 fbb9 	bl	800c414 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800aca2:	687b      	ldr	r3, [r7, #4]
 800aca4:	4618      	mov	r0, r3
 800aca6:	f7ff ffcb 	bl	800ac40 <_ZN8touchgfx14MVPApplicationD1Ev>
 800acaa:	687b      	ldr	r3, [r7, #4]
 800acac:	4618      	mov	r0, r3
 800acae:	3708      	adds	r7, #8
 800acb0:	46bd      	mov	sp, r7
 800acb2:	bd80      	pop	{r7, pc}
 800acb4:	0802df18 	.word	0x0802df18

0800acb8 <_ZN23FrontendApplicationBaseD0Ev>:
 800acb8:	b580      	push	{r7, lr}
 800acba:	b082      	sub	sp, #8
 800acbc:	af00      	add	r7, sp, #0
 800acbe:	6078      	str	r0, [r7, #4]
 800acc0:	6878      	ldr	r0, [r7, #4]
 800acc2:	f7ff ffe1 	bl	800ac88 <_ZN23FrontendApplicationBaseD1Ev>
 800acc6:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800acca:	6878      	ldr	r0, [r7, #4]
 800accc:	f01f fa9f 	bl	802a20e <_ZdlPvj>
 800acd0:	687b      	ldr	r3, [r7, #4]
 800acd2:	4618      	mov	r0, r3
 800acd4:	3708      	adds	r7, #8
 800acd6:	46bd      	mov	sp, r7
 800acd8:	bd80      	pop	{r7, pc}

0800acda <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 800acda:	b580      	push	{r7, lr}
 800acdc:	b082      	sub	sp, #8
 800acde:	af00      	add	r7, sp, #0
 800ace0:	6078      	str	r0, [r7, #4]
    {
        gotoMainScreenScreenNoTransition();
 800ace2:	6878      	ldr	r0, [r7, #4]
 800ace4:	f000 f882 	bl	800adec <_ZN23FrontendApplicationBase32gotoMainScreenScreenNoTransitionEv>
    }
 800ace8:	bf00      	nop
 800acea:	3708      	adds	r7, #8
 800acec:	46bd      	mov	sp, r7
 800acee:	bd80      	pop	{r7, pc}

0800acf0 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 800acf0:	b480      	push	{r7}
 800acf2:	b083      	sub	sp, #12
 800acf4:	af00      	add	r7, sp, #0
 800acf6:	6078      	str	r0, [r7, #4]
    {
        done = true;
 800acf8:	687b      	ldr	r3, [r7, #4]
 800acfa:	2201      	movs	r2, #1
 800acfc:	721a      	strb	r2, [r3, #8]
    }
 800acfe:	bf00      	nop
 800ad00:	370c      	adds	r7, #12
 800ad02:	46bd      	mov	sp, r7
 800ad04:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad08:	4770      	bx	lr

0800ad0a <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 800ad0a:	b480      	push	{r7}
 800ad0c:	b083      	sub	sp, #12
 800ad0e:	af00      	add	r7, sp, #0
 800ad10:	6078      	str	r0, [r7, #4]
 800ad12:	6039      	str	r1, [r7, #0]
    {
        model = m;
 800ad14:	687b      	ldr	r3, [r7, #4]
 800ad16:	683a      	ldr	r2, [r7, #0]
 800ad18:	605a      	str	r2, [r3, #4]
    }
 800ad1a:	bf00      	nop
 800ad1c:	370c      	adds	r7, #12
 800ad1e:	46bd      	mov	sp, r7
 800ad20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad24:	4770      	bx	lr
	...

0800ad28 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/coscreen_screen/COScreenView.hpp>
#include <gui/coscreen_screen/COScreenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800ad28:	b580      	push	{r7, lr}
 800ad2a:	b084      	sub	sp, #16
 800ad2c:	af00      	add	r7, sp, #0
 800ad2e:	60f8      	str	r0, [r7, #12]
 800ad30:	60b9      	str	r1, [r7, #8]
 800ad32:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800ad34:	68fb      	ldr	r3, [r7, #12]
 800ad36:	4618      	mov	r0, r3
 800ad38:	f7ff ff1a 	bl	800ab70 <_ZN8touchgfx14MVPApplicationC1Ev>
 800ad3c:	4a16      	ldr	r2, [pc, #88]	; (800ad98 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>)
 800ad3e:	68fb      	ldr	r3, [r7, #12]
 800ad40:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800ad42:	68fb      	ldr	r3, [r7, #12]
 800ad44:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800ad48:	4618      	mov	r0, r3
 800ad4a:	f000 fa03 	bl	800b154 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 800ad4e:	68fb      	ldr	r3, [r7, #12]
 800ad50:	687a      	ldr	r2, [r7, #4]
 800ad52:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
      model(m)
 800ad56:	68fb      	ldr	r3, [r7, #12]
 800ad58:	68ba      	ldr	r2, [r7, #8]
 800ad5a:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800ad5e:	f7ff fe49 	bl	800a9f4 <_ZN8touchgfx3HAL11getInstanceEv>
 800ad62:	4603      	mov	r3, r0
 800ad64:	681a      	ldr	r2, [r3, #0]
 800ad66:	3208      	adds	r2, #8
 800ad68:	6812      	ldr	r2, [r2, #0]
 800ad6a:	2100      	movs	r1, #0
 800ad6c:	4618      	mov	r0, r3
 800ad6e:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 800ad70:	2000      	movs	r0, #0
 800ad72:	f004 fe65 	bl	800fa40 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800ad76:	f7ff fe49 	bl	800aa0c <_ZN8touchgfx3HAL3lcdEv>
 800ad7a:	4603      	mov	r3, r0
 800ad7c:	4618      	mov	r0, r3
 800ad7e:	f017 fbca 	bl	8022516 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800ad82:	f7ff fe43 	bl	800aa0c <_ZN8touchgfx3HAL3lcdEv>
 800ad86:	4603      	mov	r3, r0
 800ad88:	4618      	mov	r0, r3
 800ad8a:	f017 fc3f 	bl	802260c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800ad8e:	68fb      	ldr	r3, [r7, #12]
 800ad90:	4618      	mov	r0, r3
 800ad92:	3710      	adds	r7, #16
 800ad94:	46bd      	mov	sp, r7
 800ad96:	bd80      	pop	{r7, pc}
 800ad98:	0802df18 	.word	0x0802df18

0800ad9c <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 800ad9c:	b480      	push	{r7}
 800ad9e:	b083      	sub	sp, #12
 800ada0:	af00      	add	r7, sp, #0
 800ada2:	6078      	str	r0, [r7, #4]
 800ada4:	6039      	str	r1, [r7, #0]
 800ada6:	687b      	ldr	r3, [r7, #4]
 800ada8:	4618      	mov	r0, r3
 800adaa:	370c      	adds	r7, #12
 800adac:	46bd      	mov	sp, r7
 800adae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adb2:	4770      	bx	lr

0800adb4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800adb4:	b580      	push	{r7, lr}
 800adb6:	b082      	sub	sp, #8
 800adb8:	af00      	add	r7, sp, #0
 800adba:	6078      	str	r0, [r7, #4]
 800adbc:	6039      	str	r1, [r7, #0]
 800adbe:	687b      	ldr	r3, [r7, #4]
 800adc0:	683a      	ldr	r2, [r7, #0]
 800adc2:	4611      	mov	r1, r2
 800adc4:	4618      	mov	r0, r3
 800adc6:	f7ff ffe9 	bl	800ad9c <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 800adca:	683b      	ldr	r3, [r7, #0]
 800adcc:	685a      	ldr	r2, [r3, #4]
 800adce:	687b      	ldr	r3, [r7, #4]
 800add0:	605a      	str	r2, [r3, #4]
 800add2:	687b      	ldr	r3, [r7, #4]
 800add4:	683a      	ldr	r2, [r7, #0]
 800add6:	3308      	adds	r3, #8
 800add8:	3208      	adds	r2, #8
 800adda:	e892 0003 	ldmia.w	r2, {r0, r1}
 800adde:	e883 0003 	stmia.w	r3, {r0, r1}
 800ade2:	687b      	ldr	r3, [r7, #4]
 800ade4:	4618      	mov	r0, r3
 800ade6:	3708      	adds	r7, #8
 800ade8:	46bd      	mov	sp, r7
 800adea:	bd80      	pop	{r7, pc}

0800adec <_ZN23FrontendApplicationBase32gotoMainScreenScreenNoTransitionEv>:
 */

// MainScreen

void FrontendApplicationBase::gotoMainScreenScreenNoTransition()
{
 800adec:	b590      	push	{r4, r7, lr}
 800adee:	b089      	sub	sp, #36	; 0x24
 800adf0:	af00      	add	r7, sp, #0
 800adf2:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenScreenNoTransitionImpl);
 800adf4:	687b      	ldr	r3, [r7, #4]
 800adf6:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800adfa:	4b10      	ldr	r3, [pc, #64]	; (800ae3c <_ZN23FrontendApplicationBase32gotoMainScreenScreenNoTransitionEv+0x50>)
 800adfc:	61bb      	str	r3, [r7, #24]
 800adfe:	2300      	movs	r3, #0
 800ae00:	61fb      	str	r3, [r7, #28]
 800ae02:	f107 0008 	add.w	r0, r7, #8
 800ae06:	f107 0318 	add.w	r3, r7, #24
 800ae0a:	cb0c      	ldmia	r3, {r2, r3}
 800ae0c:	6879      	ldr	r1, [r7, #4]
 800ae0e:	f000 f9bd 	bl	800b18c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800ae12:	f107 0308 	add.w	r3, r7, #8
 800ae16:	4619      	mov	r1, r3
 800ae18:	4620      	mov	r0, r4
 800ae1a:	f7ff ffcb 	bl	800adb4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800ae1e:	f107 0308 	add.w	r3, r7, #8
 800ae22:	4618      	mov	r0, r3
 800ae24:	f001 faf6 	bl	800c414 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800ae28:	687b      	ldr	r3, [r7, #4]
 800ae2a:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800ae2e:	687b      	ldr	r3, [r7, #4]
 800ae30:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800ae34:	bf00      	nop
 800ae36:	3724      	adds	r7, #36	; 0x24
 800ae38:	46bd      	mov	sp, r7
 800ae3a:	bd90      	pop	{r4, r7, pc}
 800ae3c:	0800ae41 	.word	0x0800ae41

0800ae40 <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoMainScreenScreenNoTransitionImpl()
{
 800ae40:	b580      	push	{r7, lr}
 800ae42:	b084      	sub	sp, #16
 800ae44:	af02      	add	r7, sp, #8
 800ae46:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800ae48:	687b      	ldr	r3, [r7, #4]
 800ae4a:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800ae4e:	687b      	ldr	r3, [r7, #4]
 800ae50:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800ae54:	461a      	mov	r2, r3
 800ae56:	687b      	ldr	r3, [r7, #4]
 800ae58:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800ae5c:	9300      	str	r3, [sp, #0]
 800ae5e:	4b04      	ldr	r3, [pc, #16]	; (800ae70 <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x30>)
 800ae60:	4804      	ldr	r0, [pc, #16]	; (800ae74 <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x34>)
 800ae62:	f000 f9c5 	bl	800b1f0 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800ae66:	bf00      	nop
 800ae68:	3708      	adds	r7, #8
 800ae6a:	46bd      	mov	sp, r7
 800ae6c:	bd80      	pop	{r7, pc}
 800ae6e:	bf00      	nop
 800ae70:	20002370 	.word	0x20002370
 800ae74:	2000236c 	.word	0x2000236c

0800ae78 <_ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionWestEv>:

void FrontendApplicationBase::gotoMainScreenScreenSlideTransitionWest()
{
 800ae78:	b590      	push	{r4, r7, lr}
 800ae7a:	b089      	sub	sp, #36	; 0x24
 800ae7c:	af00      	add	r7, sp, #0
 800ae7e:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenScreenSlideTransitionWestImpl);
 800ae80:	687b      	ldr	r3, [r7, #4]
 800ae82:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800ae86:	4b10      	ldr	r3, [pc, #64]	; (800aec8 <_ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionWestEv+0x50>)
 800ae88:	61bb      	str	r3, [r7, #24]
 800ae8a:	2300      	movs	r3, #0
 800ae8c:	61fb      	str	r3, [r7, #28]
 800ae8e:	f107 0008 	add.w	r0, r7, #8
 800ae92:	f107 0318 	add.w	r3, r7, #24
 800ae96:	cb0c      	ldmia	r3, {r2, r3}
 800ae98:	6879      	ldr	r1, [r7, #4]
 800ae9a:	f000 f977 	bl	800b18c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800ae9e:	f107 0308 	add.w	r3, r7, #8
 800aea2:	4619      	mov	r1, r3
 800aea4:	4620      	mov	r0, r4
 800aea6:	f7ff ff85 	bl	800adb4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800aeaa:	f107 0308 	add.w	r3, r7, #8
 800aeae:	4618      	mov	r0, r3
 800aeb0:	f001 fab0 	bl	800c414 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800aeb4:	687b      	ldr	r3, [r7, #4]
 800aeb6:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800aeba:	687b      	ldr	r3, [r7, #4]
 800aebc:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800aec0:	bf00      	nop
 800aec2:	3724      	adds	r7, #36	; 0x24
 800aec4:	46bd      	mov	sp, r7
 800aec6:	bd90      	pop	{r4, r7, pc}
 800aec8:	0800aecd 	.word	0x0800aecd

0800aecc <_ZN23FrontendApplicationBase43gotoMainScreenScreenSlideTransitionWestImplEv>:

void FrontendApplicationBase::gotoMainScreenScreenSlideTransitionWestImpl()
{
 800aecc:	b580      	push	{r7, lr}
 800aece:	b084      	sub	sp, #16
 800aed0:	af02      	add	r7, sp, #8
 800aed2:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<MainScreenView, MainScreenPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800aed4:	687b      	ldr	r3, [r7, #4]
 800aed6:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800aeda:	687b      	ldr	r3, [r7, #4]
 800aedc:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800aee0:	461a      	mov	r2, r3
 800aee2:	687b      	ldr	r3, [r7, #4]
 800aee4:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800aee8:	9300      	str	r3, [sp, #0]
 800aeea:	4b04      	ldr	r3, [pc, #16]	; (800aefc <_ZN23FrontendApplicationBase43gotoMainScreenScreenSlideTransitionWestImplEv+0x30>)
 800aeec:	4804      	ldr	r0, [pc, #16]	; (800af00 <_ZN23FrontendApplicationBase43gotoMainScreenScreenSlideTransitionWestImplEv+0x34>)
 800aeee:	f000 fa99 	bl	800b424 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800aef2:	bf00      	nop
 800aef4:	3708      	adds	r7, #8
 800aef6:	46bd      	mov	sp, r7
 800aef8:	bd80      	pop	{r7, pc}
 800aefa:	bf00      	nop
 800aefc:	20002370 	.word	0x20002370
 800af00:	2000236c 	.word	0x2000236c

0800af04 <_ZN23FrontendApplicationBase40gotoClockScreenScreenSlideTransitionEastEv>:

// ClockScreen

void FrontendApplicationBase::gotoClockScreenScreenSlideTransitionEast()
{
 800af04:	b590      	push	{r4, r7, lr}
 800af06:	b089      	sub	sp, #36	; 0x24
 800af08:	af00      	add	r7, sp, #0
 800af0a:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoClockScreenScreenSlideTransitionEastImpl);
 800af0c:	687b      	ldr	r3, [r7, #4]
 800af0e:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800af12:	4b10      	ldr	r3, [pc, #64]	; (800af54 <_ZN23FrontendApplicationBase40gotoClockScreenScreenSlideTransitionEastEv+0x50>)
 800af14:	61bb      	str	r3, [r7, #24]
 800af16:	2300      	movs	r3, #0
 800af18:	61fb      	str	r3, [r7, #28]
 800af1a:	f107 0008 	add.w	r0, r7, #8
 800af1e:	f107 0318 	add.w	r3, r7, #24
 800af22:	cb0c      	ldmia	r3, {r2, r3}
 800af24:	6879      	ldr	r1, [r7, #4]
 800af26:	f000 f931 	bl	800b18c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800af2a:	f107 0308 	add.w	r3, r7, #8
 800af2e:	4619      	mov	r1, r3
 800af30:	4620      	mov	r0, r4
 800af32:	f7ff ff3f 	bl	800adb4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800af36:	f107 0308 	add.w	r3, r7, #8
 800af3a:	4618      	mov	r0, r3
 800af3c:	f001 fa6a 	bl	800c414 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800af40:	687b      	ldr	r3, [r7, #4]
 800af42:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800af46:	687b      	ldr	r3, [r7, #4]
 800af48:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800af4c:	bf00      	nop
 800af4e:	3724      	adds	r7, #36	; 0x24
 800af50:	46bd      	mov	sp, r7
 800af52:	bd90      	pop	{r4, r7, pc}
 800af54:	0800af59 	.word	0x0800af59

0800af58 <_ZN23FrontendApplicationBase44gotoClockScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoClockScreenScreenSlideTransitionEastImpl()
{
 800af58:	b580      	push	{r7, lr}
 800af5a:	b084      	sub	sp, #16
 800af5c:	af02      	add	r7, sp, #8
 800af5e:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<ClockScreenView, ClockScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800af60:	687b      	ldr	r3, [r7, #4]
 800af62:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800af66:	687b      	ldr	r3, [r7, #4]
 800af68:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800af6c:	461a      	mov	r2, r3
 800af6e:	687b      	ldr	r3, [r7, #4]
 800af70:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800af74:	9300      	str	r3, [sp, #0]
 800af76:	4b04      	ldr	r3, [pc, #16]	; (800af88 <_ZN23FrontendApplicationBase44gotoClockScreenScreenSlideTransitionEastImplEv+0x30>)
 800af78:	4804      	ldr	r0, [pc, #16]	; (800af8c <_ZN23FrontendApplicationBase44gotoClockScreenScreenSlideTransitionEastImplEv+0x34>)
 800af7a:	f000 fb6f 	bl	800b65c <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800af7e:	bf00      	nop
 800af80:	3708      	adds	r7, #8
 800af82:	46bd      	mov	sp, r7
 800af84:	bd80      	pop	{r7, pc}
 800af86:	bf00      	nop
 800af88:	20002370 	.word	0x20002370
 800af8c:	2000236c 	.word	0x2000236c

0800af90 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenSlideTransitionEastEv>:

// TemperatureScreen

void FrontendApplicationBase::gotoTemperatureScreenScreenSlideTransitionEast()
{
 800af90:	b590      	push	{r4, r7, lr}
 800af92:	b089      	sub	sp, #36	; 0x24
 800af94:	af00      	add	r7, sp, #0
 800af96:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoTemperatureScreenScreenSlideTransitionEastImpl);
 800af98:	687b      	ldr	r3, [r7, #4]
 800af9a:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800af9e:	4b10      	ldr	r3, [pc, #64]	; (800afe0 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenSlideTransitionEastEv+0x50>)
 800afa0:	61bb      	str	r3, [r7, #24]
 800afa2:	2300      	movs	r3, #0
 800afa4:	61fb      	str	r3, [r7, #28]
 800afa6:	f107 0008 	add.w	r0, r7, #8
 800afaa:	f107 0318 	add.w	r3, r7, #24
 800afae:	cb0c      	ldmia	r3, {r2, r3}
 800afb0:	6879      	ldr	r1, [r7, #4]
 800afb2:	f000 f8eb 	bl	800b18c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800afb6:	f107 0308 	add.w	r3, r7, #8
 800afba:	4619      	mov	r1, r3
 800afbc:	4620      	mov	r0, r4
 800afbe:	f7ff fef9 	bl	800adb4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800afc2:	f107 0308 	add.w	r3, r7, #8
 800afc6:	4618      	mov	r0, r3
 800afc8:	f001 fa24 	bl	800c414 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800afcc:	687b      	ldr	r3, [r7, #4]
 800afce:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800afd2:	687b      	ldr	r3, [r7, #4]
 800afd4:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800afd8:	bf00      	nop
 800afda:	3724      	adds	r7, #36	; 0x24
 800afdc:	46bd      	mov	sp, r7
 800afde:	bd90      	pop	{r4, r7, pc}
 800afe0:	0800afe5 	.word	0x0800afe5

0800afe4 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoTemperatureScreenScreenSlideTransitionEastImpl()
{
 800afe4:	b580      	push	{r7, lr}
 800afe6:	b084      	sub	sp, #16
 800afe8:	af02      	add	r7, sp, #8
 800afea:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<TemperatureScreenView, TemperatureScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800afec:	687b      	ldr	r3, [r7, #4]
 800afee:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800aff2:	687b      	ldr	r3, [r7, #4]
 800aff4:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800aff8:	461a      	mov	r2, r3
 800affa:	687b      	ldr	r3, [r7, #4]
 800affc:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800b000:	9300      	str	r3, [sp, #0]
 800b002:	4b04      	ldr	r3, [pc, #16]	; (800b014 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x30>)
 800b004:	4804      	ldr	r0, [pc, #16]	; (800b018 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x34>)
 800b006:	f000 fc43 	bl	800b890 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800b00a:	bf00      	nop
 800b00c:	3708      	adds	r7, #8
 800b00e:	46bd      	mov	sp, r7
 800b010:	bd80      	pop	{r7, pc}
 800b012:	bf00      	nop
 800b014:	20002370 	.word	0x20002370
 800b018:	2000236c 	.word	0x2000236c

0800b01c <_ZN23FrontendApplicationBase43gotoPressureScreenScreenSlideTransitionEastEv>:

// PressureScreen

void FrontendApplicationBase::gotoPressureScreenScreenSlideTransitionEast()
{
 800b01c:	b590      	push	{r4, r7, lr}
 800b01e:	b089      	sub	sp, #36	; 0x24
 800b020:	af00      	add	r7, sp, #0
 800b022:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoPressureScreenScreenSlideTransitionEastImpl);
 800b024:	687b      	ldr	r3, [r7, #4]
 800b026:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800b02a:	4b10      	ldr	r3, [pc, #64]	; (800b06c <_ZN23FrontendApplicationBase43gotoPressureScreenScreenSlideTransitionEastEv+0x50>)
 800b02c:	61bb      	str	r3, [r7, #24]
 800b02e:	2300      	movs	r3, #0
 800b030:	61fb      	str	r3, [r7, #28]
 800b032:	f107 0008 	add.w	r0, r7, #8
 800b036:	f107 0318 	add.w	r3, r7, #24
 800b03a:	cb0c      	ldmia	r3, {r2, r3}
 800b03c:	6879      	ldr	r1, [r7, #4]
 800b03e:	f000 f8a5 	bl	800b18c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800b042:	f107 0308 	add.w	r3, r7, #8
 800b046:	4619      	mov	r1, r3
 800b048:	4620      	mov	r0, r4
 800b04a:	f7ff feb3 	bl	800adb4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800b04e:	f107 0308 	add.w	r3, r7, #8
 800b052:	4618      	mov	r0, r3
 800b054:	f001 f9de 	bl	800c414 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800b058:	687b      	ldr	r3, [r7, #4]
 800b05a:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800b05e:	687b      	ldr	r3, [r7, #4]
 800b060:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800b064:	bf00      	nop
 800b066:	3724      	adds	r7, #36	; 0x24
 800b068:	46bd      	mov	sp, r7
 800b06a:	bd90      	pop	{r4, r7, pc}
 800b06c:	0800b071 	.word	0x0800b071

0800b070 <_ZN23FrontendApplicationBase47gotoPressureScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoPressureScreenScreenSlideTransitionEastImpl()
{
 800b070:	b580      	push	{r7, lr}
 800b072:	b084      	sub	sp, #16
 800b074:	af02      	add	r7, sp, #8
 800b076:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<PressureScreenView, PressureScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800b078:	687b      	ldr	r3, [r7, #4]
 800b07a:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800b07e:	687b      	ldr	r3, [r7, #4]
 800b080:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800b084:	461a      	mov	r2, r3
 800b086:	687b      	ldr	r3, [r7, #4]
 800b088:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800b08c:	9300      	str	r3, [sp, #0]
 800b08e:	4b04      	ldr	r3, [pc, #16]	; (800b0a0 <_ZN23FrontendApplicationBase47gotoPressureScreenScreenSlideTransitionEastImplEv+0x30>)
 800b090:	4804      	ldr	r0, [pc, #16]	; (800b0a4 <_ZN23FrontendApplicationBase47gotoPressureScreenScreenSlideTransitionEastImplEv+0x34>)
 800b092:	f000 fd17 	bl	800bac4 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800b096:	bf00      	nop
 800b098:	3708      	adds	r7, #8
 800b09a:	46bd      	mov	sp, r7
 800b09c:	bd80      	pop	{r7, pc}
 800b09e:	bf00      	nop
 800b0a0:	20002370 	.word	0x20002370
 800b0a4:	2000236c 	.word	0x2000236c

0800b0a8 <_ZN23FrontendApplicationBase37gotoCOScreenScreenSlideTransitionEastEv>:

// COScreen

void FrontendApplicationBase::gotoCOScreenScreenSlideTransitionEast()
{
 800b0a8:	b590      	push	{r4, r7, lr}
 800b0aa:	b089      	sub	sp, #36	; 0x24
 800b0ac:	af00      	add	r7, sp, #0
 800b0ae:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoCOScreenScreenSlideTransitionEastImpl);
 800b0b0:	687b      	ldr	r3, [r7, #4]
 800b0b2:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800b0b6:	4b10      	ldr	r3, [pc, #64]	; (800b0f8 <_ZN23FrontendApplicationBase37gotoCOScreenScreenSlideTransitionEastEv+0x50>)
 800b0b8:	61bb      	str	r3, [r7, #24]
 800b0ba:	2300      	movs	r3, #0
 800b0bc:	61fb      	str	r3, [r7, #28]
 800b0be:	f107 0008 	add.w	r0, r7, #8
 800b0c2:	f107 0318 	add.w	r3, r7, #24
 800b0c6:	cb0c      	ldmia	r3, {r2, r3}
 800b0c8:	6879      	ldr	r1, [r7, #4]
 800b0ca:	f000 f85f 	bl	800b18c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800b0ce:	f107 0308 	add.w	r3, r7, #8
 800b0d2:	4619      	mov	r1, r3
 800b0d4:	4620      	mov	r0, r4
 800b0d6:	f7ff fe6d 	bl	800adb4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800b0da:	f107 0308 	add.w	r3, r7, #8
 800b0de:	4618      	mov	r0, r3
 800b0e0:	f001 f998 	bl	800c414 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800b0e4:	687b      	ldr	r3, [r7, #4]
 800b0e6:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800b0ea:	687b      	ldr	r3, [r7, #4]
 800b0ec:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800b0f0:	bf00      	nop
 800b0f2:	3724      	adds	r7, #36	; 0x24
 800b0f4:	46bd      	mov	sp, r7
 800b0f6:	bd90      	pop	{r4, r7, pc}
 800b0f8:	0800b0fd 	.word	0x0800b0fd

0800b0fc <_ZN23FrontendApplicationBase41gotoCOScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoCOScreenScreenSlideTransitionEastImpl()
{
 800b0fc:	b580      	push	{r7, lr}
 800b0fe:	b084      	sub	sp, #16
 800b100:	af02      	add	r7, sp, #8
 800b102:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<COScreenView, COScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800b104:	687b      	ldr	r3, [r7, #4]
 800b106:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800b10a:	687b      	ldr	r3, [r7, #4]
 800b10c:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800b110:	461a      	mov	r2, r3
 800b112:	687b      	ldr	r3, [r7, #4]
 800b114:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800b118:	9300      	str	r3, [sp, #0]
 800b11a:	4b04      	ldr	r3, [pc, #16]	; (800b12c <_ZN23FrontendApplicationBase41gotoCOScreenScreenSlideTransitionEastImplEv+0x30>)
 800b11c:	4804      	ldr	r0, [pc, #16]	; (800b130 <_ZN23FrontendApplicationBase41gotoCOScreenScreenSlideTransitionEastImplEv+0x34>)
 800b11e:	f000 fdeb 	bl	800bcf8 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800b122:	bf00      	nop
 800b124:	3708      	adds	r7, #8
 800b126:	46bd      	mov	sp, r7
 800b128:	bd80      	pop	{r7, pc}
 800b12a:	bf00      	nop
 800b12c:	20002370 	.word	0x20002370
 800b130:	2000236c 	.word	0x2000236c

0800b134 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 800b134:	b480      	push	{r7}
 800b136:	b083      	sub	sp, #12
 800b138:	af00      	add	r7, sp, #0
 800b13a:	6078      	str	r0, [r7, #4]
 800b13c:	4a04      	ldr	r2, [pc, #16]	; (800b150 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 800b13e:	687b      	ldr	r3, [r7, #4]
 800b140:	601a      	str	r2, [r3, #0]
 800b142:	687b      	ldr	r3, [r7, #4]
 800b144:	4618      	mov	r0, r3
 800b146:	370c      	adds	r7, #12
 800b148:	46bd      	mov	sp, r7
 800b14a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b14e:	4770      	bx	lr
 800b150:	0802dffc 	.word	0x0802dffc

0800b154 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 800b154:	b580      	push	{r7, lr}
 800b156:	b082      	sub	sp, #8
 800b158:	af00      	add	r7, sp, #0
 800b15a:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 800b15c:	687b      	ldr	r3, [r7, #4]
 800b15e:	4618      	mov	r0, r3
 800b160:	f7ff ffe8 	bl	800b134 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800b164:	4a08      	ldr	r2, [pc, #32]	; (800b188 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 800b166:	687b      	ldr	r3, [r7, #4]
 800b168:	601a      	str	r2, [r3, #0]
 800b16a:	687b      	ldr	r3, [r7, #4]
 800b16c:	2200      	movs	r2, #0
 800b16e:	605a      	str	r2, [r3, #4]
 800b170:	687b      	ldr	r3, [r7, #4]
 800b172:	2200      	movs	r2, #0
 800b174:	609a      	str	r2, [r3, #8]
 800b176:	687b      	ldr	r3, [r7, #4]
 800b178:	2200      	movs	r2, #0
 800b17a:	60da      	str	r2, [r3, #12]
    {
    }
 800b17c:	687b      	ldr	r3, [r7, #4]
 800b17e:	4618      	mov	r0, r3
 800b180:	3708      	adds	r7, #8
 800b182:	46bd      	mov	sp, r7
 800b184:	bd80      	pop	{r7, pc}
 800b186:	bf00      	nop
 800b188:	0802df6c 	.word	0x0802df6c

0800b18c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 800b18c:	b580      	push	{r7, lr}
 800b18e:	b084      	sub	sp, #16
 800b190:	af00      	add	r7, sp, #0
 800b192:	60f8      	str	r0, [r7, #12]
 800b194:	60b9      	str	r1, [r7, #8]
 800b196:	4639      	mov	r1, r7
 800b198:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 800b19c:	68fb      	ldr	r3, [r7, #12]
 800b19e:	4618      	mov	r0, r3
 800b1a0:	f7ff ffc8 	bl	800b134 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800b1a4:	4a08      	ldr	r2, [pc, #32]	; (800b1c8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 800b1a6:	68fb      	ldr	r3, [r7, #12]
 800b1a8:	601a      	str	r2, [r3, #0]
 800b1aa:	68fb      	ldr	r3, [r7, #12]
 800b1ac:	68ba      	ldr	r2, [r7, #8]
 800b1ae:	605a      	str	r2, [r3, #4]
 800b1b0:	68fb      	ldr	r3, [r7, #12]
 800b1b2:	3308      	adds	r3, #8
 800b1b4:	463a      	mov	r2, r7
 800b1b6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b1ba:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800b1be:	68fb      	ldr	r3, [r7, #12]
 800b1c0:	4618      	mov	r0, r3
 800b1c2:	3710      	adds	r7, #16
 800b1c4:	46bd      	mov	sp, r7
 800b1c6:	bd80      	pop	{r7, pc}
 800b1c8:	0802df6c 	.word	0x0802df6c

0800b1cc <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 800b1cc:	b580      	push	{r7, lr}
 800b1ce:	b082      	sub	sp, #8
 800b1d0:	af00      	add	r7, sp, #0
 800b1d2:	6078      	str	r0, [r7, #4]
 800b1d4:	687b      	ldr	r3, [r7, #4]
 800b1d6:	4618      	mov	r0, r3
 800b1d8:	f7ff fc34 	bl	800aa44 <_ZN8touchgfx10TransitionC1Ev>
 800b1dc:	4a03      	ldr	r2, [pc, #12]	; (800b1ec <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 800b1de:	687b      	ldr	r3, [r7, #4]
 800b1e0:	601a      	str	r2, [r3, #0]
 800b1e2:	687b      	ldr	r3, [r7, #4]
 800b1e4:	4618      	mov	r0, r3
 800b1e6:	3708      	adds	r7, #8
 800b1e8:	46bd      	mov	sp, r7
 800b1ea:	bd80      	pop	{r7, pc}
 800b1ec:	0802def4 	.word	0x0802def4

0800b1f0 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800b1f0:	b590      	push	{r4, r7, lr}
 800b1f2:	b08f      	sub	sp, #60	; 0x3c
 800b1f4:	af00      	add	r7, sp, #0
 800b1f6:	60f8      	str	r0, [r7, #12]
 800b1f8:	60b9      	str	r1, [r7, #8]
 800b1fa:	607a      	str	r2, [r7, #4]
 800b1fc:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800b1fe:	687b      	ldr	r3, [r7, #4]
 800b200:	689a      	ldr	r2, [r3, #8]
 800b202:	687b      	ldr	r3, [r7, #4]
 800b204:	689b      	ldr	r3, [r3, #8]
 800b206:	681b      	ldr	r3, [r3, #0]
 800b208:	3320      	adds	r3, #32
 800b20a:	681b      	ldr	r3, [r3, #0]
 800b20c:	4610      	mov	r0, r2
 800b20e:	4798      	blx	r3
 800b210:	4603      	mov	r3, r0
 800b212:	f240 420b 	movw	r2, #1035	; 0x40b
 800b216:	4293      	cmp	r3, r2
 800b218:	d805      	bhi.n	800b226 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x36>
 800b21a:	4b7d      	ldr	r3, [pc, #500]	; (800b410 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800b21c:	4a7d      	ldr	r2, [pc, #500]	; (800b414 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b21e:	21a3      	movs	r1, #163	; 0xa3
 800b220:	487d      	ldr	r0, [pc, #500]	; (800b418 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b222:	f01f ffe5 	bl	802b1f0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800b226:	687b      	ldr	r3, [r7, #4]
 800b228:	685a      	ldr	r2, [r3, #4]
 800b22a:	687b      	ldr	r3, [r7, #4]
 800b22c:	685b      	ldr	r3, [r3, #4]
 800b22e:	681b      	ldr	r3, [r3, #0]
 800b230:	3320      	adds	r3, #32
 800b232:	681b      	ldr	r3, [r3, #0]
 800b234:	4610      	mov	r0, r2
 800b236:	4798      	blx	r3
 800b238:	4603      	mov	r3, r0
 800b23a:	2b0f      	cmp	r3, #15
 800b23c:	d805      	bhi.n	800b24a <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5a>
 800b23e:	4b77      	ldr	r3, [pc, #476]	; (800b41c <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800b240:	4a74      	ldr	r2, [pc, #464]	; (800b414 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b242:	21a4      	movs	r1, #164	; 0xa4
 800b244:	4874      	ldr	r0, [pc, #464]	; (800b418 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b246:	f01f ffd3 	bl	802b1f0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800b24a:	687b      	ldr	r3, [r7, #4]
 800b24c:	68da      	ldr	r2, [r3, #12]
 800b24e:	687b      	ldr	r3, [r7, #4]
 800b250:	68db      	ldr	r3, [r3, #12]
 800b252:	681b      	ldr	r3, [r3, #0]
 800b254:	3320      	adds	r3, #32
 800b256:	681b      	ldr	r3, [r3, #0]
 800b258:	4610      	mov	r0, r2
 800b25a:	4798      	blx	r3
 800b25c:	4603      	mov	r3, r0
 800b25e:	2b0b      	cmp	r3, #11
 800b260:	d805      	bhi.n	800b26e <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
 800b262:	4b6f      	ldr	r3, [pc, #444]	; (800b420 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800b264:	4a6b      	ldr	r2, [pc, #428]	; (800b414 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b266:	21a5      	movs	r1, #165	; 0xa5
 800b268:	486b      	ldr	r0, [pc, #428]	; (800b418 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b26a:	f01f ffc1 	bl	802b1f0 <__assert_func>
 800b26e:	68fb      	ldr	r3, [r7, #12]
 800b270:	62bb      	str	r3, [r7, #40]	; 0x28
 800b272:	68bb      	ldr	r3, [r7, #8]
 800b274:	627b      	str	r3, [r7, #36]	; 0x24
 800b276:	683b      	ldr	r3, [r7, #0]
 800b278:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800b27a:	f00d fd6b 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 800b27e:	4603      	mov	r3, r0
 800b280:	4618      	mov	r0, r3
 800b282:	f7ff fb89 	bl	800a998 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800b286:	6a3b      	ldr	r3, [r7, #32]
 800b288:	681b      	ldr	r3, [r3, #0]
 800b28a:	2b00      	cmp	r3, #0
 800b28c:	d008      	beq.n	800b2a0 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb0>
        (*currentTrans)->tearDown();
 800b28e:	6a3b      	ldr	r3, [r7, #32]
 800b290:	681a      	ldr	r2, [r3, #0]
 800b292:	6a3b      	ldr	r3, [r7, #32]
 800b294:	681b      	ldr	r3, [r3, #0]
 800b296:	681b      	ldr	r3, [r3, #0]
 800b298:	330c      	adds	r3, #12
 800b29a:	681b      	ldr	r3, [r3, #0]
 800b29c:	4610      	mov	r0, r2
 800b29e:	4798      	blx	r3
    if (*currentTrans)
 800b2a0:	6a3b      	ldr	r3, [r7, #32]
 800b2a2:	681b      	ldr	r3, [r3, #0]
 800b2a4:	2b00      	cmp	r3, #0
 800b2a6:	d007      	beq.n	800b2b8 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc8>
        (*currentTrans)->~Transition();
 800b2a8:	6a3b      	ldr	r3, [r7, #32]
 800b2aa:	681a      	ldr	r2, [r3, #0]
 800b2ac:	6a3b      	ldr	r3, [r7, #32]
 800b2ae:	681b      	ldr	r3, [r3, #0]
 800b2b0:	681b      	ldr	r3, [r3, #0]
 800b2b2:	681b      	ldr	r3, [r3, #0]
 800b2b4:	4610      	mov	r0, r2
 800b2b6:	4798      	blx	r3
    if (*currentScreen)
 800b2b8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b2ba:	681b      	ldr	r3, [r3, #0]
 800b2bc:	2b00      	cmp	r3, #0
 800b2be:	d008      	beq.n	800b2d2 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe2>
        (*currentScreen)->tearDownScreen();
 800b2c0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b2c2:	681a      	ldr	r2, [r3, #0]
 800b2c4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b2c6:	681b      	ldr	r3, [r3, #0]
 800b2c8:	681b      	ldr	r3, [r3, #0]
 800b2ca:	3314      	adds	r3, #20
 800b2cc:	681b      	ldr	r3, [r3, #0]
 800b2ce:	4610      	mov	r0, r2
 800b2d0:	4798      	blx	r3
    if (*currentPresenter)
 800b2d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b2d4:	681b      	ldr	r3, [r3, #0]
 800b2d6:	2b00      	cmp	r3, #0
 800b2d8:	d008      	beq.n	800b2ec <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfc>
        (*currentPresenter)->deactivate();
 800b2da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b2dc:	681a      	ldr	r2, [r3, #0]
 800b2de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b2e0:	681b      	ldr	r3, [r3, #0]
 800b2e2:	681b      	ldr	r3, [r3, #0]
 800b2e4:	3304      	adds	r3, #4
 800b2e6:	681b      	ldr	r3, [r3, #0]
 800b2e8:	4610      	mov	r0, r2
 800b2ea:	4798      	blx	r3
    if (*currentScreen)
 800b2ec:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b2ee:	681b      	ldr	r3, [r3, #0]
 800b2f0:	2b00      	cmp	r3, #0
 800b2f2:	d007      	beq.n	800b304 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x114>
        (*currentScreen)->~Screen();
 800b2f4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b2f6:	681a      	ldr	r2, [r3, #0]
 800b2f8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b2fa:	681b      	ldr	r3, [r3, #0]
 800b2fc:	681b      	ldr	r3, [r3, #0]
 800b2fe:	681b      	ldr	r3, [r3, #0]
 800b300:	4610      	mov	r0, r2
 800b302:	4798      	blx	r3
    if (*currentPresenter)
 800b304:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b306:	681b      	ldr	r3, [r3, #0]
 800b308:	2b00      	cmp	r3, #0
 800b30a:	d008      	beq.n	800b31e <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12e>
        (*currentPresenter)->~Presenter();
 800b30c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b30e:	681a      	ldr	r2, [r3, #0]
 800b310:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b312:	681b      	ldr	r3, [r3, #0]
 800b314:	681b      	ldr	r3, [r3, #0]
 800b316:	3308      	adds	r3, #8
 800b318:	681b      	ldr	r3, [r3, #0]
 800b31a:	4610      	mov	r0, r2
 800b31c:	4798      	blx	r3
}
 800b31e:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800b320:	687b      	ldr	r3, [r7, #4]
 800b322:	68db      	ldr	r3, [r3, #12]
 800b324:	2100      	movs	r1, #0
 800b326:	4618      	mov	r0, r3
 800b328:	f000 fe00 	bl	800bf2c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800b32c:	4603      	mov	r3, r0
 800b32e:	4619      	mov	r1, r3
 800b330:	200c      	movs	r0, #12
 800b332:	f7ff fa82 	bl	800a83a <_ZnwjPv>
 800b336:	4604      	mov	r4, r0
 800b338:	4620      	mov	r0, r4
 800b33a:	f7ff ff47 	bl	800b1cc <_ZN8touchgfx12NoTransitionC1Ev>
 800b33e:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800b340:	687b      	ldr	r3, [r7, #4]
 800b342:	689b      	ldr	r3, [r3, #8]
 800b344:	2100      	movs	r1, #0
 800b346:	4618      	mov	r0, r3
 800b348:	f000 fe03 	bl	800bf52 <_ZN8touchgfx17AbstractPartition2atI14MainScreenViewEERT_t>
 800b34c:	4603      	mov	r3, r0
 800b34e:	4619      	mov	r1, r3
 800b350:	f240 400c 	movw	r0, #1036	; 0x40c
 800b354:	f7ff fa71 	bl	800a83a <_ZnwjPv>
 800b358:	4604      	mov	r4, r0
 800b35a:	4620      	mov	r0, r4
 800b35c:	f004 ff7e 	bl	801025c <_ZN14MainScreenViewC1Ev>
 800b360:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800b362:	687b      	ldr	r3, [r7, #4]
 800b364:	685b      	ldr	r3, [r3, #4]
 800b366:	2100      	movs	r1, #0
 800b368:	4618      	mov	r0, r3
 800b36a:	f000 fe05 	bl	800bf78 <_ZN8touchgfx17AbstractPartition2atI19MainScreenPresenterEERT_t>
 800b36e:	4603      	mov	r3, r0
 800b370:	4619      	mov	r1, r3
 800b372:	2010      	movs	r0, #16
 800b374:	f7ff fa61 	bl	800a83a <_ZnwjPv>
 800b378:	4604      	mov	r4, r0
 800b37a:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800b37c:	4620      	mov	r0, r4
 800b37e:	f004 ff15 	bl	80101ac <_ZN19MainScreenPresenterC1ER14MainScreenView>
 800b382:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800b384:	683b      	ldr	r3, [r7, #0]
 800b386:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800b388:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800b38a:	68bb      	ldr	r3, [r7, #8]
 800b38c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800b38e:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800b390:	68fb      	ldr	r3, [r7, #12]
 800b392:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800b394:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800b396:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b398:	2b00      	cmp	r3, #0
 800b39a:	d002      	beq.n	800b3a2 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800b39c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b39e:	3304      	adds	r3, #4
 800b3a0:	e000      	b.n	800b3a4 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800b3a2:	2300      	movs	r3, #0
 800b3a4:	4619      	mov	r1, r3
 800b3a6:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800b3a8:	f7ff fc3c 	bl	800ac24 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800b3ac:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b3ae:	3304      	adds	r3, #4
 800b3b0:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800b3b2:	4618      	mov	r0, r3
 800b3b4:	f7ff fca9 	bl	800ad0a <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800b3b8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b3ba:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800b3bc:	4618      	mov	r0, r3
 800b3be:	f000 fdee 	bl	800bf9e <_ZN8touchgfx4ViewI19MainScreenPresenterE4bindERS1_>
 800b3c2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b3c4:	61fb      	str	r3, [r7, #28]
 800b3c6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b3c8:	61bb      	str	r3, [r7, #24]
 800b3ca:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b3cc:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800b3ce:	69fb      	ldr	r3, [r7, #28]
 800b3d0:	681b      	ldr	r3, [r3, #0]
 800b3d2:	330c      	adds	r3, #12
 800b3d4:	681b      	ldr	r3, [r3, #0]
 800b3d6:	69f8      	ldr	r0, [r7, #28]
 800b3d8:	4798      	blx	r3
    newPresenter->activate();
 800b3da:	69bb      	ldr	r3, [r7, #24]
 800b3dc:	681b      	ldr	r3, [r3, #0]
 800b3de:	681b      	ldr	r3, [r3, #0]
 800b3e0:	69b8      	ldr	r0, [r7, #24]
 800b3e2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800b3e4:	6979      	ldr	r1, [r7, #20]
 800b3e6:	69f8      	ldr	r0, [r7, #28]
 800b3e8:	f00f fa6e 	bl	801a8c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800b3ec:	697b      	ldr	r3, [r7, #20]
 800b3ee:	681b      	ldr	r3, [r3, #0]
 800b3f0:	3310      	adds	r3, #16
 800b3f2:	681b      	ldr	r3, [r3, #0]
 800b3f4:	6978      	ldr	r0, [r7, #20]
 800b3f6:	4798      	blx	r3
    newTransition->invalidate();
 800b3f8:	697b      	ldr	r3, [r7, #20]
 800b3fa:	681b      	ldr	r3, [r3, #0]
 800b3fc:	3314      	adds	r3, #20
 800b3fe:	681b      	ldr	r3, [r3, #0]
 800b400:	6978      	ldr	r0, [r7, #20]
 800b402:	4798      	blx	r3
}
 800b404:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 800b406:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800b408:	4618      	mov	r0, r3
 800b40a:	373c      	adds	r7, #60	; 0x3c
 800b40c:	46bd      	mov	sp, r7
 800b40e:	bd90      	pop	{r4, r7, pc}
 800b410:	0802c368 	.word	0x0802c368
 800b414:	0802c3f8 	.word	0x0802c3f8
 800b418:	0802c504 	.word	0x0802c504
 800b41c:	0802c548 	.word	0x0802c548
 800b420:	0802c5ec 	.word	0x0802c5ec

0800b424 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800b424:	b590      	push	{r4, r7, lr}
 800b426:	b08f      	sub	sp, #60	; 0x3c
 800b428:	af00      	add	r7, sp, #0
 800b42a:	60f8      	str	r0, [r7, #12]
 800b42c:	60b9      	str	r1, [r7, #8]
 800b42e:	607a      	str	r2, [r7, #4]
 800b430:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800b432:	687b      	ldr	r3, [r7, #4]
 800b434:	689a      	ldr	r2, [r3, #8]
 800b436:	687b      	ldr	r3, [r7, #4]
 800b438:	689b      	ldr	r3, [r3, #8]
 800b43a:	681b      	ldr	r3, [r3, #0]
 800b43c:	3320      	adds	r3, #32
 800b43e:	681b      	ldr	r3, [r3, #0]
 800b440:	4610      	mov	r0, r2
 800b442:	4798      	blx	r3
 800b444:	4603      	mov	r3, r0
 800b446:	f240 420b 	movw	r2, #1035	; 0x40b
 800b44a:	4293      	cmp	r3, r2
 800b44c:	d805      	bhi.n	800b45a <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x36>
 800b44e:	4b7e      	ldr	r3, [pc, #504]	; (800b648 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b450:	4a7e      	ldr	r2, [pc, #504]	; (800b64c <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b452:	21a3      	movs	r1, #163	; 0xa3
 800b454:	487e      	ldr	r0, [pc, #504]	; (800b650 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800b456:	f01f fecb 	bl	802b1f0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800b45a:	687b      	ldr	r3, [r7, #4]
 800b45c:	685a      	ldr	r2, [r3, #4]
 800b45e:	687b      	ldr	r3, [r7, #4]
 800b460:	685b      	ldr	r3, [r3, #4]
 800b462:	681b      	ldr	r3, [r3, #0]
 800b464:	3320      	adds	r3, #32
 800b466:	681b      	ldr	r3, [r3, #0]
 800b468:	4610      	mov	r0, r2
 800b46a:	4798      	blx	r3
 800b46c:	4603      	mov	r3, r0
 800b46e:	2b0f      	cmp	r3, #15
 800b470:	d805      	bhi.n	800b47e <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5a>
 800b472:	4b78      	ldr	r3, [pc, #480]	; (800b654 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800b474:	4a75      	ldr	r2, [pc, #468]	; (800b64c <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b476:	21a4      	movs	r1, #164	; 0xa4
 800b478:	4875      	ldr	r0, [pc, #468]	; (800b650 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800b47a:	f01f feb9 	bl	802b1f0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800b47e:	687b      	ldr	r3, [r7, #4]
 800b480:	68da      	ldr	r2, [r3, #12]
 800b482:	687b      	ldr	r3, [r7, #4]
 800b484:	68db      	ldr	r3, [r3, #12]
 800b486:	681b      	ldr	r3, [r3, #0]
 800b488:	3320      	adds	r3, #32
 800b48a:	681b      	ldr	r3, [r3, #0]
 800b48c:	4610      	mov	r0, r2
 800b48e:	4798      	blx	r3
 800b490:	4603      	mov	r3, r0
 800b492:	2b3f      	cmp	r3, #63	; 0x3f
 800b494:	d805      	bhi.n	800b4a2 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
 800b496:	4b70      	ldr	r3, [pc, #448]	; (800b658 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x234>)
 800b498:	4a6c      	ldr	r2, [pc, #432]	; (800b64c <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b49a:	21a5      	movs	r1, #165	; 0xa5
 800b49c:	486c      	ldr	r0, [pc, #432]	; (800b650 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800b49e:	f01f fea7 	bl	802b1f0 <__assert_func>
 800b4a2:	68fb      	ldr	r3, [r7, #12]
 800b4a4:	62bb      	str	r3, [r7, #40]	; 0x28
 800b4a6:	68bb      	ldr	r3, [r7, #8]
 800b4a8:	627b      	str	r3, [r7, #36]	; 0x24
 800b4aa:	683b      	ldr	r3, [r7, #0]
 800b4ac:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800b4ae:	f00d fc51 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 800b4b2:	4603      	mov	r3, r0
 800b4b4:	4618      	mov	r0, r3
 800b4b6:	f7ff fa6f 	bl	800a998 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800b4ba:	6a3b      	ldr	r3, [r7, #32]
 800b4bc:	681b      	ldr	r3, [r3, #0]
 800b4be:	2b00      	cmp	r3, #0
 800b4c0:	d008      	beq.n	800b4d4 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb0>
        (*currentTrans)->tearDown();
 800b4c2:	6a3b      	ldr	r3, [r7, #32]
 800b4c4:	681a      	ldr	r2, [r3, #0]
 800b4c6:	6a3b      	ldr	r3, [r7, #32]
 800b4c8:	681b      	ldr	r3, [r3, #0]
 800b4ca:	681b      	ldr	r3, [r3, #0]
 800b4cc:	330c      	adds	r3, #12
 800b4ce:	681b      	ldr	r3, [r3, #0]
 800b4d0:	4610      	mov	r0, r2
 800b4d2:	4798      	blx	r3
    if (*currentTrans)
 800b4d4:	6a3b      	ldr	r3, [r7, #32]
 800b4d6:	681b      	ldr	r3, [r3, #0]
 800b4d8:	2b00      	cmp	r3, #0
 800b4da:	d007      	beq.n	800b4ec <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc8>
        (*currentTrans)->~Transition();
 800b4dc:	6a3b      	ldr	r3, [r7, #32]
 800b4de:	681a      	ldr	r2, [r3, #0]
 800b4e0:	6a3b      	ldr	r3, [r7, #32]
 800b4e2:	681b      	ldr	r3, [r3, #0]
 800b4e4:	681b      	ldr	r3, [r3, #0]
 800b4e6:	681b      	ldr	r3, [r3, #0]
 800b4e8:	4610      	mov	r0, r2
 800b4ea:	4798      	blx	r3
    if (*currentScreen)
 800b4ec:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b4ee:	681b      	ldr	r3, [r3, #0]
 800b4f0:	2b00      	cmp	r3, #0
 800b4f2:	d008      	beq.n	800b506 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe2>
        (*currentScreen)->tearDownScreen();
 800b4f4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b4f6:	681a      	ldr	r2, [r3, #0]
 800b4f8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b4fa:	681b      	ldr	r3, [r3, #0]
 800b4fc:	681b      	ldr	r3, [r3, #0]
 800b4fe:	3314      	adds	r3, #20
 800b500:	681b      	ldr	r3, [r3, #0]
 800b502:	4610      	mov	r0, r2
 800b504:	4798      	blx	r3
    if (*currentPresenter)
 800b506:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b508:	681b      	ldr	r3, [r3, #0]
 800b50a:	2b00      	cmp	r3, #0
 800b50c:	d008      	beq.n	800b520 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfc>
        (*currentPresenter)->deactivate();
 800b50e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b510:	681a      	ldr	r2, [r3, #0]
 800b512:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b514:	681b      	ldr	r3, [r3, #0]
 800b516:	681b      	ldr	r3, [r3, #0]
 800b518:	3304      	adds	r3, #4
 800b51a:	681b      	ldr	r3, [r3, #0]
 800b51c:	4610      	mov	r0, r2
 800b51e:	4798      	blx	r3
    if (*currentScreen)
 800b520:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b522:	681b      	ldr	r3, [r3, #0]
 800b524:	2b00      	cmp	r3, #0
 800b526:	d007      	beq.n	800b538 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x114>
        (*currentScreen)->~Screen();
 800b528:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b52a:	681a      	ldr	r2, [r3, #0]
 800b52c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b52e:	681b      	ldr	r3, [r3, #0]
 800b530:	681b      	ldr	r3, [r3, #0]
 800b532:	681b      	ldr	r3, [r3, #0]
 800b534:	4610      	mov	r0, r2
 800b536:	4798      	blx	r3
    if (*currentPresenter)
 800b538:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b53a:	681b      	ldr	r3, [r3, #0]
 800b53c:	2b00      	cmp	r3, #0
 800b53e:	d008      	beq.n	800b552 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12e>
        (*currentPresenter)->~Presenter();
 800b540:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b542:	681a      	ldr	r2, [r3, #0]
 800b544:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b546:	681b      	ldr	r3, [r3, #0]
 800b548:	681b      	ldr	r3, [r3, #0]
 800b54a:	3308      	adds	r3, #8
 800b54c:	681b      	ldr	r3, [r3, #0]
 800b54e:	4610      	mov	r0, r2
 800b550:	4798      	blx	r3
}
 800b552:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800b554:	687b      	ldr	r3, [r7, #4]
 800b556:	68db      	ldr	r3, [r3, #12]
 800b558:	2100      	movs	r1, #0
 800b55a:	4618      	mov	r0, r3
 800b55c:	f000 fd2d 	bl	800bfba <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>
 800b560:	4603      	mov	r3, r0
 800b562:	4619      	mov	r1, r3
 800b564:	2040      	movs	r0, #64	; 0x40
 800b566:	f7ff f968 	bl	800a83a <_ZnwjPv>
 800b56a:	4604      	mov	r4, r0
 800b56c:	2114      	movs	r1, #20
 800b56e:	4620      	mov	r0, r4
 800b570:	f000 fd58 	bl	800c024 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
 800b574:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800b576:	687b      	ldr	r3, [r7, #4]
 800b578:	689b      	ldr	r3, [r3, #8]
 800b57a:	2100      	movs	r1, #0
 800b57c:	4618      	mov	r0, r3
 800b57e:	f000 fce8 	bl	800bf52 <_ZN8touchgfx17AbstractPartition2atI14MainScreenViewEERT_t>
 800b582:	4603      	mov	r3, r0
 800b584:	4619      	mov	r1, r3
 800b586:	f240 400c 	movw	r0, #1036	; 0x40c
 800b58a:	f7ff f956 	bl	800a83a <_ZnwjPv>
 800b58e:	4604      	mov	r4, r0
 800b590:	4620      	mov	r0, r4
 800b592:	f004 fe63 	bl	801025c <_ZN14MainScreenViewC1Ev>
 800b596:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800b598:	687b      	ldr	r3, [r7, #4]
 800b59a:	685b      	ldr	r3, [r3, #4]
 800b59c:	2100      	movs	r1, #0
 800b59e:	4618      	mov	r0, r3
 800b5a0:	f000 fcea 	bl	800bf78 <_ZN8touchgfx17AbstractPartition2atI19MainScreenPresenterEERT_t>
 800b5a4:	4603      	mov	r3, r0
 800b5a6:	4619      	mov	r1, r3
 800b5a8:	2010      	movs	r0, #16
 800b5aa:	f7ff f946 	bl	800a83a <_ZnwjPv>
 800b5ae:	4604      	mov	r4, r0
 800b5b0:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800b5b2:	4620      	mov	r0, r4
 800b5b4:	f004 fdfa 	bl	80101ac <_ZN19MainScreenPresenterC1ER14MainScreenView>
 800b5b8:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800b5ba:	683b      	ldr	r3, [r7, #0]
 800b5bc:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800b5be:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800b5c0:	68bb      	ldr	r3, [r7, #8]
 800b5c2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800b5c4:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800b5c6:	68fb      	ldr	r3, [r7, #12]
 800b5c8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800b5ca:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800b5cc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b5ce:	2b00      	cmp	r3, #0
 800b5d0:	d002      	beq.n	800b5d8 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800b5d2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b5d4:	3304      	adds	r3, #4
 800b5d6:	e000      	b.n	800b5da <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b6>
 800b5d8:	2300      	movs	r3, #0
 800b5da:	4619      	mov	r1, r3
 800b5dc:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800b5de:	f7ff fb21 	bl	800ac24 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800b5e2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b5e4:	3304      	adds	r3, #4
 800b5e6:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800b5e8:	4618      	mov	r0, r3
 800b5ea:	f7ff fb8e 	bl	800ad0a <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800b5ee:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b5f0:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800b5f2:	4618      	mov	r0, r3
 800b5f4:	f000 fcd3 	bl	800bf9e <_ZN8touchgfx4ViewI19MainScreenPresenterE4bindERS1_>
 800b5f8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b5fa:	61fb      	str	r3, [r7, #28]
 800b5fc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b5fe:	61bb      	str	r3, [r7, #24]
 800b600:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b602:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800b604:	69fb      	ldr	r3, [r7, #28]
 800b606:	681b      	ldr	r3, [r3, #0]
 800b608:	330c      	adds	r3, #12
 800b60a:	681b      	ldr	r3, [r3, #0]
 800b60c:	69f8      	ldr	r0, [r7, #28]
 800b60e:	4798      	blx	r3
    newPresenter->activate();
 800b610:	69bb      	ldr	r3, [r7, #24]
 800b612:	681b      	ldr	r3, [r3, #0]
 800b614:	681b      	ldr	r3, [r3, #0]
 800b616:	69b8      	ldr	r0, [r7, #24]
 800b618:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800b61a:	6979      	ldr	r1, [r7, #20]
 800b61c:	69f8      	ldr	r0, [r7, #28]
 800b61e:	f00f f953 	bl	801a8c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800b622:	697b      	ldr	r3, [r7, #20]
 800b624:	681b      	ldr	r3, [r3, #0]
 800b626:	3310      	adds	r3, #16
 800b628:	681b      	ldr	r3, [r3, #0]
 800b62a:	6978      	ldr	r0, [r7, #20]
 800b62c:	4798      	blx	r3
    newTransition->invalidate();
 800b62e:	697b      	ldr	r3, [r7, #20]
 800b630:	681b      	ldr	r3, [r3, #0]
 800b632:	3314      	adds	r3, #20
 800b634:	681b      	ldr	r3, [r3, #0]
 800b636:	6978      	ldr	r0, [r7, #20]
 800b638:	4798      	blx	r3
}
 800b63a:	bf00      	nop
    return newPresenter;
 800b63c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800b63e:	4618      	mov	r0, r3
 800b640:	373c      	adds	r7, #60	; 0x3c
 800b642:	46bd      	mov	sp, r7
 800b644:	bd90      	pop	{r4, r7, pc}
 800b646:	bf00      	nop
 800b648:	0802c368 	.word	0x0802c368
 800b64c:	0802c690 	.word	0x0802c690
 800b650:	0802c504 	.word	0x0802c504
 800b654:	0802c548 	.word	0x0802c548
 800b658:	0802c5ec 	.word	0x0802c5ec

0800b65c <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800b65c:	b590      	push	{r4, r7, lr}
 800b65e:	b08f      	sub	sp, #60	; 0x3c
 800b660:	af00      	add	r7, sp, #0
 800b662:	60f8      	str	r0, [r7, #12]
 800b664:	60b9      	str	r1, [r7, #8]
 800b666:	607a      	str	r2, [r7, #4]
 800b668:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800b66a:	687b      	ldr	r3, [r7, #4]
 800b66c:	689a      	ldr	r2, [r3, #8]
 800b66e:	687b      	ldr	r3, [r7, #4]
 800b670:	689b      	ldr	r3, [r3, #8]
 800b672:	681b      	ldr	r3, [r3, #0]
 800b674:	3320      	adds	r3, #32
 800b676:	681b      	ldr	r3, [r3, #0]
 800b678:	4610      	mov	r0, r2
 800b67a:	4798      	blx	r3
 800b67c:	4603      	mov	r3, r0
 800b67e:	f5b3 7fcc 	cmp.w	r3, #408	; 0x198
 800b682:	d205      	bcs.n	800b690 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800b684:	4b7d      	ldr	r3, [pc, #500]	; (800b87c <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800b686:	4a7e      	ldr	r2, [pc, #504]	; (800b880 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b688:	21a3      	movs	r1, #163	; 0xa3
 800b68a:	487e      	ldr	r0, [pc, #504]	; (800b884 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b68c:	f01f fdb0 	bl	802b1f0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800b690:	687b      	ldr	r3, [r7, #4]
 800b692:	685a      	ldr	r2, [r3, #4]
 800b694:	687b      	ldr	r3, [r7, #4]
 800b696:	685b      	ldr	r3, [r3, #4]
 800b698:	681b      	ldr	r3, [r3, #0]
 800b69a:	3320      	adds	r3, #32
 800b69c:	681b      	ldr	r3, [r3, #0]
 800b69e:	4610      	mov	r0, r2
 800b6a0:	4798      	blx	r3
 800b6a2:	4603      	mov	r3, r0
 800b6a4:	2b0f      	cmp	r3, #15
 800b6a6:	d805      	bhi.n	800b6b4 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800b6a8:	4b77      	ldr	r3, [pc, #476]	; (800b888 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800b6aa:	4a75      	ldr	r2, [pc, #468]	; (800b880 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b6ac:	21a4      	movs	r1, #164	; 0xa4
 800b6ae:	4875      	ldr	r0, [pc, #468]	; (800b884 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b6b0:	f01f fd9e 	bl	802b1f0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800b6b4:	687b      	ldr	r3, [r7, #4]
 800b6b6:	68da      	ldr	r2, [r3, #12]
 800b6b8:	687b      	ldr	r3, [r7, #4]
 800b6ba:	68db      	ldr	r3, [r3, #12]
 800b6bc:	681b      	ldr	r3, [r3, #0]
 800b6be:	3320      	adds	r3, #32
 800b6c0:	681b      	ldr	r3, [r3, #0]
 800b6c2:	4610      	mov	r0, r2
 800b6c4:	4798      	blx	r3
 800b6c6:	4603      	mov	r3, r0
 800b6c8:	2b3f      	cmp	r3, #63	; 0x3f
 800b6ca:	d805      	bhi.n	800b6d8 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800b6cc:	4b6f      	ldr	r3, [pc, #444]	; (800b88c <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800b6ce:	4a6c      	ldr	r2, [pc, #432]	; (800b880 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b6d0:	21a5      	movs	r1, #165	; 0xa5
 800b6d2:	486c      	ldr	r0, [pc, #432]	; (800b884 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b6d4:	f01f fd8c 	bl	802b1f0 <__assert_func>
 800b6d8:	68fb      	ldr	r3, [r7, #12]
 800b6da:	62bb      	str	r3, [r7, #40]	; 0x28
 800b6dc:	68bb      	ldr	r3, [r7, #8]
 800b6de:	627b      	str	r3, [r7, #36]	; 0x24
 800b6e0:	683b      	ldr	r3, [r7, #0]
 800b6e2:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800b6e4:	f00d fb36 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 800b6e8:	4603      	mov	r3, r0
 800b6ea:	4618      	mov	r0, r3
 800b6ec:	f7ff f954 	bl	800a998 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800b6f0:	6a3b      	ldr	r3, [r7, #32]
 800b6f2:	681b      	ldr	r3, [r3, #0]
 800b6f4:	2b00      	cmp	r3, #0
 800b6f6:	d008      	beq.n	800b70a <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800b6f8:	6a3b      	ldr	r3, [r7, #32]
 800b6fa:	681a      	ldr	r2, [r3, #0]
 800b6fc:	6a3b      	ldr	r3, [r7, #32]
 800b6fe:	681b      	ldr	r3, [r3, #0]
 800b700:	681b      	ldr	r3, [r3, #0]
 800b702:	330c      	adds	r3, #12
 800b704:	681b      	ldr	r3, [r3, #0]
 800b706:	4610      	mov	r0, r2
 800b708:	4798      	blx	r3
    if (*currentTrans)
 800b70a:	6a3b      	ldr	r3, [r7, #32]
 800b70c:	681b      	ldr	r3, [r3, #0]
 800b70e:	2b00      	cmp	r3, #0
 800b710:	d007      	beq.n	800b722 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800b712:	6a3b      	ldr	r3, [r7, #32]
 800b714:	681a      	ldr	r2, [r3, #0]
 800b716:	6a3b      	ldr	r3, [r7, #32]
 800b718:	681b      	ldr	r3, [r3, #0]
 800b71a:	681b      	ldr	r3, [r3, #0]
 800b71c:	681b      	ldr	r3, [r3, #0]
 800b71e:	4610      	mov	r0, r2
 800b720:	4798      	blx	r3
    if (*currentScreen)
 800b722:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b724:	681b      	ldr	r3, [r3, #0]
 800b726:	2b00      	cmp	r3, #0
 800b728:	d008      	beq.n	800b73c <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800b72a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b72c:	681a      	ldr	r2, [r3, #0]
 800b72e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b730:	681b      	ldr	r3, [r3, #0]
 800b732:	681b      	ldr	r3, [r3, #0]
 800b734:	3314      	adds	r3, #20
 800b736:	681b      	ldr	r3, [r3, #0]
 800b738:	4610      	mov	r0, r2
 800b73a:	4798      	blx	r3
    if (*currentPresenter)
 800b73c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b73e:	681b      	ldr	r3, [r3, #0]
 800b740:	2b00      	cmp	r3, #0
 800b742:	d008      	beq.n	800b756 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800b744:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b746:	681a      	ldr	r2, [r3, #0]
 800b748:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b74a:	681b      	ldr	r3, [r3, #0]
 800b74c:	681b      	ldr	r3, [r3, #0]
 800b74e:	3304      	adds	r3, #4
 800b750:	681b      	ldr	r3, [r3, #0]
 800b752:	4610      	mov	r0, r2
 800b754:	4798      	blx	r3
    if (*currentScreen)
 800b756:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b758:	681b      	ldr	r3, [r3, #0]
 800b75a:	2b00      	cmp	r3, #0
 800b75c:	d007      	beq.n	800b76e <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800b75e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b760:	681a      	ldr	r2, [r3, #0]
 800b762:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b764:	681b      	ldr	r3, [r3, #0]
 800b766:	681b      	ldr	r3, [r3, #0]
 800b768:	681b      	ldr	r3, [r3, #0]
 800b76a:	4610      	mov	r0, r2
 800b76c:	4798      	blx	r3
    if (*currentPresenter)
 800b76e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b770:	681b      	ldr	r3, [r3, #0]
 800b772:	2b00      	cmp	r3, #0
 800b774:	d008      	beq.n	800b788 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800b776:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b778:	681a      	ldr	r2, [r3, #0]
 800b77a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b77c:	681b      	ldr	r3, [r3, #0]
 800b77e:	681b      	ldr	r3, [r3, #0]
 800b780:	3308      	adds	r3, #8
 800b782:	681b      	ldr	r3, [r3, #0]
 800b784:	4610      	mov	r0, r2
 800b786:	4798      	blx	r3
}
 800b788:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800b78a:	687b      	ldr	r3, [r7, #4]
 800b78c:	68db      	ldr	r3, [r3, #12]
 800b78e:	2100      	movs	r1, #0
 800b790:	4618      	mov	r0, r3
 800b792:	f000 fc97 	bl	800c0c4 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 800b796:	4603      	mov	r3, r0
 800b798:	4619      	mov	r1, r3
 800b79a:	2040      	movs	r0, #64	; 0x40
 800b79c:	f7ff f84d 	bl	800a83a <_ZnwjPv>
 800b7a0:	4604      	mov	r4, r0
 800b7a2:	2114      	movs	r1, #20
 800b7a4:	4620      	mov	r0, r4
 800b7a6:	f000 fca1 	bl	800c0ec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
 800b7aa:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800b7ac:	687b      	ldr	r3, [r7, #4]
 800b7ae:	689b      	ldr	r3, [r3, #8]
 800b7b0:	2100      	movs	r1, #0
 800b7b2:	4618      	mov	r0, r3
 800b7b4:	f000 fcec 	bl	800c190 <_ZN8touchgfx17AbstractPartition2atI15ClockScreenViewEERT_t>
 800b7b8:	4603      	mov	r3, r0
 800b7ba:	4619      	mov	r1, r3
 800b7bc:	f44f 70cc 	mov.w	r0, #408	; 0x198
 800b7c0:	f7ff f83b 	bl	800a83a <_ZnwjPv>
 800b7c4:	4604      	mov	r4, r0
 800b7c6:	4620      	mov	r0, r4
 800b7c8:	f004 fb3e 	bl	800fe48 <_ZN15ClockScreenViewC1Ev>
 800b7cc:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800b7ce:	687b      	ldr	r3, [r7, #4]
 800b7d0:	685b      	ldr	r3, [r3, #4]
 800b7d2:	2100      	movs	r1, #0
 800b7d4:	4618      	mov	r0, r3
 800b7d6:	f000 fcee 	bl	800c1b6 <_ZN8touchgfx17AbstractPartition2atI20ClockScreenPresenterEERT_t>
 800b7da:	4603      	mov	r3, r0
 800b7dc:	4619      	mov	r1, r3
 800b7de:	2010      	movs	r0, #16
 800b7e0:	f7ff f82b 	bl	800a83a <_ZnwjPv>
 800b7e4:	4604      	mov	r4, r0
 800b7e6:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800b7e8:	4620      	mov	r0, r4
 800b7ea:	f004 fab5 	bl	800fd58 <_ZN20ClockScreenPresenterC1ER15ClockScreenView>
 800b7ee:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800b7f0:	683b      	ldr	r3, [r7, #0]
 800b7f2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800b7f4:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800b7f6:	68bb      	ldr	r3, [r7, #8]
 800b7f8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800b7fa:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800b7fc:	68fb      	ldr	r3, [r7, #12]
 800b7fe:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800b800:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800b802:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b804:	2b00      	cmp	r3, #0
 800b806:	d002      	beq.n	800b80e <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800b808:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b80a:	3304      	adds	r3, #4
 800b80c:	e000      	b.n	800b810 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800b80e:	2300      	movs	r3, #0
 800b810:	4619      	mov	r1, r3
 800b812:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800b814:	f7ff fa06 	bl	800ac24 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800b818:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b81a:	3304      	adds	r3, #4
 800b81c:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800b81e:	4618      	mov	r0, r3
 800b820:	f7ff fa73 	bl	800ad0a <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800b824:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b826:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800b828:	4618      	mov	r0, r3
 800b82a:	f000 fcd7 	bl	800c1dc <_ZN8touchgfx4ViewI20ClockScreenPresenterE4bindERS1_>
 800b82e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b830:	61fb      	str	r3, [r7, #28]
 800b832:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b834:	61bb      	str	r3, [r7, #24]
 800b836:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b838:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800b83a:	69fb      	ldr	r3, [r7, #28]
 800b83c:	681b      	ldr	r3, [r3, #0]
 800b83e:	330c      	adds	r3, #12
 800b840:	681b      	ldr	r3, [r3, #0]
 800b842:	69f8      	ldr	r0, [r7, #28]
 800b844:	4798      	blx	r3
    newPresenter->activate();
 800b846:	69bb      	ldr	r3, [r7, #24]
 800b848:	681b      	ldr	r3, [r3, #0]
 800b84a:	681b      	ldr	r3, [r3, #0]
 800b84c:	69b8      	ldr	r0, [r7, #24]
 800b84e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800b850:	6979      	ldr	r1, [r7, #20]
 800b852:	69f8      	ldr	r0, [r7, #28]
 800b854:	f00f f838 	bl	801a8c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800b858:	697b      	ldr	r3, [r7, #20]
 800b85a:	681b      	ldr	r3, [r3, #0]
 800b85c:	3310      	adds	r3, #16
 800b85e:	681b      	ldr	r3, [r3, #0]
 800b860:	6978      	ldr	r0, [r7, #20]
 800b862:	4798      	blx	r3
    newTransition->invalidate();
 800b864:	697b      	ldr	r3, [r7, #20]
 800b866:	681b      	ldr	r3, [r3, #0]
 800b868:	3314      	adds	r3, #20
 800b86a:	681b      	ldr	r3, [r3, #0]
 800b86c:	6978      	ldr	r0, [r7, #20]
 800b86e:	4798      	blx	r3
}
 800b870:	bf00      	nop
    return newPresenter;
 800b872:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800b874:	4618      	mov	r0, r3
 800b876:	373c      	adds	r7, #60	; 0x3c
 800b878:	46bd      	mov	sp, r7
 800b87a:	bd90      	pop	{r4, r7, pc}
 800b87c:	0802c368 	.word	0x0802c368
 800b880:	0802c7b0 	.word	0x0802c7b0
 800b884:	0802c504 	.word	0x0802c504
 800b888:	0802c548 	.word	0x0802c548
 800b88c:	0802c5ec 	.word	0x0802c5ec

0800b890 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800b890:	b590      	push	{r4, r7, lr}
 800b892:	b08f      	sub	sp, #60	; 0x3c
 800b894:	af00      	add	r7, sp, #0
 800b896:	60f8      	str	r0, [r7, #12]
 800b898:	60b9      	str	r1, [r7, #8]
 800b89a:	607a      	str	r2, [r7, #4]
 800b89c:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800b89e:	687b      	ldr	r3, [r7, #4]
 800b8a0:	689a      	ldr	r2, [r3, #8]
 800b8a2:	687b      	ldr	r3, [r7, #4]
 800b8a4:	689b      	ldr	r3, [r3, #8]
 800b8a6:	681b      	ldr	r3, [r3, #0]
 800b8a8:	3320      	adds	r3, #32
 800b8aa:	681b      	ldr	r3, [r3, #0]
 800b8ac:	4610      	mov	r0, r2
 800b8ae:	4798      	blx	r3
 800b8b0:	4603      	mov	r3, r0
 800b8b2:	f5b3 7f3d 	cmp.w	r3, #756	; 0x2f4
 800b8b6:	d205      	bcs.n	800b8c4 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800b8b8:	4b7d      	ldr	r3, [pc, #500]	; (800bab0 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800b8ba:	4a7e      	ldr	r2, [pc, #504]	; (800bab4 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b8bc:	21a3      	movs	r1, #163	; 0xa3
 800b8be:	487e      	ldr	r0, [pc, #504]	; (800bab8 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b8c0:	f01f fc96 	bl	802b1f0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800b8c4:	687b      	ldr	r3, [r7, #4]
 800b8c6:	685a      	ldr	r2, [r3, #4]
 800b8c8:	687b      	ldr	r3, [r7, #4]
 800b8ca:	685b      	ldr	r3, [r3, #4]
 800b8cc:	681b      	ldr	r3, [r3, #0]
 800b8ce:	3320      	adds	r3, #32
 800b8d0:	681b      	ldr	r3, [r3, #0]
 800b8d2:	4610      	mov	r0, r2
 800b8d4:	4798      	blx	r3
 800b8d6:	4603      	mov	r3, r0
 800b8d8:	2b0f      	cmp	r3, #15
 800b8da:	d805      	bhi.n	800b8e8 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800b8dc:	4b77      	ldr	r3, [pc, #476]	; (800babc <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800b8de:	4a75      	ldr	r2, [pc, #468]	; (800bab4 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b8e0:	21a4      	movs	r1, #164	; 0xa4
 800b8e2:	4875      	ldr	r0, [pc, #468]	; (800bab8 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b8e4:	f01f fc84 	bl	802b1f0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800b8e8:	687b      	ldr	r3, [r7, #4]
 800b8ea:	68da      	ldr	r2, [r3, #12]
 800b8ec:	687b      	ldr	r3, [r7, #4]
 800b8ee:	68db      	ldr	r3, [r3, #12]
 800b8f0:	681b      	ldr	r3, [r3, #0]
 800b8f2:	3320      	adds	r3, #32
 800b8f4:	681b      	ldr	r3, [r3, #0]
 800b8f6:	4610      	mov	r0, r2
 800b8f8:	4798      	blx	r3
 800b8fa:	4603      	mov	r3, r0
 800b8fc:	2b3f      	cmp	r3, #63	; 0x3f
 800b8fe:	d805      	bhi.n	800b90c <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800b900:	4b6f      	ldr	r3, [pc, #444]	; (800bac0 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800b902:	4a6c      	ldr	r2, [pc, #432]	; (800bab4 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b904:	21a5      	movs	r1, #165	; 0xa5
 800b906:	486c      	ldr	r0, [pc, #432]	; (800bab8 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b908:	f01f fc72 	bl	802b1f0 <__assert_func>
 800b90c:	68fb      	ldr	r3, [r7, #12]
 800b90e:	62bb      	str	r3, [r7, #40]	; 0x28
 800b910:	68bb      	ldr	r3, [r7, #8]
 800b912:	627b      	str	r3, [r7, #36]	; 0x24
 800b914:	683b      	ldr	r3, [r7, #0]
 800b916:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800b918:	f00d fa1c 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 800b91c:	4603      	mov	r3, r0
 800b91e:	4618      	mov	r0, r3
 800b920:	f7ff f83a 	bl	800a998 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800b924:	6a3b      	ldr	r3, [r7, #32]
 800b926:	681b      	ldr	r3, [r3, #0]
 800b928:	2b00      	cmp	r3, #0
 800b92a:	d008      	beq.n	800b93e <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800b92c:	6a3b      	ldr	r3, [r7, #32]
 800b92e:	681a      	ldr	r2, [r3, #0]
 800b930:	6a3b      	ldr	r3, [r7, #32]
 800b932:	681b      	ldr	r3, [r3, #0]
 800b934:	681b      	ldr	r3, [r3, #0]
 800b936:	330c      	adds	r3, #12
 800b938:	681b      	ldr	r3, [r3, #0]
 800b93a:	4610      	mov	r0, r2
 800b93c:	4798      	blx	r3
    if (*currentTrans)
 800b93e:	6a3b      	ldr	r3, [r7, #32]
 800b940:	681b      	ldr	r3, [r3, #0]
 800b942:	2b00      	cmp	r3, #0
 800b944:	d007      	beq.n	800b956 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800b946:	6a3b      	ldr	r3, [r7, #32]
 800b948:	681a      	ldr	r2, [r3, #0]
 800b94a:	6a3b      	ldr	r3, [r7, #32]
 800b94c:	681b      	ldr	r3, [r3, #0]
 800b94e:	681b      	ldr	r3, [r3, #0]
 800b950:	681b      	ldr	r3, [r3, #0]
 800b952:	4610      	mov	r0, r2
 800b954:	4798      	blx	r3
    if (*currentScreen)
 800b956:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b958:	681b      	ldr	r3, [r3, #0]
 800b95a:	2b00      	cmp	r3, #0
 800b95c:	d008      	beq.n	800b970 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800b95e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b960:	681a      	ldr	r2, [r3, #0]
 800b962:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b964:	681b      	ldr	r3, [r3, #0]
 800b966:	681b      	ldr	r3, [r3, #0]
 800b968:	3314      	adds	r3, #20
 800b96a:	681b      	ldr	r3, [r3, #0]
 800b96c:	4610      	mov	r0, r2
 800b96e:	4798      	blx	r3
    if (*currentPresenter)
 800b970:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b972:	681b      	ldr	r3, [r3, #0]
 800b974:	2b00      	cmp	r3, #0
 800b976:	d008      	beq.n	800b98a <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800b978:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b97a:	681a      	ldr	r2, [r3, #0]
 800b97c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b97e:	681b      	ldr	r3, [r3, #0]
 800b980:	681b      	ldr	r3, [r3, #0]
 800b982:	3304      	adds	r3, #4
 800b984:	681b      	ldr	r3, [r3, #0]
 800b986:	4610      	mov	r0, r2
 800b988:	4798      	blx	r3
    if (*currentScreen)
 800b98a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b98c:	681b      	ldr	r3, [r3, #0]
 800b98e:	2b00      	cmp	r3, #0
 800b990:	d007      	beq.n	800b9a2 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800b992:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b994:	681a      	ldr	r2, [r3, #0]
 800b996:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b998:	681b      	ldr	r3, [r3, #0]
 800b99a:	681b      	ldr	r3, [r3, #0]
 800b99c:	681b      	ldr	r3, [r3, #0]
 800b99e:	4610      	mov	r0, r2
 800b9a0:	4798      	blx	r3
    if (*currentPresenter)
 800b9a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b9a4:	681b      	ldr	r3, [r3, #0]
 800b9a6:	2b00      	cmp	r3, #0
 800b9a8:	d008      	beq.n	800b9bc <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800b9aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b9ac:	681a      	ldr	r2, [r3, #0]
 800b9ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b9b0:	681b      	ldr	r3, [r3, #0]
 800b9b2:	681b      	ldr	r3, [r3, #0]
 800b9b4:	3308      	adds	r3, #8
 800b9b6:	681b      	ldr	r3, [r3, #0]
 800b9b8:	4610      	mov	r0, r2
 800b9ba:	4798      	blx	r3
}
 800b9bc:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800b9be:	687b      	ldr	r3, [r7, #4]
 800b9c0:	68db      	ldr	r3, [r3, #12]
 800b9c2:	2100      	movs	r1, #0
 800b9c4:	4618      	mov	r0, r3
 800b9c6:	f000 fb7d 	bl	800c0c4 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 800b9ca:	4603      	mov	r3, r0
 800b9cc:	4619      	mov	r1, r3
 800b9ce:	2040      	movs	r0, #64	; 0x40
 800b9d0:	f7fe ff33 	bl	800a83a <_ZnwjPv>
 800b9d4:	4604      	mov	r4, r0
 800b9d6:	2114      	movs	r1, #20
 800b9d8:	4620      	mov	r0, r4
 800b9da:	f000 fb87 	bl	800c0ec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
 800b9de:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800b9e0:	687b      	ldr	r3, [r7, #4]
 800b9e2:	689b      	ldr	r3, [r3, #8]
 800b9e4:	2100      	movs	r1, #0
 800b9e6:	4618      	mov	r0, r3
 800b9e8:	f000 fc06 	bl	800c1f8 <_ZN8touchgfx17AbstractPartition2atI21TemperatureScreenViewEERT_t>
 800b9ec:	4603      	mov	r3, r0
 800b9ee:	4619      	mov	r1, r3
 800b9f0:	f44f 703d 	mov.w	r0, #756	; 0x2f4
 800b9f4:	f7fe ff21 	bl	800a83a <_ZnwjPv>
 800b9f8:	4604      	mov	r4, r0
 800b9fa:	4620      	mov	r0, r4
 800b9fc:	f004 fe62 	bl	80106c4 <_ZN21TemperatureScreenViewC1Ev>
 800ba00:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800ba02:	687b      	ldr	r3, [r7, #4]
 800ba04:	685b      	ldr	r3, [r3, #4]
 800ba06:	2100      	movs	r1, #0
 800ba08:	4618      	mov	r0, r3
 800ba0a:	f000 fc08 	bl	800c21e <_ZN8touchgfx17AbstractPartition2atI26TemperatureScreenPresenterEERT_t>
 800ba0e:	4603      	mov	r3, r0
 800ba10:	4619      	mov	r1, r3
 800ba12:	2010      	movs	r0, #16
 800ba14:	f7fe ff11 	bl	800a83a <_ZnwjPv>
 800ba18:	4604      	mov	r4, r0
 800ba1a:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800ba1c:	4620      	mov	r0, r4
 800ba1e:	f004 fde1 	bl	80105e4 <_ZN26TemperatureScreenPresenterC1ER21TemperatureScreenView>
 800ba22:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800ba24:	683b      	ldr	r3, [r7, #0]
 800ba26:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800ba28:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800ba2a:	68bb      	ldr	r3, [r7, #8]
 800ba2c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800ba2e:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800ba30:	68fb      	ldr	r3, [r7, #12]
 800ba32:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800ba34:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800ba36:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800ba38:	2b00      	cmp	r3, #0
 800ba3a:	d002      	beq.n	800ba42 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800ba3c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800ba3e:	3304      	adds	r3, #4
 800ba40:	e000      	b.n	800ba44 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800ba42:	2300      	movs	r3, #0
 800ba44:	4619      	mov	r1, r3
 800ba46:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800ba48:	f7ff f8ec 	bl	800ac24 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800ba4c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800ba4e:	3304      	adds	r3, #4
 800ba50:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800ba52:	4618      	mov	r0, r3
 800ba54:	f7ff f959 	bl	800ad0a <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800ba58:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800ba5a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800ba5c:	4618      	mov	r0, r3
 800ba5e:	f000 fbf1 	bl	800c244 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterE4bindERS1_>
 800ba62:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800ba64:	61fb      	str	r3, [r7, #28]
 800ba66:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800ba68:	61bb      	str	r3, [r7, #24]
 800ba6a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ba6c:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800ba6e:	69fb      	ldr	r3, [r7, #28]
 800ba70:	681b      	ldr	r3, [r3, #0]
 800ba72:	330c      	adds	r3, #12
 800ba74:	681b      	ldr	r3, [r3, #0]
 800ba76:	69f8      	ldr	r0, [r7, #28]
 800ba78:	4798      	blx	r3
    newPresenter->activate();
 800ba7a:	69bb      	ldr	r3, [r7, #24]
 800ba7c:	681b      	ldr	r3, [r3, #0]
 800ba7e:	681b      	ldr	r3, [r3, #0]
 800ba80:	69b8      	ldr	r0, [r7, #24]
 800ba82:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800ba84:	6979      	ldr	r1, [r7, #20]
 800ba86:	69f8      	ldr	r0, [r7, #28]
 800ba88:	f00e ff1e 	bl	801a8c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800ba8c:	697b      	ldr	r3, [r7, #20]
 800ba8e:	681b      	ldr	r3, [r3, #0]
 800ba90:	3310      	adds	r3, #16
 800ba92:	681b      	ldr	r3, [r3, #0]
 800ba94:	6978      	ldr	r0, [r7, #20]
 800ba96:	4798      	blx	r3
    newTransition->invalidate();
 800ba98:	697b      	ldr	r3, [r7, #20]
 800ba9a:	681b      	ldr	r3, [r3, #0]
 800ba9c:	3314      	adds	r3, #20
 800ba9e:	681b      	ldr	r3, [r3, #0]
 800baa0:	6978      	ldr	r0, [r7, #20]
 800baa2:	4798      	blx	r3
}
 800baa4:	bf00      	nop
    return newPresenter;
 800baa6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800baa8:	4618      	mov	r0, r3
 800baaa:	373c      	adds	r7, #60	; 0x3c
 800baac:	46bd      	mov	sp, r7
 800baae:	bd90      	pop	{r4, r7, pc}
 800bab0:	0802c368 	.word	0x0802c368
 800bab4:	0802c8d0 	.word	0x0802c8d0
 800bab8:	0802c504 	.word	0x0802c504
 800babc:	0802c548 	.word	0x0802c548
 800bac0:	0802c5ec 	.word	0x0802c5ec

0800bac4 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800bac4:	b590      	push	{r4, r7, lr}
 800bac6:	b08f      	sub	sp, #60	; 0x3c
 800bac8:	af00      	add	r7, sp, #0
 800baca:	60f8      	str	r0, [r7, #12]
 800bacc:	60b9      	str	r1, [r7, #8]
 800bace:	607a      	str	r2, [r7, #4]
 800bad0:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800bad2:	687b      	ldr	r3, [r7, #4]
 800bad4:	689a      	ldr	r2, [r3, #8]
 800bad6:	687b      	ldr	r3, [r7, #4]
 800bad8:	689b      	ldr	r3, [r3, #8]
 800bada:	681b      	ldr	r3, [r3, #0]
 800badc:	3320      	adds	r3, #32
 800bade:	681b      	ldr	r3, [r3, #0]
 800bae0:	4610      	mov	r0, r2
 800bae2:	4798      	blx	r3
 800bae4:	4603      	mov	r3, r0
 800bae6:	f5b3 7f3f 	cmp.w	r3, #764	; 0x2fc
 800baea:	d205      	bcs.n	800baf8 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800baec:	4b7d      	ldr	r3, [pc, #500]	; (800bce4 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800baee:	4a7e      	ldr	r2, [pc, #504]	; (800bce8 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800baf0:	21a3      	movs	r1, #163	; 0xa3
 800baf2:	487e      	ldr	r0, [pc, #504]	; (800bcec <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800baf4:	f01f fb7c 	bl	802b1f0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800baf8:	687b      	ldr	r3, [r7, #4]
 800bafa:	685a      	ldr	r2, [r3, #4]
 800bafc:	687b      	ldr	r3, [r7, #4]
 800bafe:	685b      	ldr	r3, [r3, #4]
 800bb00:	681b      	ldr	r3, [r3, #0]
 800bb02:	3320      	adds	r3, #32
 800bb04:	681b      	ldr	r3, [r3, #0]
 800bb06:	4610      	mov	r0, r2
 800bb08:	4798      	blx	r3
 800bb0a:	4603      	mov	r3, r0
 800bb0c:	2b0f      	cmp	r3, #15
 800bb0e:	d805      	bhi.n	800bb1c <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800bb10:	4b77      	ldr	r3, [pc, #476]	; (800bcf0 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800bb12:	4a75      	ldr	r2, [pc, #468]	; (800bce8 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800bb14:	21a4      	movs	r1, #164	; 0xa4
 800bb16:	4875      	ldr	r0, [pc, #468]	; (800bcec <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800bb18:	f01f fb6a 	bl	802b1f0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800bb1c:	687b      	ldr	r3, [r7, #4]
 800bb1e:	68da      	ldr	r2, [r3, #12]
 800bb20:	687b      	ldr	r3, [r7, #4]
 800bb22:	68db      	ldr	r3, [r3, #12]
 800bb24:	681b      	ldr	r3, [r3, #0]
 800bb26:	3320      	adds	r3, #32
 800bb28:	681b      	ldr	r3, [r3, #0]
 800bb2a:	4610      	mov	r0, r2
 800bb2c:	4798      	blx	r3
 800bb2e:	4603      	mov	r3, r0
 800bb30:	2b3f      	cmp	r3, #63	; 0x3f
 800bb32:	d805      	bhi.n	800bb40 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800bb34:	4b6f      	ldr	r3, [pc, #444]	; (800bcf4 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800bb36:	4a6c      	ldr	r2, [pc, #432]	; (800bce8 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800bb38:	21a5      	movs	r1, #165	; 0xa5
 800bb3a:	486c      	ldr	r0, [pc, #432]	; (800bcec <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800bb3c:	f01f fb58 	bl	802b1f0 <__assert_func>
 800bb40:	68fb      	ldr	r3, [r7, #12]
 800bb42:	62bb      	str	r3, [r7, #40]	; 0x28
 800bb44:	68bb      	ldr	r3, [r7, #8]
 800bb46:	627b      	str	r3, [r7, #36]	; 0x24
 800bb48:	683b      	ldr	r3, [r7, #0]
 800bb4a:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800bb4c:	f00d f902 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 800bb50:	4603      	mov	r3, r0
 800bb52:	4618      	mov	r0, r3
 800bb54:	f7fe ff20 	bl	800a998 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800bb58:	6a3b      	ldr	r3, [r7, #32]
 800bb5a:	681b      	ldr	r3, [r3, #0]
 800bb5c:	2b00      	cmp	r3, #0
 800bb5e:	d008      	beq.n	800bb72 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800bb60:	6a3b      	ldr	r3, [r7, #32]
 800bb62:	681a      	ldr	r2, [r3, #0]
 800bb64:	6a3b      	ldr	r3, [r7, #32]
 800bb66:	681b      	ldr	r3, [r3, #0]
 800bb68:	681b      	ldr	r3, [r3, #0]
 800bb6a:	330c      	adds	r3, #12
 800bb6c:	681b      	ldr	r3, [r3, #0]
 800bb6e:	4610      	mov	r0, r2
 800bb70:	4798      	blx	r3
    if (*currentTrans)
 800bb72:	6a3b      	ldr	r3, [r7, #32]
 800bb74:	681b      	ldr	r3, [r3, #0]
 800bb76:	2b00      	cmp	r3, #0
 800bb78:	d007      	beq.n	800bb8a <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800bb7a:	6a3b      	ldr	r3, [r7, #32]
 800bb7c:	681a      	ldr	r2, [r3, #0]
 800bb7e:	6a3b      	ldr	r3, [r7, #32]
 800bb80:	681b      	ldr	r3, [r3, #0]
 800bb82:	681b      	ldr	r3, [r3, #0]
 800bb84:	681b      	ldr	r3, [r3, #0]
 800bb86:	4610      	mov	r0, r2
 800bb88:	4798      	blx	r3
    if (*currentScreen)
 800bb8a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bb8c:	681b      	ldr	r3, [r3, #0]
 800bb8e:	2b00      	cmp	r3, #0
 800bb90:	d008      	beq.n	800bba4 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800bb92:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bb94:	681a      	ldr	r2, [r3, #0]
 800bb96:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bb98:	681b      	ldr	r3, [r3, #0]
 800bb9a:	681b      	ldr	r3, [r3, #0]
 800bb9c:	3314      	adds	r3, #20
 800bb9e:	681b      	ldr	r3, [r3, #0]
 800bba0:	4610      	mov	r0, r2
 800bba2:	4798      	blx	r3
    if (*currentPresenter)
 800bba4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bba6:	681b      	ldr	r3, [r3, #0]
 800bba8:	2b00      	cmp	r3, #0
 800bbaa:	d008      	beq.n	800bbbe <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800bbac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bbae:	681a      	ldr	r2, [r3, #0]
 800bbb0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bbb2:	681b      	ldr	r3, [r3, #0]
 800bbb4:	681b      	ldr	r3, [r3, #0]
 800bbb6:	3304      	adds	r3, #4
 800bbb8:	681b      	ldr	r3, [r3, #0]
 800bbba:	4610      	mov	r0, r2
 800bbbc:	4798      	blx	r3
    if (*currentScreen)
 800bbbe:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bbc0:	681b      	ldr	r3, [r3, #0]
 800bbc2:	2b00      	cmp	r3, #0
 800bbc4:	d007      	beq.n	800bbd6 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800bbc6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bbc8:	681a      	ldr	r2, [r3, #0]
 800bbca:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bbcc:	681b      	ldr	r3, [r3, #0]
 800bbce:	681b      	ldr	r3, [r3, #0]
 800bbd0:	681b      	ldr	r3, [r3, #0]
 800bbd2:	4610      	mov	r0, r2
 800bbd4:	4798      	blx	r3
    if (*currentPresenter)
 800bbd6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bbd8:	681b      	ldr	r3, [r3, #0]
 800bbda:	2b00      	cmp	r3, #0
 800bbdc:	d008      	beq.n	800bbf0 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800bbde:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bbe0:	681a      	ldr	r2, [r3, #0]
 800bbe2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bbe4:	681b      	ldr	r3, [r3, #0]
 800bbe6:	681b      	ldr	r3, [r3, #0]
 800bbe8:	3308      	adds	r3, #8
 800bbea:	681b      	ldr	r3, [r3, #0]
 800bbec:	4610      	mov	r0, r2
 800bbee:	4798      	blx	r3
}
 800bbf0:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800bbf2:	687b      	ldr	r3, [r7, #4]
 800bbf4:	68db      	ldr	r3, [r3, #12]
 800bbf6:	2100      	movs	r1, #0
 800bbf8:	4618      	mov	r0, r3
 800bbfa:	f000 fa63 	bl	800c0c4 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 800bbfe:	4603      	mov	r3, r0
 800bc00:	4619      	mov	r1, r3
 800bc02:	2040      	movs	r0, #64	; 0x40
 800bc04:	f7fe fe19 	bl	800a83a <_ZnwjPv>
 800bc08:	4604      	mov	r4, r0
 800bc0a:	2114      	movs	r1, #20
 800bc0c:	4620      	mov	r0, r4
 800bc0e:	f000 fa6d 	bl	800c0ec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
 800bc12:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800bc14:	687b      	ldr	r3, [r7, #4]
 800bc16:	689b      	ldr	r3, [r3, #8]
 800bc18:	2100      	movs	r1, #0
 800bc1a:	4618      	mov	r0, r3
 800bc1c:	f000 fb20 	bl	800c260 <_ZN8touchgfx17AbstractPartition2atI18PressureScreenViewEERT_t>
 800bc20:	4603      	mov	r3, r0
 800bc22:	4619      	mov	r1, r3
 800bc24:	f44f 703f 	mov.w	r0, #764	; 0x2fc
 800bc28:	f7fe fe07 	bl	800a83a <_ZnwjPv>
 800bc2c:	4604      	mov	r4, r0
 800bc2e:	4620      	mov	r0, r4
 800bc30:	f004 fc5a 	bl	80104e8 <_ZN18PressureScreenViewC1Ev>
 800bc34:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800bc36:	687b      	ldr	r3, [r7, #4]
 800bc38:	685b      	ldr	r3, [r3, #4]
 800bc3a:	2100      	movs	r1, #0
 800bc3c:	4618      	mov	r0, r3
 800bc3e:	f000 fb22 	bl	800c286 <_ZN8touchgfx17AbstractPartition2atI23PressureScreenPresenterEERT_t>
 800bc42:	4603      	mov	r3, r0
 800bc44:	4619      	mov	r1, r3
 800bc46:	2010      	movs	r0, #16
 800bc48:	f7fe fdf7 	bl	800a83a <_ZnwjPv>
 800bc4c:	4604      	mov	r4, r0
 800bc4e:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800bc50:	4620      	mov	r0, r4
 800bc52:	f004 fbd9 	bl	8010408 <_ZN23PressureScreenPresenterC1ER18PressureScreenView>
 800bc56:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800bc58:	683b      	ldr	r3, [r7, #0]
 800bc5a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800bc5c:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800bc5e:	68bb      	ldr	r3, [r7, #8]
 800bc60:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800bc62:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800bc64:	68fb      	ldr	r3, [r7, #12]
 800bc66:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800bc68:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800bc6a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bc6c:	2b00      	cmp	r3, #0
 800bc6e:	d002      	beq.n	800bc76 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800bc70:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bc72:	3304      	adds	r3, #4
 800bc74:	e000      	b.n	800bc78 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800bc76:	2300      	movs	r3, #0
 800bc78:	4619      	mov	r1, r3
 800bc7a:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800bc7c:	f7fe ffd2 	bl	800ac24 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800bc80:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bc82:	3304      	adds	r3, #4
 800bc84:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800bc86:	4618      	mov	r0, r3
 800bc88:	f7ff f83f 	bl	800ad0a <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800bc8c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bc8e:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800bc90:	4618      	mov	r0, r3
 800bc92:	f000 fb0b 	bl	800c2ac <_ZN8touchgfx4ViewI23PressureScreenPresenterE4bindERS1_>
 800bc96:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bc98:	61fb      	str	r3, [r7, #28]
 800bc9a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bc9c:	61bb      	str	r3, [r7, #24]
 800bc9e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800bca0:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800bca2:	69fb      	ldr	r3, [r7, #28]
 800bca4:	681b      	ldr	r3, [r3, #0]
 800bca6:	330c      	adds	r3, #12
 800bca8:	681b      	ldr	r3, [r3, #0]
 800bcaa:	69f8      	ldr	r0, [r7, #28]
 800bcac:	4798      	blx	r3
    newPresenter->activate();
 800bcae:	69bb      	ldr	r3, [r7, #24]
 800bcb0:	681b      	ldr	r3, [r3, #0]
 800bcb2:	681b      	ldr	r3, [r3, #0]
 800bcb4:	69b8      	ldr	r0, [r7, #24]
 800bcb6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800bcb8:	6979      	ldr	r1, [r7, #20]
 800bcba:	69f8      	ldr	r0, [r7, #28]
 800bcbc:	f00e fe04 	bl	801a8c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800bcc0:	697b      	ldr	r3, [r7, #20]
 800bcc2:	681b      	ldr	r3, [r3, #0]
 800bcc4:	3310      	adds	r3, #16
 800bcc6:	681b      	ldr	r3, [r3, #0]
 800bcc8:	6978      	ldr	r0, [r7, #20]
 800bcca:	4798      	blx	r3
    newTransition->invalidate();
 800bccc:	697b      	ldr	r3, [r7, #20]
 800bcce:	681b      	ldr	r3, [r3, #0]
 800bcd0:	3314      	adds	r3, #20
 800bcd2:	681b      	ldr	r3, [r3, #0]
 800bcd4:	6978      	ldr	r0, [r7, #20]
 800bcd6:	4798      	blx	r3
}
 800bcd8:	bf00      	nop
    return newPresenter;
 800bcda:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800bcdc:	4618      	mov	r0, r3
 800bcde:	373c      	adds	r7, #60	; 0x3c
 800bce0:	46bd      	mov	sp, r7
 800bce2:	bd90      	pop	{r4, r7, pc}
 800bce4:	0802c368 	.word	0x0802c368
 800bce8:	0802c9fc 	.word	0x0802c9fc
 800bcec:	0802c504 	.word	0x0802c504
 800bcf0:	0802c548 	.word	0x0802c548
 800bcf4:	0802c5ec 	.word	0x0802c5ec

0800bcf8 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800bcf8:	b590      	push	{r4, r7, lr}
 800bcfa:	b08f      	sub	sp, #60	; 0x3c
 800bcfc:	af00      	add	r7, sp, #0
 800bcfe:	60f8      	str	r0, [r7, #12]
 800bd00:	60b9      	str	r1, [r7, #8]
 800bd02:	607a      	str	r2, [r7, #4]
 800bd04:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800bd06:	687b      	ldr	r3, [r7, #4]
 800bd08:	689a      	ldr	r2, [r3, #8]
 800bd0a:	687b      	ldr	r3, [r7, #4]
 800bd0c:	689b      	ldr	r3, [r3, #8]
 800bd0e:	681b      	ldr	r3, [r3, #0]
 800bd10:	3320      	adds	r3, #32
 800bd12:	681b      	ldr	r3, [r3, #0]
 800bd14:	4610      	mov	r0, r2
 800bd16:	4798      	blx	r3
 800bd18:	4603      	mov	r3, r0
 800bd1a:	f5b3 7f3d 	cmp.w	r3, #756	; 0x2f4
 800bd1e:	d205      	bcs.n	800bd2c <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800bd20:	4b7d      	ldr	r3, [pc, #500]	; (800bf18 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800bd22:	4a7e      	ldr	r2, [pc, #504]	; (800bf1c <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800bd24:	21a3      	movs	r1, #163	; 0xa3
 800bd26:	487e      	ldr	r0, [pc, #504]	; (800bf20 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800bd28:	f01f fa62 	bl	802b1f0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800bd2c:	687b      	ldr	r3, [r7, #4]
 800bd2e:	685a      	ldr	r2, [r3, #4]
 800bd30:	687b      	ldr	r3, [r7, #4]
 800bd32:	685b      	ldr	r3, [r3, #4]
 800bd34:	681b      	ldr	r3, [r3, #0]
 800bd36:	3320      	adds	r3, #32
 800bd38:	681b      	ldr	r3, [r3, #0]
 800bd3a:	4610      	mov	r0, r2
 800bd3c:	4798      	blx	r3
 800bd3e:	4603      	mov	r3, r0
 800bd40:	2b0f      	cmp	r3, #15
 800bd42:	d805      	bhi.n	800bd50 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800bd44:	4b77      	ldr	r3, [pc, #476]	; (800bf24 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800bd46:	4a75      	ldr	r2, [pc, #468]	; (800bf1c <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800bd48:	21a4      	movs	r1, #164	; 0xa4
 800bd4a:	4875      	ldr	r0, [pc, #468]	; (800bf20 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800bd4c:	f01f fa50 	bl	802b1f0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800bd50:	687b      	ldr	r3, [r7, #4]
 800bd52:	68da      	ldr	r2, [r3, #12]
 800bd54:	687b      	ldr	r3, [r7, #4]
 800bd56:	68db      	ldr	r3, [r3, #12]
 800bd58:	681b      	ldr	r3, [r3, #0]
 800bd5a:	3320      	adds	r3, #32
 800bd5c:	681b      	ldr	r3, [r3, #0]
 800bd5e:	4610      	mov	r0, r2
 800bd60:	4798      	blx	r3
 800bd62:	4603      	mov	r3, r0
 800bd64:	2b3f      	cmp	r3, #63	; 0x3f
 800bd66:	d805      	bhi.n	800bd74 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800bd68:	4b6f      	ldr	r3, [pc, #444]	; (800bf28 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800bd6a:	4a6c      	ldr	r2, [pc, #432]	; (800bf1c <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800bd6c:	21a5      	movs	r1, #165	; 0xa5
 800bd6e:	486c      	ldr	r0, [pc, #432]	; (800bf20 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800bd70:	f01f fa3e 	bl	802b1f0 <__assert_func>
 800bd74:	68fb      	ldr	r3, [r7, #12]
 800bd76:	62bb      	str	r3, [r7, #40]	; 0x28
 800bd78:	68bb      	ldr	r3, [r7, #8]
 800bd7a:	627b      	str	r3, [r7, #36]	; 0x24
 800bd7c:	683b      	ldr	r3, [r7, #0]
 800bd7e:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800bd80:	f00c ffe8 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 800bd84:	4603      	mov	r3, r0
 800bd86:	4618      	mov	r0, r3
 800bd88:	f7fe fe06 	bl	800a998 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800bd8c:	6a3b      	ldr	r3, [r7, #32]
 800bd8e:	681b      	ldr	r3, [r3, #0]
 800bd90:	2b00      	cmp	r3, #0
 800bd92:	d008      	beq.n	800bda6 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800bd94:	6a3b      	ldr	r3, [r7, #32]
 800bd96:	681a      	ldr	r2, [r3, #0]
 800bd98:	6a3b      	ldr	r3, [r7, #32]
 800bd9a:	681b      	ldr	r3, [r3, #0]
 800bd9c:	681b      	ldr	r3, [r3, #0]
 800bd9e:	330c      	adds	r3, #12
 800bda0:	681b      	ldr	r3, [r3, #0]
 800bda2:	4610      	mov	r0, r2
 800bda4:	4798      	blx	r3
    if (*currentTrans)
 800bda6:	6a3b      	ldr	r3, [r7, #32]
 800bda8:	681b      	ldr	r3, [r3, #0]
 800bdaa:	2b00      	cmp	r3, #0
 800bdac:	d007      	beq.n	800bdbe <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800bdae:	6a3b      	ldr	r3, [r7, #32]
 800bdb0:	681a      	ldr	r2, [r3, #0]
 800bdb2:	6a3b      	ldr	r3, [r7, #32]
 800bdb4:	681b      	ldr	r3, [r3, #0]
 800bdb6:	681b      	ldr	r3, [r3, #0]
 800bdb8:	681b      	ldr	r3, [r3, #0]
 800bdba:	4610      	mov	r0, r2
 800bdbc:	4798      	blx	r3
    if (*currentScreen)
 800bdbe:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bdc0:	681b      	ldr	r3, [r3, #0]
 800bdc2:	2b00      	cmp	r3, #0
 800bdc4:	d008      	beq.n	800bdd8 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800bdc6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bdc8:	681a      	ldr	r2, [r3, #0]
 800bdca:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bdcc:	681b      	ldr	r3, [r3, #0]
 800bdce:	681b      	ldr	r3, [r3, #0]
 800bdd0:	3314      	adds	r3, #20
 800bdd2:	681b      	ldr	r3, [r3, #0]
 800bdd4:	4610      	mov	r0, r2
 800bdd6:	4798      	blx	r3
    if (*currentPresenter)
 800bdd8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bdda:	681b      	ldr	r3, [r3, #0]
 800bddc:	2b00      	cmp	r3, #0
 800bdde:	d008      	beq.n	800bdf2 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800bde0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bde2:	681a      	ldr	r2, [r3, #0]
 800bde4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bde6:	681b      	ldr	r3, [r3, #0]
 800bde8:	681b      	ldr	r3, [r3, #0]
 800bdea:	3304      	adds	r3, #4
 800bdec:	681b      	ldr	r3, [r3, #0]
 800bdee:	4610      	mov	r0, r2
 800bdf0:	4798      	blx	r3
    if (*currentScreen)
 800bdf2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bdf4:	681b      	ldr	r3, [r3, #0]
 800bdf6:	2b00      	cmp	r3, #0
 800bdf8:	d007      	beq.n	800be0a <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800bdfa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bdfc:	681a      	ldr	r2, [r3, #0]
 800bdfe:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800be00:	681b      	ldr	r3, [r3, #0]
 800be02:	681b      	ldr	r3, [r3, #0]
 800be04:	681b      	ldr	r3, [r3, #0]
 800be06:	4610      	mov	r0, r2
 800be08:	4798      	blx	r3
    if (*currentPresenter)
 800be0a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800be0c:	681b      	ldr	r3, [r3, #0]
 800be0e:	2b00      	cmp	r3, #0
 800be10:	d008      	beq.n	800be24 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800be12:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800be14:	681a      	ldr	r2, [r3, #0]
 800be16:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800be18:	681b      	ldr	r3, [r3, #0]
 800be1a:	681b      	ldr	r3, [r3, #0]
 800be1c:	3308      	adds	r3, #8
 800be1e:	681b      	ldr	r3, [r3, #0]
 800be20:	4610      	mov	r0, r2
 800be22:	4798      	blx	r3
}
 800be24:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800be26:	687b      	ldr	r3, [r7, #4]
 800be28:	68db      	ldr	r3, [r3, #12]
 800be2a:	2100      	movs	r1, #0
 800be2c:	4618      	mov	r0, r3
 800be2e:	f000 f949 	bl	800c0c4 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 800be32:	4603      	mov	r3, r0
 800be34:	4619      	mov	r1, r3
 800be36:	2040      	movs	r0, #64	; 0x40
 800be38:	f7fe fcff 	bl	800a83a <_ZnwjPv>
 800be3c:	4604      	mov	r4, r0
 800be3e:	2114      	movs	r1, #20
 800be40:	4620      	mov	r0, r4
 800be42:	f000 f953 	bl	800c0ec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
 800be46:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800be48:	687b      	ldr	r3, [r7, #4]
 800be4a:	689b      	ldr	r3, [r3, #8]
 800be4c:	2100      	movs	r1, #0
 800be4e:	4618      	mov	r0, r3
 800be50:	f000 fa3a 	bl	800c2c8 <_ZN8touchgfx17AbstractPartition2atI12COScreenViewEERT_t>
 800be54:	4603      	mov	r3, r0
 800be56:	4619      	mov	r1, r3
 800be58:	f44f 703d 	mov.w	r0, #756	; 0x2f4
 800be5c:	f7fe fced 	bl	800a83a <_ZnwjPv>
 800be60:	4604      	mov	r4, r0
 800be62:	4620      	mov	r0, r4
 800be64:	f004 f924 	bl	80100b0 <_ZN12COScreenViewC1Ev>
 800be68:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800be6a:	687b      	ldr	r3, [r7, #4]
 800be6c:	685b      	ldr	r3, [r3, #4]
 800be6e:	2100      	movs	r1, #0
 800be70:	4618      	mov	r0, r3
 800be72:	f000 fa3c 	bl	800c2ee <_ZN8touchgfx17AbstractPartition2atI17COScreenPresenterEERT_t>
 800be76:	4603      	mov	r3, r0
 800be78:	4619      	mov	r1, r3
 800be7a:	2010      	movs	r0, #16
 800be7c:	f7fe fcdd 	bl	800a83a <_ZnwjPv>
 800be80:	4604      	mov	r4, r0
 800be82:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800be84:	4620      	mov	r0, r4
 800be86:	f004 f8a3 	bl	800ffd0 <_ZN17COScreenPresenterC1ER12COScreenView>
 800be8a:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800be8c:	683b      	ldr	r3, [r7, #0]
 800be8e:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800be90:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800be92:	68bb      	ldr	r3, [r7, #8]
 800be94:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800be96:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800be98:	68fb      	ldr	r3, [r7, #12]
 800be9a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800be9c:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800be9e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bea0:	2b00      	cmp	r3, #0
 800bea2:	d002      	beq.n	800beaa <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800bea4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bea6:	3304      	adds	r3, #4
 800bea8:	e000      	b.n	800beac <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800beaa:	2300      	movs	r3, #0
 800beac:	4619      	mov	r1, r3
 800beae:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800beb0:	f7fe feb8 	bl	800ac24 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800beb4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800beb6:	3304      	adds	r3, #4
 800beb8:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800beba:	4618      	mov	r0, r3
 800bebc:	f7fe ff25 	bl	800ad0a <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800bec0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bec2:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800bec4:	4618      	mov	r0, r3
 800bec6:	f000 fa25 	bl	800c314 <_ZN8touchgfx4ViewI17COScreenPresenterE4bindERS1_>
 800beca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800becc:	61fb      	str	r3, [r7, #28]
 800bece:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bed0:	61bb      	str	r3, [r7, #24]
 800bed2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800bed4:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800bed6:	69fb      	ldr	r3, [r7, #28]
 800bed8:	681b      	ldr	r3, [r3, #0]
 800beda:	330c      	adds	r3, #12
 800bedc:	681b      	ldr	r3, [r3, #0]
 800bede:	69f8      	ldr	r0, [r7, #28]
 800bee0:	4798      	blx	r3
    newPresenter->activate();
 800bee2:	69bb      	ldr	r3, [r7, #24]
 800bee4:	681b      	ldr	r3, [r3, #0]
 800bee6:	681b      	ldr	r3, [r3, #0]
 800bee8:	69b8      	ldr	r0, [r7, #24]
 800beea:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800beec:	6979      	ldr	r1, [r7, #20]
 800beee:	69f8      	ldr	r0, [r7, #28]
 800bef0:	f00e fcea 	bl	801a8c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800bef4:	697b      	ldr	r3, [r7, #20]
 800bef6:	681b      	ldr	r3, [r3, #0]
 800bef8:	3310      	adds	r3, #16
 800befa:	681b      	ldr	r3, [r3, #0]
 800befc:	6978      	ldr	r0, [r7, #20]
 800befe:	4798      	blx	r3
    newTransition->invalidate();
 800bf00:	697b      	ldr	r3, [r7, #20]
 800bf02:	681b      	ldr	r3, [r3, #0]
 800bf04:	3314      	adds	r3, #20
 800bf06:	681b      	ldr	r3, [r3, #0]
 800bf08:	6978      	ldr	r0, [r7, #20]
 800bf0a:	4798      	blx	r3
}
 800bf0c:	bf00      	nop
    return newPresenter;
 800bf0e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800bf10:	4618      	mov	r0, r3
 800bf12:	373c      	adds	r7, #60	; 0x3c
 800bf14:	46bd      	mov	sp, r7
 800bf16:	bd90      	pop	{r4, r7, pc}
 800bf18:	0802c368 	.word	0x0802c368
 800bf1c:	0802cb24 	.word	0x0802cb24
 800bf20:	0802c504 	.word	0x0802c504
 800bf24:	0802c548 	.word	0x0802c548
 800bf28:	0802c5ec 	.word	0x0802c5ec

0800bf2c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 800bf2c:	b580      	push	{r7, lr}
 800bf2e:	b082      	sub	sp, #8
 800bf30:	af00      	add	r7, sp, #0
 800bf32:	6078      	str	r0, [r7, #4]
 800bf34:	460b      	mov	r3, r1
 800bf36:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 800bf38:	687b      	ldr	r3, [r7, #4]
 800bf3a:	681b      	ldr	r3, [r3, #0]
 800bf3c:	3324      	adds	r3, #36	; 0x24
 800bf3e:	681b      	ldr	r3, [r3, #0]
 800bf40:	887a      	ldrh	r2, [r7, #2]
 800bf42:	4611      	mov	r1, r2
 800bf44:	6878      	ldr	r0, [r7, #4]
 800bf46:	4798      	blx	r3
 800bf48:	4603      	mov	r3, r0
    }
 800bf4a:	4618      	mov	r0, r3
 800bf4c:	3708      	adds	r7, #8
 800bf4e:	46bd      	mov	sp, r7
 800bf50:	bd80      	pop	{r7, pc}

0800bf52 <_ZN8touchgfx17AbstractPartition2atI14MainScreenViewEERT_t>:
    T& at(const uint16_t index)
 800bf52:	b580      	push	{r7, lr}
 800bf54:	b082      	sub	sp, #8
 800bf56:	af00      	add	r7, sp, #0
 800bf58:	6078      	str	r0, [r7, #4]
 800bf5a:	460b      	mov	r3, r1
 800bf5c:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800bf5e:	687b      	ldr	r3, [r7, #4]
 800bf60:	681b      	ldr	r3, [r3, #0]
 800bf62:	3324      	adds	r3, #36	; 0x24
 800bf64:	681b      	ldr	r3, [r3, #0]
 800bf66:	887a      	ldrh	r2, [r7, #2]
 800bf68:	4611      	mov	r1, r2
 800bf6a:	6878      	ldr	r0, [r7, #4]
 800bf6c:	4798      	blx	r3
 800bf6e:	4603      	mov	r3, r0
    }
 800bf70:	4618      	mov	r0, r3
 800bf72:	3708      	adds	r7, #8
 800bf74:	46bd      	mov	sp, r7
 800bf76:	bd80      	pop	{r7, pc}

0800bf78 <_ZN8touchgfx17AbstractPartition2atI19MainScreenPresenterEERT_t>:
    T& at(const uint16_t index)
 800bf78:	b580      	push	{r7, lr}
 800bf7a:	b082      	sub	sp, #8
 800bf7c:	af00      	add	r7, sp, #0
 800bf7e:	6078      	str	r0, [r7, #4]
 800bf80:	460b      	mov	r3, r1
 800bf82:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800bf84:	687b      	ldr	r3, [r7, #4]
 800bf86:	681b      	ldr	r3, [r3, #0]
 800bf88:	3324      	adds	r3, #36	; 0x24
 800bf8a:	681b      	ldr	r3, [r3, #0]
 800bf8c:	887a      	ldrh	r2, [r7, #2]
 800bf8e:	4611      	mov	r1, r2
 800bf90:	6878      	ldr	r0, [r7, #4]
 800bf92:	4798      	blx	r3
 800bf94:	4603      	mov	r3, r0
    }
 800bf96:	4618      	mov	r0, r3
 800bf98:	3708      	adds	r7, #8
 800bf9a:	46bd      	mov	sp, r7
 800bf9c:	bd80      	pop	{r7, pc}

0800bf9e <_ZN8touchgfx4ViewI19MainScreenPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 800bf9e:	b480      	push	{r7}
 800bfa0:	b083      	sub	sp, #12
 800bfa2:	af00      	add	r7, sp, #0
 800bfa4:	6078      	str	r0, [r7, #4]
 800bfa6:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 800bfa8:	687b      	ldr	r3, [r7, #4]
 800bfaa:	683a      	ldr	r2, [r7, #0]
 800bfac:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800bfae:	bf00      	nop
 800bfb0:	370c      	adds	r7, #12
 800bfb2:	46bd      	mov	sp, r7
 800bfb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bfb8:	4770      	bx	lr

0800bfba <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>:
    T& at(const uint16_t index)
 800bfba:	b580      	push	{r7, lr}
 800bfbc:	b082      	sub	sp, #8
 800bfbe:	af00      	add	r7, sp, #0
 800bfc0:	6078      	str	r0, [r7, #4]
 800bfc2:	460b      	mov	r3, r1
 800bfc4:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800bfc6:	687b      	ldr	r3, [r7, #4]
 800bfc8:	681b      	ldr	r3, [r3, #0]
 800bfca:	3324      	adds	r3, #36	; 0x24
 800bfcc:	681b      	ldr	r3, [r3, #0]
 800bfce:	887a      	ldrh	r2, [r7, #2]
 800bfd0:	4611      	mov	r1, r2
 800bfd2:	6878      	ldr	r0, [r7, #4]
 800bfd4:	4798      	blx	r3
 800bfd6:	4603      	mov	r3, r0
    }
 800bfd8:	4618      	mov	r0, r3
 800bfda:	3708      	adds	r7, #8
 800bfdc:	46bd      	mov	sp, r7
 800bfde:	bd80      	pop	{r7, pc}

0800bfe0 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 * A widget that is able to make a snapshot of the area the SnapshotWidget covers into either a
 * Bitmap or into animation storage (if this available). Once the snapshot has been
 * taken using SnapshowWidget::makeSnapshot(), the SnapshotWidget will show the captured
 * snapshot when it is subsequently drawn.
 */
class SnapshotWidget : public Widget
 800bfe0:	b580      	push	{r7, lr}
 800bfe2:	b082      	sub	sp, #8
 800bfe4:	af00      	add	r7, sp, #0
 800bfe6:	6078      	str	r0, [r7, #4]
 800bfe8:	4a05      	ldr	r2, [pc, #20]	; (800c000 <_ZN8touchgfx14SnapshotWidgetD1Ev+0x20>)
 800bfea:	687b      	ldr	r3, [r7, #4]
 800bfec:	601a      	str	r2, [r3, #0]
 800bfee:	687b      	ldr	r3, [r7, #4]
 800bff0:	4618      	mov	r0, r3
 800bff2:	f7fd fdd1 	bl	8009b98 <_ZN8touchgfx6WidgetD1Ev>
 800bff6:	687b      	ldr	r3, [r7, #4]
 800bff8:	4618      	mov	r0, r3
 800bffa:	3708      	adds	r7, #8
 800bffc:	46bd      	mov	sp, r7
 800bffe:	bd80      	pop	{r7, pc}
 800c000:	0802f2fc 	.word	0x0802f2fc

0800c004 <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 800c004:	b580      	push	{r7, lr}
 800c006:	b082      	sub	sp, #8
 800c008:	af00      	add	r7, sp, #0
 800c00a:	6078      	str	r0, [r7, #4]
 800c00c:	6878      	ldr	r0, [r7, #4]
 800c00e:	f7ff ffe7 	bl	800bfe0 <_ZN8touchgfx14SnapshotWidgetD1Ev>
 800c012:	212c      	movs	r1, #44	; 0x2c
 800c014:	6878      	ldr	r0, [r7, #4]
 800c016:	f01e f8fa 	bl	802a20e <_ZdlPvj>
 800c01a:	687b      	ldr	r3, [r7, #4]
 800c01c:	4618      	mov	r0, r3
 800c01e:	3708      	adds	r7, #8
 800c020:	46bd      	mov	sp, r7
 800c022:	bd80      	pop	{r7, pc}

0800c024 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>:
    /**
     * Initializes a new instance of the SlideTransition class.
     *
     * @param  transitionSteps (Optional) Number of steps (ticks) in the transition animation, default is 20.
     */
    SlideTransition(const uint8_t transitionSteps = 20)
 800c024:	b580      	push	{r7, lr}
 800c026:	b084      	sub	sp, #16
 800c028:	af02      	add	r7, sp, #8
 800c02a:	6078      	str	r0, [r7, #4]
 800c02c:	460b      	mov	r3, r1
 800c02e:	70fb      	strb	r3, [r7, #3]
        : Transition(),
          snapshot(),
          animationSteps(transitionSteps),
          animationCounter(0),
          relativeValue(0)
 800c030:	687b      	ldr	r3, [r7, #4]
 800c032:	4618      	mov	r0, r3
 800c034:	f7fe fd06 	bl	800aa44 <_ZN8touchgfx10TransitionC1Ev>
 800c038:	4a1e      	ldr	r2, [pc, #120]	; (800c0b4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x90>)
 800c03a:	687b      	ldr	r3, [r7, #4]
 800c03c:	601a      	str	r2, [r3, #0]
          snapshot(),
 800c03e:	687b      	ldr	r3, [r7, #4]
 800c040:	330c      	adds	r3, #12
 800c042:	4618      	mov	r0, r3
 800c044:	f009 fac6 	bl	80155d4 <_ZN8touchgfx14SnapshotWidgetC1Ev>
          animationSteps(transitionSteps),
 800c048:	687b      	ldr	r3, [r7, #4]
 800c04a:	78fa      	ldrb	r2, [r7, #3]
 800c04c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
          animationCounter(0),
 800c050:	687b      	ldr	r3, [r7, #4]
 800c052:	2200      	movs	r2, #0
 800c054:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
          relativeValue(0)
 800c058:	687b      	ldr	r3, [r7, #4]
 800c05a:	2200      	movs	r2, #0
 800c05c:	879a      	strh	r2, [r3, #60]	; 0x3c
    {
        if (!HAL::USE_ANIMATION_STORAGE)
 800c05e:	4b16      	ldr	r3, [pc, #88]	; (800c0b8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x94>)
 800c060:	781b      	ldrb	r3, [r3, #0]
 800c062:	f083 0301 	eor.w	r3, r3, #1
 800c066:	b2db      	uxtb	r3, r3
 800c068:	2b00      	cmp	r3, #0
 800c06a:	d003      	beq.n	800c074 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x50>
        {
            // No animation storage, don't slide
            done = true;
 800c06c:	687b      	ldr	r3, [r7, #4]
 800c06e:	2201      	movs	r2, #1
 800c070:	721a      	strb	r2, [r3, #8]
            return;
 800c072:	e019      	b.n	800c0a8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x84>
        }

        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800c074:	687b      	ldr	r3, [r7, #4]
 800c076:	f103 000c 	add.w	r0, r3, #12
 800c07a:	4b10      	ldr	r3, [pc, #64]	; (800c0bc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x98>)
 800c07c:	881b      	ldrh	r3, [r3, #0]
 800c07e:	b21a      	sxth	r2, r3
 800c080:	4b0f      	ldr	r3, [pc, #60]	; (800c0c0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x9c>)
 800c082:	881b      	ldrh	r3, [r3, #0]
 800c084:	b21b      	sxth	r3, r3
 800c086:	9300      	str	r3, [sp, #0]
 800c088:	4613      	mov	r3, r2
 800c08a:	2200      	movs	r2, #0
 800c08c:	2100      	movs	r1, #0
 800c08e:	f7fd fbb1 	bl	80097f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        snapshot.makeSnapshot();
 800c092:	687b      	ldr	r3, [r7, #4]
 800c094:	330c      	adds	r3, #12
 800c096:	4618      	mov	r0, r3
 800c098:	f009 fa1f 	bl	80154da <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
        {
        case EAST:
            targetValue = -HAL::DISPLAY_WIDTH;
            break;
        case WEST:
            targetValue = HAL::DISPLAY_WIDTH;
 800c09c:	4b07      	ldr	r3, [pc, #28]	; (800c0bc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x98>)
 800c09e:	881b      	ldrh	r3, [r3, #0]
 800c0a0:	b21a      	sxth	r2, r3
 800c0a2:	687b      	ldr	r3, [r7, #4]
 800c0a4:	875a      	strh	r2, [r3, #58]	; 0x3a
            break;
 800c0a6:	bf00      	nop
            break;
        case SOUTH:
            targetValue = -HAL::DISPLAY_HEIGHT;
            break;
        }
    }
 800c0a8:	687b      	ldr	r3, [r7, #4]
 800c0aa:	4618      	mov	r0, r3
 800c0ac:	3708      	adds	r7, #8
 800c0ae:	46bd      	mov	sp, r7
 800c0b0:	bd80      	pop	{r7, pc}
 800c0b2:	bf00      	nop
 800c0b4:	0802deac 	.word	0x0802deac
 800c0b8:	20002327 	.word	0x20002327
 800c0bc:	2000231c 	.word	0x2000231c
 800c0c0:	2000231e 	.word	0x2000231e

0800c0c4 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>:
    T& at(const uint16_t index)
 800c0c4:	b580      	push	{r7, lr}
 800c0c6:	b082      	sub	sp, #8
 800c0c8:	af00      	add	r7, sp, #0
 800c0ca:	6078      	str	r0, [r7, #4]
 800c0cc:	460b      	mov	r3, r1
 800c0ce:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c0d0:	687b      	ldr	r3, [r7, #4]
 800c0d2:	681b      	ldr	r3, [r3, #0]
 800c0d4:	3324      	adds	r3, #36	; 0x24
 800c0d6:	681b      	ldr	r3, [r3, #0]
 800c0d8:	887a      	ldrh	r2, [r7, #2]
 800c0da:	4611      	mov	r1, r2
 800c0dc:	6878      	ldr	r0, [r7, #4]
 800c0de:	4798      	blx	r3
 800c0e0:	4603      	mov	r3, r0
    }
 800c0e2:	4618      	mov	r0, r3
 800c0e4:	3708      	adds	r7, #8
 800c0e6:	46bd      	mov	sp, r7
 800c0e8:	bd80      	pop	{r7, pc}
	...

0800c0ec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 800c0ec:	b580      	push	{r7, lr}
 800c0ee:	b084      	sub	sp, #16
 800c0f0:	af02      	add	r7, sp, #8
 800c0f2:	6078      	str	r0, [r7, #4]
 800c0f4:	460b      	mov	r3, r1
 800c0f6:	70fb      	strb	r3, [r7, #3]
          relativeValue(0)
 800c0f8:	687b      	ldr	r3, [r7, #4]
 800c0fa:	4618      	mov	r0, r3
 800c0fc:	f7fe fca2 	bl	800aa44 <_ZN8touchgfx10TransitionC1Ev>
 800c100:	4a1f      	ldr	r2, [pc, #124]	; (800c180 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x94>)
 800c102:	687b      	ldr	r3, [r7, #4]
 800c104:	601a      	str	r2, [r3, #0]
          snapshot(),
 800c106:	687b      	ldr	r3, [r7, #4]
 800c108:	330c      	adds	r3, #12
 800c10a:	4618      	mov	r0, r3
 800c10c:	f009 fa62 	bl	80155d4 <_ZN8touchgfx14SnapshotWidgetC1Ev>
          animationSteps(transitionSteps),
 800c110:	687b      	ldr	r3, [r7, #4]
 800c112:	78fa      	ldrb	r2, [r7, #3]
 800c114:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
          animationCounter(0),
 800c118:	687b      	ldr	r3, [r7, #4]
 800c11a:	2200      	movs	r2, #0
 800c11c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
          relativeValue(0)
 800c120:	687b      	ldr	r3, [r7, #4]
 800c122:	2200      	movs	r2, #0
 800c124:	879a      	strh	r2, [r3, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
 800c126:	4b17      	ldr	r3, [pc, #92]	; (800c184 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x98>)
 800c128:	781b      	ldrb	r3, [r3, #0]
 800c12a:	f083 0301 	eor.w	r3, r3, #1
 800c12e:	b2db      	uxtb	r3, r3
 800c130:	2b00      	cmp	r3, #0
 800c132:	d003      	beq.n	800c13c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x50>
            done = true;
 800c134:	687b      	ldr	r3, [r7, #4]
 800c136:	2201      	movs	r2, #1
 800c138:	721a      	strb	r2, [r3, #8]
            return;
 800c13a:	e01b      	b.n	800c174 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x88>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800c13c:	687b      	ldr	r3, [r7, #4]
 800c13e:	f103 000c 	add.w	r0, r3, #12
 800c142:	4b11      	ldr	r3, [pc, #68]	; (800c188 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x9c>)
 800c144:	881b      	ldrh	r3, [r3, #0]
 800c146:	b21a      	sxth	r2, r3
 800c148:	4b10      	ldr	r3, [pc, #64]	; (800c18c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0xa0>)
 800c14a:	881b      	ldrh	r3, [r3, #0]
 800c14c:	b21b      	sxth	r3, r3
 800c14e:	9300      	str	r3, [sp, #0]
 800c150:	4613      	mov	r3, r2
 800c152:	2200      	movs	r2, #0
 800c154:	2100      	movs	r1, #0
 800c156:	f7fd fb4d 	bl	80097f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        snapshot.makeSnapshot();
 800c15a:	687b      	ldr	r3, [r7, #4]
 800c15c:	330c      	adds	r3, #12
 800c15e:	4618      	mov	r0, r3
 800c160:	f009 f9bb 	bl	80154da <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
 800c164:	4b08      	ldr	r3, [pc, #32]	; (800c188 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x9c>)
 800c166:	881b      	ldrh	r3, [r3, #0]
 800c168:	425b      	negs	r3, r3
 800c16a:	b29b      	uxth	r3, r3
 800c16c:	b21a      	sxth	r2, r3
 800c16e:	687b      	ldr	r3, [r7, #4]
 800c170:	875a      	strh	r2, [r3, #58]	; 0x3a
            break;
 800c172:	bf00      	nop
    }
 800c174:	687b      	ldr	r3, [r7, #4]
 800c176:	4618      	mov	r0, r3
 800c178:	3708      	adds	r7, #8
 800c17a:	46bd      	mov	sp, r7
 800c17c:	bd80      	pop	{r7, pc}
 800c17e:	bf00      	nop
 800c180:	0802ded0 	.word	0x0802ded0
 800c184:	20002327 	.word	0x20002327
 800c188:	2000231c 	.word	0x2000231c
 800c18c:	2000231e 	.word	0x2000231e

0800c190 <_ZN8touchgfx17AbstractPartition2atI15ClockScreenViewEERT_t>:
    T& at(const uint16_t index)
 800c190:	b580      	push	{r7, lr}
 800c192:	b082      	sub	sp, #8
 800c194:	af00      	add	r7, sp, #0
 800c196:	6078      	str	r0, [r7, #4]
 800c198:	460b      	mov	r3, r1
 800c19a:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c19c:	687b      	ldr	r3, [r7, #4]
 800c19e:	681b      	ldr	r3, [r3, #0]
 800c1a0:	3324      	adds	r3, #36	; 0x24
 800c1a2:	681b      	ldr	r3, [r3, #0]
 800c1a4:	887a      	ldrh	r2, [r7, #2]
 800c1a6:	4611      	mov	r1, r2
 800c1a8:	6878      	ldr	r0, [r7, #4]
 800c1aa:	4798      	blx	r3
 800c1ac:	4603      	mov	r3, r0
    }
 800c1ae:	4618      	mov	r0, r3
 800c1b0:	3708      	adds	r7, #8
 800c1b2:	46bd      	mov	sp, r7
 800c1b4:	bd80      	pop	{r7, pc}

0800c1b6 <_ZN8touchgfx17AbstractPartition2atI20ClockScreenPresenterEERT_t>:
    T& at(const uint16_t index)
 800c1b6:	b580      	push	{r7, lr}
 800c1b8:	b082      	sub	sp, #8
 800c1ba:	af00      	add	r7, sp, #0
 800c1bc:	6078      	str	r0, [r7, #4]
 800c1be:	460b      	mov	r3, r1
 800c1c0:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c1c2:	687b      	ldr	r3, [r7, #4]
 800c1c4:	681b      	ldr	r3, [r3, #0]
 800c1c6:	3324      	adds	r3, #36	; 0x24
 800c1c8:	681b      	ldr	r3, [r3, #0]
 800c1ca:	887a      	ldrh	r2, [r7, #2]
 800c1cc:	4611      	mov	r1, r2
 800c1ce:	6878      	ldr	r0, [r7, #4]
 800c1d0:	4798      	blx	r3
 800c1d2:	4603      	mov	r3, r0
    }
 800c1d4:	4618      	mov	r0, r3
 800c1d6:	3708      	adds	r7, #8
 800c1d8:	46bd      	mov	sp, r7
 800c1da:	bd80      	pop	{r7, pc}

0800c1dc <_ZN8touchgfx4ViewI20ClockScreenPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 800c1dc:	b480      	push	{r7}
 800c1de:	b083      	sub	sp, #12
 800c1e0:	af00      	add	r7, sp, #0
 800c1e2:	6078      	str	r0, [r7, #4]
 800c1e4:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 800c1e6:	687b      	ldr	r3, [r7, #4]
 800c1e8:	683a      	ldr	r2, [r7, #0]
 800c1ea:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800c1ec:	bf00      	nop
 800c1ee:	370c      	adds	r7, #12
 800c1f0:	46bd      	mov	sp, r7
 800c1f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1f6:	4770      	bx	lr

0800c1f8 <_ZN8touchgfx17AbstractPartition2atI21TemperatureScreenViewEERT_t>:
    T& at(const uint16_t index)
 800c1f8:	b580      	push	{r7, lr}
 800c1fa:	b082      	sub	sp, #8
 800c1fc:	af00      	add	r7, sp, #0
 800c1fe:	6078      	str	r0, [r7, #4]
 800c200:	460b      	mov	r3, r1
 800c202:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c204:	687b      	ldr	r3, [r7, #4]
 800c206:	681b      	ldr	r3, [r3, #0]
 800c208:	3324      	adds	r3, #36	; 0x24
 800c20a:	681b      	ldr	r3, [r3, #0]
 800c20c:	887a      	ldrh	r2, [r7, #2]
 800c20e:	4611      	mov	r1, r2
 800c210:	6878      	ldr	r0, [r7, #4]
 800c212:	4798      	blx	r3
 800c214:	4603      	mov	r3, r0
    }
 800c216:	4618      	mov	r0, r3
 800c218:	3708      	adds	r7, #8
 800c21a:	46bd      	mov	sp, r7
 800c21c:	bd80      	pop	{r7, pc}

0800c21e <_ZN8touchgfx17AbstractPartition2atI26TemperatureScreenPresenterEERT_t>:
    T& at(const uint16_t index)
 800c21e:	b580      	push	{r7, lr}
 800c220:	b082      	sub	sp, #8
 800c222:	af00      	add	r7, sp, #0
 800c224:	6078      	str	r0, [r7, #4]
 800c226:	460b      	mov	r3, r1
 800c228:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c22a:	687b      	ldr	r3, [r7, #4]
 800c22c:	681b      	ldr	r3, [r3, #0]
 800c22e:	3324      	adds	r3, #36	; 0x24
 800c230:	681b      	ldr	r3, [r3, #0]
 800c232:	887a      	ldrh	r2, [r7, #2]
 800c234:	4611      	mov	r1, r2
 800c236:	6878      	ldr	r0, [r7, #4]
 800c238:	4798      	blx	r3
 800c23a:	4603      	mov	r3, r0
    }
 800c23c:	4618      	mov	r0, r3
 800c23e:	3708      	adds	r7, #8
 800c240:	46bd      	mov	sp, r7
 800c242:	bd80      	pop	{r7, pc}

0800c244 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 800c244:	b480      	push	{r7}
 800c246:	b083      	sub	sp, #12
 800c248:	af00      	add	r7, sp, #0
 800c24a:	6078      	str	r0, [r7, #4]
 800c24c:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 800c24e:	687b      	ldr	r3, [r7, #4]
 800c250:	683a      	ldr	r2, [r7, #0]
 800c252:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800c254:	bf00      	nop
 800c256:	370c      	adds	r7, #12
 800c258:	46bd      	mov	sp, r7
 800c25a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c25e:	4770      	bx	lr

0800c260 <_ZN8touchgfx17AbstractPartition2atI18PressureScreenViewEERT_t>:
    T& at(const uint16_t index)
 800c260:	b580      	push	{r7, lr}
 800c262:	b082      	sub	sp, #8
 800c264:	af00      	add	r7, sp, #0
 800c266:	6078      	str	r0, [r7, #4]
 800c268:	460b      	mov	r3, r1
 800c26a:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c26c:	687b      	ldr	r3, [r7, #4]
 800c26e:	681b      	ldr	r3, [r3, #0]
 800c270:	3324      	adds	r3, #36	; 0x24
 800c272:	681b      	ldr	r3, [r3, #0]
 800c274:	887a      	ldrh	r2, [r7, #2]
 800c276:	4611      	mov	r1, r2
 800c278:	6878      	ldr	r0, [r7, #4]
 800c27a:	4798      	blx	r3
 800c27c:	4603      	mov	r3, r0
    }
 800c27e:	4618      	mov	r0, r3
 800c280:	3708      	adds	r7, #8
 800c282:	46bd      	mov	sp, r7
 800c284:	bd80      	pop	{r7, pc}

0800c286 <_ZN8touchgfx17AbstractPartition2atI23PressureScreenPresenterEERT_t>:
    T& at(const uint16_t index)
 800c286:	b580      	push	{r7, lr}
 800c288:	b082      	sub	sp, #8
 800c28a:	af00      	add	r7, sp, #0
 800c28c:	6078      	str	r0, [r7, #4]
 800c28e:	460b      	mov	r3, r1
 800c290:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c292:	687b      	ldr	r3, [r7, #4]
 800c294:	681b      	ldr	r3, [r3, #0]
 800c296:	3324      	adds	r3, #36	; 0x24
 800c298:	681b      	ldr	r3, [r3, #0]
 800c29a:	887a      	ldrh	r2, [r7, #2]
 800c29c:	4611      	mov	r1, r2
 800c29e:	6878      	ldr	r0, [r7, #4]
 800c2a0:	4798      	blx	r3
 800c2a2:	4603      	mov	r3, r0
    }
 800c2a4:	4618      	mov	r0, r3
 800c2a6:	3708      	adds	r7, #8
 800c2a8:	46bd      	mov	sp, r7
 800c2aa:	bd80      	pop	{r7, pc}

0800c2ac <_ZN8touchgfx4ViewI23PressureScreenPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 800c2ac:	b480      	push	{r7}
 800c2ae:	b083      	sub	sp, #12
 800c2b0:	af00      	add	r7, sp, #0
 800c2b2:	6078      	str	r0, [r7, #4]
 800c2b4:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 800c2b6:	687b      	ldr	r3, [r7, #4]
 800c2b8:	683a      	ldr	r2, [r7, #0]
 800c2ba:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800c2bc:	bf00      	nop
 800c2be:	370c      	adds	r7, #12
 800c2c0:	46bd      	mov	sp, r7
 800c2c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2c6:	4770      	bx	lr

0800c2c8 <_ZN8touchgfx17AbstractPartition2atI12COScreenViewEERT_t>:
    T& at(const uint16_t index)
 800c2c8:	b580      	push	{r7, lr}
 800c2ca:	b082      	sub	sp, #8
 800c2cc:	af00      	add	r7, sp, #0
 800c2ce:	6078      	str	r0, [r7, #4]
 800c2d0:	460b      	mov	r3, r1
 800c2d2:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c2d4:	687b      	ldr	r3, [r7, #4]
 800c2d6:	681b      	ldr	r3, [r3, #0]
 800c2d8:	3324      	adds	r3, #36	; 0x24
 800c2da:	681b      	ldr	r3, [r3, #0]
 800c2dc:	887a      	ldrh	r2, [r7, #2]
 800c2de:	4611      	mov	r1, r2
 800c2e0:	6878      	ldr	r0, [r7, #4]
 800c2e2:	4798      	blx	r3
 800c2e4:	4603      	mov	r3, r0
    }
 800c2e6:	4618      	mov	r0, r3
 800c2e8:	3708      	adds	r7, #8
 800c2ea:	46bd      	mov	sp, r7
 800c2ec:	bd80      	pop	{r7, pc}

0800c2ee <_ZN8touchgfx17AbstractPartition2atI17COScreenPresenterEERT_t>:
    T& at(const uint16_t index)
 800c2ee:	b580      	push	{r7, lr}
 800c2f0:	b082      	sub	sp, #8
 800c2f2:	af00      	add	r7, sp, #0
 800c2f4:	6078      	str	r0, [r7, #4]
 800c2f6:	460b      	mov	r3, r1
 800c2f8:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c2fa:	687b      	ldr	r3, [r7, #4]
 800c2fc:	681b      	ldr	r3, [r3, #0]
 800c2fe:	3324      	adds	r3, #36	; 0x24
 800c300:	681b      	ldr	r3, [r3, #0]
 800c302:	887a      	ldrh	r2, [r7, #2]
 800c304:	4611      	mov	r1, r2
 800c306:	6878      	ldr	r0, [r7, #4]
 800c308:	4798      	blx	r3
 800c30a:	4603      	mov	r3, r0
    }
 800c30c:	4618      	mov	r0, r3
 800c30e:	3708      	adds	r7, #8
 800c310:	46bd      	mov	sp, r7
 800c312:	bd80      	pop	{r7, pc}

0800c314 <_ZN8touchgfx4ViewI17COScreenPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 800c314:	b480      	push	{r7}
 800c316:	b083      	sub	sp, #12
 800c318:	af00      	add	r7, sp, #0
 800c31a:	6078      	str	r0, [r7, #4]
 800c31c:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 800c31e:	687b      	ldr	r3, [r7, #4]
 800c320:	683a      	ldr	r2, [r7, #0]
 800c322:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800c324:	bf00      	nop
 800c326:	370c      	adds	r7, #12
 800c328:	46bd      	mov	sp, r7
 800c32a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c32e:	4770      	bx	lr

0800c330 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>:
class SlideTransition : public Transition
 800c330:	b580      	push	{r7, lr}
 800c332:	b082      	sub	sp, #8
 800c334:	af00      	add	r7, sp, #0
 800c336:	6078      	str	r0, [r7, #4]
 800c338:	4a08      	ldr	r2, [pc, #32]	; (800c35c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev+0x2c>)
 800c33a:	687b      	ldr	r3, [r7, #4]
 800c33c:	601a      	str	r2, [r3, #0]
 800c33e:	687b      	ldr	r3, [r7, #4]
 800c340:	330c      	adds	r3, #12
 800c342:	4618      	mov	r0, r3
 800c344:	f7ff fe4c 	bl	800bfe0 <_ZN8touchgfx14SnapshotWidgetD1Ev>
 800c348:	687b      	ldr	r3, [r7, #4]
 800c34a:	4618      	mov	r0, r3
 800c34c:	f7fe fb90 	bl	800aa70 <_ZN8touchgfx10TransitionD1Ev>
 800c350:	687b      	ldr	r3, [r7, #4]
 800c352:	4618      	mov	r0, r3
 800c354:	3708      	adds	r7, #8
 800c356:	46bd      	mov	sp, r7
 800c358:	bd80      	pop	{r7, pc}
 800c35a:	bf00      	nop
 800c35c:	0802deac 	.word	0x0802deac

0800c360 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED0Ev>:
 800c360:	b580      	push	{r7, lr}
 800c362:	b082      	sub	sp, #8
 800c364:	af00      	add	r7, sp, #0
 800c366:	6078      	str	r0, [r7, #4]
 800c368:	6878      	ldr	r0, [r7, #4]
 800c36a:	f7ff ffe1 	bl	800c330 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>
 800c36e:	2140      	movs	r1, #64	; 0x40
 800c370:	6878      	ldr	r0, [r7, #4]
 800c372:	f01d ff4c 	bl	802a20e <_ZdlPvj>
 800c376:	687b      	ldr	r3, [r7, #4]
 800c378:	4618      	mov	r0, r3
 800c37a:	3708      	adds	r7, #8
 800c37c:	46bd      	mov	sp, r7
 800c37e:	bd80      	pop	{r7, pc}

0800c380 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 800c380:	b580      	push	{r7, lr}
 800c382:	b082      	sub	sp, #8
 800c384:	af00      	add	r7, sp, #0
 800c386:	6078      	str	r0, [r7, #4]
 800c388:	4a08      	ldr	r2, [pc, #32]	; (800c3ac <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev+0x2c>)
 800c38a:	687b      	ldr	r3, [r7, #4]
 800c38c:	601a      	str	r2, [r3, #0]
 800c38e:	687b      	ldr	r3, [r7, #4]
 800c390:	330c      	adds	r3, #12
 800c392:	4618      	mov	r0, r3
 800c394:	f7ff fe24 	bl	800bfe0 <_ZN8touchgfx14SnapshotWidgetD1Ev>
 800c398:	687b      	ldr	r3, [r7, #4]
 800c39a:	4618      	mov	r0, r3
 800c39c:	f7fe fb68 	bl	800aa70 <_ZN8touchgfx10TransitionD1Ev>
 800c3a0:	687b      	ldr	r3, [r7, #4]
 800c3a2:	4618      	mov	r0, r3
 800c3a4:	3708      	adds	r7, #8
 800c3a6:	46bd      	mov	sp, r7
 800c3a8:	bd80      	pop	{r7, pc}
 800c3aa:	bf00      	nop
 800c3ac:	0802ded0 	.word	0x0802ded0

0800c3b0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
 800c3b0:	b580      	push	{r7, lr}
 800c3b2:	b082      	sub	sp, #8
 800c3b4:	af00      	add	r7, sp, #0
 800c3b6:	6078      	str	r0, [r7, #4]
 800c3b8:	6878      	ldr	r0, [r7, #4]
 800c3ba:	f7ff ffe1 	bl	800c380 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>
 800c3be:	2140      	movs	r1, #64	; 0x40
 800c3c0:	6878      	ldr	r0, [r7, #4]
 800c3c2:	f01d ff24 	bl	802a20e <_ZdlPvj>
 800c3c6:	687b      	ldr	r3, [r7, #4]
 800c3c8:	4618      	mov	r0, r3
 800c3ca:	3708      	adds	r7, #8
 800c3cc:	46bd      	mov	sp, r7
 800c3ce:	bd80      	pop	{r7, pc}

0800c3d0 <_ZN8touchgfx12NoTransitionD1Ev>:
 800c3d0:	b580      	push	{r7, lr}
 800c3d2:	b082      	sub	sp, #8
 800c3d4:	af00      	add	r7, sp, #0
 800c3d6:	6078      	str	r0, [r7, #4]
 800c3d8:	4a05      	ldr	r2, [pc, #20]	; (800c3f0 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800c3da:	687b      	ldr	r3, [r7, #4]
 800c3dc:	601a      	str	r2, [r3, #0]
 800c3de:	687b      	ldr	r3, [r7, #4]
 800c3e0:	4618      	mov	r0, r3
 800c3e2:	f7fe fb45 	bl	800aa70 <_ZN8touchgfx10TransitionD1Ev>
 800c3e6:	687b      	ldr	r3, [r7, #4]
 800c3e8:	4618      	mov	r0, r3
 800c3ea:	3708      	adds	r7, #8
 800c3ec:	46bd      	mov	sp, r7
 800c3ee:	bd80      	pop	{r7, pc}
 800c3f0:	0802def4 	.word	0x0802def4

0800c3f4 <_ZN8touchgfx12NoTransitionD0Ev>:
 800c3f4:	b580      	push	{r7, lr}
 800c3f6:	b082      	sub	sp, #8
 800c3f8:	af00      	add	r7, sp, #0
 800c3fa:	6078      	str	r0, [r7, #4]
 800c3fc:	6878      	ldr	r0, [r7, #4]
 800c3fe:	f7ff ffe7 	bl	800c3d0 <_ZN8touchgfx12NoTransitionD1Ev>
 800c402:	210c      	movs	r1, #12
 800c404:	6878      	ldr	r0, [r7, #4]
 800c406:	f01d ff02 	bl	802a20e <_ZdlPvj>
 800c40a:	687b      	ldr	r3, [r7, #4]
 800c40c:	4618      	mov	r0, r3
 800c40e:	3708      	adds	r7, #8
 800c410:	46bd      	mov	sp, r7
 800c412:	bd80      	pop	{r7, pc}

0800c414 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800c414:	b580      	push	{r7, lr}
 800c416:	b082      	sub	sp, #8
 800c418:	af00      	add	r7, sp, #0
 800c41a:	6078      	str	r0, [r7, #4]
 800c41c:	4a05      	ldr	r2, [pc, #20]	; (800c434 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800c41e:	687b      	ldr	r3, [r7, #4]
 800c420:	601a      	str	r2, [r3, #0]
 800c422:	687b      	ldr	r3, [r7, #4]
 800c424:	4618      	mov	r0, r3
 800c426:	f7fe fac5 	bl	800a9b4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800c42a:	687b      	ldr	r3, [r7, #4]
 800c42c:	4618      	mov	r0, r3
 800c42e:	3708      	adds	r7, #8
 800c430:	46bd      	mov	sp, r7
 800c432:	bd80      	pop	{r7, pc}
 800c434:	0802df6c 	.word	0x0802df6c

0800c438 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 800c438:	b580      	push	{r7, lr}
 800c43a:	b082      	sub	sp, #8
 800c43c:	af00      	add	r7, sp, #0
 800c43e:	6078      	str	r0, [r7, #4]
 800c440:	6878      	ldr	r0, [r7, #4]
 800c442:	f7ff ffe7 	bl	800c414 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800c446:	2110      	movs	r1, #16
 800c448:	6878      	ldr	r0, [r7, #4]
 800c44a:	f01d fee0 	bl	802a20e <_ZdlPvj>
 800c44e:	687b      	ldr	r3, [r7, #4]
 800c450:	4618      	mov	r0, r3
 800c452:	3708      	adds	r7, #8
 800c454:	46bd      	mov	sp, r7
 800c456:	bd80      	pop	{r7, pc}

0800c458 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv>:
     * Handles the tick event when transitioning. It moves the contents of the Screen's
     * container and a SnapshotWidget with a snapshot of the previous Screen. The direction
     * of the transition determines the direction the contents of the container and the
     * SnapshotWidget moves.
     */
    virtual void handleTickEvent()
 800c458:	b5b0      	push	{r4, r5, r7, lr}
 800c45a:	b084      	sub	sp, #16
 800c45c:	af00      	add	r7, sp, #0
 800c45e:	6078      	str	r0, [r7, #4]
    {
        Transition::handleTickEvent();
 800c460:	687b      	ldr	r3, [r7, #4]
 800c462:	4618      	mov	r0, r3
 800c464:	f7fe fb24 	bl	800aab0 <_ZN8touchgfx10Transition15handleTickEventEv>

        // Calculate new position or stop animation
        animationCounter++;
 800c468:	687b      	ldr	r3, [r7, #4]
 800c46a:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800c46e:	3301      	adds	r3, #1
 800c470:	b2da      	uxtb	r2, r3
 800c472:	687b      	ldr	r3, [r7, #4]
 800c474:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
        if (animationCounter > animationSteps)
 800c478:	687b      	ldr	r3, [r7, #4]
 800c47a:	f893 2039 	ldrb.w	r2, [r3, #57]	; 0x39
 800c47e:	687b      	ldr	r3, [r7, #4]
 800c480:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800c484:	429a      	cmp	r2, r3
 800c486:	d907      	bls.n	800c498 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x40>
        {
            // Final step: stop the animation
            done = true;
 800c488:	687b      	ldr	r3, [r7, #4]
 800c48a:	2201      	movs	r2, #1
 800c48c:	721a      	strb	r2, [r3, #8]
            animationCounter = 0;
 800c48e:	687b      	ldr	r3, [r7, #4]
 800c490:	2200      	movs	r2, #0
 800c492:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
            return;
 800c496:	e060      	b.n	800c55a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x102>
        }

        // Calculate value in [0;targetValue]
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800c498:	687b      	ldr	r3, [r7, #4]
 800c49a:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800c49e:	b298      	uxth	r0, r3
 800c4a0:	687b      	ldr	r3, [r7, #4]
 800c4a2:	f9b3 203a 	ldrsh.w	r2, [r3, #58]	; 0x3a
 800c4a6:	687b      	ldr	r3, [r7, #4]
 800c4a8:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800c4ac:	b29b      	uxth	r3, r3
 800c4ae:	2100      	movs	r1, #0
 800c4b0:	f00e fa10 	bl	801a8d4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 800c4b4:	4603      	mov	r3, r0
 800c4b6:	81fb      	strh	r3, [r7, #14]

        // Note: Result of "calculatedValue & 1" is compiler dependent for negative values of calculatedValue
        if ((calculatedValue % 2) != 0)
 800c4b8:	89fb      	ldrh	r3, [r7, #14]
 800c4ba:	f003 0301 	and.w	r3, r3, #1
 800c4be:	b29b      	uxth	r3, r3
 800c4c0:	2b00      	cmp	r3, #0
 800c4c2:	d00b      	beq.n	800c4dc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x84>
        {
            // Optimization: calculatedValue is odd, add 1/-1 to move drawables modulo 32 bits in framebuffer
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800c4c4:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800c4c8:	2b00      	cmp	r3, #0
 800c4ca:	dd01      	ble.n	800c4d0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x78>
 800c4cc:	2201      	movs	r2, #1
 800c4ce:	e001      	b.n	800c4d4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x7c>
 800c4d0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c4d4:	89fb      	ldrh	r3, [r7, #14]
 800c4d6:	4413      	add	r3, r2
 800c4d8:	b29b      	uxth	r3, r3
 800c4da:	81fb      	strh	r3, [r7, #14]
        // Move snapshot
        switch (templateDirection)
        {
        case EAST:
        case WEST:
            relativeValue = calculatedValue - snapshot.getX();
 800c4dc:	89fc      	ldrh	r4, [r7, #14]
 800c4de:	687b      	ldr	r3, [r7, #4]
 800c4e0:	330c      	adds	r3, #12
 800c4e2:	4618      	mov	r0, r3
 800c4e4:	f7fe f9c1 	bl	800a86a <_ZNK8touchgfx8Drawable4getXEv>
 800c4e8:	4603      	mov	r3, r0
 800c4ea:	b29b      	uxth	r3, r3
 800c4ec:	1ae3      	subs	r3, r4, r3
 800c4ee:	b29b      	uxth	r3, r3
 800c4f0:	b21a      	sxth	r2, r3
 800c4f2:	687b      	ldr	r3, [r7, #4]
 800c4f4:	879a      	strh	r2, [r3, #60]	; 0x3c
            break;
 800c4f6:	bf00      	nop
            relativeValue = calculatedValue - snapshot.getY();
            break;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 800c4f8:	687b      	ldr	r3, [r7, #4]
 800c4fa:	685a      	ldr	r2, [r3, #4]
 800c4fc:	687b      	ldr	r3, [r7, #4]
 800c4fe:	685b      	ldr	r3, [r3, #4]
 800c500:	681b      	ldr	r3, [r3, #0]
 800c502:	331c      	adds	r3, #28
 800c504:	681b      	ldr	r3, [r3, #0]
 800c506:	4610      	mov	r0, r2
 800c508:	4798      	blx	r3
 800c50a:	60b8      	str	r0, [r7, #8]
        while (d)
 800c50c:	e018      	b.n	800c540 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0xe8>
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() + relativeValue);
 800c50e:	68bd      	ldr	r5, [r7, #8]
 800c510:	68bb      	ldr	r3, [r7, #8]
 800c512:	681b      	ldr	r3, [r3, #0]
 800c514:	3330      	adds	r3, #48	; 0x30
 800c516:	681c      	ldr	r4, [r3, #0]
 800c518:	68b8      	ldr	r0, [r7, #8]
 800c51a:	f7fe f9a6 	bl	800a86a <_ZNK8touchgfx8Drawable4getXEv>
 800c51e:	4603      	mov	r3, r0
 800c520:	b29a      	uxth	r2, r3
 800c522:	687b      	ldr	r3, [r7, #4]
 800c524:	f9b3 303c 	ldrsh.w	r3, [r3, #60]	; 0x3c
 800c528:	b29b      	uxth	r3, r3
 800c52a:	4413      	add	r3, r2
 800c52c:	b29b      	uxth	r3, r3
 800c52e:	b21b      	sxth	r3, r3
 800c530:	4619      	mov	r1, r3
 800c532:	4628      	mov	r0, r5
 800c534:	47a0      	blx	r4
                break;
 800c536:	bf00      	nop
            case NORTH:
            case SOUTH:
                d->setY(d->getY() + relativeValue);
                break;
            }
            d = d->getNextSibling();
 800c538:	68b8      	ldr	r0, [r7, #8]
 800c53a:	f7fe f98a 	bl	800a852 <_ZN8touchgfx8Drawable14getNextSiblingEv>
 800c53e:	60b8      	str	r0, [r7, #8]
        while (d)
 800c540:	68bb      	ldr	r3, [r7, #8]
 800c542:	2b00      	cmp	r3, #0
 800c544:	d1e3      	bne.n	800c50e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0xb6>
        }

        // Entire screen has changed, redraw
        screenContainer->invalidate();
 800c546:	687b      	ldr	r3, [r7, #4]
 800c548:	685b      	ldr	r3, [r3, #4]
 800c54a:	461a      	mov	r2, r3
 800c54c:	687b      	ldr	r3, [r7, #4]
 800c54e:	685b      	ldr	r3, [r3, #4]
 800c550:	681b      	ldr	r3, [r3, #0]
 800c552:	3314      	adds	r3, #20
 800c554:	681b      	ldr	r3, [r3, #0]
 800c556:	4610      	mov	r0, r2
 800c558:	4798      	blx	r3
    }
 800c55a:	3710      	adds	r7, #16
 800c55c:	46bd      	mov	sp, r7
 800c55e:	bdb0      	pop	{r4, r5, r7, pc}

0800c560 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv>:

    virtual void tearDown()
 800c560:	b580      	push	{r7, lr}
 800c562:	b082      	sub	sp, #8
 800c564:	af00      	add	r7, sp, #0
 800c566:	6078      	str	r0, [r7, #4]
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 800c568:	4b0b      	ldr	r3, [pc, #44]	; (800c598 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x38>)
 800c56a:	781b      	ldrb	r3, [r3, #0]
 800c56c:	2b00      	cmp	r3, #0
 800c56e:	d00e      	beq.n	800c58e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x2e>
 800c570:	687b      	ldr	r3, [r7, #4]
 800c572:	685b      	ldr	r3, [r3, #4]
 800c574:	2b00      	cmp	r3, #0
 800c576:	d00a      	beq.n	800c58e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x2e>
        {
            screenContainer->remove(snapshot);
 800c578:	687b      	ldr	r3, [r7, #4]
 800c57a:	6858      	ldr	r0, [r3, #4]
 800c57c:	687b      	ldr	r3, [r7, #4]
 800c57e:	685b      	ldr	r3, [r3, #4]
 800c580:	681b      	ldr	r3, [r3, #0]
 800c582:	3364      	adds	r3, #100	; 0x64
 800c584:	681b      	ldr	r3, [r3, #0]
 800c586:	687a      	ldr	r2, [r7, #4]
 800c588:	320c      	adds	r2, #12
 800c58a:	4611      	mov	r1, r2
 800c58c:	4798      	blx	r3
        }
    }
 800c58e:	bf00      	nop
 800c590:	3708      	adds	r7, #8
 800c592:	46bd      	mov	sp, r7
 800c594:	bd80      	pop	{r7, pc}
 800c596:	bf00      	nop
 800c598:	20002327 	.word	0x20002327

0800c59c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv>:

    virtual void init()
 800c59c:	b5b0      	push	{r4, r5, r7, lr}
 800c59e:	b084      	sub	sp, #16
 800c5a0:	af00      	add	r7, sp, #0
 800c5a2:	6078      	str	r0, [r7, #4]
    {
        Transition::init();
 800c5a4:	687b      	ldr	r3, [r7, #4]
 800c5a6:	4618      	mov	r0, r3
 800c5a8:	f7fe fa96 	bl	800aad8 <_ZN8touchgfx10Transition4initEv>

        if (done)
 800c5ac:	687b      	ldr	r3, [r7, #4]
 800c5ae:	7a1b      	ldrb	r3, [r3, #8]
 800c5b0:	2b00      	cmp	r3, #0
 800c5b2:	d132      	bne.n	800c61a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x7e>
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 800c5b4:	687b      	ldr	r3, [r7, #4]
 800c5b6:	685a      	ldr	r2, [r3, #4]
 800c5b8:	687b      	ldr	r3, [r7, #4]
 800c5ba:	685b      	ldr	r3, [r3, #4]
 800c5bc:	681b      	ldr	r3, [r3, #0]
 800c5be:	331c      	adds	r3, #28
 800c5c0:	681b      	ldr	r3, [r3, #0]
 800c5c2:	4610      	mov	r0, r2
 800c5c4:	4798      	blx	r3
 800c5c6:	60f8      	str	r0, [r7, #12]
        while (d)
 800c5c8:	e018      	b.n	800c5fc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x60>
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
 800c5ca:	68fd      	ldr	r5, [r7, #12]
 800c5cc:	68fb      	ldr	r3, [r7, #12]
 800c5ce:	681b      	ldr	r3, [r3, #0]
 800c5d0:	3330      	adds	r3, #48	; 0x30
 800c5d2:	681c      	ldr	r4, [r3, #0]
 800c5d4:	68f8      	ldr	r0, [r7, #12]
 800c5d6:	f7fe f948 	bl	800a86a <_ZNK8touchgfx8Drawable4getXEv>
 800c5da:	4603      	mov	r3, r0
 800c5dc:	b29a      	uxth	r2, r3
 800c5de:	687b      	ldr	r3, [r7, #4]
 800c5e0:	f9b3 303a 	ldrsh.w	r3, [r3, #58]	; 0x3a
 800c5e4:	b29b      	uxth	r3, r3
 800c5e6:	1ad3      	subs	r3, r2, r3
 800c5e8:	b29b      	uxth	r3, r3
 800c5ea:	b21b      	sxth	r3, r3
 800c5ec:	4619      	mov	r1, r3
 800c5ee:	4628      	mov	r0, r5
 800c5f0:	47a0      	blx	r4
                break;
 800c5f2:	bf00      	nop
            case SOUTH:
                d->setY(d->getY() - targetValue);
                break;
            }

            d = d->getNextSibling();
 800c5f4:	68f8      	ldr	r0, [r7, #12]
 800c5f6:	f7fe f92c 	bl	800a852 <_ZN8touchgfx8Drawable14getNextSiblingEv>
 800c5fa:	60f8      	str	r0, [r7, #12]
        while (d)
 800c5fc:	68fb      	ldr	r3, [r7, #12]
 800c5fe:	2b00      	cmp	r3, #0
 800c600:	d1e3      	bne.n	800c5ca <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x2e>
        }

        screenContainer->add(snapshot);
 800c602:	687b      	ldr	r3, [r7, #4]
 800c604:	6858      	ldr	r0, [r3, #4]
 800c606:	687b      	ldr	r3, [r7, #4]
 800c608:	685b      	ldr	r3, [r3, #4]
 800c60a:	681b      	ldr	r3, [r3, #0]
 800c60c:	3360      	adds	r3, #96	; 0x60
 800c60e:	681b      	ldr	r3, [r3, #0]
 800c610:	687a      	ldr	r2, [r7, #4]
 800c612:	320c      	adds	r2, #12
 800c614:	4611      	mov	r1, r2
 800c616:	4798      	blx	r3
 800c618:	e000      	b.n	800c61c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x80>
            return;
 800c61a:	bf00      	nop
    }
 800c61c:	3710      	adds	r7, #16
 800c61e:	46bd      	mov	sp, r7
 800c620:	bdb0      	pop	{r4, r5, r7, pc}

0800c622 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 800c622:	b5b0      	push	{r4, r5, r7, lr}
 800c624:	b084      	sub	sp, #16
 800c626:	af00      	add	r7, sp, #0
 800c628:	6078      	str	r0, [r7, #4]
        Transition::handleTickEvent();
 800c62a:	687b      	ldr	r3, [r7, #4]
 800c62c:	4618      	mov	r0, r3
 800c62e:	f7fe fa3f 	bl	800aab0 <_ZN8touchgfx10Transition15handleTickEventEv>
        animationCounter++;
 800c632:	687b      	ldr	r3, [r7, #4]
 800c634:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800c638:	3301      	adds	r3, #1
 800c63a:	b2da      	uxtb	r2, r3
 800c63c:	687b      	ldr	r3, [r7, #4]
 800c63e:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
        if (animationCounter > animationSteps)
 800c642:	687b      	ldr	r3, [r7, #4]
 800c644:	f893 2039 	ldrb.w	r2, [r3, #57]	; 0x39
 800c648:	687b      	ldr	r3, [r7, #4]
 800c64a:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800c64e:	429a      	cmp	r2, r3
 800c650:	d907      	bls.n	800c662 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x40>
            done = true;
 800c652:	687b      	ldr	r3, [r7, #4]
 800c654:	2201      	movs	r2, #1
 800c656:	721a      	strb	r2, [r3, #8]
            animationCounter = 0;
 800c658:	687b      	ldr	r3, [r7, #4]
 800c65a:	2200      	movs	r2, #0
 800c65c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
            return;
 800c660:	e060      	b.n	800c724 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x102>
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800c662:	687b      	ldr	r3, [r7, #4]
 800c664:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800c668:	b298      	uxth	r0, r3
 800c66a:	687b      	ldr	r3, [r7, #4]
 800c66c:	f9b3 203a 	ldrsh.w	r2, [r3, #58]	; 0x3a
 800c670:	687b      	ldr	r3, [r7, #4]
 800c672:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800c676:	b29b      	uxth	r3, r3
 800c678:	2100      	movs	r1, #0
 800c67a:	f00e f92b 	bl	801a8d4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 800c67e:	4603      	mov	r3, r0
 800c680:	81fb      	strh	r3, [r7, #14]
        if ((calculatedValue % 2) != 0)
 800c682:	89fb      	ldrh	r3, [r7, #14]
 800c684:	f003 0301 	and.w	r3, r3, #1
 800c688:	b29b      	uxth	r3, r3
 800c68a:	2b00      	cmp	r3, #0
 800c68c:	d00b      	beq.n	800c6a6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x84>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800c68e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800c692:	2b00      	cmp	r3, #0
 800c694:	dd01      	ble.n	800c69a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x78>
 800c696:	2201      	movs	r2, #1
 800c698:	e001      	b.n	800c69e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x7c>
 800c69a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c69e:	89fb      	ldrh	r3, [r7, #14]
 800c6a0:	4413      	add	r3, r2
 800c6a2:	b29b      	uxth	r3, r3
 800c6a4:	81fb      	strh	r3, [r7, #14]
            relativeValue = calculatedValue - snapshot.getX();
 800c6a6:	89fc      	ldrh	r4, [r7, #14]
 800c6a8:	687b      	ldr	r3, [r7, #4]
 800c6aa:	330c      	adds	r3, #12
 800c6ac:	4618      	mov	r0, r3
 800c6ae:	f7fe f8dc 	bl	800a86a <_ZNK8touchgfx8Drawable4getXEv>
 800c6b2:	4603      	mov	r3, r0
 800c6b4:	b29b      	uxth	r3, r3
 800c6b6:	1ae3      	subs	r3, r4, r3
 800c6b8:	b29b      	uxth	r3, r3
 800c6ba:	b21a      	sxth	r2, r3
 800c6bc:	687b      	ldr	r3, [r7, #4]
 800c6be:	879a      	strh	r2, [r3, #60]	; 0x3c
            break;
 800c6c0:	bf00      	nop
        Drawable* d = screenContainer->getFirstChild();
 800c6c2:	687b      	ldr	r3, [r7, #4]
 800c6c4:	685a      	ldr	r2, [r3, #4]
 800c6c6:	687b      	ldr	r3, [r7, #4]
 800c6c8:	685b      	ldr	r3, [r3, #4]
 800c6ca:	681b      	ldr	r3, [r3, #0]
 800c6cc:	331c      	adds	r3, #28
 800c6ce:	681b      	ldr	r3, [r3, #0]
 800c6d0:	4610      	mov	r0, r2
 800c6d2:	4798      	blx	r3
 800c6d4:	60b8      	str	r0, [r7, #8]
        while (d)
 800c6d6:	e018      	b.n	800c70a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0xe8>
                d->setX(d->getX() + relativeValue);
 800c6d8:	68bd      	ldr	r5, [r7, #8]
 800c6da:	68bb      	ldr	r3, [r7, #8]
 800c6dc:	681b      	ldr	r3, [r3, #0]
 800c6de:	3330      	adds	r3, #48	; 0x30
 800c6e0:	681c      	ldr	r4, [r3, #0]
 800c6e2:	68b8      	ldr	r0, [r7, #8]
 800c6e4:	f7fe f8c1 	bl	800a86a <_ZNK8touchgfx8Drawable4getXEv>
 800c6e8:	4603      	mov	r3, r0
 800c6ea:	b29a      	uxth	r2, r3
 800c6ec:	687b      	ldr	r3, [r7, #4]
 800c6ee:	f9b3 303c 	ldrsh.w	r3, [r3, #60]	; 0x3c
 800c6f2:	b29b      	uxth	r3, r3
 800c6f4:	4413      	add	r3, r2
 800c6f6:	b29b      	uxth	r3, r3
 800c6f8:	b21b      	sxth	r3, r3
 800c6fa:	4619      	mov	r1, r3
 800c6fc:	4628      	mov	r0, r5
 800c6fe:	47a0      	blx	r4
                break;
 800c700:	bf00      	nop
            d = d->getNextSibling();
 800c702:	68b8      	ldr	r0, [r7, #8]
 800c704:	f7fe f8a5 	bl	800a852 <_ZN8touchgfx8Drawable14getNextSiblingEv>
 800c708:	60b8      	str	r0, [r7, #8]
        while (d)
 800c70a:	68bb      	ldr	r3, [r7, #8]
 800c70c:	2b00      	cmp	r3, #0
 800c70e:	d1e3      	bne.n	800c6d8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
        screenContainer->invalidate();
 800c710:	687b      	ldr	r3, [r7, #4]
 800c712:	685b      	ldr	r3, [r3, #4]
 800c714:	461a      	mov	r2, r3
 800c716:	687b      	ldr	r3, [r7, #4]
 800c718:	685b      	ldr	r3, [r3, #4]
 800c71a:	681b      	ldr	r3, [r3, #0]
 800c71c:	3314      	adds	r3, #20
 800c71e:	681b      	ldr	r3, [r3, #0]
 800c720:	4610      	mov	r0, r2
 800c722:	4798      	blx	r3
    }
 800c724:	3710      	adds	r7, #16
 800c726:	46bd      	mov	sp, r7
 800c728:	bdb0      	pop	{r4, r5, r7, pc}
	...

0800c72c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800c72c:	b580      	push	{r7, lr}
 800c72e:	b082      	sub	sp, #8
 800c730:	af00      	add	r7, sp, #0
 800c732:	6078      	str	r0, [r7, #4]
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 800c734:	4b0b      	ldr	r3, [pc, #44]	; (800c764 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x38>)
 800c736:	781b      	ldrb	r3, [r3, #0]
 800c738:	2b00      	cmp	r3, #0
 800c73a:	d00e      	beq.n	800c75a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x2e>
 800c73c:	687b      	ldr	r3, [r7, #4]
 800c73e:	685b      	ldr	r3, [r3, #4]
 800c740:	2b00      	cmp	r3, #0
 800c742:	d00a      	beq.n	800c75a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x2e>
            screenContainer->remove(snapshot);
 800c744:	687b      	ldr	r3, [r7, #4]
 800c746:	6858      	ldr	r0, [r3, #4]
 800c748:	687b      	ldr	r3, [r7, #4]
 800c74a:	685b      	ldr	r3, [r3, #4]
 800c74c:	681b      	ldr	r3, [r3, #0]
 800c74e:	3364      	adds	r3, #100	; 0x64
 800c750:	681b      	ldr	r3, [r3, #0]
 800c752:	687a      	ldr	r2, [r7, #4]
 800c754:	320c      	adds	r2, #12
 800c756:	4611      	mov	r1, r2
 800c758:	4798      	blx	r3
    }
 800c75a:	bf00      	nop
 800c75c:	3708      	adds	r7, #8
 800c75e:	46bd      	mov	sp, r7
 800c760:	bd80      	pop	{r7, pc}
 800c762:	bf00      	nop
 800c764:	20002327 	.word	0x20002327

0800c768 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 800c768:	b5b0      	push	{r4, r5, r7, lr}
 800c76a:	b084      	sub	sp, #16
 800c76c:	af00      	add	r7, sp, #0
 800c76e:	6078      	str	r0, [r7, #4]
        Transition::init();
 800c770:	687b      	ldr	r3, [r7, #4]
 800c772:	4618      	mov	r0, r3
 800c774:	f7fe f9b0 	bl	800aad8 <_ZN8touchgfx10Transition4initEv>
        if (done)
 800c778:	687b      	ldr	r3, [r7, #4]
 800c77a:	7a1b      	ldrb	r3, [r3, #8]
 800c77c:	2b00      	cmp	r3, #0
 800c77e:	d132      	bne.n	800c7e6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x7e>
        Drawable* d = screenContainer->getFirstChild();
 800c780:	687b      	ldr	r3, [r7, #4]
 800c782:	685a      	ldr	r2, [r3, #4]
 800c784:	687b      	ldr	r3, [r7, #4]
 800c786:	685b      	ldr	r3, [r3, #4]
 800c788:	681b      	ldr	r3, [r3, #0]
 800c78a:	331c      	adds	r3, #28
 800c78c:	681b      	ldr	r3, [r3, #0]
 800c78e:	4610      	mov	r0, r2
 800c790:	4798      	blx	r3
 800c792:	60f8      	str	r0, [r7, #12]
        while (d)
 800c794:	e018      	b.n	800c7c8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x60>
                d->setX(d->getX() - targetValue);
 800c796:	68fd      	ldr	r5, [r7, #12]
 800c798:	68fb      	ldr	r3, [r7, #12]
 800c79a:	681b      	ldr	r3, [r3, #0]
 800c79c:	3330      	adds	r3, #48	; 0x30
 800c79e:	681c      	ldr	r4, [r3, #0]
 800c7a0:	68f8      	ldr	r0, [r7, #12]
 800c7a2:	f7fe f862 	bl	800a86a <_ZNK8touchgfx8Drawable4getXEv>
 800c7a6:	4603      	mov	r3, r0
 800c7a8:	b29a      	uxth	r2, r3
 800c7aa:	687b      	ldr	r3, [r7, #4]
 800c7ac:	f9b3 303a 	ldrsh.w	r3, [r3, #58]	; 0x3a
 800c7b0:	b29b      	uxth	r3, r3
 800c7b2:	1ad3      	subs	r3, r2, r3
 800c7b4:	b29b      	uxth	r3, r3
 800c7b6:	b21b      	sxth	r3, r3
 800c7b8:	4619      	mov	r1, r3
 800c7ba:	4628      	mov	r0, r5
 800c7bc:	47a0      	blx	r4
                break;
 800c7be:	bf00      	nop
            d = d->getNextSibling();
 800c7c0:	68f8      	ldr	r0, [r7, #12]
 800c7c2:	f7fe f846 	bl	800a852 <_ZN8touchgfx8Drawable14getNextSiblingEv>
 800c7c6:	60f8      	str	r0, [r7, #12]
        while (d)
 800c7c8:	68fb      	ldr	r3, [r7, #12]
 800c7ca:	2b00      	cmp	r3, #0
 800c7cc:	d1e3      	bne.n	800c796 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x2e>
        screenContainer->add(snapshot);
 800c7ce:	687b      	ldr	r3, [r7, #4]
 800c7d0:	6858      	ldr	r0, [r3, #4]
 800c7d2:	687b      	ldr	r3, [r7, #4]
 800c7d4:	685b      	ldr	r3, [r3, #4]
 800c7d6:	681b      	ldr	r3, [r3, #0]
 800c7d8:	3360      	adds	r3, #96	; 0x60
 800c7da:	681b      	ldr	r3, [r3, #0]
 800c7dc:	687a      	ldr	r2, [r7, #4]
 800c7de:	320c      	adds	r2, #12
 800c7e0:	4611      	mov	r1, r2
 800c7e2:	4798      	blx	r3
 800c7e4:	e000      	b.n	800c7e8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x80>
            return;
 800c7e6:	bf00      	nop
    }
 800c7e8:	3710      	adds	r7, #16
 800c7ea:	46bd      	mov	sp, r7
 800c7ec:	bdb0      	pop	{r4, r5, r7, pc}

0800c7ee <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800c7ee:	b580      	push	{r7, lr}
 800c7f0:	b082      	sub	sp, #8
 800c7f2:	af00      	add	r7, sp, #0
 800c7f4:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 800c7f6:	687b      	ldr	r3, [r7, #4]
 800c7f8:	685b      	ldr	r3, [r3, #4]
 800c7fa:	687a      	ldr	r2, [r7, #4]
 800c7fc:	68d2      	ldr	r2, [r2, #12]
 800c7fe:	1052      	asrs	r2, r2, #1
 800c800:	1899      	adds	r1, r3, r2
 800c802:	687b      	ldr	r3, [r7, #4]
 800c804:	68db      	ldr	r3, [r3, #12]
 800c806:	f003 0301 	and.w	r3, r3, #1
 800c80a:	2b00      	cmp	r3, #0
 800c80c:	d102      	bne.n	800c814 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 800c80e:	687b      	ldr	r3, [r7, #4]
 800c810:	689b      	ldr	r3, [r3, #8]
 800c812:	e00a      	b.n	800c82a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 800c814:	687b      	ldr	r3, [r7, #4]
 800c816:	685b      	ldr	r3, [r3, #4]
 800c818:	687a      	ldr	r2, [r7, #4]
 800c81a:	68d2      	ldr	r2, [r2, #12]
 800c81c:	1052      	asrs	r2, r2, #1
 800c81e:	4413      	add	r3, r2
 800c820:	681b      	ldr	r3, [r3, #0]
 800c822:	687a      	ldr	r2, [r7, #4]
 800c824:	6892      	ldr	r2, [r2, #8]
 800c826:	4413      	add	r3, r2
 800c828:	681b      	ldr	r3, [r3, #0]
 800c82a:	4608      	mov	r0, r1
 800c82c:	4798      	blx	r3
    }
 800c82e:	bf00      	nop
 800c830:	3708      	adds	r7, #8
 800c832:	46bd      	mov	sp, r7
 800c834:	bd80      	pop	{r7, pc}

0800c836 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800c836:	b480      	push	{r7}
 800c838:	b083      	sub	sp, #12
 800c83a:	af00      	add	r7, sp, #0
 800c83c:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800c83e:	687b      	ldr	r3, [r7, #4]
 800c840:	685b      	ldr	r3, [r3, #4]
 800c842:	2b00      	cmp	r3, #0
 800c844:	d010      	beq.n	800c868 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800c846:	687b      	ldr	r3, [r7, #4]
 800c848:	689b      	ldr	r3, [r3, #8]
 800c84a:	2b00      	cmp	r3, #0
 800c84c:	d107      	bne.n	800c85e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800c84e:	687b      	ldr	r3, [r7, #4]
 800c850:	68db      	ldr	r3, [r3, #12]
 800c852:	f003 0301 	and.w	r3, r3, #1
 800c856:	2b00      	cmp	r3, #0
 800c858:	d101      	bne.n	800c85e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800c85a:	2301      	movs	r3, #1
 800c85c:	e000      	b.n	800c860 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 800c85e:	2300      	movs	r3, #0
 800c860:	2b01      	cmp	r3, #1
 800c862:	d001      	beq.n	800c868 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800c864:	2301      	movs	r3, #1
 800c866:	e000      	b.n	800c86a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 800c868:	2300      	movs	r3, #0
    }
 800c86a:	4618      	mov	r0, r3
 800c86c:	370c      	adds	r7, #12
 800c86e:	46bd      	mov	sp, r7
 800c870:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c874:	4770      	bx	lr
	...

0800c878 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>:
    TextAreaWithWildcardBase()
 800c878:	b580      	push	{r7, lr}
 800c87a:	b082      	sub	sp, #8
 800c87c:	af00      	add	r7, sp, #0
 800c87e:	6078      	str	r0, [r7, #4]
        : TextArea()
 800c880:	687b      	ldr	r3, [r7, #4]
 800c882:	4618      	mov	r0, r3
 800c884:	f7fd f9f2 	bl	8009c6c <_ZN8touchgfx8TextAreaC1Ev>
 800c888:	4a03      	ldr	r2, [pc, #12]	; (800c898 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev+0x20>)
 800c88a:	687b      	ldr	r3, [r7, #4]
 800c88c:	601a      	str	r2, [r3, #0]
    }
 800c88e:	687b      	ldr	r3, [r7, #4]
 800c890:	4618      	mov	r0, r3
 800c892:	3708      	adds	r7, #8
 800c894:	46bd      	mov	sp, r7
 800c896:	bd80      	pop	{r7, pc}
 800c898:	0802f5c0 	.word	0x0802f5c0

0800c89c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 800c89c:	b580      	push	{r7, lr}
 800c89e:	b082      	sub	sp, #8
 800c8a0:	af00      	add	r7, sp, #0
 800c8a2:	6078      	str	r0, [r7, #4]
        : TextAreaWithWildcardBase(), wc1(0)
 800c8a4:	687b      	ldr	r3, [r7, #4]
 800c8a6:	4618      	mov	r0, r3
 800c8a8:	f7ff ffe6 	bl	800c878 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>
 800c8ac:	4a05      	ldr	r2, [pc, #20]	; (800c8c4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 800c8ae:	687b      	ldr	r3, [r7, #4]
 800c8b0:	601a      	str	r2, [r3, #0]
 800c8b2:	687b      	ldr	r3, [r7, #4]
 800c8b4:	2200      	movs	r2, #0
 800c8b6:	649a      	str	r2, [r3, #72]	; 0x48
    }
 800c8b8:	687b      	ldr	r3, [r7, #4]
 800c8ba:	4618      	mov	r0, r3
 800c8bc:	3708      	adds	r7, #8
 800c8be:	46bd      	mov	sp, r7
 800c8c0:	bd80      	pop	{r7, pc}
 800c8c2:	bf00      	nop
 800c8c4:	0802ddb4 	.word	0x0802ddb4

0800c8c8 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>:
    void setWildcard1(const Unicode::UnicodeChar* value)
 800c8c8:	b480      	push	{r7}
 800c8ca:	b083      	sub	sp, #12
 800c8cc:	af00      	add	r7, sp, #0
 800c8ce:	6078      	str	r0, [r7, #4]
 800c8d0:	6039      	str	r1, [r7, #0]
        wc1 = value;
 800c8d2:	687b      	ldr	r3, [r7, #4]
 800c8d4:	683a      	ldr	r2, [r7, #0]
 800c8d6:	649a      	str	r2, [r3, #72]	; 0x48
    }
 800c8d8:	bf00      	nop
 800c8da:	370c      	adds	r7, #12
 800c8dc:	46bd      	mov	sp, r7
 800c8de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8e2:	4770      	bx	lr

0800c8e4 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 800c8e4:	b580      	push	{r7, lr}
 800c8e6:	b082      	sub	sp, #8
 800c8e8:	af00      	add	r7, sp, #0
 800c8ea:	6078      	str	r0, [r7, #4]
 800c8ec:	6039      	str	r1, [r7, #0]
    {
        setWildcard1(value);
 800c8ee:	6839      	ldr	r1, [r7, #0]
 800c8f0:	6878      	ldr	r0, [r7, #4]
 800c8f2:	f7ff ffe9 	bl	800c8c8 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>
    }
 800c8f6:	bf00      	nop
 800c8f8:	3708      	adds	r7, #8
 800c8fa:	46bd      	mov	sp, r7
 800c8fc:	bd80      	pop	{r7, pc}

0800c8fe <_ZN16COScreenViewBase11applicationEv>:
    COScreenViewBase();
    virtual ~COScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800c8fe:	b580      	push	{r7, lr}
 800c900:	b082      	sub	sp, #8
 800c902:	af00      	add	r7, sp, #0
 800c904:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800c906:	f00c fa25 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 800c90a:	4603      	mov	r3, r0
    }
 800c90c:	4618      	mov	r0, r3
 800c90e:	3708      	adds	r7, #8
 800c910:	46bd      	mov	sp, r7
 800c912:	bd80      	pop	{r7, pc}

0800c914 <_ZN8touchgfx4ViewI17COScreenPresenterED1Ev>:
class View : public Screen
 800c914:	b580      	push	{r7, lr}
 800c916:	b082      	sub	sp, #8
 800c918:	af00      	add	r7, sp, #0
 800c91a:	6078      	str	r0, [r7, #4]
 800c91c:	4a05      	ldr	r2, [pc, #20]	; (800c934 <_ZN8touchgfx4ViewI17COScreenPresenterED1Ev+0x20>)
 800c91e:	687b      	ldr	r3, [r7, #4]
 800c920:	601a      	str	r2, [r3, #0]
 800c922:	687b      	ldr	r3, [r7, #4]
 800c924:	4618      	mov	r0, r3
 800c926:	f7fd f89b 	bl	8009a60 <_ZN8touchgfx6ScreenD1Ev>
 800c92a:	687b      	ldr	r3, [r7, #4]
 800c92c:	4618      	mov	r0, r3
 800c92e:	3708      	adds	r7, #8
 800c930:	46bd      	mov	sp, r7
 800c932:	bd80      	pop	{r7, pc}
 800c934:	0802e088 	.word	0x0802e088

0800c938 <_ZN8touchgfx4ViewI17COScreenPresenterED0Ev>:
 800c938:	b580      	push	{r7, lr}
 800c93a:	b082      	sub	sp, #8
 800c93c:	af00      	add	r7, sp, #0
 800c93e:	6078      	str	r0, [r7, #4]
 800c940:	6878      	ldr	r0, [r7, #4]
 800c942:	f7ff ffe7 	bl	800c914 <_ZN8touchgfx4ViewI17COScreenPresenterED1Ev>
 800c946:	2140      	movs	r1, #64	; 0x40
 800c948:	6878      	ldr	r0, [r7, #4]
 800c94a:	f01d fc60 	bl	802a20e <_ZdlPvj>
 800c94e:	687b      	ldr	r3, [r7, #4]
 800c950:	4618      	mov	r0, r3
 800c952:	3708      	adds	r7, #8
 800c954:	46bd      	mov	sp, r7
 800c956:	bd80      	pop	{r7, pc}

0800c958 <_ZN16COScreenViewBaseC1Ev>:
#include <gui_generated/coscreen_screen/COScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

COScreenViewBase::COScreenViewBase() :
 800c958:	b590      	push	{r4, r7, lr}
 800c95a:	b0a5      	sub	sp, #148	; 0x94
 800c95c:	af02      	add	r7, sp, #8
 800c95e:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &COScreenViewBase::buttonCallbackHandler)
 800c960:	697b      	ldr	r3, [r7, #20]
 800c962:	4618      	mov	r0, r3
 800c964:	f000 fa8c 	bl	800ce80 <_ZN8touchgfx4ViewI17COScreenPresenterEC1Ev>
 800c968:	4a66      	ldr	r2, [pc, #408]	; (800cb04 <_ZN16COScreenViewBaseC1Ev+0x1ac>)
 800c96a:	697b      	ldr	r3, [r7, #20]
 800c96c:	601a      	str	r2, [r3, #0]
 800c96e:	697b      	ldr	r3, [r7, #20]
 800c970:	3340      	adds	r3, #64	; 0x40
 800c972:	4618      	mov	r0, r3
 800c974:	f7fd f932 	bl	8009bdc <_ZN8touchgfx3BoxC1Ev>
 800c978:	697b      	ldr	r3, [r7, #20]
 800c97a:	336c      	adds	r3, #108	; 0x6c
 800c97c:	4618      	mov	r0, r3
 800c97e:	f7ff ff8d 	bl	800c89c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800c982:	697b      	ldr	r3, [r7, #20]
 800c984:	33b8      	adds	r3, #184	; 0xb8
 800c986:	4618      	mov	r0, r3
 800c988:	f009 fdca 	bl	8016520 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800c98c:	697b      	ldr	r3, [r7, #20]
 800c98e:	33f4      	adds	r3, #244	; 0xf4
 800c990:	4618      	mov	r0, r3
 800c992:	f009 fa3d 	bl	8015e10 <_ZN8touchgfx5GaugeC1Ev>
 800c996:	697b      	ldr	r3, [r7, #20]
 800c998:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800c99c:	4618      	mov	r0, r3
 800c99e:	f7fd f965 	bl	8009c6c <_ZN8touchgfx8TextAreaC1Ev>
 800c9a2:	697b      	ldr	r3, [r7, #20]
 800c9a4:	f503 7039 	add.w	r0, r3, #740	; 0x2e4
 800c9a8:	4b57      	ldr	r3, [pc, #348]	; (800cb08 <_ZN16COScreenViewBaseC1Ev+0x1b0>)
 800c9aa:	623b      	str	r3, [r7, #32]
 800c9ac:	2300      	movs	r3, #0
 800c9ae:	627b      	str	r3, [r7, #36]	; 0x24
 800c9b0:	f107 0320 	add.w	r3, r7, #32
 800c9b4:	cb0c      	ldmia	r3, {r2, r3}
 800c9b6:	6979      	ldr	r1, [r7, #20]
 800c9b8:	f000 fa78 	bl	800ceac <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800c9bc:	697b      	ldr	r3, [r7, #20]
 800c9be:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800c9c2:	23f0      	movs	r3, #240	; 0xf0
 800c9c4:	9300      	str	r3, [sp, #0]
 800c9c6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800c9ca:	2200      	movs	r2, #0
 800c9cc:	2100      	movs	r1, #0
 800c9ce:	f7fc ff11 	bl	80097f4 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800c9d2:	697b      	ldr	r3, [r7, #20]
 800c9d4:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800c9d8:	2300      	movs	r3, #0
 800c9da:	f887 3064 	strb.w	r3, [r7, #100]	; 0x64
 800c9de:	2300      	movs	r3, #0
 800c9e0:	f887 3063 	strb.w	r3, [r7, #99]	; 0x63
 800c9e4:	2300      	movs	r3, #0
 800c9e6:	f887 3062 	strb.w	r3, [r7, #98]	; 0x62
 800c9ea:	f897 3064 	ldrb.w	r3, [r7, #100]	; 0x64
 800c9ee:	041b      	lsls	r3, r3, #16
 800c9f0:	461a      	mov	r2, r3
 800c9f2:	f897 3063 	ldrb.w	r3, [r7, #99]	; 0x63
 800c9f6:	021b      	lsls	r3, r3, #8
 800c9f8:	431a      	orrs	r2, r3
 800c9fa:	f897 3062 	ldrb.w	r3, [r7, #98]	; 0x62
 800c9fe:	4313      	orrs	r3, r2
 800ca00:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ca04:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800ca08:	4611      	mov	r1, r2
 800ca0a:	4618      	mov	r0, r3
 800ca0c:	f7fc fe2e 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800ca10:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800ca12:	4619      	mov	r1, r3
 800ca14:	4620      	mov	r0, r4
 800ca16:	f7fd f905 	bl	8009c24 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800ca1a:	697a      	ldr	r2, [r7, #20]
 800ca1c:	697b      	ldr	r3, [r7, #20]
 800ca1e:	3340      	adds	r3, #64	; 0x40
 800ca20:	4619      	mov	r1, r3
 800ca22:	4610      	mov	r0, r2
 800ca24:	f7fd f874 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    COData.setXY(200, 202);
 800ca28:	697b      	ldr	r3, [r7, #20]
 800ca2a:	336c      	adds	r3, #108	; 0x6c
 800ca2c:	22ca      	movs	r2, #202	; 0xca
 800ca2e:	21c8      	movs	r1, #200	; 0xc8
 800ca30:	4618      	mov	r0, r3
 800ca32:	f7fc ff1e 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
    COData.setColor(touchgfx::Color::getColorFromRGB(214, 195, 195));
 800ca36:	697b      	ldr	r3, [r7, #20]
 800ca38:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800ca3c:	23d6      	movs	r3, #214	; 0xd6
 800ca3e:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 800ca42:	23c3      	movs	r3, #195	; 0xc3
 800ca44:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
 800ca48:	23c3      	movs	r3, #195	; 0xc3
 800ca4a:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 800ca4e:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800ca52:	041b      	lsls	r3, r3, #16
 800ca54:	461a      	mov	r2, r3
 800ca56:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 800ca5a:	021b      	lsls	r3, r3, #8
 800ca5c:	431a      	orrs	r2, r3
 800ca5e:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 800ca62:	4313      	orrs	r3, r2
 800ca64:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ca68:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800ca6c:	4611      	mov	r1, r2
 800ca6e:	4618      	mov	r0, r3
 800ca70:	f7fc fdfc 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800ca74:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800ca76:	66bc      	str	r4, [r7, #104]	; 0x68
 800ca78:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800ca7a:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800ca7c:	69fa      	ldr	r2, [r7, #28]
 800ca7e:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800ca80:	bf00      	nop
    COData.setLinespacing(0);
 800ca82:	697b      	ldr	r3, [r7, #20]
 800ca84:	336c      	adds	r3, #108	; 0x6c
 800ca86:	673b      	str	r3, [r7, #112]	; 0x70
 800ca88:	2300      	movs	r3, #0
 800ca8a:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
        linespace = space;
 800ca8e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800ca90:	f8b7 206e 	ldrh.w	r2, [r7, #110]	; 0x6e
 800ca94:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800ca96:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800ca98:	681b      	ldr	r3, [r3, #0]
 800ca9a:	3384      	adds	r3, #132	; 0x84
 800ca9c:	681b      	ldr	r3, [r3, #0]
 800ca9e:	6f3c      	ldr	r4, [r7, #112]	; 0x70
 800caa0:	463a      	mov	r2, r7
 800caa2:	6f39      	ldr	r1, [r7, #112]	; 0x70
 800caa4:	4610      	mov	r0, r2
 800caa6:	4798      	blx	r3
 800caa8:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800caac:	463a      	mov	r2, r7
 800caae:	ca07      	ldmia	r2, {r0, r1, r2}
 800cab0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800cab4:	bf00      	nop
    Unicode::snprintf(CODataBuffer, CODATA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ZXCV).getText());
 800cab6:	697b      	ldr	r3, [r7, #20]
 800cab8:	f503 7437 	add.w	r4, r3, #732	; 0x2dc
 800cabc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800cac0:	2102      	movs	r1, #2
 800cac2:	4618      	mov	r0, r3
 800cac4:	f7fd f8bc 	bl	8009c40 <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800cac8:	4b10      	ldr	r3, [pc, #64]	; (800cb0c <_ZN16COScreenViewBaseC1Ev+0x1b4>)
 800caca:	681b      	ldr	r3, [r3, #0]
 800cacc:	2b00      	cmp	r3, #0
 800cace:	d105      	bne.n	800cadc <_ZN16COScreenViewBaseC1Ev+0x184>
 800cad0:	4b0f      	ldr	r3, [pc, #60]	; (800cb10 <_ZN16COScreenViewBaseC1Ev+0x1b8>)
 800cad2:	4a10      	ldr	r2, [pc, #64]	; (800cb14 <_ZN16COScreenViewBaseC1Ev+0x1bc>)
 800cad4:	2160      	movs	r1, #96	; 0x60
 800cad6:	4810      	ldr	r0, [pc, #64]	; (800cb18 <_ZN16COScreenViewBaseC1Ev+0x1c0>)
 800cad8:	f01e fb8a 	bl	802b1f0 <__assert_func>
 800cadc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800cae0:	677b      	str	r3, [r7, #116]	; 0x74
        return typedTextId < numberOfTypedTexts;
 800cae2:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800cae4:	889a      	ldrh	r2, [r3, #4]
 800cae6:	4b0d      	ldr	r3, [pc, #52]	; (800cb1c <_ZN16COScreenViewBaseC1Ev+0x1c4>)
 800cae8:	881b      	ldrh	r3, [r3, #0]
 800caea:	429a      	cmp	r2, r3
 800caec:	bf34      	ite	cc
 800caee:	2301      	movcc	r3, #1
 800caf0:	2300      	movcs	r3, #0
 800caf2:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800caf4:	2b00      	cmp	r3, #0
 800caf6:	d115      	bne.n	800cb24 <_ZN16COScreenViewBaseC1Ev+0x1cc>
 800caf8:	4b09      	ldr	r3, [pc, #36]	; (800cb20 <_ZN16COScreenViewBaseC1Ev+0x1c8>)
 800cafa:	4a06      	ldr	r2, [pc, #24]	; (800cb14 <_ZN16COScreenViewBaseC1Ev+0x1bc>)
 800cafc:	2161      	movs	r1, #97	; 0x61
 800cafe:	4806      	ldr	r0, [pc, #24]	; (800cb18 <_ZN16COScreenViewBaseC1Ev+0x1c0>)
 800cb00:	f01e fb76 	bl	802b1f0 <__assert_func>
 800cb04:	0802e03c 	.word	0x0802e03c
 800cb08:	0800ce57 	.word	0x0800ce57
 800cb0c:	20002380 	.word	0x20002380
 800cb10:	0802cc40 	.word	0x0802cc40
 800cb14:	0802cd44 	.word	0x0802cd44
 800cb18:	0802ccc0 	.word	0x0802ccc0
 800cb1c:	20002384 	.word	0x20002384
 800cb20:	0802cd04 	.word	0x0802cd04
        return texts->getText(typedTextId);
 800cb24:	4ba3      	ldr	r3, [pc, #652]	; (800cdb4 <_ZN16COScreenViewBaseC1Ev+0x45c>)
 800cb26:	681b      	ldr	r3, [r3, #0]
 800cb28:	8dba      	ldrh	r2, [r7, #44]	; 0x2c
 800cb2a:	4611      	mov	r1, r2
 800cb2c:	4618      	mov	r0, r3
 800cb2e:	f002 ffdd 	bl	800faec <_ZNK8touchgfx5Texts7getTextEt>
 800cb32:	4603      	mov	r3, r0
 800cb34:	bf00      	nop
 800cb36:	4aa0      	ldr	r2, [pc, #640]	; (800cdb8 <_ZN16COScreenViewBaseC1Ev+0x460>)
 800cb38:	2104      	movs	r1, #4
 800cb3a:	4620      	mov	r0, r4
 800cb3c:	f00f fb52 	bl	801c1e4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800cb40:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800cb44:	4618      	mov	r0, r3
 800cb46:	f7fc fba9 	bl	800929c <_ZN8touchgfx9TypedTextD1Ev>
    COData.setWildcard(CODataBuffer);
 800cb4a:	697b      	ldr	r3, [r7, #20]
 800cb4c:	f103 026c 	add.w	r2, r3, #108	; 0x6c
 800cb50:	697b      	ldr	r3, [r7, #20]
 800cb52:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800cb56:	4619      	mov	r1, r3
 800cb58:	4610      	mov	r0, r2
 800cb5a:	f7ff fec3 	bl	800c8e4 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    COData.resizeToCurrentText();
 800cb5e:	697b      	ldr	r3, [r7, #20]
 800cb60:	336c      	adds	r3, #108	; 0x6c
 800cb62:	4618      	mov	r0, r3
 800cb64:	f009 f8a6 	bl	8015cb4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    COData.setTypedText(touchgfx::TypedText(T___SINGLEUSE_N3KU));
 800cb68:	697b      	ldr	r3, [r7, #20]
 800cb6a:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800cb6e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800cb72:	2103      	movs	r1, #3
 800cb74:	4618      	mov	r0, r3
 800cb76:	f7fd f863 	bl	8009c40 <_ZN8touchgfx9TypedTextC1Et>
 800cb7a:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800cb7e:	4619      	mov	r1, r3
 800cb80:	4620      	mov	r0, r4
 800cb82:	f009 f8b7 	bl	8015cf4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800cb86:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800cb8a:	4618      	mov	r0, r3
 800cb8c:	f7fc fb86 	bl	800929c <_ZN8touchgfx9TypedTextD1Ev>
    add(COData);
 800cb90:	697a      	ldr	r2, [r7, #20]
 800cb92:	697b      	ldr	r3, [r7, #20]
 800cb94:	336c      	adds	r3, #108	; 0x6c
 800cb96:	4619      	mov	r1, r3
 800cb98:	4610      	mov	r0, r2
 800cb9a:	f7fc ffb9 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    back.setXY(20, 103);
 800cb9e:	697b      	ldr	r3, [r7, #20]
 800cba0:	33b8      	adds	r3, #184	; 0xb8
 800cba2:	2267      	movs	r2, #103	; 0x67
 800cba4:	2114      	movs	r1, #20
 800cba6:	4618      	mov	r0, r3
 800cba8:	f7fc fe63 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
    back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
 800cbac:	697b      	ldr	r3, [r7, #20]
 800cbae:	f103 04b8 	add.w	r4, r3, #184	; 0xb8
 800cbb2:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800cbb6:	2100      	movs	r1, #0
 800cbb8:	4618      	mov	r0, r3
 800cbba:	f7fc fd9d 	bl	80096f8 <_ZN8touchgfx6BitmapC1Et>
 800cbbe:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800cbc2:	2101      	movs	r1, #1
 800cbc4:	4618      	mov	r0, r3
 800cbc6:	f7fc fd97 	bl	80096f8 <_ZN8touchgfx6BitmapC1Et>
 800cbca:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800cbce:	2104      	movs	r1, #4
 800cbd0:	4618      	mov	r0, r3
 800cbd2:	f7fc fd91 	bl	80096f8 <_ZN8touchgfx6BitmapC1Et>
 800cbd6:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800cbda:	2104      	movs	r1, #4
 800cbdc:	4618      	mov	r0, r3
 800cbde:	f7fc fd8b 	bl	80096f8 <_ZN8touchgfx6BitmapC1Et>
 800cbe2:	f107 0040 	add.w	r0, r7, #64	; 0x40
 800cbe6:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 800cbea:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800cbee:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800cbf2:	9300      	str	r3, [sp, #0]
 800cbf4:	4603      	mov	r3, r0
 800cbf6:	4620      	mov	r0, r4
 800cbf8:	f009 fbfc 	bl	80163f4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    back.setIconXY(5, 5);
 800cbfc:	697b      	ldr	r3, [r7, #20]
 800cbfe:	33b8      	adds	r3, #184	; 0xb8
 800cc00:	2205      	movs	r2, #5
 800cc02:	2105      	movs	r1, #5
 800cc04:	4618      	mov	r0, r3
 800cc06:	f7fd fa3b 	bl	800a080 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    back.setAction(buttonCallback);
 800cc0a:	697b      	ldr	r3, [r7, #20]
 800cc0c:	f103 02b8 	add.w	r2, r3, #184	; 0xb8
 800cc10:	697b      	ldr	r3, [r7, #20]
 800cc12:	f503 7339 	add.w	r3, r3, #740	; 0x2e4
 800cc16:	4619      	mov	r1, r3
 800cc18:	4610      	mov	r0, r2
 800cc1a:	f7fd f9e3 	bl	8009fe4 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(back);
 800cc1e:	697a      	ldr	r2, [r7, #20]
 800cc20:	697b      	ldr	r3, [r7, #20]
 800cc22:	33b8      	adds	r3, #184	; 0xb8
 800cc24:	4619      	mov	r1, r3
 800cc26:	4610      	mov	r0, r2
 800cc28:	f7fc ff72 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    COGauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_BACKGROUNDS_LIGHT_ID));
 800cc2c:	697b      	ldr	r3, [r7, #20]
 800cc2e:	f103 04f4 	add.w	r4, r3, #244	; 0xf4
 800cc32:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800cc36:	2102      	movs	r1, #2
 800cc38:	4618      	mov	r0, r3
 800cc3a:	f7fc fd5d 	bl	80096f8 <_ZN8touchgfx6BitmapC1Et>
 800cc3e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800cc42:	4619      	mov	r1, r3
 800cc44:	4620      	mov	r0, r4
 800cc46:	f005 fce2 	bl	801260e <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    COGauge.setPosition(166, 73, 120, 120);
 800cc4a:	697b      	ldr	r3, [r7, #20]
 800cc4c:	f103 00f4 	add.w	r0, r3, #244	; 0xf4
 800cc50:	2378      	movs	r3, #120	; 0x78
 800cc52:	9300      	str	r3, [sp, #0]
 800cc54:	2378      	movs	r3, #120	; 0x78
 800cc56:	2249      	movs	r2, #73	; 0x49
 800cc58:	21a6      	movs	r1, #166	; 0xa6
 800cc5a:	f7fc fdcb 	bl	80097f4 <_ZN8touchgfx8Drawable11setPositionEssss>
    COGauge.setCenter(60, 60);
 800cc5e:	697b      	ldr	r3, [r7, #20]
 800cc60:	33f4      	adds	r3, #244	; 0xf4
 800cc62:	223c      	movs	r2, #60	; 0x3c
 800cc64:	213c      	movs	r1, #60	; 0x3c
 800cc66:	4618      	mov	r0, r3
 800cc68:	f009 f97d 	bl	8015f66 <_ZN8touchgfx5Gauge9setCenterEii>
    COGauge.setStartEndAngle(-90, 90);
 800cc6c:	697b      	ldr	r3, [r7, #20]
 800cc6e:	33f4      	adds	r3, #244	; 0xf4
 800cc70:	225a      	movs	r2, #90	; 0x5a
 800cc72:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800cc76:	4618      	mov	r0, r3
 800cc78:	f009 f9fa 	bl	8016070 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    COGauge.setRange(10, 1000);
 800cc7c:	697b      	ldr	r3, [r7, #20]
 800cc7e:	f103 00f4 	add.w	r0, r3, #244	; 0xf4
 800cc82:	2300      	movs	r3, #0
 800cc84:	9300      	str	r3, [sp, #0]
 800cc86:	2300      	movs	r3, #0
 800cc88:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800cc8c:	210a      	movs	r1, #10
 800cc8e:	f005 fb98 	bl	80123c2 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    COGauge.setValue(300);
 800cc92:	697b      	ldr	r3, [r7, #20]
 800cc94:	33f4      	adds	r3, #244	; 0xf4
 800cc96:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800cc9a:	4618      	mov	r0, r3
 800cc9c:	f009 f992 	bl	8015fc4 <_ZN8touchgfx5Gauge8setValueEi>
    COGauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_NEEDLES_ROUGH_ID, 5, 33);
 800cca0:	697b      	ldr	r3, [r7, #20]
 800cca2:	f103 00f4 	add.w	r0, r3, #244	; 0xf4
 800cca6:	2321      	movs	r3, #33	; 0x21
 800cca8:	2205      	movs	r2, #5
 800ccaa:	2103      	movs	r1, #3
 800ccac:	f009 f946 	bl	8015f3c <_ZN8touchgfx5Gauge9setNeedleEtss>
    COGauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800ccb0:	697b      	ldr	r3, [r7, #20]
 800ccb2:	33f4      	adds	r3, #244	; 0xf4
 800ccb4:	2101      	movs	r1, #1
 800ccb6:	4618      	mov	r0, r3
 800ccb8:	f009 f8e2 	bl	8015e80 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    COGauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800ccbc:	697b      	ldr	r3, [r7, #20]
 800ccbe:	33f4      	adds	r3, #244	; 0xf4
 800ccc0:	2101      	movs	r1, #1
 800ccc2:	4618      	mov	r0, r3
 800ccc4:	f009 f8df 	bl	8015e86 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(COGauge);
 800ccc8:	697a      	ldr	r2, [r7, #20]
 800ccca:	697b      	ldr	r3, [r7, #20]
 800cccc:	33f4      	adds	r3, #244	; 0xf4
 800ccce:	4619      	mov	r1, r3
 800ccd0:	4610      	mov	r0, r2
 800ccd2:	f7fc ff1d 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    CO_text.setXY(76, 8);
 800ccd6:	697b      	ldr	r3, [r7, #20]
 800ccd8:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800ccdc:	2208      	movs	r2, #8
 800ccde:	214c      	movs	r1, #76	; 0x4c
 800cce0:	4618      	mov	r0, r3
 800cce2:	f7fc fdc6 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
    CO_text.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
 800cce6:	697b      	ldr	r3, [r7, #20]
 800cce8:	f503 7425 	add.w	r4, r3, #660	; 0x294
 800ccec:	23f2      	movs	r3, #242	; 0xf2
 800ccee:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 800ccf2:	23ae      	movs	r3, #174	; 0xae
 800ccf4:	f887 307a 	strb.w	r3, [r7, #122]	; 0x7a
 800ccf8:	23ae      	movs	r3, #174	; 0xae
 800ccfa:	f887 3079 	strb.w	r3, [r7, #121]	; 0x79
 800ccfe:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 800cd02:	041b      	lsls	r3, r3, #16
 800cd04:	461a      	mov	r2, r3
 800cd06:	f897 307a 	ldrb.w	r3, [r7, #122]	; 0x7a
 800cd0a:	021b      	lsls	r3, r3, #8
 800cd0c:	431a      	orrs	r2, r3
 800cd0e:	f897 3079 	ldrb.w	r3, [r7, #121]	; 0x79
 800cd12:	4313      	orrs	r3, r2
 800cd14:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800cd18:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800cd1c:	4611      	mov	r1, r2
 800cd1e:	4618      	mov	r0, r3
 800cd20:	f7fc fca4 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800cd24:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800cd26:	67fc      	str	r4, [r7, #124]	; 0x7c
 800cd28:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800cd2a:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800cd2c:	69ba      	ldr	r2, [r7, #24]
 800cd2e:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800cd30:	bf00      	nop
    CO_text.setLinespacing(0);
 800cd32:	697b      	ldr	r3, [r7, #20]
 800cd34:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800cd38:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800cd3c:	2300      	movs	r3, #0
 800cd3e:	f8a7 3082 	strh.w	r3, [r7, #130]	; 0x82
        linespace = space;
 800cd42:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800cd46:	f8b7 2082 	ldrh.w	r2, [r7, #130]	; 0x82
 800cd4a:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800cd4c:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800cd50:	681b      	ldr	r3, [r3, #0]
 800cd52:	3384      	adds	r3, #132	; 0x84
 800cd54:	681b      	ldr	r3, [r3, #0]
 800cd56:	f8d7 4084 	ldr.w	r4, [r7, #132]	; 0x84
 800cd5a:	463a      	mov	r2, r7
 800cd5c:	f8d7 1084 	ldr.w	r1, [r7, #132]	; 0x84
 800cd60:	4610      	mov	r0, r2
 800cd62:	4798      	blx	r3
 800cd64:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800cd68:	463a      	mov	r2, r7
 800cd6a:	ca07      	ldmia	r2, {r0, r1, r2}
 800cd6c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800cd70:	bf00      	nop
    CO_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LS7X));
 800cd72:	697b      	ldr	r3, [r7, #20]
 800cd74:	f503 7425 	add.w	r4, r3, #660	; 0x294
 800cd78:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800cd7c:	2106      	movs	r1, #6
 800cd7e:	4618      	mov	r0, r3
 800cd80:	f7fc ff5e 	bl	8009c40 <_ZN8touchgfx9TypedTextC1Et>
 800cd84:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800cd88:	4619      	mov	r1, r3
 800cd8a:	4620      	mov	r0, r4
 800cd8c:	f008 ffb2 	bl	8015cf4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800cd90:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800cd94:	4618      	mov	r0, r3
 800cd96:	f7fc fa81 	bl	800929c <_ZN8touchgfx9TypedTextD1Ev>
    add(CO_text);
 800cd9a:	697a      	ldr	r2, [r7, #20]
 800cd9c:	697b      	ldr	r3, [r7, #20]
 800cd9e:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800cda2:	4619      	mov	r1, r3
 800cda4:	4610      	mov	r0, r2
 800cda6:	f7fc feb3 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800cdaa:	697b      	ldr	r3, [r7, #20]
 800cdac:	4618      	mov	r0, r3
 800cdae:	378c      	adds	r7, #140	; 0x8c
 800cdb0:	46bd      	mov	sp, r7
 800cdb2:	bd90      	pop	{r4, r7, pc}
 800cdb4:	2000238c 	.word	0x2000238c
 800cdb8:	0802cd7c 	.word	0x0802cd7c

0800cdbc <_ZN16COScreenViewBaseD1Ev>:

COScreenViewBase::~COScreenViewBase()
 800cdbc:	b580      	push	{r7, lr}
 800cdbe:	b082      	sub	sp, #8
 800cdc0:	af00      	add	r7, sp, #0
 800cdc2:	6078      	str	r0, [r7, #4]
 800cdc4:	4a15      	ldr	r2, [pc, #84]	; (800ce1c <_ZN16COScreenViewBaseD1Ev+0x60>)
 800cdc6:	687b      	ldr	r3, [r7, #4]
 800cdc8:	601a      	str	r2, [r3, #0]
 800cdca:	687b      	ldr	r3, [r7, #4]
 800cdcc:	f503 7339 	add.w	r3, r3, #740	; 0x2e4
 800cdd0:	4618      	mov	r0, r3
 800cdd2:	f000 f88b 	bl	800ceec <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800cdd6:	687b      	ldr	r3, [r7, #4]
 800cdd8:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800cddc:	4618      	mov	r0, r3
 800cdde:	f7fd f883 	bl	8009ee8 <_ZN8touchgfx8TextAreaD1Ev>
 800cde2:	687b      	ldr	r3, [r7, #4]
 800cde4:	33f4      	adds	r3, #244	; 0xf4
 800cde6:	4618      	mov	r0, r3
 800cde8:	f000 f956 	bl	800d098 <_ZN8touchgfx5GaugeD1Ev>
 800cdec:	687b      	ldr	r3, [r7, #4]
 800cdee:	33b8      	adds	r3, #184	; 0xb8
 800cdf0:	4618      	mov	r0, r3
 800cdf2:	f7fd fcbb 	bl	800a76c <_ZN8touchgfx14ButtonWithIconD1Ev>
 800cdf6:	687b      	ldr	r3, [r7, #4]
 800cdf8:	336c      	adds	r3, #108	; 0x6c
 800cdfa:	4618      	mov	r0, r3
 800cdfc:	f7fd fbe4 	bl	800a5c8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800ce00:	687b      	ldr	r3, [r7, #4]
 800ce02:	3340      	adds	r3, #64	; 0x40
 800ce04:	4618      	mov	r0, r3
 800ce06:	f7fd fc23 	bl	800a650 <_ZN8touchgfx3BoxD1Ev>
 800ce0a:	687b      	ldr	r3, [r7, #4]
 800ce0c:	4618      	mov	r0, r3
 800ce0e:	f7ff fd81 	bl	800c914 <_ZN8touchgfx4ViewI17COScreenPresenterED1Ev>
{

}
 800ce12:	687b      	ldr	r3, [r7, #4]
 800ce14:	4618      	mov	r0, r3
 800ce16:	3708      	adds	r7, #8
 800ce18:	46bd      	mov	sp, r7
 800ce1a:	bd80      	pop	{r7, pc}
 800ce1c:	0802e03c 	.word	0x0802e03c

0800ce20 <_ZN16COScreenViewBaseD0Ev>:
COScreenViewBase::~COScreenViewBase()
 800ce20:	b580      	push	{r7, lr}
 800ce22:	b082      	sub	sp, #8
 800ce24:	af00      	add	r7, sp, #0
 800ce26:	6078      	str	r0, [r7, #4]
}
 800ce28:	6878      	ldr	r0, [r7, #4]
 800ce2a:	f7ff ffc7 	bl	800cdbc <_ZN16COScreenViewBaseD1Ev>
 800ce2e:	f44f 713d 	mov.w	r1, #756	; 0x2f4
 800ce32:	6878      	ldr	r0, [r7, #4]
 800ce34:	f01d f9eb 	bl	802a20e <_ZdlPvj>
 800ce38:	687b      	ldr	r3, [r7, #4]
 800ce3a:	4618      	mov	r0, r3
 800ce3c:	3708      	adds	r7, #8
 800ce3e:	46bd      	mov	sp, r7
 800ce40:	bd80      	pop	{r7, pc}

0800ce42 <_ZN16COScreenViewBase11setupScreenEv>:

void COScreenViewBase::setupScreen()
{
 800ce42:	b480      	push	{r7}
 800ce44:	b083      	sub	sp, #12
 800ce46:	af00      	add	r7, sp, #0
 800ce48:	6078      	str	r0, [r7, #4]

}
 800ce4a:	bf00      	nop
 800ce4c:	370c      	adds	r7, #12
 800ce4e:	46bd      	mov	sp, r7
 800ce50:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce54:	4770      	bx	lr

0800ce56 <_ZN16COScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void COScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800ce56:	b580      	push	{r7, lr}
 800ce58:	b082      	sub	sp, #8
 800ce5a:	af00      	add	r7, sp, #0
 800ce5c:	6078      	str	r0, [r7, #4]
 800ce5e:	6039      	str	r1, [r7, #0]
    if (&src == &back)
 800ce60:	687b      	ldr	r3, [r7, #4]
 800ce62:	33b8      	adds	r3, #184	; 0xb8
 800ce64:	683a      	ldr	r2, [r7, #0]
 800ce66:	429a      	cmp	r2, r3
 800ce68:	d106      	bne.n	800ce78 <_ZN16COScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //COToMain
        //When back clicked change screen to MainScreen
        //Go to MainScreen with screen transition towards West
        application().gotoMainScreenScreenSlideTransitionWest();
 800ce6a:	6878      	ldr	r0, [r7, #4]
 800ce6c:	f7ff fd47 	bl	800c8fe <_ZN16COScreenViewBase11applicationEv>
 800ce70:	4603      	mov	r3, r0
 800ce72:	4618      	mov	r0, r3
 800ce74:	f7fe f800 	bl	800ae78 <_ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionWestEv>
    }
}
 800ce78:	bf00      	nop
 800ce7a:	3708      	adds	r7, #8
 800ce7c:	46bd      	mov	sp, r7
 800ce7e:	bd80      	pop	{r7, pc}

0800ce80 <_ZN8touchgfx4ViewI17COScreenPresenterEC1Ev>:
    View()
 800ce80:	b580      	push	{r7, lr}
 800ce82:	b082      	sub	sp, #8
 800ce84:	af00      	add	r7, sp, #0
 800ce86:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800ce88:	687b      	ldr	r3, [r7, #4]
 800ce8a:	4618      	mov	r0, r3
 800ce8c:	f00d fb70 	bl	801a570 <_ZN8touchgfx6ScreenC1Ev>
 800ce90:	4a05      	ldr	r2, [pc, #20]	; (800cea8 <_ZN8touchgfx4ViewI17COScreenPresenterEC1Ev+0x28>)
 800ce92:	687b      	ldr	r3, [r7, #4]
 800ce94:	601a      	str	r2, [r3, #0]
 800ce96:	687b      	ldr	r3, [r7, #4]
 800ce98:	2200      	movs	r2, #0
 800ce9a:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800ce9c:	687b      	ldr	r3, [r7, #4]
 800ce9e:	4618      	mov	r0, r3
 800cea0:	3708      	adds	r7, #8
 800cea2:	46bd      	mov	sp, r7
 800cea4:	bd80      	pop	{r7, pc}
 800cea6:	bf00      	nop
 800cea8:	0802e088 	.word	0x0802e088

0800ceac <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800ceac:	b580      	push	{r7, lr}
 800ceae:	b084      	sub	sp, #16
 800ceb0:	af00      	add	r7, sp, #0
 800ceb2:	60f8      	str	r0, [r7, #12]
 800ceb4:	60b9      	str	r1, [r7, #8]
 800ceb6:	4639      	mov	r1, r7
 800ceb8:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800cebc:	68fb      	ldr	r3, [r7, #12]
 800cebe:	4618      	mov	r0, r3
 800cec0:	f7fd fb10 	bl	800a4e4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800cec4:	4a08      	ldr	r2, [pc, #32]	; (800cee8 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800cec6:	68fb      	ldr	r3, [r7, #12]
 800cec8:	601a      	str	r2, [r3, #0]
 800ceca:	68fb      	ldr	r3, [r7, #12]
 800cecc:	68ba      	ldr	r2, [r7, #8]
 800cece:	605a      	str	r2, [r3, #4]
 800ced0:	68fb      	ldr	r3, [r7, #12]
 800ced2:	3308      	adds	r3, #8
 800ced4:	463a      	mov	r2, r7
 800ced6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ceda:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800cede:	68fb      	ldr	r3, [r7, #12]
 800cee0:	4618      	mov	r0, r3
 800cee2:	3710      	adds	r7, #16
 800cee4:	46bd      	mov	sp, r7
 800cee6:	bd80      	pop	{r7, pc}
 800cee8:	0802e070 	.word	0x0802e070

0800ceec <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800ceec:	b580      	push	{r7, lr}
 800ceee:	b082      	sub	sp, #8
 800cef0:	af00      	add	r7, sp, #0
 800cef2:	6078      	str	r0, [r7, #4]
 800cef4:	4a05      	ldr	r2, [pc, #20]	; (800cf0c <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800cef6:	687b      	ldr	r3, [r7, #4]
 800cef8:	601a      	str	r2, [r3, #0]
 800cefa:	687b      	ldr	r3, [r7, #4]
 800cefc:	4618      	mov	r0, r3
 800cefe:	f7fd fb21 	bl	800a544 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800cf02:	687b      	ldr	r3, [r7, #4]
 800cf04:	4618      	mov	r0, r3
 800cf06:	3708      	adds	r7, #8
 800cf08:	46bd      	mov	sp, r7
 800cf0a:	bd80      	pop	{r7, pc}
 800cf0c:	0802e070 	.word	0x0802e070

0800cf10 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800cf10:	b580      	push	{r7, lr}
 800cf12:	b082      	sub	sp, #8
 800cf14:	af00      	add	r7, sp, #0
 800cf16:	6078      	str	r0, [r7, #4]
 800cf18:	6878      	ldr	r0, [r7, #4]
 800cf1a:	f7ff ffe7 	bl	800ceec <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800cf1e:	2110      	movs	r1, #16
 800cf20:	6878      	ldr	r0, [r7, #4]
 800cf22:	f01d f974 	bl	802a20e <_ZdlPvj>
 800cf26:	687b      	ldr	r3, [r7, #4]
 800cf28:	4618      	mov	r0, r3
 800cf2a:	3708      	adds	r7, #8
 800cf2c:	46bd      	mov	sp, r7
 800cf2e:	bd80      	pop	{r7, pc}

0800cf30 <_ZN8touchgfx5ImageD1Ev>:
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 800cf30:	b580      	push	{r7, lr}
 800cf32:	b082      	sub	sp, #8
 800cf34:	af00      	add	r7, sp, #0
 800cf36:	6078      	str	r0, [r7, #4]
 800cf38:	4a05      	ldr	r2, [pc, #20]	; (800cf50 <_ZN8touchgfx5ImageD1Ev+0x20>)
 800cf3a:	687b      	ldr	r3, [r7, #4]
 800cf3c:	601a      	str	r2, [r3, #0]
 800cf3e:	687b      	ldr	r3, [r7, #4]
 800cf40:	4618      	mov	r0, r3
 800cf42:	f7fc fe29 	bl	8009b98 <_ZN8touchgfx6WidgetD1Ev>
 800cf46:	687b      	ldr	r3, [r7, #4]
 800cf48:	4618      	mov	r0, r3
 800cf4a:	3708      	adds	r7, #8
 800cf4c:	46bd      	mov	sp, r7
 800cf4e:	bd80      	pop	{r7, pc}
 800cf50:	0802f730 	.word	0x0802f730

0800cf54 <_ZN8touchgfx5ImageD0Ev>:
 800cf54:	b580      	push	{r7, lr}
 800cf56:	b082      	sub	sp, #8
 800cf58:	af00      	add	r7, sp, #0
 800cf5a:	6078      	str	r0, [r7, #4]
 800cf5c:	6878      	ldr	r0, [r7, #4]
 800cf5e:	f7ff ffe7 	bl	800cf30 <_ZN8touchgfx5ImageD1Ev>
 800cf62:	212c      	movs	r1, #44	; 0x2c
 800cf64:	6878      	ldr	r0, [r7, #4]
 800cf66:	f01d f952 	bl	802a20e <_ZdlPvj>
 800cf6a:	687b      	ldr	r3, [r7, #4]
 800cf6c:	4618      	mov	r0, r3
 800cf6e:	3708      	adds	r7, #8
 800cf70:	46bd      	mov	sp, r7
 800cf72:	bd80      	pop	{r7, pc}

0800cf74 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 * to implement a progress indicator. For more specific implementations see classes that
 * inherit from AbstractProgressIndicator.
 *
 * @see BoxProgress, CircleProgress, ImageProgress, LineProgress, TextProgress
 */
class AbstractProgressIndicator : public Container
 800cf74:	b580      	push	{r7, lr}
 800cf76:	b082      	sub	sp, #8
 800cf78:	af00      	add	r7, sp, #0
 800cf7a:	6078      	str	r0, [r7, #4]
 800cf7c:	4a0a      	ldr	r2, [pc, #40]	; (800cfa8 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev+0x34>)
 800cf7e:	687b      	ldr	r3, [r7, #4]
 800cf80:	601a      	str	r2, [r3, #0]
 800cf82:	687b      	ldr	r3, [r7, #4]
 800cf84:	3358      	adds	r3, #88	; 0x58
 800cf86:	4618      	mov	r0, r3
 800cf88:	f7fd fb40 	bl	800a60c <_ZN8touchgfx9ContainerD1Ev>
 800cf8c:	687b      	ldr	r3, [r7, #4]
 800cf8e:	332c      	adds	r3, #44	; 0x2c
 800cf90:	4618      	mov	r0, r3
 800cf92:	f7ff ffcd 	bl	800cf30 <_ZN8touchgfx5ImageD1Ev>
 800cf96:	687b      	ldr	r3, [r7, #4]
 800cf98:	4618      	mov	r0, r3
 800cf9a:	f7fd fb37 	bl	800a60c <_ZN8touchgfx9ContainerD1Ev>
 800cf9e:	687b      	ldr	r3, [r7, #4]
 800cfa0:	4618      	mov	r0, r3
 800cfa2:	3708      	adds	r7, #8
 800cfa4:	46bd      	mov	sp, r7
 800cfa6:	bd80      	pop	{r7, pc}
 800cfa8:	0802eb64 	.word	0x0802eb64

0800cfac <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800cfac:	b580      	push	{r7, lr}
 800cfae:	b082      	sub	sp, #8
 800cfb0:	af00      	add	r7, sp, #0
 800cfb2:	6078      	str	r0, [r7, #4]
 800cfb4:	6878      	ldr	r0, [r7, #4]
 800cfb6:	f7ff ffdd 	bl	800cf74 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>
 800cfba:	21b4      	movs	r1, #180	; 0xb4
 800cfbc:	6878      	ldr	r0, [r7, #4]
 800cfbe:	f01d f926 	bl	802a20e <_ZdlPvj>
 800cfc2:	687b      	ldr	r3, [r7, #4]
 800cfc4:	4618      	mov	r0, r3
 800cfc6:	3708      	adds	r7, #8
 800cfc8:	46bd      	mov	sp, r7
 800cfca:	bd80      	pop	{r7, pc}

0800cfcc <_ZN8touchgfx13TextureMapperD1Ev>:
 * @note The drawing of this widget is not trivial and typically has a significant performance
 *       penalty. The number of pixels drawn, the presence of global alpha or per pixel alpha
 *       inflicts the computation and should be considered.
 * @note This widget does not support 1 bit per pixel color depth.
 */
class TextureMapper : public Image
 800cfcc:	b580      	push	{r7, lr}
 800cfce:	b082      	sub	sp, #8
 800cfd0:	af00      	add	r7, sp, #0
 800cfd2:	6078      	str	r0, [r7, #4]
 800cfd4:	4a05      	ldr	r2, [pc, #20]	; (800cfec <_ZN8touchgfx13TextureMapperD1Ev+0x20>)
 800cfd6:	687b      	ldr	r3, [r7, #4]
 800cfd8:	601a      	str	r2, [r3, #0]
 800cfda:	687b      	ldr	r3, [r7, #4]
 800cfdc:	4618      	mov	r0, r3
 800cfde:	f7ff ffa7 	bl	800cf30 <_ZN8touchgfx5ImageD1Ev>
 800cfe2:	687b      	ldr	r3, [r7, #4]
 800cfe4:	4618      	mov	r0, r3
 800cfe6:	3708      	adds	r7, #8
 800cfe8:	46bd      	mov	sp, r7
 800cfea:	bd80      	pop	{r7, pc}
 800cfec:	0802f1e8 	.word	0x0802f1e8

0800cff0 <_ZN8touchgfx13TextureMapperD0Ev>:
 800cff0:	b580      	push	{r7, lr}
 800cff2:	b082      	sub	sp, #8
 800cff4:	af00      	add	r7, sp, #0
 800cff6:	6078      	str	r0, [r7, #4]
 800cff8:	6878      	ldr	r0, [r7, #4]
 800cffa:	f7ff ffe7 	bl	800cfcc <_ZN8touchgfx13TextureMapperD1Ev>
 800cffe:	2190      	movs	r1, #144	; 0x90
 800d000:	6878      	ldr	r0, [r7, #4]
 800d002:	f01d f904 	bl	802a20e <_ZdlPvj>
 800d006:	687b      	ldr	r3, [r7, #4]
 800d008:	4618      	mov	r0, r3
 800d00a:	3708      	adds	r7, #8
 800d00c:	46bd      	mov	sp, r7
 800d00e:	bd80      	pop	{r7, pc}

0800d010 <_ZN8touchgfx12CanvasWidgetD1Ev>:
 * Class for drawing complex polygons on the display using CanvasWidgetRenderer. The
 * CanvasWidget is used by passing it to a Canvas object, drawing the outline of the
 * object and then having CanvasWidget render the outline on the display using the
 * assigned painter.
 */
class CanvasWidget : public Widget
 800d010:	b580      	push	{r7, lr}
 800d012:	b082      	sub	sp, #8
 800d014:	af00      	add	r7, sp, #0
 800d016:	6078      	str	r0, [r7, #4]
 800d018:	4a05      	ldr	r2, [pc, #20]	; (800d030 <_ZN8touchgfx12CanvasWidgetD1Ev+0x20>)
 800d01a:	687b      	ldr	r3, [r7, #4]
 800d01c:	601a      	str	r2, [r3, #0]
 800d01e:	687b      	ldr	r3, [r7, #4]
 800d020:	4618      	mov	r0, r3
 800d022:	f7fc fdb9 	bl	8009b98 <_ZN8touchgfx6WidgetD1Ev>
 800d026:	687b      	ldr	r3, [r7, #4]
 800d028:	4618      	mov	r0, r3
 800d02a:	3708      	adds	r7, #8
 800d02c:	46bd      	mov	sp, r7
 800d02e:	bd80      	pop	{r7, pc}
 800d030:	0802f100 	.word	0x0802f100

0800d034 <_ZN8touchgfx12CanvasWidgetD0Ev>:
 800d034:	b580      	push	{r7, lr}
 800d036:	b082      	sub	sp, #8
 800d038:	af00      	add	r7, sp, #0
 800d03a:	6078      	str	r0, [r7, #4]
 800d03c:	6878      	ldr	r0, [r7, #4]
 800d03e:	f7ff ffe7 	bl	800d010 <_ZN8touchgfx12CanvasWidgetD1Ev>
 800d042:	212c      	movs	r1, #44	; 0x2c
 800d044:	6878      	ldr	r0, [r7, #4]
 800d046:	f01d f8e2 	bl	802a20e <_ZdlPvj>
 800d04a:	687b      	ldr	r3, [r7, #4]
 800d04c:	4618      	mov	r0, r3
 800d04e:	3708      	adds	r7, #8
 800d050:	46bd      	mov	sp, r7
 800d052:	bd80      	pop	{r7, pc}

0800d054 <_ZN8touchgfx6CircleD1Ev>:
 *            int x, y, r;
 *            circle.getCenter(&x, &y); // Will return (1, 1)
 *            circle.getRadius(&r); // Will return 0
 *       @endcode.
 */
class Circle : public CanvasWidget
 800d054:	b580      	push	{r7, lr}
 800d056:	b082      	sub	sp, #8
 800d058:	af00      	add	r7, sp, #0
 800d05a:	6078      	str	r0, [r7, #4]
 800d05c:	4a05      	ldr	r2, [pc, #20]	; (800d074 <_ZN8touchgfx6CircleD1Ev+0x20>)
 800d05e:	687b      	ldr	r3, [r7, #4]
 800d060:	601a      	str	r2, [r3, #0]
 800d062:	687b      	ldr	r3, [r7, #4]
 800d064:	4618      	mov	r0, r3
 800d066:	f7ff ffd3 	bl	800d010 <_ZN8touchgfx12CanvasWidgetD1Ev>
 800d06a:	687b      	ldr	r3, [r7, #4]
 800d06c:	4618      	mov	r0, r3
 800d06e:	3708      	adds	r7, #8
 800d070:	46bd      	mov	sp, r7
 800d072:	bd80      	pop	{r7, pc}
 800d074:	0802f088 	.word	0x0802f088

0800d078 <_ZN8touchgfx6CircleD0Ev>:
 800d078:	b580      	push	{r7, lr}
 800d07a:	b082      	sub	sp, #8
 800d07c:	af00      	add	r7, sp, #0
 800d07e:	6078      	str	r0, [r7, #4]
 800d080:	6878      	ldr	r0, [r7, #4]
 800d082:	f7ff ffe7 	bl	800d054 <_ZN8touchgfx6CircleD1Ev>
 800d086:	2148      	movs	r1, #72	; 0x48
 800d088:	6878      	ldr	r0, [r7, #4]
 800d08a:	f01d f8c0 	bl	802a20e <_ZdlPvj>
 800d08e:	687b      	ldr	r3, [r7, #4]
 800d090:	4618      	mov	r0, r3
 800d092:	3708      	adds	r7, #8
 800d094:	46bd      	mov	sp, r7
 800d096:	bd80      	pop	{r7, pc}

0800d098 <_ZN8touchgfx5GaugeD1Ev>:
 * Much like a progress indicator, the minimum and maximum value of the Gauge, as well as steps
 * can be set. For more information on this, consult the documentation on ProgressIndicators.
 *
 * A Gauge has a needle and optionally an arc that follows the needle.
 */
class Gauge : public AbstractProgressIndicator
 800d098:	b580      	push	{r7, lr}
 800d09a:	b082      	sub	sp, #8
 800d09c:	af00      	add	r7, sp, #0
 800d09e:	6078      	str	r0, [r7, #4]
 800d0a0:	4a0b      	ldr	r2, [pc, #44]	; (800d0d0 <_ZN8touchgfx5GaugeD1Ev+0x38>)
 800d0a2:	687b      	ldr	r3, [r7, #4]
 800d0a4:	601a      	str	r2, [r3, #0]
 800d0a6:	687b      	ldr	r3, [r7, #4]
 800d0a8:	f503 73ac 	add.w	r3, r3, #344	; 0x158
 800d0ac:	4618      	mov	r0, r3
 800d0ae:	f7ff ffd1 	bl	800d054 <_ZN8touchgfx6CircleD1Ev>
 800d0b2:	687b      	ldr	r3, [r7, #4]
 800d0b4:	33b4      	adds	r3, #180	; 0xb4
 800d0b6:	4618      	mov	r0, r3
 800d0b8:	f7ff ff88 	bl	800cfcc <_ZN8touchgfx13TextureMapperD1Ev>
 800d0bc:	687b      	ldr	r3, [r7, #4]
 800d0be:	4618      	mov	r0, r3
 800d0c0:	f7ff ff58 	bl	800cf74 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>
 800d0c4:	687b      	ldr	r3, [r7, #4]
 800d0c6:	4618      	mov	r0, r3
 800d0c8:	3708      	adds	r7, #8
 800d0ca:	46bd      	mov	sp, r7
 800d0cc:	bd80      	pop	{r7, pc}
 800d0ce:	bf00      	nop
 800d0d0:	0802f464 	.word	0x0802f464

0800d0d4 <_ZN8touchgfx5GaugeD0Ev>:
 800d0d4:	b580      	push	{r7, lr}
 800d0d6:	b082      	sub	sp, #8
 800d0d8:	af00      	add	r7, sp, #0
 800d0da:	6078      	str	r0, [r7, #4]
 800d0dc:	6878      	ldr	r0, [r7, #4]
 800d0de:	f7ff ffdb 	bl	800d098 <_ZN8touchgfx5GaugeD1Ev>
 800d0e2:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 800d0e6:	6878      	ldr	r0, [r7, #4]
 800d0e8:	f01d f891 	bl	802a20e <_ZdlPvj>
 800d0ec:	687b      	ldr	r3, [r7, #4]
 800d0ee:	4618      	mov	r0, r3
 800d0f0:	3708      	adds	r7, #8
 800d0f2:	46bd      	mov	sp, r7
 800d0f4:	bd80      	pop	{r7, pc}

0800d0f6 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800d0f6:	b580      	push	{r7, lr}
 800d0f8:	b082      	sub	sp, #8
 800d0fa:	af00      	add	r7, sp, #0
 800d0fc:	6078      	str	r0, [r7, #4]
 800d0fe:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800d100:	687b      	ldr	r3, [r7, #4]
 800d102:	685b      	ldr	r3, [r3, #4]
 800d104:	687a      	ldr	r2, [r7, #4]
 800d106:	68d2      	ldr	r2, [r2, #12]
 800d108:	1052      	asrs	r2, r2, #1
 800d10a:	1898      	adds	r0, r3, r2
 800d10c:	687b      	ldr	r3, [r7, #4]
 800d10e:	68db      	ldr	r3, [r3, #12]
 800d110:	f003 0301 	and.w	r3, r3, #1
 800d114:	2b00      	cmp	r3, #0
 800d116:	d102      	bne.n	800d11e <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800d118:	687b      	ldr	r3, [r7, #4]
 800d11a:	689b      	ldr	r3, [r3, #8]
 800d11c:	e00a      	b.n	800d134 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800d11e:	687b      	ldr	r3, [r7, #4]
 800d120:	685b      	ldr	r3, [r3, #4]
 800d122:	687a      	ldr	r2, [r7, #4]
 800d124:	68d2      	ldr	r2, [r2, #12]
 800d126:	1052      	asrs	r2, r2, #1
 800d128:	4413      	add	r3, r2
 800d12a:	681b      	ldr	r3, [r3, #0]
 800d12c:	687a      	ldr	r2, [r7, #4]
 800d12e:	6892      	ldr	r2, [r2, #8]
 800d130:	4413      	add	r3, r2
 800d132:	681b      	ldr	r3, [r3, #0]
 800d134:	6839      	ldr	r1, [r7, #0]
 800d136:	4798      	blx	r3
    }
 800d138:	bf00      	nop
 800d13a:	3708      	adds	r7, #8
 800d13c:	46bd      	mov	sp, r7
 800d13e:	bd80      	pop	{r7, pc}

0800d140 <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800d140:	b480      	push	{r7}
 800d142:	b083      	sub	sp, #12
 800d144:	af00      	add	r7, sp, #0
 800d146:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800d148:	687b      	ldr	r3, [r7, #4]
 800d14a:	685b      	ldr	r3, [r3, #4]
 800d14c:	2b00      	cmp	r3, #0
 800d14e:	d010      	beq.n	800d172 <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800d150:	687b      	ldr	r3, [r7, #4]
 800d152:	689b      	ldr	r3, [r3, #8]
 800d154:	2b00      	cmp	r3, #0
 800d156:	d107      	bne.n	800d168 <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800d158:	687b      	ldr	r3, [r7, #4]
 800d15a:	68db      	ldr	r3, [r3, #12]
 800d15c:	f003 0301 	and.w	r3, r3, #1
 800d160:	2b00      	cmp	r3, #0
 800d162:	d101      	bne.n	800d168 <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800d164:	2301      	movs	r3, #1
 800d166:	e000      	b.n	800d16a <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800d168:	2300      	movs	r3, #0
 800d16a:	2b01      	cmp	r3, #1
 800d16c:	d001      	beq.n	800d172 <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800d16e:	2301      	movs	r3, #1
 800d170:	e000      	b.n	800d174 <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800d172:	2300      	movs	r3, #0
    }
 800d174:	4618      	mov	r0, r3
 800d176:	370c      	adds	r7, #12
 800d178:	46bd      	mov	sp, r7
 800d17a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d17e:	4770      	bx	lr

0800d180 <_ZN8touchgfx9colortypeC1Ev>:
    colortype()
 800d180:	b480      	push	{r7}
 800d182:	b083      	sub	sp, #12
 800d184:	af00      	add	r7, sp, #0
 800d186:	6078      	str	r0, [r7, #4]
        : color(0)
 800d188:	687b      	ldr	r3, [r7, #4]
 800d18a:	2200      	movs	r2, #0
 800d18c:	601a      	str	r2, [r3, #0]
    }
 800d18e:	687b      	ldr	r3, [r7, #4]
 800d190:	4618      	mov	r0, r3
 800d192:	370c      	adds	r7, #12
 800d194:	46bd      	mov	sp, r7
 800d196:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d19a:	4770      	bx	lr

0800d19c <_ZNK8touchgfx10ClickEvent7getTypeEv>:
    /**
     * Gets the click type of this event.
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
 800d19c:	b480      	push	{r7}
 800d19e:	b083      	sub	sp, #12
 800d1a0:	af00      	add	r7, sp, #0
 800d1a2:	6078      	str	r0, [r7, #4]
    {
        return clickEventType;
 800d1a4:	687b      	ldr	r3, [r7, #4]
 800d1a6:	791b      	ldrb	r3, [r3, #4]
    }
 800d1a8:	4618      	mov	r0, r3
 800d1aa:	370c      	adds	r7, #12
 800d1ac:	46bd      	mov	sp, r7
 800d1ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d1b2:	4770      	bx	lr

0800d1b4 <_ZN8touchgfx8Drawable12setTouchableEb>:
    void setTouchable(bool touch)
 800d1b4:	b480      	push	{r7}
 800d1b6:	b083      	sub	sp, #12
 800d1b8:	af00      	add	r7, sp, #0
 800d1ba:	6078      	str	r0, [r7, #4]
 800d1bc:	460b      	mov	r3, r1
 800d1be:	70fb      	strb	r3, [r7, #3]
        touchable = touch;
 800d1c0:	687b      	ldr	r3, [r7, #4]
 800d1c2:	78fa      	ldrb	r2, [r7, #3]
 800d1c4:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
    }
 800d1c8:	bf00      	nop
 800d1ca:	370c      	adds	r7, #12
 800d1cc:	46bd      	mov	sp, r7
 800d1ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d1d2:	4770      	bx	lr

0800d1d4 <_ZN8touchgfx9ContainerC1Ev>:
{
public:
    Container()
 800d1d4:	b580      	push	{r7, lr}
 800d1d6:	b082      	sub	sp, #8
 800d1d8:	af00      	add	r7, sp, #0
 800d1da:	6078      	str	r0, [r7, #4]
        : Drawable(),
          firstChild(0)
 800d1dc:	687b      	ldr	r3, [r7, #4]
 800d1de:	4618      	mov	r0, r3
 800d1e0:	f7fc fa9a 	bl	8009718 <_ZN8touchgfx8DrawableC1Ev>
 800d1e4:	4a05      	ldr	r2, [pc, #20]	; (800d1fc <_ZN8touchgfx9ContainerC1Ev+0x28>)
 800d1e6:	687b      	ldr	r3, [r7, #4]
 800d1e8:	601a      	str	r2, [r3, #0]
 800d1ea:	687b      	ldr	r3, [r7, #4]
 800d1ec:	2200      	movs	r2, #0
 800d1ee:	629a      	str	r2, [r3, #40]	; 0x28
    {
    }
 800d1f0:	687b      	ldr	r3, [r7, #4]
 800d1f2:	4618      	mov	r0, r3
 800d1f4:	3708      	adds	r7, #8
 800d1f6:	46bd      	mov	sp, r7
 800d1f8:	bd80      	pop	{r7, pc}
 800d1fa:	bf00      	nop
 800d1fc:	0802ede8 	.word	0x0802ede8

0800d200 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @return Pointer to the first drawable added to this container. If nothing has been
     *         added return zero.
     *
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
 800d200:	b480      	push	{r7}
 800d202:	b083      	sub	sp, #12
 800d204:	af00      	add	r7, sp, #0
 800d206:	6078      	str	r0, [r7, #4]
    {
        return firstChild;
 800d208:	687b      	ldr	r3, [r7, #4]
 800d20a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 800d20c:	4618      	mov	r0, r3
 800d20e:	370c      	adds	r7, #12
 800d210:	46bd      	mov	sp, r7
 800d212:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d216:	4770      	bx	lr

0800d218 <_ZN8touchgfx3Box8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
 800d218:	b480      	push	{r7}
 800d21a:	b083      	sub	sp, #12
 800d21c:	af00      	add	r7, sp, #0
 800d21e:	6078      	str	r0, [r7, #4]
 800d220:	460b      	mov	r3, r1
 800d222:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800d224:	687b      	ldr	r3, [r7, #4]
 800d226:	78fa      	ldrb	r2, [r7, #3]
 800d228:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
    }
 800d22c:	bf00      	nop
 800d22e:	370c      	adds	r7, #12
 800d230:	46bd      	mov	sp, r7
 800d232:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d236:	4770      	bx	lr

0800d238 <_ZN8touchgfx23AbstractButtonContainerC1Ev>:
 * @see ClickButtonTrigger, RepeatButtonTrigger, ToggleButtonTrigger, TouchButtonTrigger
 */
class AbstractButtonContainer : public Container
{
public:
    AbstractButtonContainer()
 800d238:	b580      	push	{r7, lr}
 800d23a:	b082      	sub	sp, #8
 800d23c:	af00      	add	r7, sp, #0
 800d23e:	6078      	str	r0, [r7, #4]
        : pressed(false), alpha(255), action(0)
 800d240:	687b      	ldr	r3, [r7, #4]
 800d242:	4618      	mov	r0, r3
 800d244:	f7ff ffc6 	bl	800d1d4 <_ZN8touchgfx9ContainerC1Ev>
 800d248:	4a0b      	ldr	r2, [pc, #44]	; (800d278 <_ZN8touchgfx23AbstractButtonContainerC1Ev+0x40>)
 800d24a:	687b      	ldr	r3, [r7, #4]
 800d24c:	601a      	str	r2, [r3, #0]
 800d24e:	687b      	ldr	r3, [r7, #4]
 800d250:	2200      	movs	r2, #0
 800d252:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800d256:	687b      	ldr	r3, [r7, #4]
 800d258:	22ff      	movs	r2, #255	; 0xff
 800d25a:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800d25e:	687b      	ldr	r3, [r7, #4]
 800d260:	2200      	movs	r2, #0
 800d262:	631a      	str	r2, [r3, #48]	; 0x30
    {
        setTouchable(true);
 800d264:	687b      	ldr	r3, [r7, #4]
 800d266:	2101      	movs	r1, #1
 800d268:	4618      	mov	r0, r3
 800d26a:	f7ff ffa3 	bl	800d1b4 <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800d26e:	687b      	ldr	r3, [r7, #4]
 800d270:	4618      	mov	r0, r3
 800d272:	3708      	adds	r7, #8
 800d274:	46bd      	mov	sp, r7
 800d276:	bd80      	pop	{r7, pc}
 800d278:	0802e28c 	.word	0x0802e28c

0800d27c <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>:
     *
     * @param  isPressed True if is pressed, false if not.
     *
     * @see getPressed, handlePressedUpdated
     */
    void setPressed(bool isPressed)
 800d27c:	b580      	push	{r7, lr}
 800d27e:	b082      	sub	sp, #8
 800d280:	af00      	add	r7, sp, #0
 800d282:	6078      	str	r0, [r7, #4]
 800d284:	460b      	mov	r3, r1
 800d286:	70fb      	strb	r3, [r7, #3]
    {
        pressed = isPressed;
 800d288:	687b      	ldr	r3, [r7, #4]
 800d28a:	78fa      	ldrb	r2, [r7, #3]
 800d28c:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
        handlePressedUpdated();
 800d290:	687b      	ldr	r3, [r7, #4]
 800d292:	681b      	ldr	r3, [r3, #0]
 800d294:	338c      	adds	r3, #140	; 0x8c
 800d296:	681b      	ldr	r3, [r3, #0]
 800d298:	6878      	ldr	r0, [r7, #4]
 800d29a:	4798      	blx	r3
    }
 800d29c:	bf00      	nop
 800d29e:	3708      	adds	r7, #8
 800d2a0:	46bd      	mov	sp, r7
 800d2a2:	bd80      	pop	{r7, pc}

0800d2a4 <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>:
     *
     * @return True if it succeeds, false if it fails.
     *
     * @see setPressed
     */
    bool getPressed()
 800d2a4:	b480      	push	{r7}
 800d2a6:	b083      	sub	sp, #12
 800d2a8:	af00      	add	r7, sp, #0
 800d2aa:	6078      	str	r0, [r7, #4]
    {
        return pressed;
 800d2ac:	687b      	ldr	r3, [r7, #4]
 800d2ae:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
    }
 800d2b2:	4618      	mov	r0, r3
 800d2b4:	370c      	adds	r7, #12
 800d2b6:	46bd      	mov	sp, r7
 800d2b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d2bc:	4770      	bx	lr

0800d2be <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>:
        alpha = newAlpha;
        handleAlphaUpdated();
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
 800d2be:	b480      	push	{r7}
 800d2c0:	b083      	sub	sp, #12
 800d2c2:	af00      	add	r7, sp, #0
 800d2c4:	6078      	str	r0, [r7, #4]
    {
        return alpha;
 800d2c6:	687b      	ldr	r3, [r7, #4]
 800d2c8:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
    }
 800d2cc:	4618      	mov	r0, r3
 800d2ce:	370c      	adds	r7, #12
 800d2d0:	46bd      	mov	sp, r7
 800d2d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d2d6:	4770      	bx	lr

0800d2d8 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     *
     * @param  callback The callback.
     *
     * @see executeAction
     */
    void setAction(GenericCallback<const AbstractButtonContainer&>& callback)
 800d2d8:	b480      	push	{r7}
 800d2da:	b083      	sub	sp, #12
 800d2dc:	af00      	add	r7, sp, #0
 800d2de:	6078      	str	r0, [r7, #4]
 800d2e0:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800d2e2:	687b      	ldr	r3, [r7, #4]
 800d2e4:	683a      	ldr	r2, [r7, #0]
 800d2e6:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800d2e8:	bf00      	nop
 800d2ea:	370c      	adds	r7, #12
 800d2ec:	46bd      	mov	sp, r7
 800d2ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d2f2:	4770      	bx	lr

0800d2f4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 800d2f4:	b580      	push	{r7, lr}
 800d2f6:	b082      	sub	sp, #8
 800d2f8:	af00      	add	r7, sp, #0
 800d2fa:	6078      	str	r0, [r7, #4]
    {
        if (action && action->isValid())
 800d2fc:	687b      	ldr	r3, [r7, #4]
 800d2fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d300:	2b00      	cmp	r3, #0
 800d302:	d00d      	beq.n	800d320 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800d304:	687b      	ldr	r3, [r7, #4]
 800d306:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800d308:	687b      	ldr	r3, [r7, #4]
 800d30a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d30c:	681b      	ldr	r3, [r3, #0]
 800d30e:	330c      	adds	r3, #12
 800d310:	681b      	ldr	r3, [r3, #0]
 800d312:	4610      	mov	r0, r2
 800d314:	4798      	blx	r3
 800d316:	4603      	mov	r3, r0
 800d318:	2b00      	cmp	r3, #0
 800d31a:	d001      	beq.n	800d320 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800d31c:	2301      	movs	r3, #1
 800d31e:	e000      	b.n	800d322 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2e>
 800d320:	2300      	movs	r3, #0
 800d322:	2b00      	cmp	r3, #0
 800d324:	d009      	beq.n	800d33a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x46>
        {
            action->execute(*this);
 800d326:	687b      	ldr	r3, [r7, #4]
 800d328:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800d32a:	687b      	ldr	r3, [r7, #4]
 800d32c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d32e:	681b      	ldr	r3, [r3, #0]
 800d330:	3308      	adds	r3, #8
 800d332:	681b      	ldr	r3, [r3, #0]
 800d334:	6879      	ldr	r1, [r7, #4]
 800d336:	4610      	mov	r0, r2
 800d338:	4798      	blx	r3
        }
    }
 800d33a:	bf00      	nop
 800d33c:	3708      	adds	r7, #8
 800d33e:	46bd      	mov	sp, r7
 800d340:	bd80      	pop	{r7, pc}

0800d342 <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>:
    uint8_t alpha; ///< The current alpha value. 255 denotes solid, 0 denotes completely invisible.

    GenericCallback<const AbstractButtonContainer&>* action; ///< The action to be executed

    /** Handles what should happen when the pressed state is updated. */
    virtual void handlePressedUpdated()
 800d342:	b480      	push	{r7}
 800d344:	b083      	sub	sp, #12
 800d346:	af00      	add	r7, sp, #0
 800d348:	6078      	str	r0, [r7, #4]
    {
    }
 800d34a:	bf00      	nop
 800d34c:	370c      	adds	r7, #12
 800d34e:	46bd      	mov	sp, r7
 800d350:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d354:	4770      	bx	lr

0800d356 <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>:

    /** Handles what should happen when the alpha is updated. */
    virtual void handleAlphaUpdated()
 800d356:	b480      	push	{r7}
 800d358:	b083      	sub	sp, #12
 800d35a:	af00      	add	r7, sp, #0
 800d35c:	6078      	str	r0, [r7, #4]
    {
    }
 800d35e:	bf00      	nop
 800d360:	370c      	adds	r7, #12
 800d362:	46bd      	mov	sp, r7
 800d364:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d368:	4770      	bx	lr
	...

0800d36c <_ZN8touchgfx13BoxWithBorderC1Ev>:
 * BoxWithBorder will function just like a Box.
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
 800d36c:	b580      	push	{r7, lr}
 800d36e:	b082      	sub	sp, #8
 800d370:	af00      	add	r7, sp, #0
 800d372:	6078      	str	r0, [r7, #4]
        : Box(), borderColor(0), borderSize(0)
 800d374:	687b      	ldr	r3, [r7, #4]
 800d376:	4618      	mov	r0, r3
 800d378:	f7fc fc30 	bl	8009bdc <_ZN8touchgfx3BoxC1Ev>
 800d37c:	4a08      	ldr	r2, [pc, #32]	; (800d3a0 <_ZN8touchgfx13BoxWithBorderC1Ev+0x34>)
 800d37e:	687b      	ldr	r3, [r7, #4]
 800d380:	601a      	str	r2, [r3, #0]
 800d382:	687b      	ldr	r3, [r7, #4]
 800d384:	332c      	adds	r3, #44	; 0x2c
 800d386:	2100      	movs	r1, #0
 800d388:	4618      	mov	r0, r3
 800d38a:	f7fc f96f 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800d38e:	687b      	ldr	r3, [r7, #4]
 800d390:	2200      	movs	r2, #0
 800d392:	861a      	strh	r2, [r3, #48]	; 0x30
    {
    }
 800d394:	687b      	ldr	r3, [r7, #4]
 800d396:	4618      	mov	r0, r3
 800d398:	3708      	adds	r7, #8
 800d39a:	46bd      	mov	sp, r7
 800d39c:	bd80      	pop	{r7, pc}
 800d39e:	bf00      	nop
 800d3a0:	0802f650 	.word	0x0802f650

0800d3a4 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>:
     *
     * @param  colorBorder The color of the border.
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
 800d3a4:	b480      	push	{r7}
 800d3a6:	b083      	sub	sp, #12
 800d3a8:	af00      	add	r7, sp, #0
 800d3aa:	6078      	str	r0, [r7, #4]
 800d3ac:	6039      	str	r1, [r7, #0]
    {
        borderColor = colorBorder;
 800d3ae:	687b      	ldr	r3, [r7, #4]
 800d3b0:	683a      	ldr	r2, [r7, #0]
 800d3b2:	62da      	str	r2, [r3, #44]	; 0x2c
    }
 800d3b4:	bf00      	nop
 800d3b6:	370c      	adds	r7, #12
 800d3b8:	46bd      	mov	sp, r7
 800d3ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3be:	4770      	bx	lr

0800d3c0 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>:
     *
     * @param  size The width of the border.
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
 800d3c0:	b480      	push	{r7}
 800d3c2:	b083      	sub	sp, #12
 800d3c4:	af00      	add	r7, sp, #0
 800d3c6:	6078      	str	r0, [r7, #4]
 800d3c8:	460b      	mov	r3, r1
 800d3ca:	807b      	strh	r3, [r7, #2]
    {
        borderSize = size;
 800d3cc:	687b      	ldr	r3, [r7, #4]
 800d3ce:	887a      	ldrh	r2, [r7, #2]
 800d3d0:	861a      	strh	r2, [r3, #48]	; 0x30
    }
 800d3d2:	bf00      	nop
 800d3d4:	370c      	adds	r7, #12
 800d3d6:	46bd      	mov	sp, r7
 800d3d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3dc:	4770      	bx	lr

0800d3de <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800d3de:	b580      	push	{r7, lr}
 800d3e0:	b084      	sub	sp, #16
 800d3e2:	af00      	add	r7, sp, #0
 800d3e4:	6078      	str	r0, [r7, #4]
 800d3e6:	6039      	str	r1, [r7, #0]
    {
        bool wasPressed = getPressed();
 800d3e8:	687b      	ldr	r3, [r7, #4]
 800d3ea:	4618      	mov	r0, r3
 800d3ec:	f7ff ff5a 	bl	800d2a4 <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800d3f0:	4603      	mov	r3, r0
 800d3f2:	73fb      	strb	r3, [r7, #15]
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 800d3f4:	6838      	ldr	r0, [r7, #0]
 800d3f6:	f7ff fed1 	bl	800d19c <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800d3fa:	4603      	mov	r3, r0
 800d3fc:	2b00      	cmp	r3, #0
 800d3fe:	bf0c      	ite	eq
 800d400:	2301      	moveq	r3, #1
 800d402:	2300      	movne	r3, #0
 800d404:	73bb      	strb	r3, [r7, #14]
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800d406:	7bbb      	ldrb	r3, [r7, #14]
 800d408:	2b00      	cmp	r3, #0
 800d40a:	d005      	beq.n	800d418 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3a>
 800d40c:	7bfb      	ldrb	r3, [r7, #15]
 800d40e:	f083 0301 	eor.w	r3, r3, #1
 800d412:	b2db      	uxtb	r3, r3
 800d414:	2b00      	cmp	r3, #0
 800d416:	d108      	bne.n	800d42a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x4c>
 800d418:	7bbb      	ldrb	r3, [r7, #14]
 800d41a:	f083 0301 	eor.w	r3, r3, #1
 800d41e:	b2db      	uxtb	r3, r3
 800d420:	2b00      	cmp	r3, #0
 800d422:	d00f      	beq.n	800d444 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
 800d424:	7bfb      	ldrb	r3, [r7, #15]
 800d426:	2b00      	cmp	r3, #0
 800d428:	d00c      	beq.n	800d444 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
        {
            setPressed(newPressedValue);
 800d42a:	687b      	ldr	r3, [r7, #4]
 800d42c:	7bba      	ldrb	r2, [r7, #14]
 800d42e:	4611      	mov	r1, r2
 800d430:	4618      	mov	r0, r3
 800d432:	f7ff ff23 	bl	800d27c <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>
            invalidate();
 800d436:	687a      	ldr	r2, [r7, #4]
 800d438:	687b      	ldr	r3, [r7, #4]
 800d43a:	681b      	ldr	r3, [r3, #0]
 800d43c:	3314      	adds	r3, #20
 800d43e:	681b      	ldr	r3, [r3, #0]
 800d440:	4610      	mov	r0, r2
 800d442:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 800d444:	7bfb      	ldrb	r3, [r7, #15]
 800d446:	2b00      	cmp	r3, #0
 800d448:	d007      	beq.n	800d45a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800d44a:	6838      	ldr	r0, [r7, #0]
 800d44c:	f7ff fea6 	bl	800d19c <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800d450:	4603      	mov	r3, r0
 800d452:	2b01      	cmp	r3, #1
 800d454:	d101      	bne.n	800d45a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800d456:	2301      	movs	r3, #1
 800d458:	e000      	b.n	800d45c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7e>
 800d45a:	2300      	movs	r3, #0
 800d45c:	2b00      	cmp	r3, #0
 800d45e:	d006      	beq.n	800d46e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x90>
        {
            executeAction();
 800d460:	687a      	ldr	r2, [r7, #4]
 800d462:	687b      	ldr	r3, [r7, #4]
 800d464:	681b      	ldr	r3, [r3, #0]
 800d466:	3388      	adds	r3, #136	; 0x88
 800d468:	681b      	ldr	r3, [r3, #0]
 800d46a:	4610      	mov	r0, r2
 800d46c:	4798      	blx	r3
        }
    }
 800d46e:	bf00      	nop
 800d470:	3710      	adds	r7, #16
 800d472:	46bd      	mov	sp, r7
 800d474:	bd80      	pop	{r7, pc}
	...

0800d478 <_ZN8touchgfx23AbstractButtonContainerD1Ev>:
class AbstractButtonContainer : public Container
 800d478:	b580      	push	{r7, lr}
 800d47a:	b082      	sub	sp, #8
 800d47c:	af00      	add	r7, sp, #0
 800d47e:	6078      	str	r0, [r7, #4]
 800d480:	4a05      	ldr	r2, [pc, #20]	; (800d498 <_ZN8touchgfx23AbstractButtonContainerD1Ev+0x20>)
 800d482:	687b      	ldr	r3, [r7, #4]
 800d484:	601a      	str	r2, [r3, #0]
 800d486:	687b      	ldr	r3, [r7, #4]
 800d488:	4618      	mov	r0, r3
 800d48a:	f7fd f8bf 	bl	800a60c <_ZN8touchgfx9ContainerD1Ev>
 800d48e:	687b      	ldr	r3, [r7, #4]
 800d490:	4618      	mov	r0, r3
 800d492:	3708      	adds	r7, #8
 800d494:	46bd      	mov	sp, r7
 800d496:	bd80      	pop	{r7, pc}
 800d498:	0802e28c 	.word	0x0802e28c

0800d49c <_ZN8touchgfx23AbstractButtonContainerD0Ev>:
 800d49c:	b580      	push	{r7, lr}
 800d49e:	b082      	sub	sp, #8
 800d4a0:	af00      	add	r7, sp, #0
 800d4a2:	6078      	str	r0, [r7, #4]
 800d4a4:	6878      	ldr	r0, [r7, #4]
 800d4a6:	f7ff ffe7 	bl	800d478 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800d4aa:	2134      	movs	r1, #52	; 0x34
 800d4ac:	6878      	ldr	r0, [r7, #4]
 800d4ae:	f01c feae 	bl	802a20e <_ZdlPvj>
 800d4b2:	687b      	ldr	r3, [r7, #4]
 800d4b4:	4618      	mov	r0, r3
 800d4b6:	3708      	adds	r7, #8
 800d4b8:	46bd      	mov	sp, r7
 800d4ba:	bd80      	pop	{r7, pc}

0800d4bc <_ZN18MainScreenViewBase11applicationEv>:
    MainScreenViewBase();
    virtual ~MainScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800d4bc:	b580      	push	{r7, lr}
 800d4be:	b082      	sub	sp, #8
 800d4c0:	af00      	add	r7, sp, #0
 800d4c2:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800d4c4:	f00b fc46 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 800d4c8:	4603      	mov	r3, r0
    }
 800d4ca:	4618      	mov	r0, r3
 800d4cc:	3708      	adds	r7, #8
 800d4ce:	46bd      	mov	sp, r7
 800d4d0:	bd80      	pop	{r7, pc}
	...

0800d4d4 <_ZN8touchgfx4ViewI19MainScreenPresenterED1Ev>:
class View : public Screen
 800d4d4:	b580      	push	{r7, lr}
 800d4d6:	b082      	sub	sp, #8
 800d4d8:	af00      	add	r7, sp, #0
 800d4da:	6078      	str	r0, [r7, #4]
 800d4dc:	4a05      	ldr	r2, [pc, #20]	; (800d4f4 <_ZN8touchgfx4ViewI19MainScreenPresenterED1Ev+0x20>)
 800d4de:	687b      	ldr	r3, [r7, #4]
 800d4e0:	601a      	str	r2, [r3, #0]
 800d4e2:	687b      	ldr	r3, [r7, #4]
 800d4e4:	4618      	mov	r0, r3
 800d4e6:	f7fc fabb 	bl	8009a60 <_ZN8touchgfx6ScreenD1Ev>
 800d4ea:	687b      	ldr	r3, [r7, #4]
 800d4ec:	4618      	mov	r0, r3
 800d4ee:	3708      	adds	r7, #8
 800d4f0:	46bd      	mov	sp, r7
 800d4f2:	bd80      	pop	{r7, pc}
 800d4f4:	0802e1a4 	.word	0x0802e1a4

0800d4f8 <_ZN8touchgfx4ViewI19MainScreenPresenterED0Ev>:
 800d4f8:	b580      	push	{r7, lr}
 800d4fa:	b082      	sub	sp, #8
 800d4fc:	af00      	add	r7, sp, #0
 800d4fe:	6078      	str	r0, [r7, #4]
 800d500:	6878      	ldr	r0, [r7, #4]
 800d502:	f7ff ffe7 	bl	800d4d4 <_ZN8touchgfx4ViewI19MainScreenPresenterED1Ev>
 800d506:	2140      	movs	r1, #64	; 0x40
 800d508:	6878      	ldr	r0, [r7, #4]
 800d50a:	f01c fe80 	bl	802a20e <_ZdlPvj>
 800d50e:	687b      	ldr	r3, [r7, #4]
 800d510:	4618      	mov	r0, r3
 800d512:	3708      	adds	r7, #8
 800d514:	46bd      	mov	sp, r7
 800d516:	bd80      	pop	{r7, pc}

0800d518 <_ZN18MainScreenViewBaseC1Ev>:
/*********************************************************************************/
#include <gui_generated/mainscreen_screen/MainScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainScreenViewBase::MainScreenViewBase() :
 800d518:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d51c:	b0d8      	sub	sp, #352	; 0x160
 800d51e:	af02      	add	r7, sp, #8
 800d520:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d524:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d528:	6018      	str	r0, [r3, #0]
    flexButtonCallback(this, &MainScreenViewBase::flexButtonCallbackHandler)
 800d52a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d52e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d532:	681b      	ldr	r3, [r3, #0]
 800d534:	4618      	mov	r0, r3
 800d536:	f001 f83b 	bl	800e5b0 <_ZN8touchgfx4ViewI19MainScreenPresenterEC1Ev>
 800d53a:	4ae8      	ldr	r2, [pc, #928]	; (800d8dc <_ZN18MainScreenViewBaseC1Ev+0x3c4>)
 800d53c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d540:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d544:	681b      	ldr	r3, [r3, #0]
 800d546:	601a      	str	r2, [r3, #0]
 800d548:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d54c:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d550:	681b      	ldr	r3, [r3, #0]
 800d552:	3340      	adds	r3, #64	; 0x40
 800d554:	4618      	mov	r0, r3
 800d556:	f7fc fb41 	bl	8009bdc <_ZN8touchgfx3BoxC1Ev>
 800d55a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d55e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d562:	681b      	ldr	r3, [r3, #0]
 800d564:	336c      	adds	r3, #108	; 0x6c
 800d566:	4618      	mov	r0, r3
 800d568:	f7fc fb80 	bl	8009c6c <_ZN8touchgfx8TextAreaC1Ev>
 800d56c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d570:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d574:	681b      	ldr	r3, [r3, #0]
 800d576:	33b4      	adds	r3, #180	; 0xb4
 800d578:	4618      	mov	r0, r3
 800d57a:	f001 f885 	bl	800e688 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800d57e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d582:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d586:	681b      	ldr	r3, [r3, #0]
 800d588:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800d58c:	4618      	mov	r0, r3
 800d58e:	f001 f87b 	bl	800e688 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800d592:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d596:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d59a:	681b      	ldr	r3, [r3, #0]
 800d59c:	f503 73d2 	add.w	r3, r3, #420	; 0x1a4
 800d5a0:	4618      	mov	r0, r3
 800d5a2:	f001 f871 	bl	800e688 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800d5a6:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d5aa:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d5ae:	681b      	ldr	r3, [r3, #0]
 800d5b0:	f503 7307 	add.w	r3, r3, #540	; 0x21c
 800d5b4:	4618      	mov	r0, r3
 800d5b6:	f001 f867 	bl	800e688 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800d5ba:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d5be:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d5c2:	681b      	ldr	r3, [r3, #0]
 800d5c4:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800d5c8:	4618      	mov	r0, r3
 800d5ca:	f7fc fb4f 	bl	8009c6c <_ZN8touchgfx8TextAreaC1Ev>
 800d5ce:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d5d2:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d5d6:	681b      	ldr	r3, [r3, #0]
 800d5d8:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800d5dc:	4618      	mov	r0, r3
 800d5de:	f7fc fb45 	bl	8009c6c <_ZN8touchgfx8TextAreaC1Ev>
 800d5e2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d5e6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d5ea:	681b      	ldr	r3, [r3, #0]
 800d5ec:	f503 7349 	add.w	r3, r3, #804	; 0x324
 800d5f0:	4618      	mov	r0, r3
 800d5f2:	f7fc fb3b 	bl	8009c6c <_ZN8touchgfx8TextAreaC1Ev>
 800d5f6:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d5fa:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d5fe:	681b      	ldr	r3, [r3, #0]
 800d600:	f503 735b 	add.w	r3, r3, #876	; 0x36c
 800d604:	4618      	mov	r0, r3
 800d606:	f7fc fb31 	bl	8009c6c <_ZN8touchgfx8TextAreaC1Ev>
 800d60a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d60e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d612:	681b      	ldr	r3, [r3, #0]
 800d614:	f503 736d 	add.w	r3, r3, #948	; 0x3b4
 800d618:	4618      	mov	r0, r3
 800d61a:	f7fc fb27 	bl	8009c6c <_ZN8touchgfx8TextAreaC1Ev>
 800d61e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d622:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d626:	681b      	ldr	r3, [r3, #0]
 800d628:	f503 707f 	add.w	r0, r3, #1020	; 0x3fc
 800d62c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d630:	f5a3 7394 	sub.w	r3, r3, #296	; 0x128
 800d634:	4aaa      	ldr	r2, [pc, #680]	; (800d8e0 <_ZN18MainScreenViewBaseC1Ev+0x3c8>)
 800d636:	601a      	str	r2, [r3, #0]
 800d638:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d63c:	f5a3 7394 	sub.w	r3, r3, #296	; 0x128
 800d640:	2200      	movs	r2, #0
 800d642:	605a      	str	r2, [r3, #4]
 800d644:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d648:	f5a3 7394 	sub.w	r3, r3, #296	; 0x128
 800d64c:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800d650:	f5a2 71a2 	sub.w	r1, r2, #324	; 0x144
 800d654:	cb0c      	ldmia	r3, {r2, r3}
 800d656:	6809      	ldr	r1, [r1, #0]
 800d658:	f001 f866 	bl	800e728 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800d65c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d660:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d664:	681b      	ldr	r3, [r3, #0]
 800d666:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800d66a:	23f0      	movs	r3, #240	; 0xf0
 800d66c:	9300      	str	r3, [sp, #0]
 800d66e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800d672:	2200      	movs	r2, #0
 800d674:	2100      	movs	r1, #0
 800d676:	f7fc f8bd 	bl	80097f4 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800d67a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d67e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d682:	681b      	ldr	r3, [r3, #0]
 800d684:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800d688:	2300      	movs	r3, #0
 800d68a:	f887 30c8 	strb.w	r3, [r7, #200]	; 0xc8
 800d68e:	2300      	movs	r3, #0
 800d690:	f887 30c7 	strb.w	r3, [r7, #199]	; 0xc7
 800d694:	2300      	movs	r3, #0
 800d696:	f887 30c6 	strb.w	r3, [r7, #198]	; 0xc6
 800d69a:	f897 30c8 	ldrb.w	r3, [r7, #200]	; 0xc8
 800d69e:	041b      	lsls	r3, r3, #16
 800d6a0:	461a      	mov	r2, r3
 800d6a2:	f897 30c7 	ldrb.w	r3, [r7, #199]	; 0xc7
 800d6a6:	021b      	lsls	r3, r3, #8
 800d6a8:	431a      	orrs	r2, r3
 800d6aa:	f897 30c6 	ldrb.w	r3, [r7, #198]	; 0xc6
 800d6ae:	4313      	orrs	r3, r2
 800d6b0:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800d6b4:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
 800d6b8:	4611      	mov	r1, r2
 800d6ba:	4618      	mov	r0, r3
 800d6bc:	f7fb ffd6 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800d6c0:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 800d6c4:	4619      	mov	r1, r3
 800d6c6:	4620      	mov	r0, r4
 800d6c8:	f7fc faac 	bl	8009c24 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800d6cc:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d6d0:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d6d4:	681a      	ldr	r2, [r3, #0]
 800d6d6:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d6da:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d6de:	681b      	ldr	r3, [r3, #0]
 800d6e0:	3340      	adds	r3, #64	; 0x40
 800d6e2:	4619      	mov	r1, r3
 800d6e4:	4610      	mov	r0, r2
 800d6e6:	f7fc fa13 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    CarSystem_text_1.setXY(44, 0);
 800d6ea:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d6ee:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d6f2:	681b      	ldr	r3, [r3, #0]
 800d6f4:	336c      	adds	r3, #108	; 0x6c
 800d6f6:	2200      	movs	r2, #0
 800d6f8:	212c      	movs	r1, #44	; 0x2c
 800d6fa:	4618      	mov	r0, r3
 800d6fc:	f7fc f8b9 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
    CarSystem_text_1.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
 800d700:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d704:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d708:	681b      	ldr	r3, [r3, #0]
 800d70a:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800d70e:	23f2      	movs	r3, #242	; 0xf2
 800d710:	f887 30cb 	strb.w	r3, [r7, #203]	; 0xcb
 800d714:	23ae      	movs	r3, #174	; 0xae
 800d716:	f887 30ca 	strb.w	r3, [r7, #202]	; 0xca
 800d71a:	23ae      	movs	r3, #174	; 0xae
 800d71c:	f887 30c9 	strb.w	r3, [r7, #201]	; 0xc9
 800d720:	f897 30cb 	ldrb.w	r3, [r7, #203]	; 0xcb
 800d724:	041b      	lsls	r3, r3, #16
 800d726:	461a      	mov	r2, r3
 800d728:	f897 30ca 	ldrb.w	r3, [r7, #202]	; 0xca
 800d72c:	021b      	lsls	r3, r3, #8
 800d72e:	431a      	orrs	r2, r3
 800d730:	f897 30c9 	ldrb.w	r3, [r7, #201]	; 0xc9
 800d734:	4313      	orrs	r3, r2
 800d736:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800d73a:	f107 03bc 	add.w	r3, r7, #188	; 0xbc
 800d73e:	4611      	mov	r1, r2
 800d740:	4618      	mov	r0, r3
 800d742:	f7fb ff93 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800d746:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
 800d74a:	461a      	mov	r2, r3
 800d74c:	f8c7 40cc 	str.w	r4, [r7, #204]	; 0xcc
 800d750:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d754:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800d758:	601a      	str	r2, [r3, #0]
        color = newColor;
 800d75a:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 800d75e:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800d762:	f5a2 7296 	sub.w	r2, r2, #300	; 0x12c
 800d766:	6812      	ldr	r2, [r2, #0]
 800d768:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800d76a:	bf00      	nop
    CarSystem_text_1.setLinespacing(0);
 800d76c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d770:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d774:	681b      	ldr	r3, [r3, #0]
 800d776:	336c      	adds	r3, #108	; 0x6c
 800d778:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800d77c:	2300      	movs	r3, #0
 800d77e:	f8a7 30d2 	strh.w	r3, [r7, #210]	; 0xd2
        linespace = space;
 800d782:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800d786:	f8b7 20d2 	ldrh.w	r2, [r7, #210]	; 0xd2
 800d78a:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800d78c:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800d790:	681b      	ldr	r3, [r3, #0]
 800d792:	3384      	adds	r3, #132	; 0x84
 800d794:	681b      	ldr	r3, [r3, #0]
 800d796:	f8d7 40d4 	ldr.w	r4, [r7, #212]	; 0xd4
 800d79a:	463a      	mov	r2, r7
 800d79c:	f8d7 10d4 	ldr.w	r1, [r7, #212]	; 0xd4
 800d7a0:	4610      	mov	r0, r2
 800d7a2:	4798      	blx	r3
 800d7a4:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d7a8:	f5a3 72ac 	sub.w	r2, r3, #344	; 0x158
 800d7ac:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800d7b0:	ca07      	ldmia	r2, {r0, r1, r2}
 800d7b2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800d7b6:	bf00      	nop
    CarSystem_text_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HO17));
 800d7b8:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d7bc:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d7c0:	681b      	ldr	r3, [r3, #0]
 800d7c2:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800d7c6:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800d7ca:	2109      	movs	r1, #9
 800d7cc:	4618      	mov	r0, r3
 800d7ce:	f7fc fa37 	bl	8009c40 <_ZN8touchgfx9TypedTextC1Et>
 800d7d2:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800d7d6:	4619      	mov	r1, r3
 800d7d8:	4620      	mov	r0, r4
 800d7da:	f008 fa8b 	bl	8015cf4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800d7de:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800d7e2:	4618      	mov	r0, r3
 800d7e4:	f7fb fd5a 	bl	800929c <_ZN8touchgfx9TypedTextD1Ev>
    add(CarSystem_text_1);
 800d7e8:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d7ec:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d7f0:	681a      	ldr	r2, [r3, #0]
 800d7f2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d7f6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d7fa:	681b      	ldr	r3, [r3, #0]
 800d7fc:	336c      	adds	r3, #108	; 0x6c
 800d7fe:	4619      	mov	r1, r3
 800d800:	4610      	mov	r0, r2
 800d802:	f7fc f985 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Clock_button.setBoxWithBorderPosition(0, 0, 160, 50);
 800d806:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d80a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d80e:	681b      	ldr	r3, [r3, #0]
 800d810:	f103 00b4 	add.w	r0, r3, #180	; 0xb4
 800d814:	2332      	movs	r3, #50	; 0x32
 800d816:	9300      	str	r3, [sp, #0]
 800d818:	23a0      	movs	r3, #160	; 0xa0
 800d81a:	2200      	movs	r2, #0
 800d81c:	2100      	movs	r1, #0
 800d81e:	f000 ffa3 	bl	800e768 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    Clock_button.setBorderSize(5);
 800d822:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d826:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d82a:	681b      	ldr	r3, [r3, #0]
 800d82c:	33b4      	adds	r3, #180	; 0xb4
 800d82e:	2105      	movs	r1, #5
 800d830:	4618      	mov	r0, r3
 800d832:	f000 ffb9 	bl	800e7a8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    Clock_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800d836:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d83a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d83e:	681b      	ldr	r3, [r3, #0]
 800d840:	f103 04b4 	add.w	r4, r3, #180	; 0xb4
 800d844:	2300      	movs	r3, #0
 800d846:	f887 30db 	strb.w	r3, [r7, #219]	; 0xdb
 800d84a:	2366      	movs	r3, #102	; 0x66
 800d84c:	f887 30da 	strb.w	r3, [r7, #218]	; 0xda
 800d850:	2399      	movs	r3, #153	; 0x99
 800d852:	f887 30d9 	strb.w	r3, [r7, #217]	; 0xd9
 800d856:	f897 30db 	ldrb.w	r3, [r7, #219]	; 0xdb
 800d85a:	041b      	lsls	r3, r3, #16
 800d85c:	461a      	mov	r2, r3
 800d85e:	f897 30da 	ldrb.w	r3, [r7, #218]	; 0xda
 800d862:	021b      	lsls	r3, r3, #8
 800d864:	431a      	orrs	r2, r3
 800d866:	f897 30d9 	ldrb.w	r3, [r7, #217]	; 0xd9
 800d86a:	4313      	orrs	r3, r2
 800d86c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800d870:	f107 03b8 	add.w	r3, r7, #184	; 0xb8
 800d874:	4611      	mov	r1, r2
 800d876:	4618      	mov	r0, r3
 800d878:	f7fb fef8 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800d87c:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 800d880:	461d      	mov	r5, r3
 800d882:	2300      	movs	r3, #0
 800d884:	f887 30de 	strb.w	r3, [r7, #222]	; 0xde
 800d888:	2399      	movs	r3, #153	; 0x99
 800d88a:	f887 30dd 	strb.w	r3, [r7, #221]	; 0xdd
 800d88e:	23cc      	movs	r3, #204	; 0xcc
 800d890:	f887 30dc 	strb.w	r3, [r7, #220]	; 0xdc
 800d894:	f897 30de 	ldrb.w	r3, [r7, #222]	; 0xde
 800d898:	041b      	lsls	r3, r3, #16
 800d89a:	461a      	mov	r2, r3
 800d89c:	f897 30dd 	ldrb.w	r3, [r7, #221]	; 0xdd
 800d8a0:	021b      	lsls	r3, r3, #8
 800d8a2:	431a      	orrs	r2, r3
 800d8a4:	f897 30dc 	ldrb.w	r3, [r7, #220]	; 0xdc
 800d8a8:	4313      	orrs	r3, r2
 800d8aa:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800d8ae:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800d8b2:	4611      	mov	r1, r2
 800d8b4:	4618      	mov	r0, r3
 800d8b6:	f7fb fed9 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800d8ba:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 800d8be:	461e      	mov	r6, r3
 800d8c0:	2300      	movs	r3, #0
 800d8c2:	f887 30e1 	strb.w	r3, [r7, #225]	; 0xe1
 800d8c6:	2333      	movs	r3, #51	; 0x33
 800d8c8:	f887 30e0 	strb.w	r3, [r7, #224]	; 0xe0
 800d8cc:	2366      	movs	r3, #102	; 0x66
 800d8ce:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 800d8d2:	f897 30e1 	ldrb.w	r3, [r7, #225]	; 0xe1
 800d8d6:	041b      	lsls	r3, r3, #16
 800d8d8:	461a      	mov	r2, r3
 800d8da:	e003      	b.n	800d8e4 <_ZN18MainScreenViewBaseC1Ev+0x3cc>
 800d8dc:	0802e0bc 	.word	0x0802e0bc
 800d8e0:	0800e537 	.word	0x0800e537
 800d8e4:	f897 30e0 	ldrb.w	r3, [r7, #224]	; 0xe0
 800d8e8:	021b      	lsls	r3, r3, #8
 800d8ea:	431a      	orrs	r2, r3
 800d8ec:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 800d8f0:	4313      	orrs	r3, r2
 800d8f2:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800d8f6:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
 800d8fa:	4611      	mov	r1, r2
 800d8fc:	4618      	mov	r0, r3
 800d8fe:	f7fb feb5 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800d902:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 800d906:	4698      	mov	r8, r3
 800d908:	2333      	movs	r3, #51	; 0x33
 800d90a:	f887 30e4 	strb.w	r3, [r7, #228]	; 0xe4
 800d90e:	2366      	movs	r3, #102	; 0x66
 800d910:	f887 30e3 	strb.w	r3, [r7, #227]	; 0xe3
 800d914:	2399      	movs	r3, #153	; 0x99
 800d916:	f887 30e2 	strb.w	r3, [r7, #226]	; 0xe2
 800d91a:	f897 30e4 	ldrb.w	r3, [r7, #228]	; 0xe4
 800d91e:	041b      	lsls	r3, r3, #16
 800d920:	461a      	mov	r2, r3
 800d922:	f897 30e3 	ldrb.w	r3, [r7, #227]	; 0xe3
 800d926:	021b      	lsls	r3, r3, #8
 800d928:	431a      	orrs	r2, r3
 800d92a:	f897 30e2 	ldrb.w	r3, [r7, #226]	; 0xe2
 800d92e:	4313      	orrs	r3, r2
 800d930:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800d934:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 800d938:	4611      	mov	r1, r2
 800d93a:	4618      	mov	r0, r3
 800d93c:	f7fb fe96 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800d940:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800d944:	9300      	str	r3, [sp, #0]
 800d946:	4643      	mov	r3, r8
 800d948:	4632      	mov	r2, r6
 800d94a:	4629      	mov	r1, r5
 800d94c:	4620      	mov	r0, r4
 800d94e:	f000 ff3d 	bl	800e7cc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Clock_button.setAction(flexButtonCallback);
 800d952:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d956:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d95a:	681b      	ldr	r3, [r3, #0]
 800d95c:	f103 02b4 	add.w	r2, r3, #180	; 0xb4
 800d960:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d964:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d968:	681b      	ldr	r3, [r3, #0]
 800d96a:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 800d96e:	4619      	mov	r1, r3
 800d970:	4610      	mov	r0, r2
 800d972:	f7ff fcb1 	bl	800d2d8 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    Clock_button.setPosition(0, 70, 160, 50);
 800d976:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d97a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d97e:	681b      	ldr	r3, [r3, #0]
 800d980:	f103 00b4 	add.w	r0, r3, #180	; 0xb4
 800d984:	2332      	movs	r3, #50	; 0x32
 800d986:	9300      	str	r3, [sp, #0]
 800d988:	23a0      	movs	r3, #160	; 0xa0
 800d98a:	2246      	movs	r2, #70	; 0x46
 800d98c:	2100      	movs	r1, #0
 800d98e:	f7fb ff31 	bl	80097f4 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(Clock_button);
 800d992:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d996:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d99a:	681a      	ldr	r2, [r3, #0]
 800d99c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d9a0:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d9a4:	681b      	ldr	r3, [r3, #0]
 800d9a6:	33b4      	adds	r3, #180	; 0xb4
 800d9a8:	4619      	mov	r1, r3
 800d9aa:	4610      	mov	r0, r2
 800d9ac:	f7fc f8b0 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Pressure_button.setBoxWithBorderPosition(0, 0, 160, 50);
 800d9b0:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d9b4:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d9b8:	681b      	ldr	r3, [r3, #0]
 800d9ba:	f503 7096 	add.w	r0, r3, #300	; 0x12c
 800d9be:	2332      	movs	r3, #50	; 0x32
 800d9c0:	9300      	str	r3, [sp, #0]
 800d9c2:	23a0      	movs	r3, #160	; 0xa0
 800d9c4:	2200      	movs	r2, #0
 800d9c6:	2100      	movs	r1, #0
 800d9c8:	f000 fece 	bl	800e768 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    Pressure_button.setBorderSize(5);
 800d9cc:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d9d0:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d9d4:	681b      	ldr	r3, [r3, #0]
 800d9d6:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800d9da:	2105      	movs	r1, #5
 800d9dc:	4618      	mov	r0, r3
 800d9de:	f000 fee3 	bl	800e7a8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    Pressure_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800d9e2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800d9e6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800d9ea:	681b      	ldr	r3, [r3, #0]
 800d9ec:	f503 7496 	add.w	r4, r3, #300	; 0x12c
 800d9f0:	2300      	movs	r3, #0
 800d9f2:	f887 30e7 	strb.w	r3, [r7, #231]	; 0xe7
 800d9f6:	2366      	movs	r3, #102	; 0x66
 800d9f8:	f887 30e6 	strb.w	r3, [r7, #230]	; 0xe6
 800d9fc:	2399      	movs	r3, #153	; 0x99
 800d9fe:	f887 30e5 	strb.w	r3, [r7, #229]	; 0xe5
 800da02:	f897 30e7 	ldrb.w	r3, [r7, #231]	; 0xe7
 800da06:	041b      	lsls	r3, r3, #16
 800da08:	461a      	mov	r2, r3
 800da0a:	f897 30e6 	ldrb.w	r3, [r7, #230]	; 0xe6
 800da0e:	021b      	lsls	r3, r3, #8
 800da10:	431a      	orrs	r2, r3
 800da12:	f897 30e5 	ldrb.w	r3, [r7, #229]	; 0xe5
 800da16:	4313      	orrs	r3, r2
 800da18:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800da1c:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 800da20:	4611      	mov	r1, r2
 800da22:	4618      	mov	r0, r3
 800da24:	f7fb fe22 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800da28:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 800da2c:	461d      	mov	r5, r3
 800da2e:	2300      	movs	r3, #0
 800da30:	f887 30ea 	strb.w	r3, [r7, #234]	; 0xea
 800da34:	2399      	movs	r3, #153	; 0x99
 800da36:	f887 30e9 	strb.w	r3, [r7, #233]	; 0xe9
 800da3a:	23cc      	movs	r3, #204	; 0xcc
 800da3c:	f887 30e8 	strb.w	r3, [r7, #232]	; 0xe8
 800da40:	f897 30ea 	ldrb.w	r3, [r7, #234]	; 0xea
 800da44:	041b      	lsls	r3, r3, #16
 800da46:	461a      	mov	r2, r3
 800da48:	f897 30e9 	ldrb.w	r3, [r7, #233]	; 0xe9
 800da4c:	021b      	lsls	r3, r3, #8
 800da4e:	431a      	orrs	r2, r3
 800da50:	f897 30e8 	ldrb.w	r3, [r7, #232]	; 0xe8
 800da54:	4313      	orrs	r3, r2
 800da56:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800da5a:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 800da5e:	4611      	mov	r1, r2
 800da60:	4618      	mov	r0, r3
 800da62:	f7fb fe03 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800da66:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800da6a:	461e      	mov	r6, r3
 800da6c:	2300      	movs	r3, #0
 800da6e:	f887 30ed 	strb.w	r3, [r7, #237]	; 0xed
 800da72:	2333      	movs	r3, #51	; 0x33
 800da74:	f887 30ec 	strb.w	r3, [r7, #236]	; 0xec
 800da78:	2366      	movs	r3, #102	; 0x66
 800da7a:	f887 30eb 	strb.w	r3, [r7, #235]	; 0xeb
 800da7e:	f897 30ed 	ldrb.w	r3, [r7, #237]	; 0xed
 800da82:	041b      	lsls	r3, r3, #16
 800da84:	461a      	mov	r2, r3
 800da86:	f897 30ec 	ldrb.w	r3, [r7, #236]	; 0xec
 800da8a:	021b      	lsls	r3, r3, #8
 800da8c:	431a      	orrs	r2, r3
 800da8e:	f897 30eb 	ldrb.w	r3, [r7, #235]	; 0xeb
 800da92:	4313      	orrs	r3, r2
 800da94:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800da98:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800da9c:	4611      	mov	r1, r2
 800da9e:	4618      	mov	r0, r3
 800daa0:	f7fb fde4 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800daa4:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800daa8:	4698      	mov	r8, r3
 800daaa:	2333      	movs	r3, #51	; 0x33
 800daac:	f887 30f0 	strb.w	r3, [r7, #240]	; 0xf0
 800dab0:	2366      	movs	r3, #102	; 0x66
 800dab2:	f887 30ef 	strb.w	r3, [r7, #239]	; 0xef
 800dab6:	2399      	movs	r3, #153	; 0x99
 800dab8:	f887 30ee 	strb.w	r3, [r7, #238]	; 0xee
 800dabc:	f897 30f0 	ldrb.w	r3, [r7, #240]	; 0xf0
 800dac0:	041b      	lsls	r3, r3, #16
 800dac2:	461a      	mov	r2, r3
 800dac4:	f897 30ef 	ldrb.w	r3, [r7, #239]	; 0xef
 800dac8:	021b      	lsls	r3, r3, #8
 800daca:	431a      	orrs	r2, r3
 800dacc:	f897 30ee 	ldrb.w	r3, [r7, #238]	; 0xee
 800dad0:	4313      	orrs	r3, r2
 800dad2:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dad6:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 800dada:	4611      	mov	r1, r2
 800dadc:	4618      	mov	r0, r3
 800dade:	f7fb fdc5 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800dae2:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800dae6:	9300      	str	r3, [sp, #0]
 800dae8:	4643      	mov	r3, r8
 800daea:	4632      	mov	r2, r6
 800daec:	4629      	mov	r1, r5
 800daee:	4620      	mov	r0, r4
 800daf0:	f000 fe6c 	bl	800e7cc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Pressure_button.setAction(flexButtonCallback);
 800daf4:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800daf8:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dafc:	681b      	ldr	r3, [r3, #0]
 800dafe:	f503 7296 	add.w	r2, r3, #300	; 0x12c
 800db02:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db06:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db0a:	681b      	ldr	r3, [r3, #0]
 800db0c:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 800db10:	4619      	mov	r1, r3
 800db12:	4610      	mov	r0, r2
 800db14:	f7ff fbe0 	bl	800d2d8 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    Pressure_button.setPosition(0, 128, 160, 50);
 800db18:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db1c:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db20:	681b      	ldr	r3, [r3, #0]
 800db22:	f503 7096 	add.w	r0, r3, #300	; 0x12c
 800db26:	2332      	movs	r3, #50	; 0x32
 800db28:	9300      	str	r3, [sp, #0]
 800db2a:	23a0      	movs	r3, #160	; 0xa0
 800db2c:	2280      	movs	r2, #128	; 0x80
 800db2e:	2100      	movs	r1, #0
 800db30:	f7fb fe60 	bl	80097f4 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(Pressure_button);
 800db34:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db38:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db3c:	681a      	ldr	r2, [r3, #0]
 800db3e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db42:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db46:	681b      	ldr	r3, [r3, #0]
 800db48:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800db4c:	4619      	mov	r1, r3
 800db4e:	4610      	mov	r0, r2
 800db50:	f7fb ffde 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    CO_button.setBoxWithBorderPosition(0, 0, 160, 50);
 800db54:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db58:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db5c:	681b      	ldr	r3, [r3, #0]
 800db5e:	f503 70d2 	add.w	r0, r3, #420	; 0x1a4
 800db62:	2332      	movs	r3, #50	; 0x32
 800db64:	9300      	str	r3, [sp, #0]
 800db66:	23a0      	movs	r3, #160	; 0xa0
 800db68:	2200      	movs	r2, #0
 800db6a:	2100      	movs	r1, #0
 800db6c:	f000 fdfc 	bl	800e768 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    CO_button.setBorderSize(5);
 800db70:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db74:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db78:	681b      	ldr	r3, [r3, #0]
 800db7a:	f503 73d2 	add.w	r3, r3, #420	; 0x1a4
 800db7e:	2105      	movs	r1, #5
 800db80:	4618      	mov	r0, r3
 800db82:	f000 fe11 	bl	800e7a8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    CO_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800db86:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db8a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db8e:	681b      	ldr	r3, [r3, #0]
 800db90:	f503 74d2 	add.w	r4, r3, #420	; 0x1a4
 800db94:	2300      	movs	r3, #0
 800db96:	f887 30f3 	strb.w	r3, [r7, #243]	; 0xf3
 800db9a:	2366      	movs	r3, #102	; 0x66
 800db9c:	f887 30f2 	strb.w	r3, [r7, #242]	; 0xf2
 800dba0:	2399      	movs	r3, #153	; 0x99
 800dba2:	f887 30f1 	strb.w	r3, [r7, #241]	; 0xf1
 800dba6:	f897 30f3 	ldrb.w	r3, [r7, #243]	; 0xf3
 800dbaa:	041b      	lsls	r3, r3, #16
 800dbac:	461a      	mov	r2, r3
 800dbae:	f897 30f2 	ldrb.w	r3, [r7, #242]	; 0xf2
 800dbb2:	021b      	lsls	r3, r3, #8
 800dbb4:	431a      	orrs	r2, r3
 800dbb6:	f897 30f1 	ldrb.w	r3, [r7, #241]	; 0xf1
 800dbba:	4313      	orrs	r3, r2
 800dbbc:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dbc0:	f107 0398 	add.w	r3, r7, #152	; 0x98
 800dbc4:	4611      	mov	r1, r2
 800dbc6:	4618      	mov	r0, r3
 800dbc8:	f7fb fd50 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800dbcc:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800dbd0:	461d      	mov	r5, r3
 800dbd2:	2300      	movs	r3, #0
 800dbd4:	f887 30f6 	strb.w	r3, [r7, #246]	; 0xf6
 800dbd8:	2399      	movs	r3, #153	; 0x99
 800dbda:	f887 30f5 	strb.w	r3, [r7, #245]	; 0xf5
 800dbde:	23cc      	movs	r3, #204	; 0xcc
 800dbe0:	f887 30f4 	strb.w	r3, [r7, #244]	; 0xf4
 800dbe4:	f897 30f6 	ldrb.w	r3, [r7, #246]	; 0xf6
 800dbe8:	041b      	lsls	r3, r3, #16
 800dbea:	461a      	mov	r2, r3
 800dbec:	f897 30f5 	ldrb.w	r3, [r7, #245]	; 0xf5
 800dbf0:	021b      	lsls	r3, r3, #8
 800dbf2:	431a      	orrs	r2, r3
 800dbf4:	f897 30f4 	ldrb.w	r3, [r7, #244]	; 0xf4
 800dbf8:	4313      	orrs	r3, r2
 800dbfa:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dbfe:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800dc02:	4611      	mov	r1, r2
 800dc04:	4618      	mov	r0, r3
 800dc06:	f7fb fd31 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800dc0a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800dc0e:	461e      	mov	r6, r3
 800dc10:	2300      	movs	r3, #0
 800dc12:	f887 30f9 	strb.w	r3, [r7, #249]	; 0xf9
 800dc16:	2333      	movs	r3, #51	; 0x33
 800dc18:	f887 30f8 	strb.w	r3, [r7, #248]	; 0xf8
 800dc1c:	2366      	movs	r3, #102	; 0x66
 800dc1e:	f887 30f7 	strb.w	r3, [r7, #247]	; 0xf7
 800dc22:	f897 30f9 	ldrb.w	r3, [r7, #249]	; 0xf9
 800dc26:	041b      	lsls	r3, r3, #16
 800dc28:	461a      	mov	r2, r3
 800dc2a:	f897 30f8 	ldrb.w	r3, [r7, #248]	; 0xf8
 800dc2e:	021b      	lsls	r3, r3, #8
 800dc30:	431a      	orrs	r2, r3
 800dc32:	f897 30f7 	ldrb.w	r3, [r7, #247]	; 0xf7
 800dc36:	4313      	orrs	r3, r2
 800dc38:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dc3c:	f107 0390 	add.w	r3, r7, #144	; 0x90
 800dc40:	4611      	mov	r1, r2
 800dc42:	4618      	mov	r0, r3
 800dc44:	f7fb fd12 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800dc48:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800dc4c:	4698      	mov	r8, r3
 800dc4e:	2333      	movs	r3, #51	; 0x33
 800dc50:	f887 30fc 	strb.w	r3, [r7, #252]	; 0xfc
 800dc54:	2366      	movs	r3, #102	; 0x66
 800dc56:	f887 30fb 	strb.w	r3, [r7, #251]	; 0xfb
 800dc5a:	2399      	movs	r3, #153	; 0x99
 800dc5c:	f887 30fa 	strb.w	r3, [r7, #250]	; 0xfa
 800dc60:	f897 30fc 	ldrb.w	r3, [r7, #252]	; 0xfc
 800dc64:	041b      	lsls	r3, r3, #16
 800dc66:	461a      	mov	r2, r3
 800dc68:	f897 30fb 	ldrb.w	r3, [r7, #251]	; 0xfb
 800dc6c:	021b      	lsls	r3, r3, #8
 800dc6e:	431a      	orrs	r2, r3
 800dc70:	f897 30fa 	ldrb.w	r3, [r7, #250]	; 0xfa
 800dc74:	4313      	orrs	r3, r2
 800dc76:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dc7a:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 800dc7e:	4611      	mov	r1, r2
 800dc80:	4618      	mov	r0, r3
 800dc82:	f7fb fcf3 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800dc86:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800dc8a:	9300      	str	r3, [sp, #0]
 800dc8c:	4643      	mov	r3, r8
 800dc8e:	4632      	mov	r2, r6
 800dc90:	4629      	mov	r1, r5
 800dc92:	4620      	mov	r0, r4
 800dc94:	f000 fd9a 	bl	800e7cc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    CO_button.setAction(flexButtonCallback);
 800dc98:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dc9c:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dca0:	681b      	ldr	r3, [r3, #0]
 800dca2:	f503 72d2 	add.w	r2, r3, #420	; 0x1a4
 800dca6:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dcaa:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dcae:	681b      	ldr	r3, [r3, #0]
 800dcb0:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 800dcb4:	4619      	mov	r1, r3
 800dcb6:	4610      	mov	r0, r2
 800dcb8:	f7ff fb0e 	bl	800d2d8 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    CO_button.setPosition(160, 128, 160, 50);
 800dcbc:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dcc0:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dcc4:	681b      	ldr	r3, [r3, #0]
 800dcc6:	f503 70d2 	add.w	r0, r3, #420	; 0x1a4
 800dcca:	2332      	movs	r3, #50	; 0x32
 800dccc:	9300      	str	r3, [sp, #0]
 800dcce:	23a0      	movs	r3, #160	; 0xa0
 800dcd0:	2280      	movs	r2, #128	; 0x80
 800dcd2:	21a0      	movs	r1, #160	; 0xa0
 800dcd4:	f7fb fd8e 	bl	80097f4 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(CO_button);
 800dcd8:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dcdc:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dce0:	681a      	ldr	r2, [r3, #0]
 800dce2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dce6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dcea:	681b      	ldr	r3, [r3, #0]
 800dcec:	f503 73d2 	add.w	r3, r3, #420	; 0x1a4
 800dcf0:	4619      	mov	r1, r3
 800dcf2:	4610      	mov	r0, r2
 800dcf4:	f7fb ff0c 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Temperature_button.setBoxWithBorderPosition(0, 0, 160, 50);
 800dcf8:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dcfc:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dd00:	681b      	ldr	r3, [r3, #0]
 800dd02:	f503 7007 	add.w	r0, r3, #540	; 0x21c
 800dd06:	2332      	movs	r3, #50	; 0x32
 800dd08:	9300      	str	r3, [sp, #0]
 800dd0a:	23a0      	movs	r3, #160	; 0xa0
 800dd0c:	2200      	movs	r2, #0
 800dd0e:	2100      	movs	r1, #0
 800dd10:	f000 fd2a 	bl	800e768 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    Temperature_button.setBorderSize(5);
 800dd14:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dd18:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dd1c:	681b      	ldr	r3, [r3, #0]
 800dd1e:	f503 7307 	add.w	r3, r3, #540	; 0x21c
 800dd22:	2105      	movs	r1, #5
 800dd24:	4618      	mov	r0, r3
 800dd26:	f000 fd3f 	bl	800e7a8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    Temperature_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800dd2a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dd2e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dd32:	681b      	ldr	r3, [r3, #0]
 800dd34:	f503 7407 	add.w	r4, r3, #540	; 0x21c
 800dd38:	2300      	movs	r3, #0
 800dd3a:	f887 30ff 	strb.w	r3, [r7, #255]	; 0xff
 800dd3e:	2366      	movs	r3, #102	; 0x66
 800dd40:	f887 30fe 	strb.w	r3, [r7, #254]	; 0xfe
 800dd44:	2399      	movs	r3, #153	; 0x99
 800dd46:	f887 30fd 	strb.w	r3, [r7, #253]	; 0xfd
 800dd4a:	f897 30ff 	ldrb.w	r3, [r7, #255]	; 0xff
 800dd4e:	041b      	lsls	r3, r3, #16
 800dd50:	461a      	mov	r2, r3
 800dd52:	f897 30fe 	ldrb.w	r3, [r7, #254]	; 0xfe
 800dd56:	021b      	lsls	r3, r3, #8
 800dd58:	431a      	orrs	r2, r3
 800dd5a:	f897 30fd 	ldrb.w	r3, [r7, #253]	; 0xfd
 800dd5e:	4313      	orrs	r3, r2
 800dd60:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dd64:	f107 0388 	add.w	r3, r7, #136	; 0x88
 800dd68:	4611      	mov	r1, r2
 800dd6a:	4618      	mov	r0, r3
 800dd6c:	f7fb fc7e 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800dd70:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800dd74:	461d      	mov	r5, r3
 800dd76:	2300      	movs	r3, #0
 800dd78:	f887 3102 	strb.w	r3, [r7, #258]	; 0x102
 800dd7c:	2399      	movs	r3, #153	; 0x99
 800dd7e:	f887 3101 	strb.w	r3, [r7, #257]	; 0x101
 800dd82:	23cc      	movs	r3, #204	; 0xcc
 800dd84:	f887 3100 	strb.w	r3, [r7, #256]	; 0x100
 800dd88:	f897 3102 	ldrb.w	r3, [r7, #258]	; 0x102
 800dd8c:	041b      	lsls	r3, r3, #16
 800dd8e:	461a      	mov	r2, r3
 800dd90:	f897 3101 	ldrb.w	r3, [r7, #257]	; 0x101
 800dd94:	021b      	lsls	r3, r3, #8
 800dd96:	431a      	orrs	r2, r3
 800dd98:	f897 3100 	ldrb.w	r3, [r7, #256]	; 0x100
 800dd9c:	4313      	orrs	r3, r2
 800dd9e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dda2:	f107 0384 	add.w	r3, r7, #132	; 0x84
 800dda6:	4611      	mov	r1, r2
 800dda8:	4618      	mov	r0, r3
 800ddaa:	f7fb fc5f 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800ddae:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800ddb2:	461e      	mov	r6, r3
 800ddb4:	2300      	movs	r3, #0
 800ddb6:	f887 3105 	strb.w	r3, [r7, #261]	; 0x105
 800ddba:	2333      	movs	r3, #51	; 0x33
 800ddbc:	f887 3104 	strb.w	r3, [r7, #260]	; 0x104
 800ddc0:	2366      	movs	r3, #102	; 0x66
 800ddc2:	f887 3103 	strb.w	r3, [r7, #259]	; 0x103
 800ddc6:	f897 3105 	ldrb.w	r3, [r7, #261]	; 0x105
 800ddca:	041b      	lsls	r3, r3, #16
 800ddcc:	461a      	mov	r2, r3
 800ddce:	f897 3104 	ldrb.w	r3, [r7, #260]	; 0x104
 800ddd2:	021b      	lsls	r3, r3, #8
 800ddd4:	431a      	orrs	r2, r3
 800ddd6:	f897 3103 	ldrb.w	r3, [r7, #259]	; 0x103
 800ddda:	4313      	orrs	r3, r2
 800dddc:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dde0:	f107 0380 	add.w	r3, r7, #128	; 0x80
 800dde4:	4611      	mov	r1, r2
 800dde6:	4618      	mov	r0, r3
 800dde8:	f7fb fc40 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800ddec:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800ddf0:	4698      	mov	r8, r3
 800ddf2:	2333      	movs	r3, #51	; 0x33
 800ddf4:	f887 3108 	strb.w	r3, [r7, #264]	; 0x108
 800ddf8:	2366      	movs	r3, #102	; 0x66
 800ddfa:	f887 3107 	strb.w	r3, [r7, #263]	; 0x107
 800ddfe:	2399      	movs	r3, #153	; 0x99
 800de00:	f887 3106 	strb.w	r3, [r7, #262]	; 0x106
 800de04:	f897 3108 	ldrb.w	r3, [r7, #264]	; 0x108
 800de08:	041b      	lsls	r3, r3, #16
 800de0a:	461a      	mov	r2, r3
 800de0c:	f897 3107 	ldrb.w	r3, [r7, #263]	; 0x107
 800de10:	021b      	lsls	r3, r3, #8
 800de12:	431a      	orrs	r2, r3
 800de14:	f897 3106 	ldrb.w	r3, [r7, #262]	; 0x106
 800de18:	4313      	orrs	r3, r2
 800de1a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800de1e:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 800de22:	4611      	mov	r1, r2
 800de24:	4618      	mov	r0, r3
 800de26:	f7fb fc21 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800de2a:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800de2c:	9300      	str	r3, [sp, #0]
 800de2e:	4643      	mov	r3, r8
 800de30:	4632      	mov	r2, r6
 800de32:	4629      	mov	r1, r5
 800de34:	4620      	mov	r0, r4
 800de36:	f000 fcc9 	bl	800e7cc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Temperature_button.setAction(flexButtonCallback);
 800de3a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800de3e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800de42:	681b      	ldr	r3, [r3, #0]
 800de44:	f503 7207 	add.w	r2, r3, #540	; 0x21c
 800de48:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800de4c:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800de50:	681b      	ldr	r3, [r3, #0]
 800de52:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 800de56:	4619      	mov	r1, r3
 800de58:	4610      	mov	r0, r2
 800de5a:	f7ff fa3d 	bl	800d2d8 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    Temperature_button.setPosition(160, 70, 160, 50);
 800de5e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800de62:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800de66:	681b      	ldr	r3, [r3, #0]
 800de68:	f503 7007 	add.w	r0, r3, #540	; 0x21c
 800de6c:	2332      	movs	r3, #50	; 0x32
 800de6e:	9300      	str	r3, [sp, #0]
 800de70:	23a0      	movs	r3, #160	; 0xa0
 800de72:	2246      	movs	r2, #70	; 0x46
 800de74:	21a0      	movs	r1, #160	; 0xa0
 800de76:	f7fb fcbd 	bl	80097f4 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(Temperature_button);
 800de7a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800de7e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800de82:	681a      	ldr	r2, [r3, #0]
 800de84:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800de88:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800de8c:	681b      	ldr	r3, [r3, #0]
 800de8e:	f503 7307 	add.w	r3, r3, #540	; 0x21c
 800de92:	4619      	mov	r1, r3
 800de94:	4610      	mov	r0, r2
 800de96:	f7fb fe3b 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    CarSystem_text.setXY(240, 185);
 800de9a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800de9e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dea2:	681b      	ldr	r3, [r3, #0]
 800dea4:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800dea8:	22b9      	movs	r2, #185	; 0xb9
 800deaa:	21f0      	movs	r1, #240	; 0xf0
 800deac:	4618      	mov	r0, r3
 800deae:	f7fb fce0 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
    CarSystem_text.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
 800deb2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800deb6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800deba:	681b      	ldr	r3, [r3, #0]
 800debc:	f503 7425 	add.w	r4, r3, #660	; 0x294
 800dec0:	23f2      	movs	r3, #242	; 0xf2
 800dec2:	f887 310b 	strb.w	r3, [r7, #267]	; 0x10b
 800dec6:	23ae      	movs	r3, #174	; 0xae
 800dec8:	f887 310a 	strb.w	r3, [r7, #266]	; 0x10a
 800decc:	23ae      	movs	r3, #174	; 0xae
 800dece:	f887 3109 	strb.w	r3, [r7, #265]	; 0x109
 800ded2:	f897 310b 	ldrb.w	r3, [r7, #267]	; 0x10b
 800ded6:	041b      	lsls	r3, r3, #16
 800ded8:	461a      	mov	r2, r3
 800deda:	f897 310a 	ldrb.w	r3, [r7, #266]	; 0x10a
 800dede:	021b      	lsls	r3, r3, #8
 800dee0:	431a      	orrs	r2, r3
 800dee2:	f897 3109 	ldrb.w	r3, [r7, #265]	; 0x109
 800dee6:	4313      	orrs	r3, r2
 800dee8:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800deec:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800def0:	4611      	mov	r1, r2
 800def2:	4618      	mov	r0, r3
 800def4:	f7fb fbba 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800def8:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800defa:	461a      	mov	r2, r3
 800defc:	f8c7 410c 	str.w	r4, [r7, #268]	; 0x10c
 800df00:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800df04:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800df08:	601a      	str	r2, [r3, #0]
        color = newColor;
 800df0a:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 800df0e:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800df12:	f5a2 7298 	sub.w	r2, r2, #304	; 0x130
 800df16:	6812      	ldr	r2, [r2, #0]
 800df18:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800df1a:	bf00      	nop
    CarSystem_text.setLinespacing(0);
 800df1c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800df20:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800df24:	681b      	ldr	r3, [r3, #0]
 800df26:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800df2a:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
 800df2e:	2300      	movs	r3, #0
 800df30:	f8a7 3112 	strh.w	r3, [r7, #274]	; 0x112
        linespace = space;
 800df34:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800df38:	f8b7 2112 	ldrh.w	r2, [r7, #274]	; 0x112
 800df3c:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800df3e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800df42:	681b      	ldr	r3, [r3, #0]
 800df44:	3384      	adds	r3, #132	; 0x84
 800df46:	681b      	ldr	r3, [r3, #0]
 800df48:	f8d7 4114 	ldr.w	r4, [r7, #276]	; 0x114
 800df4c:	463a      	mov	r2, r7
 800df4e:	f8d7 1114 	ldr.w	r1, [r7, #276]	; 0x114
 800df52:	4610      	mov	r0, r2
 800df54:	4798      	blx	r3
 800df56:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800df5a:	f5a3 72ac 	sub.w	r2, r3, #344	; 0x158
 800df5e:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800df62:	ca07      	ldmia	r2, {r0, r1, r2}
 800df64:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800df68:	bf00      	nop
    CarSystem_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_229S));
 800df6a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800df6e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800df72:	681b      	ldr	r3, [r3, #0]
 800df74:	f503 7425 	add.w	r4, r3, #660	; 0x294
 800df78:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800df7c:	2110      	movs	r1, #16
 800df7e:	4618      	mov	r0, r3
 800df80:	f7fb fe5e 	bl	8009c40 <_ZN8touchgfx9TypedTextC1Et>
 800df84:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800df88:	4619      	mov	r1, r3
 800df8a:	4620      	mov	r0, r4
 800df8c:	f007 feb2 	bl	8015cf4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800df90:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800df94:	4618      	mov	r0, r3
 800df96:	f7fb f981 	bl	800929c <_ZN8touchgfx9TypedTextD1Ev>
    add(CarSystem_text);
 800df9a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800df9e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dfa2:	681a      	ldr	r2, [r3, #0]
 800dfa4:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dfa8:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dfac:	681b      	ldr	r3, [r3, #0]
 800dfae:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800dfb2:	4619      	mov	r1, r3
 800dfb4:	4610      	mov	r0, r2
 800dfb6:	f7fb fdab 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Clock_text.setXY(54, 141);
 800dfba:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dfbe:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dfc2:	681b      	ldr	r3, [r3, #0]
 800dfc4:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800dfc8:	228d      	movs	r2, #141	; 0x8d
 800dfca:	2136      	movs	r1, #54	; 0x36
 800dfcc:	4618      	mov	r0, r3
 800dfce:	f7fb fc50 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
    Clock_text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800dfd2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dfd6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dfda:	681b      	ldr	r3, [r3, #0]
 800dfdc:	f503 7437 	add.w	r4, r3, #732	; 0x2dc
 800dfe0:	2300      	movs	r3, #0
 800dfe2:	f887 311b 	strb.w	r3, [r7, #283]	; 0x11b
 800dfe6:	2300      	movs	r3, #0
 800dfe8:	f887 311a 	strb.w	r3, [r7, #282]	; 0x11a
 800dfec:	2300      	movs	r3, #0
 800dfee:	f887 3119 	strb.w	r3, [r7, #281]	; 0x119
 800dff2:	f897 311b 	ldrb.w	r3, [r7, #283]	; 0x11b
 800dff6:	041b      	lsls	r3, r3, #16
 800dff8:	461a      	mov	r2, r3
 800dffa:	f897 311a 	ldrb.w	r3, [r7, #282]	; 0x11a
 800dffe:	021b      	lsls	r3, r3, #8
 800e000:	431a      	orrs	r2, r3
 800e002:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 800e006:	4313      	orrs	r3, r2
 800e008:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e00c:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800e010:	4611      	mov	r1, r2
 800e012:	4618      	mov	r0, r3
 800e014:	f7fb fb2a 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800e018:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800e01a:	461a      	mov	r2, r3
 800e01c:	f8c7 411c 	str.w	r4, [r7, #284]	; 0x11c
 800e020:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e024:	f5a3 739a 	sub.w	r3, r3, #308	; 0x134
 800e028:	601a      	str	r2, [r3, #0]
        color = newColor;
 800e02a:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 800e02e:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800e032:	f5a2 729a 	sub.w	r2, r2, #308	; 0x134
 800e036:	6812      	ldr	r2, [r2, #0]
 800e038:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e03a:	bf00      	nop
    Clock_text.setLinespacing(0);
 800e03c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e040:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e044:	681b      	ldr	r3, [r3, #0]
 800e046:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800e04a:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
 800e04e:	2300      	movs	r3, #0
 800e050:	f8a7 3122 	strh.w	r3, [r7, #290]	; 0x122
        linespace = space;
 800e054:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 800e058:	f8b7 2122 	ldrh.w	r2, [r7, #290]	; 0x122
 800e05c:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800e05e:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 800e062:	681b      	ldr	r3, [r3, #0]
 800e064:	3384      	adds	r3, #132	; 0x84
 800e066:	681b      	ldr	r3, [r3, #0]
 800e068:	f8d7 4124 	ldr.w	r4, [r7, #292]	; 0x124
 800e06c:	463a      	mov	r2, r7
 800e06e:	f8d7 1124 	ldr.w	r1, [r7, #292]	; 0x124
 800e072:	4610      	mov	r0, r2
 800e074:	4798      	blx	r3
 800e076:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e07a:	f5a3 72ac 	sub.w	r2, r3, #344	; 0x158
 800e07e:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e082:	ca07      	ldmia	r2, {r0, r1, r2}
 800e084:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e088:	bf00      	nop
    Clock_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L128));
 800e08a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e08e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e092:	681b      	ldr	r3, [r3, #0]
 800e094:	f503 7437 	add.w	r4, r3, #732	; 0x2dc
 800e098:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800e09c:	210f      	movs	r1, #15
 800e09e:	4618      	mov	r0, r3
 800e0a0:	f7fb fdce 	bl	8009c40 <_ZN8touchgfx9TypedTextC1Et>
 800e0a4:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800e0a8:	4619      	mov	r1, r3
 800e0aa:	4620      	mov	r0, r4
 800e0ac:	f007 fe22 	bl	8015cf4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800e0b0:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800e0b4:	4618      	mov	r0, r3
 800e0b6:	f7fb f8f1 	bl	800929c <_ZN8touchgfx9TypedTextD1Ev>
    add(Clock_text);
 800e0ba:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e0be:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e0c2:	681a      	ldr	r2, [r3, #0]
 800e0c4:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e0c8:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e0cc:	681b      	ldr	r3, [r3, #0]
 800e0ce:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800e0d2:	4619      	mov	r1, r3
 800e0d4:	4610      	mov	r0, r2
 800e0d6:	f7fb fd1b 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Pressure_text.setXY(37, 83);
 800e0da:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e0de:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e0e2:	681b      	ldr	r3, [r3, #0]
 800e0e4:	f503 7349 	add.w	r3, r3, #804	; 0x324
 800e0e8:	2253      	movs	r2, #83	; 0x53
 800e0ea:	2125      	movs	r1, #37	; 0x25
 800e0ec:	4618      	mov	r0, r3
 800e0ee:	f7fb fbc0 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
    Pressure_text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800e0f2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e0f6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e0fa:	681b      	ldr	r3, [r3, #0]
 800e0fc:	f503 7449 	add.w	r4, r3, #804	; 0x324
 800e100:	2300      	movs	r3, #0
 800e102:	f887 312b 	strb.w	r3, [r7, #299]	; 0x12b
 800e106:	2300      	movs	r3, #0
 800e108:	f887 312a 	strb.w	r3, [r7, #298]	; 0x12a
 800e10c:	2300      	movs	r3, #0
 800e10e:	f887 3129 	strb.w	r3, [r7, #297]	; 0x129
 800e112:	f897 312b 	ldrb.w	r3, [r7, #299]	; 0x12b
 800e116:	041b      	lsls	r3, r3, #16
 800e118:	461a      	mov	r2, r3
 800e11a:	f897 312a 	ldrb.w	r3, [r7, #298]	; 0x12a
 800e11e:	021b      	lsls	r3, r3, #8
 800e120:	431a      	orrs	r2, r3
 800e122:	f897 3129 	ldrb.w	r3, [r7, #297]	; 0x129
 800e126:	4313      	orrs	r3, r2
 800e128:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e12c:	f107 0370 	add.w	r3, r7, #112	; 0x70
 800e130:	4611      	mov	r1, r2
 800e132:	4618      	mov	r0, r3
 800e134:	f7fb fa9a 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800e138:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800e13a:	461a      	mov	r2, r3
 800e13c:	f8c7 412c 	str.w	r4, [r7, #300]	; 0x12c
 800e140:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e144:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 800e148:	601a      	str	r2, [r3, #0]
        color = newColor;
 800e14a:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800e14e:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800e152:	f5a2 729c 	sub.w	r2, r2, #312	; 0x138
 800e156:	6812      	ldr	r2, [r2, #0]
 800e158:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e15a:	bf00      	nop
    Pressure_text.setLinespacing(0);
 800e15c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e160:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e164:	681b      	ldr	r3, [r3, #0]
 800e166:	f503 7349 	add.w	r3, r3, #804	; 0x324
 800e16a:	f8c7 3134 	str.w	r3, [r7, #308]	; 0x134
 800e16e:	2300      	movs	r3, #0
 800e170:	f8a7 3132 	strh.w	r3, [r7, #306]	; 0x132
        linespace = space;
 800e174:	f8d7 3134 	ldr.w	r3, [r7, #308]	; 0x134
 800e178:	f8b7 2132 	ldrh.w	r2, [r7, #306]	; 0x132
 800e17c:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800e17e:	f8d7 3134 	ldr.w	r3, [r7, #308]	; 0x134
 800e182:	681b      	ldr	r3, [r3, #0]
 800e184:	3384      	adds	r3, #132	; 0x84
 800e186:	681b      	ldr	r3, [r3, #0]
 800e188:	f8d7 4134 	ldr.w	r4, [r7, #308]	; 0x134
 800e18c:	463a      	mov	r2, r7
 800e18e:	f8d7 1134 	ldr.w	r1, [r7, #308]	; 0x134
 800e192:	4610      	mov	r0, r2
 800e194:	4798      	blx	r3
 800e196:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e19a:	f5a3 72ac 	sub.w	r2, r3, #344	; 0x158
 800e19e:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e1a2:	ca07      	ldmia	r2, {r0, r1, r2}
 800e1a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e1a8:	bf00      	nop
    Pressure_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NCPT));
 800e1aa:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e1ae:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e1b2:	681b      	ldr	r3, [r3, #0]
 800e1b4:	f503 7449 	add.w	r4, r3, #804	; 0x324
 800e1b8:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800e1bc:	210e      	movs	r1, #14
 800e1be:	4618      	mov	r0, r3
 800e1c0:	f7fb fd3e 	bl	8009c40 <_ZN8touchgfx9TypedTextC1Et>
 800e1c4:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800e1c8:	4619      	mov	r1, r3
 800e1ca:	4620      	mov	r0, r4
 800e1cc:	f007 fd92 	bl	8015cf4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800e1d0:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800e1d4:	4618      	mov	r0, r3
 800e1d6:	f7fb f861 	bl	800929c <_ZN8touchgfx9TypedTextD1Ev>
    add(Pressure_text);
 800e1da:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e1de:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e1e2:	681a      	ldr	r2, [r3, #0]
 800e1e4:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e1e8:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e1ec:	681b      	ldr	r3, [r3, #0]
 800e1ee:	f503 7349 	add.w	r3, r3, #804	; 0x324
 800e1f2:	4619      	mov	r1, r3
 800e1f4:	4610      	mov	r0, r2
 800e1f6:	f7fb fc8b 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Temperature_text.setXY(176, 141);
 800e1fa:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e1fe:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e202:	681b      	ldr	r3, [r3, #0]
 800e204:	f503 735b 	add.w	r3, r3, #876	; 0x36c
 800e208:	228d      	movs	r2, #141	; 0x8d
 800e20a:	21b0      	movs	r1, #176	; 0xb0
 800e20c:	4618      	mov	r0, r3
 800e20e:	f7fb fb30 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
    Temperature_text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800e212:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e216:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e21a:	681b      	ldr	r3, [r3, #0]
 800e21c:	f503 745b 	add.w	r4, r3, #876	; 0x36c
 800e220:	2300      	movs	r3, #0
 800e222:	f887 313b 	strb.w	r3, [r7, #315]	; 0x13b
 800e226:	2300      	movs	r3, #0
 800e228:	f887 313a 	strb.w	r3, [r7, #314]	; 0x13a
 800e22c:	2300      	movs	r3, #0
 800e22e:	f887 3139 	strb.w	r3, [r7, #313]	; 0x139
 800e232:	f897 313b 	ldrb.w	r3, [r7, #315]	; 0x13b
 800e236:	041b      	lsls	r3, r3, #16
 800e238:	461a      	mov	r2, r3
 800e23a:	f897 313a 	ldrb.w	r3, [r7, #314]	; 0x13a
 800e23e:	021b      	lsls	r3, r3, #8
 800e240:	431a      	orrs	r2, r3
 800e242:	f897 3139 	ldrb.w	r3, [r7, #313]	; 0x139
 800e246:	4313      	orrs	r3, r2
 800e248:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e24c:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 800e250:	4611      	mov	r1, r2
 800e252:	4618      	mov	r0, r3
 800e254:	f7fb fa0a 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800e258:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800e25a:	461a      	mov	r2, r3
 800e25c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
 800e260:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e264:	f5a3 739e 	sub.w	r3, r3, #316	; 0x13c
 800e268:	601a      	str	r2, [r3, #0]
        color = newColor;
 800e26a:	f8d7 313c 	ldr.w	r3, [r7, #316]	; 0x13c
 800e26e:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800e272:	f5a2 729e 	sub.w	r2, r2, #316	; 0x13c
 800e276:	6812      	ldr	r2, [r2, #0]
 800e278:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e27a:	bf00      	nop
    Temperature_text.setLinespacing(0);
 800e27c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e280:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e284:	681b      	ldr	r3, [r3, #0]
 800e286:	f503 735b 	add.w	r3, r3, #876	; 0x36c
 800e28a:	f8c7 3144 	str.w	r3, [r7, #324]	; 0x144
 800e28e:	2300      	movs	r3, #0
 800e290:	f8a7 3142 	strh.w	r3, [r7, #322]	; 0x142
        linespace = space;
 800e294:	f8d7 3144 	ldr.w	r3, [r7, #324]	; 0x144
 800e298:	f8b7 2142 	ldrh.w	r2, [r7, #322]	; 0x142
 800e29c:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800e29e:	f8d7 3144 	ldr.w	r3, [r7, #324]	; 0x144
 800e2a2:	681b      	ldr	r3, [r3, #0]
 800e2a4:	3384      	adds	r3, #132	; 0x84
 800e2a6:	681b      	ldr	r3, [r3, #0]
 800e2a8:	f8d7 4144 	ldr.w	r4, [r7, #324]	; 0x144
 800e2ac:	463a      	mov	r2, r7
 800e2ae:	f8d7 1144 	ldr.w	r1, [r7, #324]	; 0x144
 800e2b2:	4610      	mov	r0, r2
 800e2b4:	4798      	blx	r3
 800e2b6:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e2ba:	f5a3 72ac 	sub.w	r2, r3, #344	; 0x158
 800e2be:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e2c2:	ca07      	ldmia	r2, {r0, r1, r2}
 800e2c4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e2c8:	bf00      	nop
    Temperature_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LIND));
 800e2ca:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e2ce:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e2d2:	681b      	ldr	r3, [r3, #0]
 800e2d4:	f503 745b 	add.w	r4, r3, #876	; 0x36c
 800e2d8:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800e2dc:	210d      	movs	r1, #13
 800e2de:	4618      	mov	r0, r3
 800e2e0:	f7fb fcae 	bl	8009c40 <_ZN8touchgfx9TypedTextC1Et>
 800e2e4:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800e2e8:	4619      	mov	r1, r3
 800e2ea:	4620      	mov	r0, r4
 800e2ec:	f007 fd02 	bl	8015cf4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800e2f0:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800e2f4:	4618      	mov	r0, r3
 800e2f6:	f7fa ffd1 	bl	800929c <_ZN8touchgfx9TypedTextD1Ev>
    add(Temperature_text);
 800e2fa:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e2fe:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e302:	681a      	ldr	r2, [r3, #0]
 800e304:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e308:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e30c:	681b      	ldr	r3, [r3, #0]
 800e30e:	f503 735b 	add.w	r3, r3, #876	; 0x36c
 800e312:	4619      	mov	r1, r3
 800e314:	4610      	mov	r0, r2
 800e316:	f7fb fbfb 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    CO_text.setXY(200, 83);
 800e31a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e31e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e322:	681b      	ldr	r3, [r3, #0]
 800e324:	f503 736d 	add.w	r3, r3, #948	; 0x3b4
 800e328:	2253      	movs	r2, #83	; 0x53
 800e32a:	21c8      	movs	r1, #200	; 0xc8
 800e32c:	4618      	mov	r0, r3
 800e32e:	f7fb faa0 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
    CO_text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800e332:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e336:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e33a:	681b      	ldr	r3, [r3, #0]
 800e33c:	f503 746d 	add.w	r4, r3, #948	; 0x3b4
 800e340:	2300      	movs	r3, #0
 800e342:	f887 314b 	strb.w	r3, [r7, #331]	; 0x14b
 800e346:	2300      	movs	r3, #0
 800e348:	f887 314a 	strb.w	r3, [r7, #330]	; 0x14a
 800e34c:	2300      	movs	r3, #0
 800e34e:	f887 3149 	strb.w	r3, [r7, #329]	; 0x149
 800e352:	f897 314b 	ldrb.w	r3, [r7, #331]	; 0x14b
 800e356:	041b      	lsls	r3, r3, #16
 800e358:	461a      	mov	r2, r3
 800e35a:	f897 314a 	ldrb.w	r3, [r7, #330]	; 0x14a
 800e35e:	021b      	lsls	r3, r3, #8
 800e360:	431a      	orrs	r2, r3
 800e362:	f897 3149 	ldrb.w	r3, [r7, #329]	; 0x149
 800e366:	4313      	orrs	r3, r2
 800e368:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e36c:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800e370:	4611      	mov	r1, r2
 800e372:	4618      	mov	r0, r3
 800e374:	f7fb f97a 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800e378:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800e37a:	461a      	mov	r2, r3
 800e37c:	f8c7 414c 	str.w	r4, [r7, #332]	; 0x14c
 800e380:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e384:	f5a3 73a0 	sub.w	r3, r3, #320	; 0x140
 800e388:	601a      	str	r2, [r3, #0]
        color = newColor;
 800e38a:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 800e38e:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800e392:	f5a2 72a0 	sub.w	r2, r2, #320	; 0x140
 800e396:	6812      	ldr	r2, [r2, #0]
 800e398:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e39a:	bf00      	nop
    CO_text.setLinespacing(0);
 800e39c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e3a0:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e3a4:	681b      	ldr	r3, [r3, #0]
 800e3a6:	f503 736d 	add.w	r3, r3, #948	; 0x3b4
 800e3aa:	f8c7 3154 	str.w	r3, [r7, #340]	; 0x154
 800e3ae:	2300      	movs	r3, #0
 800e3b0:	f8a7 3152 	strh.w	r3, [r7, #338]	; 0x152
        linespace = space;
 800e3b4:	f8d7 3154 	ldr.w	r3, [r7, #340]	; 0x154
 800e3b8:	f8b7 2152 	ldrh.w	r2, [r7, #338]	; 0x152
 800e3bc:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800e3be:	f8d7 3154 	ldr.w	r3, [r7, #340]	; 0x154
 800e3c2:	681b      	ldr	r3, [r3, #0]
 800e3c4:	3384      	adds	r3, #132	; 0x84
 800e3c6:	681b      	ldr	r3, [r3, #0]
 800e3c8:	f8d7 4154 	ldr.w	r4, [r7, #340]	; 0x154
 800e3cc:	463a      	mov	r2, r7
 800e3ce:	f8d7 1154 	ldr.w	r1, [r7, #340]	; 0x154
 800e3d2:	4610      	mov	r0, r2
 800e3d4:	4798      	blx	r3
 800e3d6:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e3da:	f5a3 72ac 	sub.w	r2, r3, #344	; 0x158
 800e3de:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e3e2:	ca07      	ldmia	r2, {r0, r1, r2}
 800e3e4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e3e8:	bf00      	nop
    CO_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A6VB));
 800e3ea:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e3ee:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e3f2:	681b      	ldr	r3, [r3, #0]
 800e3f4:	f503 746d 	add.w	r4, r3, #948	; 0x3b4
 800e3f8:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800e3fc:	210c      	movs	r1, #12
 800e3fe:	4618      	mov	r0, r3
 800e400:	f7fb fc1e 	bl	8009c40 <_ZN8touchgfx9TypedTextC1Et>
 800e404:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800e408:	4619      	mov	r1, r3
 800e40a:	4620      	mov	r0, r4
 800e40c:	f007 fc72 	bl	8015cf4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800e410:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800e414:	4618      	mov	r0, r3
 800e416:	f7fa ff41 	bl	800929c <_ZN8touchgfx9TypedTextD1Ev>
    add(CO_text);
 800e41a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e41e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e422:	681a      	ldr	r2, [r3, #0]
 800e424:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e428:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e42c:	681b      	ldr	r3, [r3, #0]
 800e42e:	f503 736d 	add.w	r3, r3, #948	; 0x3b4
 800e432:	4619      	mov	r1, r3
 800e434:	4610      	mov	r0, r2
 800e436:	f7fb fb6b 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800e43a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e43e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e442:	681b      	ldr	r3, [r3, #0]
 800e444:	4618      	mov	r0, r3
 800e446:	f507 77ac 	add.w	r7, r7, #344	; 0x158
 800e44a:	46bd      	mov	sp, r7
 800e44c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e450 <_ZN18MainScreenViewBaseD1Ev>:

MainScreenViewBase::~MainScreenViewBase()
 800e450:	b580      	push	{r7, lr}
 800e452:	b082      	sub	sp, #8
 800e454:	af00      	add	r7, sp, #0
 800e456:	6078      	str	r0, [r7, #4]
 800e458:	4a28      	ldr	r2, [pc, #160]	; (800e4fc <_ZN18MainScreenViewBaseD1Ev+0xac>)
 800e45a:	687b      	ldr	r3, [r7, #4]
 800e45c:	601a      	str	r2, [r3, #0]
 800e45e:	687b      	ldr	r3, [r7, #4]
 800e460:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 800e464:	4618      	mov	r0, r3
 800e466:	f000 fa21 	bl	800e8ac <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800e46a:	687b      	ldr	r3, [r7, #4]
 800e46c:	f503 736d 	add.w	r3, r3, #948	; 0x3b4
 800e470:	4618      	mov	r0, r3
 800e472:	f7fb fd39 	bl	8009ee8 <_ZN8touchgfx8TextAreaD1Ev>
 800e476:	687b      	ldr	r3, [r7, #4]
 800e478:	f503 735b 	add.w	r3, r3, #876	; 0x36c
 800e47c:	4618      	mov	r0, r3
 800e47e:	f7fb fd33 	bl	8009ee8 <_ZN8touchgfx8TextAreaD1Ev>
 800e482:	687b      	ldr	r3, [r7, #4]
 800e484:	f503 7349 	add.w	r3, r3, #804	; 0x324
 800e488:	4618      	mov	r0, r3
 800e48a:	f7fb fd2d 	bl	8009ee8 <_ZN8touchgfx8TextAreaD1Ev>
 800e48e:	687b      	ldr	r3, [r7, #4]
 800e490:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800e494:	4618      	mov	r0, r3
 800e496:	f7fb fd27 	bl	8009ee8 <_ZN8touchgfx8TextAreaD1Ev>
 800e49a:	687b      	ldr	r3, [r7, #4]
 800e49c:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800e4a0:	4618      	mov	r0, r3
 800e4a2:	f7fb fd21 	bl	8009ee8 <_ZN8touchgfx8TextAreaD1Ev>
 800e4a6:	687b      	ldr	r3, [r7, #4]
 800e4a8:	f503 7307 	add.w	r3, r3, #540	; 0x21c
 800e4ac:	4618      	mov	r0, r3
 800e4ae:	f000 fa1f 	bl	800e8f0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800e4b2:	687b      	ldr	r3, [r7, #4]
 800e4b4:	f503 73d2 	add.w	r3, r3, #420	; 0x1a4
 800e4b8:	4618      	mov	r0, r3
 800e4ba:	f000 fa19 	bl	800e8f0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800e4be:	687b      	ldr	r3, [r7, #4]
 800e4c0:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800e4c4:	4618      	mov	r0, r3
 800e4c6:	f000 fa13 	bl	800e8f0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800e4ca:	687b      	ldr	r3, [r7, #4]
 800e4cc:	33b4      	adds	r3, #180	; 0xb4
 800e4ce:	4618      	mov	r0, r3
 800e4d0:	f000 fa0e 	bl	800e8f0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800e4d4:	687b      	ldr	r3, [r7, #4]
 800e4d6:	336c      	adds	r3, #108	; 0x6c
 800e4d8:	4618      	mov	r0, r3
 800e4da:	f7fb fd05 	bl	8009ee8 <_ZN8touchgfx8TextAreaD1Ev>
 800e4de:	687b      	ldr	r3, [r7, #4]
 800e4e0:	3340      	adds	r3, #64	; 0x40
 800e4e2:	4618      	mov	r0, r3
 800e4e4:	f7fc f8b4 	bl	800a650 <_ZN8touchgfx3BoxD1Ev>
 800e4e8:	687b      	ldr	r3, [r7, #4]
 800e4ea:	4618      	mov	r0, r3
 800e4ec:	f7fe fff2 	bl	800d4d4 <_ZN8touchgfx4ViewI19MainScreenPresenterED1Ev>
{

}
 800e4f0:	687b      	ldr	r3, [r7, #4]
 800e4f2:	4618      	mov	r0, r3
 800e4f4:	3708      	adds	r7, #8
 800e4f6:	46bd      	mov	sp, r7
 800e4f8:	bd80      	pop	{r7, pc}
 800e4fa:	bf00      	nop
 800e4fc:	0802e0bc 	.word	0x0802e0bc

0800e500 <_ZN18MainScreenViewBaseD0Ev>:
MainScreenViewBase::~MainScreenViewBase()
 800e500:	b580      	push	{r7, lr}
 800e502:	b082      	sub	sp, #8
 800e504:	af00      	add	r7, sp, #0
 800e506:	6078      	str	r0, [r7, #4]
}
 800e508:	6878      	ldr	r0, [r7, #4]
 800e50a:	f7ff ffa1 	bl	800e450 <_ZN18MainScreenViewBaseD1Ev>
 800e50e:	f240 410c 	movw	r1, #1036	; 0x40c
 800e512:	6878      	ldr	r0, [r7, #4]
 800e514:	f01b fe7b 	bl	802a20e <_ZdlPvj>
 800e518:	687b      	ldr	r3, [r7, #4]
 800e51a:	4618      	mov	r0, r3
 800e51c:	3708      	adds	r7, #8
 800e51e:	46bd      	mov	sp, r7
 800e520:	bd80      	pop	{r7, pc}

0800e522 <_ZN18MainScreenViewBase11setupScreenEv>:

void MainScreenViewBase::setupScreen()
{
 800e522:	b480      	push	{r7}
 800e524:	b083      	sub	sp, #12
 800e526:	af00      	add	r7, sp, #0
 800e528:	6078      	str	r0, [r7, #4]

}
 800e52a:	bf00      	nop
 800e52c:	370c      	adds	r7, #12
 800e52e:	46bd      	mov	sp, r7
 800e530:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e534:	4770      	bx	lr

0800e536 <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void MainScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800e536:	b580      	push	{r7, lr}
 800e538:	b082      	sub	sp, #8
 800e53a:	af00      	add	r7, sp, #0
 800e53c:	6078      	str	r0, [r7, #4]
 800e53e:	6039      	str	r1, [r7, #0]
    if (&src == &Clock_button)
 800e540:	687b      	ldr	r3, [r7, #4]
 800e542:	33b4      	adds	r3, #180	; 0xb4
 800e544:	683a      	ldr	r2, [r7, #0]
 800e546:	429a      	cmp	r2, r3
 800e548:	d106      	bne.n	800e558 <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //MainToClock
        //When Clock_button clicked change screen to ClockScreen
        //Go to ClockScreen with screen transition towards East
        application().gotoClockScreenScreenSlideTransitionEast();
 800e54a:	6878      	ldr	r0, [r7, #4]
 800e54c:	f7fe ffb6 	bl	800d4bc <_ZN18MainScreenViewBase11applicationEv>
 800e550:	4603      	mov	r3, r0
 800e552:	4618      	mov	r0, r3
 800e554:	f7fc fcd6 	bl	800af04 <_ZN23FrontendApplicationBase40gotoClockScreenScreenSlideTransitionEastEv>
    }
    if (&src == &Pressure_button)
 800e558:	687b      	ldr	r3, [r7, #4]
 800e55a:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800e55e:	683a      	ldr	r2, [r7, #0]
 800e560:	429a      	cmp	r2, r3
 800e562:	d106      	bne.n	800e572 <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3c>
    {
        //MainToPressure
        //When Pressure_button clicked change screen to PressureScreen
        //Go to PressureScreen with screen transition towards East
        application().gotoPressureScreenScreenSlideTransitionEast();
 800e564:	6878      	ldr	r0, [r7, #4]
 800e566:	f7fe ffa9 	bl	800d4bc <_ZN18MainScreenViewBase11applicationEv>
 800e56a:	4603      	mov	r3, r0
 800e56c:	4618      	mov	r0, r3
 800e56e:	f7fc fd55 	bl	800b01c <_ZN23FrontendApplicationBase43gotoPressureScreenScreenSlideTransitionEastEv>
    }
    if (&src == &Temperature_button)
 800e572:	687b      	ldr	r3, [r7, #4]
 800e574:	f503 7307 	add.w	r3, r3, #540	; 0x21c
 800e578:	683a      	ldr	r2, [r7, #0]
 800e57a:	429a      	cmp	r2, r3
 800e57c:	d106      	bne.n	800e58c <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x56>
    {
        //MainToTempertature
        //When Temperature_button clicked change screen to TemperatureScreen
        //Go to TemperatureScreen with screen transition towards East
        application().gotoTemperatureScreenScreenSlideTransitionEast();
 800e57e:	6878      	ldr	r0, [r7, #4]
 800e580:	f7fe ff9c 	bl	800d4bc <_ZN18MainScreenViewBase11applicationEv>
 800e584:	4603      	mov	r3, r0
 800e586:	4618      	mov	r0, r3
 800e588:	f7fc fd02 	bl	800af90 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenSlideTransitionEastEv>
    }
    if (&src == &CO_button)
 800e58c:	687b      	ldr	r3, [r7, #4]
 800e58e:	f503 73d2 	add.w	r3, r3, #420	; 0x1a4
 800e592:	683a      	ldr	r2, [r7, #0]
 800e594:	429a      	cmp	r2, r3
 800e596:	d106      	bne.n	800e5a6 <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x70>
    {
        //MainToCO
        //When CO_button clicked change screen to COScreen
        //Go to COScreen with screen transition towards East
        application().gotoCOScreenScreenSlideTransitionEast();
 800e598:	6878      	ldr	r0, [r7, #4]
 800e59a:	f7fe ff8f 	bl	800d4bc <_ZN18MainScreenViewBase11applicationEv>
 800e59e:	4603      	mov	r3, r0
 800e5a0:	4618      	mov	r0, r3
 800e5a2:	f7fc fd81 	bl	800b0a8 <_ZN23FrontendApplicationBase37gotoCOScreenScreenSlideTransitionEastEv>
    }
}
 800e5a6:	bf00      	nop
 800e5a8:	3708      	adds	r7, #8
 800e5aa:	46bd      	mov	sp, r7
 800e5ac:	bd80      	pop	{r7, pc}
	...

0800e5b0 <_ZN8touchgfx4ViewI19MainScreenPresenterEC1Ev>:
    View()
 800e5b0:	b580      	push	{r7, lr}
 800e5b2:	b082      	sub	sp, #8
 800e5b4:	af00      	add	r7, sp, #0
 800e5b6:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800e5b8:	687b      	ldr	r3, [r7, #4]
 800e5ba:	4618      	mov	r0, r3
 800e5bc:	f00b ffd8 	bl	801a570 <_ZN8touchgfx6ScreenC1Ev>
 800e5c0:	4a05      	ldr	r2, [pc, #20]	; (800e5d8 <_ZN8touchgfx4ViewI19MainScreenPresenterEC1Ev+0x28>)
 800e5c2:	687b      	ldr	r3, [r7, #4]
 800e5c4:	601a      	str	r2, [r3, #0]
 800e5c6:	687b      	ldr	r3, [r7, #4]
 800e5c8:	2200      	movs	r2, #0
 800e5ca:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800e5cc:	687b      	ldr	r3, [r7, #4]
 800e5ce:	4618      	mov	r0, r3
 800e5d0:	3708      	adds	r7, #8
 800e5d2:	46bd      	mov	sp, r7
 800e5d4:	bd80      	pop	{r7, pc}
 800e5d6:	bf00      	nop
 800e5d8:	0802e1a4 	.word	0x0802e1a4

0800e5dc <_ZN8touchgfx18ClickButtonTriggerC1Ev>:
class ClickButtonTrigger : public AbstractButtonContainer
 800e5dc:	b580      	push	{r7, lr}
 800e5de:	b082      	sub	sp, #8
 800e5e0:	af00      	add	r7, sp, #0
 800e5e2:	6078      	str	r0, [r7, #4]
 800e5e4:	687b      	ldr	r3, [r7, #4]
 800e5e6:	4618      	mov	r0, r3
 800e5e8:	f7fe fe26 	bl	800d238 <_ZN8touchgfx23AbstractButtonContainerC1Ev>
 800e5ec:	4a03      	ldr	r2, [pc, #12]	; (800e5fc <_ZN8touchgfx18ClickButtonTriggerC1Ev+0x20>)
 800e5ee:	687b      	ldr	r3, [r7, #4]
 800e5f0:	601a      	str	r2, [r3, #0]
 800e5f2:	687b      	ldr	r3, [r7, #4]
 800e5f4:	4618      	mov	r0, r3
 800e5f6:	3708      	adds	r7, #8
 800e5f8:	46bd      	mov	sp, r7
 800e5fa:	bd80      	pop	{r7, pc}
 800e5fc:	0802e1d8 	.word	0x0802e1d8

0800e600 <_ZN8touchgfx18ClickButtonTriggerD1Ev>:
 800e600:	b580      	push	{r7, lr}
 800e602:	b082      	sub	sp, #8
 800e604:	af00      	add	r7, sp, #0
 800e606:	6078      	str	r0, [r7, #4]
 800e608:	4a05      	ldr	r2, [pc, #20]	; (800e620 <_ZN8touchgfx18ClickButtonTriggerD1Ev+0x20>)
 800e60a:	687b      	ldr	r3, [r7, #4]
 800e60c:	601a      	str	r2, [r3, #0]
 800e60e:	687b      	ldr	r3, [r7, #4]
 800e610:	4618      	mov	r0, r3
 800e612:	f7fe ff31 	bl	800d478 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800e616:	687b      	ldr	r3, [r7, #4]
 800e618:	4618      	mov	r0, r3
 800e61a:	3708      	adds	r7, #8
 800e61c:	46bd      	mov	sp, r7
 800e61e:	bd80      	pop	{r7, pc}
 800e620:	0802e1d8 	.word	0x0802e1d8

0800e624 <_ZN8touchgfx18ClickButtonTriggerD0Ev>:
 800e624:	b580      	push	{r7, lr}
 800e626:	b082      	sub	sp, #8
 800e628:	af00      	add	r7, sp, #0
 800e62a:	6078      	str	r0, [r7, #4]
 800e62c:	6878      	ldr	r0, [r7, #4]
 800e62e:	f7ff ffe7 	bl	800e600 <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800e632:	2134      	movs	r1, #52	; 0x34
 800e634:	6878      	ldr	r0, [r7, #4]
 800e636:	f01b fdea 	bl	802a20e <_ZdlPvj>
 800e63a:	687b      	ldr	r3, [r7, #4]
 800e63c:	4618      	mov	r0, r3
 800e63e:	3708      	adds	r7, #8
 800e640:	46bd      	mov	sp, r7
 800e642:	bd80      	pop	{r7, pc}

0800e644 <_ZN8touchgfx13BoxWithBorderD1Ev>:
class BoxWithBorder : public Box
 800e644:	b580      	push	{r7, lr}
 800e646:	b082      	sub	sp, #8
 800e648:	af00      	add	r7, sp, #0
 800e64a:	6078      	str	r0, [r7, #4]
 800e64c:	4a05      	ldr	r2, [pc, #20]	; (800e664 <_ZN8touchgfx13BoxWithBorderD1Ev+0x20>)
 800e64e:	687b      	ldr	r3, [r7, #4]
 800e650:	601a      	str	r2, [r3, #0]
 800e652:	687b      	ldr	r3, [r7, #4]
 800e654:	4618      	mov	r0, r3
 800e656:	f7fb fffb 	bl	800a650 <_ZN8touchgfx3BoxD1Ev>
 800e65a:	687b      	ldr	r3, [r7, #4]
 800e65c:	4618      	mov	r0, r3
 800e65e:	3708      	adds	r7, #8
 800e660:	46bd      	mov	sp, r7
 800e662:	bd80      	pop	{r7, pc}
 800e664:	0802f650 	.word	0x0802f650

0800e668 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800e668:	b580      	push	{r7, lr}
 800e66a:	b082      	sub	sp, #8
 800e66c:	af00      	add	r7, sp, #0
 800e66e:	6078      	str	r0, [r7, #4]
 800e670:	6878      	ldr	r0, [r7, #4]
 800e672:	f7ff ffe7 	bl	800e644 <_ZN8touchgfx13BoxWithBorderD1Ev>
 800e676:	2134      	movs	r1, #52	; 0x34
 800e678:	6878      	ldr	r0, [r7, #4]
 800e67a:	f01b fdc8 	bl	802a20e <_ZdlPvj>
 800e67e:	687b      	ldr	r3, [r7, #4]
 800e680:	4618      	mov	r0, r3
 800e682:	3708      	adds	r7, #8
 800e684:	46bd      	mov	sp, r7
 800e686:	bd80      	pop	{r7, pc}

0800e688 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
 */
template <class T>
class BoxWithBorderButtonStyle : public T
{
public:
    BoxWithBorderButtonStyle()
 800e688:	b580      	push	{r7, lr}
 800e68a:	b082      	sub	sp, #8
 800e68c:	af00      	add	r7, sp, #0
 800e68e:	6078      	str	r0, [r7, #4]
        : T(), up(), down()
 800e690:	687b      	ldr	r3, [r7, #4]
 800e692:	4618      	mov	r0, r3
 800e694:	2334      	movs	r3, #52	; 0x34
 800e696:	461a      	mov	r2, r3
 800e698:	2100      	movs	r1, #0
 800e69a:	f01c ffae 	bl	802b5fa <memset>
 800e69e:	687b      	ldr	r3, [r7, #4]
 800e6a0:	4618      	mov	r0, r3
 800e6a2:	f7ff ff9b 	bl	800e5dc <_ZN8touchgfx18ClickButtonTriggerC1Ev>
 800e6a6:	4a17      	ldr	r2, [pc, #92]	; (800e704 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x7c>)
 800e6a8:	687b      	ldr	r3, [r7, #4]
 800e6aa:	601a      	str	r2, [r3, #0]
 800e6ac:	687b      	ldr	r3, [r7, #4]
 800e6ae:	3334      	adds	r3, #52	; 0x34
 800e6b0:	4618      	mov	r0, r3
 800e6b2:	f7fe fe5b 	bl	800d36c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800e6b6:	687b      	ldr	r3, [r7, #4]
 800e6b8:	3368      	adds	r3, #104	; 0x68
 800e6ba:	4618      	mov	r0, r3
 800e6bc:	f7fe fd60 	bl	800d180 <_ZN8touchgfx9colortypeC1Ev>
 800e6c0:	687b      	ldr	r3, [r7, #4]
 800e6c2:	336c      	adds	r3, #108	; 0x6c
 800e6c4:	4618      	mov	r0, r3
 800e6c6:	f7fe fd5b 	bl	800d180 <_ZN8touchgfx9colortypeC1Ev>
 800e6ca:	687b      	ldr	r3, [r7, #4]
 800e6cc:	3370      	adds	r3, #112	; 0x70
 800e6ce:	4618      	mov	r0, r3
 800e6d0:	f7fe fd56 	bl	800d180 <_ZN8touchgfx9colortypeC1Ev>
 800e6d4:	687b      	ldr	r3, [r7, #4]
 800e6d6:	3374      	adds	r3, #116	; 0x74
 800e6d8:	4618      	mov	r0, r3
 800e6da:	f7fe fd51 	bl	800d180 <_ZN8touchgfx9colortypeC1Ev>
    {
        borderBox.setXY(0, 0);
 800e6de:	687b      	ldr	r3, [r7, #4]
 800e6e0:	3334      	adds	r3, #52	; 0x34
 800e6e2:	2200      	movs	r2, #0
 800e6e4:	2100      	movs	r1, #0
 800e6e6:	4618      	mov	r0, r3
 800e6e8:	f7fb f8c3 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 800e6ec:	687a      	ldr	r2, [r7, #4]
 800e6ee:	687b      	ldr	r3, [r7, #4]
 800e6f0:	3334      	adds	r3, #52	; 0x34
 800e6f2:	4619      	mov	r1, r3
 800e6f4:	4610      	mov	r0, r2
 800e6f6:	f004 f9b5 	bl	8012a64 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800e6fa:	687b      	ldr	r3, [r7, #4]
 800e6fc:	4618      	mov	r0, r3
 800e6fe:	3708      	adds	r7, #8
 800e700:	46bd      	mov	sp, r7
 800e702:	bd80      	pop	{r7, pc}
 800e704:	0802e108 	.word	0x0802e108

0800e708 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800e708:	b480      	push	{r7}
 800e70a:	b083      	sub	sp, #12
 800e70c:	af00      	add	r7, sp, #0
 800e70e:	6078      	str	r0, [r7, #4]
 800e710:	4a04      	ldr	r2, [pc, #16]	; (800e724 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev+0x1c>)
 800e712:	687b      	ldr	r3, [r7, #4]
 800e714:	601a      	str	r2, [r3, #0]
 800e716:	687b      	ldr	r3, [r7, #4]
 800e718:	4618      	mov	r0, r3
 800e71a:	370c      	adds	r7, #12
 800e71c:	46bd      	mov	sp, r7
 800e71e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e722:	4770      	bx	lr
 800e724:	0802e274 	.word	0x0802e274

0800e728 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800e728:	b580      	push	{r7, lr}
 800e72a:	b084      	sub	sp, #16
 800e72c:	af00      	add	r7, sp, #0
 800e72e:	60f8      	str	r0, [r7, #12]
 800e730:	60b9      	str	r1, [r7, #8]
 800e732:	4639      	mov	r1, r7
 800e734:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800e738:	68fb      	ldr	r3, [r7, #12]
 800e73a:	4618      	mov	r0, r3
 800e73c:	f7ff ffe4 	bl	800e708 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800e740:	4a08      	ldr	r2, [pc, #32]	; (800e764 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800e742:	68fb      	ldr	r3, [r7, #12]
 800e744:	601a      	str	r2, [r3, #0]
 800e746:	68fb      	ldr	r3, [r7, #12]
 800e748:	68ba      	ldr	r2, [r7, #8]
 800e74a:	605a      	str	r2, [r3, #4]
 800e74c:	68fb      	ldr	r3, [r7, #12]
 800e74e:	3308      	adds	r3, #8
 800e750:	463a      	mov	r2, r7
 800e752:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e756:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800e75a:	68fb      	ldr	r3, [r7, #12]
 800e75c:	4618      	mov	r0, r3
 800e75e:	3710      	adds	r7, #16
 800e760:	46bd      	mov	sp, r7
 800e762:	bd80      	pop	{r7, pc}
 800e764:	0802e0f0 	.word	0x0802e0f0

0800e768 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>:
     * @param  width  The width of this BoxWithBorderButtonStyle.
     * @param  height The height of this BoxWithBorderButtonStyle.
     *
     * @note Changing this does not automatically yield a redraw.
     */
    void setBoxWithBorderPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800e768:	b590      	push	{r4, r7, lr}
 800e76a:	b087      	sub	sp, #28
 800e76c:	af02      	add	r7, sp, #8
 800e76e:	60f8      	str	r0, [r7, #12]
 800e770:	4608      	mov	r0, r1
 800e772:	4611      	mov	r1, r2
 800e774:	461a      	mov	r2, r3
 800e776:	4603      	mov	r3, r0
 800e778:	817b      	strh	r3, [r7, #10]
 800e77a:	460b      	mov	r3, r1
 800e77c:	813b      	strh	r3, [r7, #8]
 800e77e:	4613      	mov	r3, r2
 800e780:	80fb      	strh	r3, [r7, #6]
    {
        borderBox.setPosition(x, y, width, height);
 800e782:	68fb      	ldr	r3, [r7, #12]
 800e784:	f103 0034 	add.w	r0, r3, #52	; 0x34
 800e788:	f9b7 4006 	ldrsh.w	r4, [r7, #6]
 800e78c:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800e790:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800e794:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 800e798:	9300      	str	r3, [sp, #0]
 800e79a:	4623      	mov	r3, r4
 800e79c:	f7fb f82a 	bl	80097f4 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800e7a0:	bf00      	nop
 800e7a2:	3714      	adds	r7, #20
 800e7a4:	46bd      	mov	sp, r7
 800e7a6:	bd90      	pop	{r4, r7, pc}

0800e7a8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>:
    /**
     * Sets border size.
     *
     * @param  size The size.
     */
    void setBorderSize(uint8_t size)
 800e7a8:	b580      	push	{r7, lr}
 800e7aa:	b082      	sub	sp, #8
 800e7ac:	af00      	add	r7, sp, #0
 800e7ae:	6078      	str	r0, [r7, #4]
 800e7b0:	460b      	mov	r3, r1
 800e7b2:	70fb      	strb	r3, [r7, #3]
    {
        borderBox.setBorderSize(size);
 800e7b4:	687b      	ldr	r3, [r7, #4]
 800e7b6:	3334      	adds	r3, #52	; 0x34
 800e7b8:	78fa      	ldrb	r2, [r7, #3]
 800e7ba:	b292      	uxth	r2, r2
 800e7bc:	4611      	mov	r1, r2
 800e7be:	4618      	mov	r0, r3
 800e7c0:	f7fe fdfe 	bl	800d3c0 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    }
 800e7c4:	bf00      	nop
 800e7c6:	3708      	adds	r7, #8
 800e7c8:	46bd      	mov	sp, r7
 800e7ca:	bd80      	pop	{r7, pc}

0800e7cc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 800e7cc:	b580      	push	{r7, lr}
 800e7ce:	b084      	sub	sp, #16
 800e7d0:	af00      	add	r7, sp, #0
 800e7d2:	60f8      	str	r0, [r7, #12]
 800e7d4:	60b9      	str	r1, [r7, #8]
 800e7d6:	607a      	str	r2, [r7, #4]
 800e7d8:	603b      	str	r3, [r7, #0]
        up = colorReleased;
 800e7da:	68fb      	ldr	r3, [r7, #12]
 800e7dc:	68ba      	ldr	r2, [r7, #8]
 800e7de:	669a      	str	r2, [r3, #104]	; 0x68
        down = colorPressed;
 800e7e0:	68fb      	ldr	r3, [r7, #12]
 800e7e2:	687a      	ldr	r2, [r7, #4]
 800e7e4:	66da      	str	r2, [r3, #108]	; 0x6c
        borderUp = borderColorReleased;
 800e7e6:	68fb      	ldr	r3, [r7, #12]
 800e7e8:	683a      	ldr	r2, [r7, #0]
 800e7ea:	671a      	str	r2, [r3, #112]	; 0x70
        borderDown = borderColorPressed;
 800e7ec:	68fb      	ldr	r3, [r7, #12]
 800e7ee:	69ba      	ldr	r2, [r7, #24]
 800e7f0:	675a      	str	r2, [r3, #116]	; 0x74
        handlePressedUpdated();
 800e7f2:	68fb      	ldr	r3, [r7, #12]
 800e7f4:	681b      	ldr	r3, [r3, #0]
 800e7f6:	338c      	adds	r3, #140	; 0x8c
 800e7f8:	681b      	ldr	r3, [r3, #0]
 800e7fa:	68f8      	ldr	r0, [r7, #12]
 800e7fc:	4798      	blx	r3
    }
 800e7fe:	bf00      	nop
 800e800:	3710      	adds	r7, #16
 800e802:	46bd      	mov	sp, r7
 800e804:	bd80      	pop	{r7, pc}
	...

0800e808 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>:
    virtual ~GenericCallback()
 800e808:	b480      	push	{r7}
 800e80a:	b083      	sub	sp, #12
 800e80c:	af00      	add	r7, sp, #0
 800e80e:	6078      	str	r0, [r7, #4]
    }
 800e810:	4a04      	ldr	r2, [pc, #16]	; (800e824 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev+0x1c>)
 800e812:	687b      	ldr	r3, [r7, #4]
 800e814:	601a      	str	r2, [r3, #0]
 800e816:	687b      	ldr	r3, [r7, #4]
 800e818:	4618      	mov	r0, r3
 800e81a:	370c      	adds	r7, #12
 800e81c:	46bd      	mov	sp, r7
 800e81e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e822:	4770      	bx	lr
 800e824:	0802e274 	.word	0x0802e274

0800e828 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED0Ev>:
    virtual ~GenericCallback()
 800e828:	b580      	push	{r7, lr}
 800e82a:	b082      	sub	sp, #8
 800e82c:	af00      	add	r7, sp, #0
 800e82e:	6078      	str	r0, [r7, #4]
    }
 800e830:	6878      	ldr	r0, [r7, #4]
 800e832:	f7ff ffe9 	bl	800e808 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800e836:	2104      	movs	r1, #4
 800e838:	6878      	ldr	r0, [r7, #4]
 800e83a:	f01b fce8 	bl	802a20e <_ZdlPvj>
 800e83e:	687b      	ldr	r3, [r7, #4]
 800e840:	4618      	mov	r0, r3
 800e842:	3708      	adds	r7, #8
 800e844:	46bd      	mov	sp, r7
 800e846:	bd80      	pop	{r7, pc}

0800e848 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype down;          ///< The down
    colortype borderUp;      ///< The border up
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800e848:	b590      	push	{r4, r7, lr}
 800e84a:	b083      	sub	sp, #12
 800e84c:	af00      	add	r7, sp, #0
 800e84e:	6078      	str	r0, [r7, #4]
    {
        borderBox.setColor(T::getPressed() ? down : up);
 800e850:	687b      	ldr	r3, [r7, #4]
 800e852:	f103 0434 	add.w	r4, r3, #52	; 0x34
 800e856:	687b      	ldr	r3, [r7, #4]
 800e858:	4618      	mov	r0, r3
 800e85a:	f7fe fd23 	bl	800d2a4 <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800e85e:	4603      	mov	r3, r0
 800e860:	2b00      	cmp	r3, #0
 800e862:	d002      	beq.n	800e86a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x22>
 800e864:	687b      	ldr	r3, [r7, #4]
 800e866:	336c      	adds	r3, #108	; 0x6c
 800e868:	e001      	b.n	800e86e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x26>
 800e86a:	687b      	ldr	r3, [r7, #4]
 800e86c:	3368      	adds	r3, #104	; 0x68
 800e86e:	6819      	ldr	r1, [r3, #0]
 800e870:	4620      	mov	r0, r4
 800e872:	f7fb f9d7 	bl	8009c24 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800e876:	687b      	ldr	r3, [r7, #4]
 800e878:	f103 0434 	add.w	r4, r3, #52	; 0x34
 800e87c:	687b      	ldr	r3, [r7, #4]
 800e87e:	4618      	mov	r0, r3
 800e880:	f7fe fd10 	bl	800d2a4 <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800e884:	4603      	mov	r3, r0
 800e886:	2b00      	cmp	r3, #0
 800e888:	d002      	beq.n	800e890 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x48>
 800e88a:	687b      	ldr	r3, [r7, #4]
 800e88c:	3374      	adds	r3, #116	; 0x74
 800e88e:	e001      	b.n	800e894 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x4c>
 800e890:	687b      	ldr	r3, [r7, #4]
 800e892:	3370      	adds	r3, #112	; 0x70
 800e894:	6819      	ldr	r1, [r3, #0]
 800e896:	4620      	mov	r0, r4
 800e898:	f7fe fd84 	bl	800d3a4 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
        T::handlePressedUpdated();
 800e89c:	687b      	ldr	r3, [r7, #4]
 800e89e:	4618      	mov	r0, r3
 800e8a0:	f7fe fd4f 	bl	800d342 <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>
    }
 800e8a4:	bf00      	nop
 800e8a6:	370c      	adds	r7, #12
 800e8a8:	46bd      	mov	sp, r7
 800e8aa:	bd90      	pop	{r4, r7, pc}

0800e8ac <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800e8ac:	b580      	push	{r7, lr}
 800e8ae:	b082      	sub	sp, #8
 800e8b0:	af00      	add	r7, sp, #0
 800e8b2:	6078      	str	r0, [r7, #4]
 800e8b4:	4a05      	ldr	r2, [pc, #20]	; (800e8cc <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800e8b6:	687b      	ldr	r3, [r7, #4]
 800e8b8:	601a      	str	r2, [r3, #0]
 800e8ba:	687b      	ldr	r3, [r7, #4]
 800e8bc:	4618      	mov	r0, r3
 800e8be:	f7ff ffa3 	bl	800e808 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800e8c2:	687b      	ldr	r3, [r7, #4]
 800e8c4:	4618      	mov	r0, r3
 800e8c6:	3708      	adds	r7, #8
 800e8c8:	46bd      	mov	sp, r7
 800e8ca:	bd80      	pop	{r7, pc}
 800e8cc:	0802e0f0 	.word	0x0802e0f0

0800e8d0 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800e8d0:	b580      	push	{r7, lr}
 800e8d2:	b082      	sub	sp, #8
 800e8d4:	af00      	add	r7, sp, #0
 800e8d6:	6078      	str	r0, [r7, #4]
 800e8d8:	6878      	ldr	r0, [r7, #4]
 800e8da:	f7ff ffe7 	bl	800e8ac <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800e8de:	2110      	movs	r1, #16
 800e8e0:	6878      	ldr	r0, [r7, #4]
 800e8e2:	f01b fc94 	bl	802a20e <_ZdlPvj>
 800e8e6:	687b      	ldr	r3, [r7, #4]
 800e8e8:	4618      	mov	r0, r3
 800e8ea:	3708      	adds	r7, #8
 800e8ec:	46bd      	mov	sp, r7
 800e8ee:	bd80      	pop	{r7, pc}

0800e8f0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
 800e8f0:	b580      	push	{r7, lr}
 800e8f2:	b082      	sub	sp, #8
 800e8f4:	af00      	add	r7, sp, #0
 800e8f6:	6078      	str	r0, [r7, #4]
 800e8f8:	4a08      	ldr	r2, [pc, #32]	; (800e91c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev+0x2c>)
 800e8fa:	687b      	ldr	r3, [r7, #4]
 800e8fc:	601a      	str	r2, [r3, #0]
 800e8fe:	687b      	ldr	r3, [r7, #4]
 800e900:	3334      	adds	r3, #52	; 0x34
 800e902:	4618      	mov	r0, r3
 800e904:	f7ff fe9e 	bl	800e644 <_ZN8touchgfx13BoxWithBorderD1Ev>
 800e908:	687b      	ldr	r3, [r7, #4]
 800e90a:	4618      	mov	r0, r3
 800e90c:	f7ff fe78 	bl	800e600 <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800e910:	687b      	ldr	r3, [r7, #4]
 800e912:	4618      	mov	r0, r3
 800e914:	3708      	adds	r7, #8
 800e916:	46bd      	mov	sp, r7
 800e918:	bd80      	pop	{r7, pc}
 800e91a:	bf00      	nop
 800e91c:	0802e108 	.word	0x0802e108

0800e920 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
 800e920:	b580      	push	{r7, lr}
 800e922:	b082      	sub	sp, #8
 800e924:	af00      	add	r7, sp, #0
 800e926:	6078      	str	r0, [r7, #4]
 800e928:	6878      	ldr	r0, [r7, #4]
 800e92a:	f7ff ffe1 	bl	800e8f0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800e92e:	2178      	movs	r1, #120	; 0x78
 800e930:	6878      	ldr	r0, [r7, #4]
 800e932:	f01b fc6c 	bl	802a20e <_ZdlPvj>
 800e936:	687b      	ldr	r3, [r7, #4]
 800e938:	4618      	mov	r0, r3
 800e93a:	3708      	adds	r7, #8
 800e93c:	46bd      	mov	sp, r7
 800e93e:	bd80      	pop	{r7, pc}

0800e940 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800e940:	b580      	push	{r7, lr}
 800e942:	b082      	sub	sp, #8
 800e944:	af00      	add	r7, sp, #0
 800e946:	6078      	str	r0, [r7, #4]
 800e948:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800e94a:	687b      	ldr	r3, [r7, #4]
 800e94c:	685b      	ldr	r3, [r3, #4]
 800e94e:	687a      	ldr	r2, [r7, #4]
 800e950:	68d2      	ldr	r2, [r2, #12]
 800e952:	1052      	asrs	r2, r2, #1
 800e954:	1898      	adds	r0, r3, r2
 800e956:	687b      	ldr	r3, [r7, #4]
 800e958:	68db      	ldr	r3, [r3, #12]
 800e95a:	f003 0301 	and.w	r3, r3, #1
 800e95e:	2b00      	cmp	r3, #0
 800e960:	d102      	bne.n	800e968 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800e962:	687b      	ldr	r3, [r7, #4]
 800e964:	689b      	ldr	r3, [r3, #8]
 800e966:	e00a      	b.n	800e97e <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800e968:	687b      	ldr	r3, [r7, #4]
 800e96a:	685b      	ldr	r3, [r3, #4]
 800e96c:	687a      	ldr	r2, [r7, #4]
 800e96e:	68d2      	ldr	r2, [r2, #12]
 800e970:	1052      	asrs	r2, r2, #1
 800e972:	4413      	add	r3, r2
 800e974:	681b      	ldr	r3, [r3, #0]
 800e976:	687a      	ldr	r2, [r7, #4]
 800e978:	6892      	ldr	r2, [r2, #8]
 800e97a:	4413      	add	r3, r2
 800e97c:	681b      	ldr	r3, [r3, #0]
 800e97e:	6839      	ldr	r1, [r7, #0]
 800e980:	4798      	blx	r3
    }
 800e982:	bf00      	nop
 800e984:	3708      	adds	r7, #8
 800e986:	46bd      	mov	sp, r7
 800e988:	bd80      	pop	{r7, pc}

0800e98a <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800e98a:	b480      	push	{r7}
 800e98c:	b083      	sub	sp, #12
 800e98e:	af00      	add	r7, sp, #0
 800e990:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800e992:	687b      	ldr	r3, [r7, #4]
 800e994:	685b      	ldr	r3, [r3, #4]
 800e996:	2b00      	cmp	r3, #0
 800e998:	d010      	beq.n	800e9bc <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800e99a:	687b      	ldr	r3, [r7, #4]
 800e99c:	689b      	ldr	r3, [r3, #8]
 800e99e:	2b00      	cmp	r3, #0
 800e9a0:	d107      	bne.n	800e9b2 <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800e9a2:	687b      	ldr	r3, [r7, #4]
 800e9a4:	68db      	ldr	r3, [r3, #12]
 800e9a6:	f003 0301 	and.w	r3, r3, #1
 800e9aa:	2b00      	cmp	r3, #0
 800e9ac:	d101      	bne.n	800e9b2 <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800e9ae:	2301      	movs	r3, #1
 800e9b0:	e000      	b.n	800e9b4 <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800e9b2:	2300      	movs	r3, #0
 800e9b4:	2b01      	cmp	r3, #1
 800e9b6:	d001      	beq.n	800e9bc <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800e9b8:	2301      	movs	r3, #1
 800e9ba:	e000      	b.n	800e9be <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800e9bc:	2300      	movs	r3, #0
    }
 800e9be:	4618      	mov	r0, r3
 800e9c0:	370c      	adds	r7, #12
 800e9c2:	46bd      	mov	sp, r7
 800e9c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9c8:	4770      	bx	lr

0800e9ca <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
 800e9ca:	b590      	push	{r4, r7, lr}
 800e9cc:	b083      	sub	sp, #12
 800e9ce:	af00      	add	r7, sp, #0
 800e9d0:	6078      	str	r0, [r7, #4]
    {
        borderBox.setAlpha(T::getAlpha());
 800e9d2:	687b      	ldr	r3, [r7, #4]
 800e9d4:	f103 0434 	add.w	r4, r3, #52	; 0x34
 800e9d8:	687b      	ldr	r3, [r7, #4]
 800e9da:	4618      	mov	r0, r3
 800e9dc:	f7fe fc6f 	bl	800d2be <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800e9e0:	4603      	mov	r3, r0
 800e9e2:	4619      	mov	r1, r3
 800e9e4:	4620      	mov	r0, r4
 800e9e6:	f7fe fc17 	bl	800d218 <_ZN8touchgfx3Box8setAlphaEh>
        T::handleAlphaUpdated();
 800e9ea:	687b      	ldr	r3, [r7, #4]
 800e9ec:	4618      	mov	r0, r3
 800e9ee:	f7fe fcb2 	bl	800d356 <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>
    }
 800e9f2:	bf00      	nop
 800e9f4:	370c      	adds	r7, #12
 800e9f6:	46bd      	mov	sp, r7
 800e9f8:	bd90      	pop	{r4, r7, pc}

0800e9fa <_ZN22PressureScreenViewBase11applicationEv>:
    PressureScreenViewBase();
    virtual ~PressureScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800e9fa:	b580      	push	{r7, lr}
 800e9fc:	b082      	sub	sp, #8
 800e9fe:	af00      	add	r7, sp, #0
 800ea00:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800ea02:	f00a f9a7 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 800ea06:	4603      	mov	r3, r0
    }
 800ea08:	4618      	mov	r0, r3
 800ea0a:	3708      	adds	r7, #8
 800ea0c:	46bd      	mov	sp, r7
 800ea0e:	bd80      	pop	{r7, pc}

0800ea10 <_ZN8touchgfx4ViewI23PressureScreenPresenterED1Ev>:
class View : public Screen
 800ea10:	b580      	push	{r7, lr}
 800ea12:	b082      	sub	sp, #8
 800ea14:	af00      	add	r7, sp, #0
 800ea16:	6078      	str	r0, [r7, #4]
 800ea18:	4a05      	ldr	r2, [pc, #20]	; (800ea30 <_ZN8touchgfx4ViewI23PressureScreenPresenterED1Ev+0x20>)
 800ea1a:	687b      	ldr	r3, [r7, #4]
 800ea1c:	601a      	str	r2, [r3, #0]
 800ea1e:	687b      	ldr	r3, [r7, #4]
 800ea20:	4618      	mov	r0, r3
 800ea22:	f7fb f81d 	bl	8009a60 <_ZN8touchgfx6ScreenD1Ev>
 800ea26:	687b      	ldr	r3, [r7, #4]
 800ea28:	4618      	mov	r0, r3
 800ea2a:	3708      	adds	r7, #8
 800ea2c:	46bd      	mov	sp, r7
 800ea2e:	bd80      	pop	{r7, pc}
 800ea30:	0802e374 	.word	0x0802e374

0800ea34 <_ZN8touchgfx4ViewI23PressureScreenPresenterED0Ev>:
 800ea34:	b580      	push	{r7, lr}
 800ea36:	b082      	sub	sp, #8
 800ea38:	af00      	add	r7, sp, #0
 800ea3a:	6078      	str	r0, [r7, #4]
 800ea3c:	6878      	ldr	r0, [r7, #4]
 800ea3e:	f7ff ffe7 	bl	800ea10 <_ZN8touchgfx4ViewI23PressureScreenPresenterED1Ev>
 800ea42:	2140      	movs	r1, #64	; 0x40
 800ea44:	6878      	ldr	r0, [r7, #4]
 800ea46:	f01b fbe2 	bl	802a20e <_ZdlPvj>
 800ea4a:	687b      	ldr	r3, [r7, #4]
 800ea4c:	4618      	mov	r0, r3
 800ea4e:	3708      	adds	r7, #8
 800ea50:	46bd      	mov	sp, r7
 800ea52:	bd80      	pop	{r7, pc}

0800ea54 <_ZN22PressureScreenViewBaseC1Ev>:
#include <gui_generated/pressurescreen_screen/PressureScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

PressureScreenViewBase::PressureScreenViewBase() :
 800ea54:	b590      	push	{r4, r7, lr}
 800ea56:	b0a5      	sub	sp, #148	; 0x94
 800ea58:	af02      	add	r7, sp, #8
 800ea5a:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &PressureScreenViewBase::buttonCallbackHandler)
 800ea5c:	697b      	ldr	r3, [r7, #20]
 800ea5e:	4618      	mov	r0, r3
 800ea60:	f000 fa9a 	bl	800ef98 <_ZN8touchgfx4ViewI23PressureScreenPresenterEC1Ev>
 800ea64:	4ad6      	ldr	r2, [pc, #856]	; (800edc0 <_ZN22PressureScreenViewBaseC1Ev+0x36c>)
 800ea66:	697b      	ldr	r3, [r7, #20]
 800ea68:	601a      	str	r2, [r3, #0]
 800ea6a:	697b      	ldr	r3, [r7, #20]
 800ea6c:	3340      	adds	r3, #64	; 0x40
 800ea6e:	4618      	mov	r0, r3
 800ea70:	f7fb f8b4 	bl	8009bdc <_ZN8touchgfx3BoxC1Ev>
 800ea74:	697b      	ldr	r3, [r7, #20]
 800ea76:	336c      	adds	r3, #108	; 0x6c
 800ea78:	4618      	mov	r0, r3
 800ea7a:	f007 fd51 	bl	8016520 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800ea7e:	697b      	ldr	r3, [r7, #20]
 800ea80:	33a8      	adds	r3, #168	; 0xa8
 800ea82:	4618      	mov	r0, r3
 800ea84:	f007 f9c4 	bl	8015e10 <_ZN8touchgfx5GaugeC1Ev>
 800ea88:	697b      	ldr	r3, [r7, #20]
 800ea8a:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800ea8e:	4618      	mov	r0, r3
 800ea90:	f7fb f8ec 	bl	8009c6c <_ZN8touchgfx8TextAreaC1Ev>
 800ea94:	697b      	ldr	r3, [r7, #20]
 800ea96:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800ea9a:	4618      	mov	r0, r3
 800ea9c:	f7fd fefe 	bl	800c89c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800eaa0:	697b      	ldr	r3, [r7, #20]
 800eaa2:	f503 703a 	add.w	r0, r3, #744	; 0x2e8
 800eaa6:	4bc7      	ldr	r3, [pc, #796]	; (800edc4 <_ZN22PressureScreenViewBaseC1Ev+0x370>)
 800eaa8:	623b      	str	r3, [r7, #32]
 800eaaa:	2300      	movs	r3, #0
 800eaac:	627b      	str	r3, [r7, #36]	; 0x24
 800eaae:	f107 0320 	add.w	r3, r7, #32
 800eab2:	cb0c      	ldmia	r3, {r2, r3}
 800eab4:	6979      	ldr	r1, [r7, #20]
 800eab6:	f000 fa85 	bl	800efc4 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800eaba:	697b      	ldr	r3, [r7, #20]
 800eabc:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800eac0:	23f0      	movs	r3, #240	; 0xf0
 800eac2:	9300      	str	r3, [sp, #0]
 800eac4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800eac8:	2200      	movs	r2, #0
 800eaca:	2100      	movs	r1, #0
 800eacc:	f7fa fe92 	bl	80097f4 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800ead0:	697b      	ldr	r3, [r7, #20]
 800ead2:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800ead6:	2300      	movs	r3, #0
 800ead8:	f887 3064 	strb.w	r3, [r7, #100]	; 0x64
 800eadc:	2300      	movs	r3, #0
 800eade:	f887 3063 	strb.w	r3, [r7, #99]	; 0x63
 800eae2:	2300      	movs	r3, #0
 800eae4:	f887 3062 	strb.w	r3, [r7, #98]	; 0x62
 800eae8:	f897 3064 	ldrb.w	r3, [r7, #100]	; 0x64
 800eaec:	041b      	lsls	r3, r3, #16
 800eaee:	461a      	mov	r2, r3
 800eaf0:	f897 3063 	ldrb.w	r3, [r7, #99]	; 0x63
 800eaf4:	021b      	lsls	r3, r3, #8
 800eaf6:	431a      	orrs	r2, r3
 800eaf8:	f897 3062 	ldrb.w	r3, [r7, #98]	; 0x62
 800eafc:	4313      	orrs	r3, r2
 800eafe:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800eb02:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800eb06:	4611      	mov	r1, r2
 800eb08:	4618      	mov	r0, r3
 800eb0a:	f7fa fdaf 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800eb0e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800eb10:	4619      	mov	r1, r3
 800eb12:	4620      	mov	r0, r4
 800eb14:	f7fb f886 	bl	8009c24 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800eb18:	697a      	ldr	r2, [r7, #20]
 800eb1a:	697b      	ldr	r3, [r7, #20]
 800eb1c:	3340      	adds	r3, #64	; 0x40
 800eb1e:	4619      	mov	r1, r3
 800eb20:	4610      	mov	r0, r2
 800eb22:	f7fa fff5 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    back.setXY(20, 103);
 800eb26:	697b      	ldr	r3, [r7, #20]
 800eb28:	336c      	adds	r3, #108	; 0x6c
 800eb2a:	2267      	movs	r2, #103	; 0x67
 800eb2c:	2114      	movs	r1, #20
 800eb2e:	4618      	mov	r0, r3
 800eb30:	f7fa fe9f 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
    back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
 800eb34:	697b      	ldr	r3, [r7, #20]
 800eb36:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800eb3a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800eb3e:	2100      	movs	r1, #0
 800eb40:	4618      	mov	r0, r3
 800eb42:	f7fa fdd9 	bl	80096f8 <_ZN8touchgfx6BitmapC1Et>
 800eb46:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800eb4a:	2101      	movs	r1, #1
 800eb4c:	4618      	mov	r0, r3
 800eb4e:	f7fa fdd3 	bl	80096f8 <_ZN8touchgfx6BitmapC1Et>
 800eb52:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800eb56:	2104      	movs	r1, #4
 800eb58:	4618      	mov	r0, r3
 800eb5a:	f7fa fdcd 	bl	80096f8 <_ZN8touchgfx6BitmapC1Et>
 800eb5e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800eb62:	2104      	movs	r1, #4
 800eb64:	4618      	mov	r0, r3
 800eb66:	f7fa fdc7 	bl	80096f8 <_ZN8touchgfx6BitmapC1Et>
 800eb6a:	f107 0030 	add.w	r0, r7, #48	; 0x30
 800eb6e:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800eb72:	f107 0128 	add.w	r1, r7, #40	; 0x28
 800eb76:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800eb7a:	9300      	str	r3, [sp, #0]
 800eb7c:	4603      	mov	r3, r0
 800eb7e:	4620      	mov	r0, r4
 800eb80:	f007 fc38 	bl	80163f4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    back.setIconXY(5, 5);
 800eb84:	697b      	ldr	r3, [r7, #20]
 800eb86:	336c      	adds	r3, #108	; 0x6c
 800eb88:	2205      	movs	r2, #5
 800eb8a:	2105      	movs	r1, #5
 800eb8c:	4618      	mov	r0, r3
 800eb8e:	f7fb fa77 	bl	800a080 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    back.setAction(buttonCallback);
 800eb92:	697b      	ldr	r3, [r7, #20]
 800eb94:	f103 026c 	add.w	r2, r3, #108	; 0x6c
 800eb98:	697b      	ldr	r3, [r7, #20]
 800eb9a:	f503 733a 	add.w	r3, r3, #744	; 0x2e8
 800eb9e:	4619      	mov	r1, r3
 800eba0:	4610      	mov	r0, r2
 800eba2:	f7fb fa1f 	bl	8009fe4 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(back);
 800eba6:	697a      	ldr	r2, [r7, #20]
 800eba8:	697b      	ldr	r3, [r7, #20]
 800ebaa:	336c      	adds	r3, #108	; 0x6c
 800ebac:	4619      	mov	r1, r3
 800ebae:	4610      	mov	r0, r2
 800ebb0:	f7fa ffae 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    PressureGauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_BACKGROUNDS_LIGHT_ID));
 800ebb4:	697b      	ldr	r3, [r7, #20]
 800ebb6:	f103 04a8 	add.w	r4, r3, #168	; 0xa8
 800ebba:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800ebbe:	2102      	movs	r1, #2
 800ebc0:	4618      	mov	r0, r3
 800ebc2:	f7fa fd99 	bl	80096f8 <_ZN8touchgfx6BitmapC1Et>
 800ebc6:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800ebca:	4619      	mov	r1, r3
 800ebcc:	4620      	mov	r0, r4
 800ebce:	f003 fd1e 	bl	801260e <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    PressureGauge.setPosition(166, 73, 120, 120);
 800ebd2:	697b      	ldr	r3, [r7, #20]
 800ebd4:	f103 00a8 	add.w	r0, r3, #168	; 0xa8
 800ebd8:	2378      	movs	r3, #120	; 0x78
 800ebda:	9300      	str	r3, [sp, #0]
 800ebdc:	2378      	movs	r3, #120	; 0x78
 800ebde:	2249      	movs	r2, #73	; 0x49
 800ebe0:	21a6      	movs	r1, #166	; 0xa6
 800ebe2:	f7fa fe07 	bl	80097f4 <_ZN8touchgfx8Drawable11setPositionEssss>
    PressureGauge.setCenter(60, 60);
 800ebe6:	697b      	ldr	r3, [r7, #20]
 800ebe8:	33a8      	adds	r3, #168	; 0xa8
 800ebea:	223c      	movs	r2, #60	; 0x3c
 800ebec:	213c      	movs	r1, #60	; 0x3c
 800ebee:	4618      	mov	r0, r3
 800ebf0:	f007 f9b9 	bl	8015f66 <_ZN8touchgfx5Gauge9setCenterEii>
    PressureGauge.setStartEndAngle(-90, 90);
 800ebf4:	697b      	ldr	r3, [r7, #20]
 800ebf6:	33a8      	adds	r3, #168	; 0xa8
 800ebf8:	225a      	movs	r2, #90	; 0x5a
 800ebfa:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800ebfe:	4618      	mov	r0, r3
 800ec00:	f007 fa36 	bl	8016070 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    PressureGauge.setRange(30000, 110000);
 800ec04:	697b      	ldr	r3, [r7, #20]
 800ec06:	f103 00a8 	add.w	r0, r3, #168	; 0xa8
 800ec0a:	2300      	movs	r3, #0
 800ec0c:	9300      	str	r3, [sp, #0]
 800ec0e:	2300      	movs	r3, #0
 800ec10:	4a6d      	ldr	r2, [pc, #436]	; (800edc8 <_ZN22PressureScreenViewBaseC1Ev+0x374>)
 800ec12:	f247 5130 	movw	r1, #30000	; 0x7530
 800ec16:	f003 fbd4 	bl	80123c2 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    PressureGauge.setValue(30000);
 800ec1a:	697b      	ldr	r3, [r7, #20]
 800ec1c:	33a8      	adds	r3, #168	; 0xa8
 800ec1e:	f247 5130 	movw	r1, #30000	; 0x7530
 800ec22:	4618      	mov	r0, r3
 800ec24:	f007 f9ce 	bl	8015fc4 <_ZN8touchgfx5Gauge8setValueEi>
    PressureGauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_NEEDLES_ROUGH_ID, 5, 33);
 800ec28:	697b      	ldr	r3, [r7, #20]
 800ec2a:	f103 00a8 	add.w	r0, r3, #168	; 0xa8
 800ec2e:	2321      	movs	r3, #33	; 0x21
 800ec30:	2205      	movs	r2, #5
 800ec32:	2103      	movs	r1, #3
 800ec34:	f007 f982 	bl	8015f3c <_ZN8touchgfx5Gauge9setNeedleEtss>
    PressureGauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800ec38:	697b      	ldr	r3, [r7, #20]
 800ec3a:	33a8      	adds	r3, #168	; 0xa8
 800ec3c:	2101      	movs	r1, #1
 800ec3e:	4618      	mov	r0, r3
 800ec40:	f007 f91e 	bl	8015e80 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    PressureGauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800ec44:	697b      	ldr	r3, [r7, #20]
 800ec46:	33a8      	adds	r3, #168	; 0xa8
 800ec48:	2101      	movs	r1, #1
 800ec4a:	4618      	mov	r0, r3
 800ec4c:	f007 f91b 	bl	8015e86 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(PressureGauge);
 800ec50:	697a      	ldr	r2, [r7, #20]
 800ec52:	697b      	ldr	r3, [r7, #20]
 800ec54:	33a8      	adds	r3, #168	; 0xa8
 800ec56:	4619      	mov	r1, r3
 800ec58:	4610      	mov	r0, r2
 800ec5a:	f7fa ff59 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Pressure_text.setXY(74, 10);
 800ec5e:	697b      	ldr	r3, [r7, #20]
 800ec60:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800ec64:	220a      	movs	r2, #10
 800ec66:	214a      	movs	r1, #74	; 0x4a
 800ec68:	4618      	mov	r0, r3
 800ec6a:	f7fa fe02 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
    Pressure_text.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
 800ec6e:	697b      	ldr	r3, [r7, #20]
 800ec70:	f503 7412 	add.w	r4, r3, #584	; 0x248
 800ec74:	23f2      	movs	r3, #242	; 0xf2
 800ec76:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 800ec7a:	23ae      	movs	r3, #174	; 0xae
 800ec7c:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
 800ec80:	23ae      	movs	r3, #174	; 0xae
 800ec82:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 800ec86:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800ec8a:	041b      	lsls	r3, r3, #16
 800ec8c:	461a      	mov	r2, r3
 800ec8e:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 800ec92:	021b      	lsls	r3, r3, #8
 800ec94:	431a      	orrs	r2, r3
 800ec96:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 800ec9a:	4313      	orrs	r3, r2
 800ec9c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800eca0:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800eca4:	4611      	mov	r1, r2
 800eca6:	4618      	mov	r0, r3
 800eca8:	f7fa fce0 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800ecac:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800ecae:	66bc      	str	r4, [r7, #104]	; 0x68
 800ecb0:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800ecb2:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800ecb4:	69fa      	ldr	r2, [r7, #28]
 800ecb6:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800ecb8:	bf00      	nop
    Pressure_text.setLinespacing(0);
 800ecba:	697b      	ldr	r3, [r7, #20]
 800ecbc:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800ecc0:	673b      	str	r3, [r7, #112]	; 0x70
 800ecc2:	2300      	movs	r3, #0
 800ecc4:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
        linespace = space;
 800ecc8:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800ecca:	f8b7 206e 	ldrh.w	r2, [r7, #110]	; 0x6e
 800ecce:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800ecd0:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800ecd2:	681b      	ldr	r3, [r3, #0]
 800ecd4:	3384      	adds	r3, #132	; 0x84
 800ecd6:	681b      	ldr	r3, [r3, #0]
 800ecd8:	6f3c      	ldr	r4, [r7, #112]	; 0x70
 800ecda:	463a      	mov	r2, r7
 800ecdc:	6f39      	ldr	r1, [r7, #112]	; 0x70
 800ecde:	4610      	mov	r0, r2
 800ece0:	4798      	blx	r3
 800ece2:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800ece6:	463a      	mov	r2, r7
 800ece8:	ca07      	ldmia	r2, {r0, r1, r2}
 800ecea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800ecee:	bf00      	nop
    Pressure_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NHFJ));
 800ecf0:	697b      	ldr	r3, [r7, #20]
 800ecf2:	f503 7412 	add.w	r4, r3, #584	; 0x248
 800ecf6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800ecfa:	2107      	movs	r1, #7
 800ecfc:	4618      	mov	r0, r3
 800ecfe:	f7fa ff9f 	bl	8009c40 <_ZN8touchgfx9TypedTextC1Et>
 800ed02:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800ed06:	4619      	mov	r1, r3
 800ed08:	4620      	mov	r0, r4
 800ed0a:	f006 fff3 	bl	8015cf4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800ed0e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800ed12:	4618      	mov	r0, r3
 800ed14:	f7fa fac2 	bl	800929c <_ZN8touchgfx9TypedTextD1Ev>
    add(Pressure_text);
 800ed18:	697a      	ldr	r2, [r7, #20]
 800ed1a:	697b      	ldr	r3, [r7, #20]
 800ed1c:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800ed20:	4619      	mov	r1, r3
 800ed22:	4610      	mov	r0, r2
 800ed24:	f7fa fef4 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    PressureData.setXY(187, 202);
 800ed28:	697b      	ldr	r3, [r7, #20]
 800ed2a:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800ed2e:	22ca      	movs	r2, #202	; 0xca
 800ed30:	21bb      	movs	r1, #187	; 0xbb
 800ed32:	4618      	mov	r0, r3
 800ed34:	f7fa fd9d 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
    PressureData.setColor(touchgfx::Color::getColorFromRGB(214, 195, 195));
 800ed38:	697b      	ldr	r3, [r7, #20]
 800ed3a:	f503 7424 	add.w	r4, r3, #656	; 0x290
 800ed3e:	23d6      	movs	r3, #214	; 0xd6
 800ed40:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
 800ed44:	23c3      	movs	r3, #195	; 0xc3
 800ed46:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 800ed4a:	23c3      	movs	r3, #195	; 0xc3
 800ed4c:	f887 3075 	strb.w	r3, [r7, #117]	; 0x75
 800ed50:	f897 3077 	ldrb.w	r3, [r7, #119]	; 0x77
 800ed54:	041b      	lsls	r3, r3, #16
 800ed56:	461a      	mov	r2, r3
 800ed58:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 800ed5c:	021b      	lsls	r3, r3, #8
 800ed5e:	431a      	orrs	r2, r3
 800ed60:	f897 3075 	ldrb.w	r3, [r7, #117]	; 0x75
 800ed64:	4313      	orrs	r3, r2
 800ed66:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ed6a:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800ed6e:	4611      	mov	r1, r2
 800ed70:	4618      	mov	r0, r3
 800ed72:	f7fa fc7b 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800ed76:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800ed78:	67bc      	str	r4, [r7, #120]	; 0x78
 800ed7a:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800ed7c:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800ed7e:	69ba      	ldr	r2, [r7, #24]
 800ed80:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800ed82:	bf00      	nop
    PressureData.setLinespacing(0);
 800ed84:	697b      	ldr	r3, [r7, #20]
 800ed86:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800ed8a:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800ed8e:	2300      	movs	r3, #0
 800ed90:	f8a7 307e 	strh.w	r3, [r7, #126]	; 0x7e
        linespace = space;
 800ed94:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800ed98:	f8b7 207e 	ldrh.w	r2, [r7, #126]	; 0x7e
 800ed9c:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800ed9e:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800eda2:	681b      	ldr	r3, [r3, #0]
 800eda4:	3384      	adds	r3, #132	; 0x84
 800eda6:	681b      	ldr	r3, [r3, #0]
 800eda8:	f8d7 4080 	ldr.w	r4, [r7, #128]	; 0x80
 800edac:	463a      	mov	r2, r7
 800edae:	f8d7 1080 	ldr.w	r1, [r7, #128]	; 0x80
 800edb2:	4610      	mov	r0, r2
 800edb4:	4798      	blx	r3
 800edb6:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800edba:	463a      	mov	r2, r7
 800edbc:	ca07      	ldmia	r2, {r0, r1, r2}
 800edbe:	e005      	b.n	800edcc <_ZN22PressureScreenViewBaseC1Ev+0x378>
 800edc0:	0802e328 	.word	0x0802e328
 800edc4:	0800ef6f 	.word	0x0800ef6f
 800edc8:	0001adb0 	.word	0x0001adb0
 800edcc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800edd0:	bf00      	nop
    Unicode::snprintf(PressureDataBuffer, PRESSUREDATA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_6W6Z).getText());
 800edd2:	697b      	ldr	r3, [r7, #20]
 800edd4:	f503 7437 	add.w	r4, r3, #732	; 0x2dc
 800edd8:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800eddc:	2104      	movs	r1, #4
 800edde:	4618      	mov	r0, r3
 800ede0:	f7fa ff2e 	bl	8009c40 <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800ede4:	4b32      	ldr	r3, [pc, #200]	; (800eeb0 <_ZN22PressureScreenViewBaseC1Ev+0x45c>)
 800ede6:	681b      	ldr	r3, [r3, #0]
 800ede8:	2b00      	cmp	r3, #0
 800edea:	d105      	bne.n	800edf8 <_ZN22PressureScreenViewBaseC1Ev+0x3a4>
 800edec:	4b31      	ldr	r3, [pc, #196]	; (800eeb4 <_ZN22PressureScreenViewBaseC1Ev+0x460>)
 800edee:	4a32      	ldr	r2, [pc, #200]	; (800eeb8 <_ZN22PressureScreenViewBaseC1Ev+0x464>)
 800edf0:	2160      	movs	r1, #96	; 0x60
 800edf2:	4832      	ldr	r0, [pc, #200]	; (800eebc <_ZN22PressureScreenViewBaseC1Ev+0x468>)
 800edf4:	f01c f9fc 	bl	802b1f0 <__assert_func>
 800edf8:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800edfc:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
        return typedTextId < numberOfTypedTexts;
 800ee00:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800ee04:	889a      	ldrh	r2, [r3, #4]
 800ee06:	4b2e      	ldr	r3, [pc, #184]	; (800eec0 <_ZN22PressureScreenViewBaseC1Ev+0x46c>)
 800ee08:	881b      	ldrh	r3, [r3, #0]
 800ee0a:	429a      	cmp	r2, r3
 800ee0c:	bf34      	ite	cc
 800ee0e:	2301      	movcc	r3, #1
 800ee10:	2300      	movcs	r3, #0
 800ee12:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800ee14:	2b00      	cmp	r3, #0
 800ee16:	d105      	bne.n	800ee24 <_ZN22PressureScreenViewBaseC1Ev+0x3d0>
 800ee18:	4b2a      	ldr	r3, [pc, #168]	; (800eec4 <_ZN22PressureScreenViewBaseC1Ev+0x470>)
 800ee1a:	4a27      	ldr	r2, [pc, #156]	; (800eeb8 <_ZN22PressureScreenViewBaseC1Ev+0x464>)
 800ee1c:	2161      	movs	r1, #97	; 0x61
 800ee1e:	4827      	ldr	r0, [pc, #156]	; (800eebc <_ZN22PressureScreenViewBaseC1Ev+0x468>)
 800ee20:	f01c f9e6 	bl	802b1f0 <__assert_func>
        return texts->getText(typedTextId);
 800ee24:	4b28      	ldr	r3, [pc, #160]	; (800eec8 <_ZN22PressureScreenViewBaseC1Ev+0x474>)
 800ee26:	681b      	ldr	r3, [r3, #0]
 800ee28:	f8b7 2048 	ldrh.w	r2, [r7, #72]	; 0x48
 800ee2c:	4611      	mov	r1, r2
 800ee2e:	4618      	mov	r0, r3
 800ee30:	f000 fe5c 	bl	800faec <_ZNK8touchgfx5Texts7getTextEt>
 800ee34:	4603      	mov	r3, r0
 800ee36:	bf00      	nop
 800ee38:	4a24      	ldr	r2, [pc, #144]	; (800eecc <_ZN22PressureScreenViewBaseC1Ev+0x478>)
 800ee3a:	2106      	movs	r1, #6
 800ee3c:	4620      	mov	r0, r4
 800ee3e:	f00d f9d1 	bl	801c1e4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800ee42:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800ee46:	4618      	mov	r0, r3
 800ee48:	f7fa fa28 	bl	800929c <_ZN8touchgfx9TypedTextD1Ev>
    PressureData.setWildcard(PressureDataBuffer);
 800ee4c:	697b      	ldr	r3, [r7, #20]
 800ee4e:	f503 7224 	add.w	r2, r3, #656	; 0x290
 800ee52:	697b      	ldr	r3, [r7, #20]
 800ee54:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800ee58:	4619      	mov	r1, r3
 800ee5a:	4610      	mov	r0, r2
 800ee5c:	f7fd fd42 	bl	800c8e4 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    PressureData.resizeToCurrentText();
 800ee60:	697b      	ldr	r3, [r7, #20]
 800ee62:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800ee66:	4618      	mov	r0, r3
 800ee68:	f006 ff24 	bl	8015cb4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    PressureData.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9SKU));
 800ee6c:	697b      	ldr	r3, [r7, #20]
 800ee6e:	f503 7424 	add.w	r4, r3, #656	; 0x290
 800ee72:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800ee76:	2105      	movs	r1, #5
 800ee78:	4618      	mov	r0, r3
 800ee7a:	f7fa fee1 	bl	8009c40 <_ZN8touchgfx9TypedTextC1Et>
 800ee7e:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800ee82:	4619      	mov	r1, r3
 800ee84:	4620      	mov	r0, r4
 800ee86:	f006 ff35 	bl	8015cf4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800ee8a:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800ee8e:	4618      	mov	r0, r3
 800ee90:	f7fa fa04 	bl	800929c <_ZN8touchgfx9TypedTextD1Ev>
    add(PressureData);
 800ee94:	697a      	ldr	r2, [r7, #20]
 800ee96:	697b      	ldr	r3, [r7, #20]
 800ee98:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800ee9c:	4619      	mov	r1, r3
 800ee9e:	4610      	mov	r0, r2
 800eea0:	f7fa fe36 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800eea4:	697b      	ldr	r3, [r7, #20]
 800eea6:	4618      	mov	r0, r3
 800eea8:	378c      	adds	r7, #140	; 0x8c
 800eeaa:	46bd      	mov	sp, r7
 800eeac:	bd90      	pop	{r4, r7, pc}
 800eeae:	bf00      	nop
 800eeb0:	20002380 	.word	0x20002380
 800eeb4:	0802cd80 	.word	0x0802cd80
 800eeb8:	0802ce84 	.word	0x0802ce84
 800eebc:	0802ce00 	.word	0x0802ce00
 800eec0:	20002384 	.word	0x20002384
 800eec4:	0802ce44 	.word	0x0802ce44
 800eec8:	2000238c 	.word	0x2000238c
 800eecc:	0802cebc 	.word	0x0802cebc

0800eed0 <_ZN22PressureScreenViewBaseD1Ev>:

PressureScreenViewBase::~PressureScreenViewBase()
 800eed0:	b580      	push	{r7, lr}
 800eed2:	b082      	sub	sp, #8
 800eed4:	af00      	add	r7, sp, #0
 800eed6:	6078      	str	r0, [r7, #4]
 800eed8:	4a16      	ldr	r2, [pc, #88]	; (800ef34 <_ZN22PressureScreenViewBaseD1Ev+0x64>)
 800eeda:	687b      	ldr	r3, [r7, #4]
 800eedc:	601a      	str	r2, [r3, #0]
 800eede:	687b      	ldr	r3, [r7, #4]
 800eee0:	f503 733a 	add.w	r3, r3, #744	; 0x2e8
 800eee4:	4618      	mov	r0, r3
 800eee6:	f000 f88d 	bl	800f004 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800eeea:	687b      	ldr	r3, [r7, #4]
 800eeec:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800eef0:	4618      	mov	r0, r3
 800eef2:	f7fb fb69 	bl	800a5c8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800eef6:	687b      	ldr	r3, [r7, #4]
 800eef8:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800eefc:	4618      	mov	r0, r3
 800eefe:	f7fa fff3 	bl	8009ee8 <_ZN8touchgfx8TextAreaD1Ev>
 800ef02:	687b      	ldr	r3, [r7, #4]
 800ef04:	33a8      	adds	r3, #168	; 0xa8
 800ef06:	4618      	mov	r0, r3
 800ef08:	f7fe f8c6 	bl	800d098 <_ZN8touchgfx5GaugeD1Ev>
 800ef0c:	687b      	ldr	r3, [r7, #4]
 800ef0e:	336c      	adds	r3, #108	; 0x6c
 800ef10:	4618      	mov	r0, r3
 800ef12:	f7fb fc2b 	bl	800a76c <_ZN8touchgfx14ButtonWithIconD1Ev>
 800ef16:	687b      	ldr	r3, [r7, #4]
 800ef18:	3340      	adds	r3, #64	; 0x40
 800ef1a:	4618      	mov	r0, r3
 800ef1c:	f7fb fb98 	bl	800a650 <_ZN8touchgfx3BoxD1Ev>
 800ef20:	687b      	ldr	r3, [r7, #4]
 800ef22:	4618      	mov	r0, r3
 800ef24:	f7ff fd74 	bl	800ea10 <_ZN8touchgfx4ViewI23PressureScreenPresenterED1Ev>
{

}
 800ef28:	687b      	ldr	r3, [r7, #4]
 800ef2a:	4618      	mov	r0, r3
 800ef2c:	3708      	adds	r7, #8
 800ef2e:	46bd      	mov	sp, r7
 800ef30:	bd80      	pop	{r7, pc}
 800ef32:	bf00      	nop
 800ef34:	0802e328 	.word	0x0802e328

0800ef38 <_ZN22PressureScreenViewBaseD0Ev>:
PressureScreenViewBase::~PressureScreenViewBase()
 800ef38:	b580      	push	{r7, lr}
 800ef3a:	b082      	sub	sp, #8
 800ef3c:	af00      	add	r7, sp, #0
 800ef3e:	6078      	str	r0, [r7, #4]
}
 800ef40:	6878      	ldr	r0, [r7, #4]
 800ef42:	f7ff ffc5 	bl	800eed0 <_ZN22PressureScreenViewBaseD1Ev>
 800ef46:	f44f 713e 	mov.w	r1, #760	; 0x2f8
 800ef4a:	6878      	ldr	r0, [r7, #4]
 800ef4c:	f01b f95f 	bl	802a20e <_ZdlPvj>
 800ef50:	687b      	ldr	r3, [r7, #4]
 800ef52:	4618      	mov	r0, r3
 800ef54:	3708      	adds	r7, #8
 800ef56:	46bd      	mov	sp, r7
 800ef58:	bd80      	pop	{r7, pc}

0800ef5a <_ZN22PressureScreenViewBase11setupScreenEv>:

void PressureScreenViewBase::setupScreen()
{
 800ef5a:	b480      	push	{r7}
 800ef5c:	b083      	sub	sp, #12
 800ef5e:	af00      	add	r7, sp, #0
 800ef60:	6078      	str	r0, [r7, #4]

}
 800ef62:	bf00      	nop
 800ef64:	370c      	adds	r7, #12
 800ef66:	46bd      	mov	sp, r7
 800ef68:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef6c:	4770      	bx	lr

0800ef6e <_ZN22PressureScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void PressureScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800ef6e:	b580      	push	{r7, lr}
 800ef70:	b082      	sub	sp, #8
 800ef72:	af00      	add	r7, sp, #0
 800ef74:	6078      	str	r0, [r7, #4]
 800ef76:	6039      	str	r1, [r7, #0]
    if (&src == &back)
 800ef78:	687b      	ldr	r3, [r7, #4]
 800ef7a:	336c      	adds	r3, #108	; 0x6c
 800ef7c:	683a      	ldr	r2, [r7, #0]
 800ef7e:	429a      	cmp	r2, r3
 800ef80:	d106      	bne.n	800ef90 <_ZN22PressureScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //PressureToMain
        //When back clicked change screen to MainScreen
        //Go to MainScreen with screen transition towards West
        application().gotoMainScreenScreenSlideTransitionWest();
 800ef82:	6878      	ldr	r0, [r7, #4]
 800ef84:	f7ff fd39 	bl	800e9fa <_ZN22PressureScreenViewBase11applicationEv>
 800ef88:	4603      	mov	r3, r0
 800ef8a:	4618      	mov	r0, r3
 800ef8c:	f7fb ff74 	bl	800ae78 <_ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionWestEv>
    }
}
 800ef90:	bf00      	nop
 800ef92:	3708      	adds	r7, #8
 800ef94:	46bd      	mov	sp, r7
 800ef96:	bd80      	pop	{r7, pc}

0800ef98 <_ZN8touchgfx4ViewI23PressureScreenPresenterEC1Ev>:
    View()
 800ef98:	b580      	push	{r7, lr}
 800ef9a:	b082      	sub	sp, #8
 800ef9c:	af00      	add	r7, sp, #0
 800ef9e:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800efa0:	687b      	ldr	r3, [r7, #4]
 800efa2:	4618      	mov	r0, r3
 800efa4:	f00b fae4 	bl	801a570 <_ZN8touchgfx6ScreenC1Ev>
 800efa8:	4a05      	ldr	r2, [pc, #20]	; (800efc0 <_ZN8touchgfx4ViewI23PressureScreenPresenterEC1Ev+0x28>)
 800efaa:	687b      	ldr	r3, [r7, #4]
 800efac:	601a      	str	r2, [r3, #0]
 800efae:	687b      	ldr	r3, [r7, #4]
 800efb0:	2200      	movs	r2, #0
 800efb2:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800efb4:	687b      	ldr	r3, [r7, #4]
 800efb6:	4618      	mov	r0, r3
 800efb8:	3708      	adds	r7, #8
 800efba:	46bd      	mov	sp, r7
 800efbc:	bd80      	pop	{r7, pc}
 800efbe:	bf00      	nop
 800efc0:	0802e374 	.word	0x0802e374

0800efc4 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800efc4:	b580      	push	{r7, lr}
 800efc6:	b084      	sub	sp, #16
 800efc8:	af00      	add	r7, sp, #0
 800efca:	60f8      	str	r0, [r7, #12]
 800efcc:	60b9      	str	r1, [r7, #8]
 800efce:	4639      	mov	r1, r7
 800efd0:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800efd4:	68fb      	ldr	r3, [r7, #12]
 800efd6:	4618      	mov	r0, r3
 800efd8:	f7fb fa84 	bl	800a4e4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800efdc:	4a08      	ldr	r2, [pc, #32]	; (800f000 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800efde:	68fb      	ldr	r3, [r7, #12]
 800efe0:	601a      	str	r2, [r3, #0]
 800efe2:	68fb      	ldr	r3, [r7, #12]
 800efe4:	68ba      	ldr	r2, [r7, #8]
 800efe6:	605a      	str	r2, [r3, #4]
 800efe8:	68fb      	ldr	r3, [r7, #12]
 800efea:	3308      	adds	r3, #8
 800efec:	463a      	mov	r2, r7
 800efee:	e892 0003 	ldmia.w	r2, {r0, r1}
 800eff2:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800eff6:	68fb      	ldr	r3, [r7, #12]
 800eff8:	4618      	mov	r0, r3
 800effa:	3710      	adds	r7, #16
 800effc:	46bd      	mov	sp, r7
 800effe:	bd80      	pop	{r7, pc}
 800f000:	0802e35c 	.word	0x0802e35c

0800f004 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800f004:	b580      	push	{r7, lr}
 800f006:	b082      	sub	sp, #8
 800f008:	af00      	add	r7, sp, #0
 800f00a:	6078      	str	r0, [r7, #4]
 800f00c:	4a05      	ldr	r2, [pc, #20]	; (800f024 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800f00e:	687b      	ldr	r3, [r7, #4]
 800f010:	601a      	str	r2, [r3, #0]
 800f012:	687b      	ldr	r3, [r7, #4]
 800f014:	4618      	mov	r0, r3
 800f016:	f7fb fa95 	bl	800a544 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800f01a:	687b      	ldr	r3, [r7, #4]
 800f01c:	4618      	mov	r0, r3
 800f01e:	3708      	adds	r7, #8
 800f020:	46bd      	mov	sp, r7
 800f022:	bd80      	pop	{r7, pc}
 800f024:	0802e35c 	.word	0x0802e35c

0800f028 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800f028:	b580      	push	{r7, lr}
 800f02a:	b082      	sub	sp, #8
 800f02c:	af00      	add	r7, sp, #0
 800f02e:	6078      	str	r0, [r7, #4]
 800f030:	6878      	ldr	r0, [r7, #4]
 800f032:	f7ff ffe7 	bl	800f004 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800f036:	2110      	movs	r1, #16
 800f038:	6878      	ldr	r0, [r7, #4]
 800f03a:	f01b f8e8 	bl	802a20e <_ZdlPvj>
 800f03e:	687b      	ldr	r3, [r7, #4]
 800f040:	4618      	mov	r0, r3
 800f042:	3708      	adds	r7, #8
 800f044:	46bd      	mov	sp, r7
 800f046:	bd80      	pop	{r7, pc}

0800f048 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800f048:	b580      	push	{r7, lr}
 800f04a:	b082      	sub	sp, #8
 800f04c:	af00      	add	r7, sp, #0
 800f04e:	6078      	str	r0, [r7, #4]
 800f050:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800f052:	687b      	ldr	r3, [r7, #4]
 800f054:	685b      	ldr	r3, [r3, #4]
 800f056:	687a      	ldr	r2, [r7, #4]
 800f058:	68d2      	ldr	r2, [r2, #12]
 800f05a:	1052      	asrs	r2, r2, #1
 800f05c:	1898      	adds	r0, r3, r2
 800f05e:	687b      	ldr	r3, [r7, #4]
 800f060:	68db      	ldr	r3, [r3, #12]
 800f062:	f003 0301 	and.w	r3, r3, #1
 800f066:	2b00      	cmp	r3, #0
 800f068:	d102      	bne.n	800f070 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800f06a:	687b      	ldr	r3, [r7, #4]
 800f06c:	689b      	ldr	r3, [r3, #8]
 800f06e:	e00a      	b.n	800f086 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800f070:	687b      	ldr	r3, [r7, #4]
 800f072:	685b      	ldr	r3, [r3, #4]
 800f074:	687a      	ldr	r2, [r7, #4]
 800f076:	68d2      	ldr	r2, [r2, #12]
 800f078:	1052      	asrs	r2, r2, #1
 800f07a:	4413      	add	r3, r2
 800f07c:	681b      	ldr	r3, [r3, #0]
 800f07e:	687a      	ldr	r2, [r7, #4]
 800f080:	6892      	ldr	r2, [r2, #8]
 800f082:	4413      	add	r3, r2
 800f084:	681b      	ldr	r3, [r3, #0]
 800f086:	6839      	ldr	r1, [r7, #0]
 800f088:	4798      	blx	r3
    }
 800f08a:	bf00      	nop
 800f08c:	3708      	adds	r7, #8
 800f08e:	46bd      	mov	sp, r7
 800f090:	bd80      	pop	{r7, pc}

0800f092 <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800f092:	b480      	push	{r7}
 800f094:	b083      	sub	sp, #12
 800f096:	af00      	add	r7, sp, #0
 800f098:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800f09a:	687b      	ldr	r3, [r7, #4]
 800f09c:	685b      	ldr	r3, [r3, #4]
 800f09e:	2b00      	cmp	r3, #0
 800f0a0:	d010      	beq.n	800f0c4 <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800f0a2:	687b      	ldr	r3, [r7, #4]
 800f0a4:	689b      	ldr	r3, [r3, #8]
 800f0a6:	2b00      	cmp	r3, #0
 800f0a8:	d107      	bne.n	800f0ba <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800f0aa:	687b      	ldr	r3, [r7, #4]
 800f0ac:	68db      	ldr	r3, [r3, #12]
 800f0ae:	f003 0301 	and.w	r3, r3, #1
 800f0b2:	2b00      	cmp	r3, #0
 800f0b4:	d101      	bne.n	800f0ba <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800f0b6:	2301      	movs	r3, #1
 800f0b8:	e000      	b.n	800f0bc <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800f0ba:	2300      	movs	r3, #0
 800f0bc:	2b01      	cmp	r3, #1
 800f0be:	d001      	beq.n	800f0c4 <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800f0c0:	2301      	movs	r3, #1
 800f0c2:	e000      	b.n	800f0c6 <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800f0c4:	2300      	movs	r3, #0
    }
 800f0c6:	4618      	mov	r0, r3
 800f0c8:	370c      	adds	r7, #12
 800f0ca:	46bd      	mov	sp, r7
 800f0cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f0d0:	4770      	bx	lr

0800f0d2 <_ZN25TemperatureScreenViewBase11applicationEv>:
    TemperatureScreenViewBase();
    virtual ~TemperatureScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800f0d2:	b580      	push	{r7, lr}
 800f0d4:	b082      	sub	sp, #8
 800f0d6:	af00      	add	r7, sp, #0
 800f0d8:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800f0da:	f009 fe3b 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 800f0de:	4603      	mov	r3, r0
    }
 800f0e0:	4618      	mov	r0, r3
 800f0e2:	3708      	adds	r7, #8
 800f0e4:	46bd      	mov	sp, r7
 800f0e6:	bd80      	pop	{r7, pc}

0800f0e8 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterED1Ev>:
class View : public Screen
 800f0e8:	b580      	push	{r7, lr}
 800f0ea:	b082      	sub	sp, #8
 800f0ec:	af00      	add	r7, sp, #0
 800f0ee:	6078      	str	r0, [r7, #4]
 800f0f0:	4a05      	ldr	r2, [pc, #20]	; (800f108 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterED1Ev+0x20>)
 800f0f2:	687b      	ldr	r3, [r7, #4]
 800f0f4:	601a      	str	r2, [r3, #0]
 800f0f6:	687b      	ldr	r3, [r7, #4]
 800f0f8:	4618      	mov	r0, r3
 800f0fa:	f7fa fcb1 	bl	8009a60 <_ZN8touchgfx6ScreenD1Ev>
 800f0fe:	687b      	ldr	r3, [r7, #4]
 800f100:	4618      	mov	r0, r3
 800f102:	3708      	adds	r7, #8
 800f104:	46bd      	mov	sp, r7
 800f106:	bd80      	pop	{r7, pc}
 800f108:	0802e3f4 	.word	0x0802e3f4

0800f10c <_ZN8touchgfx4ViewI26TemperatureScreenPresenterED0Ev>:
 800f10c:	b580      	push	{r7, lr}
 800f10e:	b082      	sub	sp, #8
 800f110:	af00      	add	r7, sp, #0
 800f112:	6078      	str	r0, [r7, #4]
 800f114:	6878      	ldr	r0, [r7, #4]
 800f116:	f7ff ffe7 	bl	800f0e8 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterED1Ev>
 800f11a:	2140      	movs	r1, #64	; 0x40
 800f11c:	6878      	ldr	r0, [r7, #4]
 800f11e:	f01b f876 	bl	802a20e <_ZdlPvj>
 800f122:	687b      	ldr	r3, [r7, #4]
 800f124:	4618      	mov	r0, r3
 800f126:	3708      	adds	r7, #8
 800f128:	46bd      	mov	sp, r7
 800f12a:	bd80      	pop	{r7, pc}

0800f12c <_ZN25TemperatureScreenViewBaseC1Ev>:
#include <gui_generated/temperaturescreen_screen/TemperatureScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

TemperatureScreenViewBase::TemperatureScreenViewBase() :
 800f12c:	b590      	push	{r4, r7, lr}
 800f12e:	b0a5      	sub	sp, #148	; 0x94
 800f130:	af02      	add	r7, sp, #8
 800f132:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &TemperatureScreenViewBase::buttonCallbackHandler)
 800f134:	697b      	ldr	r3, [r7, #20]
 800f136:	4618      	mov	r0, r3
 800f138:	f000 fa96 	bl	800f668 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterEC1Ev>
 800f13c:	4a67      	ldr	r2, [pc, #412]	; (800f2dc <_ZN25TemperatureScreenViewBaseC1Ev+0x1b0>)
 800f13e:	697b      	ldr	r3, [r7, #20]
 800f140:	601a      	str	r2, [r3, #0]
 800f142:	697b      	ldr	r3, [r7, #20]
 800f144:	3340      	adds	r3, #64	; 0x40
 800f146:	4618      	mov	r0, r3
 800f148:	f7fa fd48 	bl	8009bdc <_ZN8touchgfx3BoxC1Ev>
 800f14c:	697b      	ldr	r3, [r7, #20]
 800f14e:	336c      	adds	r3, #108	; 0x6c
 800f150:	4618      	mov	r0, r3
 800f152:	f7fd fba3 	bl	800c89c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800f156:	697b      	ldr	r3, [r7, #20]
 800f158:	33b8      	adds	r3, #184	; 0xb8
 800f15a:	4618      	mov	r0, r3
 800f15c:	f7fa fd86 	bl	8009c6c <_ZN8touchgfx8TextAreaC1Ev>
 800f160:	697b      	ldr	r3, [r7, #20]
 800f162:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800f166:	4618      	mov	r0, r3
 800f168:	f006 fe52 	bl	8015e10 <_ZN8touchgfx5GaugeC1Ev>
 800f16c:	697b      	ldr	r3, [r7, #20]
 800f16e:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 800f172:	4618      	mov	r0, r3
 800f174:	f007 f9d4 	bl	8016520 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800f178:	697b      	ldr	r3, [r7, #20]
 800f17a:	f503 7039 	add.w	r0, r3, #740	; 0x2e4
 800f17e:	4b58      	ldr	r3, [pc, #352]	; (800f2e0 <_ZN25TemperatureScreenViewBaseC1Ev+0x1b4>)
 800f180:	623b      	str	r3, [r7, #32]
 800f182:	2300      	movs	r3, #0
 800f184:	627b      	str	r3, [r7, #36]	; 0x24
 800f186:	f107 0320 	add.w	r3, r7, #32
 800f18a:	cb0c      	ldmia	r3, {r2, r3}
 800f18c:	6979      	ldr	r1, [r7, #20]
 800f18e:	f000 fa81 	bl	800f694 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800f192:	697b      	ldr	r3, [r7, #20]
 800f194:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800f198:	23f0      	movs	r3, #240	; 0xf0
 800f19a:	9300      	str	r3, [sp, #0]
 800f19c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800f1a0:	2200      	movs	r2, #0
 800f1a2:	2100      	movs	r1, #0
 800f1a4:	f7fa fb26 	bl	80097f4 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800f1a8:	697b      	ldr	r3, [r7, #20]
 800f1aa:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800f1ae:	2300      	movs	r3, #0
 800f1b0:	f887 3064 	strb.w	r3, [r7, #100]	; 0x64
 800f1b4:	2300      	movs	r3, #0
 800f1b6:	f887 3063 	strb.w	r3, [r7, #99]	; 0x63
 800f1ba:	2300      	movs	r3, #0
 800f1bc:	f887 3062 	strb.w	r3, [r7, #98]	; 0x62
 800f1c0:	f897 3064 	ldrb.w	r3, [r7, #100]	; 0x64
 800f1c4:	041b      	lsls	r3, r3, #16
 800f1c6:	461a      	mov	r2, r3
 800f1c8:	f897 3063 	ldrb.w	r3, [r7, #99]	; 0x63
 800f1cc:	021b      	lsls	r3, r3, #8
 800f1ce:	431a      	orrs	r2, r3
 800f1d0:	f897 3062 	ldrb.w	r3, [r7, #98]	; 0x62
 800f1d4:	4313      	orrs	r3, r2
 800f1d6:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f1da:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800f1de:	4611      	mov	r1, r2
 800f1e0:	4618      	mov	r0, r3
 800f1e2:	f7fa fa43 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800f1e6:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800f1e8:	4619      	mov	r1, r3
 800f1ea:	4620      	mov	r0, r4
 800f1ec:	f7fa fd1a 	bl	8009c24 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800f1f0:	697a      	ldr	r2, [r7, #20]
 800f1f2:	697b      	ldr	r3, [r7, #20]
 800f1f4:	3340      	adds	r3, #64	; 0x40
 800f1f6:	4619      	mov	r1, r3
 800f1f8:	4610      	mov	r0, r2
 800f1fa:	f7fa fc89 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    TemperatureData.setXY(207, 202);
 800f1fe:	697b      	ldr	r3, [r7, #20]
 800f200:	336c      	adds	r3, #108	; 0x6c
 800f202:	22ca      	movs	r2, #202	; 0xca
 800f204:	21cf      	movs	r1, #207	; 0xcf
 800f206:	4618      	mov	r0, r3
 800f208:	f7fa fb33 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
    TemperatureData.setColor(touchgfx::Color::getColorFromRGB(214, 195, 195));
 800f20c:	697b      	ldr	r3, [r7, #20]
 800f20e:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800f212:	23d6      	movs	r3, #214	; 0xd6
 800f214:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 800f218:	23c3      	movs	r3, #195	; 0xc3
 800f21a:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
 800f21e:	23c3      	movs	r3, #195	; 0xc3
 800f220:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 800f224:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800f228:	041b      	lsls	r3, r3, #16
 800f22a:	461a      	mov	r2, r3
 800f22c:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 800f230:	021b      	lsls	r3, r3, #8
 800f232:	431a      	orrs	r2, r3
 800f234:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 800f238:	4313      	orrs	r3, r2
 800f23a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f23e:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800f242:	4611      	mov	r1, r2
 800f244:	4618      	mov	r0, r3
 800f246:	f7fa fa11 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800f24a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800f24c:	66bc      	str	r4, [r7, #104]	; 0x68
 800f24e:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800f250:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800f252:	69fa      	ldr	r2, [r7, #28]
 800f254:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800f256:	bf00      	nop
    TemperatureData.setLinespacing(0);
 800f258:	697b      	ldr	r3, [r7, #20]
 800f25a:	336c      	adds	r3, #108	; 0x6c
 800f25c:	673b      	str	r3, [r7, #112]	; 0x70
 800f25e:	2300      	movs	r3, #0
 800f260:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
        linespace = space;
 800f264:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800f266:	f8b7 206e 	ldrh.w	r2, [r7, #110]	; 0x6e
 800f26a:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800f26c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800f26e:	681b      	ldr	r3, [r3, #0]
 800f270:	3384      	adds	r3, #132	; 0x84
 800f272:	681b      	ldr	r3, [r3, #0]
 800f274:	6f3c      	ldr	r4, [r7, #112]	; 0x70
 800f276:	463a      	mov	r2, r7
 800f278:	6f39      	ldr	r1, [r7, #112]	; 0x70
 800f27a:	4610      	mov	r0, r2
 800f27c:	4798      	blx	r3
 800f27e:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800f282:	463a      	mov	r2, r7
 800f284:	ca07      	ldmia	r2, {r0, r1, r2}
 800f286:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800f28a:	bf00      	nop
    Unicode::snprintf(TemperatureDataBuffer, TEMPERATUREDATA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9SEE).getText());
 800f28c:	697b      	ldr	r3, [r7, #20]
 800f28e:	f503 7437 	add.w	r4, r3, #732	; 0x2dc
 800f292:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800f296:	2100      	movs	r1, #0
 800f298:	4618      	mov	r0, r3
 800f29a:	f7fa fcd1 	bl	8009c40 <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800f29e:	4b11      	ldr	r3, [pc, #68]	; (800f2e4 <_ZN25TemperatureScreenViewBaseC1Ev+0x1b8>)
 800f2a0:	681b      	ldr	r3, [r3, #0]
 800f2a2:	2b00      	cmp	r3, #0
 800f2a4:	d105      	bne.n	800f2b2 <_ZN25TemperatureScreenViewBaseC1Ev+0x186>
 800f2a6:	4b10      	ldr	r3, [pc, #64]	; (800f2e8 <_ZN25TemperatureScreenViewBaseC1Ev+0x1bc>)
 800f2a8:	4a10      	ldr	r2, [pc, #64]	; (800f2ec <_ZN25TemperatureScreenViewBaseC1Ev+0x1c0>)
 800f2aa:	2160      	movs	r1, #96	; 0x60
 800f2ac:	4810      	ldr	r0, [pc, #64]	; (800f2f0 <_ZN25TemperatureScreenViewBaseC1Ev+0x1c4>)
 800f2ae:	f01b ff9f 	bl	802b1f0 <__assert_func>
 800f2b2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800f2b6:	677b      	str	r3, [r7, #116]	; 0x74
        return typedTextId < numberOfTypedTexts;
 800f2b8:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800f2ba:	889a      	ldrh	r2, [r3, #4]
 800f2bc:	4b0d      	ldr	r3, [pc, #52]	; (800f2f4 <_ZN25TemperatureScreenViewBaseC1Ev+0x1c8>)
 800f2be:	881b      	ldrh	r3, [r3, #0]
 800f2c0:	429a      	cmp	r2, r3
 800f2c2:	bf34      	ite	cc
 800f2c4:	2301      	movcc	r3, #1
 800f2c6:	2300      	movcs	r3, #0
 800f2c8:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800f2ca:	2b00      	cmp	r3, #0
 800f2cc:	d116      	bne.n	800f2fc <_ZN25TemperatureScreenViewBaseC1Ev+0x1d0>
 800f2ce:	4b0a      	ldr	r3, [pc, #40]	; (800f2f8 <_ZN25TemperatureScreenViewBaseC1Ev+0x1cc>)
 800f2d0:	4a06      	ldr	r2, [pc, #24]	; (800f2ec <_ZN25TemperatureScreenViewBaseC1Ev+0x1c0>)
 800f2d2:	2161      	movs	r1, #97	; 0x61
 800f2d4:	4806      	ldr	r0, [pc, #24]	; (800f2f0 <_ZN25TemperatureScreenViewBaseC1Ev+0x1c4>)
 800f2d6:	f01b ff8b 	bl	802b1f0 <__assert_func>
 800f2da:	bf00      	nop
 800f2dc:	0802e3a8 	.word	0x0802e3a8
 800f2e0:	0800f63b 	.word	0x0800f63b
 800f2e4:	20002380 	.word	0x20002380
 800f2e8:	0802cec0 	.word	0x0802cec0
 800f2ec:	0802cfc4 	.word	0x0802cfc4
 800f2f0:	0802cf40 	.word	0x0802cf40
 800f2f4:	20002384 	.word	0x20002384
 800f2f8:	0802cf84 	.word	0x0802cf84
        return texts->getText(typedTextId);
 800f2fc:	4ba5      	ldr	r3, [pc, #660]	; (800f594 <_ZN25TemperatureScreenViewBaseC1Ev+0x468>)
 800f2fe:	681b      	ldr	r3, [r3, #0]
 800f300:	8dba      	ldrh	r2, [r7, #44]	; 0x2c
 800f302:	4611      	mov	r1, r2
 800f304:	4618      	mov	r0, r3
 800f306:	f000 fbf1 	bl	800faec <_ZNK8touchgfx5Texts7getTextEt>
 800f30a:	4603      	mov	r3, r0
 800f30c:	bf00      	nop
 800f30e:	4aa2      	ldr	r2, [pc, #648]	; (800f598 <_ZN25TemperatureScreenViewBaseC1Ev+0x46c>)
 800f310:	2104      	movs	r1, #4
 800f312:	4620      	mov	r0, r4
 800f314:	f00c ff66 	bl	801c1e4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800f318:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800f31c:	4618      	mov	r0, r3
 800f31e:	f7f9 ffbd 	bl	800929c <_ZN8touchgfx9TypedTextD1Ev>
    TemperatureData.setWildcard(TemperatureDataBuffer);
 800f322:	697b      	ldr	r3, [r7, #20]
 800f324:	f103 026c 	add.w	r2, r3, #108	; 0x6c
 800f328:	697b      	ldr	r3, [r7, #20]
 800f32a:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800f32e:	4619      	mov	r1, r3
 800f330:	4610      	mov	r0, r2
 800f332:	f7fd fad7 	bl	800c8e4 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    TemperatureData.resizeToCurrentText();
 800f336:	697b      	ldr	r3, [r7, #20]
 800f338:	336c      	adds	r3, #108	; 0x6c
 800f33a:	4618      	mov	r0, r3
 800f33c:	f006 fcba 	bl	8015cb4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    TemperatureData.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GYIK));
 800f340:	697b      	ldr	r3, [r7, #20]
 800f342:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800f346:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800f34a:	2101      	movs	r1, #1
 800f34c:	4618      	mov	r0, r3
 800f34e:	f7fa fc77 	bl	8009c40 <_ZN8touchgfx9TypedTextC1Et>
 800f352:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800f356:	4619      	mov	r1, r3
 800f358:	4620      	mov	r0, r4
 800f35a:	f006 fccb 	bl	8015cf4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800f35e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800f362:	4618      	mov	r0, r3
 800f364:	f7f9 ff9a 	bl	800929c <_ZN8touchgfx9TypedTextD1Ev>
    add(TemperatureData);
 800f368:	697a      	ldr	r2, [r7, #20]
 800f36a:	697b      	ldr	r3, [r7, #20]
 800f36c:	336c      	adds	r3, #108	; 0x6c
 800f36e:	4619      	mov	r1, r3
 800f370:	4610      	mov	r0, r2
 800f372:	f7fa fbcd 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Temperature_text.setXY(39, 10);
 800f376:	697b      	ldr	r3, [r7, #20]
 800f378:	33b8      	adds	r3, #184	; 0xb8
 800f37a:	220a      	movs	r2, #10
 800f37c:	2127      	movs	r1, #39	; 0x27
 800f37e:	4618      	mov	r0, r3
 800f380:	f7fa fa77 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
    Temperature_text.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
 800f384:	697b      	ldr	r3, [r7, #20]
 800f386:	f103 04b8 	add.w	r4, r3, #184	; 0xb8
 800f38a:	23f2      	movs	r3, #242	; 0xf2
 800f38c:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 800f390:	23ae      	movs	r3, #174	; 0xae
 800f392:	f887 307a 	strb.w	r3, [r7, #122]	; 0x7a
 800f396:	23ae      	movs	r3, #174	; 0xae
 800f398:	f887 3079 	strb.w	r3, [r7, #121]	; 0x79
 800f39c:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 800f3a0:	041b      	lsls	r3, r3, #16
 800f3a2:	461a      	mov	r2, r3
 800f3a4:	f897 307a 	ldrb.w	r3, [r7, #122]	; 0x7a
 800f3a8:	021b      	lsls	r3, r3, #8
 800f3aa:	431a      	orrs	r2, r3
 800f3ac:	f897 3079 	ldrb.w	r3, [r7, #121]	; 0x79
 800f3b0:	4313      	orrs	r3, r2
 800f3b2:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f3b6:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800f3ba:	4611      	mov	r1, r2
 800f3bc:	4618      	mov	r0, r3
 800f3be:	f7fa f955 	bl	800966c <_ZN8touchgfx9colortypeC1Em>
 800f3c2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800f3c4:	67fc      	str	r4, [r7, #124]	; 0x7c
 800f3c6:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800f3c8:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800f3ca:	69ba      	ldr	r2, [r7, #24]
 800f3cc:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800f3ce:	bf00      	nop
    Temperature_text.setLinespacing(0);
 800f3d0:	697b      	ldr	r3, [r7, #20]
 800f3d2:	33b8      	adds	r3, #184	; 0xb8
 800f3d4:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800f3d8:	2300      	movs	r3, #0
 800f3da:	f8a7 3082 	strh.w	r3, [r7, #130]	; 0x82
        linespace = space;
 800f3de:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800f3e2:	f8b7 2082 	ldrh.w	r2, [r7, #130]	; 0x82
 800f3e6:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800f3e8:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800f3ec:	681b      	ldr	r3, [r3, #0]
 800f3ee:	3384      	adds	r3, #132	; 0x84
 800f3f0:	681b      	ldr	r3, [r3, #0]
 800f3f2:	f8d7 4084 	ldr.w	r4, [r7, #132]	; 0x84
 800f3f6:	463a      	mov	r2, r7
 800f3f8:	f8d7 1084 	ldr.w	r1, [r7, #132]	; 0x84
 800f3fc:	4610      	mov	r0, r2
 800f3fe:	4798      	blx	r3
 800f400:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800f404:	463a      	mov	r2, r7
 800f406:	ca07      	ldmia	r2, {r0, r1, r2}
 800f408:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800f40c:	bf00      	nop
    Temperature_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OJUT));
 800f40e:	697b      	ldr	r3, [r7, #20]
 800f410:	f103 04b8 	add.w	r4, r3, #184	; 0xb8
 800f414:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800f418:	2108      	movs	r1, #8
 800f41a:	4618      	mov	r0, r3
 800f41c:	f7fa fc10 	bl	8009c40 <_ZN8touchgfx9TypedTextC1Et>
 800f420:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800f424:	4619      	mov	r1, r3
 800f426:	4620      	mov	r0, r4
 800f428:	f006 fc64 	bl	8015cf4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800f42c:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800f430:	4618      	mov	r0, r3
 800f432:	f7f9 ff33 	bl	800929c <_ZN8touchgfx9TypedTextD1Ev>
    add(Temperature_text);
 800f436:	697a      	ldr	r2, [r7, #20]
 800f438:	697b      	ldr	r3, [r7, #20]
 800f43a:	33b8      	adds	r3, #184	; 0xb8
 800f43c:	4619      	mov	r1, r3
 800f43e:	4610      	mov	r0, r2
 800f440:	f7fa fb66 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    TemperatureGauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_BACKGROUNDS_LIGHT_ID));
 800f444:	697b      	ldr	r3, [r7, #20]
 800f446:	f503 7480 	add.w	r4, r3, #256	; 0x100
 800f44a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800f44e:	2102      	movs	r1, #2
 800f450:	4618      	mov	r0, r3
 800f452:	f7fa f951 	bl	80096f8 <_ZN8touchgfx6BitmapC1Et>
 800f456:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800f45a:	4619      	mov	r1, r3
 800f45c:	4620      	mov	r0, r4
 800f45e:	f003 f8d6 	bl	801260e <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    TemperatureGauge.setPosition(166, 73, 120, 120);
 800f462:	697b      	ldr	r3, [r7, #20]
 800f464:	f503 7080 	add.w	r0, r3, #256	; 0x100
 800f468:	2378      	movs	r3, #120	; 0x78
 800f46a:	9300      	str	r3, [sp, #0]
 800f46c:	2378      	movs	r3, #120	; 0x78
 800f46e:	2249      	movs	r2, #73	; 0x49
 800f470:	21a6      	movs	r1, #166	; 0xa6
 800f472:	f7fa f9bf 	bl	80097f4 <_ZN8touchgfx8Drawable11setPositionEssss>
    TemperatureGauge.setCenter(60, 60);
 800f476:	697b      	ldr	r3, [r7, #20]
 800f478:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800f47c:	223c      	movs	r2, #60	; 0x3c
 800f47e:	213c      	movs	r1, #60	; 0x3c
 800f480:	4618      	mov	r0, r3
 800f482:	f006 fd70 	bl	8015f66 <_ZN8touchgfx5Gauge9setCenterEii>
    TemperatureGauge.setStartEndAngle(-90, 90);
 800f486:	697b      	ldr	r3, [r7, #20]
 800f488:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800f48c:	225a      	movs	r2, #90	; 0x5a
 800f48e:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800f492:	4618      	mov	r0, r3
 800f494:	f006 fdec 	bl	8016070 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    TemperatureGauge.setRange(0, 120);
 800f498:	697b      	ldr	r3, [r7, #20]
 800f49a:	f503 7080 	add.w	r0, r3, #256	; 0x100
 800f49e:	2300      	movs	r3, #0
 800f4a0:	9300      	str	r3, [sp, #0]
 800f4a2:	2300      	movs	r3, #0
 800f4a4:	2278      	movs	r2, #120	; 0x78
 800f4a6:	2100      	movs	r1, #0
 800f4a8:	f002 ff8b 	bl	80123c2 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    TemperatureGauge.setValue(20);
 800f4ac:	697b      	ldr	r3, [r7, #20]
 800f4ae:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800f4b2:	2114      	movs	r1, #20
 800f4b4:	4618      	mov	r0, r3
 800f4b6:	f006 fd85 	bl	8015fc4 <_ZN8touchgfx5Gauge8setValueEi>
    TemperatureGauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_NEEDLES_ROUGH_ID, 5, 33);
 800f4ba:	697b      	ldr	r3, [r7, #20]
 800f4bc:	f503 7080 	add.w	r0, r3, #256	; 0x100
 800f4c0:	2321      	movs	r3, #33	; 0x21
 800f4c2:	2205      	movs	r2, #5
 800f4c4:	2103      	movs	r1, #3
 800f4c6:	f006 fd39 	bl	8015f3c <_ZN8touchgfx5Gauge9setNeedleEtss>
    TemperatureGauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800f4ca:	697b      	ldr	r3, [r7, #20]
 800f4cc:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800f4d0:	2101      	movs	r1, #1
 800f4d2:	4618      	mov	r0, r3
 800f4d4:	f006 fcd4 	bl	8015e80 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    TemperatureGauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800f4d8:	697b      	ldr	r3, [r7, #20]
 800f4da:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800f4de:	2101      	movs	r1, #1
 800f4e0:	4618      	mov	r0, r3
 800f4e2:	f006 fcd0 	bl	8015e86 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(TemperatureGauge);
 800f4e6:	697a      	ldr	r2, [r7, #20]
 800f4e8:	697b      	ldr	r3, [r7, #20]
 800f4ea:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800f4ee:	4619      	mov	r1, r3
 800f4f0:	4610      	mov	r0, r2
 800f4f2:	f7fa fb0d 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    back.setXY(20, 103);
 800f4f6:	697b      	ldr	r3, [r7, #20]
 800f4f8:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 800f4fc:	2267      	movs	r2, #103	; 0x67
 800f4fe:	2114      	movs	r1, #20
 800f500:	4618      	mov	r0, r3
 800f502:	f7fa f9b6 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
    back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
 800f506:	697b      	ldr	r3, [r7, #20]
 800f508:	f503 7428 	add.w	r4, r3, #672	; 0x2a0
 800f50c:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800f510:	2100      	movs	r1, #0
 800f512:	4618      	mov	r0, r3
 800f514:	f7fa f8f0 	bl	80096f8 <_ZN8touchgfx6BitmapC1Et>
 800f518:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800f51c:	2101      	movs	r1, #1
 800f51e:	4618      	mov	r0, r3
 800f520:	f7fa f8ea 	bl	80096f8 <_ZN8touchgfx6BitmapC1Et>
 800f524:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800f528:	2104      	movs	r1, #4
 800f52a:	4618      	mov	r0, r3
 800f52c:	f7fa f8e4 	bl	80096f8 <_ZN8touchgfx6BitmapC1Et>
 800f530:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800f534:	2104      	movs	r1, #4
 800f536:	4618      	mov	r0, r3
 800f538:	f7fa f8de 	bl	80096f8 <_ZN8touchgfx6BitmapC1Et>
 800f53c:	f107 004c 	add.w	r0, r7, #76	; 0x4c
 800f540:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800f544:	f107 0144 	add.w	r1, r7, #68	; 0x44
 800f548:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800f54c:	9300      	str	r3, [sp, #0]
 800f54e:	4603      	mov	r3, r0
 800f550:	4620      	mov	r0, r4
 800f552:	f006 ff4f 	bl	80163f4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    back.setIconXY(5, 5);
 800f556:	697b      	ldr	r3, [r7, #20]
 800f558:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 800f55c:	2205      	movs	r2, #5
 800f55e:	2105      	movs	r1, #5
 800f560:	4618      	mov	r0, r3
 800f562:	f7fa fd8d 	bl	800a080 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    back.setAction(buttonCallback);
 800f566:	697b      	ldr	r3, [r7, #20]
 800f568:	f503 7228 	add.w	r2, r3, #672	; 0x2a0
 800f56c:	697b      	ldr	r3, [r7, #20]
 800f56e:	f503 7339 	add.w	r3, r3, #740	; 0x2e4
 800f572:	4619      	mov	r1, r3
 800f574:	4610      	mov	r0, r2
 800f576:	f7fa fd35 	bl	8009fe4 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(back);
 800f57a:	697a      	ldr	r2, [r7, #20]
 800f57c:	697b      	ldr	r3, [r7, #20]
 800f57e:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 800f582:	4619      	mov	r1, r3
 800f584:	4610      	mov	r0, r2
 800f586:	f7fa fac3 	bl	8009b10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800f58a:	697b      	ldr	r3, [r7, #20]
 800f58c:	4618      	mov	r0, r3
 800f58e:	378c      	adds	r7, #140	; 0x8c
 800f590:	46bd      	mov	sp, r7
 800f592:	bd90      	pop	{r4, r7, pc}
 800f594:	2000238c 	.word	0x2000238c
 800f598:	0802cffc 	.word	0x0802cffc

0800f59c <_ZN25TemperatureScreenViewBaseD1Ev>:

TemperatureScreenViewBase::~TemperatureScreenViewBase()
 800f59c:	b580      	push	{r7, lr}
 800f59e:	b082      	sub	sp, #8
 800f5a0:	af00      	add	r7, sp, #0
 800f5a2:	6078      	str	r0, [r7, #4]
 800f5a4:	4a16      	ldr	r2, [pc, #88]	; (800f600 <_ZN25TemperatureScreenViewBaseD1Ev+0x64>)
 800f5a6:	687b      	ldr	r3, [r7, #4]
 800f5a8:	601a      	str	r2, [r3, #0]
 800f5aa:	687b      	ldr	r3, [r7, #4]
 800f5ac:	f503 7339 	add.w	r3, r3, #740	; 0x2e4
 800f5b0:	4618      	mov	r0, r3
 800f5b2:	f000 f88f 	bl	800f6d4 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800f5b6:	687b      	ldr	r3, [r7, #4]
 800f5b8:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 800f5bc:	4618      	mov	r0, r3
 800f5be:	f7fb f8d5 	bl	800a76c <_ZN8touchgfx14ButtonWithIconD1Ev>
 800f5c2:	687b      	ldr	r3, [r7, #4]
 800f5c4:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800f5c8:	4618      	mov	r0, r3
 800f5ca:	f7fd fd65 	bl	800d098 <_ZN8touchgfx5GaugeD1Ev>
 800f5ce:	687b      	ldr	r3, [r7, #4]
 800f5d0:	33b8      	adds	r3, #184	; 0xb8
 800f5d2:	4618      	mov	r0, r3
 800f5d4:	f7fa fc88 	bl	8009ee8 <_ZN8touchgfx8TextAreaD1Ev>
 800f5d8:	687b      	ldr	r3, [r7, #4]
 800f5da:	336c      	adds	r3, #108	; 0x6c
 800f5dc:	4618      	mov	r0, r3
 800f5de:	f7fa fff3 	bl	800a5c8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800f5e2:	687b      	ldr	r3, [r7, #4]
 800f5e4:	3340      	adds	r3, #64	; 0x40
 800f5e6:	4618      	mov	r0, r3
 800f5e8:	f7fb f832 	bl	800a650 <_ZN8touchgfx3BoxD1Ev>
 800f5ec:	687b      	ldr	r3, [r7, #4]
 800f5ee:	4618      	mov	r0, r3
 800f5f0:	f7ff fd7a 	bl	800f0e8 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterED1Ev>
{

}
 800f5f4:	687b      	ldr	r3, [r7, #4]
 800f5f6:	4618      	mov	r0, r3
 800f5f8:	3708      	adds	r7, #8
 800f5fa:	46bd      	mov	sp, r7
 800f5fc:	bd80      	pop	{r7, pc}
 800f5fe:	bf00      	nop
 800f600:	0802e3a8 	.word	0x0802e3a8

0800f604 <_ZN25TemperatureScreenViewBaseD0Ev>:
TemperatureScreenViewBase::~TemperatureScreenViewBase()
 800f604:	b580      	push	{r7, lr}
 800f606:	b082      	sub	sp, #8
 800f608:	af00      	add	r7, sp, #0
 800f60a:	6078      	str	r0, [r7, #4]
}
 800f60c:	6878      	ldr	r0, [r7, #4]
 800f60e:	f7ff ffc5 	bl	800f59c <_ZN25TemperatureScreenViewBaseD1Ev>
 800f612:	f44f 713d 	mov.w	r1, #756	; 0x2f4
 800f616:	6878      	ldr	r0, [r7, #4]
 800f618:	f01a fdf9 	bl	802a20e <_ZdlPvj>
 800f61c:	687b      	ldr	r3, [r7, #4]
 800f61e:	4618      	mov	r0, r3
 800f620:	3708      	adds	r7, #8
 800f622:	46bd      	mov	sp, r7
 800f624:	bd80      	pop	{r7, pc}

0800f626 <_ZN25TemperatureScreenViewBase11setupScreenEv>:

void TemperatureScreenViewBase::setupScreen()
{
 800f626:	b480      	push	{r7}
 800f628:	b083      	sub	sp, #12
 800f62a:	af00      	add	r7, sp, #0
 800f62c:	6078      	str	r0, [r7, #4]

}
 800f62e:	bf00      	nop
 800f630:	370c      	adds	r7, #12
 800f632:	46bd      	mov	sp, r7
 800f634:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f638:	4770      	bx	lr

0800f63a <_ZN25TemperatureScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void TemperatureScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800f63a:	b580      	push	{r7, lr}
 800f63c:	b082      	sub	sp, #8
 800f63e:	af00      	add	r7, sp, #0
 800f640:	6078      	str	r0, [r7, #4]
 800f642:	6039      	str	r1, [r7, #0]
    if (&src == &back)
 800f644:	687b      	ldr	r3, [r7, #4]
 800f646:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 800f64a:	683a      	ldr	r2, [r7, #0]
 800f64c:	429a      	cmp	r2, r3
 800f64e:	d106      	bne.n	800f65e <_ZN25TemperatureScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x24>
    {
        //TemperatureToMain
        //When back clicked change screen to MainScreen
        //Go to MainScreen with screen transition towards West
        application().gotoMainScreenScreenSlideTransitionWest();
 800f650:	6878      	ldr	r0, [r7, #4]
 800f652:	f7ff fd3e 	bl	800f0d2 <_ZN25TemperatureScreenViewBase11applicationEv>
 800f656:	4603      	mov	r3, r0
 800f658:	4618      	mov	r0, r3
 800f65a:	f7fb fc0d 	bl	800ae78 <_ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionWestEv>
    }
}
 800f65e:	bf00      	nop
 800f660:	3708      	adds	r7, #8
 800f662:	46bd      	mov	sp, r7
 800f664:	bd80      	pop	{r7, pc}
	...

0800f668 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterEC1Ev>:
    View()
 800f668:	b580      	push	{r7, lr}
 800f66a:	b082      	sub	sp, #8
 800f66c:	af00      	add	r7, sp, #0
 800f66e:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800f670:	687b      	ldr	r3, [r7, #4]
 800f672:	4618      	mov	r0, r3
 800f674:	f00a ff7c 	bl	801a570 <_ZN8touchgfx6ScreenC1Ev>
 800f678:	4a05      	ldr	r2, [pc, #20]	; (800f690 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterEC1Ev+0x28>)
 800f67a:	687b      	ldr	r3, [r7, #4]
 800f67c:	601a      	str	r2, [r3, #0]
 800f67e:	687b      	ldr	r3, [r7, #4]
 800f680:	2200      	movs	r2, #0
 800f682:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800f684:	687b      	ldr	r3, [r7, #4]
 800f686:	4618      	mov	r0, r3
 800f688:	3708      	adds	r7, #8
 800f68a:	46bd      	mov	sp, r7
 800f68c:	bd80      	pop	{r7, pc}
 800f68e:	bf00      	nop
 800f690:	0802e3f4 	.word	0x0802e3f4

0800f694 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800f694:	b580      	push	{r7, lr}
 800f696:	b084      	sub	sp, #16
 800f698:	af00      	add	r7, sp, #0
 800f69a:	60f8      	str	r0, [r7, #12]
 800f69c:	60b9      	str	r1, [r7, #8]
 800f69e:	4639      	mov	r1, r7
 800f6a0:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800f6a4:	68fb      	ldr	r3, [r7, #12]
 800f6a6:	4618      	mov	r0, r3
 800f6a8:	f7fa ff1c 	bl	800a4e4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800f6ac:	4a08      	ldr	r2, [pc, #32]	; (800f6d0 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800f6ae:	68fb      	ldr	r3, [r7, #12]
 800f6b0:	601a      	str	r2, [r3, #0]
 800f6b2:	68fb      	ldr	r3, [r7, #12]
 800f6b4:	68ba      	ldr	r2, [r7, #8]
 800f6b6:	605a      	str	r2, [r3, #4]
 800f6b8:	68fb      	ldr	r3, [r7, #12]
 800f6ba:	3308      	adds	r3, #8
 800f6bc:	463a      	mov	r2, r7
 800f6be:	e892 0003 	ldmia.w	r2, {r0, r1}
 800f6c2:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800f6c6:	68fb      	ldr	r3, [r7, #12]
 800f6c8:	4618      	mov	r0, r3
 800f6ca:	3710      	adds	r7, #16
 800f6cc:	46bd      	mov	sp, r7
 800f6ce:	bd80      	pop	{r7, pc}
 800f6d0:	0802e3dc 	.word	0x0802e3dc

0800f6d4 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800f6d4:	b580      	push	{r7, lr}
 800f6d6:	b082      	sub	sp, #8
 800f6d8:	af00      	add	r7, sp, #0
 800f6da:	6078      	str	r0, [r7, #4]
 800f6dc:	4a05      	ldr	r2, [pc, #20]	; (800f6f4 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800f6de:	687b      	ldr	r3, [r7, #4]
 800f6e0:	601a      	str	r2, [r3, #0]
 800f6e2:	687b      	ldr	r3, [r7, #4]
 800f6e4:	4618      	mov	r0, r3
 800f6e6:	f7fa ff2d 	bl	800a544 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800f6ea:	687b      	ldr	r3, [r7, #4]
 800f6ec:	4618      	mov	r0, r3
 800f6ee:	3708      	adds	r7, #8
 800f6f0:	46bd      	mov	sp, r7
 800f6f2:	bd80      	pop	{r7, pc}
 800f6f4:	0802e3dc 	.word	0x0802e3dc

0800f6f8 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800f6f8:	b580      	push	{r7, lr}
 800f6fa:	b082      	sub	sp, #8
 800f6fc:	af00      	add	r7, sp, #0
 800f6fe:	6078      	str	r0, [r7, #4]
 800f700:	6878      	ldr	r0, [r7, #4]
 800f702:	f7ff ffe7 	bl	800f6d4 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800f706:	2110      	movs	r1, #16
 800f708:	6878      	ldr	r0, [r7, #4]
 800f70a:	f01a fd80 	bl	802a20e <_ZdlPvj>
 800f70e:	687b      	ldr	r3, [r7, #4]
 800f710:	4618      	mov	r0, r3
 800f712:	3708      	adds	r7, #8
 800f714:	46bd      	mov	sp, r7
 800f716:	bd80      	pop	{r7, pc}

0800f718 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800f718:	b580      	push	{r7, lr}
 800f71a:	b082      	sub	sp, #8
 800f71c:	af00      	add	r7, sp, #0
 800f71e:	6078      	str	r0, [r7, #4]
 800f720:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800f722:	687b      	ldr	r3, [r7, #4]
 800f724:	685b      	ldr	r3, [r3, #4]
 800f726:	687a      	ldr	r2, [r7, #4]
 800f728:	68d2      	ldr	r2, [r2, #12]
 800f72a:	1052      	asrs	r2, r2, #1
 800f72c:	1898      	adds	r0, r3, r2
 800f72e:	687b      	ldr	r3, [r7, #4]
 800f730:	68db      	ldr	r3, [r3, #12]
 800f732:	f003 0301 	and.w	r3, r3, #1
 800f736:	2b00      	cmp	r3, #0
 800f738:	d102      	bne.n	800f740 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800f73a:	687b      	ldr	r3, [r7, #4]
 800f73c:	689b      	ldr	r3, [r3, #8]
 800f73e:	e00a      	b.n	800f756 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800f740:	687b      	ldr	r3, [r7, #4]
 800f742:	685b      	ldr	r3, [r3, #4]
 800f744:	687a      	ldr	r2, [r7, #4]
 800f746:	68d2      	ldr	r2, [r2, #12]
 800f748:	1052      	asrs	r2, r2, #1
 800f74a:	4413      	add	r3, r2
 800f74c:	681b      	ldr	r3, [r3, #0]
 800f74e:	687a      	ldr	r2, [r7, #4]
 800f750:	6892      	ldr	r2, [r2, #8]
 800f752:	4413      	add	r3, r2
 800f754:	681b      	ldr	r3, [r3, #0]
 800f756:	6839      	ldr	r1, [r7, #0]
 800f758:	4798      	blx	r3
    }
 800f75a:	bf00      	nop
 800f75c:	3708      	adds	r7, #8
 800f75e:	46bd      	mov	sp, r7
 800f760:	bd80      	pop	{r7, pc}

0800f762 <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800f762:	b480      	push	{r7}
 800f764:	b083      	sub	sp, #12
 800f766:	af00      	add	r7, sp, #0
 800f768:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800f76a:	687b      	ldr	r3, [r7, #4]
 800f76c:	685b      	ldr	r3, [r3, #4]
 800f76e:	2b00      	cmp	r3, #0
 800f770:	d010      	beq.n	800f794 <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800f772:	687b      	ldr	r3, [r7, #4]
 800f774:	689b      	ldr	r3, [r3, #8]
 800f776:	2b00      	cmp	r3, #0
 800f778:	d107      	bne.n	800f78a <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800f77a:	687b      	ldr	r3, [r7, #4]
 800f77c:	68db      	ldr	r3, [r3, #12]
 800f77e:	f003 0301 	and.w	r3, r3, #1
 800f782:	2b00      	cmp	r3, #0
 800f784:	d101      	bne.n	800f78a <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800f786:	2301      	movs	r3, #1
 800f788:	e000      	b.n	800f78c <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800f78a:	2300      	movs	r3, #0
 800f78c:	2b01      	cmp	r3, #1
 800f78e:	d001      	beq.n	800f794 <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800f790:	2301      	movs	r3, #1
 800f792:	e000      	b.n	800f796 <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800f794:	2300      	movs	r3, #0
    }
 800f796:	4618      	mov	r0, r3
 800f798:	370c      	adds	r7, #12
 800f79a:	46bd      	mov	sp, r7
 800f79c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f7a0:	4770      	bx	lr
	...

0800f7a4 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800f7a4:	b480      	push	{r7}
 800f7a6:	af00      	add	r7, sp, #0
    return bitmap_database;
 800f7a8:	4b02      	ldr	r3, [pc, #8]	; (800f7b4 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800f7aa:	4618      	mov	r0, r3
 800f7ac:	46bd      	mov	sp, r7
 800f7ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f7b2:	4770      	bx	lr
 800f7b4:	0802e420 	.word	0x0802e420

0800f7b8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800f7b8:	b480      	push	{r7}
 800f7ba:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800f7bc:	2305      	movs	r3, #5
}
 800f7be:	4618      	mov	r0, r3
 800f7c0:	46bd      	mov	sp, r7
 800f7c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f7c6:	4770      	bx	lr

0800f7c8 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
     * @param  prevChar The Unicode value of the previous character.
     * @param  glyph    the glyph object for the current character.
     *
     * @return The kerning distance between prevChar and glyph char.
     */
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800f7c8:	b480      	push	{r7}
 800f7ca:	b085      	sub	sp, #20
 800f7cc:	af00      	add	r7, sp, #0
 800f7ce:	60f8      	str	r0, [r7, #12]
 800f7d0:	460b      	mov	r3, r1
 800f7d2:	607a      	str	r2, [r7, #4]
 800f7d4:	817b      	strh	r3, [r7, #10]
    {
        (void)prevChar; // Unused variable
        (void)glyph;    // Unused variable
        return 0;
 800f7d6:	2300      	movs	r3, #0
    }
 800f7d8:	4618      	mov	r0, r3
 800f7da:	3714      	adds	r7, #20
 800f7dc:	46bd      	mov	sp, r7
 800f7de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f7e2:	4770      	bx	lr

0800f7e4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    /**
     * Gets GSUB table. Currently only used for Devanagari fonts.
     *
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
 800f7e4:	b480      	push	{r7}
 800f7e6:	b083      	sub	sp, #12
 800f7e8:	af00      	add	r7, sp, #0
 800f7ea:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800f7ec:	2300      	movs	r3, #0
    }
 800f7ee:	4618      	mov	r0, r3
 800f7f0:	370c      	adds	r7, #12
 800f7f2:	46bd      	mov	sp, r7
 800f7f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f7f8:	4770      	bx	lr

0800f7fa <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    /**
     * Gets the contextual forms table used in arabic fonts.
     *
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800f7fa:	b480      	push	{r7}
 800f7fc:	b083      	sub	sp, #12
 800f7fe:	af00      	add	r7, sp, #0
 800f800:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800f802:	2300      	movs	r3, #0
    }
 800f804:	4618      	mov	r0, r3
 800f806:	370c      	adds	r7, #12
 800f808:	46bd      	mov	sp, r7
 800f80a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f80e:	4770      	bx	lr

0800f810 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800f810:	b480      	push	{r7}
 800f812:	b085      	sub	sp, #20
 800f814:	af00      	add	r7, sp, #0
 800f816:	60f8      	str	r0, [r7, #12]
 800f818:	60b9      	str	r1, [r7, #8]
 800f81a:	4613      	mov	r3, r2
 800f81c:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800f81e:	4a07      	ldr	r2, [pc, #28]	; (800f83c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800f820:	68fb      	ldr	r3, [r7, #12]
 800f822:	6013      	str	r3, [r2, #0]
        fonts = f;
 800f824:	4a06      	ldr	r2, [pc, #24]	; (800f840 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800f826:	68bb      	ldr	r3, [r7, #8]
 800f828:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800f82a:	4a06      	ldr	r2, [pc, #24]	; (800f844 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800f82c:	88fb      	ldrh	r3, [r7, #6]
 800f82e:	8013      	strh	r3, [r2, #0]
    }
 800f830:	bf00      	nop
 800f832:	3714      	adds	r7, #20
 800f834:	46bd      	mov	sp, r7
 800f836:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f83a:	4770      	bx	lr
 800f83c:	20002380 	.word	0x20002380
 800f840:	20002388 	.word	0x20002388
 800f844:	20002384 	.word	0x20002384

0800f848 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800f848:	b40e      	push	{r1, r2, r3}
 800f84a:	b580      	push	{r7, lr}
 800f84c:	b085      	sub	sp, #20
 800f84e:	af00      	add	r7, sp, #0
 800f850:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800f852:	f107 0320 	add.w	r3, r7, #32
 800f856:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800f858:	68bb      	ldr	r3, [r7, #8]
 800f85a:	69fa      	ldr	r2, [r7, #28]
 800f85c:	2100      	movs	r1, #0
 800f85e:	6878      	ldr	r0, [r7, #4]
 800f860:	f00a fa0e 	bl	8019c80 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800f864:	4603      	mov	r3, r0
 800f866:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800f868:	89fb      	ldrh	r3, [r7, #14]
}
 800f86a:	4618      	mov	r0, r3
 800f86c:	3714      	adds	r7, #20
 800f86e:	46bd      	mov	sp, r7
 800f870:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800f874:	b003      	add	sp, #12
 800f876:	4770      	bx	lr

0800f878 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800f878:	b40c      	push	{r2, r3}
 800f87a:	b580      	push	{r7, lr}
 800f87c:	b084      	sub	sp, #16
 800f87e:	af00      	add	r7, sp, #0
 800f880:	6078      	str	r0, [r7, #4]
 800f882:	460b      	mov	r3, r1
 800f884:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800f886:	f107 031c 	add.w	r3, r7, #28
 800f88a:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800f88c:	78f9      	ldrb	r1, [r7, #3]
 800f88e:	68bb      	ldr	r3, [r7, #8]
 800f890:	69ba      	ldr	r2, [r7, #24]
 800f892:	6878      	ldr	r0, [r7, #4]
 800f894:	f00a f9f4 	bl	8019c80 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800f898:	4603      	mov	r3, r0
 800f89a:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800f89c:	89fb      	ldrh	r3, [r7, #14]
}
 800f89e:	4618      	mov	r0, r3
 800f8a0:	3710      	adds	r7, #16
 800f8a2:	46bd      	mov	sp, r7
 800f8a4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800f8a8:	b002      	add	sp, #8
 800f8aa:	4770      	bx	lr

0800f8ac <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800f8ac:	b580      	push	{r7, lr}
 800f8ae:	b08a      	sub	sp, #40	; 0x28
 800f8b0:	af00      	add	r7, sp, #0
 800f8b2:	6078      	str	r0, [r7, #4]
 800f8b4:	460b      	mov	r3, r1
 800f8b6:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800f8b8:	687b      	ldr	r3, [r7, #4]
 800f8ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f8bc:	2b00      	cmp	r3, #0
 800f8be:	d016      	beq.n	800f8ee <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800f8c0:	687b      	ldr	r3, [r7, #4]
 800f8c2:	3322      	adds	r3, #34	; 0x22
 800f8c4:	627b      	str	r3, [r7, #36]	; 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800f8c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f8c8:	8adb      	ldrh	r3, [r3, #22]
 800f8ca:	2b00      	cmp	r3, #0
 800f8cc:	d105      	bne.n	800f8da <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800f8ce:	4b43      	ldr	r3, [pc, #268]	; (800f9dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800f8d0:	4a43      	ldr	r2, [pc, #268]	; (800f9e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800f8d2:	21c5      	movs	r1, #197	; 0xc5
 800f8d4:	4843      	ldr	r0, [pc, #268]	; (800f9e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800f8d6:	f01b fc8b 	bl	802b1f0 <__assert_func>
            return buffer[pos];
 800f8da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f8dc:	8a9b      	ldrh	r3, [r3, #20]
 800f8de:	461a      	mov	r2, r3
 800f8e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f8e2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800f8e6:	2b00      	cmp	r3, #0
 800f8e8:	d001      	beq.n	800f8ee <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800f8ea:	2301      	movs	r3, #1
 800f8ec:	e000      	b.n	800f8f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800f8ee:	2300      	movs	r3, #0
 800f8f0:	2b00      	cmp	r3, #0
 800f8f2:	d06a      	beq.n	800f9ca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800f8f4:	6878      	ldr	r0, [r7, #4]
 800f8f6:	f00b fd76 	bl	801b3e6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800f8fa:	687b      	ldr	r3, [r7, #4]
 800f8fc:	3322      	adds	r3, #34	; 0x22
 800f8fe:	623b      	str	r3, [r7, #32]
 800f900:	2301      	movs	r3, #1
 800f902:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800f904:	6a3b      	ldr	r3, [r7, #32]
 800f906:	8adb      	ldrh	r3, [r3, #22]
 800f908:	8bfa      	ldrh	r2, [r7, #30]
 800f90a:	429a      	cmp	r2, r3
 800f90c:	d305      	bcc.n	800f91a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800f90e:	4b36      	ldr	r3, [pc, #216]	; (800f9e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800f910:	4a36      	ldr	r2, [pc, #216]	; (800f9ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800f912:	21cb      	movs	r1, #203	; 0xcb
 800f914:	4833      	ldr	r0, [pc, #204]	; (800f9e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800f916:	f01b fc6b 	bl	802b1f0 <__assert_func>
            const uint16_t index = pos + offset;
 800f91a:	6a3b      	ldr	r3, [r7, #32]
 800f91c:	8a9a      	ldrh	r2, [r3, #20]
 800f91e:	8bfb      	ldrh	r3, [r7, #30]
 800f920:	4413      	add	r3, r2
 800f922:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800f924:	8bbb      	ldrh	r3, [r7, #28]
 800f926:	2b09      	cmp	r3, #9
 800f928:	d801      	bhi.n	800f92e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800f92a:	8bbb      	ldrh	r3, [r7, #28]
 800f92c:	e001      	b.n	800f932 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800f92e:	8bbb      	ldrh	r3, [r7, #28]
 800f930:	3b0a      	subs	r3, #10
 800f932:	6a3a      	ldr	r2, [r7, #32]
 800f934:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800f938:	f640 123f 	movw	r2, #2367	; 0x93f
 800f93c:	4293      	cmp	r3, r2
 800f93e:	bf0c      	ite	eq
 800f940:	2301      	moveq	r3, #1
 800f942:	2300      	movne	r3, #0
 800f944:	b2db      	uxtb	r3, r3
 800f946:	2b00      	cmp	r3, #0
 800f948:	d03f      	beq.n	800f9ca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800f94a:	687b      	ldr	r3, [r7, #4]
 800f94c:	3322      	adds	r3, #34	; 0x22
 800f94e:	687a      	ldr	r2, [r7, #4]
 800f950:	3222      	adds	r2, #34	; 0x22
 800f952:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800f954:	68ba      	ldr	r2, [r7, #8]
 800f956:	8ad2      	ldrh	r2, [r2, #22]
 800f958:	2a00      	cmp	r2, #0
 800f95a:	d105      	bne.n	800f968 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800f95c:	4b1f      	ldr	r3, [pc, #124]	; (800f9dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800f95e:	4a20      	ldr	r2, [pc, #128]	; (800f9e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800f960:	21c5      	movs	r1, #197	; 0xc5
 800f962:	4820      	ldr	r0, [pc, #128]	; (800f9e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800f964:	f01b fc44 	bl	802b1f0 <__assert_func>
            return buffer[pos];
 800f968:	68ba      	ldr	r2, [r7, #8]
 800f96a:	8a92      	ldrh	r2, [r2, #20]
 800f96c:	4611      	mov	r1, r2
 800f96e:	68ba      	ldr	r2, [r7, #8]
 800f970:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800f974:	613b      	str	r3, [r7, #16]
 800f976:	4613      	mov	r3, r2
 800f978:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800f97a:	693b      	ldr	r3, [r7, #16]
 800f97c:	8adb      	ldrh	r3, [r3, #22]
 800f97e:	2b01      	cmp	r3, #1
 800f980:	d806      	bhi.n	800f990 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800f982:	4b1b      	ldr	r3, [pc, #108]	; (800f9f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800f984:	4a1b      	ldr	r2, [pc, #108]	; (800f9f4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800f986:	f44f 718e 	mov.w	r1, #284	; 0x11c
 800f98a:	4816      	ldr	r0, [pc, #88]	; (800f9e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800f98c:	f01b fc30 	bl	802b1f0 <__assert_func>
            const uint16_t index = pos + 1;
 800f990:	693b      	ldr	r3, [r7, #16]
 800f992:	8a9b      	ldrh	r3, [r3, #20]
 800f994:	3301      	adds	r3, #1
 800f996:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800f998:	89bb      	ldrh	r3, [r7, #12]
 800f99a:	2b09      	cmp	r3, #9
 800f99c:	d801      	bhi.n	800f9a2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800f99e:	89bb      	ldrh	r3, [r7, #12]
 800f9a0:	e000      	b.n	800f9a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800f9a2:	2300      	movs	r3, #0
 800f9a4:	693a      	ldr	r2, [r7, #16]
 800f9a6:	89f9      	ldrh	r1, [r7, #14]
 800f9a8:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800f9ac:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800f9ae:	687b      	ldr	r3, [r7, #4]
 800f9b0:	3322      	adds	r3, #34	; 0x22
 800f9b2:	61bb      	str	r3, [r7, #24]
 800f9b4:	f640 133f 	movw	r3, #2367	; 0x93f
 800f9b8:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800f9ba:	69bb      	ldr	r3, [r7, #24]
 800f9bc:	8a9b      	ldrh	r3, [r3, #20]
 800f9be:	4619      	mov	r1, r3
 800f9c0:	69bb      	ldr	r3, [r7, #24]
 800f9c2:	8afa      	ldrh	r2, [r7, #22]
 800f9c4:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800f9c8:	bf00      	nop
        }
    }
    return getNextChar();
 800f9ca:	6878      	ldr	r0, [r7, #4]
 800f9cc:	f00b fc0e 	bl	801b1ec <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f9d0:	4603      	mov	r3, r0
}
 800f9d2:	4618      	mov	r0, r3
 800f9d4:	3728      	adds	r7, #40	; 0x28
 800f9d6:	46bd      	mov	sp, r7
 800f9d8:	bd80      	pop	{r7, pc}
 800f9da:	bf00      	nop
 800f9dc:	0802d000 	.word	0x0802d000
 800f9e0:	0802d00c 	.word	0x0802d00c
 800f9e4:	0802d0b8 	.word	0x0802d0b8
 800f9e8:	0802d100 	.word	0x0802d100
 800f9ec:	0802d110 	.word	0x0802d110
 800f9f0:	0802d1e4 	.word	0x0802d1e4
 800f9f4:	0802d1f0 	.word	0x0802d1f0

0800f9f8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800f9f8:	b580      	push	{r7, lr}
 800f9fa:	b082      	sub	sp, #8
 800f9fc:	af00      	add	r7, sp, #0
 800f9fe:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800fa00:	6878      	ldr	r0, [r7, #4]
 800fa02:	f00b fbba 	bl	801b17a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800fa06:	bf00      	nop
 800fa08:	3708      	adds	r7, #8
 800fa0a:	46bd      	mov	sp, r7
 800fa0c:	bd80      	pop	{r7, pc}

0800fa0e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800fa0e:	b580      	push	{r7, lr}
 800fa10:	b088      	sub	sp, #32
 800fa12:	af02      	add	r7, sp, #8
 800fa14:	60f8      	str	r0, [r7, #12]
 800fa16:	1d38      	adds	r0, r7, #4
 800fa18:	e880 0006 	stmia.w	r0, {r1, r2}
 800fa1c:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800fa1e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800fa22:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800fa24:	1d39      	adds	r1, r7, #4
 800fa26:	697b      	ldr	r3, [r7, #20]
 800fa28:	9301      	str	r3, [sp, #4]
 800fa2a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800fa2c:	9300      	str	r3, [sp, #0]
 800fa2e:	6a3b      	ldr	r3, [r7, #32]
 800fa30:	683a      	ldr	r2, [r7, #0]
 800fa32:	68f8      	ldr	r0, [r7, #12]
 800fa34:	f008 fd1a 	bl	801846c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800fa38:	bf00      	nop
 800fa3a:	3718      	adds	r7, #24
 800fa3c:	46bd      	mov	sp, r7
 800fa3e:	bd80      	pop	{r7, pc}

0800fa40 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800fa40:	b590      	push	{r4, r7, lr}
 800fa42:	b085      	sub	sp, #20
 800fa44:	af00      	add	r7, sp, #0
 800fa46:	4603      	mov	r3, r0
 800fa48:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800fa4a:	2300      	movs	r3, #0
 800fa4c:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800fa4e:	88fb      	ldrh	r3, [r7, #6]
 800fa50:	2b00      	cmp	r3, #0
 800fa52:	d127      	bne.n	800faa4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800fa54:	88fb      	ldrh	r3, [r7, #6]
 800fa56:	4a1e      	ldr	r2, [pc, #120]	; (800fad0 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800fa58:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800fa5c:	2b00      	cmp	r3, #0
 800fa5e:	d016      	beq.n	800fa8e <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800fa60:	88fb      	ldrh	r3, [r7, #6]
 800fa62:	4a1b      	ldr	r2, [pc, #108]	; (800fad0 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800fa64:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800fa68:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800fa6a:	68bb      	ldr	r3, [r7, #8]
 800fa6c:	681b      	ldr	r3, [r3, #0]
 800fa6e:	68ba      	ldr	r2, [r7, #8]
 800fa70:	4413      	add	r3, r2
 800fa72:	4a18      	ldr	r2, [pc, #96]	; (800fad4 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800fa74:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800fa76:	68bb      	ldr	r3, [r7, #8]
 800fa78:	685b      	ldr	r3, [r3, #4]
 800fa7a:	68ba      	ldr	r2, [r7, #8]
 800fa7c:	4413      	add	r3, r2
 800fa7e:	4a16      	ldr	r2, [pc, #88]	; (800fad8 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800fa80:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800fa82:	68bb      	ldr	r3, [r7, #8]
 800fa84:	689b      	ldr	r3, [r3, #8]
 800fa86:	68ba      	ldr	r2, [r7, #8]
 800fa88:	4413      	add	r3, r2
 800fa8a:	60fb      	str	r3, [r7, #12]
 800fa8c:	e00a      	b.n	800faa4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800fa8e:	4b11      	ldr	r3, [pc, #68]	; (800fad4 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800fa90:	4a12      	ldr	r2, [pc, #72]	; (800fadc <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800fa92:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800fa94:	4a12      	ldr	r2, [pc, #72]	; (800fae0 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800fa96:	4b10      	ldr	r3, [pc, #64]	; (800fad8 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800fa98:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800fa9a:	88fb      	ldrh	r3, [r7, #6]
 800fa9c:	4a11      	ldr	r2, [pc, #68]	; (800fae4 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800fa9e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800faa2:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800faa4:	68fb      	ldr	r3, [r7, #12]
 800faa6:	2b00      	cmp	r3, #0
 800faa8:	d00d      	beq.n	800fac6 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800faaa:	4a0f      	ldr	r2, [pc, #60]	; (800fae8 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800faac:	88fb      	ldrh	r3, [r7, #6]
 800faae:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800fab0:	f000 f83e 	bl	800fb30 <_ZN17TypedTextDatabase8getFontsEv>
 800fab4:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800fab6:	f000 f833 	bl	800fb20 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800faba:	4603      	mov	r3, r0
 800fabc:	461a      	mov	r2, r3
 800fabe:	4621      	mov	r1, r4
 800fac0:	68f8      	ldr	r0, [r7, #12]
 800fac2:	f7ff fea5 	bl	800f810 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800fac6:	bf00      	nop
 800fac8:	3714      	adds	r7, #20
 800faca:	46bd      	mov	sp, r7
 800facc:	bd90      	pop	{r4, r7, pc}
 800face:	bf00      	nop
 800fad0:	200004f4 	.word	0x200004f4
 800fad4:	200004fc 	.word	0x200004fc
 800fad8:	20000500 	.word	0x20000500
 800fadc:	0804cc64 	.word	0x0804cc64
 800fae0:	0804cc20 	.word	0x0804cc20
 800fae4:	0804cd10 	.word	0x0804cd10
 800fae8:	200004f8 	.word	0x200004f8

0800faec <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800faec:	b480      	push	{r7}
 800faee:	b083      	sub	sp, #12
 800faf0:	af00      	add	r7, sp, #0
 800faf2:	6078      	str	r0, [r7, #4]
 800faf4:	460b      	mov	r3, r1
 800faf6:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800faf8:	4b07      	ldr	r3, [pc, #28]	; (800fb18 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800fafa:	681a      	ldr	r2, [r3, #0]
 800fafc:	4b07      	ldr	r3, [pc, #28]	; (800fb1c <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800fafe:	6819      	ldr	r1, [r3, #0]
 800fb00:	887b      	ldrh	r3, [r7, #2]
 800fb02:	009b      	lsls	r3, r3, #2
 800fb04:	440b      	add	r3, r1
 800fb06:	681b      	ldr	r3, [r3, #0]
 800fb08:	005b      	lsls	r3, r3, #1
 800fb0a:	4413      	add	r3, r2
}
 800fb0c:	4618      	mov	r0, r3
 800fb0e:	370c      	adds	r7, #12
 800fb10:	46bd      	mov	sp, r7
 800fb12:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb16:	4770      	bx	lr
 800fb18:	200004fc 	.word	0x200004fc
 800fb1c:	20000500 	.word	0x20000500

0800fb20 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800fb20:	b480      	push	{r7}
 800fb22:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800fb24:	2311      	movs	r3, #17
}
 800fb26:	4618      	mov	r0, r3
 800fb28:	46bd      	mov	sp, r7
 800fb2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb2e:	4770      	bx	lr

0800fb30 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800fb30:	b480      	push	{r7}
 800fb32:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800fb34:	4b02      	ldr	r3, [pc, #8]	; (800fb40 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800fb36:	4618      	mov	r0, r3
 800fb38:	46bd      	mov	sp, r7
 800fb3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb3e:	4770      	bx	lr
 800fb40:	20000504 	.word	0x20000504

0800fb44 <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800fb44:	b580      	push	{r7, lr}
 800fb46:	b082      	sub	sp, #8
 800fb48:	af00      	add	r7, sp, #0
 800fb4a:	6078      	str	r0, [r7, #4]
 800fb4c:	6039      	str	r1, [r7, #0]
 800fb4e:	687b      	ldr	r3, [r7, #4]
 800fb50:	2b01      	cmp	r3, #1
 800fb52:	d113      	bne.n	800fb7c <_Z41__static_initialization_and_destruction_0ii+0x38>
 800fb54:	683b      	ldr	r3, [r7, #0]
 800fb56:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800fb5a:	4293      	cmp	r3, r2
 800fb5c:	d10e      	bne.n	800fb7c <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 800fb5e:	f7f9 fcd9 	bl	8009514 <_Z23getFont_verdana_20_4bppv>
 800fb62:	4603      	mov	r3, r0
};
 800fb64:	4a07      	ldr	r2, [pc, #28]	; (800fb84 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800fb66:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 800fb68:	f7f9 fd2e 	bl	80095c8 <_Z23getFont_verdana_40_4bppv>
 800fb6c:	4603      	mov	r3, r0
};
 800fb6e:	4a05      	ldr	r2, [pc, #20]	; (800fb84 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800fb70:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp())
 800fb72:	f7f9 fc75 	bl	8009460 <_Z23getFont_verdana_10_4bppv>
 800fb76:	4603      	mov	r3, r0
};
 800fb78:	4a02      	ldr	r2, [pc, #8]	; (800fb84 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800fb7a:	6093      	str	r3, [r2, #8]
} // namespace TypedTextDatabase
 800fb7c:	bf00      	nop
 800fb7e:	3708      	adds	r7, #8
 800fb80:	46bd      	mov	sp, r7
 800fb82:	bd80      	pop	{r7, pc}
 800fb84:	20000504 	.word	0x20000504

0800fb88 <_GLOBAL__sub_I_touchgfx_fonts>:
 800fb88:	b580      	push	{r7, lr}
 800fb8a:	af00      	add	r7, sp, #0
 800fb8c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800fb90:	2001      	movs	r0, #1
 800fb92:	f7ff ffd7 	bl	800fb44 <_Z41__static_initialization_and_destruction_0ii>
 800fb96:	bd80      	pop	{r7, pc}

0800fb98 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800fb98:	b480      	push	{r7}
 800fb9a:	b083      	sub	sp, #12
 800fb9c:	af00      	add	r7, sp, #0
 800fb9e:	6078      	str	r0, [r7, #4]
    {
    }
 800fba0:	bf00      	nop
 800fba2:	370c      	adds	r7, #12
 800fba4:	46bd      	mov	sp, r7
 800fba6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fbaa:	4770      	bx	lr

0800fbac <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800fbac:	b480      	push	{r7}
 800fbae:	b083      	sub	sp, #12
 800fbb0:	af00      	add	r7, sp, #0
 800fbb2:	6078      	str	r0, [r7, #4]
    {
    }
 800fbb4:	bf00      	nop
 800fbb6:	370c      	adds	r7, #12
 800fbb8:	46bd      	mov	sp, r7
 800fbba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fbbe:	4770      	bx	lr

0800fbc0 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800fbc0:	b480      	push	{r7}
 800fbc2:	b083      	sub	sp, #12
 800fbc4:	af00      	add	r7, sp, #0
 800fbc6:	6078      	str	r0, [r7, #4]
    {
 800fbc8:	4a04      	ldr	r2, [pc, #16]	; (800fbdc <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800fbca:	687b      	ldr	r3, [r7, #4]
 800fbcc:	601a      	str	r2, [r3, #0]
    }
 800fbce:	687b      	ldr	r3, [r7, #4]
 800fbd0:	4618      	mov	r0, r3
 800fbd2:	370c      	adds	r7, #12
 800fbd4:	46bd      	mov	sp, r7
 800fbd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fbda:	4770      	bx	lr
 800fbdc:	0802e544 	.word	0x0802e544

0800fbe0 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800fbe0:	b580      	push	{r7, lr}
 800fbe2:	b082      	sub	sp, #8
 800fbe4:	af00      	add	r7, sp, #0
 800fbe6:	6078      	str	r0, [r7, #4]
    }
 800fbe8:	6878      	ldr	r0, [r7, #4]
 800fbea:	f7ff ffe9 	bl	800fbc0 <_ZN8touchgfx9PresenterD1Ev>
 800fbee:	2104      	movs	r1, #4
 800fbf0:	6878      	ldr	r0, [r7, #4]
 800fbf2:	f01a fb0c 	bl	802a20e <_ZdlPvj>
 800fbf6:	687b      	ldr	r3, [r7, #4]
 800fbf8:	4618      	mov	r0, r3
 800fbfa:	3708      	adds	r7, #8
 800fbfc:	46bd      	mov	sp, r7
 800fbfe:	bd80      	pop	{r7, pc}

0800fc00 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800fc00:	b480      	push	{r7}
 800fc02:	b083      	sub	sp, #12
 800fc04:	af00      	add	r7, sp, #0
 800fc06:	6078      	str	r0, [r7, #4]
    {
 800fc08:	4a04      	ldr	r2, [pc, #16]	; (800fc1c <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800fc0a:	687b      	ldr	r3, [r7, #4]
 800fc0c:	601a      	str	r2, [r3, #0]
    }
 800fc0e:	687b      	ldr	r3, [r7, #4]
 800fc10:	4618      	mov	r0, r3
 800fc12:	370c      	adds	r7, #12
 800fc14:	46bd      	mov	sp, r7
 800fc16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc1a:	4770      	bx	lr
 800fc1c:	0802e544 	.word	0x0802e544

0800fc20 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800fc20:	b480      	push	{r7}
 800fc22:	b083      	sub	sp, #12
 800fc24:	af00      	add	r7, sp, #0
 800fc26:	6078      	str	r0, [r7, #4]
 800fc28:	4a06      	ldr	r2, [pc, #24]	; (800fc44 <_ZN13ModelListenerC1Ev+0x24>)
 800fc2a:	687b      	ldr	r3, [r7, #4]
 800fc2c:	601a      	str	r2, [r3, #0]
 800fc2e:	687b      	ldr	r3, [r7, #4]
 800fc30:	2200      	movs	r2, #0
 800fc32:	605a      	str	r2, [r3, #4]
 800fc34:	687b      	ldr	r3, [r7, #4]
 800fc36:	4618      	mov	r0, r3
 800fc38:	370c      	adds	r7, #12
 800fc3a:	46bd      	mov	sp, r7
 800fc3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc40:	4770      	bx	lr
 800fc42:	bf00      	nop
 800fc44:	0802e524 	.word	0x0802e524

0800fc48 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800fc48:	b480      	push	{r7}
 800fc4a:	b083      	sub	sp, #12
 800fc4c:	af00      	add	r7, sp, #0
 800fc4e:	6078      	str	r0, [r7, #4]
 800fc50:	4a04      	ldr	r2, [pc, #16]	; (800fc64 <_ZN13ModelListenerD1Ev+0x1c>)
 800fc52:	687b      	ldr	r3, [r7, #4]
 800fc54:	601a      	str	r2, [r3, #0]
 800fc56:	687b      	ldr	r3, [r7, #4]
 800fc58:	4618      	mov	r0, r3
 800fc5a:	370c      	adds	r7, #12
 800fc5c:	46bd      	mov	sp, r7
 800fc5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc62:	4770      	bx	lr
 800fc64:	0802e524 	.word	0x0802e524

0800fc68 <_ZN13ModelListenerD0Ev>:
 800fc68:	b580      	push	{r7, lr}
 800fc6a:	b082      	sub	sp, #8
 800fc6c:	af00      	add	r7, sp, #0
 800fc6e:	6078      	str	r0, [r7, #4]
 800fc70:	6878      	ldr	r0, [r7, #4]
 800fc72:	f7ff ffe9 	bl	800fc48 <_ZN13ModelListenerD1Ev>
 800fc76:	2108      	movs	r1, #8
 800fc78:	6878      	ldr	r0, [r7, #4]
 800fc7a:	f01a fac8 	bl	802a20e <_ZdlPvj>
 800fc7e:	687b      	ldr	r3, [r7, #4]
 800fc80:	4618      	mov	r0, r3
 800fc82:	3708      	adds	r7, #8
 800fc84:	46bd      	mov	sp, r7
 800fc86:	bd80      	pop	{r7, pc}

0800fc88 <_ZN13ModelListener11setPressureEi>:
    virtual void setPressure(int Val){};
 800fc88:	b480      	push	{r7}
 800fc8a:	b083      	sub	sp, #12
 800fc8c:	af00      	add	r7, sp, #0
 800fc8e:	6078      	str	r0, [r7, #4]
 800fc90:	6039      	str	r1, [r7, #0]
 800fc92:	bf00      	nop
 800fc94:	370c      	adds	r7, #12
 800fc96:	46bd      	mov	sp, r7
 800fc98:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc9c:	4770      	bx	lr

0800fc9e <_ZN13ModelListener14setTemperatureEi>:
    virtual void setTemperature(int Temperature_Val){};
 800fc9e:	b480      	push	{r7}
 800fca0:	b083      	sub	sp, #12
 800fca2:	af00      	add	r7, sp, #0
 800fca4:	6078      	str	r0, [r7, #4]
 800fca6:	6039      	str	r1, [r7, #0]
 800fca8:	bf00      	nop
 800fcaa:	370c      	adds	r7, #12
 800fcac:	46bd      	mov	sp, r7
 800fcae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fcb2:	4770      	bx	lr

0800fcb4 <_ZN13ModelListener5setCOEi>:
    virtual void setCO(int Val){};
 800fcb4:	b480      	push	{r7}
 800fcb6:	b083      	sub	sp, #12
 800fcb8:	af00      	add	r7, sp, #0
 800fcba:	6078      	str	r0, [r7, #4]
 800fcbc:	6039      	str	r1, [r7, #0]
 800fcbe:	bf00      	nop
 800fcc0:	370c      	adds	r7, #12
 800fcc2:	46bd      	mov	sp, r7
 800fcc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fcc8:	4770      	bx	lr

0800fcca <_ZN13ModelListener10updateTimeEccc>:
    virtual void updateTime(char Hour,char Minute,char Second){};
 800fcca:	b480      	push	{r7}
 800fccc:	b083      	sub	sp, #12
 800fcce:	af00      	add	r7, sp, #0
 800fcd0:	6078      	str	r0, [r7, #4]
 800fcd2:	4608      	mov	r0, r1
 800fcd4:	4611      	mov	r1, r2
 800fcd6:	461a      	mov	r2, r3
 800fcd8:	4603      	mov	r3, r0
 800fcda:	70fb      	strb	r3, [r7, #3]
 800fcdc:	460b      	mov	r3, r1
 800fcde:	70bb      	strb	r3, [r7, #2]
 800fce0:	4613      	mov	r3, r2
 800fce2:	707b      	strb	r3, [r7, #1]
 800fce4:	bf00      	nop
 800fce6:	370c      	adds	r7, #12
 800fce8:	46bd      	mov	sp, r7
 800fcea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fcee:	4770      	bx	lr

0800fcf0 <_ZN20ClockScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ClockScreenPresenter() {}
 800fcf0:	b580      	push	{r7, lr}
 800fcf2:	b082      	sub	sp, #8
 800fcf4:	af00      	add	r7, sp, #0
 800fcf6:	6078      	str	r0, [r7, #4]
 800fcf8:	4a09      	ldr	r2, [pc, #36]	; (800fd20 <_ZN20ClockScreenPresenterD1Ev+0x30>)
 800fcfa:	687b      	ldr	r3, [r7, #4]
 800fcfc:	601a      	str	r2, [r3, #0]
 800fcfe:	4a09      	ldr	r2, [pc, #36]	; (800fd24 <_ZN20ClockScreenPresenterD1Ev+0x34>)
 800fd00:	687b      	ldr	r3, [r7, #4]
 800fd02:	605a      	str	r2, [r3, #4]
 800fd04:	687b      	ldr	r3, [r7, #4]
 800fd06:	3304      	adds	r3, #4
 800fd08:	4618      	mov	r0, r3
 800fd0a:	f7ff ff9d 	bl	800fc48 <_ZN13ModelListenerD1Ev>
 800fd0e:	687b      	ldr	r3, [r7, #4]
 800fd10:	4618      	mov	r0, r3
 800fd12:	f7ff ff55 	bl	800fbc0 <_ZN8touchgfx9PresenterD1Ev>
 800fd16:	687b      	ldr	r3, [r7, #4]
 800fd18:	4618      	mov	r0, r3
 800fd1a:	3708      	adds	r7, #8
 800fd1c:	46bd      	mov	sp, r7
 800fd1e:	bd80      	pop	{r7, pc}
 800fd20:	0802e4e8 	.word	0x0802e4e8
 800fd24:	0802e504 	.word	0x0802e504

0800fd28 <_ZThn4_N20ClockScreenPresenterD1Ev>:
 800fd28:	f1a0 0004 	sub.w	r0, r0, #4
 800fd2c:	e7e0      	b.n	800fcf0 <_ZN20ClockScreenPresenterD1Ev>
 800fd2e:	bf00      	nop

0800fd30 <_ZN20ClockScreenPresenterD0Ev>:
 800fd30:	b580      	push	{r7, lr}
 800fd32:	b082      	sub	sp, #8
 800fd34:	af00      	add	r7, sp, #0
 800fd36:	6078      	str	r0, [r7, #4]
 800fd38:	6878      	ldr	r0, [r7, #4]
 800fd3a:	f7ff ffd9 	bl	800fcf0 <_ZN20ClockScreenPresenterD1Ev>
 800fd3e:	2110      	movs	r1, #16
 800fd40:	6878      	ldr	r0, [r7, #4]
 800fd42:	f01a fa64 	bl	802a20e <_ZdlPvj>
 800fd46:	687b      	ldr	r3, [r7, #4]
 800fd48:	4618      	mov	r0, r3
 800fd4a:	3708      	adds	r7, #8
 800fd4c:	46bd      	mov	sp, r7
 800fd4e:	bd80      	pop	{r7, pc}

0800fd50 <_ZThn4_N20ClockScreenPresenterD0Ev>:
 800fd50:	f1a0 0004 	sub.w	r0, r0, #4
 800fd54:	e7ec      	b.n	800fd30 <_ZN20ClockScreenPresenterD0Ev>
	...

0800fd58 <_ZN20ClockScreenPresenterC1ER15ClockScreenView>:
#include <gui/clockscreen_screen/ClockScreenView.hpp>
#include <gui/clockscreen_screen/ClockScreenPresenter.hpp>

ClockScreenPresenter::ClockScreenPresenter(ClockScreenView& v)
 800fd58:	b580      	push	{r7, lr}
 800fd5a:	b082      	sub	sp, #8
 800fd5c:	af00      	add	r7, sp, #0
 800fd5e:	6078      	str	r0, [r7, #4]
 800fd60:	6039      	str	r1, [r7, #0]
    : view(v)
 800fd62:	687b      	ldr	r3, [r7, #4]
 800fd64:	4618      	mov	r0, r3
 800fd66:	f7ff ff4b 	bl	800fc00 <_ZN8touchgfx9PresenterC1Ev>
 800fd6a:	687b      	ldr	r3, [r7, #4]
 800fd6c:	3304      	adds	r3, #4
 800fd6e:	4618      	mov	r0, r3
 800fd70:	f7ff ff56 	bl	800fc20 <_ZN13ModelListenerC1Ev>
 800fd74:	4a06      	ldr	r2, [pc, #24]	; (800fd90 <_ZN20ClockScreenPresenterC1ER15ClockScreenView+0x38>)
 800fd76:	687b      	ldr	r3, [r7, #4]
 800fd78:	601a      	str	r2, [r3, #0]
 800fd7a:	4a06      	ldr	r2, [pc, #24]	; (800fd94 <_ZN20ClockScreenPresenterC1ER15ClockScreenView+0x3c>)
 800fd7c:	687b      	ldr	r3, [r7, #4]
 800fd7e:	605a      	str	r2, [r3, #4]
 800fd80:	687b      	ldr	r3, [r7, #4]
 800fd82:	683a      	ldr	r2, [r7, #0]
 800fd84:	60da      	str	r2, [r3, #12]
{

}
 800fd86:	687b      	ldr	r3, [r7, #4]
 800fd88:	4618      	mov	r0, r3
 800fd8a:	3708      	adds	r7, #8
 800fd8c:	46bd      	mov	sp, r7
 800fd8e:	bd80      	pop	{r7, pc}
 800fd90:	0802e4e8 	.word	0x0802e4e8
 800fd94:	0802e504 	.word	0x0802e504

0800fd98 <_ZN20ClockScreenPresenter8activateEv>:

void ClockScreenPresenter::activate()
{
 800fd98:	b480      	push	{r7}
 800fd9a:	b083      	sub	sp, #12
 800fd9c:	af00      	add	r7, sp, #0
 800fd9e:	6078      	str	r0, [r7, #4]

}
 800fda0:	bf00      	nop
 800fda2:	370c      	adds	r7, #12
 800fda4:	46bd      	mov	sp, r7
 800fda6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fdaa:	4770      	bx	lr

0800fdac <_ZN20ClockScreenPresenter10deactivateEv>:

void ClockScreenPresenter::deactivate()
{
 800fdac:	b480      	push	{r7}
 800fdae:	b083      	sub	sp, #12
 800fdb0:	af00      	add	r7, sp, #0
 800fdb2:	6078      	str	r0, [r7, #4]

}
 800fdb4:	bf00      	nop
 800fdb6:	370c      	adds	r7, #12
 800fdb8:	46bd      	mov	sp, r7
 800fdba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fdbe:	4770      	bx	lr

0800fdc0 <_ZN20ClockScreenPresenter10updateTimeEccc>:
void ClockScreenPresenter::updateTime(char Hour,char Minute,char Second)
{
 800fdc0:	b590      	push	{r4, r7, lr}
 800fdc2:	b083      	sub	sp, #12
 800fdc4:	af00      	add	r7, sp, #0
 800fdc6:	6078      	str	r0, [r7, #4]
 800fdc8:	4608      	mov	r0, r1
 800fdca:	4611      	mov	r1, r2
 800fdcc:	461a      	mov	r2, r3
 800fdce:	4603      	mov	r3, r0
 800fdd0:	70fb      	strb	r3, [r7, #3]
 800fdd2:	460b      	mov	r3, r1
 800fdd4:	70bb      	strb	r3, [r7, #2]
 800fdd6:	4613      	mov	r3, r2
 800fdd8:	707b      	strb	r3, [r7, #1]
	view.updateTime(Hour,Minute,Second);
 800fdda:	687b      	ldr	r3, [r7, #4]
 800fddc:	68d8      	ldr	r0, [r3, #12]
 800fdde:	687b      	ldr	r3, [r7, #4]
 800fde0:	68db      	ldr	r3, [r3, #12]
 800fde2:	681b      	ldr	r3, [r3, #0]
 800fde4:	332c      	adds	r3, #44	; 0x2c
 800fde6:	681c      	ldr	r4, [r3, #0]
 800fde8:	787b      	ldrb	r3, [r7, #1]
 800fdea:	78ba      	ldrb	r2, [r7, #2]
 800fdec:	78f9      	ldrb	r1, [r7, #3]
 800fdee:	47a0      	blx	r4
}
 800fdf0:	bf00      	nop
 800fdf2:	370c      	adds	r7, #12
 800fdf4:	46bd      	mov	sp, r7
 800fdf6:	bd90      	pop	{r4, r7, pc}

0800fdf8 <_ZThn4_N20ClockScreenPresenter10updateTimeEccc>:
    virtual void updateTime(char Hour,char Minute,char Second);
 800fdf8:	f1a0 0004 	sub.w	r0, r0, #4
 800fdfc:	f7ff bfe0 	b.w	800fdc0 <_ZN20ClockScreenPresenter10updateTimeEccc>

0800fe00 <_ZN15ClockScreenViewD1Ev>:

class ClockScreenView : public ClockScreenViewBase
{
public:
    ClockScreenView();
    virtual ~ClockScreenView() {}
 800fe00:	b580      	push	{r7, lr}
 800fe02:	b082      	sub	sp, #8
 800fe04:	af00      	add	r7, sp, #0
 800fe06:	6078      	str	r0, [r7, #4]
 800fe08:	4a05      	ldr	r2, [pc, #20]	; (800fe20 <_ZN15ClockScreenViewD1Ev+0x20>)
 800fe0a:	687b      	ldr	r3, [r7, #4]
 800fe0c:	601a      	str	r2, [r3, #0]
 800fe0e:	687b      	ldr	r3, [r7, #4]
 800fe10:	4618      	mov	r0, r3
 800fe12:	f7fa faf1 	bl	800a3f8 <_ZN19ClockScreenViewBaseD1Ev>
 800fe16:	687b      	ldr	r3, [r7, #4]
 800fe18:	4618      	mov	r0, r3
 800fe1a:	3708      	adds	r7, #8
 800fe1c:	46bd      	mov	sp, r7
 800fe1e:	bd80      	pop	{r7, pc}
 800fe20:	0802e55c 	.word	0x0802e55c

0800fe24 <_ZN15ClockScreenViewD0Ev>:
 800fe24:	b580      	push	{r7, lr}
 800fe26:	b082      	sub	sp, #8
 800fe28:	af00      	add	r7, sp, #0
 800fe2a:	6078      	str	r0, [r7, #4]
 800fe2c:	6878      	ldr	r0, [r7, #4]
 800fe2e:	f7ff ffe7 	bl	800fe00 <_ZN15ClockScreenViewD1Ev>
 800fe32:	f44f 71cc 	mov.w	r1, #408	; 0x198
 800fe36:	6878      	ldr	r0, [r7, #4]
 800fe38:	f01a f9e9 	bl	802a20e <_ZdlPvj>
 800fe3c:	687b      	ldr	r3, [r7, #4]
 800fe3e:	4618      	mov	r0, r3
 800fe40:	3708      	adds	r7, #8
 800fe42:	46bd      	mov	sp, r7
 800fe44:	bd80      	pop	{r7, pc}
	...

0800fe48 <_ZN15ClockScreenViewC1Ev>:
#include <gui/clockscreen_screen/ClockScreenView.hpp>

ClockScreenView::ClockScreenView()
 800fe48:	b580      	push	{r7, lr}
 800fe4a:	b082      	sub	sp, #8
 800fe4c:	af00      	add	r7, sp, #0
 800fe4e:	6078      	str	r0, [r7, #4]
 800fe50:	687b      	ldr	r3, [r7, #4]
 800fe52:	4618      	mov	r0, r3
 800fe54:	f7fa f95a 	bl	800a10c <_ZN19ClockScreenViewBaseC1Ev>
 800fe58:	4a03      	ldr	r2, [pc, #12]	; (800fe68 <_ZN15ClockScreenViewC1Ev+0x20>)
 800fe5a:	687b      	ldr	r3, [r7, #4]
 800fe5c:	601a      	str	r2, [r3, #0]
{

}
 800fe5e:	687b      	ldr	r3, [r7, #4]
 800fe60:	4618      	mov	r0, r3
 800fe62:	3708      	adds	r7, #8
 800fe64:	46bd      	mov	sp, r7
 800fe66:	bd80      	pop	{r7, pc}
 800fe68:	0802e55c 	.word	0x0802e55c

0800fe6c <_ZN15ClockScreenView11setupScreenEv>:

void ClockScreenView::setupScreen()
{
 800fe6c:	b580      	push	{r7, lr}
 800fe6e:	b082      	sub	sp, #8
 800fe70:	af00      	add	r7, sp, #0
 800fe72:	6078      	str	r0, [r7, #4]
    ClockScreenViewBase::setupScreen();
 800fe74:	687b      	ldr	r3, [r7, #4]
 800fe76:	4618      	mov	r0, r3
 800fe78:	f7fa fafd 	bl	800a476 <_ZN19ClockScreenViewBase11setupScreenEv>
}
 800fe7c:	bf00      	nop
 800fe7e:	3708      	adds	r7, #8
 800fe80:	46bd      	mov	sp, r7
 800fe82:	bd80      	pop	{r7, pc}

0800fe84 <_ZN15ClockScreenView14tearDownScreenEv>:

void ClockScreenView::tearDownScreen()
{
 800fe84:	b580      	push	{r7, lr}
 800fe86:	b082      	sub	sp, #8
 800fe88:	af00      	add	r7, sp, #0
 800fe8a:	6078      	str	r0, [r7, #4]
    ClockScreenViewBase::tearDownScreen();
 800fe8c:	687b      	ldr	r3, [r7, #4]
 800fe8e:	4618      	mov	r0, r3
 800fe90:	f7f9 fe1e 	bl	8009ad0 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800fe94:	bf00      	nop
 800fe96:	3708      	adds	r7, #8
 800fe98:	46bd      	mov	sp, r7
 800fe9a:	bd80      	pop	{r7, pc}

0800fe9c <_ZN15ClockScreenView10updateTimeEccc>:

void ClockScreenView::updateTime(char Hour, char Minute, char Second)
{
 800fe9c:	b580      	push	{r7, lr}
 800fe9e:	b082      	sub	sp, #8
 800fea0:	af00      	add	r7, sp, #0
 800fea2:	6078      	str	r0, [r7, #4]
 800fea4:	4608      	mov	r0, r1
 800fea6:	4611      	mov	r1, r2
 800fea8:	461a      	mov	r2, r3
 800feaa:	4603      	mov	r3, r0
 800feac:	70fb      	strb	r3, [r7, #3]
 800feae:	460b      	mov	r3, r1
 800feb0:	70bb      	strb	r3, [r7, #2]
 800feb2:	4613      	mov	r3, r2
 800feb4:	707b      	strb	r3, [r7, #1]
	Clock.setTime24Hour(Hour, Minute, Second);
 800feb6:	687b      	ldr	r3, [r7, #4]
 800feb8:	f103 00b4 	add.w	r0, r3, #180	; 0xb4
 800febc:	787b      	ldrb	r3, [r7, #1]
 800febe:	78ba      	ldrb	r2, [r7, #2]
 800fec0:	78f9      	ldrb	r1, [r7, #3]
 800fec2:	f002 fd5e 	bl	8012982 <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>
}
 800fec6:	bf00      	nop
 800fec8:	3708      	adds	r7, #8
 800feca:	46bd      	mov	sp, r7
 800fecc:	bd80      	pop	{r7, pc}
	...

0800fed0 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800fed0:	b580      	push	{r7, lr}
 800fed2:	b082      	sub	sp, #8
 800fed4:	af00      	add	r7, sp, #0
 800fed6:	6078      	str	r0, [r7, #4]
 800fed8:	4a05      	ldr	r2, [pc, #20]	; (800fef0 <_ZN19FrontendApplicationD1Ev+0x20>)
 800feda:	687b      	ldr	r3, [r7, #4]
 800fedc:	601a      	str	r2, [r3, #0]
 800fede:	687b      	ldr	r3, [r7, #4]
 800fee0:	4618      	mov	r0, r3
 800fee2:	f7fa fed1 	bl	800ac88 <_ZN23FrontendApplicationBaseD1Ev>
 800fee6:	687b      	ldr	r3, [r7, #4]
 800fee8:	4618      	mov	r0, r3
 800feea:	3708      	adds	r7, #8
 800feec:	46bd      	mov	sp, r7
 800feee:	bd80      	pop	{r7, pc}
 800fef0:	0802e594 	.word	0x0802e594

0800fef4 <_ZN19FrontendApplicationD0Ev>:
 800fef4:	b580      	push	{r7, lr}
 800fef6:	b082      	sub	sp, #8
 800fef8:	af00      	add	r7, sp, #0
 800fefa:	6078      	str	r0, [r7, #4]
 800fefc:	6878      	ldr	r0, [r7, #4]
 800fefe:	f7ff ffe7 	bl	800fed0 <_ZN19FrontendApplicationD1Ev>
 800ff02:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800ff06:	6878      	ldr	r0, [r7, #4]
 800ff08:	f01a f981 	bl	802a20e <_ZdlPvj>
 800ff0c:	687b      	ldr	r3, [r7, #4]
 800ff0e:	4618      	mov	r0, r3
 800ff10:	3708      	adds	r7, #8
 800ff12:	46bd      	mov	sp, r7
 800ff14:	bd80      	pop	{r7, pc}

0800ff16 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800ff16:	b580      	push	{r7, lr}
 800ff18:	b082      	sub	sp, #8
 800ff1a:	af00      	add	r7, sp, #0
 800ff1c:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800ff1e:	687b      	ldr	r3, [r7, #4]
 800ff20:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800ff24:	4618      	mov	r0, r3
 800ff26:	f000 f9e9 	bl	80102fc <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800ff2a:	687b      	ldr	r3, [r7, #4]
 800ff2c:	4618      	mov	r0, r3
 800ff2e:	f008 ffad 	bl	8018e8c <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800ff32:	bf00      	nop
 800ff34:	3708      	adds	r7, #8
 800ff36:	46bd      	mov	sp, r7
 800ff38:	bd80      	pop	{r7, pc}
	...

0800ff3c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800ff3c:	b580      	push	{r7, lr}
 800ff3e:	b084      	sub	sp, #16
 800ff40:	af00      	add	r7, sp, #0
 800ff42:	60f8      	str	r0, [r7, #12]
 800ff44:	60b9      	str	r1, [r7, #8]
 800ff46:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800ff48:	68fb      	ldr	r3, [r7, #12]
 800ff4a:	687a      	ldr	r2, [r7, #4]
 800ff4c:	68b9      	ldr	r1, [r7, #8]
 800ff4e:	4618      	mov	r0, r3
 800ff50:	f7fa feea 	bl	800ad28 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800ff54:	4a03      	ldr	r2, [pc, #12]	; (800ff64 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800ff56:	68fb      	ldr	r3, [r7, #12]
 800ff58:	601a      	str	r2, [r3, #0]
{

}
 800ff5a:	68fb      	ldr	r3, [r7, #12]
 800ff5c:	4618      	mov	r0, r3
 800ff5e:	3710      	adds	r7, #16
 800ff60:	46bd      	mov	sp, r7
 800ff62:	bd80      	pop	{r7, pc}
 800ff64:	0802e594 	.word	0x0802e594

0800ff68 <_ZN17COScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~COScreenPresenter() {}
 800ff68:	b580      	push	{r7, lr}
 800ff6a:	b082      	sub	sp, #8
 800ff6c:	af00      	add	r7, sp, #0
 800ff6e:	6078      	str	r0, [r7, #4]
 800ff70:	4a09      	ldr	r2, [pc, #36]	; (800ff98 <_ZN17COScreenPresenterD1Ev+0x30>)
 800ff72:	687b      	ldr	r3, [r7, #4]
 800ff74:	601a      	str	r2, [r3, #0]
 800ff76:	4a09      	ldr	r2, [pc, #36]	; (800ff9c <_ZN17COScreenPresenterD1Ev+0x34>)
 800ff78:	687b      	ldr	r3, [r7, #4]
 800ff7a:	605a      	str	r2, [r3, #4]
 800ff7c:	687b      	ldr	r3, [r7, #4]
 800ff7e:	3304      	adds	r3, #4
 800ff80:	4618      	mov	r0, r3
 800ff82:	f7ff fe61 	bl	800fc48 <_ZN13ModelListenerD1Ev>
 800ff86:	687b      	ldr	r3, [r7, #4]
 800ff88:	4618      	mov	r0, r3
 800ff8a:	f7ff fe19 	bl	800fbc0 <_ZN8touchgfx9PresenterD1Ev>
 800ff8e:	687b      	ldr	r3, [r7, #4]
 800ff90:	4618      	mov	r0, r3
 800ff92:	3708      	adds	r7, #8
 800ff94:	46bd      	mov	sp, r7
 800ff96:	bd80      	pop	{r7, pc}
 800ff98:	0802e5e8 	.word	0x0802e5e8
 800ff9c:	0802e604 	.word	0x0802e604

0800ffa0 <_ZThn4_N17COScreenPresenterD1Ev>:
 800ffa0:	f1a0 0004 	sub.w	r0, r0, #4
 800ffa4:	e7e0      	b.n	800ff68 <_ZN17COScreenPresenterD1Ev>
 800ffa6:	bf00      	nop

0800ffa8 <_ZN17COScreenPresenterD0Ev>:
 800ffa8:	b580      	push	{r7, lr}
 800ffaa:	b082      	sub	sp, #8
 800ffac:	af00      	add	r7, sp, #0
 800ffae:	6078      	str	r0, [r7, #4]
 800ffb0:	6878      	ldr	r0, [r7, #4]
 800ffb2:	f7ff ffd9 	bl	800ff68 <_ZN17COScreenPresenterD1Ev>
 800ffb6:	2110      	movs	r1, #16
 800ffb8:	6878      	ldr	r0, [r7, #4]
 800ffba:	f01a f928 	bl	802a20e <_ZdlPvj>
 800ffbe:	687b      	ldr	r3, [r7, #4]
 800ffc0:	4618      	mov	r0, r3
 800ffc2:	3708      	adds	r7, #8
 800ffc4:	46bd      	mov	sp, r7
 800ffc6:	bd80      	pop	{r7, pc}

0800ffc8 <_ZThn4_N17COScreenPresenterD0Ev>:
 800ffc8:	f1a0 0004 	sub.w	r0, r0, #4
 800ffcc:	e7ec      	b.n	800ffa8 <_ZN17COScreenPresenterD0Ev>
	...

0800ffd0 <_ZN17COScreenPresenterC1ER12COScreenView>:
#include <gui/coscreen_screen/COScreenView.hpp>
#include <gui/coscreen_screen/COScreenPresenter.hpp>

COScreenPresenter::COScreenPresenter(COScreenView& v)
 800ffd0:	b580      	push	{r7, lr}
 800ffd2:	b082      	sub	sp, #8
 800ffd4:	af00      	add	r7, sp, #0
 800ffd6:	6078      	str	r0, [r7, #4]
 800ffd8:	6039      	str	r1, [r7, #0]
    : view(v)
 800ffda:	687b      	ldr	r3, [r7, #4]
 800ffdc:	4618      	mov	r0, r3
 800ffde:	f7ff fe0f 	bl	800fc00 <_ZN8touchgfx9PresenterC1Ev>
 800ffe2:	687b      	ldr	r3, [r7, #4]
 800ffe4:	3304      	adds	r3, #4
 800ffe6:	4618      	mov	r0, r3
 800ffe8:	f7ff fe1a 	bl	800fc20 <_ZN13ModelListenerC1Ev>
 800ffec:	4a06      	ldr	r2, [pc, #24]	; (8010008 <_ZN17COScreenPresenterC1ER12COScreenView+0x38>)
 800ffee:	687b      	ldr	r3, [r7, #4]
 800fff0:	601a      	str	r2, [r3, #0]
 800fff2:	4a06      	ldr	r2, [pc, #24]	; (801000c <_ZN17COScreenPresenterC1ER12COScreenView+0x3c>)
 800fff4:	687b      	ldr	r3, [r7, #4]
 800fff6:	605a      	str	r2, [r3, #4]
 800fff8:	687b      	ldr	r3, [r7, #4]
 800fffa:	683a      	ldr	r2, [r7, #0]
 800fffc:	60da      	str	r2, [r3, #12]
{

}
 800fffe:	687b      	ldr	r3, [r7, #4]
 8010000:	4618      	mov	r0, r3
 8010002:	3708      	adds	r7, #8
 8010004:	46bd      	mov	sp, r7
 8010006:	bd80      	pop	{r7, pc}
 8010008:	0802e5e8 	.word	0x0802e5e8
 801000c:	0802e604 	.word	0x0802e604

08010010 <_ZN17COScreenPresenter8activateEv>:

void COScreenPresenter::activate()
{
 8010010:	b480      	push	{r7}
 8010012:	b083      	sub	sp, #12
 8010014:	af00      	add	r7, sp, #0
 8010016:	6078      	str	r0, [r7, #4]

}
 8010018:	bf00      	nop
 801001a:	370c      	adds	r7, #12
 801001c:	46bd      	mov	sp, r7
 801001e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010022:	4770      	bx	lr

08010024 <_ZN17COScreenPresenter10deactivateEv>:

void COScreenPresenter::deactivate()
{
 8010024:	b480      	push	{r7}
 8010026:	b083      	sub	sp, #12
 8010028:	af00      	add	r7, sp, #0
 801002a:	6078      	str	r0, [r7, #4]

}
 801002c:	bf00      	nop
 801002e:	370c      	adds	r7, #12
 8010030:	46bd      	mov	sp, r7
 8010032:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010036:	4770      	bx	lr

08010038 <_ZN17COScreenPresenter5setCOEi>:

void COScreenPresenter::setCO(int Val)
{
 8010038:	b580      	push	{r7, lr}
 801003a:	b082      	sub	sp, #8
 801003c:	af00      	add	r7, sp, #0
 801003e:	6078      	str	r0, [r7, #4]
 8010040:	6039      	str	r1, [r7, #0]
	view.setCO(Val);
 8010042:	687b      	ldr	r3, [r7, #4]
 8010044:	68da      	ldr	r2, [r3, #12]
 8010046:	687b      	ldr	r3, [r7, #4]
 8010048:	68db      	ldr	r3, [r3, #12]
 801004a:	681b      	ldr	r3, [r3, #0]
 801004c:	332c      	adds	r3, #44	; 0x2c
 801004e:	681b      	ldr	r3, [r3, #0]
 8010050:	6839      	ldr	r1, [r7, #0]
 8010052:	4610      	mov	r0, r2
 8010054:	4798      	blx	r3
}
 8010056:	bf00      	nop
 8010058:	3708      	adds	r7, #8
 801005a:	46bd      	mov	sp, r7
 801005c:	bd80      	pop	{r7, pc}

0801005e <_ZThn4_N17COScreenPresenter5setCOEi>:
    virtual void setCO(int Val);
 801005e:	f1a0 0004 	sub.w	r0, r0, #4
 8010062:	f7ff bfe9 	b.w	8010038 <_ZN17COScreenPresenter5setCOEi>
	...

08010068 <_ZN12COScreenViewD1Ev>:

class COScreenView : public COScreenViewBase
{
public:
    COScreenView();
    virtual ~COScreenView() {}
 8010068:	b580      	push	{r7, lr}
 801006a:	b082      	sub	sp, #8
 801006c:	af00      	add	r7, sp, #0
 801006e:	6078      	str	r0, [r7, #4]
 8010070:	4a05      	ldr	r2, [pc, #20]	; (8010088 <_ZN12COScreenViewD1Ev+0x20>)
 8010072:	687b      	ldr	r3, [r7, #4]
 8010074:	601a      	str	r2, [r3, #0]
 8010076:	687b      	ldr	r3, [r7, #4]
 8010078:	4618      	mov	r0, r3
 801007a:	f7fc fe9f 	bl	800cdbc <_ZN16COScreenViewBaseD1Ev>
 801007e:	687b      	ldr	r3, [r7, #4]
 8010080:	4618      	mov	r0, r3
 8010082:	3708      	adds	r7, #8
 8010084:	46bd      	mov	sp, r7
 8010086:	bd80      	pop	{r7, pc}
 8010088:	0802e624 	.word	0x0802e624

0801008c <_ZN12COScreenViewD0Ev>:
 801008c:	b580      	push	{r7, lr}
 801008e:	b082      	sub	sp, #8
 8010090:	af00      	add	r7, sp, #0
 8010092:	6078      	str	r0, [r7, #4]
 8010094:	6878      	ldr	r0, [r7, #4]
 8010096:	f7ff ffe7 	bl	8010068 <_ZN12COScreenViewD1Ev>
 801009a:	f44f 713d 	mov.w	r1, #756	; 0x2f4
 801009e:	6878      	ldr	r0, [r7, #4]
 80100a0:	f01a f8b5 	bl	802a20e <_ZdlPvj>
 80100a4:	687b      	ldr	r3, [r7, #4]
 80100a6:	4618      	mov	r0, r3
 80100a8:	3708      	adds	r7, #8
 80100aa:	46bd      	mov	sp, r7
 80100ac:	bd80      	pop	{r7, pc}
	...

080100b0 <_ZN12COScreenViewC1Ev>:
#include <gui/coscreen_screen/COScreenView.hpp>

COScreenView::COScreenView()
 80100b0:	b580      	push	{r7, lr}
 80100b2:	b082      	sub	sp, #8
 80100b4:	af00      	add	r7, sp, #0
 80100b6:	6078      	str	r0, [r7, #4]
 80100b8:	687b      	ldr	r3, [r7, #4]
 80100ba:	4618      	mov	r0, r3
 80100bc:	f7fc fc4c 	bl	800c958 <_ZN16COScreenViewBaseC1Ev>
 80100c0:	4a03      	ldr	r2, [pc, #12]	; (80100d0 <_ZN12COScreenViewC1Ev+0x20>)
 80100c2:	687b      	ldr	r3, [r7, #4]
 80100c4:	601a      	str	r2, [r3, #0]
{

}
 80100c6:	687b      	ldr	r3, [r7, #4]
 80100c8:	4618      	mov	r0, r3
 80100ca:	3708      	adds	r7, #8
 80100cc:	46bd      	mov	sp, r7
 80100ce:	bd80      	pop	{r7, pc}
 80100d0:	0802e624 	.word	0x0802e624

080100d4 <_ZN12COScreenView11setupScreenEv>:

void COScreenView::setupScreen()
{
 80100d4:	b580      	push	{r7, lr}
 80100d6:	b082      	sub	sp, #8
 80100d8:	af00      	add	r7, sp, #0
 80100da:	6078      	str	r0, [r7, #4]
    COScreenViewBase::setupScreen();
 80100dc:	687b      	ldr	r3, [r7, #4]
 80100de:	4618      	mov	r0, r3
 80100e0:	f7fc feaf 	bl	800ce42 <_ZN16COScreenViewBase11setupScreenEv>
}
 80100e4:	bf00      	nop
 80100e6:	3708      	adds	r7, #8
 80100e8:	46bd      	mov	sp, r7
 80100ea:	bd80      	pop	{r7, pc}

080100ec <_ZN12COScreenView14tearDownScreenEv>:

void COScreenView::tearDownScreen()
{
 80100ec:	b580      	push	{r7, lr}
 80100ee:	b082      	sub	sp, #8
 80100f0:	af00      	add	r7, sp, #0
 80100f2:	6078      	str	r0, [r7, #4]
    COScreenViewBase::tearDownScreen();
 80100f4:	687b      	ldr	r3, [r7, #4]
 80100f6:	4618      	mov	r0, r3
 80100f8:	f7f9 fcea 	bl	8009ad0 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 80100fc:	bf00      	nop
 80100fe:	3708      	adds	r7, #8
 8010100:	46bd      	mov	sp, r7
 8010102:	bd80      	pop	{r7, pc}

08010104 <_ZN12COScreenView5setCOEi>:

void COScreenView::setCO(int Val)
{
 8010104:	b580      	push	{r7, lr}
 8010106:	b082      	sub	sp, #8
 8010108:	af00      	add	r7, sp, #0
 801010a:	6078      	str	r0, [r7, #4]
 801010c:	6039      	str	r1, [r7, #0]
	Unicode::snprintf(CODataBuffer, CODATA_SIZE, "%d",Val);
 801010e:	687b      	ldr	r3, [r7, #4]
 8010110:	f503 7037 	add.w	r0, r3, #732	; 0x2dc
 8010114:	683b      	ldr	r3, [r7, #0]
 8010116:	4a0a      	ldr	r2, [pc, #40]	; (8010140 <_ZN12COScreenView5setCOEi+0x3c>)
 8010118:	2104      	movs	r1, #4
 801011a:	f00c f863 	bl	801c1e4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	COGauge.updateValue(Val, 30); // animates needle and arc to new value with a duration of 30 ticks
 801011e:	687b      	ldr	r3, [r7, #4]
 8010120:	33f4      	adds	r3, #244	; 0xf4
 8010122:	221e      	movs	r2, #30
 8010124:	6839      	ldr	r1, [r7, #0]
 8010126:	4618      	mov	r0, r3
 8010128:	f002 f991 	bl	801244e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>
	COGauge.invalidate();
 801012c:	687b      	ldr	r3, [r7, #4]
 801012e:	33f4      	adds	r3, #244	; 0xf4
 8010130:	4618      	mov	r0, r3
 8010132:	f009 fecf 	bl	8019ed4 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8010136:	bf00      	nop
 8010138:	3708      	adds	r7, #8
 801013a:	46bd      	mov	sp, r7
 801013c:	bd80      	pop	{r7, pc}
 801013e:	bf00      	nop
 8010140:	0802d2a4 	.word	0x0802d2a4

08010144 <_ZN19MainScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainScreenPresenter() {}
 8010144:	b580      	push	{r7, lr}
 8010146:	b082      	sub	sp, #8
 8010148:	af00      	add	r7, sp, #0
 801014a:	6078      	str	r0, [r7, #4]
 801014c:	4a09      	ldr	r2, [pc, #36]	; (8010174 <_ZN19MainScreenPresenterD1Ev+0x30>)
 801014e:	687b      	ldr	r3, [r7, #4]
 8010150:	601a      	str	r2, [r3, #0]
 8010152:	4a09      	ldr	r2, [pc, #36]	; (8010178 <_ZN19MainScreenPresenterD1Ev+0x34>)
 8010154:	687b      	ldr	r3, [r7, #4]
 8010156:	605a      	str	r2, [r3, #4]
 8010158:	687b      	ldr	r3, [r7, #4]
 801015a:	3304      	adds	r3, #4
 801015c:	4618      	mov	r0, r3
 801015e:	f7ff fd73 	bl	800fc48 <_ZN13ModelListenerD1Ev>
 8010162:	687b      	ldr	r3, [r7, #4]
 8010164:	4618      	mov	r0, r3
 8010166:	f7ff fd2b 	bl	800fbc0 <_ZN8touchgfx9PresenterD1Ev>
 801016a:	687b      	ldr	r3, [r7, #4]
 801016c:	4618      	mov	r0, r3
 801016e:	3708      	adds	r7, #8
 8010170:	46bd      	mov	sp, r7
 8010172:	bd80      	pop	{r7, pc}
 8010174:	0802e65c 	.word	0x0802e65c
 8010178:	0802e674 	.word	0x0802e674

0801017c <_ZThn4_N19MainScreenPresenterD1Ev>:
 801017c:	f1a0 0004 	sub.w	r0, r0, #4
 8010180:	e7e0      	b.n	8010144 <_ZN19MainScreenPresenterD1Ev>
 8010182:	bf00      	nop

08010184 <_ZN19MainScreenPresenterD0Ev>:
 8010184:	b580      	push	{r7, lr}
 8010186:	b082      	sub	sp, #8
 8010188:	af00      	add	r7, sp, #0
 801018a:	6078      	str	r0, [r7, #4]
 801018c:	6878      	ldr	r0, [r7, #4]
 801018e:	f7ff ffd9 	bl	8010144 <_ZN19MainScreenPresenterD1Ev>
 8010192:	2110      	movs	r1, #16
 8010194:	6878      	ldr	r0, [r7, #4]
 8010196:	f01a f83a 	bl	802a20e <_ZdlPvj>
 801019a:	687b      	ldr	r3, [r7, #4]
 801019c:	4618      	mov	r0, r3
 801019e:	3708      	adds	r7, #8
 80101a0:	46bd      	mov	sp, r7
 80101a2:	bd80      	pop	{r7, pc}

080101a4 <_ZThn4_N19MainScreenPresenterD0Ev>:
 80101a4:	f1a0 0004 	sub.w	r0, r0, #4
 80101a8:	e7ec      	b.n	8010184 <_ZN19MainScreenPresenterD0Ev>
	...

080101ac <_ZN19MainScreenPresenterC1ER14MainScreenView>:
#include <gui/mainscreen_screen/MainScreenView.hpp>
#include <gui/mainscreen_screen/MainScreenPresenter.hpp>

MainScreenPresenter::MainScreenPresenter(MainScreenView& v)
 80101ac:	b580      	push	{r7, lr}
 80101ae:	b082      	sub	sp, #8
 80101b0:	af00      	add	r7, sp, #0
 80101b2:	6078      	str	r0, [r7, #4]
 80101b4:	6039      	str	r1, [r7, #0]
    : view(v)
 80101b6:	687b      	ldr	r3, [r7, #4]
 80101b8:	4618      	mov	r0, r3
 80101ba:	f7ff fd21 	bl	800fc00 <_ZN8touchgfx9PresenterC1Ev>
 80101be:	687b      	ldr	r3, [r7, #4]
 80101c0:	3304      	adds	r3, #4
 80101c2:	4618      	mov	r0, r3
 80101c4:	f7ff fd2c 	bl	800fc20 <_ZN13ModelListenerC1Ev>
 80101c8:	4a06      	ldr	r2, [pc, #24]	; (80101e4 <_ZN19MainScreenPresenterC1ER14MainScreenView+0x38>)
 80101ca:	687b      	ldr	r3, [r7, #4]
 80101cc:	601a      	str	r2, [r3, #0]
 80101ce:	4a06      	ldr	r2, [pc, #24]	; (80101e8 <_ZN19MainScreenPresenterC1ER14MainScreenView+0x3c>)
 80101d0:	687b      	ldr	r3, [r7, #4]
 80101d2:	605a      	str	r2, [r3, #4]
 80101d4:	687b      	ldr	r3, [r7, #4]
 80101d6:	683a      	ldr	r2, [r7, #0]
 80101d8:	60da      	str	r2, [r3, #12]
{

}
 80101da:	687b      	ldr	r3, [r7, #4]
 80101dc:	4618      	mov	r0, r3
 80101de:	3708      	adds	r7, #8
 80101e0:	46bd      	mov	sp, r7
 80101e2:	bd80      	pop	{r7, pc}
 80101e4:	0802e65c 	.word	0x0802e65c
 80101e8:	0802e674 	.word	0x0802e674

080101ec <_ZN19MainScreenPresenter8activateEv>:

void MainScreenPresenter::activate()
{
 80101ec:	b480      	push	{r7}
 80101ee:	b083      	sub	sp, #12
 80101f0:	af00      	add	r7, sp, #0
 80101f2:	6078      	str	r0, [r7, #4]

}
 80101f4:	bf00      	nop
 80101f6:	370c      	adds	r7, #12
 80101f8:	46bd      	mov	sp, r7
 80101fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101fe:	4770      	bx	lr

08010200 <_ZN19MainScreenPresenter10deactivateEv>:

void MainScreenPresenter::deactivate()
{
 8010200:	b480      	push	{r7}
 8010202:	b083      	sub	sp, #12
 8010204:	af00      	add	r7, sp, #0
 8010206:	6078      	str	r0, [r7, #4]

}
 8010208:	bf00      	nop
 801020a:	370c      	adds	r7, #12
 801020c:	46bd      	mov	sp, r7
 801020e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010212:	4770      	bx	lr

08010214 <_ZN14MainScreenViewD1Ev>:

class MainScreenView : public MainScreenViewBase
{
public:
    MainScreenView();
    virtual ~MainScreenView() {}
 8010214:	b580      	push	{r7, lr}
 8010216:	b082      	sub	sp, #8
 8010218:	af00      	add	r7, sp, #0
 801021a:	6078      	str	r0, [r7, #4]
 801021c:	4a05      	ldr	r2, [pc, #20]	; (8010234 <_ZN14MainScreenViewD1Ev+0x20>)
 801021e:	687b      	ldr	r3, [r7, #4]
 8010220:	601a      	str	r2, [r3, #0]
 8010222:	687b      	ldr	r3, [r7, #4]
 8010224:	4618      	mov	r0, r3
 8010226:	f7fe f913 	bl	800e450 <_ZN18MainScreenViewBaseD1Ev>
 801022a:	687b      	ldr	r3, [r7, #4]
 801022c:	4618      	mov	r0, r3
 801022e:	3708      	adds	r7, #8
 8010230:	46bd      	mov	sp, r7
 8010232:	bd80      	pop	{r7, pc}
 8010234:	0802e694 	.word	0x0802e694

08010238 <_ZN14MainScreenViewD0Ev>:
 8010238:	b580      	push	{r7, lr}
 801023a:	b082      	sub	sp, #8
 801023c:	af00      	add	r7, sp, #0
 801023e:	6078      	str	r0, [r7, #4]
 8010240:	6878      	ldr	r0, [r7, #4]
 8010242:	f7ff ffe7 	bl	8010214 <_ZN14MainScreenViewD1Ev>
 8010246:	f240 410c 	movw	r1, #1036	; 0x40c
 801024a:	6878      	ldr	r0, [r7, #4]
 801024c:	f019 ffdf 	bl	802a20e <_ZdlPvj>
 8010250:	687b      	ldr	r3, [r7, #4]
 8010252:	4618      	mov	r0, r3
 8010254:	3708      	adds	r7, #8
 8010256:	46bd      	mov	sp, r7
 8010258:	bd80      	pop	{r7, pc}
	...

0801025c <_ZN14MainScreenViewC1Ev>:
#include <gui/mainscreen_screen/MainScreenView.hpp>

MainScreenView::MainScreenView()
 801025c:	b580      	push	{r7, lr}
 801025e:	b082      	sub	sp, #8
 8010260:	af00      	add	r7, sp, #0
 8010262:	6078      	str	r0, [r7, #4]
 8010264:	687b      	ldr	r3, [r7, #4]
 8010266:	4618      	mov	r0, r3
 8010268:	f7fd f956 	bl	800d518 <_ZN18MainScreenViewBaseC1Ev>
 801026c:	4a03      	ldr	r2, [pc, #12]	; (801027c <_ZN14MainScreenViewC1Ev+0x20>)
 801026e:	687b      	ldr	r3, [r7, #4]
 8010270:	601a      	str	r2, [r3, #0]
{

}
 8010272:	687b      	ldr	r3, [r7, #4]
 8010274:	4618      	mov	r0, r3
 8010276:	3708      	adds	r7, #8
 8010278:	46bd      	mov	sp, r7
 801027a:	bd80      	pop	{r7, pc}
 801027c:	0802e694 	.word	0x0802e694

08010280 <_ZN14MainScreenView11setupScreenEv>:

void MainScreenView::setupScreen()
{
 8010280:	b580      	push	{r7, lr}
 8010282:	b082      	sub	sp, #8
 8010284:	af00      	add	r7, sp, #0
 8010286:	6078      	str	r0, [r7, #4]
    MainScreenViewBase::setupScreen();
 8010288:	687b      	ldr	r3, [r7, #4]
 801028a:	4618      	mov	r0, r3
 801028c:	f7fe f949 	bl	800e522 <_ZN18MainScreenViewBase11setupScreenEv>
}
 8010290:	bf00      	nop
 8010292:	3708      	adds	r7, #8
 8010294:	46bd      	mov	sp, r7
 8010296:	bd80      	pop	{r7, pc}

08010298 <_ZN14MainScreenView14tearDownScreenEv>:

void MainScreenView::tearDownScreen()
{
 8010298:	b580      	push	{r7, lr}
 801029a:	b082      	sub	sp, #8
 801029c:	af00      	add	r7, sp, #0
 801029e:	6078      	str	r0, [r7, #4]
    MainScreenViewBase::tearDownScreen();
 80102a0:	687b      	ldr	r3, [r7, #4]
 80102a2:	4618      	mov	r0, r3
 80102a4:	f7f9 fc14 	bl	8009ad0 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 80102a8:	bf00      	nop
 80102aa:	3708      	adds	r7, #8
 80102ac:	46bd      	mov	sp, r7
 80102ae:	bd80      	pop	{r7, pc}

080102b0 <_ZN5ModelC1Ev>:
float Pa;
float RSdivRL;
uint8_t hour ;
uint8_t minute ;
uint8_t second ;
Model::Model() : modelListener(0),Pressure_Val(),Temperature_Val(),CO_Val(),Hour(),Minute(),Second(),tickCounter(0)
 80102b0:	b480      	push	{r7}
 80102b2:	b083      	sub	sp, #12
 80102b4:	af00      	add	r7, sp, #0
 80102b6:	6078      	str	r0, [r7, #4]
 80102b8:	687b      	ldr	r3, [r7, #4]
 80102ba:	2200      	movs	r2, #0
 80102bc:	601a      	str	r2, [r3, #0]
 80102be:	687b      	ldr	r3, [r7, #4]
 80102c0:	f04f 0200 	mov.w	r2, #0
 80102c4:	605a      	str	r2, [r3, #4]
 80102c6:	687b      	ldr	r3, [r7, #4]
 80102c8:	2200      	movs	r2, #0
 80102ca:	609a      	str	r2, [r3, #8]
 80102cc:	687b      	ldr	r3, [r7, #4]
 80102ce:	f04f 0200 	mov.w	r2, #0
 80102d2:	60da      	str	r2, [r3, #12]
 80102d4:	687b      	ldr	r3, [r7, #4]
 80102d6:	2200      	movs	r2, #0
 80102d8:	741a      	strb	r2, [r3, #16]
 80102da:	687b      	ldr	r3, [r7, #4]
 80102dc:	2200      	movs	r2, #0
 80102de:	745a      	strb	r2, [r3, #17]
 80102e0:	687b      	ldr	r3, [r7, #4]
 80102e2:	2200      	movs	r2, #0
 80102e4:	749a      	strb	r2, [r3, #18]
 80102e6:	687b      	ldr	r3, [r7, #4]
 80102e8:	2200      	movs	r2, #0
 80102ea:	615a      	str	r2, [r3, #20]
{

}
 80102ec:	687b      	ldr	r3, [r7, #4]
 80102ee:	4618      	mov	r0, r3
 80102f0:	370c      	adds	r7, #12
 80102f2:	46bd      	mov	sp, r7
 80102f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80102f8:	4770      	bx	lr
	...

080102fc <_ZN5Model4tickEv>:

void Model::tick()
{
 80102fc:	b590      	push	{r4, r7, lr}
 80102fe:	b083      	sub	sp, #12
 8010300:	af00      	add	r7, sp, #0
 8010302:	6078      	str	r0, [r7, #4]
////			Hour   = DS1307_GetHour();
//////			Pressure_Val = BMP280_Measure();
//
//	    }

	modelListener->setPressure(Pa);
 8010304:	687b      	ldr	r3, [r7, #4]
 8010306:	681a      	ldr	r2, [r3, #0]
 8010308:	687b      	ldr	r3, [r7, #4]
 801030a:	681b      	ldr	r3, [r3, #0]
 801030c:	681b      	ldr	r3, [r3, #0]
 801030e:	3308      	adds	r3, #8
 8010310:	681b      	ldr	r3, [r3, #0]
 8010312:	491d      	ldr	r1, [pc, #116]	; (8010388 <_ZN5Model4tickEv+0x8c>)
 8010314:	edd1 7a00 	vldr	s15, [r1]
 8010318:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801031c:	ee17 1a90 	vmov	r1, s15
 8010320:	4610      	mov	r0, r2
 8010322:	4798      	blx	r3
	modelListener->setTemperature(T);
 8010324:	687b      	ldr	r3, [r7, #4]
 8010326:	681a      	ldr	r2, [r3, #0]
 8010328:	687b      	ldr	r3, [r7, #4]
 801032a:	681b      	ldr	r3, [r3, #0]
 801032c:	681b      	ldr	r3, [r3, #0]
 801032e:	330c      	adds	r3, #12
 8010330:	681b      	ldr	r3, [r3, #0]
 8010332:	4916      	ldr	r1, [pc, #88]	; (801038c <_ZN5Model4tickEv+0x90>)
 8010334:	edd1 7a00 	vldr	s15, [r1]
 8010338:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801033c:	ee17 1a90 	vmov	r1, s15
 8010340:	4610      	mov	r0, r2
 8010342:	4798      	blx	r3
	modelListener->setCO(RSdivRL);
 8010344:	687b      	ldr	r3, [r7, #4]
 8010346:	681a      	ldr	r2, [r3, #0]
 8010348:	687b      	ldr	r3, [r7, #4]
 801034a:	681b      	ldr	r3, [r3, #0]
 801034c:	681b      	ldr	r3, [r3, #0]
 801034e:	3310      	adds	r3, #16
 8010350:	681b      	ldr	r3, [r3, #0]
 8010352:	490f      	ldr	r1, [pc, #60]	; (8010390 <_ZN5Model4tickEv+0x94>)
 8010354:	edd1 7a00 	vldr	s15, [r1]
 8010358:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801035c:	ee17 1a90 	vmov	r1, s15
 8010360:	4610      	mov	r0, r2
 8010362:	4798      	blx	r3
	modelListener->updateTime(hour,minute,second);
 8010364:	687b      	ldr	r3, [r7, #4]
 8010366:	6818      	ldr	r0, [r3, #0]
 8010368:	687b      	ldr	r3, [r7, #4]
 801036a:	681b      	ldr	r3, [r3, #0]
 801036c:	681b      	ldr	r3, [r3, #0]
 801036e:	3314      	adds	r3, #20
 8010370:	681c      	ldr	r4, [r3, #0]
 8010372:	4b08      	ldr	r3, [pc, #32]	; (8010394 <_ZN5Model4tickEv+0x98>)
 8010374:	7819      	ldrb	r1, [r3, #0]
 8010376:	4b08      	ldr	r3, [pc, #32]	; (8010398 <_ZN5Model4tickEv+0x9c>)
 8010378:	781a      	ldrb	r2, [r3, #0]
 801037a:	4b08      	ldr	r3, [pc, #32]	; (801039c <_ZN5Model4tickEv+0xa0>)
 801037c:	781b      	ldrb	r3, [r3, #0]
 801037e:	47a0      	blx	r4
}
 8010380:	bf00      	nop
 8010382:	370c      	adds	r7, #12
 8010384:	46bd      	mov	sp, r7
 8010386:	bd90      	pop	{r4, r7, pc}
 8010388:	20000514 	.word	0x20000514
 801038c:	20000510 	.word	0x20000510
 8010390:	20000518 	.word	0x20000518
 8010394:	2000051c 	.word	0x2000051c
 8010398:	2000051d 	.word	0x2000051d
 801039c:	2000051e 	.word	0x2000051e

080103a0 <_ZN23PressureScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~PressureScreenPresenter() {}
 80103a0:	b580      	push	{r7, lr}
 80103a2:	b082      	sub	sp, #8
 80103a4:	af00      	add	r7, sp, #0
 80103a6:	6078      	str	r0, [r7, #4]
 80103a8:	4a09      	ldr	r2, [pc, #36]	; (80103d0 <_ZN23PressureScreenPresenterD1Ev+0x30>)
 80103aa:	687b      	ldr	r3, [r7, #4]
 80103ac:	601a      	str	r2, [r3, #0]
 80103ae:	4a09      	ldr	r2, [pc, #36]	; (80103d4 <_ZN23PressureScreenPresenterD1Ev+0x34>)
 80103b0:	687b      	ldr	r3, [r7, #4]
 80103b2:	605a      	str	r2, [r3, #4]
 80103b4:	687b      	ldr	r3, [r7, #4]
 80103b6:	3304      	adds	r3, #4
 80103b8:	4618      	mov	r0, r3
 80103ba:	f7ff fc45 	bl	800fc48 <_ZN13ModelListenerD1Ev>
 80103be:	687b      	ldr	r3, [r7, #4]
 80103c0:	4618      	mov	r0, r3
 80103c2:	f7ff fbfd 	bl	800fbc0 <_ZN8touchgfx9PresenterD1Ev>
 80103c6:	687b      	ldr	r3, [r7, #4]
 80103c8:	4618      	mov	r0, r3
 80103ca:	3708      	adds	r7, #8
 80103cc:	46bd      	mov	sp, r7
 80103ce:	bd80      	pop	{r7, pc}
 80103d0:	0802e6c8 	.word	0x0802e6c8
 80103d4:	0802e6e4 	.word	0x0802e6e4

080103d8 <_ZThn4_N23PressureScreenPresenterD1Ev>:
 80103d8:	f1a0 0004 	sub.w	r0, r0, #4
 80103dc:	e7e0      	b.n	80103a0 <_ZN23PressureScreenPresenterD1Ev>
 80103de:	bf00      	nop

080103e0 <_ZN23PressureScreenPresenterD0Ev>:
 80103e0:	b580      	push	{r7, lr}
 80103e2:	b082      	sub	sp, #8
 80103e4:	af00      	add	r7, sp, #0
 80103e6:	6078      	str	r0, [r7, #4]
 80103e8:	6878      	ldr	r0, [r7, #4]
 80103ea:	f7ff ffd9 	bl	80103a0 <_ZN23PressureScreenPresenterD1Ev>
 80103ee:	2110      	movs	r1, #16
 80103f0:	6878      	ldr	r0, [r7, #4]
 80103f2:	f019 ff0c 	bl	802a20e <_ZdlPvj>
 80103f6:	687b      	ldr	r3, [r7, #4]
 80103f8:	4618      	mov	r0, r3
 80103fa:	3708      	adds	r7, #8
 80103fc:	46bd      	mov	sp, r7
 80103fe:	bd80      	pop	{r7, pc}

08010400 <_ZThn4_N23PressureScreenPresenterD0Ev>:
 8010400:	f1a0 0004 	sub.w	r0, r0, #4
 8010404:	e7ec      	b.n	80103e0 <_ZN23PressureScreenPresenterD0Ev>
	...

08010408 <_ZN23PressureScreenPresenterC1ER18PressureScreenView>:
#include <gui/pressurescreen_screen/PressureScreenView.hpp>
#include <gui/pressurescreen_screen/PressureScreenPresenter.hpp>

PressureScreenPresenter::PressureScreenPresenter(PressureScreenView& v)
 8010408:	b580      	push	{r7, lr}
 801040a:	b082      	sub	sp, #8
 801040c:	af00      	add	r7, sp, #0
 801040e:	6078      	str	r0, [r7, #4]
 8010410:	6039      	str	r1, [r7, #0]
    : view(v)
 8010412:	687b      	ldr	r3, [r7, #4]
 8010414:	4618      	mov	r0, r3
 8010416:	f7ff fbf3 	bl	800fc00 <_ZN8touchgfx9PresenterC1Ev>
 801041a:	687b      	ldr	r3, [r7, #4]
 801041c:	3304      	adds	r3, #4
 801041e:	4618      	mov	r0, r3
 8010420:	f7ff fbfe 	bl	800fc20 <_ZN13ModelListenerC1Ev>
 8010424:	4a06      	ldr	r2, [pc, #24]	; (8010440 <_ZN23PressureScreenPresenterC1ER18PressureScreenView+0x38>)
 8010426:	687b      	ldr	r3, [r7, #4]
 8010428:	601a      	str	r2, [r3, #0]
 801042a:	4a06      	ldr	r2, [pc, #24]	; (8010444 <_ZN23PressureScreenPresenterC1ER18PressureScreenView+0x3c>)
 801042c:	687b      	ldr	r3, [r7, #4]
 801042e:	605a      	str	r2, [r3, #4]
 8010430:	687b      	ldr	r3, [r7, #4]
 8010432:	683a      	ldr	r2, [r7, #0]
 8010434:	60da      	str	r2, [r3, #12]
{

}
 8010436:	687b      	ldr	r3, [r7, #4]
 8010438:	4618      	mov	r0, r3
 801043a:	3708      	adds	r7, #8
 801043c:	46bd      	mov	sp, r7
 801043e:	bd80      	pop	{r7, pc}
 8010440:	0802e6c8 	.word	0x0802e6c8
 8010444:	0802e6e4 	.word	0x0802e6e4

08010448 <_ZN23PressureScreenPresenter8activateEv>:

void PressureScreenPresenter::activate()
{
 8010448:	b480      	push	{r7}
 801044a:	b083      	sub	sp, #12
 801044c:	af00      	add	r7, sp, #0
 801044e:	6078      	str	r0, [r7, #4]

}
 8010450:	bf00      	nop
 8010452:	370c      	adds	r7, #12
 8010454:	46bd      	mov	sp, r7
 8010456:	f85d 7b04 	ldr.w	r7, [sp], #4
 801045a:	4770      	bx	lr

0801045c <_ZN23PressureScreenPresenter10deactivateEv>:

void PressureScreenPresenter::deactivate()
{
 801045c:	b480      	push	{r7}
 801045e:	b083      	sub	sp, #12
 8010460:	af00      	add	r7, sp, #0
 8010462:	6078      	str	r0, [r7, #4]

}
 8010464:	bf00      	nop
 8010466:	370c      	adds	r7, #12
 8010468:	46bd      	mov	sp, r7
 801046a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801046e:	4770      	bx	lr

08010470 <_ZN23PressureScreenPresenter11setPressureEi>:
void PressureScreenPresenter::setPressure(int Val)
{
 8010470:	b580      	push	{r7, lr}
 8010472:	b082      	sub	sp, #8
 8010474:	af00      	add	r7, sp, #0
 8010476:	6078      	str	r0, [r7, #4]
 8010478:	6039      	str	r1, [r7, #0]
	view.setPressure(Val);
 801047a:	687b      	ldr	r3, [r7, #4]
 801047c:	68da      	ldr	r2, [r3, #12]
 801047e:	687b      	ldr	r3, [r7, #4]
 8010480:	68db      	ldr	r3, [r3, #12]
 8010482:	681b      	ldr	r3, [r3, #0]
 8010484:	332c      	adds	r3, #44	; 0x2c
 8010486:	681b      	ldr	r3, [r3, #0]
 8010488:	6839      	ldr	r1, [r7, #0]
 801048a:	4610      	mov	r0, r2
 801048c:	4798      	blx	r3
}
 801048e:	bf00      	nop
 8010490:	3708      	adds	r7, #8
 8010492:	46bd      	mov	sp, r7
 8010494:	bd80      	pop	{r7, pc}

08010496 <_ZThn4_N23PressureScreenPresenter11setPressureEi>:
    virtual void setPressure(int Val);
 8010496:	f1a0 0004 	sub.w	r0, r0, #4
 801049a:	f7ff bfe9 	b.w	8010470 <_ZN23PressureScreenPresenter11setPressureEi>
	...

080104a0 <_ZN18PressureScreenViewD1Ev>:

class PressureScreenView : public PressureScreenViewBase
{
public:
    PressureScreenView();
    virtual ~PressureScreenView() {}
 80104a0:	b580      	push	{r7, lr}
 80104a2:	b082      	sub	sp, #8
 80104a4:	af00      	add	r7, sp, #0
 80104a6:	6078      	str	r0, [r7, #4]
 80104a8:	4a05      	ldr	r2, [pc, #20]	; (80104c0 <_ZN18PressureScreenViewD1Ev+0x20>)
 80104aa:	687b      	ldr	r3, [r7, #4]
 80104ac:	601a      	str	r2, [r3, #0]
 80104ae:	687b      	ldr	r3, [r7, #4]
 80104b0:	4618      	mov	r0, r3
 80104b2:	f7fe fd0d 	bl	800eed0 <_ZN22PressureScreenViewBaseD1Ev>
 80104b6:	687b      	ldr	r3, [r7, #4]
 80104b8:	4618      	mov	r0, r3
 80104ba:	3708      	adds	r7, #8
 80104bc:	46bd      	mov	sp, r7
 80104be:	bd80      	pop	{r7, pc}
 80104c0:	0802e704 	.word	0x0802e704

080104c4 <_ZN18PressureScreenViewD0Ev>:
 80104c4:	b580      	push	{r7, lr}
 80104c6:	b082      	sub	sp, #8
 80104c8:	af00      	add	r7, sp, #0
 80104ca:	6078      	str	r0, [r7, #4]
 80104cc:	6878      	ldr	r0, [r7, #4]
 80104ce:	f7ff ffe7 	bl	80104a0 <_ZN18PressureScreenViewD1Ev>
 80104d2:	f44f 713f 	mov.w	r1, #764	; 0x2fc
 80104d6:	6878      	ldr	r0, [r7, #4]
 80104d8:	f019 fe99 	bl	802a20e <_ZdlPvj>
 80104dc:	687b      	ldr	r3, [r7, #4]
 80104de:	4618      	mov	r0, r3
 80104e0:	3708      	adds	r7, #8
 80104e2:	46bd      	mov	sp, r7
 80104e4:	bd80      	pop	{r7, pc}
	...

080104e8 <_ZN18PressureScreenViewC1Ev>:
#include <gui/pressurescreen_screen/PressureScreenView.hpp>

PressureScreenView::PressureScreenView()
 80104e8:	b580      	push	{r7, lr}
 80104ea:	b082      	sub	sp, #8
 80104ec:	af00      	add	r7, sp, #0
 80104ee:	6078      	str	r0, [r7, #4]
 80104f0:	687b      	ldr	r3, [r7, #4]
 80104f2:	4618      	mov	r0, r3
 80104f4:	f7fe faae 	bl	800ea54 <_ZN22PressureScreenViewBaseC1Ev>
 80104f8:	4a03      	ldr	r2, [pc, #12]	; (8010508 <_ZN18PressureScreenViewC1Ev+0x20>)
 80104fa:	687b      	ldr	r3, [r7, #4]
 80104fc:	601a      	str	r2, [r3, #0]
{

}
 80104fe:	687b      	ldr	r3, [r7, #4]
 8010500:	4618      	mov	r0, r3
 8010502:	3708      	adds	r7, #8
 8010504:	46bd      	mov	sp, r7
 8010506:	bd80      	pop	{r7, pc}
 8010508:	0802e704 	.word	0x0802e704

0801050c <_ZN18PressureScreenView11setupScreenEv>:

void PressureScreenView::setupScreen()
{
 801050c:	b580      	push	{r7, lr}
 801050e:	b082      	sub	sp, #8
 8010510:	af00      	add	r7, sp, #0
 8010512:	6078      	str	r0, [r7, #4]
    PressureScreenViewBase::setupScreen();
 8010514:	687b      	ldr	r3, [r7, #4]
 8010516:	4618      	mov	r0, r3
 8010518:	f7fe fd1f 	bl	800ef5a <_ZN22PressureScreenViewBase11setupScreenEv>
}
 801051c:	bf00      	nop
 801051e:	3708      	adds	r7, #8
 8010520:	46bd      	mov	sp, r7
 8010522:	bd80      	pop	{r7, pc}

08010524 <_ZN18PressureScreenView14tearDownScreenEv>:

void PressureScreenView::tearDownScreen()
{
 8010524:	b580      	push	{r7, lr}
 8010526:	b082      	sub	sp, #8
 8010528:	af00      	add	r7, sp, #0
 801052a:	6078      	str	r0, [r7, #4]
    PressureScreenViewBase::tearDownScreen();
 801052c:	687b      	ldr	r3, [r7, #4]
 801052e:	4618      	mov	r0, r3
 8010530:	f7f9 face 	bl	8009ad0 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 8010534:	bf00      	nop
 8010536:	3708      	adds	r7, #8
 8010538:	46bd      	mov	sp, r7
 801053a:	bd80      	pop	{r7, pc}

0801053c <_ZN18PressureScreenView11setPressureEi>:

void PressureScreenView::setPressure(int Val)
{
 801053c:	b580      	push	{r7, lr}
 801053e:	b082      	sub	sp, #8
 8010540:	af00      	add	r7, sp, #0
 8010542:	6078      	str	r0, [r7, #4]
 8010544:	6039      	str	r1, [r7, #0]
	Unicode::snprintf(PressureDataBuffer, PRESSUREDATA_SIZE, "%d",Val);
 8010546:	687b      	ldr	r3, [r7, #4]
 8010548:	f503 7037 	add.w	r0, r3, #732	; 0x2dc
 801054c:	683b      	ldr	r3, [r7, #0]
 801054e:	4a0a      	ldr	r2, [pc, #40]	; (8010578 <_ZN18PressureScreenView11setPressureEi+0x3c>)
 8010550:	2106      	movs	r1, #6
 8010552:	f00b fe47 	bl	801c1e4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	PressureGauge.updateValue(Val, 30); // animates needle and arc to new value with a duration of 30 ticks
 8010556:	687b      	ldr	r3, [r7, #4]
 8010558:	33a8      	adds	r3, #168	; 0xa8
 801055a:	221e      	movs	r2, #30
 801055c:	6839      	ldr	r1, [r7, #0]
 801055e:	4618      	mov	r0, r3
 8010560:	f001 ff75 	bl	801244e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>
	PressureData.invalidate();
 8010564:	687b      	ldr	r3, [r7, #4]
 8010566:	f503 7324 	add.w	r3, r3, #656	; 0x290
 801056a:	4618      	mov	r0, r3
 801056c:	f009 fcb2 	bl	8019ed4 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8010570:	bf00      	nop
 8010572:	3708      	adds	r7, #8
 8010574:	46bd      	mov	sp, r7
 8010576:	bd80      	pop	{r7, pc}
 8010578:	0802d2a8 	.word	0x0802d2a8

0801057c <_ZN26TemperatureScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~TemperatureScreenPresenter() {}
 801057c:	b580      	push	{r7, lr}
 801057e:	b082      	sub	sp, #8
 8010580:	af00      	add	r7, sp, #0
 8010582:	6078      	str	r0, [r7, #4]
 8010584:	4a09      	ldr	r2, [pc, #36]	; (80105ac <_ZN26TemperatureScreenPresenterD1Ev+0x30>)
 8010586:	687b      	ldr	r3, [r7, #4]
 8010588:	601a      	str	r2, [r3, #0]
 801058a:	4a09      	ldr	r2, [pc, #36]	; (80105b0 <_ZN26TemperatureScreenPresenterD1Ev+0x34>)
 801058c:	687b      	ldr	r3, [r7, #4]
 801058e:	605a      	str	r2, [r3, #4]
 8010590:	687b      	ldr	r3, [r7, #4]
 8010592:	3304      	adds	r3, #4
 8010594:	4618      	mov	r0, r3
 8010596:	f7ff fb57 	bl	800fc48 <_ZN13ModelListenerD1Ev>
 801059a:	687b      	ldr	r3, [r7, #4]
 801059c:	4618      	mov	r0, r3
 801059e:	f7ff fb0f 	bl	800fbc0 <_ZN8touchgfx9PresenterD1Ev>
 80105a2:	687b      	ldr	r3, [r7, #4]
 80105a4:	4618      	mov	r0, r3
 80105a6:	3708      	adds	r7, #8
 80105a8:	46bd      	mov	sp, r7
 80105aa:	bd80      	pop	{r7, pc}
 80105ac:	0802e73c 	.word	0x0802e73c
 80105b0:	0802e758 	.word	0x0802e758

080105b4 <_ZThn4_N26TemperatureScreenPresenterD1Ev>:
 80105b4:	f1a0 0004 	sub.w	r0, r0, #4
 80105b8:	e7e0      	b.n	801057c <_ZN26TemperatureScreenPresenterD1Ev>
 80105ba:	bf00      	nop

080105bc <_ZN26TemperatureScreenPresenterD0Ev>:
 80105bc:	b580      	push	{r7, lr}
 80105be:	b082      	sub	sp, #8
 80105c0:	af00      	add	r7, sp, #0
 80105c2:	6078      	str	r0, [r7, #4]
 80105c4:	6878      	ldr	r0, [r7, #4]
 80105c6:	f7ff ffd9 	bl	801057c <_ZN26TemperatureScreenPresenterD1Ev>
 80105ca:	2110      	movs	r1, #16
 80105cc:	6878      	ldr	r0, [r7, #4]
 80105ce:	f019 fe1e 	bl	802a20e <_ZdlPvj>
 80105d2:	687b      	ldr	r3, [r7, #4]
 80105d4:	4618      	mov	r0, r3
 80105d6:	3708      	adds	r7, #8
 80105d8:	46bd      	mov	sp, r7
 80105da:	bd80      	pop	{r7, pc}

080105dc <_ZThn4_N26TemperatureScreenPresenterD0Ev>:
 80105dc:	f1a0 0004 	sub.w	r0, r0, #4
 80105e0:	e7ec      	b.n	80105bc <_ZN26TemperatureScreenPresenterD0Ev>
	...

080105e4 <_ZN26TemperatureScreenPresenterC1ER21TemperatureScreenView>:
#include <gui/temperaturescreen_screen/TemperatureScreenView.hpp>
#include <gui/temperaturescreen_screen/TemperatureScreenPresenter.hpp>

TemperatureScreenPresenter::TemperatureScreenPresenter(TemperatureScreenView& v)
 80105e4:	b580      	push	{r7, lr}
 80105e6:	b082      	sub	sp, #8
 80105e8:	af00      	add	r7, sp, #0
 80105ea:	6078      	str	r0, [r7, #4]
 80105ec:	6039      	str	r1, [r7, #0]
    : view(v)
 80105ee:	687b      	ldr	r3, [r7, #4]
 80105f0:	4618      	mov	r0, r3
 80105f2:	f7ff fb05 	bl	800fc00 <_ZN8touchgfx9PresenterC1Ev>
 80105f6:	687b      	ldr	r3, [r7, #4]
 80105f8:	3304      	adds	r3, #4
 80105fa:	4618      	mov	r0, r3
 80105fc:	f7ff fb10 	bl	800fc20 <_ZN13ModelListenerC1Ev>
 8010600:	4a06      	ldr	r2, [pc, #24]	; (801061c <_ZN26TemperatureScreenPresenterC1ER21TemperatureScreenView+0x38>)
 8010602:	687b      	ldr	r3, [r7, #4]
 8010604:	601a      	str	r2, [r3, #0]
 8010606:	4a06      	ldr	r2, [pc, #24]	; (8010620 <_ZN26TemperatureScreenPresenterC1ER21TemperatureScreenView+0x3c>)
 8010608:	687b      	ldr	r3, [r7, #4]
 801060a:	605a      	str	r2, [r3, #4]
 801060c:	687b      	ldr	r3, [r7, #4]
 801060e:	683a      	ldr	r2, [r7, #0]
 8010610:	60da      	str	r2, [r3, #12]
{

}
 8010612:	687b      	ldr	r3, [r7, #4]
 8010614:	4618      	mov	r0, r3
 8010616:	3708      	adds	r7, #8
 8010618:	46bd      	mov	sp, r7
 801061a:	bd80      	pop	{r7, pc}
 801061c:	0802e73c 	.word	0x0802e73c
 8010620:	0802e758 	.word	0x0802e758

08010624 <_ZN26TemperatureScreenPresenter8activateEv>:

void TemperatureScreenPresenter::activate()
{
 8010624:	b480      	push	{r7}
 8010626:	b083      	sub	sp, #12
 8010628:	af00      	add	r7, sp, #0
 801062a:	6078      	str	r0, [r7, #4]

}
 801062c:	bf00      	nop
 801062e:	370c      	adds	r7, #12
 8010630:	46bd      	mov	sp, r7
 8010632:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010636:	4770      	bx	lr

08010638 <_ZN26TemperatureScreenPresenter10deactivateEv>:

void TemperatureScreenPresenter::deactivate()
{
 8010638:	b480      	push	{r7}
 801063a:	b083      	sub	sp, #12
 801063c:	af00      	add	r7, sp, #0
 801063e:	6078      	str	r0, [r7, #4]

}
 8010640:	bf00      	nop
 8010642:	370c      	adds	r7, #12
 8010644:	46bd      	mov	sp, r7
 8010646:	f85d 7b04 	ldr.w	r7, [sp], #4
 801064a:	4770      	bx	lr

0801064c <_ZN26TemperatureScreenPresenter14setTemperatureEi>:
void TemperatureScreenPresenter::setTemperature(int Temperature_Val)
{
 801064c:	b580      	push	{r7, lr}
 801064e:	b082      	sub	sp, #8
 8010650:	af00      	add	r7, sp, #0
 8010652:	6078      	str	r0, [r7, #4]
 8010654:	6039      	str	r1, [r7, #0]
	view.setTemperature(Temperature_Val);
 8010656:	687b      	ldr	r3, [r7, #4]
 8010658:	68da      	ldr	r2, [r3, #12]
 801065a:	687b      	ldr	r3, [r7, #4]
 801065c:	68db      	ldr	r3, [r3, #12]
 801065e:	681b      	ldr	r3, [r3, #0]
 8010660:	332c      	adds	r3, #44	; 0x2c
 8010662:	681b      	ldr	r3, [r3, #0]
 8010664:	6839      	ldr	r1, [r7, #0]
 8010666:	4610      	mov	r0, r2
 8010668:	4798      	blx	r3
}
 801066a:	bf00      	nop
 801066c:	3708      	adds	r7, #8
 801066e:	46bd      	mov	sp, r7
 8010670:	bd80      	pop	{r7, pc}

08010672 <_ZThn4_N26TemperatureScreenPresenter14setTemperatureEi>:
    virtual void setTemperature(int Temperature_Val);
 8010672:	f1a0 0004 	sub.w	r0, r0, #4
 8010676:	f7ff bfe9 	b.w	801064c <_ZN26TemperatureScreenPresenter14setTemperatureEi>
	...

0801067c <_ZN21TemperatureScreenViewD1Ev>:

class TemperatureScreenView : public TemperatureScreenViewBase
{
public:
    TemperatureScreenView();
    virtual ~TemperatureScreenView() {}
 801067c:	b580      	push	{r7, lr}
 801067e:	b082      	sub	sp, #8
 8010680:	af00      	add	r7, sp, #0
 8010682:	6078      	str	r0, [r7, #4]
 8010684:	4a05      	ldr	r2, [pc, #20]	; (801069c <_ZN21TemperatureScreenViewD1Ev+0x20>)
 8010686:	687b      	ldr	r3, [r7, #4]
 8010688:	601a      	str	r2, [r3, #0]
 801068a:	687b      	ldr	r3, [r7, #4]
 801068c:	4618      	mov	r0, r3
 801068e:	f7fe ff85 	bl	800f59c <_ZN25TemperatureScreenViewBaseD1Ev>
 8010692:	687b      	ldr	r3, [r7, #4]
 8010694:	4618      	mov	r0, r3
 8010696:	3708      	adds	r7, #8
 8010698:	46bd      	mov	sp, r7
 801069a:	bd80      	pop	{r7, pc}
 801069c:	0802e778 	.word	0x0802e778

080106a0 <_ZN21TemperatureScreenViewD0Ev>:
 80106a0:	b580      	push	{r7, lr}
 80106a2:	b082      	sub	sp, #8
 80106a4:	af00      	add	r7, sp, #0
 80106a6:	6078      	str	r0, [r7, #4]
 80106a8:	6878      	ldr	r0, [r7, #4]
 80106aa:	f7ff ffe7 	bl	801067c <_ZN21TemperatureScreenViewD1Ev>
 80106ae:	f44f 713d 	mov.w	r1, #756	; 0x2f4
 80106b2:	6878      	ldr	r0, [r7, #4]
 80106b4:	f019 fdab 	bl	802a20e <_ZdlPvj>
 80106b8:	687b      	ldr	r3, [r7, #4]
 80106ba:	4618      	mov	r0, r3
 80106bc:	3708      	adds	r7, #8
 80106be:	46bd      	mov	sp, r7
 80106c0:	bd80      	pop	{r7, pc}
	...

080106c4 <_ZN21TemperatureScreenViewC1Ev>:
#include <gui/temperaturescreen_screen/TemperatureScreenView.hpp>

TemperatureScreenView::TemperatureScreenView()
 80106c4:	b580      	push	{r7, lr}
 80106c6:	b082      	sub	sp, #8
 80106c8:	af00      	add	r7, sp, #0
 80106ca:	6078      	str	r0, [r7, #4]
 80106cc:	687b      	ldr	r3, [r7, #4]
 80106ce:	4618      	mov	r0, r3
 80106d0:	f7fe fd2c 	bl	800f12c <_ZN25TemperatureScreenViewBaseC1Ev>
 80106d4:	4a03      	ldr	r2, [pc, #12]	; (80106e4 <_ZN21TemperatureScreenViewC1Ev+0x20>)
 80106d6:	687b      	ldr	r3, [r7, #4]
 80106d8:	601a      	str	r2, [r3, #0]
{

}
 80106da:	687b      	ldr	r3, [r7, #4]
 80106dc:	4618      	mov	r0, r3
 80106de:	3708      	adds	r7, #8
 80106e0:	46bd      	mov	sp, r7
 80106e2:	bd80      	pop	{r7, pc}
 80106e4:	0802e778 	.word	0x0802e778

080106e8 <_ZN21TemperatureScreenView11setupScreenEv>:

void TemperatureScreenView::setupScreen()
{
 80106e8:	b580      	push	{r7, lr}
 80106ea:	b082      	sub	sp, #8
 80106ec:	af00      	add	r7, sp, #0
 80106ee:	6078      	str	r0, [r7, #4]
    TemperatureScreenViewBase::setupScreen();
 80106f0:	687b      	ldr	r3, [r7, #4]
 80106f2:	4618      	mov	r0, r3
 80106f4:	f7fe ff97 	bl	800f626 <_ZN25TemperatureScreenViewBase11setupScreenEv>
}
 80106f8:	bf00      	nop
 80106fa:	3708      	adds	r7, #8
 80106fc:	46bd      	mov	sp, r7
 80106fe:	bd80      	pop	{r7, pc}

08010700 <_ZN21TemperatureScreenView14tearDownScreenEv>:

void TemperatureScreenView::tearDownScreen()
{
 8010700:	b580      	push	{r7, lr}
 8010702:	b082      	sub	sp, #8
 8010704:	af00      	add	r7, sp, #0
 8010706:	6078      	str	r0, [r7, #4]
    TemperatureScreenViewBase::tearDownScreen();
 8010708:	687b      	ldr	r3, [r7, #4]
 801070a:	4618      	mov	r0, r3
 801070c:	f7f9 f9e0 	bl	8009ad0 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 8010710:	bf00      	nop
 8010712:	3708      	adds	r7, #8
 8010714:	46bd      	mov	sp, r7
 8010716:	bd80      	pop	{r7, pc}

08010718 <_ZN21TemperatureScreenView14setTemperatureEi>:

void TemperatureScreenView::setTemperature(int Temperature_Val)
{
 8010718:	b580      	push	{r7, lr}
 801071a:	b082      	sub	sp, #8
 801071c:	af00      	add	r7, sp, #0
 801071e:	6078      	str	r0, [r7, #4]
 8010720:	6039      	str	r1, [r7, #0]
	Unicode::snprintf(TemperatureDataBuffer, TEMPERATUREDATA_SIZE, "%d",Temperature_Val);
 8010722:	687b      	ldr	r3, [r7, #4]
 8010724:	f503 7037 	add.w	r0, r3, #732	; 0x2dc
 8010728:	683b      	ldr	r3, [r7, #0]
 801072a:	4a0b      	ldr	r2, [pc, #44]	; (8010758 <_ZN21TemperatureScreenView14setTemperatureEi+0x40>)
 801072c:	2104      	movs	r1, #4
 801072e:	f00b fd59 	bl	801c1e4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	TemperatureGauge.updateValue(Temperature_Val, 30); // animates needle and arc to new value with a duration of 30 ticks
 8010732:	687b      	ldr	r3, [r7, #4]
 8010734:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8010738:	221e      	movs	r2, #30
 801073a:	6839      	ldr	r1, [r7, #0]
 801073c:	4618      	mov	r0, r3
 801073e:	f001 fe86 	bl	801244e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>
	TemperatureGauge.invalidate();
 8010742:	687b      	ldr	r3, [r7, #4]
 8010744:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8010748:	4618      	mov	r0, r3
 801074a:	f009 fbc3 	bl	8019ed4 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 801074e:	bf00      	nop
 8010750:	3708      	adds	r7, #8
 8010752:	46bd      	mov	sp, r7
 8010754:	bd80      	pop	{r7, pc}
 8010756:	bf00      	nop
 8010758:	0802d2ac 	.word	0x0802d2ac

0801075c <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 801075c:	b480      	push	{r7}
 801075e:	b083      	sub	sp, #12
 8010760:	af00      	add	r7, sp, #0
 8010762:	6078      	str	r0, [r7, #4]
    {
 8010764:	4a04      	ldr	r2, [pc, #16]	; (8010778 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 8010766:	687b      	ldr	r3, [r7, #4]
 8010768:	601a      	str	r2, [r3, #0]
    }
 801076a:	687b      	ldr	r3, [r7, #4]
 801076c:	4618      	mov	r0, r3
 801076e:	370c      	adds	r7, #12
 8010770:	46bd      	mov	sp, r7
 8010772:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010776:	4770      	bx	lr
 8010778:	0802e7c8 	.word	0x0802e7c8

0801077c <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 801077c:	b580      	push	{r7, lr}
 801077e:	b082      	sub	sp, #8
 8010780:	af00      	add	r7, sp, #0
 8010782:	6078      	str	r0, [r7, #4]
    }
 8010784:	6878      	ldr	r0, [r7, #4]
 8010786:	f7ff ffe9 	bl	801075c <_ZN8touchgfx15TouchControllerD1Ev>
 801078a:	2104      	movs	r1, #4
 801078c:	6878      	ldr	r0, [r7, #4]
 801078e:	f019 fd3e 	bl	802a20e <_ZdlPvj>
 8010792:	687b      	ldr	r3, [r7, #4]
 8010794:	4618      	mov	r0, r3
 8010796:	3708      	adds	r7, #8
 8010798:	46bd      	mov	sp, r7
 801079a:	bd80      	pop	{r7, pc}

0801079c <_ZN20STM32TouchController4initEv>:
/* USER CODE BEGIN STM32TouchController */

#include <STM32TouchController.hpp>
#include "main.h"
void STM32TouchController::init()
{
 801079c:	b480      	push	{r7}
 801079e:	b083      	sub	sp, #12
 80107a0:	af00      	add	r7, sp, #0
 80107a2:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 80107a4:	bf00      	nop
 80107a6:	370c      	adds	r7, #12
 80107a8:	46bd      	mov	sp, r7
 80107aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80107ae:	4770      	bx	lr

080107b0 <_ZN20STM32TouchController11sampleTouchERlS0_>:


bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 80107b0:	b580      	push	{r7, lr}
 80107b2:	b084      	sub	sp, #16
 80107b4:	af00      	add	r7, sp, #0
 80107b6:	60f8      	str	r0, [r7, #12]
 80107b8:	60b9      	str	r1, [r7, #8]
 80107ba:	607a      	str	r2, [r7, #4]
	return ((bool) Touch_TouchGFXSampleTouch(&x, &y));
 80107bc:	6879      	ldr	r1, [r7, #4]
 80107be:	68b8      	ldr	r0, [r7, #8]
 80107c0:	f7f3 f858 	bl	8003874 <Touch_TouchGFXSampleTouch>
 80107c4:	4603      	mov	r3, r0
 80107c6:	2b00      	cmp	r3, #0
 80107c8:	bf14      	ite	ne
 80107ca:	2301      	movne	r3, #1
 80107cc:	2300      	moveq	r3, #0
 80107ce:	b2db      	uxtb	r3, r3
}
 80107d0:	4618      	mov	r0, r3
 80107d2:	3710      	adds	r7, #16
 80107d4:	46bd      	mov	sp, r7
 80107d6:	bd80      	pop	{r7, pc}

080107d8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80107d8:	b580      	push	{r7, lr}
 80107da:	b082      	sub	sp, #8
 80107dc:	af00      	add	r7, sp, #0
 80107de:	6078      	str	r0, [r7, #4]
 80107e0:	4a05      	ldr	r2, [pc, #20]	; (80107f8 <_ZN20STM32TouchControllerD1Ev+0x20>)
 80107e2:	687b      	ldr	r3, [r7, #4]
 80107e4:	601a      	str	r2, [r3, #0]
 80107e6:	687b      	ldr	r3, [r7, #4]
 80107e8:	4618      	mov	r0, r3
 80107ea:	f7ff ffb7 	bl	801075c <_ZN8touchgfx15TouchControllerD1Ev>
 80107ee:	687b      	ldr	r3, [r7, #4]
 80107f0:	4618      	mov	r0, r3
 80107f2:	3708      	adds	r7, #8
 80107f4:	46bd      	mov	sp, r7
 80107f6:	bd80      	pop	{r7, pc}
 80107f8:	0802e7b0 	.word	0x0802e7b0

080107fc <_ZN20STM32TouchControllerD0Ev>:
 80107fc:	b580      	push	{r7, lr}
 80107fe:	b082      	sub	sp, #8
 8010800:	af00      	add	r7, sp, #0
 8010802:	6078      	str	r0, [r7, #4]
 8010804:	6878      	ldr	r0, [r7, #4]
 8010806:	f7ff ffe7 	bl	80107d8 <_ZN20STM32TouchControllerD1Ev>
 801080a:	2104      	movs	r1, #4
 801080c:	6878      	ldr	r0, [r7, #4]
 801080e:	f019 fcfe 	bl	802a20e <_ZdlPvj>
 8010812:	687b      	ldr	r3, [r7, #4]
 8010814:	4618      	mov	r0, r3
 8010816:	3708      	adds	r7, #8
 8010818:	46bd      	mov	sp, r7
 801081a:	bd80      	pop	{r7, pc}

0801081c <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 801081c:	b480      	push	{r7}
 801081e:	af00      	add	r7, sp, #0

}
 8010820:	bf00      	nop
 8010822:	46bd      	mov	sp, r7
 8010824:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010828:	4770      	bx	lr
	...

0801082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 801082c:	b480      	push	{r7}
 801082e:	b083      	sub	sp, #12
 8010830:	af00      	add	r7, sp, #0
 8010832:	4603      	mov	r3, r0
 8010834:	71fb      	strb	r3, [r7, #7]
    switch (id)
 8010836:	79fb      	ldrb	r3, [r7, #7]
 8010838:	2b03      	cmp	r3, #3
 801083a:	d80c      	bhi.n	8010856 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 801083c:	a201      	add	r2, pc, #4	; (adr r2, 8010844 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 801083e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010842:	bf00      	nop
 8010844:	08010855 	.word	0x08010855
 8010848:	08010855 	.word	0x08010855
 801084c:	08010855 	.word	0x08010855
 8010850:	08010855 	.word	0x08010855
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 8010854:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 8010856:	bf00      	nop
 8010858:	370c      	adds	r7, #12
 801085a:	46bd      	mov	sp, r7
 801085c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010860:	4770      	bx	lr
 8010862:	bf00      	nop

08010864 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 8010864:	b480      	push	{r7}
 8010866:	b083      	sub	sp, #12
 8010868:	af00      	add	r7, sp, #0
 801086a:	4603      	mov	r3, r0
 801086c:	71fb      	strb	r3, [r7, #7]
    switch (id)
 801086e:	79fb      	ldrb	r3, [r7, #7]
 8010870:	2b03      	cmp	r3, #3
 8010872:	d80c      	bhi.n	801088e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 8010874:	a201      	add	r2, pc, #4	; (adr r2, 801087c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 8010876:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801087a:	bf00      	nop
 801087c:	0801088d 	.word	0x0801088d
 8010880:	0801088d 	.word	0x0801088d
 8010884:	0801088d 	.word	0x0801088d
 8010888:	0801088d 	.word	0x0801088d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 801088c:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 801088e:	bf00      	nop
 8010890:	370c      	adds	r7, #12
 8010892:	46bd      	mov	sp, r7
 8010894:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010898:	4770      	bx	lr
 801089a:	bf00      	nop

0801089c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 801089c:	b480      	push	{r7}
 801089e:	b083      	sub	sp, #12
 80108a0:	af00      	add	r7, sp, #0
 80108a2:	4603      	mov	r3, r0
 80108a4:	71fb      	strb	r3, [r7, #7]
    switch (id)
 80108a6:	79fb      	ldrb	r3, [r7, #7]
 80108a8:	2b03      	cmp	r3, #3
 80108aa:	d80c      	bhi.n	80108c6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 80108ac:	a201      	add	r2, pc, #4	; (adr r2, 80108b4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 80108ae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80108b2:	bf00      	nop
 80108b4:	080108c5 	.word	0x080108c5
 80108b8:	080108c5 	.word	0x080108c5
 80108bc:	080108c5 	.word	0x080108c5
 80108c0:	080108c5 	.word	0x080108c5
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 80108c4:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 80108c6:	bf00      	nop
 80108c8:	370c      	adds	r7, #12
 80108ca:	46bd      	mov	sp, r7
 80108cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80108d0:	4770      	bx	lr
 80108d2:	bf00      	nop

080108d4 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 80108d4:	b480      	push	{r7}
 80108d6:	b083      	sub	sp, #12
 80108d8:	af00      	add	r7, sp, #0
 80108da:	6078      	str	r0, [r7, #4]
    {
 80108dc:	4a04      	ldr	r2, [pc, #16]	; (80108f0 <_ZN8touchgfx3HALD1Ev+0x1c>)
 80108de:	687b      	ldr	r3, [r7, #4]
 80108e0:	601a      	str	r2, [r3, #0]
    }
 80108e2:	687b      	ldr	r3, [r7, #4]
 80108e4:	4618      	mov	r0, r3
 80108e6:	370c      	adds	r7, #12
 80108e8:	46bd      	mov	sp, r7
 80108ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80108ee:	4770      	bx	lr
 80108f0:	0802ee84 	.word	0x0802ee84

080108f4 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 80108f4:	b580      	push	{r7, lr}
 80108f6:	b082      	sub	sp, #8
 80108f8:	af00      	add	r7, sp, #0
 80108fa:	6078      	str	r0, [r7, #4]
    }
 80108fc:	6878      	ldr	r0, [r7, #4]
 80108fe:	f7ff ffe9 	bl	80108d4 <_ZN8touchgfx3HALD1Ev>
 8010902:	217c      	movs	r1, #124	; 0x7c
 8010904:	6878      	ldr	r0, [r7, #4]
 8010906:	f019 fc82 	bl	802a20e <_ZdlPvj>
 801090a:	687b      	ldr	r3, [r7, #4]
 801090c:	4618      	mov	r0, r3
 801090e:	3708      	adds	r7, #8
 8010910:	46bd      	mov	sp, r7
 8010912:	bd80      	pop	{r7, pc}

08010914 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 8010914:	b480      	push	{r7}
 8010916:	b083      	sub	sp, #12
 8010918:	af00      	add	r7, sp, #0
 801091a:	6078      	str	r0, [r7, #4]
 801091c:	460b      	mov	r3, r1
 801091e:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 8010920:	687b      	ldr	r3, [r7, #4]
 8010922:	78fa      	ldrb	r2, [r7, #3]
 8010924:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8010928:	687b      	ldr	r3, [r7, #4]
 801092a:	2201      	movs	r2, #1
 801092c:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
    }
 8010930:	bf00      	nop
 8010932:	370c      	adds	r7, #12
 8010934:	46bd      	mov	sp, r7
 8010936:	f85d 7b04 	ldr.w	r7, [sp], #4
 801093a:	4770      	bx	lr

0801093c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 801093c:	b580      	push	{r7, lr}
 801093e:	b082      	sub	sp, #8
 8010940:	af00      	add	r7, sp, #0
 8010942:	6078      	str	r0, [r7, #4]
 8010944:	460b      	mov	r3, r1
 8010946:	807b      	strh	r3, [r7, #2]
 8010948:	4613      	mov	r3, r2
 801094a:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 801094c:	4b0c      	ldr	r3, [pc, #48]	; (8010980 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 801094e:	881b      	ldrh	r3, [r3, #0]
 8010950:	887a      	ldrh	r2, [r7, #2]
 8010952:	429a      	cmp	r2, r3
 8010954:	d304      	bcc.n	8010960 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 8010956:	4b0b      	ldr	r3, [pc, #44]	; (8010984 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 8010958:	881b      	ldrh	r3, [r3, #0]
 801095a:	883a      	ldrh	r2, [r7, #0]
 801095c:	429a      	cmp	r2, r3
 801095e:	d205      	bcs.n	801096c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 8010960:	4b09      	ldr	r3, [pc, #36]	; (8010988 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 8010962:	4a0a      	ldr	r2, [pc, #40]	; (801098c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 8010964:	219e      	movs	r1, #158	; 0x9e
 8010966:	480a      	ldr	r0, [pc, #40]	; (8010990 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 8010968:	f01a fc42 	bl	802b1f0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 801096c:	4a09      	ldr	r2, [pc, #36]	; (8010994 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 801096e:	887b      	ldrh	r3, [r7, #2]
 8010970:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 8010972:	4a09      	ldr	r2, [pc, #36]	; (8010998 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 8010974:	883b      	ldrh	r3, [r7, #0]
 8010976:	8013      	strh	r3, [r2, #0]
    }
 8010978:	bf00      	nop
 801097a:	3708      	adds	r7, #8
 801097c:	46bd      	mov	sp, r7
 801097e:	bd80      	pop	{r7, pc}
 8010980:	2000231c 	.word	0x2000231c
 8010984:	2000231e 	.word	0x2000231e
 8010988:	0802d2b0 	.word	0x0802d2b0
 801098c:	0802d314 	.word	0x0802d314
 8010990:	0802d358 	.word	0x0802d358
 8010994:	20002322 	.word	0x20002322
 8010998:	20002324 	.word	0x20002324

0801099c <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
 801099c:	b580      	push	{r7, lr}
 801099e:	b082      	sub	sp, #8
 80109a0:	af00      	add	r7, sp, #0
 80109a2:	6078      	str	r0, [r7, #4]
    {
        if (useDMAAcceleration)
 80109a4:	687b      	ldr	r3, [r7, #4]
 80109a6:	f893 307a 	ldrb.w	r3, [r3, #122]	; 0x7a
 80109aa:	2b00      	cmp	r3, #0
 80109ac:	d009      	beq.n	80109c2 <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
        {
            return dma.getBlitCaps();
 80109ae:	687b      	ldr	r3, [r7, #4]
 80109b0:	685a      	ldr	r2, [r3, #4]
 80109b2:	687b      	ldr	r3, [r7, #4]
 80109b4:	685b      	ldr	r3, [r3, #4]
 80109b6:	681b      	ldr	r3, [r3, #0]
 80109b8:	681b      	ldr	r3, [r3, #0]
 80109ba:	4610      	mov	r0, r2
 80109bc:	4798      	blx	r3
 80109be:	4603      	mov	r3, r0
 80109c0:	e000      	b.n	80109c4 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        }
        return static_cast<BlitOperations>(0);
 80109c2:	2300      	movs	r3, #0
    }
 80109c4:	4618      	mov	r0, r3
 80109c6:	3708      	adds	r7, #8
 80109c8:	46bd      	mov	sp, r7
 80109ca:	bd80      	pop	{r7, pc}

080109cc <_ZN8touchgfx3HAL15backPorchExitedEv>:
    /**
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     */
    virtual void backPorchExited()
 80109cc:	b580      	push	{r7, lr}
 80109ce:	b082      	sub	sp, #8
 80109d0:	af00      	add	r7, sp, #0
 80109d2:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 80109d4:	6878      	ldr	r0, [r7, #4]
 80109d6:	f003 f875 	bl	8013ac4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80109da:	687b      	ldr	r3, [r7, #4]
 80109dc:	681b      	ldr	r3, [r3, #0]
 80109de:	33ac      	adds	r3, #172	; 0xac
 80109e0:	681b      	ldr	r3, [r3, #0]
 80109e2:	6878      	ldr	r0, [r7, #4]
 80109e4:	4798      	blx	r3
    }
 80109e6:	bf00      	nop
 80109e8:	3708      	adds	r7, #8
 80109ea:	46bd      	mov	sp, r7
 80109ec:	bd80      	pop	{r7, pc}

080109ee <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 80109ee:	b480      	push	{r7}
 80109f0:	b083      	sub	sp, #12
 80109f2:	af00      	add	r7, sp, #0
 80109f4:	6078      	str	r0, [r7, #4]
 80109f6:	6039      	str	r1, [r7, #0]
    {
        (void)key; // Unused variable
        return false;
 80109f8:	2300      	movs	r3, #0
    }
 80109fa:	4618      	mov	r0, r3
 80109fc:	370c      	adds	r7, #12
 80109fe:	46bd      	mov	sp, r7
 8010a00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010a04:	4770      	bx	lr
	...

08010a08 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setAnimationStorage
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8010a08:	b580      	push	{r7, lr}
 8010a0a:	b084      	sub	sp, #16
 8010a0c:	af00      	add	r7, sp, #0
 8010a0e:	60f8      	str	r0, [r7, #12]
 8010a10:	60b9      	str	r1, [r7, #8]
 8010a12:	607a      	str	r2, [r7, #4]
 8010a14:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8010a16:	68bb      	ldr	r3, [r7, #8]
 8010a18:	2b00      	cmp	r3, #0
 8010a1a:	d106      	bne.n	8010a2a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 8010a1c:	4b0f      	ldr	r3, [pc, #60]	; (8010a5c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 8010a1e:	4a10      	ldr	r2, [pc, #64]	; (8010a60 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 8010a20:	f240 21d2 	movw	r1, #722	; 0x2d2
 8010a24:	480f      	ldr	r0, [pc, #60]	; (8010a64 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 8010a26:	f01a fbe3 	bl	802b1f0 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 8010a2a:	68fb      	ldr	r3, [r7, #12]
 8010a2c:	68ba      	ldr	r2, [r7, #8]
 8010a2e:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8010a30:	68fb      	ldr	r3, [r7, #12]
 8010a32:	687a      	ldr	r2, [r7, #4]
 8010a34:	641a      	str	r2, [r3, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8010a36:	687b      	ldr	r3, [r7, #4]
 8010a38:	2b00      	cmp	r3, #0
 8010a3a:	bf14      	ite	ne
 8010a3c:	2301      	movne	r3, #1
 8010a3e:	2300      	moveq	r3, #0
 8010a40:	b2da      	uxtb	r2, r3
 8010a42:	4b09      	ldr	r3, [pc, #36]	; (8010a68 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 8010a44:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8010a46:	68fb      	ldr	r3, [r7, #12]
 8010a48:	681b      	ldr	r3, [r3, #0]
 8010a4a:	338c      	adds	r3, #140	; 0x8c
 8010a4c:	681b      	ldr	r3, [r3, #0]
 8010a4e:	6839      	ldr	r1, [r7, #0]
 8010a50:	68f8      	ldr	r0, [r7, #12]
 8010a52:	4798      	blx	r3
    }
 8010a54:	bf00      	nop
 8010a56:	3710      	adds	r7, #16
 8010a58:	46bd      	mov	sp, r7
 8010a5a:	bd80      	pop	{r7, pc}
 8010a5c:	0802d39c 	.word	0x0802d39c
 8010a60:	0802d3d4 	.word	0x0802d3d4
 8010a64:	0802d358 	.word	0x0802d358
 8010a68:	20002326 	.word	0x20002326

08010a6c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
 8010a6c:	b480      	push	{r7}
 8010a6e:	b083      	sub	sp, #12
 8010a70:	af00      	add	r7, sp, #0
 8010a72:	6078      	str	r0, [r7, #4]
 8010a74:	6039      	str	r1, [r7, #0]
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8010a76:	687b      	ldr	r3, [r7, #4]
 8010a78:	683a      	ldr	r2, [r7, #0]
 8010a7a:	645a      	str	r2, [r3, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8010a7c:	683b      	ldr	r3, [r7, #0]
 8010a7e:	2b00      	cmp	r3, #0
 8010a80:	bf14      	ite	ne
 8010a82:	2301      	movne	r3, #1
 8010a84:	2300      	moveq	r3, #0
 8010a86:	b2da      	uxtb	r2, r3
 8010a88:	4b03      	ldr	r3, [pc, #12]	; (8010a98 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 8010a8a:	701a      	strb	r2, [r3, #0]
    }
 8010a8c:	bf00      	nop
 8010a8e:	370c      	adds	r7, #12
 8010a90:	46bd      	mov	sp, r7
 8010a92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010a96:	4770      	bx	lr
 8010a98:	20002327 	.word	0x20002327

08010a9c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * Gets the flash data reader. This method must be implemented in
     * subclasses that uses a FlashDataReader object.
     *
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
 8010a9c:	b480      	push	{r7}
 8010a9e:	b083      	sub	sp, #12
 8010aa0:	af00      	add	r7, sp, #0
 8010aa2:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8010aa4:	2300      	movs	r3, #0
    }
 8010aa6:	4618      	mov	r0, r3
 8010aa8:	370c      	adds	r7, #12
 8010aaa:	46bd      	mov	sp, r7
 8010aac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ab0:	4770      	bx	lr

08010ab2 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
 8010ab2:	b580      	push	{r7, lr}
 8010ab4:	b082      	sub	sp, #8
 8010ab6:	af00      	add	r7, sp, #0
 8010ab8:	6078      	str	r0, [r7, #4]
 8010aba:	460b      	mov	r3, r1
 8010abc:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 8010abe:	687b      	ldr	r3, [r7, #4]
 8010ac0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010ac2:	2b00      	cmp	r3, #0
 8010ac4:	d004      	beq.n	8010ad0 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 8010ac6:	687b      	ldr	r3, [r7, #4]
 8010ac8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010aca:	887a      	ldrh	r2, [r7, #2]
 8010acc:	4610      	mov	r0, r2
 8010ace:	4798      	blx	r3
        }
    }
 8010ad0:	bf00      	nop
 8010ad2:	3708      	adds	r7, #8
 8010ad4:	46bd      	mov	sp, r7
 8010ad6:	bd80      	pop	{r7, pc}

08010ad8 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     * getTFTCurrentLine function is never called and can be disregarded.
     *
     * @return In this default implementation, 0xFFFF is returned to signify "not
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
 8010ad8:	b480      	push	{r7}
 8010ada:	b083      	sub	sp, #12
 8010adc:	af00      	add	r7, sp, #0
 8010ade:	6078      	str	r0, [r7, #4]
    {
        return 0xFFFFu;
 8010ae0:	f64f 73ff 	movw	r3, #65535	; 0xffff
    }
 8010ae4:	4618      	mov	r0, r3
 8010ae6:	370c      	adds	r7, #12
 8010ae8:	46bd      	mov	sp, r7
 8010aea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010aee:	4770      	bx	lr

08010af0 <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 8010af0:	b580      	push	{r7, lr}
 8010af2:	b082      	sub	sp, #8
 8010af4:	af00      	add	r7, sp, #0
 8010af6:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 8010af8:	687b      	ldr	r3, [r7, #4]
 8010afa:	685a      	ldr	r2, [r3, #4]
 8010afc:	687b      	ldr	r3, [r7, #4]
 8010afe:	685b      	ldr	r3, [r3, #4]
 8010b00:	681b      	ldr	r3, [r3, #0]
 8010b02:	3318      	adds	r3, #24
 8010b04:	681b      	ldr	r3, [r3, #0]
 8010b06:	4610      	mov	r0, r2
 8010b08:	4798      	blx	r3
 8010b0a:	4603      	mov	r3, r0
    }
 8010b0c:	4618      	mov	r0, r3
 8010b0e:	3708      	adds	r7, #8
 8010b10:	46bd      	mov	sp, r7
 8010b12:	bd80      	pop	{r7, pc}

08010b14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 8010b14:	b480      	push	{r7}
 8010b16:	b085      	sub	sp, #20
 8010b18:	af00      	add	r7, sp, #0
 8010b1a:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 8010b1c:	687b      	ldr	r3, [r7, #4]
 8010b1e:	f893 2078 	ldrb.w	r2, [r3, #120]	; 0x78
 8010b22:	687b      	ldr	r3, [r7, #4]
 8010b24:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8010b28:	429a      	cmp	r2, r3
 8010b2a:	d011      	beq.n	8010b50 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 8010b2c:	4b14      	ldr	r3, [pc, #80]	; (8010b80 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 8010b2e:	781b      	ldrb	r3, [r3, #0]
 8010b30:	2b00      	cmp	r3, #0
 8010b32:	d11e      	bne.n	8010b72 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 8010b34:	4b13      	ldr	r3, [pc, #76]	; (8010b84 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 8010b36:	881b      	ldrh	r3, [r3, #0]
 8010b38:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8010b3a:	4b13      	ldr	r3, [pc, #76]	; (8010b88 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8010b3c:	881a      	ldrh	r2, [r3, #0]
 8010b3e:	4b11      	ldr	r3, [pc, #68]	; (8010b84 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 8010b40:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 8010b42:	4a11      	ldr	r2, [pc, #68]	; (8010b88 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8010b44:	89bb      	ldrh	r3, [r7, #12]
 8010b46:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 8010b48:	4b0d      	ldr	r3, [pc, #52]	; (8010b80 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 8010b4a:	2201      	movs	r2, #1
 8010b4c:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 8010b4e:	e010      	b.n	8010b72 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 8010b50:	4b0b      	ldr	r3, [pc, #44]	; (8010b80 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 8010b52:	781b      	ldrb	r3, [r3, #0]
 8010b54:	2b00      	cmp	r3, #0
 8010b56:	d00c      	beq.n	8010b72 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 8010b58:	4b0a      	ldr	r3, [pc, #40]	; (8010b84 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 8010b5a:	881b      	ldrh	r3, [r3, #0]
 8010b5c:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8010b5e:	4b0a      	ldr	r3, [pc, #40]	; (8010b88 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8010b60:	881a      	ldrh	r2, [r3, #0]
 8010b62:	4b08      	ldr	r3, [pc, #32]	; (8010b84 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 8010b64:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 8010b66:	4a08      	ldr	r2, [pc, #32]	; (8010b88 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8010b68:	89fb      	ldrh	r3, [r7, #14]
 8010b6a:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 8010b6c:	4b04      	ldr	r3, [pc, #16]	; (8010b80 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 8010b6e:	2200      	movs	r2, #0
 8010b70:	701a      	strb	r2, [r3, #0]
    }
 8010b72:	bf00      	nop
 8010b74:	3714      	adds	r7, #20
 8010b76:	46bd      	mov	sp, r7
 8010b78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010b7c:	4770      	bx	lr
 8010b7e:	bf00      	nop
 8010b80:	20002320 	.word	0x20002320
 8010b84:	2000231e 	.word	0x2000231e
 8010b88:	2000231c 	.word	0x2000231c

08010b8c <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Invalidate D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
 8010b8c:	b480      	push	{r7}
 8010b8e:	b083      	sub	sp, #12
 8010b90:	af00      	add	r7, sp, #0
 8010b92:	6078      	str	r0, [r7, #4]
    {
    }
 8010b94:	bf00      	nop
 8010b96:	370c      	adds	r7, #12
 8010b98:	46bd      	mov	sp, r7
 8010b9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010b9e:	4770      	bx	lr

08010ba0 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Flush D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
 8010ba0:	b480      	push	{r7}
 8010ba2:	b083      	sub	sp, #12
 8010ba4:	af00      	add	r7, sp, #0
 8010ba6:	6078      	str	r0, [r7, #4]
    {
    }
 8010ba8:	bf00      	nop
 8010baa:	370c      	adds	r7, #12
 8010bac:	46bd      	mov	sp, r7
 8010bae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010bb2:	4770      	bx	lr

08010bb4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 8010bb4:	b580      	push	{r7, lr}
 8010bb6:	b082      	sub	sp, #8
 8010bb8:	af00      	add	r7, sp, #0
 8010bba:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 8010bbc:	687b      	ldr	r3, [r7, #4]
 8010bbe:	4618      	mov	r0, r3
 8010bc0:	f002 f9de 	bl	8012f80 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 8010bc4:	bf00      	nop
 8010bc6:	3708      	adds	r7, #8
 8010bc8:	46bd      	mov	sp, r7
 8010bca:	bd80      	pop	{r7, pc}

08010bcc <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 8010bcc:	b580      	push	{r7, lr}
 8010bce:	b082      	sub	sp, #8
 8010bd0:	af00      	add	r7, sp, #0
 8010bd2:	6078      	str	r0, [r7, #4]
 8010bd4:	4a05      	ldr	r2, [pc, #20]	; (8010bec <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 8010bd6:	687b      	ldr	r3, [r7, #4]
 8010bd8:	601a      	str	r2, [r3, #0]
 8010bda:	687b      	ldr	r3, [r7, #4]
 8010bdc:	4618      	mov	r0, r3
 8010bde:	f7ff fe79 	bl	80108d4 <_ZN8touchgfx3HALD1Ev>
 8010be2:	687b      	ldr	r3, [r7, #4]
 8010be4:	4618      	mov	r0, r3
 8010be6:	3708      	adds	r7, #8
 8010be8:	46bd      	mov	sp, r7
 8010bea:	bd80      	pop	{r7, pc}
 8010bec:	0802ea2c 	.word	0x0802ea2c

08010bf0 <_ZN20TouchGFXGeneratedHALD0Ev>:
 8010bf0:	b580      	push	{r7, lr}
 8010bf2:	b082      	sub	sp, #8
 8010bf4:	af00      	add	r7, sp, #0
 8010bf6:	6078      	str	r0, [r7, #4]
 8010bf8:	6878      	ldr	r0, [r7, #4]
 8010bfa:	f7ff ffe7 	bl	8010bcc <_ZN20TouchGFXGeneratedHALD1Ev>
 8010bfe:	217c      	movs	r1, #124	; 0x7c
 8010c00:	6878      	ldr	r0, [r7, #4]
 8010c02:	f019 fb04 	bl	802a20e <_ZdlPvj>
 8010c06:	687b      	ldr	r3, [r7, #4]
 8010c08:	4618      	mov	r0, r3
 8010c0a:	3708      	adds	r7, #8
 8010c0c:	46bd      	mov	sp, r7
 8010c0e:	bd80      	pop	{r7, pc}

08010c10 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 8010c10:	b580      	push	{r7, lr}
 8010c12:	b082      	sub	sp, #8
 8010c14:	af00      	add	r7, sp, #0
 8010c16:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 8010c18:	687b      	ldr	r3, [r7, #4]
 8010c1a:	4618      	mov	r0, r3
 8010c1c:	f7ff ffca 	bl	8010bb4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 8010c20:	bf00      	nop
 8010c22:	3708      	adds	r7, #8
 8010c24:	46bd      	mov	sp, r7
 8010c26:	bd80      	pop	{r7, pc}

08010c28 <_ZN11TouchGFXHAL10initializeEv>:
 */
//#warning "A user must call touchgfx::startNewTransfer(); once touchgfxDisplayDriverTransmitBlock() has succesfully sent a block."
//#warning "A user must implement C-methods touchgfxDisplayDriverTransmitActive() and touchgfxDisplayDriverTransmitBlock() used by the Partial Framebuffer Strategy."

void TouchGFXHAL::initialize()
{
 8010c28:	b580      	push	{r7, lr}
 8010c2a:	b082      	sub	sp, #8
 8010c2c:	af00      	add	r7, sp, #0
 8010c2e:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8010c30:	687b      	ldr	r3, [r7, #4]
 8010c32:	4618      	mov	r0, r3
 8010c34:	f000 ffba 	bl	8011bac <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 8010c38:	bf00      	nop
 8010c3a:	3708      	adds	r7, #8
 8010c3c:	46bd      	mov	sp, r7
 8010c3e:	bd80      	pop	{r7, pc}

08010c40 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 8010c40:	b580      	push	{r7, lr}
 8010c42:	b082      	sub	sp, #8
 8010c44:	af00      	add	r7, sp, #0
 8010c46:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8010c48:	687b      	ldr	r3, [r7, #4]
 8010c4a:	4618      	mov	r0, r3
 8010c4c:	f001 f82c 	bl	8011ca8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 8010c50:	4603      	mov	r3, r0
}
 8010c52:	4618      	mov	r0, r3
 8010c54:	3708      	adds	r7, #8
 8010c56:	46bd      	mov	sp, r7
 8010c58:	bd80      	pop	{r7, pc}

08010c5a <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 8010c5a:	b580      	push	{r7, lr}
 8010c5c:	b082      	sub	sp, #8
 8010c5e:	af00      	add	r7, sp, #0
 8010c60:	6078      	str	r0, [r7, #4]
 8010c62:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8010c64:	687b      	ldr	r3, [r7, #4]
 8010c66:	6839      	ldr	r1, [r7, #0]
 8010c68:	4618      	mov	r0, r3
 8010c6a:	f001 f828 	bl	8011cbe <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 8010c6e:	bf00      	nop
 8010c70:	3708      	adds	r7, #8
 8010c72:	46bd      	mov	sp, r7
 8010c74:	bd80      	pop	{r7, pc}

08010c76 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8010c76:	b580      	push	{r7, lr}
 8010c78:	b082      	sub	sp, #8
 8010c7a:	af00      	add	r7, sp, #0
 8010c7c:	6078      	str	r0, [r7, #4]
 8010c7e:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8010c80:	687b      	ldr	r3, [r7, #4]
 8010c82:	6839      	ldr	r1, [r7, #0]
 8010c84:	4618      	mov	r0, r3
 8010c86:	f001 f825 	bl	8011cd4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 8010c8a:	bf00      	nop
 8010c8c:	3708      	adds	r7, #8
 8010c8e:	46bd      	mov	sp, r7
 8010c90:	bd80      	pop	{r7, pc}

08010c92 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 8010c92:	b580      	push	{r7, lr}
 8010c94:	b084      	sub	sp, #16
 8010c96:	af00      	add	r7, sp, #0
 8010c98:	60f8      	str	r0, [r7, #12]
 8010c9a:	60b9      	str	r1, [r7, #8]
 8010c9c:	607a      	str	r2, [r7, #4]
 8010c9e:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 8010ca0:	68f8      	ldr	r0, [r7, #12]
 8010ca2:	683b      	ldr	r3, [r7, #0]
 8010ca4:	687a      	ldr	r2, [r7, #4]
 8010ca6:	68b9      	ldr	r1, [r7, #8]
 8010ca8:	f001 f857 	bl	8011d5a <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 8010cac:	4603      	mov	r3, r0
}
 8010cae:	4618      	mov	r0, r3
 8010cb0:	3710      	adds	r7, #16
 8010cb2:	46bd      	mov	sp, r7
 8010cb4:	bd80      	pop	{r7, pc}

08010cb6 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 8010cb6:	b580      	push	{r7, lr}
 8010cb8:	b082      	sub	sp, #8
 8010cba:	af00      	add	r7, sp, #0
 8010cbc:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8010cbe:	687b      	ldr	r3, [r7, #4]
 8010cc0:	4618      	mov	r0, r3
 8010cc2:	f000 ffa3 	bl	8011c0c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 8010cc6:	bf00      	nop
 8010cc8:	3708      	adds	r7, #8
 8010cca:	46bd      	mov	sp, r7
 8010ccc:	bd80      	pop	{r7, pc}

08010cce <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 8010cce:	b580      	push	{r7, lr}
 8010cd0:	b082      	sub	sp, #8
 8010cd2:	af00      	add	r7, sp, #0
 8010cd4:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8010cd6:	687b      	ldr	r3, [r7, #4]
 8010cd8:	4618      	mov	r0, r3
 8010cda:	f000 ffa1 	bl	8011c20 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 8010cde:	bf00      	nop
 8010ce0:	3708      	adds	r7, #8
 8010ce2:	46bd      	mov	sp, r7
 8010ce4:	bd80      	pop	{r7, pc}

08010ce6 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 8010ce6:	b580      	push	{r7, lr}
 8010ce8:	b082      	sub	sp, #8
 8010cea:	af00      	add	r7, sp, #0
 8010cec:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8010cee:	687b      	ldr	r3, [r7, #4]
 8010cf0:	4618      	mov	r0, r3
 8010cf2:	f000 ff9f 	bl	8011c34 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 8010cf6:	bf00      	nop
 8010cf8:	3708      	adds	r7, #8
 8010cfa:	46bd      	mov	sp, r7
 8010cfc:	bd80      	pop	{r7, pc}

08010cfe <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 8010cfe:	b580      	push	{r7, lr}
 8010d00:	b082      	sub	sp, #8
 8010d02:	af00      	add	r7, sp, #0
 8010d04:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8010d06:	687b      	ldr	r3, [r7, #4]
 8010d08:	4618      	mov	r0, r3
 8010d0a:	f000 ff9d 	bl	8011c48 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 8010d0e:	bf00      	nop
 8010d10:	3708      	adds	r7, #8
 8010d12:	46bd      	mov	sp, r7
 8010d14:	bd80      	pop	{r7, pc}

08010d16 <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 8010d16:	b580      	push	{r7, lr}
 8010d18:	b082      	sub	sp, #8
 8010d1a:	af00      	add	r7, sp, #0
 8010d1c:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 8010d1e:	687b      	ldr	r3, [r7, #4]
 8010d20:	4618      	mov	r0, r3
 8010d22:	f000 ff9b 	bl	8011c5c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 8010d26:	4603      	mov	r3, r0
}
 8010d28:	4618      	mov	r0, r3
 8010d2a:	3708      	adds	r7, #8
 8010d2c:	46bd      	mov	sp, r7
 8010d2e:	bd80      	pop	{r7, pc}

08010d30 <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 8010d30:	b580      	push	{r7, lr}
 8010d32:	b082      	sub	sp, #8
 8010d34:	af00      	add	r7, sp, #0
 8010d36:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 8010d38:	687b      	ldr	r3, [r7, #4]
 8010d3a:	4618      	mov	r0, r3
 8010d3c:	f000 ff9b 	bl	8011c76 <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 8010d40:	bf00      	nop
 8010d42:	3708      	adds	r7, #8
 8010d44:	46bd      	mov	sp, r7
 8010d46:	bd80      	pop	{r7, pc}

08010d48 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8010d48:	b580      	push	{r7, lr}
 8010d4a:	b082      	sub	sp, #8
 8010d4c:	af00      	add	r7, sp, #0
 8010d4e:	6078      	str	r0, [r7, #4]
 8010d50:	4a05      	ldr	r2, [pc, #20]	; (8010d68 <_ZN11TouchGFXHALD1Ev+0x20>)
 8010d52:	687b      	ldr	r3, [r7, #4]
 8010d54:	601a      	str	r2, [r3, #0]
 8010d56:	687b      	ldr	r3, [r7, #4]
 8010d58:	4618      	mov	r0, r3
 8010d5a:	f7ff ff37 	bl	8010bcc <_ZN20TouchGFXGeneratedHALD1Ev>
 8010d5e:	687b      	ldr	r3, [r7, #4]
 8010d60:	4618      	mov	r0, r3
 8010d62:	3708      	adds	r7, #8
 8010d64:	46bd      	mov	sp, r7
 8010d66:	bd80      	pop	{r7, pc}
 8010d68:	0802e7e0 	.word	0x0802e7e0

08010d6c <_ZN11TouchGFXHALD0Ev>:
 8010d6c:	b580      	push	{r7, lr}
 8010d6e:	b082      	sub	sp, #8
 8010d70:	af00      	add	r7, sp, #0
 8010d72:	6078      	str	r0, [r7, #4]
 8010d74:	6878      	ldr	r0, [r7, #4]
 8010d76:	f7ff ffe7 	bl	8010d48 <_ZN11TouchGFXHALD1Ev>
 8010d7a:	217c      	movs	r1, #124	; 0x7c
 8010d7c:	6878      	ldr	r0, [r7, #4]
 8010d7e:	f019 fa46 	bl	802a20e <_ZdlPvj>
 8010d82:	687b      	ldr	r3, [r7, #4]
 8010d84:	4618      	mov	r0, r3
 8010d86:	3708      	adds	r7, #8
 8010d88:	46bd      	mov	sp, r7
 8010d8a:	bd80      	pop	{r7, pc}

08010d8c <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 8010d8c:	b480      	push	{r7}
 8010d8e:	af00      	add	r7, sp, #0
    fb_sem = 0;
 8010d90:	4b05      	ldr	r3, [pc, #20]	; (8010da8 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 8010d92:	2200      	movs	r2, #0
 8010d94:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 8010d96:	4b05      	ldr	r3, [pc, #20]	; (8010dac <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 8010d98:	2200      	movs	r2, #0
 8010d9a:	601a      	str	r2, [r3, #0]
}
 8010d9c:	bf00      	nop
 8010d9e:	46bd      	mov	sp, r7
 8010da0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010da4:	4770      	bx	lr
 8010da6:	bf00      	nop
 8010da8:	20000520 	.word	0x20000520
 8010dac:	20000524 	.word	0x20000524

08010db0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 8010db0:	b480      	push	{r7}
 8010db2:	af00      	add	r7, sp, #0
    while (fb_sem);
 8010db4:	bf00      	nop
 8010db6:	4b08      	ldr	r3, [pc, #32]	; (8010dd8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 8010db8:	681b      	ldr	r3, [r3, #0]
 8010dba:	2b00      	cmp	r3, #0
 8010dbc:	bf14      	ite	ne
 8010dbe:	2301      	movne	r3, #1
 8010dc0:	2300      	moveq	r3, #0
 8010dc2:	b2db      	uxtb	r3, r3
 8010dc4:	2b00      	cmp	r3, #0
 8010dc6:	d1f6      	bne.n	8010db6 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 8010dc8:	4b03      	ldr	r3, [pc, #12]	; (8010dd8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 8010dca:	2201      	movs	r2, #1
 8010dcc:	601a      	str	r2, [r3, #0]
}
 8010dce:	bf00      	nop
 8010dd0:	46bd      	mov	sp, r7
 8010dd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010dd6:	4770      	bx	lr
 8010dd8:	20000520 	.word	0x20000520

08010ddc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 8010ddc:	b480      	push	{r7}
 8010dde:	af00      	add	r7, sp, #0
    fb_sem = 0;
 8010de0:	4b03      	ldr	r3, [pc, #12]	; (8010df0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 8010de2:	2200      	movs	r2, #0
 8010de4:	601a      	str	r2, [r3, #0]
}
 8010de6:	bf00      	nop
 8010de8:	46bd      	mov	sp, r7
 8010dea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010dee:	4770      	bx	lr
 8010df0:	20000520 	.word	0x20000520

08010df4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 8010df4:	b480      	push	{r7}
 8010df6:	af00      	add	r7, sp, #0
    fb_sem = 1;
 8010df8:	4b03      	ldr	r3, [pc, #12]	; (8010e08 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 8010dfa:	2201      	movs	r2, #1
 8010dfc:	601a      	str	r2, [r3, #0]
}
 8010dfe:	bf00      	nop
 8010e00:	46bd      	mov	sp, r7
 8010e02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e06:	4770      	bx	lr
 8010e08:	20000520 	.word	0x20000520

08010e0c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 8010e0c:	b480      	push	{r7}
 8010e0e:	af00      	add	r7, sp, #0
    fb_sem = 0;
 8010e10:	4b03      	ldr	r3, [pc, #12]	; (8010e20 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 8010e12:	2200      	movs	r2, #0
 8010e14:	601a      	str	r2, [r3, #0]
}
 8010e16:	bf00      	nop
 8010e18:	46bd      	mov	sp, r7
 8010e1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e1e:	4770      	bx	lr
 8010e20:	20000520 	.word	0x20000520

08010e24 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 8010e24:	b480      	push	{r7}
 8010e26:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 8010e28:	4b03      	ldr	r3, [pc, #12]	; (8010e38 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8010e2a:	2201      	movs	r2, #1
 8010e2c:	601a      	str	r2, [r3, #0]
}
 8010e2e:	bf00      	nop
 8010e30:	46bd      	mov	sp, r7
 8010e32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e36:	4770      	bx	lr
 8010e38:	20000524 	.word	0x20000524

08010e3c <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 8010e3c:	b480      	push	{r7}
 8010e3e:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 8010e40:	4b03      	ldr	r3, [pc, #12]	; (8010e50 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 8010e42:	2200      	movs	r2, #0
 8010e44:	601a      	str	r2, [r3, #0]
}
 8010e46:	bf00      	nop
 8010e48:	46bd      	mov	sp, r7
 8010e4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e4e:	4770      	bx	lr
 8010e50:	20000524 	.word	0x20000524

08010e54 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 8010e54:	b480      	push	{r7}
 8010e56:	af00      	add	r7, sp, #0
    return vsync_sem;
 8010e58:	4b05      	ldr	r3, [pc, #20]	; (8010e70 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 8010e5a:	681b      	ldr	r3, [r3, #0]
 8010e5c:	2b00      	cmp	r3, #0
 8010e5e:	bf14      	ite	ne
 8010e60:	2301      	movne	r3, #1
 8010e62:	2300      	moveq	r3, #0
 8010e64:	b2db      	uxtb	r3, r3
}
 8010e66:	4618      	mov	r0, r3
 8010e68:	46bd      	mov	sp, r7
 8010e6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e6e:	4770      	bx	lr
 8010e70:	20000524 	.word	0x20000524

08010e74 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 8010e74:	b580      	push	{r7, lr}
 8010e76:	af00      	add	r7, sp, #0
    if (vsync_sem)
 8010e78:	4b0a      	ldr	r3, [pc, #40]	; (8010ea4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 8010e7a:	681b      	ldr	r3, [r3, #0]
 8010e7c:	2b00      	cmp	r3, #0
 8010e7e:	bf14      	ite	ne
 8010e80:	2301      	movne	r3, #1
 8010e82:	2300      	moveq	r3, #0
 8010e84:	b2db      	uxtb	r3, r3
 8010e86:	2b00      	cmp	r3, #0
 8010e88:	d00a      	beq.n	8010ea0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 8010e8a:	4b06      	ldr	r3, [pc, #24]	; (8010ea4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 8010e8c:	2200      	movs	r2, #0
 8010e8e:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 8010e90:	f7f9 fdb0 	bl	800a9f4 <_ZN8touchgfx3HAL11getInstanceEv>
 8010e94:	4603      	mov	r3, r0
 8010e96:	681a      	ldr	r2, [r3, #0]
 8010e98:	3270      	adds	r2, #112	; 0x70
 8010e9a:	6812      	ldr	r2, [r2, #0]
 8010e9c:	4618      	mov	r0, r3
 8010e9e:	4790      	blx	r2
    }
}
 8010ea0:	bf00      	nop
 8010ea2:	bd80      	pop	{r7, pc}
 8010ea4:	20000524 	.word	0x20000524

08010ea8 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 8010ea8:	b480      	push	{r7}
 8010eaa:	b083      	sub	sp, #12
 8010eac:	af00      	add	r7, sp, #0
 8010eae:	6078      	str	r0, [r7, #4]
    {
 8010eb0:	4a04      	ldr	r2, [pc, #16]	; (8010ec4 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 8010eb2:	687b      	ldr	r3, [r7, #4]
 8010eb4:	601a      	str	r2, [r3, #0]
    }
 8010eb6:	687b      	ldr	r3, [r7, #4]
 8010eb8:	4618      	mov	r0, r3
 8010eba:	370c      	adds	r7, #12
 8010ebc:	46bd      	mov	sp, r7
 8010ebe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ec2:	4770      	bx	lr
 8010ec4:	0802e908 	.word	0x0802e908

08010ec8 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 8010ec8:	b580      	push	{r7, lr}
 8010eca:	b082      	sub	sp, #8
 8010ecc:	af00      	add	r7, sp, #0
 8010ece:	6078      	str	r0, [r7, #4]
    }
 8010ed0:	6878      	ldr	r0, [r7, #4]
 8010ed2:	f7ff ffe9 	bl	8010ea8 <_ZN8touchgfx9DMA_QueueD1Ev>
 8010ed6:	2104      	movs	r1, #4
 8010ed8:	6878      	ldr	r0, [r7, #4]
 8010eda:	f019 f998 	bl	802a20e <_ZdlPvj>
 8010ede:	687b      	ldr	r3, [r7, #4]
 8010ee0:	4618      	mov	r0, r3
 8010ee2:	3708      	adds	r7, #8
 8010ee4:	46bd      	mov	sp, r7
 8010ee6:	bd80      	pop	{r7, pc}

08010ee8 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    {
        waitForFrameBufferSemaphore();
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
 8010ee8:	b480      	push	{r7}
 8010eea:	b083      	sub	sp, #12
 8010eec:	af00      	add	r7, sp, #0
 8010eee:	6078      	str	r0, [r7, #4]
    {
    }
 8010ef0:	bf00      	nop
 8010ef2:	370c      	adds	r7, #12
 8010ef4:	46bd      	mov	sp, r7
 8010ef6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010efa:	4770      	bx	lr

08010efc <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA_Interface implementation. As
     * default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
 8010efc:	b480      	push	{r7}
 8010efe:	b083      	sub	sp, #12
 8010f00:	af00      	add	r7, sp, #0
 8010f02:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 8010f04:	2300      	movs	r3, #0
    }
 8010f06:	4618      	mov	r0, r3
 8010f08:	370c      	adds	r7, #12
 8010f0a:	46bd      	mov	sp, r7
 8010f0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f10:	4770      	bx	lr
	...

08010f14 <_ZN8touchgfx13DMA_InterfaceD1Ev>:

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 8010f14:	b480      	push	{r7}
 8010f16:	b083      	sub	sp, #12
 8010f18:	af00      	add	r7, sp, #0
 8010f1a:	6078      	str	r0, [r7, #4]
    {
 8010f1c:	4a04      	ldr	r2, [pc, #16]	; (8010f30 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 8010f1e:	687b      	ldr	r3, [r7, #4]
 8010f20:	601a      	str	r2, [r3, #0]
    }
 8010f22:	687b      	ldr	r3, [r7, #4]
 8010f24:	4618      	mov	r0, r3
 8010f26:	370c      	adds	r7, #12
 8010f28:	46bd      	mov	sp, r7
 8010f2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f2e:	4770      	bx	lr
 8010f30:	0802ef5c 	.word	0x0802ef5c

08010f34 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 8010f34:	b580      	push	{r7, lr}
 8010f36:	b082      	sub	sp, #8
 8010f38:	af00      	add	r7, sp, #0
 8010f3a:	6078      	str	r0, [r7, #4]
    }
 8010f3c:	6878      	ldr	r0, [r7, #4]
 8010f3e:	f7ff ffe9 	bl	8010f14 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 8010f42:	210c      	movs	r1, #12
 8010f44:	6878      	ldr	r0, [r7, #4]
 8010f46:	f019 f962 	bl	802a20e <_ZdlPvj>
 8010f4a:	687b      	ldr	r3, [r7, #4]
 8010f4c:	4618      	mov	r0, r3
 8010f4e:	3708      	adds	r7, #8
 8010f50:	46bd      	mov	sp, r7
 8010f52:	bd80      	pop	{r7, pc}

08010f54 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 8010f54:	b480      	push	{r7}
 8010f56:	b083      	sub	sp, #12
 8010f58:	af00      	add	r7, sp, #0
 8010f5a:	6078      	str	r0, [r7, #4]
 8010f5c:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8010f5e:	4a09      	ldr	r2, [pc, #36]	; (8010f84 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 8010f60:	687b      	ldr	r3, [r7, #4]
 8010f62:	601a      	str	r2, [r3, #0]
 8010f64:	687b      	ldr	r3, [r7, #4]
 8010f66:	683a      	ldr	r2, [r7, #0]
 8010f68:	605a      	str	r2, [r3, #4]
 8010f6a:	687b      	ldr	r3, [r7, #4]
 8010f6c:	2200      	movs	r2, #0
 8010f6e:	721a      	strb	r2, [r3, #8]
 8010f70:	687b      	ldr	r3, [r7, #4]
 8010f72:	2200      	movs	r2, #0
 8010f74:	725a      	strb	r2, [r3, #9]
    {
    }
 8010f76:	687b      	ldr	r3, [r7, #4]
 8010f78:	4618      	mov	r0, r3
 8010f7a:	370c      	adds	r7, #12
 8010f7c:	46bd      	mov	sp, r7
 8010f7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f82:	4770      	bx	lr
 8010f84:	0802ef5c 	.word	0x0802ef5c

08010f88 <_ZN8STM32DMA18signalDMAInterruptEv>:
    /**
     * @fn virtual void STM32DMA::signalDMAInterrupt();
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
 8010f88:	b480      	push	{r7}
 8010f8a:	b083      	sub	sp, #12
 8010f8c:	af00      	add	r7, sp, #0
 8010f8e:	6078      	str	r0, [r7, #4]
    {
    }
 8010f90:	bf00      	nop
 8010f92:	370c      	adds	r7, #12
 8010f94:	46bd      	mov	sp, r7
 8010f96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f9a:	4770      	bx	lr

08010f9c <_ZN8STM32DMA5flushEv>:
     * @fn virtual void STM32DMA::flush();
     *
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
 8010f9c:	b480      	push	{r7}
 8010f9e:	b083      	sub	sp, #12
 8010fa0:	af00      	add	r7, sp, #0
 8010fa2:	6078      	str	r0, [r7, #4]
    {
    }
 8010fa4:	bf00      	nop
 8010fa6:	370c      	adds	r7, #12
 8010fa8:	46bd      	mov	sp, r7
 8010faa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010fae:	4770      	bx	lr

08010fb0 <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 8010fb0:	b580      	push	{r7, lr}
 8010fb2:	b082      	sub	sp, #8
 8010fb4:	af00      	add	r7, sp, #0
 8010fb6:	6078      	str	r0, [r7, #4]
 8010fb8:	687b      	ldr	r3, [r7, #4]
 8010fba:	330c      	adds	r3, #12
 8010fbc:	4618      	mov	r0, r3
 8010fbe:	f7fc f8df 	bl	800d180 <_ZN8touchgfx9colortypeC1Ev>
 8010fc2:	687b      	ldr	r3, [r7, #4]
 8010fc4:	4618      	mov	r0, r3
 8010fc6:	3708      	adds	r7, #8
 8010fc8:	46bd      	mov	sp, r7
 8010fca:	bd80      	pop	{r7, pc}

08010fcc <_ZN8STM32DMAC1Ev>:
  */

#include <STM32DMA.hpp>
#include <assert.h>

STM32DMA::STM32DMA()
 8010fcc:	b580      	push	{r7, lr}
 8010fce:	b082      	sub	sp, #8
 8010fd0:	af00      	add	r7, sp, #0
 8010fd2:	6078      	str	r0, [r7, #4]
    : DMA_Interface(q), q(&b, 1)
 8010fd4:	687a      	ldr	r2, [r7, #4]
 8010fd6:	687b      	ldr	r3, [r7, #4]
 8010fd8:	330c      	adds	r3, #12
 8010fda:	4619      	mov	r1, r3
 8010fdc:	4610      	mov	r0, r2
 8010fde:	f7ff ffb9 	bl	8010f54 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 8010fe2:	4a0b      	ldr	r2, [pc, #44]	; (8011010 <_ZN8STM32DMAC1Ev+0x44>)
 8010fe4:	687b      	ldr	r3, [r7, #4]
 8010fe6:	601a      	str	r2, [r3, #0]
 8010fe8:	687b      	ldr	r3, [r7, #4]
 8010fea:	f103 000c 	add.w	r0, r3, #12
 8010fee:	687b      	ldr	r3, [r7, #4]
 8010ff0:	3320      	adds	r3, #32
 8010ff2:	2201      	movs	r2, #1
 8010ff4:	4619      	mov	r1, r3
 8010ff6:	f002 feb9 	bl	8013d6c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8010ffa:	687b      	ldr	r3, [r7, #4]
 8010ffc:	3320      	adds	r3, #32
 8010ffe:	4618      	mov	r0, r3
 8011000:	f7ff ffd6 	bl	8010fb0 <_ZN8touchgfx6BlitOpC1Ev>
{
}
 8011004:	687b      	ldr	r3, [r7, #4]
 8011006:	4618      	mov	r0, r3
 8011008:	3708      	adds	r7, #8
 801100a:	46bd      	mov	sp, r7
 801100c:	bd80      	pop	{r7, pc}
 801100e:	bf00      	nop
 8011010:	0802e8b8 	.word	0x0802e8b8

08011014 <_ZN8STM32DMA11getBlitCapsEv>:

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
 8011014:	b480      	push	{r7}
 8011016:	b083      	sub	sp, #12
 8011018:	af00      	add	r7, sp, #0
 801101a:	6078      	str	r0, [r7, #4]
    return static_cast<touchgfx::BlitOperations>(0);
 801101c:	2300      	movs	r3, #0
}
 801101e:	4618      	mov	r0, r3
 8011020:	370c      	adds	r7, #12
 8011022:	46bd      	mov	sp, r7
 8011024:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011028:	4770      	bx	lr
	...

0801102c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 801102c:	b580      	push	{r7, lr}
 801102e:	b082      	sub	sp, #8
 8011030:	af00      	add	r7, sp, #0
 8011032:	6078      	str	r0, [r7, #4]
 8011034:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 8011036:	4b03      	ldr	r3, [pc, #12]	; (8011044 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8011038:	4a03      	ldr	r2, [pc, #12]	; (8011048 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 801103a:	2122      	movs	r1, #34	; 0x22
 801103c:	4803      	ldr	r0, [pc, #12]	; (801104c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 801103e:	f01a f8d7 	bl	802b1f0 <__assert_func>
 8011042:	bf00      	nop
 8011044:	0802d424 	.word	0x0802d424
 8011048:	0802d448 	.word	0x0802d448
 801104c:	0802d488 	.word	0x0802d488

08011050 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8011050:	b580      	push	{r7, lr}
 8011052:	b082      	sub	sp, #8
 8011054:	af00      	add	r7, sp, #0
 8011056:	6078      	str	r0, [r7, #4]
 8011058:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 801105a:	4b03      	ldr	r3, [pc, #12]	; (8011068 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 801105c:	4a03      	ldr	r2, [pc, #12]	; (801106c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 801105e:	2127      	movs	r1, #39	; 0x27
 8011060:	4803      	ldr	r0, [pc, #12]	; (8011070 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 8011062:	f01a f8c5 	bl	802b1f0 <__assert_func>
 8011066:	bf00      	nop
 8011068:	0802d424 	.word	0x0802d424
 801106c:	0802d4b4 	.word	0x0802d4b4
 8011070:	0802d488 	.word	0x0802d488

08011074 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8011074:	b580      	push	{r7, lr}
 8011076:	b082      	sub	sp, #8
 8011078:	af00      	add	r7, sp, #0
 801107a:	6078      	str	r0, [r7, #4]
 801107c:	4a08      	ldr	r2, [pc, #32]	; (80110a0 <_ZN8STM32DMAD1Ev+0x2c>)
 801107e:	687b      	ldr	r3, [r7, #4]
 8011080:	601a      	str	r2, [r3, #0]
 8011082:	687b      	ldr	r3, [r7, #4]
 8011084:	330c      	adds	r3, #12
 8011086:	4618      	mov	r0, r3
 8011088:	f000 f81c 	bl	80110c4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 801108c:	687b      	ldr	r3, [r7, #4]
 801108e:	4618      	mov	r0, r3
 8011090:	f7ff ff40 	bl	8010f14 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 8011094:	687b      	ldr	r3, [r7, #4]
 8011096:	4618      	mov	r0, r3
 8011098:	3708      	adds	r7, #8
 801109a:	46bd      	mov	sp, r7
 801109c:	bd80      	pop	{r7, pc}
 801109e:	bf00      	nop
 80110a0:	0802e8b8 	.word	0x0802e8b8

080110a4 <_ZN8STM32DMAD0Ev>:
 80110a4:	b580      	push	{r7, lr}
 80110a6:	b082      	sub	sp, #8
 80110a8:	af00      	add	r7, sp, #0
 80110aa:	6078      	str	r0, [r7, #4]
 80110ac:	6878      	ldr	r0, [r7, #4]
 80110ae:	f7ff ffe1 	bl	8011074 <_ZN8STM32DMAD1Ev>
 80110b2:	2144      	movs	r1, #68	; 0x44
 80110b4:	6878      	ldr	r0, [r7, #4]
 80110b6:	f019 f8aa 	bl	802a20e <_ZdlPvj>
 80110ba:	687b      	ldr	r3, [r7, #4]
 80110bc:	4618      	mov	r0, r3
 80110be:	3708      	adds	r7, #8
 80110c0:	46bd      	mov	sp, r7
 80110c2:	bd80      	pop	{r7, pc}

080110c4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 80110c4:	b580      	push	{r7, lr}
 80110c6:	b082      	sub	sp, #8
 80110c8:	af00      	add	r7, sp, #0
 80110ca:	6078      	str	r0, [r7, #4]
 80110cc:	4a05      	ldr	r2, [pc, #20]	; (80110e4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 80110ce:	687b      	ldr	r3, [r7, #4]
 80110d0:	601a      	str	r2, [r3, #0]
 80110d2:	687b      	ldr	r3, [r7, #4]
 80110d4:	4618      	mov	r0, r3
 80110d6:	f7ff fee7 	bl	8010ea8 <_ZN8touchgfx9DMA_QueueD1Ev>
 80110da:	687b      	ldr	r3, [r7, #4]
 80110dc:	4618      	mov	r0, r3
 80110de:	3708      	adds	r7, #8
 80110e0:	46bd      	mov	sp, r7
 80110e2:	bd80      	pop	{r7, pc}
 80110e4:	0802efac 	.word	0x0802efac

080110e8 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 80110e8:	b580      	push	{r7, lr}
 80110ea:	b082      	sub	sp, #8
 80110ec:	af00      	add	r7, sp, #0
 80110ee:	6078      	str	r0, [r7, #4]
 80110f0:	6878      	ldr	r0, [r7, #4]
 80110f2:	f7ff ffe7 	bl	80110c4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 80110f6:	2114      	movs	r1, #20
 80110f8:	6878      	ldr	r0, [r7, #4]
 80110fa:	f019 f888 	bl	802a20e <_ZdlPvj>
 80110fe:	687b      	ldr	r3, [r7, #4]
 8011100:	4618      	mov	r0, r3
 8011102:	3708      	adds	r7, #8
 8011104:	46bd      	mov	sp, r7
 8011106:	bd80      	pop	{r7, pc}

08011108 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 8011108:	b480      	push	{r7}
 801110a:	b083      	sub	sp, #12
 801110c:	af00      	add	r7, sp, #0
 801110e:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 8011110:	4a04      	ldr	r2, [pc, #16]	; (8011124 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 8011112:	687b      	ldr	r3, [r7, #4]
 8011114:	6013      	str	r3, [r2, #0]
    }
 8011116:	bf00      	nop
 8011118:	370c      	adds	r7, #12
 801111a:	46bd      	mov	sp, r7
 801111c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011120:	4770      	bx	lr
 8011122:	bf00      	nop
 8011124:	2000238c 	.word	0x2000238c

08011128 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 8011128:	b480      	push	{r7}
 801112a:	b085      	sub	sp, #20
 801112c:	af00      	add	r7, sp, #0
 801112e:	60f8      	str	r0, [r7, #12]
 8011130:	60b9      	str	r1, [r7, #8]
 8011132:	607a      	str	r2, [r7, #4]
 8011134:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8011136:	4a0b      	ldr	r2, [pc, #44]	; (8011164 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 8011138:	68fb      	ldr	r3, [r7, #12]
 801113a:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 801113c:	68fb      	ldr	r3, [r7, #12]
 801113e:	68ba      	ldr	r2, [r7, #8]
 8011140:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 8011142:	68fb      	ldr	r3, [r7, #12]
 8011144:	687a      	ldr	r2, [r7, #4]
 8011146:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 8011148:	68fb      	ldr	r3, [r7, #12]
 801114a:	683a      	ldr	r2, [r7, #0]
 801114c:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 801114e:	68fb      	ldr	r3, [r7, #12]
 8011150:	69ba      	ldr	r2, [r7, #24]
 8011152:	611a      	str	r2, [r3, #16]
    {
    }
 8011154:	68fb      	ldr	r3, [r7, #12]
 8011156:	4618      	mov	r0, r3
 8011158:	3714      	adds	r7, #20
 801115a:	46bd      	mov	sp, r7
 801115c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011160:	4770      	bx	lr
 8011162:	bf00      	nop
 8011164:	0802e9f0 	.word	0x0802e9f0

08011168 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 8011168:	b480      	push	{r7}
 801116a:	b083      	sub	sp, #12
 801116c:	af00      	add	r7, sp, #0
 801116e:	6078      	str	r0, [r7, #4]
    {
 8011170:	4a04      	ldr	r2, [pc, #16]	; (8011184 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 8011172:	687b      	ldr	r3, [r7, #4]
 8011174:	601a      	str	r2, [r3, #0]
    }
 8011176:	687b      	ldr	r3, [r7, #4]
 8011178:	4618      	mov	r0, r3
 801117a:	370c      	adds	r7, #12
 801117c:	46bd      	mov	sp, r7
 801117e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011182:	4770      	bx	lr
 8011184:	0802e9f0 	.word	0x0802e9f0

08011188 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 8011188:	b580      	push	{r7, lr}
 801118a:	b082      	sub	sp, #8
 801118c:	af00      	add	r7, sp, #0
 801118e:	6078      	str	r0, [r7, #4]
    }
 8011190:	6878      	ldr	r0, [r7, #4]
 8011192:	f7ff ffe9 	bl	8011168 <_ZN8touchgfx7MVPHeapD1Ev>
 8011196:	2114      	movs	r1, #20
 8011198:	6878      	ldr	r0, [r7, #4]
 801119a:	f019 f838 	bl	802a20e <_ZdlPvj>
 801119e:	687b      	ldr	r3, [r7, #4]
 80111a0:	4618      	mov	r0, r3
 80111a2:	3708      	adds	r7, #8
 80111a4:	46bd      	mov	sp, r7
 80111a6:	bd80      	pop	{r7, pc}

080111a8 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 80111a8:	b480      	push	{r7}
 80111aa:	b083      	sub	sp, #12
 80111ac:	af00      	add	r7, sp, #0
 80111ae:	6078      	str	r0, [r7, #4]
    {
 80111b0:	4a04      	ldr	r2, [pc, #16]	; (80111c4 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 80111b2:	687b      	ldr	r3, [r7, #4]
 80111b4:	601a      	str	r2, [r3, #0]
    }
 80111b6:	687b      	ldr	r3, [r7, #4]
 80111b8:	4618      	mov	r0, r3
 80111ba:	370c      	adds	r7, #12
 80111bc:	46bd      	mov	sp, r7
 80111be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80111c2:	4770      	bx	lr
 80111c4:	0802f7ac 	.word	0x0802f7ac

080111c8 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 80111c8:	b580      	push	{r7, lr}
 80111ca:	b082      	sub	sp, #8
 80111cc:	af00      	add	r7, sp, #0
 80111ce:	6078      	str	r0, [r7, #4]
    }
 80111d0:	6878      	ldr	r0, [r7, #4]
 80111d2:	f7ff ffe9 	bl	80111a8 <_ZN8touchgfx3LCDD1Ev>
 80111d6:	2108      	movs	r1, #8
 80111d8:	6878      	ldr	r0, [r7, #4]
 80111da:	f019 f818 	bl	802a20e <_ZdlPvj>
 80111de:	687b      	ldr	r3, [r7, #4]
 80111e0:	4618      	mov	r0, r3
 80111e2:	3708      	adds	r7, #8
 80111e4:	46bd      	mov	sp, r7
 80111e6:	bd80      	pop	{r7, pc}

080111e8 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 80111e8:	b480      	push	{r7}
 80111ea:	b083      	sub	sp, #12
 80111ec:	af00      	add	r7, sp, #0
 80111ee:	6078      	str	r0, [r7, #4]
            : startX(0),
 80111f0:	687b      	ldr	r3, [r7, #4]
 80111f2:	2200      	movs	r2, #0
 80111f4:	801a      	strh	r2, [r3, #0]
              startY(0),
 80111f6:	687b      	ldr	r3, [r7, #4]
 80111f8:	2200      	movs	r2, #0
 80111fa:	805a      	strh	r2, [r3, #2]
              downX(0),
 80111fc:	687b      	ldr	r3, [r7, #4]
 80111fe:	2200      	movs	r2, #0
 8011200:	809a      	strh	r2, [r3, #4]
              downY(0),
 8011202:	687b      	ldr	r3, [r7, #4]
 8011204:	2200      	movs	r2, #0
 8011206:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 8011208:	687b      	ldr	r3, [r7, #4]
 801120a:	2200      	movs	r2, #0
 801120c:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 801120e:	687b      	ldr	r3, [r7, #4]
 8011210:	2200      	movs	r2, #0
 8011212:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 8011214:	687b      	ldr	r3, [r7, #4]
 8011216:	2200      	movs	r2, #0
 8011218:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 801121a:	687b      	ldr	r3, [r7, #4]
 801121c:	2200      	movs	r2, #0
 801121e:	739a      	strb	r2, [r3, #14]
        {
        }
 8011220:	687b      	ldr	r3, [r7, #4]
 8011222:	4618      	mov	r0, r3
 8011224:	370c      	adds	r7, #12
 8011226:	46bd      	mov	sp, r7
 8011228:	f85d 7b04 	ldr.w	r7, [sp], #4
 801122c:	4770      	bx	lr

0801122e <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 801122e:	b580      	push	{r7, lr}
 8011230:	b082      	sub	sp, #8
 8011232:	af00      	add	r7, sp, #0
 8011234:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 8011236:	687b      	ldr	r3, [r7, #4]
 8011238:	4618      	mov	r0, r3
 801123a:	f7ff ffd5 	bl	80111e8 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 801123e:	687b      	ldr	r3, [r7, #4]
 8011240:	2200      	movs	r2, #0
 8011242:	611a      	str	r2, [r3, #16]
 8011244:	687b      	ldr	r3, [r7, #4]
 8011246:	2200      	movs	r2, #0
 8011248:	829a      	strh	r2, [r3, #20]
    {
    }
 801124a:	687b      	ldr	r3, [r7, #4]
 801124c:	4618      	mov	r0, r3
 801124e:	3708      	adds	r7, #8
 8011250:	46bd      	mov	sp, r7
 8011252:	bd80      	pop	{r7, pc}

08011254 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 8011254:	b580      	push	{r7, lr}
 8011256:	b084      	sub	sp, #16
 8011258:	af00      	add	r7, sp, #0
 801125a:	60f8      	str	r0, [r7, #12]
 801125c:	60b9      	str	r1, [r7, #8]
 801125e:	607a      	str	r2, [r7, #4]
 8011260:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 8011262:	4a55      	ldr	r2, [pc, #340]	; (80113b8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 8011264:	68fb      	ldr	r3, [r7, #12]
 8011266:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 8011268:	68fb      	ldr	r3, [r7, #12]
 801126a:	68ba      	ldr	r2, [r7, #8]
 801126c:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 801126e:	68fb      	ldr	r3, [r7, #12]
 8011270:	687a      	ldr	r2, [r7, #4]
 8011272:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 8011274:	68fb      	ldr	r3, [r7, #12]
 8011276:	683a      	ldr	r2, [r7, #0]
 8011278:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 801127a:	68fb      	ldr	r3, [r7, #12]
 801127c:	2200      	movs	r2, #0
 801127e:	611a      	str	r2, [r3, #16]
          buttonController(0),
 8011280:	68fb      	ldr	r3, [r7, #12]
 8011282:	2200      	movs	r2, #0
 8011284:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 8011286:	68fb      	ldr	r3, [r7, #12]
 8011288:	2200      	movs	r2, #0
 801128a:	619a      	str	r2, [r3, #24]
          gestures(),
 801128c:	68fb      	ldr	r3, [r7, #12]
 801128e:	331c      	adds	r3, #28
 8011290:	4618      	mov	r0, r3
 8011292:	f7ff ffcc 	bl	801122e <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 8011296:	68fb      	ldr	r3, [r7, #12]
 8011298:	2200      	movs	r2, #0
 801129a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          taskDelayFunc(0),
 801129e:	68fb      	ldr	r3, [r7, #12]
 80112a0:	2200      	movs	r2, #0
 80112a2:	639a      	str	r2, [r3, #56]	; 0x38
          frameBuffer0(0),
 80112a4:	68fb      	ldr	r3, [r7, #12]
 80112a6:	2200      	movs	r2, #0
 80112a8:	63da      	str	r2, [r3, #60]	; 0x3c
          frameBuffer1(0),
 80112aa:	68fb      	ldr	r3, [r7, #12]
 80112ac:	2200      	movs	r2, #0
 80112ae:	641a      	str	r2, [r3, #64]	; 0x40
          frameBuffer2(0),
 80112b0:	68fb      	ldr	r3, [r7, #12]
 80112b2:	2200      	movs	r2, #0
 80112b4:	645a      	str	r2, [r3, #68]	; 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 80112b6:	68fb      	ldr	r3, [r7, #12]
 80112b8:	2200      	movs	r2, #0
 80112ba:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
          fingerSize(1),
 80112be:	68fb      	ldr	r3, [r7, #12]
 80112c0:	2201      	movs	r2, #1
 80112c2:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
          lockDMAToPorch(false),
 80112c6:	68fb      	ldr	r3, [r7, #12]
 80112c8:	2200      	movs	r2, #0
 80112ca:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
          frameBufferUpdatedThisFrame(false),
 80112ce:	68fb      	ldr	r3, [r7, #12]
 80112d0:	2200      	movs	r2, #0
 80112d2:	f883 204b 	strb.w	r2, [r3, #75]	; 0x4b
          auxiliaryLCD(0),
 80112d6:	68fb      	ldr	r3, [r7, #12]
 80112d8:	2200      	movs	r2, #0
 80112da:	64da      	str	r2, [r3, #76]	; 0x4c
          partialFrameBufferRect(),
 80112dc:	68fb      	ldr	r3, [r7, #12]
 80112de:	3350      	adds	r3, #80	; 0x50
 80112e0:	4618      	mov	r0, r3
 80112e2:	f7f8 f9d2 	bl	800968a <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 80112e6:	68fb      	ldr	r3, [r7, #12]
 80112e8:	2200      	movs	r2, #0
 80112ea:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          listener(0),
 80112ee:	68fb      	ldr	r3, [r7, #12]
 80112f0:	2200      	movs	r2, #0
 80112f2:	65da      	str	r2, [r3, #92]	; 0x5c
          lastX(0),
 80112f4:	68fb      	ldr	r3, [r7, #12]
 80112f6:	2200      	movs	r2, #0
 80112f8:	661a      	str	r2, [r3, #96]	; 0x60
          lastY(0),
 80112fa:	68fb      	ldr	r3, [r7, #12]
 80112fc:	2200      	movs	r2, #0
 80112fe:	665a      	str	r2, [r3, #100]	; 0x64
          touchSampleRate(1),
 8011300:	68fb      	ldr	r3, [r7, #12]
 8011302:	2201      	movs	r2, #1
 8011304:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
          mcuLoadPct(0),
 8011308:	68fb      	ldr	r3, [r7, #12]
 801130a:	2200      	movs	r2, #0
 801130c:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
          vSyncCnt(0),
 8011310:	68fb      	ldr	r3, [r7, #12]
 8011312:	2200      	movs	r2, #0
 8011314:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
          vSyncForFrame(1),
 8011318:	68fb      	ldr	r3, [r7, #12]
 801131a:	2201      	movs	r2, #1
 801131c:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
          vSyncCompensationEnabled(false),
 8011320:	68fb      	ldr	r3, [r7, #12]
 8011322:	2200      	movs	r2, #0
 8011324:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
          clientDirty(false),
 8011328:	68fb      	ldr	r3, [r7, #12]
 801132a:	2200      	movs	r2, #0
 801132c:	f883 206d 	strb.w	r2, [r3, #109]	; 0x6d
          swapRequested(false),
 8011330:	68fb      	ldr	r3, [r7, #12]
 8011332:	2200      	movs	r2, #0
 8011334:	f883 206e 	strb.w	r2, [r3, #110]	; 0x6e
          lastTouched(false),
 8011338:	68fb      	ldr	r3, [r7, #12]
 801133a:	2200      	movs	r2, #0
 801133c:	f883 206f 	strb.w	r2, [r3, #111]	; 0x6f
          updateMCULoad(0),
 8011340:	68fb      	ldr	r3, [r7, #12]
 8011342:	2200      	movs	r2, #0
 8011344:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          cc_begin(0),
 8011348:	68fb      	ldr	r3, [r7, #12]
 801134a:	2200      	movs	r2, #0
 801134c:	675a      	str	r2, [r3, #116]	; 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 801134e:	68fb      	ldr	r3, [r7, #12]
 8011350:	2200      	movs	r2, #0
 8011352:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
          displayOrientationChangeRequested(false),
 8011356:	68fb      	ldr	r3, [r7, #12]
 8011358:	2200      	movs	r2, #0
 801135a:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
          useDMAAcceleration(true),
 801135e:	68fb      	ldr	r3, [r7, #12]
 8011360:	2201      	movs	r2, #1
 8011362:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
          lastRenderMethod(HARDWARE)
 8011366:	68fb      	ldr	r3, [r7, #12]
 8011368:	2201      	movs	r2, #1
 801136a:	f883 207b 	strb.w	r2, [r3, #123]	; 0x7b
        instance = this;
 801136e:	4a13      	ldr	r2, [pc, #76]	; (80113bc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 8011370:	68fb      	ldr	r3, [r7, #12]
 8011372:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8011374:	4a12      	ldr	r2, [pc, #72]	; (80113c0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 8011376:	8b3b      	ldrh	r3, [r7, #24]
 8011378:	8013      	strh	r3, [r2, #0]
 801137a:	4b11      	ldr	r3, [pc, #68]	; (80113c0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 801137c:	881a      	ldrh	r2, [r3, #0]
 801137e:	4b11      	ldr	r3, [pc, #68]	; (80113c4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 8011380:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8011382:	4a11      	ldr	r2, [pc, #68]	; (80113c8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 8011384:	8bbb      	ldrh	r3, [r7, #28]
 8011386:	8013      	strh	r3, [r2, #0]
 8011388:	4b0f      	ldr	r3, [pc, #60]	; (80113c8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 801138a:	881a      	ldrh	r2, [r3, #0]
 801138c:	4b0f      	ldr	r3, [pc, #60]	; (80113cc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 801138e:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 8011390:	4b0f      	ldr	r3, [pc, #60]	; (80113d0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 8011392:	2200      	movs	r2, #0
 8011394:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8011396:	8b3a      	ldrh	r2, [r7, #24]
 8011398:	8bbb      	ldrh	r3, [r7, #28]
 801139a:	429a      	cmp	r2, r3
 801139c:	bf34      	ite	cc
 801139e:	2301      	movcc	r3, #1
 80113a0:	2300      	movcs	r3, #0
 80113a2:	b2db      	uxtb	r3, r3
 80113a4:	461a      	mov	r2, r3
 80113a6:	68fb      	ldr	r3, [r7, #12]
 80113a8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 80113ac:	68fb      	ldr	r3, [r7, #12]
 80113ae:	4618      	mov	r0, r3
 80113b0:	3710      	adds	r7, #16
 80113b2:	46bd      	mov	sp, r7
 80113b4:	bd80      	pop	{r7, pc}
 80113b6:	bf00      	nop
 80113b8:	0802ee84 	.word	0x0802ee84
 80113bc:	20002328 	.word	0x20002328
 80113c0:	2000231c 	.word	0x2000231c
 80113c4:	20002322 	.word	0x20002322
 80113c8:	2000231e 	.word	0x2000231e
 80113cc:	20002324 	.word	0x20002324
 80113d0:	20002320 	.word	0x20002320

080113d4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 80113d4:	b580      	push	{r7, lr}
 80113d6:	b082      	sub	sp, #8
 80113d8:	af00      	add	r7, sp, #0
 80113da:	6078      	str	r0, [r7, #4]
 80113dc:	6039      	str	r1, [r7, #0]
    {
        app.gotoMainScreenScreenNoTransition();
 80113de:	683b      	ldr	r3, [r7, #0]
 80113e0:	4618      	mov	r0, r3
 80113e2:	f7f9 fd03 	bl	800adec <_ZN23FrontendApplicationBase32gotoMainScreenScreenNoTransitionEv>
    }
 80113e6:	bf00      	nop
 80113e8:	3708      	adds	r7, #8
 80113ea:	46bd      	mov	sp, r7
 80113ec:	bd80      	pop	{r7, pc}
	...

080113f0 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 80113f0:	b580      	push	{r7, lr}
 80113f2:	b086      	sub	sp, #24
 80113f4:	af02      	add	r7, sp, #8
 80113f6:	60f8      	str	r0, [r7, #12]
 80113f8:	60b9      	str	r1, [r7, #8]
 80113fa:	607a      	str	r2, [r7, #4]
 80113fc:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 80113fe:	68f8      	ldr	r0, [r7, #12]
 8011400:	69bb      	ldr	r3, [r7, #24]
 8011402:	9300      	str	r3, [sp, #0]
 8011404:	683b      	ldr	r3, [r7, #0]
 8011406:	687a      	ldr	r2, [r7, #4]
 8011408:	68b9      	ldr	r1, [r7, #8]
 801140a:	f7ff fe8d 	bl	8011128 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 801140e:	4a04      	ldr	r2, [pc, #16]	; (8011420 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 8011410:	68fb      	ldr	r3, [r7, #12]
 8011412:	601a      	str	r2, [r3, #0]
    {

    }
 8011414:	68fb      	ldr	r3, [r7, #12]
 8011416:	4618      	mov	r0, r3
 8011418:	3710      	adds	r7, #16
 801141a:	46bd      	mov	sp, r7
 801141c:	bd80      	pop	{r7, pc}
 801141e:	bf00      	nop
 8011420:	0802e9dc 	.word	0x0802e9dc

08011424 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8011424:	b580      	push	{r7, lr}
 8011426:	af00      	add	r7, sp, #0
 8011428:	4801      	ldr	r0, [pc, #4]	; (8011430 <__tcf_0+0xc>)
 801142a:	f000 f969 	bl	8011700 <_ZN12FrontendHeapD1Ev>
 801142e:	bd80      	pop	{r7, pc}
 8011430:	20000528 	.word	0x20000528

08011434 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 8011434:	b580      	push	{r7, lr}
 8011436:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 8011438:	4b11      	ldr	r3, [pc, #68]	; (8011480 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 801143a:	681b      	ldr	r3, [r3, #0]
 801143c:	f3bf 8f5b 	dmb	ish
 8011440:	f003 0301 	and.w	r3, r3, #1
 8011444:	2b00      	cmp	r3, #0
 8011446:	bf0c      	ite	eq
 8011448:	2301      	moveq	r3, #1
 801144a:	2300      	movne	r3, #0
 801144c:	b2db      	uxtb	r3, r3
 801144e:	2b00      	cmp	r3, #0
 8011450:	d013      	beq.n	801147a <_ZN12FrontendHeap11getInstanceEv+0x46>
 8011452:	480b      	ldr	r0, [pc, #44]	; (8011480 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8011454:	f018 fedd 	bl	802a212 <__cxa_guard_acquire>
 8011458:	4603      	mov	r3, r0
 801145a:	2b00      	cmp	r3, #0
 801145c:	bf14      	ite	ne
 801145e:	2301      	movne	r3, #1
 8011460:	2300      	moveq	r3, #0
 8011462:	b2db      	uxtb	r3, r3
 8011464:	2b00      	cmp	r3, #0
 8011466:	d008      	beq.n	801147a <_ZN12FrontendHeap11getInstanceEv+0x46>
 8011468:	4806      	ldr	r0, [pc, #24]	; (8011484 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 801146a:	f000 f867 	bl	801153c <_ZN12FrontendHeapC1Ev>
 801146e:	4806      	ldr	r0, [pc, #24]	; (8011488 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 8011470:	f019 fedc 	bl	802b22c <atexit>
 8011474:	4802      	ldr	r0, [pc, #8]	; (8011480 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8011476:	f018 fed8 	bl	802a22a <__cxa_guard_release>
        return instance;
 801147a:	4b02      	ldr	r3, [pc, #8]	; (8011484 <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 801147c:	4618      	mov	r0, r3
 801147e:	bd80      	pop	{r7, pc}
 8011480:	20000b24 	.word	0x20000b24
 8011484:	20000528 	.word	0x20000528
 8011488:	08011425 	.word	0x08011425

0801148c <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 801148c:	b580      	push	{r7, lr}
 801148e:	b082      	sub	sp, #8
 8011490:	af00      	add	r7, sp, #0
 8011492:	6078      	str	r0, [r7, #4]
 8011494:	4a05      	ldr	r2, [pc, #20]	; (80114ac <_ZN16FrontendHeapBaseD1Ev+0x20>)
 8011496:	687b      	ldr	r3, [r7, #4]
 8011498:	601a      	str	r2, [r3, #0]
 801149a:	687b      	ldr	r3, [r7, #4]
 801149c:	4618      	mov	r0, r3
 801149e:	f7ff fe63 	bl	8011168 <_ZN8touchgfx7MVPHeapD1Ev>
 80114a2:	687b      	ldr	r3, [r7, #4]
 80114a4:	4618      	mov	r0, r3
 80114a6:	3708      	adds	r7, #8
 80114a8:	46bd      	mov	sp, r7
 80114aa:	bd80      	pop	{r7, pc}
 80114ac:	0802e9dc 	.word	0x0802e9dc

080114b0 <_ZN16FrontendHeapBaseD0Ev>:
 80114b0:	b580      	push	{r7, lr}
 80114b2:	b082      	sub	sp, #8
 80114b4:	af00      	add	r7, sp, #0
 80114b6:	6078      	str	r0, [r7, #4]
 80114b8:	6878      	ldr	r0, [r7, #4]
 80114ba:	f7ff ffe7 	bl	801148c <_ZN16FrontendHeapBaseD1Ev>
 80114be:	2114      	movs	r1, #20
 80114c0:	6878      	ldr	r0, [r7, #4]
 80114c2:	f018 fea4 	bl	802a20e <_ZdlPvj>
 80114c6:	687b      	ldr	r3, [r7, #4]
 80114c8:	4618      	mov	r0, r3
 80114ca:	3708      	adds	r7, #8
 80114cc:	46bd      	mov	sp, r7
 80114ce:	bd80      	pop	{r7, pc}

080114d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 80114d0:	b580      	push	{r7, lr}
 80114d2:	b082      	sub	sp, #8
 80114d4:	af00      	add	r7, sp, #0
 80114d6:	6078      	str	r0, [r7, #4]
 80114d8:	687b      	ldr	r3, [r7, #4]
 80114da:	4618      	mov	r0, r3
 80114dc:	f000 ff52 	bl	8012384 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80114e0:	4a03      	ldr	r2, [pc, #12]	; (80114f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 80114e2:	687b      	ldr	r3, [r7, #4]
 80114e4:	601a      	str	r2, [r3, #0]
 80114e6:	687b      	ldr	r3, [r7, #4]
 80114e8:	4618      	mov	r0, r3
 80114ea:	3708      	adds	r7, #8
 80114ec:	46bd      	mov	sp, r7
 80114ee:	bd80      	pop	{r7, pc}
 80114f0:	0802e9a8 	.word	0x0802e9a8

080114f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 80114f4:	b580      	push	{r7, lr}
 80114f6:	b082      	sub	sp, #8
 80114f8:	af00      	add	r7, sp, #0
 80114fa:	6078      	str	r0, [r7, #4]
 80114fc:	687b      	ldr	r3, [r7, #4]
 80114fe:	4618      	mov	r0, r3
 8011500:	f000 ff40 	bl	8012384 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8011504:	4a03      	ldr	r2, [pc, #12]	; (8011514 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8011506:	687b      	ldr	r3, [r7, #4]
 8011508:	601a      	str	r2, [r3, #0]
 801150a:	687b      	ldr	r3, [r7, #4]
 801150c:	4618      	mov	r0, r3
 801150e:	3708      	adds	r7, #8
 8011510:	46bd      	mov	sp, r7
 8011512:	bd80      	pop	{r7, pc}
 8011514:	0802e974 	.word	0x0802e974

08011518 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EEC1Ev>:
 8011518:	b580      	push	{r7, lr}
 801151a:	b082      	sub	sp, #8
 801151c:	af00      	add	r7, sp, #0
 801151e:	6078      	str	r0, [r7, #4]
 8011520:	687b      	ldr	r3, [r7, #4]
 8011522:	4618      	mov	r0, r3
 8011524:	f000 ff2e 	bl	8012384 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8011528:	4a03      	ldr	r2, [pc, #12]	; (8011538 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EEC1Ev+0x20>)
 801152a:	687b      	ldr	r3, [r7, #4]
 801152c:	601a      	str	r2, [r3, #0]
 801152e:	687b      	ldr	r3, [r7, #4]
 8011530:	4618      	mov	r0, r3
 8011532:	3708      	adds	r7, #8
 8011534:	46bd      	mov	sp, r7
 8011536:	bd80      	pop	{r7, pc}
 8011538:	0802e940 	.word	0x0802e940

0801153c <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 801153c:	b590      	push	{r4, r7, lr}
 801153e:	b085      	sub	sp, #20
 8011540:	af02      	add	r7, sp, #8
 8011542:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 8011544:	6878      	ldr	r0, [r7, #4]
 8011546:	687b      	ldr	r3, [r7, #4]
 8011548:	f103 0114 	add.w	r1, r3, #20
 801154c:	687b      	ldr	r3, [r7, #4]
 801154e:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 8011552:	687b      	ldr	r3, [r7, #4]
 8011554:	f503 6488 	add.w	r4, r3, #1088	; 0x440
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8011558:	687b      	ldr	r3, [r7, #4]
 801155a:	f503 6394 	add.w	r3, r3, #1184	; 0x4a0
                     app(model, *this)
 801155e:	9300      	str	r3, [sp, #0]
 8011560:	4623      	mov	r3, r4
 8011562:	f7ff ff45 	bl	80113f0 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 8011566:	4a18      	ldr	r2, [pc, #96]	; (80115c8 <_ZN12FrontendHeapC1Ev+0x8c>)
 8011568:	687b      	ldr	r3, [r7, #4]
 801156a:	601a      	str	r2, [r3, #0]
 801156c:	687b      	ldr	r3, [r7, #4]
 801156e:	3314      	adds	r3, #20
 8011570:	4618      	mov	r0, r3
 8011572:	f7ff ffad 	bl	80114d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8011576:	687b      	ldr	r3, [r7, #4]
 8011578:	332c      	adds	r3, #44	; 0x2c
 801157a:	4618      	mov	r0, r3
 801157c:	f7ff ffba 	bl	80114f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8011580:	687b      	ldr	r3, [r7, #4]
 8011582:	f503 6388 	add.w	r3, r3, #1088	; 0x440
 8011586:	4618      	mov	r0, r3
 8011588:	f7ff ffc6 	bl	8011518 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EEC1Ev>
 801158c:	687b      	ldr	r3, [r7, #4]
 801158e:	f503 6391 	add.w	r3, r3, #1160	; 0x488
 8011592:	4618      	mov	r0, r3
 8011594:	f7fe fe8c 	bl	80102b0 <_ZN5ModelC1Ev>
 8011598:	687b      	ldr	r3, [r7, #4]
 801159a:	f503 6094 	add.w	r0, r3, #1184	; 0x4a0
 801159e:	687b      	ldr	r3, [r7, #4]
 80115a0:	f503 6391 	add.w	r3, r3, #1160	; 0x488
 80115a4:	687a      	ldr	r2, [r7, #4]
 80115a6:	4619      	mov	r1, r3
 80115a8:	f7fe fcc8 	bl	800ff3c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 80115ac:	687a      	ldr	r2, [r7, #4]
 80115ae:	687b      	ldr	r3, [r7, #4]
 80115b0:	f503 6394 	add.w	r3, r3, #1184	; 0x4a0
 80115b4:	4619      	mov	r1, r3
 80115b6:	4610      	mov	r0, r2
 80115b8:	f7ff ff0c 	bl	80113d4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 80115bc:	687b      	ldr	r3, [r7, #4]
 80115be:	4618      	mov	r0, r3
 80115c0:	370c      	adds	r7, #12
 80115c2:	46bd      	mov	sp, r7
 80115c4:	bd90      	pop	{r4, r7, pc}
 80115c6:	bf00      	nop
 80115c8:	0802e92c 	.word	0x0802e92c

080115cc <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 80115cc:	b580      	push	{r7, lr}
 80115ce:	b086      	sub	sp, #24
 80115d0:	af02      	add	r7, sp, #8
 80115d2:	60f8      	str	r0, [r7, #12]
 80115d4:	60b9      	str	r1, [r7, #8]
 80115d6:	607a      	str	r2, [r7, #4]
 80115d8:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 80115da:	68f8      	ldr	r0, [r7, #12]
 80115dc:	8bbb      	ldrh	r3, [r7, #28]
 80115de:	9301      	str	r3, [sp, #4]
 80115e0:	8b3b      	ldrh	r3, [r7, #24]
 80115e2:	9300      	str	r3, [sp, #0]
 80115e4:	683b      	ldr	r3, [r7, #0]
 80115e6:	687a      	ldr	r2, [r7, #4]
 80115e8:	68b9      	ldr	r1, [r7, #8]
 80115ea:	f7ff fe33 	bl	8011254 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 80115ee:	4a04      	ldr	r2, [pc, #16]	; (8011600 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 80115f0:	68fb      	ldr	r3, [r7, #12]
 80115f2:	601a      	str	r2, [r3, #0]
    }
 80115f4:	68fb      	ldr	r3, [r7, #12]
 80115f6:	4618      	mov	r0, r3
 80115f8:	3710      	adds	r7, #16
 80115fa:	46bd      	mov	sp, r7
 80115fc:	bd80      	pop	{r7, pc}
 80115fe:	bf00      	nop
 8011600:	0802ea2c 	.word	0x0802ea2c

08011604 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8011604:	b580      	push	{r7, lr}
 8011606:	b086      	sub	sp, #24
 8011608:	af02      	add	r7, sp, #8
 801160a:	60f8      	str	r0, [r7, #12]
 801160c:	60b9      	str	r1, [r7, #8]
 801160e:	607a      	str	r2, [r7, #4]
 8011610:	603b      	str	r3, [r7, #0]
 8011612:	68f8      	ldr	r0, [r7, #12]
 8011614:	8bbb      	ldrh	r3, [r7, #28]
 8011616:	9301      	str	r3, [sp, #4]
 8011618:	8b3b      	ldrh	r3, [r7, #24]
 801161a:	9300      	str	r3, [sp, #0]
 801161c:	683b      	ldr	r3, [r7, #0]
 801161e:	687a      	ldr	r2, [r7, #4]
 8011620:	68b9      	ldr	r1, [r7, #8]
 8011622:	f7ff ffd3 	bl	80115cc <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 8011626:	4a04      	ldr	r2, [pc, #16]	; (8011638 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8011628:	68fb      	ldr	r3, [r7, #12]
 801162a:	601a      	str	r2, [r3, #0]
    }
 801162c:	68fb      	ldr	r3, [r7, #12]
 801162e:	4618      	mov	r0, r3
 8011630:	3710      	adds	r7, #16
 8011632:	46bd      	mov	sp, r7
 8011634:	bd80      	pop	{r7, pc}
 8011636:	bf00      	nop
 8011638:	0802e7e0 	.word	0x0802e7e0

0801163c <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 801163c:	b480      	push	{r7}
 801163e:	b083      	sub	sp, #12
 8011640:	af00      	add	r7, sp, #0
 8011642:	6078      	str	r0, [r7, #4]
 8011644:	4a04      	ldr	r2, [pc, #16]	; (8011658 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 8011646:	687b      	ldr	r3, [r7, #4]
 8011648:	601a      	str	r2, [r3, #0]
 801164a:	687b      	ldr	r3, [r7, #4]
 801164c:	4618      	mov	r0, r3
 801164e:	370c      	adds	r7, #12
 8011650:	46bd      	mov	sp, r7
 8011652:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011656:	4770      	bx	lr
 8011658:	0802e7c8 	.word	0x0802e7c8

0801165c <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 801165c:	b580      	push	{r7, lr}
 801165e:	b082      	sub	sp, #8
 8011660:	af00      	add	r7, sp, #0
 8011662:	6078      	str	r0, [r7, #4]
 8011664:	687b      	ldr	r3, [r7, #4]
 8011666:	4618      	mov	r0, r3
 8011668:	f7ff ffe8 	bl	801163c <_ZN8touchgfx15TouchControllerC1Ev>
 801166c:	4a03      	ldr	r2, [pc, #12]	; (801167c <_ZN20STM32TouchControllerC1Ev+0x20>)
 801166e:	687b      	ldr	r3, [r7, #4]
 8011670:	601a      	str	r2, [r3, #0]
 8011672:	687b      	ldr	r3, [r7, #4]
 8011674:	4618      	mov	r0, r3
 8011676:	3708      	adds	r7, #8
 8011678:	46bd      	mov	sp, r7
 801167a:	bd80      	pop	{r7, pc}
 801167c:	0802e7b0 	.word	0x0802e7b0

08011680 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8011680:	b590      	push	{r4, r7, lr}
 8011682:	b085      	sub	sp, #20
 8011684:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8011686:	f7fe f88d 	bl	800f7a4 <_ZN14BitmapDatabase11getInstanceEv>
 801168a:	4604      	mov	r4, r0
 801168c:	f7fe f894 	bl	800f7b8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8011690:	4603      	mov	r3, r0
 8011692:	4619      	mov	r1, r3
 8011694:	2300      	movs	r3, #0
 8011696:	9300      	str	r3, [sp, #0]
 8011698:	2300      	movs	r3, #0
 801169a:	2200      	movs	r2, #0
 801169c:	4620      	mov	r0, r4
 801169e:	f00a fe47 	bl	801c330 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 80116a2:	4809      	ldr	r0, [pc, #36]	; (80116c8 <touchgfx_init+0x48>)
 80116a4:	f7ff fd30 	bl	8011108 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 80116a8:	2000      	movs	r0, #0
 80116aa:	f7fe f9c9 	bl	800fa40 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80116ae:	4807      	ldr	r0, [pc, #28]	; (80116cc <touchgfx_init+0x4c>)
 80116b0:	f00a fda6 	bl	801c200 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 80116b4:	f7ff febe 	bl	8011434 <_ZN12FrontendHeap11getInstanceEv>
 80116b8:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80116ba:	4805      	ldr	r0, [pc, #20]	; (80116d0 <touchgfx_init+0x50>)
 80116bc:	f7ff fab4 	bl	8010c28 <_ZN11TouchGFXHAL10initializeEv>
}
 80116c0:	bf00      	nop
 80116c2:	370c      	adds	r7, #12
 80116c4:	46bd      	mov	sp, r7
 80116c6:	bd90      	pop	{r4, r7, pc}
 80116c8:	20000bf4 	.word	0x20000bf4
 80116cc:	20000018 	.word	0x20000018
 80116d0:	20000bf8 	.word	0x20000bf8

080116d4 <touchgfx_components_init>:

void touchgfx_components_init()
{
 80116d4:	b480      	push	{r7}
 80116d6:	af00      	add	r7, sp, #0
}
 80116d8:	bf00      	nop
 80116da:	46bd      	mov	sp, r7
 80116dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80116e0:	4770      	bx	lr
	...

080116e4 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 80116e4:	b580      	push	{r7, lr}
 80116e6:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
     if (OSWrappers::isVSyncAvailable())
 80116e8:	f7ff fbb4 	bl	8010e54 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 80116ec:	4603      	mov	r3, r0
 80116ee:	2b00      	cmp	r3, #0
 80116f0:	d002      	beq.n	80116f8 <touchgfx_taskEntry+0x14>
     {
         hal.backPorchExited();
 80116f2:	4802      	ldr	r0, [pc, #8]	; (80116fc <touchgfx_taskEntry+0x18>)
 80116f4:	f7ff f96a 	bl	80109cc <_ZN8touchgfx3HAL15backPorchExitedEv>
     }
}
 80116f8:	bf00      	nop
 80116fa:	bd80      	pop	{r7, pc}
 80116fc:	20000bf8 	.word	0x20000bf8

08011700 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 8011700:	b580      	push	{r7, lr}
 8011702:	b082      	sub	sp, #8
 8011704:	af00      	add	r7, sp, #0
 8011706:	6078      	str	r0, [r7, #4]
 8011708:	4a10      	ldr	r2, [pc, #64]	; (801174c <_ZN12FrontendHeapD1Ev+0x4c>)
 801170a:	687b      	ldr	r3, [r7, #4]
 801170c:	601a      	str	r2, [r3, #0]
 801170e:	687b      	ldr	r3, [r7, #4]
 8011710:	f503 6394 	add.w	r3, r3, #1184	; 0x4a0
 8011714:	4618      	mov	r0, r3
 8011716:	f7fe fbdb 	bl	800fed0 <_ZN19FrontendApplicationD1Ev>
 801171a:	687b      	ldr	r3, [r7, #4]
 801171c:	f503 6388 	add.w	r3, r3, #1088	; 0x440
 8011720:	4618      	mov	r0, r3
 8011722:	f000 f827 	bl	8011774 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8011726:	687b      	ldr	r3, [r7, #4]
 8011728:	332c      	adds	r3, #44	; 0x2c
 801172a:	4618      	mov	r0, r3
 801172c:	f000 f844 	bl	80117b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8011730:	687b      	ldr	r3, [r7, #4]
 8011732:	3314      	adds	r3, #20
 8011734:	4618      	mov	r0, r3
 8011736:	f000 f863 	bl	8011800 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 801173a:	687b      	ldr	r3, [r7, #4]
 801173c:	4618      	mov	r0, r3
 801173e:	f7ff fea5 	bl	801148c <_ZN16FrontendHeapBaseD1Ev>
 8011742:	687b      	ldr	r3, [r7, #4]
 8011744:	4618      	mov	r0, r3
 8011746:	3708      	adds	r7, #8
 8011748:	46bd      	mov	sp, r7
 801174a:	bd80      	pop	{r7, pc}
 801174c:	0802e92c 	.word	0x0802e92c

08011750 <_ZN12FrontendHeapD0Ev>:
 8011750:	b580      	push	{r7, lr}
 8011752:	b082      	sub	sp, #8
 8011754:	af00      	add	r7, sp, #0
 8011756:	6078      	str	r0, [r7, #4]
 8011758:	6878      	ldr	r0, [r7, #4]
 801175a:	f7ff ffd1 	bl	8011700 <_ZN12FrontendHeapD1Ev>
 801175e:	f240 51fc 	movw	r1, #1532	; 0x5fc
 8011762:	6878      	ldr	r0, [r7, #4]
 8011764:	f018 fd53 	bl	802a20e <_ZdlPvj>
 8011768:	687b      	ldr	r3, [r7, #4]
 801176a:	4618      	mov	r0, r3
 801176c:	3708      	adds	r7, #8
 801176e:	46bd      	mov	sp, r7
 8011770:	bd80      	pop	{r7, pc}
	...

08011774 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
 8011774:	b580      	push	{r7, lr}
 8011776:	b082      	sub	sp, #8
 8011778:	af00      	add	r7, sp, #0
 801177a:	6078      	str	r0, [r7, #4]
 801177c:	4a05      	ldr	r2, [pc, #20]	; (8011794 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x20>)
 801177e:	687b      	ldr	r3, [r7, #4]
 8011780:	601a      	str	r2, [r3, #0]
 8011782:	687b      	ldr	r3, [r7, #4]
 8011784:	4618      	mov	r0, r3
 8011786:	f000 fdfc 	bl	8012382 <_ZN8touchgfx17AbstractPartitionD1Ev>
 801178a:	687b      	ldr	r3, [r7, #4]
 801178c:	4618      	mov	r0, r3
 801178e:	3708      	adds	r7, #8
 8011790:	46bd      	mov	sp, r7
 8011792:	bd80      	pop	{r7, pc}
 8011794:	0802e940 	.word	0x0802e940

08011798 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8011798:	b580      	push	{r7, lr}
 801179a:	b082      	sub	sp, #8
 801179c:	af00      	add	r7, sp, #0
 801179e:	6078      	str	r0, [r7, #4]
 80117a0:	6878      	ldr	r0, [r7, #4]
 80117a2:	f7ff ffe7 	bl	8011774 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80117a6:	2148      	movs	r1, #72	; 0x48
 80117a8:	6878      	ldr	r0, [r7, #4]
 80117aa:	f018 fd30 	bl	802a20e <_ZdlPvj>
 80117ae:	687b      	ldr	r3, [r7, #4]
 80117b0:	4618      	mov	r0, r3
 80117b2:	3708      	adds	r7, #8
 80117b4:	46bd      	mov	sp, r7
 80117b6:	bd80      	pop	{r7, pc}

080117b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80117b8:	b580      	push	{r7, lr}
 80117ba:	b082      	sub	sp, #8
 80117bc:	af00      	add	r7, sp, #0
 80117be:	6078      	str	r0, [r7, #4]
 80117c0:	4a05      	ldr	r2, [pc, #20]	; (80117d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 80117c2:	687b      	ldr	r3, [r7, #4]
 80117c4:	601a      	str	r2, [r3, #0]
 80117c6:	687b      	ldr	r3, [r7, #4]
 80117c8:	4618      	mov	r0, r3
 80117ca:	f000 fdda 	bl	8012382 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80117ce:	687b      	ldr	r3, [r7, #4]
 80117d0:	4618      	mov	r0, r3
 80117d2:	3708      	adds	r7, #8
 80117d4:	46bd      	mov	sp, r7
 80117d6:	bd80      	pop	{r7, pc}
 80117d8:	0802e974 	.word	0x0802e974

080117dc <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80117dc:	b580      	push	{r7, lr}
 80117de:	b082      	sub	sp, #8
 80117e0:	af00      	add	r7, sp, #0
 80117e2:	6078      	str	r0, [r7, #4]
 80117e4:	6878      	ldr	r0, [r7, #4]
 80117e6:	f7ff ffe7 	bl	80117b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80117ea:	f240 4114 	movw	r1, #1044	; 0x414
 80117ee:	6878      	ldr	r0, [r7, #4]
 80117f0:	f018 fd0d 	bl	802a20e <_ZdlPvj>
 80117f4:	687b      	ldr	r3, [r7, #4]
 80117f6:	4618      	mov	r0, r3
 80117f8:	3708      	adds	r7, #8
 80117fa:	46bd      	mov	sp, r7
 80117fc:	bd80      	pop	{r7, pc}
	...

08011800 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8011800:	b580      	push	{r7, lr}
 8011802:	b082      	sub	sp, #8
 8011804:	af00      	add	r7, sp, #0
 8011806:	6078      	str	r0, [r7, #4]
 8011808:	4a05      	ldr	r2, [pc, #20]	; (8011820 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 801180a:	687b      	ldr	r3, [r7, #4]
 801180c:	601a      	str	r2, [r3, #0]
 801180e:	687b      	ldr	r3, [r7, #4]
 8011810:	4618      	mov	r0, r3
 8011812:	f000 fdb6 	bl	8012382 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8011816:	687b      	ldr	r3, [r7, #4]
 8011818:	4618      	mov	r0, r3
 801181a:	3708      	adds	r7, #8
 801181c:	46bd      	mov	sp, r7
 801181e:	bd80      	pop	{r7, pc}
 8011820:	0802e9a8 	.word	0x0802e9a8

08011824 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8011824:	b580      	push	{r7, lr}
 8011826:	b082      	sub	sp, #8
 8011828:	af00      	add	r7, sp, #0
 801182a:	6078      	str	r0, [r7, #4]
 801182c:	6878      	ldr	r0, [r7, #4]
 801182e:	f7ff ffe7 	bl	8011800 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8011832:	2118      	movs	r1, #24
 8011834:	6878      	ldr	r0, [r7, #4]
 8011836:	f018 fcea 	bl	802a20e <_ZdlPvj>
 801183a:	687b      	ldr	r3, [r7, #4]
 801183c:	4618      	mov	r0, r3
 801183e:	3708      	adds	r7, #8
 8011840:	46bd      	mov	sp, r7
 8011842:	bd80      	pop	{r7, pc}

08011844 <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 8011844:	b580      	push	{r7, lr}
 8011846:	b082      	sub	sp, #8
 8011848:	af00      	add	r7, sp, #0
 801184a:	6078      	str	r0, [r7, #4]
 801184c:	4a05      	ldr	r2, [pc, #20]	; (8011864 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 801184e:	687b      	ldr	r3, [r7, #4]
 8011850:	601a      	str	r2, [r3, #0]
 8011852:	687b      	ldr	r3, [r7, #4]
 8011854:	4618      	mov	r0, r3
 8011856:	f7ff fca7 	bl	80111a8 <_ZN8touchgfx3LCDD1Ev>
 801185a:	687b      	ldr	r3, [r7, #4]
 801185c:	4618      	mov	r0, r3
 801185e:	3708      	adds	r7, #8
 8011860:	46bd      	mov	sp, r7
 8011862:	bd80      	pop	{r7, pc}
 8011864:	0802fc14 	.word	0x0802fc14

08011868 <_ZN8touchgfx8LCD16bppD0Ev>:
 8011868:	b580      	push	{r7, lr}
 801186a:	b082      	sub	sp, #8
 801186c:	af00      	add	r7, sp, #0
 801186e:	6078      	str	r0, [r7, #4]
 8011870:	6878      	ldr	r0, [r7, #4]
 8011872:	f7ff ffe7 	bl	8011844 <_ZN8touchgfx8LCD16bppD1Ev>
 8011876:	2184      	movs	r1, #132	; 0x84
 8011878:	6878      	ldr	r0, [r7, #4]
 801187a:	f018 fcc8 	bl	802a20e <_ZdlPvj>
 801187e:	687b      	ldr	r3, [r7, #4]
 8011880:	4618      	mov	r0, r3
 8011882:	3708      	adds	r7, #8
 8011884:	46bd      	mov	sp, r7
 8011886:	bd80      	pop	{r7, pc}

08011888 <_Z41__static_initialization_and_destruction_0ii>:
 8011888:	b580      	push	{r7, lr}
 801188a:	b084      	sub	sp, #16
 801188c:	af02      	add	r7, sp, #8
 801188e:	6078      	str	r0, [r7, #4]
 8011890:	6039      	str	r1, [r7, #0]
 8011892:	687b      	ldr	r3, [r7, #4]
 8011894:	2b01      	cmp	r3, #1
 8011896:	d118      	bne.n	80118ca <_Z41__static_initialization_and_destruction_0ii+0x42>
 8011898:	683b      	ldr	r3, [r7, #0]
 801189a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801189e:	4293      	cmp	r3, r2
 80118a0:	d113      	bne.n	80118ca <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 80118a2:	4817      	ldr	r0, [pc, #92]	; (8011900 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 80118a4:	f7ff feda 	bl	801165c <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 80118a8:	4816      	ldr	r0, [pc, #88]	; (8011904 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 80118aa:	f7ff fb8f 	bl	8010fcc <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80118ae:	4816      	ldr	r0, [pc, #88]	; (8011908 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 80118b0:	f00f f802 	bl	80208b8 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 240, 320);
 80118b4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80118b8:	9301      	str	r3, [sp, #4]
 80118ba:	23f0      	movs	r3, #240	; 0xf0
 80118bc:	9300      	str	r3, [sp, #0]
 80118be:	4b10      	ldr	r3, [pc, #64]	; (8011900 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 80118c0:	4a11      	ldr	r2, [pc, #68]	; (8011908 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 80118c2:	4910      	ldr	r1, [pc, #64]	; (8011904 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 80118c4:	4811      	ldr	r0, [pc, #68]	; (801190c <_Z41__static_initialization_and_destruction_0ii+0x84>)
 80118c6:	f7ff fe9d 	bl	8011604 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 80118ca:	687b      	ldr	r3, [r7, #4]
 80118cc:	2b00      	cmp	r3, #0
 80118ce:	d113      	bne.n	80118f8 <_Z41__static_initialization_and_destruction_0ii+0x70>
 80118d0:	683b      	ldr	r3, [r7, #0]
 80118d2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80118d6:	4293      	cmp	r3, r2
 80118d8:	d10e      	bne.n	80118f8 <_Z41__static_initialization_and_destruction_0ii+0x70>
 80118da:	480c      	ldr	r0, [pc, #48]	; (801190c <_Z41__static_initialization_and_destruction_0ii+0x84>)
 80118dc:	f7ff fa34 	bl	8010d48 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 80118e0:	480b      	ldr	r0, [pc, #44]	; (8011910 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 80118e2:	f7f7 fbe7 	bl	80090b4 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 80118e6:	4808      	ldr	r0, [pc, #32]	; (8011908 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 80118e8:	f7ff ffac 	bl	8011844 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 80118ec:	4805      	ldr	r0, [pc, #20]	; (8011904 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 80118ee:	f7ff fbc1 	bl	8011074 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 80118f2:	4803      	ldr	r0, [pc, #12]	; (8011900 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 80118f4:	f7fe ff70 	bl	80107d8 <_ZN20STM32TouchControllerD1Ev>
}
 80118f8:	bf00      	nop
 80118fa:	3708      	adds	r7, #8
 80118fc:	46bd      	mov	sp, r7
 80118fe:	bd80      	pop	{r7, pc}
 8011900:	20000b28 	.word	0x20000b28
 8011904:	20000b2c 	.word	0x20000b2c
 8011908:	20000b70 	.word	0x20000b70
 801190c:	20000bf8 	.word	0x20000bf8
 8011910:	20000018 	.word	0x20000018

08011914 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 8011914:	b480      	push	{r7}
 8011916:	b083      	sub	sp, #12
 8011918:	af00      	add	r7, sp, #0
 801191a:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 801191c:	2301      	movs	r3, #1
    }
 801191e:	4618      	mov	r0, r3
 8011920:	370c      	adds	r7, #12
 8011922:	46bd      	mov	sp, r7
 8011924:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011928:	4770      	bx	lr

0801192a <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 801192a:	b480      	push	{r7}
 801192c:	b083      	sub	sp, #12
 801192e:	af00      	add	r7, sp, #0
 8011930:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 8011932:	2340      	movs	r3, #64	; 0x40
    }
 8011934:	4618      	mov	r0, r3
 8011936:	370c      	adds	r7, #12
 8011938:	46bd      	mov	sp, r7
 801193a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801193e:	4770      	bx	lr

08011940 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 8011940:	b480      	push	{r7}
 8011942:	b083      	sub	sp, #12
 8011944:	af00      	add	r7, sp, #0
 8011946:	6078      	str	r0, [r7, #4]
 8011948:	460b      	mov	r3, r1
 801194a:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 801194c:	887b      	ldrh	r3, [r7, #2]
 801194e:	019b      	lsls	r3, r3, #6
 8011950:	3308      	adds	r3, #8
 8011952:	687a      	ldr	r2, [r7, #4]
 8011954:	4413      	add	r3, r2
    }
 8011956:	4618      	mov	r0, r3
 8011958:	370c      	adds	r7, #12
 801195a:	46bd      	mov	sp, r7
 801195c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011960:	4770      	bx	lr

08011962 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 8011962:	b480      	push	{r7}
 8011964:	b083      	sub	sp, #12
 8011966:	af00      	add	r7, sp, #0
 8011968:	6078      	str	r0, [r7, #4]
 801196a:	460b      	mov	r3, r1
 801196c:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 801196e:	887b      	ldrh	r3, [r7, #2]
 8011970:	019b      	lsls	r3, r3, #6
 8011972:	3308      	adds	r3, #8
 8011974:	687a      	ldr	r2, [r7, #4]
 8011976:	4413      	add	r3, r2
    }
 8011978:	4618      	mov	r0, r3
 801197a:	370c      	adds	r7, #12
 801197c:	46bd      	mov	sp, r7
 801197e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011982:	4770      	bx	lr

08011984 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 8011984:	b480      	push	{r7}
 8011986:	b083      	sub	sp, #12
 8011988:	af00      	add	r7, sp, #0
 801198a:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 801198c:	2301      	movs	r3, #1
    }
 801198e:	4618      	mov	r0, r3
 8011990:	370c      	adds	r7, #12
 8011992:	46bd      	mov	sp, r7
 8011994:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011998:	4770      	bx	lr

0801199a <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 801199a:	b480      	push	{r7}
 801199c:	b083      	sub	sp, #12
 801199e:	af00      	add	r7, sp, #0
 80119a0:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 80119a2:	f240 430c 	movw	r3, #1036	; 0x40c
    }
 80119a6:	4618      	mov	r0, r3
 80119a8:	370c      	adds	r7, #12
 80119aa:	46bd      	mov	sp, r7
 80119ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80119b0:	4770      	bx	lr

080119b2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 80119b2:	b480      	push	{r7}
 80119b4:	b083      	sub	sp, #12
 80119b6:	af00      	add	r7, sp, #0
 80119b8:	6078      	str	r0, [r7, #4]
 80119ba:	460b      	mov	r3, r1
 80119bc:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 80119be:	887b      	ldrh	r3, [r7, #2]
 80119c0:	f240 420c 	movw	r2, #1036	; 0x40c
 80119c4:	fb02 f303 	mul.w	r3, r2, r3
 80119c8:	3308      	adds	r3, #8
 80119ca:	687a      	ldr	r2, [r7, #4]
 80119cc:	4413      	add	r3, r2
    }
 80119ce:	4618      	mov	r0, r3
 80119d0:	370c      	adds	r7, #12
 80119d2:	46bd      	mov	sp, r7
 80119d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80119d8:	4770      	bx	lr

080119da <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 80119da:	b480      	push	{r7}
 80119dc:	b083      	sub	sp, #12
 80119de:	af00      	add	r7, sp, #0
 80119e0:	6078      	str	r0, [r7, #4]
 80119e2:	460b      	mov	r3, r1
 80119e4:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 80119e6:	887b      	ldrh	r3, [r7, #2]
 80119e8:	f240 420c 	movw	r2, #1036	; 0x40c
 80119ec:	fb02 f303 	mul.w	r3, r2, r3
 80119f0:	3308      	adds	r3, #8
 80119f2:	687a      	ldr	r2, [r7, #4]
 80119f4:	4413      	add	r3, r2
    }
 80119f6:	4618      	mov	r0, r3
 80119f8:	370c      	adds	r7, #12
 80119fa:	46bd      	mov	sp, r7
 80119fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011a00:	4770      	bx	lr

08011a02 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 8011a02:	b480      	push	{r7}
 8011a04:	b083      	sub	sp, #12
 8011a06:	af00      	add	r7, sp, #0
 8011a08:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 8011a0a:	2301      	movs	r3, #1
    }
 8011a0c:	4618      	mov	r0, r3
 8011a0e:	370c      	adds	r7, #12
 8011a10:	46bd      	mov	sp, r7
 8011a12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011a16:	4770      	bx	lr

08011a18 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 8011a18:	b480      	push	{r7}
 8011a1a:	b083      	sub	sp, #12
 8011a1c:	af00      	add	r7, sp, #0
 8011a1e:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 8011a20:	2310      	movs	r3, #16
    }
 8011a22:	4618      	mov	r0, r3
 8011a24:	370c      	adds	r7, #12
 8011a26:	46bd      	mov	sp, r7
 8011a28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011a2c:	4770      	bx	lr

08011a2e <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 8011a2e:	b480      	push	{r7}
 8011a30:	b083      	sub	sp, #12
 8011a32:	af00      	add	r7, sp, #0
 8011a34:	6078      	str	r0, [r7, #4]
 8011a36:	460b      	mov	r3, r1
 8011a38:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8011a3a:	887b      	ldrh	r3, [r7, #2]
 8011a3c:	011b      	lsls	r3, r3, #4
 8011a3e:	3308      	adds	r3, #8
 8011a40:	687a      	ldr	r2, [r7, #4]
 8011a42:	4413      	add	r3, r2
    }
 8011a44:	4618      	mov	r0, r3
 8011a46:	370c      	adds	r7, #12
 8011a48:	46bd      	mov	sp, r7
 8011a4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011a4e:	4770      	bx	lr

08011a50 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 8011a50:	b480      	push	{r7}
 8011a52:	b083      	sub	sp, #12
 8011a54:	af00      	add	r7, sp, #0
 8011a56:	6078      	str	r0, [r7, #4]
 8011a58:	460b      	mov	r3, r1
 8011a5a:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8011a5c:	887b      	ldrh	r3, [r7, #2]
 8011a5e:	011b      	lsls	r3, r3, #4
 8011a60:	3308      	adds	r3, #8
 8011a62:	687a      	ldr	r2, [r7, #4]
 8011a64:	4413      	add	r3, r2
    }
 8011a66:	4618      	mov	r0, r3
 8011a68:	370c      	adds	r7, #12
 8011a6a:	46bd      	mov	sp, r7
 8011a6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011a70:	4770      	bx	lr

08011a72 <_GLOBAL__sub_I_touchgfx_init>:
 8011a72:	b580      	push	{r7, lr}
 8011a74:	af00      	add	r7, sp, #0
 8011a76:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011a7a:	2001      	movs	r0, #1
 8011a7c:	f7ff ff04 	bl	8011888 <_Z41__static_initialization_and_destruction_0ii>
 8011a80:	bd80      	pop	{r7, pc}

08011a82 <_GLOBAL__sub_D_touchgfx_init>:
 8011a82:	b580      	push	{r7, lr}
 8011a84:	af00      	add	r7, sp, #0
 8011a86:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011a8a:	2000      	movs	r0, #0
 8011a8c:	f7ff fefc 	bl	8011888 <_Z41__static_initialization_and_destruction_0ii>
 8011a90:	bd80      	pop	{r7, pc}
	...

08011a94 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 8011a94:	b480      	push	{r7}
 8011a96:	b083      	sub	sp, #12
 8011a98:	af00      	add	r7, sp, #0
 8011a9a:	6078      	str	r0, [r7, #4]
    {
 8011a9c:	4a04      	ldr	r2, [pc, #16]	; (8011ab0 <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 8011a9e:	687b      	ldr	r3, [r7, #4]
 8011aa0:	601a      	str	r2, [r3, #0]
    }
 8011aa2:	687b      	ldr	r3, [r7, #4]
 8011aa4:	4618      	mov	r0, r3
 8011aa6:	370c      	adds	r7, #12
 8011aa8:	46bd      	mov	sp, r7
 8011aaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011aae:	4770      	bx	lr
 8011ab0:	0802eb04 	.word	0x0802eb04

08011ab4 <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 8011ab4:	b580      	push	{r7, lr}
 8011ab6:	b082      	sub	sp, #8
 8011ab8:	af00      	add	r7, sp, #0
 8011aba:	6078      	str	r0, [r7, #4]
    }
 8011abc:	6878      	ldr	r0, [r7, #4]
 8011abe:	f7ff ffe9 	bl	8011a94 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 8011ac2:	2104      	movs	r1, #4
 8011ac4:	6878      	ldr	r0, [r7, #4]
 8011ac6:	f018 fba2 	bl	802a20e <_ZdlPvj>
 8011aca:	687b      	ldr	r3, [r7, #4]
 8011acc:	4618      	mov	r0, r3
 8011ace:	3708      	adds	r7, #8
 8011ad0:	46bd      	mov	sp, r7
 8011ad2:	bd80      	pop	{r7, pc}

08011ad4 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 8011ad4:	b480      	push	{r7}
 8011ad6:	b083      	sub	sp, #12
 8011ad8:	af00      	add	r7, sp, #0
 8011ada:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 8011adc:	687b      	ldr	r3, [r7, #4]
 8011ade:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 8011ae2:	3301      	adds	r3, #1
 8011ae4:	b2da      	uxtb	r2, r3
 8011ae6:	687b      	ldr	r3, [r7, #4]
 8011ae8:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
    }
 8011aec:	bf00      	nop
 8011aee:	370c      	adds	r7, #12
 8011af0:	46bd      	mov	sp, r7
 8011af2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011af6:	4770      	bx	lr

08011af8 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 8011af8:	b480      	push	{r7}
 8011afa:	b083      	sub	sp, #12
 8011afc:	af00      	add	r7, sp, #0
 8011afe:	6078      	str	r0, [r7, #4]
 8011b00:	6039      	str	r1, [r7, #0]
        frameBufferAllocator = allocator;
 8011b02:	687b      	ldr	r3, [r7, #4]
 8011b04:	683a      	ldr	r2, [r7, #0]
 8011b06:	619a      	str	r2, [r3, #24]
    }
 8011b08:	bf00      	nop
 8011b0a:	370c      	adds	r7, #12
 8011b0c:	46bd      	mov	sp, r7
 8011b0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011b12:	4770      	bx	lr

08011b14 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    FrameBufferAllocator* getFrameBufferAllocator()
 8011b14:	b480      	push	{r7}
 8011b16:	b083      	sub	sp, #12
 8011b18:	af00      	add	r7, sp, #0
 8011b1a:	6078      	str	r0, [r7, #4]
        return frameBufferAllocator;
 8011b1c:	687b      	ldr	r3, [r7, #4]
 8011b1e:	699b      	ldr	r3, [r3, #24]
    }
 8011b20:	4618      	mov	r0, r3
 8011b22:	370c      	adds	r7, #12
 8011b24:	46bd      	mov	sp, r7
 8011b26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011b2a:	4770      	bx	lr

08011b2c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 8011b2c:	b580      	push	{r7, lr}
 8011b2e:	b082      	sub	sp, #8
 8011b30:	af00      	add	r7, sp, #0
 8011b32:	6078      	str	r0, [r7, #4]
 8011b34:	460b      	mov	r3, r1
 8011b36:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 8011b38:	78fb      	ldrb	r3, [r7, #3]
 8011b3a:	2b00      	cmp	r3, #0
 8011b3c:	d002      	beq.n	8011b44 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 8011b3e:	78fb      	ldrb	r3, [r7, #3]
 8011b40:	2b02      	cmp	r3, #2
 8011b42:	d105      	bne.n	8011b50 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 8011b44:	687b      	ldr	r3, [r7, #4]
 8011b46:	78fa      	ldrb	r2, [r7, #3]
 8011b48:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 8011b4c:	2301      	movs	r3, #1
 8011b4e:	e027      	b.n	8011ba0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 8011b50:	78fb      	ldrb	r3, [r7, #3]
 8011b52:	2b01      	cmp	r3, #1
 8011b54:	d123      	bne.n	8011b9e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 8011b56:	687b      	ldr	r3, [r7, #4]
 8011b58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011b5a:	2b00      	cmp	r3, #0
 8011b5c:	d014      	beq.n	8011b88 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 8011b5e:	687b      	ldr	r3, [r7, #4]
 8011b60:	681b      	ldr	r3, [r3, #0]
 8011b62:	339c      	adds	r3, #156	; 0x9c
 8011b64:	681b      	ldr	r3, [r3, #0]
 8011b66:	6878      	ldr	r0, [r7, #4]
 8011b68:	4798      	blx	r3
 8011b6a:	4603      	mov	r3, r0
 8011b6c:	461a      	mov	r2, r3
 8011b6e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011b72:	429a      	cmp	r2, r3
 8011b74:	d008      	beq.n	8011b88 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 8011b76:	4b0c      	ldr	r3, [pc, #48]	; (8011ba8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 8011b78:	781b      	ldrb	r3, [r3, #0]
 8011b7a:	f083 0301 	eor.w	r3, r3, #1
 8011b7e:	b2db      	uxtb	r3, r3
 8011b80:	2b00      	cmp	r3, #0
 8011b82:	d001      	beq.n	8011b88 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 8011b84:	2301      	movs	r3, #1
 8011b86:	e000      	b.n	8011b8a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 8011b88:	2300      	movs	r3, #0
 8011b8a:	2b00      	cmp	r3, #0
 8011b8c:	d005      	beq.n	8011b9a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 8011b8e:	687b      	ldr	r3, [r7, #4]
 8011b90:	78fa      	ldrb	r2, [r7, #3]
 8011b92:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 8011b96:	2301      	movs	r3, #1
 8011b98:	e002      	b.n	8011ba0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 8011b9a:	2300      	movs	r3, #0
 8011b9c:	e000      	b.n	8011ba0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 8011b9e:	2300      	movs	r3, #0
    }
 8011ba0:	4618      	mov	r0, r3
 8011ba2:	3708      	adds	r7, #8
 8011ba4:	46bd      	mov	sp, r7
 8011ba6:	bd80      	pop	{r7, pc}
 8011ba8:	20002326 	.word	0x20002326

08011bac <_ZN20TouchGFXGeneratedHAL10initializeEv>:
                   3, /* number of blocks */
                   2  /* bytes per pixel */
                   > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 8011bac:	b5b0      	push	{r4, r5, r7, lr}
 8011bae:	b082      	sub	sp, #8
 8011bb0:	af00      	add	r7, sp, #0
 8011bb2:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 8011bb4:	687b      	ldr	r3, [r7, #4]
 8011bb6:	4618      	mov	r0, r3
 8011bb8:	f001 fa37 	bl	801302a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8011bbc:	687d      	ldr	r5, [r7, #4]
 8011bbe:	687b      	ldr	r3, [r7, #4]
 8011bc0:	681b      	ldr	r3, [r3, #0]
 8011bc2:	3364      	adds	r3, #100	; 0x64
 8011bc4:	681c      	ldr	r4, [r3, #0]
 8011bc6:	f007 f8c5 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 8011bca:	4603      	mov	r3, r0
 8011bcc:	4619      	mov	r1, r3
 8011bce:	4628      	mov	r0, r5
 8011bd0:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 8011bd2:	687b      	ldr	r3, [r7, #4]
 8011bd4:	681b      	ldr	r3, [r3, #0]
 8011bd6:	3380      	adds	r3, #128	; 0x80
 8011bd8:	681b      	ldr	r3, [r3, #0]
 8011bda:	6878      	ldr	r0, [r7, #4]
 8011bdc:	4798      	blx	r3
    enableInterrupts();
 8011bde:	687b      	ldr	r3, [r7, #4]
 8011be0:	681b      	ldr	r3, [r3, #0]
 8011be2:	3378      	adds	r3, #120	; 0x78
 8011be4:	681b      	ldr	r3, [r3, #0]
 8011be6:	6878      	ldr	r0, [r7, #4]
 8011be8:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 8011bea:	687b      	ldr	r3, [r7, #4]
 8011bec:	4906      	ldr	r1, [pc, #24]	; (8011c08 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 8011bee:	4618      	mov	r0, r3
 8011bf0:	f7ff ff82 	bl	8011af8 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 8011bf4:	687b      	ldr	r3, [r7, #4]
 8011bf6:	2102      	movs	r1, #2
 8011bf8:	4618      	mov	r0, r3
 8011bfa:	f7ff ff97 	bl	8011b2c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 8011bfe:	bf00      	nop
 8011c00:	3708      	adds	r7, #8
 8011c02:	46bd      	mov	sp, r7
 8011c04:	bdb0      	pop	{r4, r5, r7, pc}
 8011c06:	bf00      	nop
 8011c08:	20000c74 	.word	0x20000c74

08011c0c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 8011c0c:	b480      	push	{r7}
 8011c0e:	b083      	sub	sp, #12
 8011c10:	af00      	add	r7, sp, #0
 8011c12:	6078      	str	r0, [r7, #4]
}
 8011c14:	bf00      	nop
 8011c16:	370c      	adds	r7, #12
 8011c18:	46bd      	mov	sp, r7
 8011c1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011c1e:	4770      	bx	lr

08011c20 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 8011c20:	b480      	push	{r7}
 8011c22:	b083      	sub	sp, #12
 8011c24:	af00      	add	r7, sp, #0
 8011c26:	6078      	str	r0, [r7, #4]
}
 8011c28:	bf00      	nop
 8011c2a:	370c      	adds	r7, #12
 8011c2c:	46bd      	mov	sp, r7
 8011c2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011c32:	4770      	bx	lr

08011c34 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 8011c34:	b480      	push	{r7}
 8011c36:	b083      	sub	sp, #12
 8011c38:	af00      	add	r7, sp, #0
 8011c3a:	6078      	str	r0, [r7, #4]
}
 8011c3c:	bf00      	nop
 8011c3e:	370c      	adds	r7, #12
 8011c40:	46bd      	mov	sp, r7
 8011c42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011c46:	4770      	bx	lr

08011c48 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 8011c48:	b480      	push	{r7}
 8011c4a:	b083      	sub	sp, #12
 8011c4c:	af00      	add	r7, sp, #0
 8011c4e:	6078      	str	r0, [r7, #4]
}
 8011c50:	bf00      	nop
 8011c52:	370c      	adds	r7, #12
 8011c54:	46bd      	mov	sp, r7
 8011c56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011c5a:	4770      	bx	lr

08011c5c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 8011c5c:	b580      	push	{r7, lr}
 8011c5e:	b082      	sub	sp, #8
 8011c60:	af00      	add	r7, sp, #0
 8011c62:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 8011c64:	687b      	ldr	r3, [r7, #4]
 8011c66:	4618      	mov	r0, r3
 8011c68:	f001 f9c6 	bl	8012ff8 <_ZN8touchgfx3HAL10beginFrameEv>
 8011c6c:	4603      	mov	r3, r0
}
 8011c6e:	4618      	mov	r0, r3
 8011c70:	3708      	adds	r7, #8
 8011c72:	46bd      	mov	sp, r7
 8011c74:	bd80      	pop	{r7, pc}

08011c76 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 8011c76:	b580      	push	{r7, lr}
 8011c78:	b082      	sub	sp, #8
 8011c7a:	af00      	add	r7, sp, #0
 8011c7c:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 8011c7e:	bf00      	nop
 8011c80:	f7f1 fbd0 	bl	8003424 <touchgfxDisplayDriverTransmitActive>
 8011c84:	4603      	mov	r3, r0
 8011c86:	2b00      	cmp	r3, #0
 8011c88:	bf14      	ite	ne
 8011c8a:	2301      	movne	r3, #1
 8011c8c:	2300      	moveq	r3, #0
 8011c8e:	b2db      	uxtb	r3, r3
 8011c90:	2b00      	cmp	r3, #0
 8011c92:	d1f5      	bne.n	8011c80 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 8011c94:	687b      	ldr	r3, [r7, #4]
 8011c96:	4618      	mov	r0, r3
 8011c98:	f001 f9ba 	bl	8013010 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 8011c9c:	f7ff f8ce 	bl	8010e3c <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 8011ca0:	bf00      	nop
 8011ca2:	3708      	adds	r7, #8
 8011ca4:	46bd      	mov	sp, r7
 8011ca6:	bd80      	pop	{r7, pc}

08011ca8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 8011ca8:	b480      	push	{r7}
 8011caa:	b083      	sub	sp, #12
 8011cac:	af00      	add	r7, sp, #0
 8011cae:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 8011cb0:	2300      	movs	r3, #0
}
 8011cb2:	4618      	mov	r0, r3
 8011cb4:	370c      	adds	r7, #12
 8011cb6:	46bd      	mov	sp, r7
 8011cb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011cbc:	4770      	bx	lr

08011cbe <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 8011cbe:	b480      	push	{r7}
 8011cc0:	b083      	sub	sp, #12
 8011cc2:	af00      	add	r7, sp, #0
 8011cc4:	6078      	str	r0, [r7, #4]
 8011cc6:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 8011cc8:	bf00      	nop
 8011cca:	370c      	adds	r7, #12
 8011ccc:	46bd      	mov	sp, r7
 8011cce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011cd2:	4770      	bx	lr

08011cd4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8011cd4:	b580      	push	{r7, lr}
 8011cd6:	b088      	sub	sp, #32
 8011cd8:	af02      	add	r7, sp, #8
 8011cda:	6078      	str	r0, [r7, #4]
 8011cdc:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 8011cde:	687b      	ldr	r3, [r7, #4]
 8011ce0:	6839      	ldr	r1, [r7, #0]
 8011ce2:	4618      	mov	r0, r3
 8011ce4:	f001 f952 	bl	8012f8c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 8011ce8:	687b      	ldr	r3, [r7, #4]
 8011cea:	699a      	ldr	r2, [r3, #24]
 8011cec:	687b      	ldr	r3, [r7, #4]
 8011cee:	699b      	ldr	r3, [r3, #24]
 8011cf0:	681b      	ldr	r3, [r3, #0]
 8011cf2:	3304      	adds	r3, #4
 8011cf4:	681b      	ldr	r3, [r3, #0]
 8011cf6:	4610      	mov	r0, r2
 8011cf8:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 8011cfa:	f7f1 fb93 	bl	8003424 <touchgfxDisplayDriverTransmitActive>
 8011cfe:	4603      	mov	r3, r0
 8011d00:	2b00      	cmp	r3, #0
 8011d02:	bf0c      	ite	eq
 8011d04:	2301      	moveq	r3, #1
 8011d06:	2300      	movne	r3, #0
 8011d08:	b2db      	uxtb	r3, r3
 8011d0a:	2b00      	cmp	r3, #0
 8011d0c:	d021      	beq.n	8011d52 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 8011d0e:	f107 030c 	add.w	r3, r7, #12
 8011d12:	4618      	mov	r0, r3
 8011d14:	f7f7 fcb9 	bl	800968a <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 8011d18:	687b      	ldr	r3, [r7, #4]
 8011d1a:	699a      	ldr	r2, [r3, #24]
 8011d1c:	687b      	ldr	r3, [r7, #4]
 8011d1e:	699b      	ldr	r3, [r3, #24]
 8011d20:	681b      	ldr	r3, [r3, #0]
 8011d22:	330c      	adds	r3, #12
 8011d24:	681b      	ldr	r3, [r3, #0]
 8011d26:	f107 010c 	add.w	r1, r7, #12
 8011d2a:	4610      	mov	r0, r2
 8011d2c:	4798      	blx	r3
 8011d2e:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 8011d30:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8011d34:	b299      	uxth	r1, r3
 8011d36:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8011d3a:	b29a      	uxth	r2, r3
 8011d3c:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 8011d40:	b298      	uxth	r0, r3
 8011d42:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8011d46:	b29b      	uxth	r3, r3
 8011d48:	9300      	str	r3, [sp, #0]
 8011d4a:	4603      	mov	r3, r0
 8011d4c:	6978      	ldr	r0, [r7, #20]
 8011d4e:	f7f1 fb7b 	bl	8003448 <touchgfxDisplayDriverTransmitBlock>
    }
}
 8011d52:	bf00      	nop
 8011d54:	3718      	adds	r7, #24
 8011d56:	46bd      	mov	sp, r7
 8011d58:	bd80      	pop	{r7, pc}

08011d5a <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 8011d5a:	b580      	push	{r7, lr}
 8011d5c:	b084      	sub	sp, #16
 8011d5e:	af00      	add	r7, sp, #0
 8011d60:	60f8      	str	r0, [r7, #12]
 8011d62:	60b9      	str	r1, [r7, #8]
 8011d64:	607a      	str	r2, [r7, #4]
 8011d66:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 8011d68:	68f8      	ldr	r0, [r7, #12]
 8011d6a:	683b      	ldr	r3, [r7, #0]
 8011d6c:	687a      	ldr	r2, [r7, #4]
 8011d6e:	68b9      	ldr	r1, [r7, #8]
 8011d70:	f001 fa7d 	bl	801326e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 8011d74:	4603      	mov	r3, r0
}
 8011d76:	4618      	mov	r0, r3
 8011d78:	3710      	adds	r7, #16
 8011d7a:	46bd      	mov	sp, r7
 8011d7c:	bd80      	pop	{r7, pc}

08011d7e <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 8011d7e:	b480      	push	{r7}
 8011d80:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
   */
}
 8011d82:	bf00      	nop
 8011d84:	46bd      	mov	sp, r7
 8011d86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011d8a:	4770      	bx	lr

08011d8c <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 8011d8c:	b480      	push	{r7}
 8011d8e:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
   */
}
 8011d90:	bf00      	nop
 8011d92:	46bd      	mov	sp, r7
 8011d94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011d98:	4770      	bx	lr

08011d9a <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 8011d9a:	b580      	push	{r7, lr}
 8011d9c:	b086      	sub	sp, #24
 8011d9e:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 8011da0:	f7f8 fe28 	bl	800a9f4 <_ZN8touchgfx3HAL11getInstanceEv>
 8011da4:	4603      	mov	r3, r0
 8011da6:	4618      	mov	r0, r3
 8011da8:	f7ff feb4 	bl	8011b14 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 8011dac:	60f8      	str	r0, [r7, #12]

  // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 8011dae:	68fb      	ldr	r3, [r7, #12]
 8011db0:	681b      	ldr	r3, [r3, #0]
 8011db2:	3318      	adds	r3, #24
 8011db4:	681b      	ldr	r3, [r3, #0]
 8011db6:	68f8      	ldr	r0, [r7, #12]
 8011db8:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 8011dba:	68fb      	ldr	r3, [r7, #12]
 8011dbc:	681b      	ldr	r3, [r3, #0]
 8011dbe:	3308      	adds	r3, #8
 8011dc0:	681b      	ldr	r3, [r3, #0]
 8011dc2:	68f8      	ldr	r0, [r7, #12]
 8011dc4:	4798      	blx	r3
 8011dc6:	4603      	mov	r3, r0
 8011dc8:	2b00      	cmp	r3, #0
 8011dca:	d01d      	beq.n	8011e08 <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 8011dcc:	463b      	mov	r3, r7
 8011dce:	4618      	mov	r0, r3
 8011dd0:	f7f7 fc5b 	bl	800968a <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 8011dd4:	68fb      	ldr	r3, [r7, #12]
 8011dd6:	681b      	ldr	r3, [r3, #0]
 8011dd8:	330c      	adds	r3, #12
 8011dda:	681b      	ldr	r3, [r3, #0]
 8011ddc:	463a      	mov	r2, r7
 8011dde:	4611      	mov	r1, r2
 8011de0:	68f8      	ldr	r0, [r7, #12]
 8011de2:	4798      	blx	r3
 8011de4:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 8011de6:	f9b7 3000 	ldrsh.w	r3, [r7]
 8011dea:	b299      	uxth	r1, r3
 8011dec:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8011df0:	b29a      	uxth	r2, r3
 8011df2:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8011df6:	b298      	uxth	r0, r3
 8011df8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8011dfc:	b29b      	uxth	r3, r3
 8011dfe:	9300      	str	r3, [sp, #0]
 8011e00:	4603      	mov	r3, r0
 8011e02:	68b8      	ldr	r0, [r7, #8]
 8011e04:	f7f1 fb20 	bl	8003448 <touchgfxDisplayDriverTransmitBlock>
    }
}
 8011e08:	bf00      	nop
 8011e0a:	3710      	adds	r7, #16
 8011e0c:	46bd      	mov	sp, r7
 8011e0e:	bd80      	pop	{r7, pc}

08011e10 <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 8011e10:	b580      	push	{r7, lr}
 8011e12:	af00      	add	r7, sp, #0
  // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 8011e14:	f7ff ffc1 	bl	8011d9a <_ZN8touchgfx16startNewTransferEv>
}
 8011e18:	bf00      	nop
 8011e1a:	bd80      	pop	{r7, pc}

08011e1c <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 8011e1c:	b580      	push	{r7, lr}
 8011e1e:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 8011e20:	f7f8 fde8 	bl	800a9f4 <_ZN8touchgfx3HAL11getInstanceEv>
 8011e24:	4603      	mov	r3, r0
 8011e26:	4618      	mov	r0, r3
 8011e28:	f7ff fe54 	bl	8011ad4 <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 8011e2c:	f7fe fffa 	bl	8010e24 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 8011e30:	bf00      	nop
 8011e32:	bd80      	pop	{r7, pc}

08011e34 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 8011e34:	b480      	push	{r7}
 8011e36:	b083      	sub	sp, #12
 8011e38:	af00      	add	r7, sp, #0
 8011e3a:	6078      	str	r0, [r7, #4]
 8011e3c:	4a04      	ldr	r2, [pc, #16]	; (8011e50 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 8011e3e:	687b      	ldr	r3, [r7, #4]
 8011e40:	601a      	str	r2, [r3, #0]
 8011e42:	687b      	ldr	r3, [r7, #4]
 8011e44:	4618      	mov	r0, r3
 8011e46:	370c      	adds	r7, #12
 8011e48:	46bd      	mov	sp, r7
 8011e4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011e4e:	4770      	bx	lr
 8011e50:	0802eb04 	.word	0x0802eb04

08011e54 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 8011e54:	b5b0      	push	{r4, r5, r7, lr}
 8011e56:	b084      	sub	sp, #16
 8011e58:	af00      	add	r7, sp, #0
 8011e5a:	6078      	str	r0, [r7, #4]
    {
 8011e5c:	687b      	ldr	r3, [r7, #4]
 8011e5e:	4618      	mov	r0, r3
 8011e60:	f7ff ffe8 	bl	8011e34 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 8011e64:	4a1a      	ldr	r2, [pc, #104]	; (8011ed0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x7c>)
 8011e66:	687b      	ldr	r3, [r7, #4]
 8011e68:	601a      	str	r2, [r3, #0]
 8011e6a:	687b      	ldr	r3, [r7, #4]
 8011e6c:	f503 53b4 	add.w	r3, r3, #5760	; 0x1680
 8011e70:	3308      	adds	r3, #8
 8011e72:	2402      	movs	r4, #2
 8011e74:	461d      	mov	r5, r3
 8011e76:	e004      	b.n	8011e82 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x2e>
 8011e78:	4628      	mov	r0, r5
 8011e7a:	f7f7 fc06 	bl	800968a <_ZN8touchgfx4RectC1Ev>
 8011e7e:	3508      	adds	r5, #8
 8011e80:	3c01      	subs	r4, #1
 8011e82:	2c00      	cmp	r4, #0
 8011e84:	daf8      	bge.n	8011e78 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 8011e86:	687b      	ldr	r3, [r7, #4]
 8011e88:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011e8c:	461a      	mov	r2, r3
 8011e8e:	f04f 33ff 	mov.w	r3, #4294967295
 8011e92:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        drawingBlock = -1;
 8011e96:	687b      	ldr	r3, [r7, #4]
 8011e98:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011e9c:	461a      	mov	r2, r3
 8011e9e:	f04f 33ff 	mov.w	r3, #4294967295
 8011ea2:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        for (uint32_t i = 0; i < blocks; i++)
 8011ea6:	2300      	movs	r3, #0
 8011ea8:	60fb      	str	r3, [r7, #12]
 8011eaa:	e008      	b.n	8011ebe <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 8011eac:	687a      	ldr	r2, [r7, #4]
 8011eae:	68fb      	ldr	r3, [r7, #12]
 8011eb0:	4413      	add	r3, r2
 8011eb2:	3304      	adds	r3, #4
 8011eb4:	2200      	movs	r2, #0
 8011eb6:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 8011eb8:	68fb      	ldr	r3, [r7, #12]
 8011eba:	3301      	adds	r3, #1
 8011ebc:	60fb      	str	r3, [r7, #12]
 8011ebe:	68fb      	ldr	r3, [r7, #12]
 8011ec0:	2b02      	cmp	r3, #2
 8011ec2:	d9f3      	bls.n	8011eac <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x58>
        }
    }
 8011ec4:	687b      	ldr	r3, [r7, #4]
 8011ec6:	4618      	mov	r0, r3
 8011ec8:	3710      	adds	r7, #16
 8011eca:	46bd      	mov	sp, r7
 8011ecc:	bdb0      	pop	{r4, r5, r7, pc}
 8011ece:	bf00      	nop
 8011ed0:	0802ea00 	.word	0x0802ea00

08011ed4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 8011ed4:	b580      	push	{r7, lr}
 8011ed6:	b082      	sub	sp, #8
 8011ed8:	af00      	add	r7, sp, #0
 8011eda:	6078      	str	r0, [r7, #4]
 8011edc:	4a05      	ldr	r2, [pc, #20]	; (8011ef4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev+0x20>)
 8011ede:	687b      	ldr	r3, [r7, #4]
 8011ee0:	601a      	str	r2, [r3, #0]
 8011ee2:	687b      	ldr	r3, [r7, #4]
 8011ee4:	4618      	mov	r0, r3
 8011ee6:	f7ff fdd5 	bl	8011a94 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 8011eea:	687b      	ldr	r3, [r7, #4]
 8011eec:	4618      	mov	r0, r3
 8011eee:	3708      	adds	r7, #8
 8011ef0:	46bd      	mov	sp, r7
 8011ef2:	bd80      	pop	{r7, pc}
 8011ef4:	0802ea00 	.word	0x0802ea00

08011ef8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED0Ev>:
 8011ef8:	b580      	push	{r7, lr}
 8011efa:	b082      	sub	sp, #8
 8011efc:	af00      	add	r7, sp, #0
 8011efe:	6078      	str	r0, [r7, #4]
 8011f00:	6878      	ldr	r0, [r7, #4]
 8011f02:	f7ff ffe7 	bl	8011ed4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
 8011f06:	f241 61a8 	movw	r1, #5800	; 0x16a8
 8011f0a:	6878      	ldr	r0, [r7, #4]
 8011f0c:	f018 f97f 	bl	802a20e <_ZdlPvj>
 8011f10:	687b      	ldr	r3, [r7, #4]
 8011f12:	4618      	mov	r0, r3
 8011f14:	3708      	adds	r7, #8
 8011f16:	46bd      	mov	sp, r7
 8011f18:	bd80      	pop	{r7, pc}
	...

08011f1c <_Z41__static_initialization_and_destruction_0ii>:
 8011f1c:	b580      	push	{r7, lr}
 8011f1e:	b082      	sub	sp, #8
 8011f20:	af00      	add	r7, sp, #0
 8011f22:	6078      	str	r0, [r7, #4]
 8011f24:	6039      	str	r1, [r7, #0]
 8011f26:	687b      	ldr	r3, [r7, #4]
 8011f28:	2b01      	cmp	r3, #1
 8011f2a:	d107      	bne.n	8011f3c <_Z41__static_initialization_and_destruction_0ii+0x20>
 8011f2c:	683b      	ldr	r3, [r7, #0]
 8011f2e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011f32:	4293      	cmp	r3, r2
 8011f34:	d102      	bne.n	8011f3c <_Z41__static_initialization_and_destruction_0ii+0x20>
                   > blockAllocator;
 8011f36:	4809      	ldr	r0, [pc, #36]	; (8011f5c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8011f38:	f7ff ff8c 	bl	8011e54 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>
 8011f3c:	687b      	ldr	r3, [r7, #4]
 8011f3e:	2b00      	cmp	r3, #0
 8011f40:	d107      	bne.n	8011f52 <_Z41__static_initialization_and_destruction_0ii+0x36>
 8011f42:	683b      	ldr	r3, [r7, #0]
 8011f44:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011f48:	4293      	cmp	r3, r2
 8011f4a:	d102      	bne.n	8011f52 <_Z41__static_initialization_and_destruction_0ii+0x36>
 8011f4c:	4803      	ldr	r0, [pc, #12]	; (8011f5c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8011f4e:	f7ff ffc1 	bl	8011ed4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
}
 8011f52:	bf00      	nop
 8011f54:	3708      	adds	r7, #8
 8011f56:	46bd      	mov	sp, r7
 8011f58:	bd80      	pop	{r7, pc}
 8011f5a:	bf00      	nop
 8011f5c:	20000c74 	.word	0x20000c74

08011f60 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 8011f60:	b580      	push	{r7, lr}
 8011f62:	b086      	sub	sp, #24
 8011f64:	af00      	add	r7, sp, #0
 8011f66:	60f8      	str	r0, [r7, #12]
 8011f68:	4608      	mov	r0, r1
 8011f6a:	4611      	mov	r1, r2
 8011f6c:	461a      	mov	r2, r3
 8011f6e:	4603      	mov	r3, r0
 8011f70:	817b      	strh	r3, [r7, #10]
 8011f72:	460b      	mov	r3, r1
 8011f74:	813b      	strh	r3, [r7, #8]
 8011f76:	4613      	mov	r3, r2
 8011f78:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 8011f7a:	68fb      	ldr	r3, [r7, #12]
 8011f7c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011f80:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8011f84:	3301      	adds	r3, #1
 8011f86:	68fa      	ldr	r2, [r7, #12]
 8011f88:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8011f8c:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        if (drawingBlock == blocks)
 8011f90:	68fb      	ldr	r3, [r7, #12]
 8011f92:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011f96:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8011f9a:	2b03      	cmp	r3, #3
 8011f9c:	d109      	bne.n	8011fb2 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 8011f9e:	68fb      	ldr	r3, [r7, #12]
 8011fa0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011fa4:	461a      	mov	r2, r3
 8011fa6:	2300      	movs	r3, #0
 8011fa8:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        }
        while (state[drawingBlock] != EMPTY)
 8011fac:	e001      	b.n	8011fb2 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 8011fae:	f7ff fee6 	bl	8011d7e <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 8011fb2:	68fb      	ldr	r3, [r7, #12]
 8011fb4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011fb8:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8011fbc:	68fa      	ldr	r2, [r7, #12]
 8011fbe:	4413      	add	r3, r2
 8011fc0:	791b      	ldrb	r3, [r3, #4]
 8011fc2:	b2db      	uxtb	r3, r3
 8011fc4:	2b00      	cmp	r3, #0
 8011fc6:	bf14      	ite	ne
 8011fc8:	2301      	movne	r3, #1
 8011fca:	2300      	moveq	r3, #0
 8011fcc:	b2db      	uxtb	r3, r3
 8011fce:	2b00      	cmp	r3, #0
 8011fd0:	d1ed      	bne.n	8011fae <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 8011fd2:	68fb      	ldr	r3, [r7, #12]
 8011fd4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011fd8:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8011fdc:	68fa      	ldr	r2, [r7, #12]
 8011fde:	4413      	add	r3, r2
 8011fe0:	791b      	ldrb	r3, [r3, #4]
 8011fe2:	b2db      	uxtb	r3, r3
 8011fe4:	2b00      	cmp	r3, #0
 8011fe6:	d005      	beq.n	8011ff4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 8011fe8:	4b38      	ldr	r3, [pc, #224]	; (80120cc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 8011fea:	4a39      	ldr	r2, [pc, #228]	; (80120d0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x170>)
 8011fec:	21aa      	movs	r1, #170	; 0xaa
 8011fee:	4839      	ldr	r0, [pc, #228]	; (80120d4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x174>)
 8011ff0:	f019 f8fe 	bl	802b1f0 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 8011ff4:	68fb      	ldr	r3, [r7, #12]
 8011ff6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8011ffa:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8011ffe:	68fa      	ldr	r2, [r7, #12]
 8012000:	4413      	add	r3, r2
 8012002:	2201      	movs	r2, #1
 8012004:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 8012006:	88fb      	ldrh	r3, [r7, #6]
 8012008:	005b      	lsls	r3, r3, #1
 801200a:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 801200c:	697b      	ldr	r3, [r7, #20]
 801200e:	f44f 62f0 	mov.w	r2, #1920	; 0x780
 8012012:	fbb2 f3f3 	udiv	r3, r2, r3
 8012016:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 8012018:	68fb      	ldr	r3, [r7, #12]
 801201a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801201e:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	; 0x6a4
 8012022:	4613      	mov	r3, r2
 8012024:	011b      	lsls	r3, r3, #4
 8012026:	1a9b      	subs	r3, r3, r2
 8012028:	01db      	lsls	r3, r3, #7
 801202a:	3308      	adds	r3, #8
 801202c:	68fa      	ldr	r2, [r7, #12]
 801202e:	441a      	add	r2, r3
 8012030:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012032:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 8012034:	68fb      	ldr	r3, [r7, #12]
 8012036:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801203a:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	; 0x6a4
 801203e:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8012042:	68fb      	ldr	r3, [r7, #12]
 8012044:	f202 22d1 	addw	r2, r2, #721	; 0x2d1
 8012048:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 801204c:	68fb      	ldr	r3, [r7, #12]
 801204e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012052:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8012056:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 801205a:	68fa      	ldr	r2, [r7, #12]
 801205c:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 8012060:	00db      	lsls	r3, r3, #3
 8012062:	4413      	add	r3, r2
 8012064:	460a      	mov	r2, r1
 8012066:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 8012068:	68fb      	ldr	r3, [r7, #12]
 801206a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801206e:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8012072:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 8012076:	68fa      	ldr	r2, [r7, #12]
 8012078:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 801207c:	00db      	lsls	r3, r3, #3
 801207e:	4413      	add	r3, r2
 8012080:	460a      	mov	r2, r1
 8012082:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 8012084:	8c3a      	ldrh	r2, [r7, #32]
 8012086:	693b      	ldr	r3, [r7, #16]
 8012088:	429a      	cmp	r2, r3
 801208a:	bfa8      	it	ge
 801208c:	461a      	movge	r2, r3
 801208e:	68fb      	ldr	r3, [r7, #12]
 8012090:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012094:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8012098:	b211      	sxth	r1, r2
 801209a:	68fa      	ldr	r2, [r7, #12]
 801209c:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 80120a0:	00db      	lsls	r3, r3, #3
 80120a2:	4413      	add	r3, r2
 80120a4:	460a      	mov	r2, r1
 80120a6:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 80120a8:	68fb      	ldr	r3, [r7, #12]
 80120aa:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80120ae:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 80120b2:	68fa      	ldr	r2, [r7, #12]
 80120b4:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 80120b8:	00db      	lsls	r3, r3, #3
 80120ba:	4413      	add	r3, r2
 80120bc:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80120c0:	b29b      	uxth	r3, r3
    }
 80120c2:	4618      	mov	r0, r3
 80120c4:	3718      	adds	r7, #24
 80120c6:	46bd      	mov	sp, r7
 80120c8:	bd80      	pop	{r7, pc}
 80120ca:	bf00      	nop
 80120cc:	0802d668 	.word	0x0802d668
 80120d0:	0802d688 	.word	0x0802d688
 80120d4:	0802d7bc 	.word	0x0802d7bc

080120d8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 80120d8:	b580      	push	{r7, lr}
 80120da:	b082      	sub	sp, #8
 80120dc:	af00      	add	r7, sp, #0
 80120de:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 80120e0:	687b      	ldr	r3, [r7, #4]
 80120e2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80120e6:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 80120ea:	687a      	ldr	r2, [r7, #4]
 80120ec:	4413      	add	r3, r2
 80120ee:	791b      	ldrb	r3, [r3, #4]
 80120f0:	b2db      	uxtb	r3, r3
 80120f2:	2b01      	cmp	r3, #1
 80120f4:	d005      	beq.n	8012102 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 80120f6:	4b0a      	ldr	r3, [pc, #40]	; (8012120 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 80120f8:	4a0a      	ldr	r2, [pc, #40]	; (8012124 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 80120fa:	21b9      	movs	r1, #185	; 0xb9
 80120fc:	480a      	ldr	r0, [pc, #40]	; (8012128 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 80120fe:	f019 f877 	bl	802b1f0 <__assert_func>
        state[drawingBlock] = DRAWN;
 8012102:	687b      	ldr	r3, [r7, #4]
 8012104:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012108:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 801210c:	687a      	ldr	r2, [r7, #4]
 801210e:	4413      	add	r3, r2
 8012110:	2202      	movs	r2, #2
 8012112:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 8012114:	f7ff fe3a 	bl	8011d8c <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 8012118:	bf00      	nop
 801211a:	3708      	adds	r7, #8
 801211c:	46bd      	mov	sp, r7
 801211e:	bd80      	pop	{r7, pc}
 8012120:	0802d810 	.word	0x0802d810
 8012124:	0802d834 	.word	0x0802d834
 8012128:	0802d7bc 	.word	0x0802d7bc

0801212c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 801212c:	b480      	push	{r7}
 801212e:	b085      	sub	sp, #20
 8012130:	af00      	add	r7, sp, #0
 8012132:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 8012134:	2300      	movs	r3, #0
 8012136:	60fb      	str	r3, [r7, #12]
 8012138:	e011      	b.n	801215e <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 801213a:	687a      	ldr	r2, [r7, #4]
 801213c:	68fb      	ldr	r3, [r7, #12]
 801213e:	4413      	add	r3, r2
 8012140:	3304      	adds	r3, #4
 8012142:	781b      	ldrb	r3, [r3, #0]
 8012144:	b2db      	uxtb	r3, r3
 8012146:	2b02      	cmp	r3, #2
 8012148:	bf0c      	ite	eq
 801214a:	2301      	moveq	r3, #1
 801214c:	2300      	movne	r3, #0
 801214e:	b2db      	uxtb	r3, r3
 8012150:	2b00      	cmp	r3, #0
 8012152:	d001      	beq.n	8012158 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 8012154:	2301      	movs	r3, #1
 8012156:	e006      	b.n	8012166 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 8012158:	68fb      	ldr	r3, [r7, #12]
 801215a:	3301      	adds	r3, #1
 801215c:	60fb      	str	r3, [r7, #12]
 801215e:	68fb      	ldr	r3, [r7, #12]
 8012160:	2b02      	cmp	r3, #2
 8012162:	d9ea      	bls.n	801213a <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 8012164:	2300      	movs	r3, #0
    }
 8012166:	4618      	mov	r0, r3
 8012168:	3714      	adds	r7, #20
 801216a:	46bd      	mov	sp, r7
 801216c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012170:	4770      	bx	lr
	...

08012174 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 8012174:	b580      	push	{r7, lr}
 8012176:	b082      	sub	sp, #8
 8012178:	af00      	add	r7, sp, #0
 801217a:	6078      	str	r0, [r7, #4]
 801217c:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 801217e:	687b      	ldr	r3, [r7, #4]
 8012180:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012184:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8012188:	3301      	adds	r3, #1
 801218a:	687a      	ldr	r2, [r7, #4]
 801218c:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8012190:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        if (sendingBlock == blocks)
 8012194:	687b      	ldr	r3, [r7, #4]
 8012196:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801219a:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 801219e:	2b03      	cmp	r3, #3
 80121a0:	d106      	bne.n	80121b0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 80121a2:	687b      	ldr	r3, [r7, #4]
 80121a4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80121a8:	461a      	mov	r2, r3
 80121aa:	2300      	movs	r3, #0
 80121ac:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        }
        assert(state[sendingBlock] == DRAWN);
 80121b0:	687b      	ldr	r3, [r7, #4]
 80121b2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80121b6:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 80121ba:	687a      	ldr	r2, [r7, #4]
 80121bc:	4413      	add	r3, r2
 80121be:	791b      	ldrb	r3, [r3, #4]
 80121c0:	b2db      	uxtb	r3, r3
 80121c2:	2b02      	cmp	r3, #2
 80121c4:	d005      	beq.n	80121d2 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 80121c6:	4b16      	ldr	r3, [pc, #88]	; (8012220 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 80121c8:	4a16      	ldr	r2, [pc, #88]	; (8012224 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 80121ca:	21dd      	movs	r1, #221	; 0xdd
 80121cc:	4816      	ldr	r0, [pc, #88]	; (8012228 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 80121ce:	f019 f80f 	bl	802b1f0 <__assert_func>
        rect = blockRect[sendingBlock];
 80121d2:	687b      	ldr	r3, [r7, #4]
 80121d4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80121d8:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 80121dc:	683a      	ldr	r2, [r7, #0]
 80121de:	6879      	ldr	r1, [r7, #4]
 80121e0:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 80121e4:	00db      	lsls	r3, r3, #3
 80121e6:	440b      	add	r3, r1
 80121e8:	cb03      	ldmia	r3!, {r0, r1}
 80121ea:	6010      	str	r0, [r2, #0]
 80121ec:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 80121ee:	687b      	ldr	r3, [r7, #4]
 80121f0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80121f4:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 80121f8:	687a      	ldr	r2, [r7, #4]
 80121fa:	4413      	add	r3, r2
 80121fc:	2203      	movs	r2, #3
 80121fe:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 8012200:	687b      	ldr	r3, [r7, #4]
 8012202:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012206:	f8d3 26a0 	ldr.w	r2, [r3, #1696]	; 0x6a0
 801220a:	4613      	mov	r3, r2
 801220c:	011b      	lsls	r3, r3, #4
 801220e:	1a9b      	subs	r3, r3, r2
 8012210:	01db      	lsls	r3, r3, #7
 8012212:	3308      	adds	r3, #8
 8012214:	687a      	ldr	r2, [r7, #4]
 8012216:	4413      	add	r3, r2
    }
 8012218:	4618      	mov	r0, r3
 801221a:	3708      	adds	r7, #8
 801221c:	46bd      	mov	sp, r7
 801221e:	bd80      	pop	{r7, pc}
 8012220:	0802d908 	.word	0x0802d908
 8012224:	0802d928 	.word	0x0802d928
 8012228:	0802d7bc 	.word	0x0802d7bc

0801222c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 801222c:	b580      	push	{r7, lr}
 801222e:	b084      	sub	sp, #16
 8012230:	af00      	add	r7, sp, #0
 8012232:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 8012234:	687b      	ldr	r3, [r7, #4]
 8012236:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801223a:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 801223e:	3301      	adds	r3, #1
 8012240:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 8012242:	68fb      	ldr	r3, [r7, #12]
 8012244:	2b03      	cmp	r3, #3
 8012246:	d101      	bne.n	801224c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 8012248:	2300      	movs	r3, #0
 801224a:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 801224c:	687a      	ldr	r2, [r7, #4]
 801224e:	68fb      	ldr	r3, [r7, #12]
 8012250:	4413      	add	r3, r2
 8012252:	3304      	adds	r3, #4
 8012254:	781b      	ldrb	r3, [r3, #0]
 8012256:	b2db      	uxtb	r3, r3
 8012258:	2b02      	cmp	r3, #2
 801225a:	d005      	beq.n	8012268 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 801225c:	4b07      	ldr	r3, [pc, #28]	; (801227c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 801225e:	4a08      	ldr	r2, [pc, #32]	; (8012280 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 8012260:	21ea      	movs	r1, #234	; 0xea
 8012262:	4808      	ldr	r0, [pc, #32]	; (8012284 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 8012264:	f018 ffc4 	bl	802b1f0 <__assert_func>
        return blockRect[nextSendingBlock];
 8012268:	68fb      	ldr	r3, [r7, #12]
 801226a:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 801226e:	00db      	lsls	r3, r3, #3
 8012270:	687a      	ldr	r2, [r7, #4]
 8012272:	4413      	add	r3, r2
    }
 8012274:	4618      	mov	r0, r3
 8012276:	3710      	adds	r7, #16
 8012278:	46bd      	mov	sp, r7
 801227a:	bd80      	pop	{r7, pc}
 801227c:	0802da28 	.word	0x0802da28
 8012280:	0802da4c 	.word	0x0802da4c
 8012284:	0802d7bc 	.word	0x0802d7bc

08012288 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 8012288:	b480      	push	{r7}
 801228a:	b085      	sub	sp, #20
 801228c:	af00      	add	r7, sp, #0
 801228e:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 8012290:	687b      	ldr	r3, [r7, #4]
 8012292:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012296:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 801229a:	3301      	adds	r3, #1
 801229c:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 801229e:	68fb      	ldr	r3, [r7, #12]
 80122a0:	2b03      	cmp	r3, #3
 80122a2:	d101      	bne.n	80122a8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 80122a4:	2300      	movs	r3, #0
 80122a6:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 80122a8:	687a      	ldr	r2, [r7, #4]
 80122aa:	68fb      	ldr	r3, [r7, #12]
 80122ac:	4413      	add	r3, r2
 80122ae:	3304      	adds	r3, #4
 80122b0:	781b      	ldrb	r3, [r3, #0]
 80122b2:	b2db      	uxtb	r3, r3
 80122b4:	2b00      	cmp	r3, #0
 80122b6:	bf0c      	ite	eq
 80122b8:	2301      	moveq	r3, #1
 80122ba:	2300      	movne	r3, #0
 80122bc:	b2db      	uxtb	r3, r3
    }
 80122be:	4618      	mov	r0, r3
 80122c0:	3714      	adds	r7, #20
 80122c2:	46bd      	mov	sp, r7
 80122c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80122c8:	4770      	bx	lr
	...

080122cc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 80122cc:	b580      	push	{r7, lr}
 80122ce:	b082      	sub	sp, #8
 80122d0:	af00      	add	r7, sp, #0
 80122d2:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 80122d4:	687b      	ldr	r3, [r7, #4]
 80122d6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80122da:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 80122de:	687a      	ldr	r2, [r7, #4]
 80122e0:	4413      	add	r3, r2
 80122e2:	791b      	ldrb	r3, [r3, #4]
 80122e4:	b2db      	uxtb	r3, r3
 80122e6:	2b03      	cmp	r3, #3
 80122e8:	d005      	beq.n	80122f6 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 80122ea:	4b09      	ldr	r3, [pc, #36]	; (8012310 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 80122ec:	4a09      	ldr	r2, [pc, #36]	; (8012314 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 80122ee:	21ff      	movs	r1, #255	; 0xff
 80122f0:	4809      	ldr	r0, [pc, #36]	; (8012318 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 80122f2:	f018 ff7d 	bl	802b1f0 <__assert_func>
        state[sendingBlock] = EMPTY;
 80122f6:	687b      	ldr	r3, [r7, #4]
 80122f8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80122fc:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8012300:	687a      	ldr	r2, [r7, #4]
 8012302:	4413      	add	r3, r2
 8012304:	2200      	movs	r2, #0
 8012306:	711a      	strb	r2, [r3, #4]
    }
 8012308:	bf00      	nop
 801230a:	3708      	adds	r7, #8
 801230c:	46bd      	mov	sp, r7
 801230e:	bd80      	pop	{r7, pc}
 8012310:	0802db2c 	.word	0x0802db2c
 8012314:	0802db4c 	.word	0x0802db4c
 8012318:	0802d7bc 	.word	0x0802d7bc

0801231c <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 801231c:	b580      	push	{r7, lr}
 801231e:	af00      	add	r7, sp, #0
 8012320:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012324:	2001      	movs	r0, #1
 8012326:	f7ff fdf9 	bl	8011f1c <_Z41__static_initialization_and_destruction_0ii>
 801232a:	bd80      	pop	{r7, pc}

0801232c <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 801232c:	b580      	push	{r7, lr}
 801232e:	af00      	add	r7, sp, #0
 8012330:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012334:	2000      	movs	r0, #0
 8012336:	f7ff fdf1 	bl	8011f1c <_Z41__static_initialization_and_destruction_0ii>
 801233a:	bd80      	pop	{r7, pc}

0801233c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 801233c:	8880      	ldrh	r0, [r0, #4]
 801233e:	4770      	bx	lr

08012340 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8012340:	b570      	push	{r4, r5, r6, lr}
 8012342:	6803      	ldr	r3, [r0, #0]
 8012344:	4605      	mov	r5, r0
 8012346:	460c      	mov	r4, r1
 8012348:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801234a:	2100      	movs	r1, #0
 801234c:	4798      	blx	r3
 801234e:	682b      	ldr	r3, [r5, #0]
 8012350:	4606      	mov	r6, r0
 8012352:	6a1b      	ldr	r3, [r3, #32]
 8012354:	4628      	mov	r0, r5
 8012356:	4798      	blx	r3
 8012358:	1ba4      	subs	r4, r4, r6
 801235a:	b2a4      	uxth	r4, r4
 801235c:	fbb4 f0f0 	udiv	r0, r4, r0
 8012360:	bd70      	pop	{r4, r5, r6, pc}

08012362 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8012362:	2300      	movs	r3, #0
 8012364:	8083      	strh	r3, [r0, #4]
 8012366:	4770      	bx	lr

08012368 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8012368:	b510      	push	{r4, lr}
 801236a:	6803      	ldr	r3, [r0, #0]
 801236c:	8881      	ldrh	r1, [r0, #4]
 801236e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012370:	4604      	mov	r4, r0
 8012372:	4798      	blx	r3
 8012374:	88a3      	ldrh	r3, [r4, #4]
 8012376:	3301      	adds	r3, #1
 8012378:	80a3      	strh	r3, [r4, #4]
 801237a:	bd10      	pop	{r4, pc}

0801237c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 801237c:	6803      	ldr	r3, [r0, #0]
 801237e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012380:	4718      	bx	r3

08012382 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8012382:	4770      	bx	lr

08012384 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8012384:	4a02      	ldr	r2, [pc, #8]	; (8012390 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8012386:	6002      	str	r2, [r0, #0]
 8012388:	2200      	movs	r2, #0
 801238a:	8082      	strh	r2, [r0, #4]
 801238c:	4770      	bx	lr
 801238e:	bf00      	nop
 8012390:	0802eb30 	.word	0x0802eb30

08012394 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8012394:	b510      	push	{r4, lr}
 8012396:	6803      	ldr	r3, [r0, #0]
 8012398:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801239c:	4604      	mov	r4, r0
 801239e:	4798      	blx	r3
 80123a0:	b110      	cbz	r0, 80123a8 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 80123a2:	4620      	mov	r0, r4
 80123a4:	f7f7 fa08 	bl	80097b8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 80123a8:	bd10      	pop	{r4, pc}

080123aa <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 80123aa:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 80123ae:	4770      	bx	lr

080123b0 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 80123b0:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 80123b4:	4770      	bx	lr

080123b6 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 80123b6:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 80123ba:	4770      	bx	lr

080123bc <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 80123bc:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 80123c0:	4770      	bx	lr

080123c2 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 80123c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80123c4:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 80123c8:	461e      	mov	r6, r3
 80123ca:	6803      	ldr	r3, [r0, #0]
 80123cc:	460f      	mov	r7, r1
 80123ce:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80123d2:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 80123d6:	4604      	mov	r4, r0
 80123d8:	4615      	mov	r5, r2
 80123da:	4798      	blx	r3
 80123dc:	b93e      	cbnz	r6, 80123ee <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 80123de:	1bed      	subs	r5, r5, r7
 80123e0:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 80123e4:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80123e8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 80123ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80123ee:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 80123f2:	e7f7      	b.n	80123e4 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

080123f4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 80123f4:	b510      	push	{r4, lr}
 80123f6:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80123fa:	600c      	str	r4, [r1, #0]
 80123fc:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 8012400:	6011      	str	r1, [r2, #0]
 8012402:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8012406:	801a      	strh	r2, [r3, #0]
 8012408:	9b02      	ldr	r3, [sp, #8]
 801240a:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 801240e:	801a      	strh	r2, [r3, #0]
 8012410:	bd10      	pop	{r4, pc}

08012412 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 8012412:	b510      	push	{r4, lr}
 8012414:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8012418:	600c      	str	r4, [r1, #0]
 801241a:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801241e:	6011      	str	r1, [r2, #0]
 8012420:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8012424:	801a      	strh	r2, [r3, #0]
 8012426:	bd10      	pop	{r4, pc}

08012428 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 8012428:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 801242c:	600b      	str	r3, [r1, #0]
 801242e:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8012432:	6013      	str	r3, [r2, #0]
 8012434:	4770      	bx	lr

08012436 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 8012436:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 801243a:	4770      	bx	lr

0801243c <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 801243c:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 8012440:	4770      	bx	lr

08012442 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 8012442:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8012446:	4770      	bx	lr

08012448 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8012448:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 801244c:	4770      	bx	lr

0801244e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 801244e:	b570      	push	{r4, r5, r6, lr}
 8012450:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8012454:	428d      	cmp	r5, r1
 8012456:	bfb8      	it	lt
 8012458:	460d      	movlt	r5, r1
 801245a:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801245e:	428d      	cmp	r5, r1
 8012460:	4604      	mov	r4, r0
 8012462:	bfa8      	it	ge
 8012464:	460d      	movge	r5, r1
 8012466:	4616      	mov	r6, r2
 8012468:	b99a      	cbnz	r2, 8012492 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 801246a:	6803      	ldr	r3, [r0, #0]
 801246c:	4629      	mov	r1, r5
 801246e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012472:	4798      	blx	r3
 8012474:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012478:	b368      	cbz	r0, 80124d6 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 801247a:	6803      	ldr	r3, [r0, #0]
 801247c:	68db      	ldr	r3, [r3, #12]
 801247e:	4798      	blx	r3
 8012480:	b348      	cbz	r0, 80124d6 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8012482:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012486:	6803      	ldr	r3, [r0, #0]
 8012488:	4621      	mov	r1, r4
 801248a:	689b      	ldr	r3, [r3, #8]
 801248c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012490:	4718      	bx	r3
 8012492:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8012496:	2b00      	cmp	r3, #0
 8012498:	dd08      	ble.n	80124ac <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 801249a:	f006 fc5b 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 801249e:	4621      	mov	r1, r4
 80124a0:	3004      	adds	r0, #4
 80124a2:	f006 fc7c 	bl	8018d9e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80124a6:	2300      	movs	r3, #0
 80124a8:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80124ac:	6823      	ldr	r3, [r4, #0]
 80124ae:	4620      	mov	r0, r4
 80124b0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80124b4:	4798      	blx	r3
 80124b6:	2300      	movs	r3, #0
 80124b8:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 80124bc:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 80124c0:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 80124c4:	f006 fc46 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 80124c8:	4621      	mov	r1, r4
 80124ca:	3004      	adds	r0, #4
 80124cc:	f006 fd10 	bl	8018ef0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 80124d0:	2301      	movs	r3, #1
 80124d2:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80124d6:	bd70      	pop	{r4, r5, r6, pc}

080124d8 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 80124d8:	b510      	push	{r4, lr}
 80124da:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80124de:	4299      	cmp	r1, r3
 80124e0:	bfb8      	it	lt
 80124e2:	4619      	movlt	r1, r3
 80124e4:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80124e8:	4299      	cmp	r1, r3
 80124ea:	bfa8      	it	ge
 80124ec:	4619      	movge	r1, r3
 80124ee:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 80124f2:	428b      	cmp	r3, r1
 80124f4:	4604      	mov	r4, r0
 80124f6:	d010      	beq.n	801251a <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80124f8:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 80124fc:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 8012500:	b158      	cbz	r0, 801251a <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8012502:	6803      	ldr	r3, [r0, #0]
 8012504:	68db      	ldr	r3, [r3, #12]
 8012506:	4798      	blx	r3
 8012508:	b138      	cbz	r0, 801251a <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 801250a:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 801250e:	6803      	ldr	r3, [r0, #0]
 8012510:	4621      	mov	r1, r4
 8012512:	689b      	ldr	r3, [r3, #8]
 8012514:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012518:	4718      	bx	r3
 801251a:	bd10      	pop	{r4, pc}

0801251c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 801251c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801251e:	4604      	mov	r4, r0
 8012520:	460d      	mov	r5, r1
 8012522:	b1a9      	cbz	r1, 8012550 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8012524:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 8012528:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 801252c:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 8012530:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8012534:	ab01      	add	r3, sp, #4
 8012536:	1a12      	subs	r2, r2, r0
 8012538:	1b89      	subs	r1, r1, r6
 801253a:	1a38      	subs	r0, r7, r0
 801253c:	f007 fe98 	bl	801a270 <_ZN8touchgfx6muldivElllRl>
 8012540:	4629      	mov	r1, r5
 8012542:	ab01      	add	r3, sp, #4
 8012544:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8012548:	4430      	add	r0, r6
 801254a:	f007 fe91 	bl	801a270 <_ZN8touchgfx6muldivElllRl>
 801254e:	b285      	uxth	r5, r0
 8012550:	4628      	mov	r0, r5
 8012552:	b003      	add	sp, #12
 8012554:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012556 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8012556:	b570      	push	{r4, r5, r6, lr}
 8012558:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 801255c:	4604      	mov	r4, r0
 801255e:	2b00      	cmp	r3, #0
 8012560:	d035      	beq.n	80125ce <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012562:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8012566:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 801256a:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 801256e:	3001      	adds	r0, #1
 8012570:	1ad2      	subs	r2, r2, r3
 8012572:	b212      	sxth	r2, r2
 8012574:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8012578:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 801257c:	2100      	movs	r1, #0
 801257e:	b280      	uxth	r0, r0
 8012580:	47a8      	blx	r5
 8012582:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8012586:	6823      	ldr	r3, [r4, #0]
 8012588:	4401      	add	r1, r0
 801258a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801258e:	4620      	mov	r0, r4
 8012590:	4798      	blx	r3
 8012592:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012596:	429a      	cmp	r2, r3
 8012598:	db19      	blt.n	80125ce <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801259a:	2500      	movs	r5, #0
 801259c:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 80125a0:	f006 fbd8 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 80125a4:	4621      	mov	r1, r4
 80125a6:	3004      	adds	r0, #4
 80125a8:	f006 fbf9 	bl	8018d9e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80125ac:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80125b0:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80125b4:	b158      	cbz	r0, 80125ce <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80125b6:	6803      	ldr	r3, [r0, #0]
 80125b8:	68db      	ldr	r3, [r3, #12]
 80125ba:	4798      	blx	r3
 80125bc:	b138      	cbz	r0, 80125ce <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80125be:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80125c2:	6803      	ldr	r3, [r0, #0]
 80125c4:	4621      	mov	r1, r4
 80125c6:	689b      	ldr	r3, [r3, #8]
 80125c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80125cc:	4718      	bx	r3
 80125ce:	bd70      	pop	{r4, r5, r6, pc}

080125d0 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 80125d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80125d4:	4604      	mov	r4, r0
 80125d6:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 80125da:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 80125de:	460e      	mov	r6, r1
 80125e0:	4615      	mov	r5, r2
 80125e2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80125e6:	4619      	mov	r1, r3
 80125e8:	463a      	mov	r2, r7
 80125ea:	3058      	adds	r0, #88	; 0x58
 80125ec:	4698      	mov	r8, r3
 80125ee:	f7f7 f99c 	bl	800992a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80125f2:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 80125f6:	4446      	add	r6, r8
 80125f8:	42b3      	cmp	r3, r6
 80125fa:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80125fe:	bfb8      	it	lt
 8012600:	8126      	strhlt	r6, [r4, #8]
 8012602:	443d      	add	r5, r7
 8012604:	42ab      	cmp	r3, r5
 8012606:	bfb8      	it	lt
 8012608:	8165      	strhlt	r5, [r4, #10]
 801260a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801260e <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 801260e:	b510      	push	{r4, lr}
 8012610:	4604      	mov	r4, r0
 8012612:	302c      	adds	r0, #44	; 0x2c
 8012614:	f003 ffaa 	bl	801656c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012618:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 801261c:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8012620:	4620      	mov	r0, r4
 8012622:	f7f7 f982 	bl	800992a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012626:	bd10      	pop	{r4, pc}

08012628 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8012628:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801262a:	4604      	mov	r4, r0
 801262c:	4626      	mov	r6, r4
 801262e:	2500      	movs	r5, #0
 8012630:	f7f7 f872 	bl	8009718 <_ZN8touchgfx8DrawableC1Ev>
 8012634:	4b23      	ldr	r3, [pc, #140]	; (80126c4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 8012636:	62a5      	str	r5, [r4, #40]	; 0x28
 8012638:	f846 3b2c 	str.w	r3, [r6], #44
 801263c:	2226      	movs	r2, #38	; 0x26
 801263e:	4629      	mov	r1, r5
 8012640:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8012644:	4630      	mov	r0, r6
 8012646:	f8ad 7004 	strh.w	r7, [sp, #4]
 801264a:	f018 ffd6 	bl	802b5fa <memset>
 801264e:	4630      	mov	r0, r6
 8012650:	f7f7 f862 	bl	8009718 <_ZN8touchgfx8DrawableC1Ev>
 8012654:	a902      	add	r1, sp, #8
 8012656:	4b1c      	ldr	r3, [pc, #112]	; (80126c8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8012658:	62e3      	str	r3, [r4, #44]	; 0x2c
 801265a:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 801265e:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8012662:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 8012666:	4630      	mov	r0, r6
 8012668:	f104 0758 	add.w	r7, r4, #88	; 0x58
 801266c:	f003 ff7e 	bl	801656c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012670:	4638      	mov	r0, r7
 8012672:	f7f7 f851 	bl	8009718 <_ZN8touchgfx8DrawableC1Ev>
 8012676:	4b15      	ldr	r3, [pc, #84]	; (80126cc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8012678:	65a3      	str	r3, [r4, #88]	; 0x58
 801267a:	2364      	movs	r3, #100	; 0x64
 801267c:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8012680:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 8012684:	4b12      	ldr	r3, [pc, #72]	; (80126d0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 8012686:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 801268a:	4629      	mov	r1, r5
 801268c:	4630      	mov	r0, r6
 801268e:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 8012692:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8012696:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 801269a:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801269e:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 80126a2:	f7f7 f8c8 	bl	8009836 <_ZN8touchgfx8Drawable4setXEs>
 80126a6:	4629      	mov	r1, r5
 80126a8:	4630      	mov	r0, r6
 80126aa:	f7f7 f8d3 	bl	8009854 <_ZN8touchgfx8Drawable4setYEs>
 80126ae:	4631      	mov	r1, r6
 80126b0:	4620      	mov	r0, r4
 80126b2:	f000 f9d7 	bl	8012a64 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80126b6:	4620      	mov	r0, r4
 80126b8:	4639      	mov	r1, r7
 80126ba:	f000 f9d3 	bl	8012a64 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80126be:	4620      	mov	r0, r4
 80126c0:	b003      	add	sp, #12
 80126c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80126c4:	0802eb64 	.word	0x0802eb64
 80126c8:	0802f730 	.word	0x0802f730
 80126cc:	0802ede8 	.word	0x0802ede8
 80126d0:	0801a93b 	.word	0x0801a93b

080126d4 <_ZNK8touchgfx12DigitalClock14getDisplayModeEv>:
 80126d4:	f890 002f 	ldrb.w	r0, [r0, #47]	; 0x2f
 80126d8:	4770      	bx	lr

080126da <_ZNK8touchgfx12DigitalClock17invalidateContentEv>:
 80126da:	b510      	push	{r4, lr}
 80126dc:	6803      	ldr	r3, [r0, #0]
 80126de:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80126e2:	4604      	mov	r4, r0
 80126e4:	4798      	blx	r3
 80126e6:	b110      	cbz	r0, 80126ee <_ZNK8touchgfx12DigitalClock17invalidateContentEv+0x14>
 80126e8:	4620      	mov	r0, r4
 80126ea:	f7f7 f865 	bl	80097b8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 80126ee:	bd10      	pop	{r4, pc}

080126f0 <_ZN8touchgfx12DigitalClock8setWidthEs>:
 80126f0:	b508      	push	{r3, lr}
 80126f2:	3034      	adds	r0, #52	; 0x34
 80126f4:	f820 1c2c 	strh.w	r1, [r0, #-44]
 80126f8:	f7f7 faf6 	bl	8009ce8 <_ZN8touchgfx8TextArea8setWidthEs>
 80126fc:	bd08      	pop	{r3, pc}

080126fe <_ZN8touchgfx12DigitalClock9setHeightEs>:
 80126fe:	b508      	push	{r3, lr}
 8012700:	3034      	adds	r0, #52	; 0x34
 8012702:	f820 1c2a 	strh.w	r1, [r0, #-42]
 8012706:	f7f7 fb0f 	bl	8009d28 <_ZN8touchgfx8TextArea9setHeightEs>
 801270a:	bd08      	pop	{r3, pc}

0801270c <_ZN8touchgfx12DigitalClock12setBaselineYEs>:
 801270c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012710:	4a10      	ldr	r2, [pc, #64]	; (8012754 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x48>)
 8012712:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8012716:	8812      	ldrh	r2, [r2, #0]
 8012718:	429a      	cmp	r2, r3
 801271a:	4604      	mov	r4, r0
 801271c:	460d      	mov	r5, r1
 801271e:	d916      	bls.n	801274e <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x42>
 8012720:	6802      	ldr	r2, [r0, #0]
 8012722:	f9b0 7004 	ldrsh.w	r7, [r0, #4]
 8012726:	6d96      	ldr	r6, [r2, #88]	; 0x58
 8012728:	4a0b      	ldr	r2, [pc, #44]	; (8012758 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x4c>)
 801272a:	6812      	ldr	r2, [r2, #0]
 801272c:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8012730:	4b0a      	ldr	r3, [pc, #40]	; (801275c <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x50>)
 8012732:	681b      	ldr	r3, [r3, #0]
 8012734:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8012738:	6803      	ldr	r3, [r0, #0]
 801273a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801273c:	4798      	blx	r3
 801273e:	1a2a      	subs	r2, r5, r0
 8012740:	4639      	mov	r1, r7
 8012742:	4620      	mov	r0, r4
 8012744:	4633      	mov	r3, r6
 8012746:	b212      	sxth	r2, r2
 8012748:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801274c:	4718      	bx	r3
 801274e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012752:	bf00      	nop
 8012754:	20002384 	.word	0x20002384
 8012758:	20002380 	.word	0x20002380
 801275c:	20002388 	.word	0x20002388

08012760 <_ZN8touchgfx12DigitalClock8setAlphaEh>:
 8012760:	f880 106a 	strb.w	r1, [r0, #106]	; 0x6a
 8012764:	4770      	bx	lr

08012766 <_ZNK8touchgfx12DigitalClock8getAlphaEv>:
 8012766:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 801276a:	4770      	bx	lr

0801276c <_ZN8touchgfx12DigitalClock8setColorENS_9colortypeE>:
 801276c:	b508      	push	{r3, lr}
 801276e:	3034      	adds	r0, #52	; 0x34
 8012770:	6301      	str	r1, [r0, #48]	; 0x30
 8012772:	f7f7 f821 	bl	80097b8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012776:	bd08      	pop	{r3, pc}

08012778 <_ZNK8touchgfx12DigitalClock8getColorEv>:
 8012778:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801277a:	4770      	bx	lr

0801277c <_ZNK8touchgfx12DigitalClock12getTextWidthEv>:
 801277c:	3034      	adds	r0, #52	; 0x34
 801277e:	f002 bf85 	b.w	801568c <_ZNK8touchgfx8TextArea12getTextWidthEv>

08012782 <_ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE>:
 8012782:	b538      	push	{r3, r4, r5, lr}
 8012784:	f100 0434 	add.w	r4, r0, #52	; 0x34
 8012788:	460d      	mov	r5, r1
 801278a:	4620      	mov	r0, r4
 801278c:	f7f7 f814 	bl	80097b8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012790:	4620      	mov	r0, r4
 8012792:	4629      	mov	r1, r5
 8012794:	f003 faae 	bl	8015cf4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8012798:	4620      	mov	r0, r4
 801279a:	f7f7 f80d 	bl	80097b8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 801279e:	bd38      	pop	{r3, r4, r5, pc}

080127a0 <_ZN8touchgfx12DigitalClock11updateClockEv>:
 80127a0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80127a4:	4604      	mov	r4, r0
 80127a6:	f100 0634 	add.w	r6, r0, #52	; 0x34
 80127aa:	4630      	mov	r0, r6
 80127ac:	f7f7 f804 	bl	80097b8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 80127b0:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 80127b4:	bb03      	cbnz	r3, 80127f8 <_ZN8touchgfx12DigitalClock11updateClockEv+0x58>
 80127b6:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 80127ba:	4a41      	ldr	r2, [pc, #260]	; (80128c0 <_ZN8touchgfx12DigitalClock11updateClockEv+0x120>)
 80127bc:	4d41      	ldr	r5, [pc, #260]	; (80128c4 <_ZN8touchgfx12DigitalClock11updateClockEv+0x124>)
 80127be:	4620      	mov	r0, r4
 80127c0:	2b00      	cmp	r3, #0
 80127c2:	bf08      	it	eq
 80127c4:	4615      	moveq	r5, r2
 80127c6:	f000 f92a 	bl	8012a1e <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>
 80127ca:	4680      	mov	r8, r0
 80127cc:	4620      	mov	r0, r4
 80127ce:	f000 f939 	bl	8012a44 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 80127d2:	4681      	mov	r9, r0
 80127d4:	4620      	mov	r0, r4
 80127d6:	f000 f92e 	bl	8012a36 <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>
 80127da:	2800      	cmp	r0, #0
 80127dc:	bf14      	ite	ne
 80127de:	2341      	movne	r3, #65	; 0x41
 80127e0:	2350      	moveq	r3, #80	; 0x50
 80127e2:	f104 0780 	add.w	r7, r4, #128	; 0x80
 80127e6:	e9cd 9300 	strd	r9, r3, [sp]
 80127ea:	462a      	mov	r2, r5
 80127ec:	4643      	mov	r3, r8
 80127ee:	210c      	movs	r1, #12
 80127f0:	4638      	mov	r0, r7
 80127f2:	f009 fcf7 	bl	801c1e4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80127f6:	e017      	b.n	8012828 <_ZN8touchgfx12DigitalClock11updateClockEv+0x88>
 80127f8:	2b01      	cmp	r3, #1
 80127fa:	d11b      	bne.n	8012834 <_ZN8touchgfx12DigitalClock11updateClockEv+0x94>
 80127fc:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 8012800:	4a31      	ldr	r2, [pc, #196]	; (80128c8 <_ZN8touchgfx12DigitalClock11updateClockEv+0x128>)
 8012802:	4d32      	ldr	r5, [pc, #200]	; (80128cc <_ZN8touchgfx12DigitalClock11updateClockEv+0x12c>)
 8012804:	4620      	mov	r0, r4
 8012806:	2b00      	cmp	r3, #0
 8012808:	bf08      	it	eq
 801280a:	4615      	moveq	r5, r2
 801280c:	f000 f904 	bl	8012a18 <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>
 8012810:	4607      	mov	r7, r0
 8012812:	4620      	mov	r0, r4
 8012814:	f000 f916 	bl	8012a44 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 8012818:	463b      	mov	r3, r7
 801281a:	9000      	str	r0, [sp, #0]
 801281c:	462a      	mov	r2, r5
 801281e:	210c      	movs	r1, #12
 8012820:	f104 0080 	add.w	r0, r4, #128	; 0x80
 8012824:	f009 fcde 	bl	801c1e4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8012828:	4630      	mov	r0, r6
 801282a:	f7f6 ffc5 	bl	80097b8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 801282e:	b004      	add	sp, #16
 8012830:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012834:	2b02      	cmp	r3, #2
 8012836:	d126      	bne.n	8012886 <_ZN8touchgfx12DigitalClock11updateClockEv+0xe6>
 8012838:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 801283c:	4a24      	ldr	r2, [pc, #144]	; (80128d0 <_ZN8touchgfx12DigitalClock11updateClockEv+0x130>)
 801283e:	4d25      	ldr	r5, [pc, #148]	; (80128d4 <_ZN8touchgfx12DigitalClock11updateClockEv+0x134>)
 8012840:	4620      	mov	r0, r4
 8012842:	2b00      	cmp	r3, #0
 8012844:	bf08      	it	eq
 8012846:	4615      	moveq	r5, r2
 8012848:	f000 f8e9 	bl	8012a1e <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>
 801284c:	4680      	mov	r8, r0
 801284e:	4620      	mov	r0, r4
 8012850:	f000 f8f8 	bl	8012a44 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 8012854:	4681      	mov	r9, r0
 8012856:	4620      	mov	r0, r4
 8012858:	f000 f8f7 	bl	8012a4a <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>
 801285c:	4682      	mov	sl, r0
 801285e:	4620      	mov	r0, r4
 8012860:	f000 f8e9 	bl	8012a36 <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>
 8012864:	2800      	cmp	r0, #0
 8012866:	bf14      	ite	ne
 8012868:	2341      	movne	r3, #65	; 0x41
 801286a:	2350      	moveq	r3, #80	; 0x50
 801286c:	f104 0780 	add.w	r7, r4, #128	; 0x80
 8012870:	e9cd a301 	strd	sl, r3, [sp, #4]
 8012874:	f8cd 9000 	str.w	r9, [sp]
 8012878:	4643      	mov	r3, r8
 801287a:	462a      	mov	r2, r5
 801287c:	210c      	movs	r1, #12
 801287e:	4638      	mov	r0, r7
 8012880:	f009 fcb0 	bl	801c1e4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8012884:	e7d0      	b.n	8012828 <_ZN8touchgfx12DigitalClock11updateClockEv+0x88>
 8012886:	2b03      	cmp	r3, #3
 8012888:	d1ce      	bne.n	8012828 <_ZN8touchgfx12DigitalClock11updateClockEv+0x88>
 801288a:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 801288e:	4a12      	ldr	r2, [pc, #72]	; (80128d8 <_ZN8touchgfx12DigitalClock11updateClockEv+0x138>)
 8012890:	4d12      	ldr	r5, [pc, #72]	; (80128dc <_ZN8touchgfx12DigitalClock11updateClockEv+0x13c>)
 8012892:	4620      	mov	r0, r4
 8012894:	2b00      	cmp	r3, #0
 8012896:	bf08      	it	eq
 8012898:	4615      	moveq	r5, r2
 801289a:	f000 f8bd 	bl	8012a18 <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>
 801289e:	4607      	mov	r7, r0
 80128a0:	4620      	mov	r0, r4
 80128a2:	f000 f8cf 	bl	8012a44 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 80128a6:	4680      	mov	r8, r0
 80128a8:	4620      	mov	r0, r4
 80128aa:	f000 f8ce 	bl	8012a4a <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>
 80128ae:	463b      	mov	r3, r7
 80128b0:	e9cd 8000 	strd	r8, r0, [sp]
 80128b4:	462a      	mov	r2, r5
 80128b6:	210c      	movs	r1, #12
 80128b8:	f104 0080 	add.w	r0, r4, #128	; 0x80
 80128bc:	e799      	b.n	80127f2 <_ZN8touchgfx12DigitalClock11updateClockEv+0x52>
 80128be:	bf00      	nop
 80128c0:	0802ec30 	.word	0x0802ec30
 80128c4:	0802ec5a 	.word	0x0802ec5a
 80128c8:	0802ec3c 	.word	0x0802ec3c
 80128cc:	0802ec7a 	.word	0x0802ec7a
 80128d0:	0802ec57 	.word	0x0802ec57
 80128d4:	0802ec44 	.word	0x0802ec44
 80128d8:	0802ec77 	.word	0x0802ec77
 80128dc:	0802ec68 	.word	0x0802ec68

080128e0 <_ZN8touchgfx12DigitalClockC1Ev>:
 80128e0:	b510      	push	{r4, lr}
 80128e2:	4604      	mov	r4, r0
 80128e4:	f000 f87c 	bl	80129e0 <_ZN8touchgfx13AbstractClockC1Ev>
 80128e8:	2201      	movs	r2, #1
 80128ea:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80128ee:	4a20      	ldr	r2, [pc, #128]	; (8012970 <_ZN8touchgfx12DigitalClockC1Ev+0x90>)
 80128f0:	65e2      	str	r2, [r4, #92]	; 0x5c
 80128f2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80128f6:	f8a4 2060 	strh.w	r2, [r4, #96]	; 0x60
 80128fa:	f8a4 2074 	strh.w	r2, [r4, #116]	; 0x74
 80128fe:	f8a4 2076 	strh.w	r2, [r4, #118]	; 0x76
 8012902:	4b1c      	ldr	r3, [pc, #112]	; (8012974 <_ZN8touchgfx12DigitalClockC1Ev+0x94>)
 8012904:	4a1c      	ldr	r2, [pc, #112]	; (8012978 <_ZN8touchgfx12DigitalClockC1Ev+0x98>)
 8012906:	6023      	str	r3, [r4, #0]
 8012908:	6362      	str	r2, [r4, #52]	; 0x34
 801290a:	2303      	movs	r3, #3
 801290c:	4622      	mov	r2, r4
 801290e:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 8012912:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 8012916:	2300      	movs	r3, #0
 8012918:	66a1      	str	r1, [r4, #104]	; 0x68
 801291a:	f884 3030 	strb.w	r3, [r4, #48]	; 0x30
 801291e:	8723      	strh	r3, [r4, #56]	; 0x38
 8012920:	8763      	strh	r3, [r4, #58]	; 0x3a
 8012922:	87a3      	strh	r3, [r4, #60]	; 0x3c
 8012924:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8012926:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
 801292a:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 801292e:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
 8012932:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
 8012936:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801293a:	6523      	str	r3, [r4, #80]	; 0x50
 801293c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8012940:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8012944:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8012948:	6663      	str	r3, [r4, #100]	; 0x64
 801294a:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
 801294e:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8012952:	f8a4 3070 	strh.w	r3, [r4, #112]	; 0x70
 8012956:	f8a4 3072 	strh.w	r3, [r4, #114]	; 0x72
 801295a:	67a3      	str	r3, [r4, #120]	; 0x78
 801295c:	f822 3f80 	strh.w	r3, [r2, #128]!
 8012960:	4620      	mov	r0, r4
 8012962:	67e2      	str	r2, [r4, #124]	; 0x7c
 8012964:	f104 0134 	add.w	r1, r4, #52	; 0x34
 8012968:	f000 f87c 	bl	8012a64 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801296c:	4620      	mov	r0, r4
 801296e:	bd10      	pop	{r4, pc}
 8012970:	0802dcac 	.word	0x0802dcac
 8012974:	0802ec8c 	.word	0x0802ec8c
 8012978:	0802ddb4 	.word	0x0802ddb4

0801297c <_ZN8touchgfx12DigitalClock34displayLeadingZeroForHourIndicatorEb>:
 801297c:	f880 1030 	strb.w	r1, [r0, #48]	; 0x30
 8012980:	4770      	bx	lr

08012982 <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>:
 8012982:	b470      	push	{r4, r5, r6}
 8012984:	2518      	movs	r5, #24
 8012986:	fbb1 f6f5 	udiv	r6, r1, r5
 801298a:	fb06 1115 	mls	r1, r6, r5, r1
 801298e:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 8012992:	213c      	movs	r1, #60	; 0x3c
 8012994:	fbb2 f5f1 	udiv	r5, r2, r1
 8012998:	fb05 2211 	mls	r2, r5, r1, r2
 801299c:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
 80129a0:	fbb3 f2f1 	udiv	r2, r3, r1
 80129a4:	fb02 3311 	mls	r3, r2, r1, r3
 80129a8:	f880 302e 	strb.w	r3, [r0, #46]	; 0x2e
 80129ac:	6803      	ldr	r3, [r0, #0]
 80129ae:	bc70      	pop	{r4, r5, r6}
 80129b0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80129b4:	4718      	bx	r3

080129b6 <_ZN8touchgfx13AbstractClock13setTime12HourEhhhb>:
 80129b6:	b4f0      	push	{r4, r5, r6, r7}
 80129b8:	6804      	ldr	r4, [r0, #0]
 80129ba:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80129be:	f8d4 5088 	ldr.w	r5, [r4, #136]	; 0x88
 80129c2:	2e00      	cmp	r6, #0
 80129c4:	f04f 040c 	mov.w	r4, #12
 80129c8:	fbb1 f7f4 	udiv	r7, r1, r4
 80129cc:	fb07 1114 	mls	r1, r7, r4, r1
 80129d0:	bf18      	it	ne
 80129d2:	2400      	movne	r4, #0
 80129d4:	fa54 f181 	uxtab	r1, r4, r1
 80129d8:	46ac      	mov	ip, r5
 80129da:	b2c9      	uxtb	r1, r1
 80129dc:	bcf0      	pop	{r4, r5, r6, r7}
 80129de:	4760      	bx	ip

080129e0 <_ZN8touchgfx13AbstractClockC1Ev>:
 80129e0:	2101      	movs	r1, #1
 80129e2:	2200      	movs	r2, #0
 80129e4:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80129e8:	490a      	ldr	r1, [pc, #40]	; (8012a14 <_ZN8touchgfx13AbstractClockC1Ev+0x34>)
 80129ea:	8082      	strh	r2, [r0, #4]
 80129ec:	80c2      	strh	r2, [r0, #6]
 80129ee:	8102      	strh	r2, [r0, #8]
 80129f0:	8142      	strh	r2, [r0, #10]
 80129f2:	8182      	strh	r2, [r0, #12]
 80129f4:	81c2      	strh	r2, [r0, #14]
 80129f6:	8202      	strh	r2, [r0, #16]
 80129f8:	8242      	strh	r2, [r0, #18]
 80129fa:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80129fe:	61c2      	str	r2, [r0, #28]
 8012a00:	8402      	strh	r2, [r0, #32]
 8012a02:	8442      	strh	r2, [r0, #34]	; 0x22
 8012a04:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8012a08:	6001      	str	r1, [r0, #0]
 8012a0a:	6282      	str	r2, [r0, #40]	; 0x28
 8012a0c:	8582      	strh	r2, [r0, #44]	; 0x2c
 8012a0e:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
 8012a12:	4770      	bx	lr
 8012a14:	0802ed4c 	.word	0x0802ed4c

08012a18 <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>:
 8012a18:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012a1c:	4770      	bx	lr

08012a1e <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>:
 8012a1e:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012a22:	220c      	movs	r2, #12
 8012a24:	f100 030b 	add.w	r3, r0, #11
 8012a28:	fb93 f0f2 	sdiv	r0, r3, r2
 8012a2c:	fb02 3010 	mls	r0, r2, r0, r3
 8012a30:	3001      	adds	r0, #1
 8012a32:	b2c0      	uxtb	r0, r0
 8012a34:	4770      	bx	lr

08012a36 <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>:
 8012a36:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012a3a:	280b      	cmp	r0, #11
 8012a3c:	bf8c      	ite	hi
 8012a3e:	2000      	movhi	r0, #0
 8012a40:	2001      	movls	r0, #1
 8012a42:	4770      	bx	lr

08012a44 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>:
 8012a44:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8012a48:	4770      	bx	lr

08012a4a <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>:
 8012a4a:	f890 002e 	ldrb.w	r0, [r0, #46]	; 0x2e
 8012a4e:	4770      	bx	lr

08012a50 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8012a50:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012a52:	2000      	movs	r0, #0
 8012a54:	b12b      	cbz	r3, 8012a62 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8012a56:	b920      	cbnz	r0, 8012a62 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8012a58:	1a5a      	subs	r2, r3, r1
 8012a5a:	4250      	negs	r0, r2
 8012a5c:	4150      	adcs	r0, r2
 8012a5e:	699b      	ldr	r3, [r3, #24]
 8012a60:	e7f8      	b.n	8012a54 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8012a62:	4770      	bx	lr

08012a64 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8012a64:	2300      	movs	r3, #0
 8012a66:	6148      	str	r0, [r1, #20]
 8012a68:	618b      	str	r3, [r1, #24]
 8012a6a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012a6c:	b913      	cbnz	r3, 8012a74 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8012a6e:	6281      	str	r1, [r0, #40]	; 0x28
 8012a70:	4770      	bx	lr
 8012a72:	4613      	mov	r3, r2
 8012a74:	699a      	ldr	r2, [r3, #24]
 8012a76:	2a00      	cmp	r2, #0
 8012a78:	d1fb      	bne.n	8012a72 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8012a7a:	6199      	str	r1, [r3, #24]
 8012a7c:	4770      	bx	lr

08012a7e <_ZN8touchgfx9Container9removeAllEv>:
 8012a7e:	2200      	movs	r2, #0
 8012a80:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012a82:	b123      	cbz	r3, 8012a8e <_ZN8touchgfx9Container9removeAllEv+0x10>
 8012a84:	6999      	ldr	r1, [r3, #24]
 8012a86:	6281      	str	r1, [r0, #40]	; 0x28
 8012a88:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8012a8c:	e7f8      	b.n	8012a80 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8012a8e:	4770      	bx	lr

08012a90 <_ZN8touchgfx9Container6unlinkEv>:
 8012a90:	2300      	movs	r3, #0
 8012a92:	6283      	str	r3, [r0, #40]	; 0x28
 8012a94:	4770      	bx	lr

08012a96 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8012a96:	2200      	movs	r2, #0
 8012a98:	8002      	strh	r2, [r0, #0]
 8012a9a:	8042      	strh	r2, [r0, #2]
 8012a9c:	8082      	strh	r2, [r0, #4]
 8012a9e:	80c2      	strh	r2, [r0, #6]
 8012aa0:	4770      	bx	lr

08012aa2 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8012aa2:	b570      	push	{r4, r5, r6, lr}
 8012aa4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012aa6:	460d      	mov	r5, r1
 8012aa8:	4616      	mov	r6, r2
 8012aaa:	b13c      	cbz	r4, 8012abc <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8012aac:	6823      	ldr	r3, [r4, #0]
 8012aae:	4620      	mov	r0, r4
 8012ab0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8012ab2:	4632      	mov	r2, r6
 8012ab4:	4629      	mov	r1, r5
 8012ab6:	4798      	blx	r3
 8012ab8:	69a4      	ldr	r4, [r4, #24]
 8012aba:	e7f6      	b.n	8012aaa <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8012abc:	bd70      	pop	{r4, r5, r6, pc}

08012abe <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8012abe:	b538      	push	{r3, r4, r5, lr}
 8012ac0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012ac2:	460d      	mov	r5, r1
 8012ac4:	b134      	cbz	r4, 8012ad4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8012ac6:	682b      	ldr	r3, [r5, #0]
 8012ac8:	4621      	mov	r1, r4
 8012aca:	689b      	ldr	r3, [r3, #8]
 8012acc:	4628      	mov	r0, r5
 8012ace:	4798      	blx	r3
 8012ad0:	69a4      	ldr	r4, [r4, #24]
 8012ad2:	e7f7      	b.n	8012ac4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8012ad4:	bd38      	pop	{r3, r4, r5, pc}

08012ad6 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8012ad6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012ad8:	b19b      	cbz	r3, 8012b02 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8012ada:	428b      	cmp	r3, r1
 8012adc:	d109      	bne.n	8012af2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8012ade:	699a      	ldr	r2, [r3, #24]
 8012ae0:	2100      	movs	r1, #0
 8012ae2:	6159      	str	r1, [r3, #20]
 8012ae4:	6282      	str	r2, [r0, #40]	; 0x28
 8012ae6:	b902      	cbnz	r2, 8012aea <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8012ae8:	4770      	bx	lr
 8012aea:	6199      	str	r1, [r3, #24]
 8012aec:	4770      	bx	lr
 8012aee:	4613      	mov	r3, r2
 8012af0:	b13a      	cbz	r2, 8012b02 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8012af2:	699a      	ldr	r2, [r3, #24]
 8012af4:	428a      	cmp	r2, r1
 8012af6:	d1fa      	bne.n	8012aee <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8012af8:	698a      	ldr	r2, [r1, #24]
 8012afa:	619a      	str	r2, [r3, #24]
 8012afc:	2300      	movs	r3, #0
 8012afe:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8012b02:	4770      	bx	lr

08012b04 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8012b04:	b410      	push	{r4}
 8012b06:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012b08:	4604      	mov	r4, r0
 8012b0a:	b92b      	cbnz	r3, 8012b18 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8012b0c:	6803      	ldr	r3, [r0, #0]
 8012b0e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012b12:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8012b14:	4611      	mov	r1, r2
 8012b16:	4718      	bx	r3
 8012b18:	b941      	cbnz	r1, 8012b2c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8012b1a:	6193      	str	r3, [r2, #24]
 8012b1c:	6282      	str	r2, [r0, #40]	; 0x28
 8012b1e:	6154      	str	r4, [r2, #20]
 8012b20:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012b24:	4770      	bx	lr
 8012b26:	4603      	mov	r3, r0
 8012b28:	2800      	cmp	r0, #0
 8012b2a:	d0f9      	beq.n	8012b20 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8012b2c:	4299      	cmp	r1, r3
 8012b2e:	6998      	ldr	r0, [r3, #24]
 8012b30:	d1f9      	bne.n	8012b26 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8012b32:	6190      	str	r0, [r2, #24]
 8012b34:	618a      	str	r2, [r1, #24]
 8012b36:	e7f2      	b.n	8012b1e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08012b38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8012b38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012b3c:	461f      	mov	r7, r3
 8012b3e:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8012b42:	460d      	mov	r5, r1
 8012b44:	4616      	mov	r6, r2
 8012b46:	b103      	cbz	r3, 8012b4a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8012b48:	6038      	str	r0, [r7, #0]
 8012b4a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012b4c:	b314      	cbz	r4, 8012b94 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8012b4e:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012b52:	b1eb      	cbz	r3, 8012b90 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012b54:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012b58:	428d      	cmp	r5, r1
 8012b5a:	db19      	blt.n	8012b90 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012b5c:	8923      	ldrh	r3, [r4, #8]
 8012b5e:	b289      	uxth	r1, r1
 8012b60:	440b      	add	r3, r1
 8012b62:	b21b      	sxth	r3, r3
 8012b64:	429d      	cmp	r5, r3
 8012b66:	da13      	bge.n	8012b90 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012b68:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8012b6c:	4296      	cmp	r6, r2
 8012b6e:	db0f      	blt.n	8012b90 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012b70:	8963      	ldrh	r3, [r4, #10]
 8012b72:	b292      	uxth	r2, r2
 8012b74:	4413      	add	r3, r2
 8012b76:	b21b      	sxth	r3, r3
 8012b78:	429e      	cmp	r6, r3
 8012b7a:	da09      	bge.n	8012b90 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012b7c:	6823      	ldr	r3, [r4, #0]
 8012b7e:	1ab2      	subs	r2, r6, r2
 8012b80:	1a69      	subs	r1, r5, r1
 8012b82:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8012b86:	b212      	sxth	r2, r2
 8012b88:	463b      	mov	r3, r7
 8012b8a:	b209      	sxth	r1, r1
 8012b8c:	4620      	mov	r0, r4
 8012b8e:	47c0      	blx	r8
 8012b90:	69a4      	ldr	r4, [r4, #24]
 8012b92:	e7db      	b.n	8012b4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8012b94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012b98 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8012b98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b9c:	4c6e      	ldr	r4, [pc, #440]	; (8012d58 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8012b9e:	b0a1      	sub	sp, #132	; 0x84
 8012ba0:	6824      	ldr	r4, [r4, #0]
 8012ba2:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8012ba4:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8012ba8:	9303      	str	r3, [sp, #12]
 8012baa:	2400      	movs	r4, #0
 8012bac:	802c      	strh	r4, [r5, #0]
 8012bae:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8012bb0:	802c      	strh	r4, [r5, #0]
 8012bb2:	601c      	str	r4, [r3, #0]
 8012bb4:	4606      	mov	r6, r0
 8012bb6:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8012bba:	f7ff ffbd 	bl	8012b38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8012bbe:	f1b9 0f03 	cmp.w	r9, #3
 8012bc2:	f340 80c2 	ble.w	8012d4a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8012bc6:	4631      	mov	r1, r6
 8012bc8:	a80c      	add	r0, sp, #48	; 0x30
 8012bca:	f007 fa1f 	bl	801a00c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012bce:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8012bd2:	9306      	str	r3, [sp, #24]
 8012bd4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8012bd8:	9307      	str	r3, [sp, #28]
 8012bda:	9b03      	ldr	r3, [sp, #12]
 8012bdc:	f8d3 a000 	ldr.w	sl, [r3]
 8012be0:	f1ba 0f00 	cmp.w	sl, #0
 8012be4:	f000 80b4 	beq.w	8012d50 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8012be8:	4651      	mov	r1, sl
 8012bea:	a810      	add	r0, sp, #64	; 0x40
 8012bec:	f007 fa0e 	bl	801a00c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012bf0:	9b01      	ldr	r3, [sp, #4]
 8012bf2:	9a06      	ldr	r2, [sp, #24]
 8012bf4:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8012bf8:	189d      	adds	r5, r3, r2
 8012bfa:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8012bfe:	9a07      	ldr	r2, [sp, #28]
 8012c00:	2002      	movs	r0, #2
 8012c02:	fb91 f1f0 	sdiv	r1, r1, r0
 8012c06:	4419      	add	r1, r3
 8012c08:	1a6d      	subs	r5, r5, r1
 8012c0a:	9b02      	ldr	r3, [sp, #8]
 8012c0c:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8012c10:	4413      	add	r3, r2
 8012c12:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8012c16:	fb92 f2f0 	sdiv	r2, r2, r0
 8012c1a:	440a      	add	r2, r1
 8012c1c:	1a9b      	subs	r3, r3, r2
 8012c1e:	435b      	muls	r3, r3
 8012c20:	fb05 3505 	mla	r5, r5, r5, r3
 8012c24:	4f4d      	ldr	r7, [pc, #308]	; (8012d5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8012c26:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012c28:	ac10      	add	r4, sp, #64	; 0x40
 8012c2a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012c2c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012c2e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012c30:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012c32:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012c34:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8012c38:	f1b9 0f0c 	cmp.w	r9, #12
 8012c3c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8012c40:	f04f 0303 	mov.w	r3, #3
 8012c44:	bfc8      	it	gt
 8012c46:	4698      	movgt	r8, r3
 8012c48:	f8cd 9000 	str.w	r9, [sp]
 8012c4c:	f04f 0400 	mov.w	r4, #0
 8012c50:	bfdc      	itt	le
 8012c52:	f109 32ff 	addle.w	r2, r9, #4294967295
 8012c56:	fb92 f8f3 	sdivle	r8, r2, r3
 8012c5a:	1c63      	adds	r3, r4, #1
 8012c5c:	aa10      	add	r2, sp, #64	; 0x40
 8012c5e:	f004 0401 	and.w	r4, r4, #1
 8012c62:	9308      	str	r3, [sp, #32]
 8012c64:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8012c68:	9b00      	ldr	r3, [sp, #0]
 8012c6a:	fb93 f3f8 	sdiv	r3, r3, r8
 8012c6e:	b29b      	uxth	r3, r3
 8012c70:	3404      	adds	r4, #4
 8012c72:	f04f 0b00 	mov.w	fp, #0
 8012c76:	9304      	str	r3, [sp, #16]
 8012c78:	9a04      	ldr	r2, [sp, #16]
 8012c7a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8012c7e:	fb13 f302 	smulbb	r3, r3, r2
 8012c82:	9a01      	ldr	r2, [sp, #4]
 8012c84:	b29b      	uxth	r3, r3
 8012c86:	1899      	adds	r1, r3, r2
 8012c88:	9305      	str	r3, [sp, #20]
 8012c8a:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8012c8e:	b209      	sxth	r1, r1
 8012c90:	4299      	cmp	r1, r3
 8012c92:	db4d      	blt.n	8012d30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012c94:	8932      	ldrh	r2, [r6, #8]
 8012c96:	4413      	add	r3, r2
 8012c98:	b21b      	sxth	r3, r3
 8012c9a:	4299      	cmp	r1, r3
 8012c9c:	da48      	bge.n	8012d30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012c9e:	9b04      	ldr	r3, [sp, #16]
 8012ca0:	6827      	ldr	r7, [r4, #0]
 8012ca2:	fb17 f703 	smulbb	r7, r7, r3
 8012ca6:	9b02      	ldr	r3, [sp, #8]
 8012ca8:	b2bf      	uxth	r7, r7
 8012caa:	18fa      	adds	r2, r7, r3
 8012cac:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8012cb0:	b212      	sxth	r2, r2
 8012cb2:	429a      	cmp	r2, r3
 8012cb4:	db3c      	blt.n	8012d30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012cb6:	8970      	ldrh	r0, [r6, #10]
 8012cb8:	4403      	add	r3, r0
 8012cba:	b21b      	sxth	r3, r3
 8012cbc:	429a      	cmp	r2, r3
 8012cbe:	da37      	bge.n	8012d30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012cc0:	2300      	movs	r3, #0
 8012cc2:	930b      	str	r3, [sp, #44]	; 0x2c
 8012cc4:	4630      	mov	r0, r6
 8012cc6:	ab0b      	add	r3, sp, #44	; 0x2c
 8012cc8:	f7ff ff36 	bl	8012b38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8012ccc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012cce:	b37a      	cbz	r2, 8012d30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012cd0:	4552      	cmp	r2, sl
 8012cd2:	d02d      	beq.n	8012d30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012cd4:	4611      	mov	r1, r2
 8012cd6:	a80e      	add	r0, sp, #56	; 0x38
 8012cd8:	9209      	str	r2, [sp, #36]	; 0x24
 8012cda:	f007 f997 	bl	801a00c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012cde:	9a06      	ldr	r2, [sp, #24]
 8012ce0:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8012ce4:	9b01      	ldr	r3, [sp, #4]
 8012ce6:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8012cea:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8012cee:	4413      	add	r3, r2
 8012cf0:	f04f 0e02 	mov.w	lr, #2
 8012cf4:	fb91 f1fe 	sdiv	r1, r1, lr
 8012cf8:	4401      	add	r1, r0
 8012cfa:	1a58      	subs	r0, r3, r1
 8012cfc:	9a07      	ldr	r2, [sp, #28]
 8012cfe:	9b02      	ldr	r3, [sp, #8]
 8012d00:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8012d04:	fb9c fcfe 	sdiv	ip, ip, lr
 8012d08:	4413      	add	r3, r2
 8012d0a:	448c      	add	ip, r1
 8012d0c:	eba3 030c 	sub.w	r3, r3, ip
 8012d10:	435b      	muls	r3, r3
 8012d12:	fb00 3300 	mla	r3, r0, r0, r3
 8012d16:	42ab      	cmp	r3, r5
 8012d18:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012d1a:	d208      	bcs.n	8012d2e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8012d1c:	9803      	ldr	r0, [sp, #12]
 8012d1e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012d20:	6001      	str	r1, [r0, #0]
 8012d22:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8012d24:	9805      	ldr	r0, [sp, #20]
 8012d26:	8008      	strh	r0, [r1, #0]
 8012d28:	992b      	ldr	r1, [sp, #172]	; 0xac
 8012d2a:	461d      	mov	r5, r3
 8012d2c:	800f      	strh	r7, [r1, #0]
 8012d2e:	4692      	mov	sl, r2
 8012d30:	f10b 0b01 	add.w	fp, fp, #1
 8012d34:	f1bb 0f04 	cmp.w	fp, #4
 8012d38:	f104 0408 	add.w	r4, r4, #8
 8012d3c:	d19c      	bne.n	8012c78 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8012d3e:	9b00      	ldr	r3, [sp, #0]
 8012d40:	9c08      	ldr	r4, [sp, #32]
 8012d42:	444b      	add	r3, r9
 8012d44:	4544      	cmp	r4, r8
 8012d46:	9300      	str	r3, [sp, #0]
 8012d48:	d187      	bne.n	8012c5a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8012d4a:	b021      	add	sp, #132	; 0x84
 8012d4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d50:	f04f 35ff 	mov.w	r5, #4294967295
 8012d54:	e766      	b.n	8012c24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8012d56:	bf00      	nop
 8012d58:	20002328 	.word	0x20002328
 8012d5c:	0802dc1c 	.word	0x0802dc1c

08012d60 <_ZN8touchgfx4RectaNERKS0_>:
 8012d60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012d64:	f9b1 7000 	ldrsh.w	r7, [r1]
 8012d68:	888c      	ldrh	r4, [r1, #4]
 8012d6a:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012d6e:	443c      	add	r4, r7
 8012d70:	b2a4      	uxth	r4, r4
 8012d72:	fa0f f884 	sxth.w	r8, r4
 8012d76:	45c1      	cmp	r9, r8
 8012d78:	da2f      	bge.n	8012dda <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012d7a:	8882      	ldrh	r2, [r0, #4]
 8012d7c:	444a      	add	r2, r9
 8012d7e:	b292      	uxth	r2, r2
 8012d80:	fa0f fe82 	sxth.w	lr, r2
 8012d84:	4577      	cmp	r7, lr
 8012d86:	da28      	bge.n	8012dda <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012d88:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8012d8c:	88cb      	ldrh	r3, [r1, #6]
 8012d8e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8012d92:	442b      	add	r3, r5
 8012d94:	b21b      	sxth	r3, r3
 8012d96:	429e      	cmp	r6, r3
 8012d98:	da1f      	bge.n	8012dda <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012d9a:	88c3      	ldrh	r3, [r0, #6]
 8012d9c:	4433      	add	r3, r6
 8012d9e:	b29b      	uxth	r3, r3
 8012da0:	fa0f fc83 	sxth.w	ip, r3
 8012da4:	4565      	cmp	r5, ip
 8012da6:	da18      	bge.n	8012dda <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012da8:	454f      	cmp	r7, r9
 8012daa:	bfb8      	it	lt
 8012dac:	464f      	movlt	r7, r9
 8012dae:	42b5      	cmp	r5, r6
 8012db0:	bfb8      	it	lt
 8012db2:	4635      	movlt	r5, r6
 8012db4:	45f0      	cmp	r8, lr
 8012db6:	bfd8      	it	le
 8012db8:	4622      	movle	r2, r4
 8012dba:	1bd2      	subs	r2, r2, r7
 8012dbc:	8082      	strh	r2, [r0, #4]
 8012dbe:	884a      	ldrh	r2, [r1, #2]
 8012dc0:	88c9      	ldrh	r1, [r1, #6]
 8012dc2:	8007      	strh	r7, [r0, #0]
 8012dc4:	440a      	add	r2, r1
 8012dc6:	b292      	uxth	r2, r2
 8012dc8:	b211      	sxth	r1, r2
 8012dca:	458c      	cmp	ip, r1
 8012dcc:	bfa8      	it	ge
 8012dce:	4613      	movge	r3, r2
 8012dd0:	1b5b      	subs	r3, r3, r5
 8012dd2:	80c3      	strh	r3, [r0, #6]
 8012dd4:	8045      	strh	r5, [r0, #2]
 8012dd6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012dda:	2300      	movs	r3, #0
 8012ddc:	8003      	strh	r3, [r0, #0]
 8012dde:	8043      	strh	r3, [r0, #2]
 8012de0:	8083      	strh	r3, [r0, #4]
 8012de2:	80c3      	strh	r3, [r0, #6]
 8012de4:	e7f7      	b.n	8012dd6 <_ZN8touchgfx4RectaNERKS0_+0x76>

08012de6 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8012de6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012dea:	2b00      	cmp	r3, #0
 8012dec:	dd06      	ble.n	8012dfc <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8012dee:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8012df2:	2800      	cmp	r0, #0
 8012df4:	bfcc      	ite	gt
 8012df6:	2000      	movgt	r0, #0
 8012df8:	2001      	movle	r0, #1
 8012dfa:	4770      	bx	lr
 8012dfc:	2001      	movs	r0, #1
 8012dfe:	4770      	bx	lr

08012e00 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8012e00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012e04:	2300      	movs	r3, #0
 8012e06:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8012e08:	8003      	strh	r3, [r0, #0]
 8012e0a:	4604      	mov	r4, r0
 8012e0c:	8043      	strh	r3, [r0, #2]
 8012e0e:	8083      	strh	r3, [r0, #4]
 8012e10:	80c3      	strh	r3, [r0, #6]
 8012e12:	2d00      	cmp	r5, #0
 8012e14:	d040      	beq.n	8012e98 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8012e16:	1d28      	adds	r0, r5, #4
 8012e18:	f7ff ffe5 	bl	8012de6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012e1c:	b988      	cbnz	r0, 8012e42 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012e1e:	4620      	mov	r0, r4
 8012e20:	f7ff ffe1 	bl	8012de6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012e24:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8012e28:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8012e2c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8012e30:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8012e34:	b138      	cbz	r0, 8012e46 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8012e36:	8022      	strh	r2, [r4, #0]
 8012e38:	8063      	strh	r3, [r4, #2]
 8012e3a:	f8a4 e004 	strh.w	lr, [r4, #4]
 8012e3e:	f8a4 c006 	strh.w	ip, [r4, #6]
 8012e42:	69ad      	ldr	r5, [r5, #24]
 8012e44:	e7e5      	b.n	8012e12 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8012e46:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012e4a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8012e4e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8012e52:	4290      	cmp	r0, r2
 8012e54:	4607      	mov	r7, r0
 8012e56:	bfa8      	it	ge
 8012e58:	4617      	movge	r7, r2
 8012e5a:	4472      	add	r2, lr
 8012e5c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8012e60:	8027      	strh	r7, [r4, #0]
 8012e62:	4299      	cmp	r1, r3
 8012e64:	460e      	mov	r6, r1
 8012e66:	4440      	add	r0, r8
 8012e68:	bfa8      	it	ge
 8012e6a:	461e      	movge	r6, r3
 8012e6c:	4471      	add	r1, lr
 8012e6e:	4463      	add	r3, ip
 8012e70:	b200      	sxth	r0, r0
 8012e72:	b212      	sxth	r2, r2
 8012e74:	b209      	sxth	r1, r1
 8012e76:	b21b      	sxth	r3, r3
 8012e78:	4290      	cmp	r0, r2
 8012e7a:	bfac      	ite	ge
 8012e7c:	ebc7 0200 	rsbge	r2, r7, r0
 8012e80:	ebc7 0202 	rsblt	r2, r7, r2
 8012e84:	4299      	cmp	r1, r3
 8012e86:	bfac      	ite	ge
 8012e88:	ebc6 0301 	rsbge	r3, r6, r1
 8012e8c:	ebc6 0303 	rsblt	r3, r6, r3
 8012e90:	8066      	strh	r6, [r4, #2]
 8012e92:	80a2      	strh	r2, [r4, #4]
 8012e94:	80e3      	strh	r3, [r4, #6]
 8012e96:	e7d4      	b.n	8012e42 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012e98:	4620      	mov	r0, r4
 8012e9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012e9e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8012e9e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8012ea2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012ea6:	b383      	cbz	r3, 8012f0a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012ea8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012eaa:	b374      	cbz	r4, 8012f0a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012eac:	f9b1 5000 	ldrsh.w	r5, [r1]
 8012eb0:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8012eb4:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8012eb8:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8012ebc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012ec0:	b303      	cbz	r3, 8012f04 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012ec2:	4668      	mov	r0, sp
 8012ec4:	1d21      	adds	r1, r4, #4
 8012ec6:	f8ad 5000 	strh.w	r5, [sp]
 8012eca:	f8ad 6002 	strh.w	r6, [sp, #2]
 8012ece:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012ed2:	f8ad 8006 	strh.w	r8, [sp, #6]
 8012ed6:	f7ff ff43 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 8012eda:	4668      	mov	r0, sp
 8012edc:	f7ff ff83 	bl	8012de6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012ee0:	b980      	cbnz	r0, 8012f04 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012ee2:	f8bd 3000 	ldrh.w	r3, [sp]
 8012ee6:	88a2      	ldrh	r2, [r4, #4]
 8012ee8:	1a9b      	subs	r3, r3, r2
 8012eea:	f8ad 3000 	strh.w	r3, [sp]
 8012eee:	88e2      	ldrh	r2, [r4, #6]
 8012ef0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012ef4:	1a9b      	subs	r3, r3, r2
 8012ef6:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012efa:	6823      	ldr	r3, [r4, #0]
 8012efc:	4669      	mov	r1, sp
 8012efe:	689b      	ldr	r3, [r3, #8]
 8012f00:	4620      	mov	r0, r4
 8012f02:	4798      	blx	r3
 8012f04:	69a4      	ldr	r4, [r4, #24]
 8012f06:	2c00      	cmp	r4, #0
 8012f08:	d1d8      	bne.n	8012ebc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8012f0a:	b002      	add	sp, #8
 8012f0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012f10 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8012f10:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012f12:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012f16:	460d      	mov	r5, r1
 8012f18:	4616      	mov	r6, r2
 8012f1a:	b323      	cbz	r3, 8012f66 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012f1c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012f1e:	b314      	cbz	r4, 8012f66 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012f20:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012f24:	b1eb      	cbz	r3, 8012f62 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012f26:	6828      	ldr	r0, [r5, #0]
 8012f28:	6869      	ldr	r1, [r5, #4]
 8012f2a:	466b      	mov	r3, sp
 8012f2c:	c303      	stmia	r3!, {r0, r1}
 8012f2e:	4668      	mov	r0, sp
 8012f30:	1d21      	adds	r1, r4, #4
 8012f32:	f7ff ff15 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 8012f36:	4668      	mov	r0, sp
 8012f38:	f7ff ff55 	bl	8012de6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012f3c:	b988      	cbnz	r0, 8012f62 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012f3e:	f8bd 3000 	ldrh.w	r3, [sp]
 8012f42:	88a2      	ldrh	r2, [r4, #4]
 8012f44:	1a9b      	subs	r3, r3, r2
 8012f46:	f8ad 3000 	strh.w	r3, [sp]
 8012f4a:	88e2      	ldrh	r2, [r4, #6]
 8012f4c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012f50:	1a9b      	subs	r3, r3, r2
 8012f52:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012f56:	6823      	ldr	r3, [r4, #0]
 8012f58:	4632      	mov	r2, r6
 8012f5a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8012f5c:	4669      	mov	r1, sp
 8012f5e:	4620      	mov	r0, r4
 8012f60:	4798      	blx	r3
 8012f62:	69a4      	ldr	r4, [r4, #24]
 8012f64:	e7db      	b.n	8012f1e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8012f66:	b002      	add	sp, #8
 8012f68:	bd70      	pop	{r4, r5, r6, pc}

08012f6a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8012f6a:	b513      	push	{r0, r1, r4, lr}
 8012f6c:	6803      	ldr	r3, [r0, #0]
 8012f6e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8012f72:	2300      	movs	r3, #0
 8012f74:	e9cd 3300 	strd	r3, r3, [sp]
 8012f78:	466b      	mov	r3, sp
 8012f7a:	47a0      	blx	r4
 8012f7c:	b002      	add	sp, #8
 8012f7e:	bd10      	pop	{r4, pc}

08012f80 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8012f80:	2301      	movs	r3, #1
 8012f82:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8012f86:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8012f8a:	4770      	bx	lr

08012f8c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8012f8c:	2301      	movs	r3, #1
 8012f8e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8012f92:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8012f96:	4770      	bx	lr

08012f98 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8012f98:	6843      	ldr	r3, [r0, #4]
 8012f9a:	2201      	movs	r2, #1
 8012f9c:	725a      	strb	r2, [r3, #9]
 8012f9e:	6840      	ldr	r0, [r0, #4]
 8012fa0:	6803      	ldr	r3, [r0, #0]
 8012fa2:	691b      	ldr	r3, [r3, #16]
 8012fa4:	4718      	bx	r3

08012fa6 <_ZN8touchgfx3HAL8flushDMAEv>:
 8012fa6:	6840      	ldr	r0, [r0, #4]
 8012fa8:	6803      	ldr	r3, [r0, #0]
 8012faa:	689b      	ldr	r3, [r3, #8]
 8012fac:	4718      	bx	r3

08012fae <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8012fae:	b530      	push	{r4, r5, lr}
 8012fb0:	b08b      	sub	sp, #44	; 0x2c
 8012fb2:	6804      	ldr	r4, [r0, #0]
 8012fb4:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8012fb8:	9509      	str	r5, [sp, #36]	; 0x24
 8012fba:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8012fbe:	9508      	str	r5, [sp, #32]
 8012fc0:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8012fc4:	9507      	str	r5, [sp, #28]
 8012fc6:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8012fca:	9506      	str	r5, [sp, #24]
 8012fcc:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8012fd0:	9505      	str	r5, [sp, #20]
 8012fd2:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8012fd6:	9504      	str	r5, [sp, #16]
 8012fd8:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8012fdc:	9503      	str	r5, [sp, #12]
 8012fde:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8012fe2:	9502      	str	r5, [sp, #8]
 8012fe4:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8012fe8:	e9cd 3500 	strd	r3, r5, [sp]
 8012fec:	4613      	mov	r3, r2
 8012fee:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8012ff0:	2200      	movs	r2, #0
 8012ff2:	47a0      	blx	r4
 8012ff4:	b00b      	add	sp, #44	; 0x2c
 8012ff6:	bd30      	pop	{r4, r5, pc}

08012ff8 <_ZN8touchgfx3HAL10beginFrameEv>:
 8012ff8:	4b04      	ldr	r3, [pc, #16]	; (801300c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8012ffa:	781b      	ldrb	r3, [r3, #0]
 8012ffc:	b123      	cbz	r3, 8013008 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8012ffe:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8013002:	f080 0001 	eor.w	r0, r0, #1
 8013006:	4770      	bx	lr
 8013008:	2001      	movs	r0, #1
 801300a:	4770      	bx	lr
 801300c:	20002326 	.word	0x20002326

08013010 <_ZN8touchgfx3HAL8endFrameEv>:
 8013010:	b510      	push	{r4, lr}
 8013012:	4604      	mov	r4, r0
 8013014:	6840      	ldr	r0, [r0, #4]
 8013016:	6803      	ldr	r3, [r0, #0]
 8013018:	689b      	ldr	r3, [r3, #8]
 801301a:	4798      	blx	r3
 801301c:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8013020:	b113      	cbz	r3, 8013028 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8013022:	2301      	movs	r3, #1
 8013024:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8013028:	bd10      	pop	{r4, pc}

0801302a <_ZN8touchgfx3HAL10initializeEv>:
 801302a:	b510      	push	{r4, lr}
 801302c:	4604      	mov	r4, r0
 801302e:	f7fd fead 	bl	8010d8c <_ZN8touchgfx10OSWrappers10initializeEv>
 8013032:	f7fd fbf3 	bl	801081c <_ZN8touchgfx4GPIO4initEv>
 8013036:	6860      	ldr	r0, [r4, #4]
 8013038:	6803      	ldr	r3, [r0, #0]
 801303a:	68db      	ldr	r3, [r3, #12]
 801303c:	4798      	blx	r3
 801303e:	68e0      	ldr	r0, [r4, #12]
 8013040:	6803      	ldr	r3, [r0, #0]
 8013042:	689b      	ldr	r3, [r3, #8]
 8013044:	4798      	blx	r3
 8013046:	6823      	ldr	r3, [r4, #0]
 8013048:	4620      	mov	r0, r4
 801304a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801304c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013050:	4718      	bx	r3

08013052 <_ZN8touchgfx3HAL9taskEntryEv>:
 8013052:	b508      	push	{r3, lr}
 8013054:	6803      	ldr	r3, [r0, #0]
 8013056:	4604      	mov	r4, r0
 8013058:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801305c:	4798      	blx	r3
 801305e:	6823      	ldr	r3, [r4, #0]
 8013060:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8013062:	4620      	mov	r0, r4
 8013064:	4798      	blx	r3
 8013066:	f7fd ff05 	bl	8010e74 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 801306a:	6823      	ldr	r3, [r4, #0]
 801306c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801306e:	e7f8      	b.n	8013062 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

08013070 <_ZN8touchgfx3HAL4tickEv>:
 8013070:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8013072:	6803      	ldr	r3, [r0, #0]
 8013074:	4d5b      	ldr	r5, [pc, #364]	; (80131e4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8013076:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801307a:	4604      	mov	r4, r0
 801307c:	4798      	blx	r3
 801307e:	2800      	cmp	r0, #0
 8013080:	f000 8095 	beq.w	80131ae <_ZN8touchgfx3HAL4tickEv+0x13e>
 8013084:	2001      	movs	r0, #1
 8013086:	f7fd fbd1 	bl	801082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801308a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 801308e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8013092:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8013096:	2600      	movs	r6, #0
 8013098:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 801309c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80130a0:	b133      	cbz	r3, 80130b0 <_ZN8touchgfx3HAL4tickEv+0x40>
 80130a2:	6823      	ldr	r3, [r4, #0]
 80130a4:	4620      	mov	r0, r4
 80130a6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 80130aa:	4798      	blx	r3
 80130ac:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 80130b0:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 80130b4:	6862      	ldr	r2, [r4, #4]
 80130b6:	f083 0301 	eor.w	r3, r3, #1
 80130ba:	7253      	strb	r3, [r2, #9]
 80130bc:	2601      	movs	r6, #1
 80130be:	702e      	strb	r6, [r5, #0]
 80130c0:	f005 fe48 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 80130c4:	6803      	ldr	r3, [r0, #0]
 80130c6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80130c8:	4798      	blx	r3
 80130ca:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 80130ce:	b90b      	cbnz	r3, 80130d4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80130d0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 80130d4:	f005 fe3e 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 80130d8:	6803      	ldr	r3, [r0, #0]
 80130da:	695b      	ldr	r3, [r3, #20]
 80130dc:	4798      	blx	r3
 80130de:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80130e0:	6803      	ldr	r3, [r0, #0]
 80130e2:	691b      	ldr	r3, [r3, #16]
 80130e4:	4798      	blx	r3
 80130e6:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 80130ea:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 80130ee:	3b01      	subs	r3, #1
 80130f0:	b2db      	uxtb	r3, r3
 80130f2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80130f6:	b10a      	cbz	r2, 80130fc <_ZN8touchgfx3HAL4tickEv+0x8c>
 80130f8:	2b00      	cmp	r3, #0
 80130fa:	d1eb      	bne.n	80130d4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80130fc:	4a3a      	ldr	r2, [pc, #232]	; (80131e8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 80130fe:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8013102:	7813      	ldrb	r3, [r2, #0]
 8013104:	3301      	adds	r3, #1
 8013106:	b25b      	sxtb	r3, r3
 8013108:	4299      	cmp	r1, r3
 801310a:	7013      	strb	r3, [r2, #0]
 801310c:	dc10      	bgt.n	8013130 <_ZN8touchgfx3HAL4tickEv+0xc0>
 801310e:	68e0      	ldr	r0, [r4, #12]
 8013110:	2300      	movs	r3, #0
 8013112:	7013      	strb	r3, [r2, #0]
 8013114:	6803      	ldr	r3, [r0, #0]
 8013116:	aa03      	add	r2, sp, #12
 8013118:	68db      	ldr	r3, [r3, #12]
 801311a:	a902      	add	r1, sp, #8
 801311c:	4798      	blx	r3
 801311e:	6823      	ldr	r3, [r4, #0]
 8013120:	2800      	cmp	r0, #0
 8013122:	d050      	beq.n	80131c6 <_ZN8touchgfx3HAL4tickEv+0x156>
 8013124:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8013128:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 801312c:	4620      	mov	r0, r4
 801312e:	4798      	blx	r3
 8013130:	6960      	ldr	r0, [r4, #20]
 8013132:	2300      	movs	r3, #0
 8013134:	f88d 3007 	strb.w	r3, [sp, #7]
 8013138:	b158      	cbz	r0, 8013152 <_ZN8touchgfx3HAL4tickEv+0xe2>
 801313a:	6803      	ldr	r3, [r0, #0]
 801313c:	f10d 0107 	add.w	r1, sp, #7
 8013140:	68db      	ldr	r3, [r3, #12]
 8013142:	4798      	blx	r3
 8013144:	b128      	cbz	r0, 8013152 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8013146:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8013148:	f89d 1007 	ldrb.w	r1, [sp, #7]
 801314c:	6803      	ldr	r3, [r0, #0]
 801314e:	68db      	ldr	r3, [r3, #12]
 8013150:	4798      	blx	r3
 8013152:	f104 001c 	add.w	r0, r4, #28
 8013156:	f016 fc7b 	bl	8029a50 <_ZN8touchgfx8Gestures4tickEv>
 801315a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 801315e:	b30b      	cbz	r3, 80131a4 <_ZN8touchgfx3HAL4tickEv+0x134>
 8013160:	6920      	ldr	r0, [r4, #16]
 8013162:	6803      	ldr	r3, [r0, #0]
 8013164:	691b      	ldr	r3, [r3, #16]
 8013166:	4798      	blx	r3
 8013168:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801316a:	4606      	mov	r6, r0
 801316c:	b903      	cbnz	r3, 8013170 <_ZN8touchgfx3HAL4tickEv+0x100>
 801316e:	6760      	str	r0, [r4, #116]	; 0x74
 8013170:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8013172:	4a1e      	ldr	r2, [pc, #120]	; (80131ec <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8013174:	1af3      	subs	r3, r6, r3
 8013176:	4293      	cmp	r3, r2
 8013178:	d914      	bls.n	80131a4 <_ZN8touchgfx3HAL4tickEv+0x134>
 801317a:	6920      	ldr	r0, [r4, #16]
 801317c:	6803      	ldr	r3, [r0, #0]
 801317e:	699b      	ldr	r3, [r3, #24]
 8013180:	4798      	blx	r3
 8013182:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8013184:	2264      	movs	r2, #100	; 0x64
 8013186:	1af3      	subs	r3, r6, r3
 8013188:	fbb3 f3f2 	udiv	r3, r3, r2
 801318c:	fbb0 f0f3 	udiv	r0, r0, r3
 8013190:	2800      	cmp	r0, #0
 8013192:	dc1d      	bgt.n	80131d0 <_ZN8touchgfx3HAL4tickEv+0x160>
 8013194:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8013198:	6920      	ldr	r0, [r4, #16]
 801319a:	6803      	ldr	r3, [r0, #0]
 801319c:	2100      	movs	r1, #0
 801319e:	69db      	ldr	r3, [r3, #28]
 80131a0:	4798      	blx	r3
 80131a2:	6766      	str	r6, [r4, #116]	; 0x74
 80131a4:	f005 fdd6 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 80131a8:	6803      	ldr	r3, [r0, #0]
 80131aa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80131ac:	4798      	blx	r3
 80131ae:	6823      	ldr	r3, [r4, #0]
 80131b0:	4620      	mov	r0, r4
 80131b2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80131b6:	4798      	blx	r3
 80131b8:	2001      	movs	r0, #1
 80131ba:	f7fd fb53 	bl	8010864 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80131be:	2300      	movs	r3, #0
 80131c0:	702b      	strb	r3, [r5, #0]
 80131c2:	b004      	add	sp, #16
 80131c4:	bd70      	pop	{r4, r5, r6, pc}
 80131c6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80131ca:	4620      	mov	r0, r4
 80131cc:	4798      	blx	r3
 80131ce:	e7af      	b.n	8013130 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80131d0:	2863      	cmp	r0, #99	; 0x63
 80131d2:	bfcb      	itete	gt
 80131d4:	2300      	movgt	r3, #0
 80131d6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80131da:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 80131de:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 80131e2:	e7d9      	b.n	8013198 <_ZN8touchgfx3HAL4tickEv+0x128>
 80131e4:	2000232c 	.word	0x2000232c
 80131e8:	2000232d 	.word	0x2000232d
 80131ec:	05f5e100 	.word	0x05f5e100

080131f0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 80131f0:	b510      	push	{r4, lr}
 80131f2:	4604      	mov	r4, r0
 80131f4:	f7fd fdf2 	bl	8010ddc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 80131f8:	6863      	ldr	r3, [r4, #4]
 80131fa:	2200      	movs	r2, #0
 80131fc:	729a      	strb	r2, [r3, #10]
 80131fe:	bd10      	pop	{r4, pc}

08013200 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8013200:	65c1      	str	r1, [r0, #92]	; 0x5c
 8013202:	301c      	adds	r0, #28
 8013204:	f016 bc22 	b.w	8029a4c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08013208 <_ZN8touchgfx3HAL5touchEll>:
 8013208:	b530      	push	{r4, r5, lr}
 801320a:	b087      	sub	sp, #28
 801320c:	4604      	mov	r4, r0
 801320e:	a804      	add	r0, sp, #16
 8013210:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8013214:	f005 fb74 	bl	8018900 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8013218:	9b04      	ldr	r3, [sp, #16]
 801321a:	f8ad 300c 	strh.w	r3, [sp, #12]
 801321e:	a906      	add	r1, sp, #24
 8013220:	9b05      	ldr	r3, [sp, #20]
 8013222:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8013226:	a803      	add	r0, sp, #12
 8013228:	f005 fbbc 	bl	80189a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 801322c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8013230:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8013234:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8013238:	f104 001c 	add.w	r0, r4, #28
 801323c:	b189      	cbz	r1, 8013262 <_ZN8touchgfx3HAL5touchEll+0x5a>
 801323e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8013242:	9300      	str	r3, [sp, #0]
 8013244:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8013248:	4613      	mov	r3, r2
 801324a:	462a      	mov	r2, r5
 801324c:	f016 fc0e 	bl	8029a6c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8013250:	b128      	cbz	r0, 801325e <_ZN8touchgfx3HAL5touchEll+0x56>
 8013252:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8013256:	6623      	str	r3, [r4, #96]	; 0x60
 8013258:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801325c:	6663      	str	r3, [r4, #100]	; 0x64
 801325e:	b007      	add	sp, #28
 8013260:	bd30      	pop	{r4, r5, pc}
 8013262:	f016 fc43 	bl	8029aec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8013266:	2301      	movs	r3, #1
 8013268:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 801326c:	e7f1      	b.n	8013252 <_ZN8touchgfx3HAL5touchEll+0x4a>

0801326e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 801326e:	b510      	push	{r4, lr}
 8013270:	2b00      	cmp	r3, #0
 8013272:	d046      	beq.n	8013302 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8013274:	ea81 0002 	eor.w	r0, r1, r2
 8013278:	07c4      	lsls	r4, r0, #31
 801327a:	d508      	bpl.n	801328e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 801327c:	440b      	add	r3, r1
 801327e:	3a01      	subs	r2, #1
 8013280:	428b      	cmp	r3, r1
 8013282:	d93e      	bls.n	8013302 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8013284:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8013288:	f801 0b01 	strb.w	r0, [r1], #1
 801328c:	e7f8      	b.n	8013280 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 801328e:	07d0      	lsls	r0, r2, #31
 8013290:	bf42      	ittt	mi
 8013292:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8013296:	f801 0b01 	strbmi.w	r0, [r1], #1
 801329a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 801329e:	2b01      	cmp	r3, #1
 80132a0:	d911      	bls.n	80132c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80132a2:	ea81 0402 	eor.w	r4, r1, r2
 80132a6:	07a4      	lsls	r4, r4, #30
 80132a8:	4610      	mov	r0, r2
 80132aa:	d022      	beq.n	80132f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 80132ac:	f023 0401 	bic.w	r4, r3, #1
 80132b0:	440c      	add	r4, r1
 80132b2:	428c      	cmp	r4, r1
 80132b4:	4602      	mov	r2, r0
 80132b6:	d904      	bls.n	80132c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 80132b8:	8812      	ldrh	r2, [r2, #0]
 80132ba:	f821 2b02 	strh.w	r2, [r1], #2
 80132be:	3002      	adds	r0, #2
 80132c0:	e7f7      	b.n	80132b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 80132c2:	f003 0301 	and.w	r3, r3, #1
 80132c6:	f023 0003 	bic.w	r0, r3, #3
 80132ca:	4408      	add	r0, r1
 80132cc:	4288      	cmp	r0, r1
 80132ce:	4614      	mov	r4, r2
 80132d0:	d904      	bls.n	80132dc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80132d2:	6824      	ldr	r4, [r4, #0]
 80132d4:	f841 4b04 	str.w	r4, [r1], #4
 80132d8:	3204      	adds	r2, #4
 80132da:	e7f7      	b.n	80132cc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80132dc:	f003 0303 	and.w	r3, r3, #3
 80132e0:	440b      	add	r3, r1
 80132e2:	3a01      	subs	r2, #1
 80132e4:	428b      	cmp	r3, r1
 80132e6:	d90c      	bls.n	8013302 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80132e8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80132ec:	f801 0b01 	strb.w	r0, [r1], #1
 80132f0:	e7f8      	b.n	80132e4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 80132f2:	0790      	lsls	r0, r2, #30
 80132f4:	d0e7      	beq.n	80132c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80132f6:	f832 0b02 	ldrh.w	r0, [r2], #2
 80132fa:	f821 0b02 	strh.w	r0, [r1], #2
 80132fe:	3b02      	subs	r3, #2
 8013300:	e7e1      	b.n	80132c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8013302:	2001      	movs	r0, #1
 8013304:	bd10      	pop	{r4, pc}

08013306 <_ZN8touchgfx3HAL7noTouchEv>:
 8013306:	b510      	push	{r4, lr}
 8013308:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 801330c:	4604      	mov	r4, r0
 801330e:	b153      	cbz	r3, 8013326 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8013310:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8013314:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8013318:	2101      	movs	r1, #1
 801331a:	301c      	adds	r0, #28
 801331c:	f016 fbe6 	bl	8029aec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8013320:	2300      	movs	r3, #0
 8013322:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8013326:	bd10      	pop	{r4, pc}

08013328 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8013328:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801332c:	b085      	sub	sp, #20
 801332e:	ad04      	add	r5, sp, #16
 8013330:	4604      	mov	r4, r0
 8013332:	2000      	movs	r0, #0
 8013334:	f845 0d04 	str.w	r0, [r5, #-4]!
 8013338:	69a0      	ldr	r0, [r4, #24]
 801333a:	6806      	ldr	r6, [r0, #0]
 801333c:	9501      	str	r5, [sp, #4]
 801333e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8013342:	9500      	str	r5, [sp, #0]
 8013344:	6835      	ldr	r5, [r6, #0]
 8013346:	4699      	mov	r9, r3
 8013348:	460f      	mov	r7, r1
 801334a:	4690      	mov	r8, r2
 801334c:	47a8      	blx	r5
 801334e:	4d10      	ldr	r5, [pc, #64]	; (8013390 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8013350:	4606      	mov	r6, r0
 8013352:	f8a5 9000 	strh.w	r9, [r5]
 8013356:	f7f7 fb59 	bl	800aa0c <_ZN8touchgfx3HAL3lcdEv>
 801335a:	6803      	ldr	r3, [r0, #0]
 801335c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801335e:	4798      	blx	r3
 8013360:	b128      	cbz	r0, 801336e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8013362:	2801      	cmp	r0, #1
 8013364:	d00b      	beq.n	801337e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8013366:	4630      	mov	r0, r6
 8013368:	b005      	add	sp, #20
 801336a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801336e:	882b      	ldrh	r3, [r5, #0]
 8013370:	fb08 7203 	mla	r2, r8, r3, r7
 8013374:	9b03      	ldr	r3, [sp, #12]
 8013376:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 801337a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801337c:	e7f3      	b.n	8013366 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 801337e:	882a      	ldrh	r2, [r5, #0]
 8013380:	9b03      	ldr	r3, [sp, #12]
 8013382:	fb08 7202 	mla	r2, r8, r2, r7
 8013386:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801338a:	1a9a      	subs	r2, r3, r2
 801338c:	63e2      	str	r2, [r4, #60]	; 0x3c
 801338e:	e7ea      	b.n	8013366 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8013390:	20002322 	.word	0x20002322

08013394 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8013394:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013396:	b08b      	sub	sp, #44	; 0x2c
 8013398:	4617      	mov	r7, r2
 801339a:	4604      	mov	r4, r0
 801339c:	460e      	mov	r6, r1
 801339e:	461d      	mov	r5, r3
 80133a0:	f7f7 fb34 	bl	800aa0c <_ZN8touchgfx3HAL3lcdEv>
 80133a4:	6803      	ldr	r3, [r0, #0]
 80133a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80133a8:	4798      	blx	r3
 80133aa:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80133ae:	9007      	str	r0, [sp, #28]
 80133b0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80133b4:	4b0d      	ldr	r3, [pc, #52]	; (80133ec <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 80133b6:	6822      	ldr	r2, [r4, #0]
 80133b8:	881b      	ldrh	r3, [r3, #0]
 80133ba:	9306      	str	r3, [sp, #24]
 80133bc:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80133c0:	9305      	str	r3, [sp, #20]
 80133c2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80133c6:	9304      	str	r3, [sp, #16]
 80133c8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80133cc:	9303      	str	r3, [sp, #12]
 80133ce:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80133d2:	9302      	str	r3, [sp, #8]
 80133d4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80133d8:	e9cd 5300 	strd	r5, r3, [sp]
 80133dc:	4631      	mov	r1, r6
 80133de:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 80133e0:	463b      	mov	r3, r7
 80133e2:	2200      	movs	r2, #0
 80133e4:	4620      	mov	r0, r4
 80133e6:	47a8      	blx	r5
 80133e8:	b00b      	add	sp, #44	; 0x2c
 80133ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80133ec:	20002322 	.word	0x20002322

080133f0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80133f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80133f4:	4698      	mov	r8, r3
 80133f6:	6803      	ldr	r3, [r0, #0]
 80133f8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80133fa:	4b15      	ldr	r3, [pc, #84]	; (8013450 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80133fc:	b08b      	sub	sp, #44	; 0x2c
 80133fe:	4617      	mov	r7, r2
 8013400:	f8b3 9000 	ldrh.w	r9, [r3]
 8013404:	460e      	mov	r6, r1
 8013406:	4604      	mov	r4, r0
 8013408:	f7f7 fb00 	bl	800aa0c <_ZN8touchgfx3HAL3lcdEv>
 801340c:	6803      	ldr	r3, [r0, #0]
 801340e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013410:	4798      	blx	r3
 8013412:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8013416:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801341a:	2302      	movs	r3, #2
 801341c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8013420:	2301      	movs	r3, #1
 8013422:	9305      	str	r3, [sp, #20]
 8013424:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8013428:	9304      	str	r3, [sp, #16]
 801342a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801342e:	9303      	str	r3, [sp, #12]
 8013430:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013434:	9302      	str	r3, [sp, #8]
 8013436:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801343a:	2200      	movs	r2, #0
 801343c:	e9cd 8300 	strd	r8, r3, [sp]
 8013440:	4631      	mov	r1, r6
 8013442:	463b      	mov	r3, r7
 8013444:	4620      	mov	r0, r4
 8013446:	47a8      	blx	r5
 8013448:	b00b      	add	sp, #44	; 0x2c
 801344a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801344e:	bf00      	nop
 8013450:	20002322 	.word	0x20002322

08013454 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8013454:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013458:	4698      	mov	r8, r3
 801345a:	6803      	ldr	r3, [r0, #0]
 801345c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 801345e:	4b11      	ldr	r3, [pc, #68]	; (80134a4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8013460:	b087      	sub	sp, #28
 8013462:	f8b3 9000 	ldrh.w	r9, [r3]
 8013466:	460e      	mov	r6, r1
 8013468:	4617      	mov	r7, r2
 801346a:	4604      	mov	r4, r0
 801346c:	f7f7 face 	bl	800aa0c <_ZN8touchgfx3HAL3lcdEv>
 8013470:	6803      	ldr	r3, [r0, #0]
 8013472:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013474:	4798      	blx	r3
 8013476:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801347a:	f8cd 900c 	str.w	r9, [sp, #12]
 801347e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8013482:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8013486:	9302      	str	r3, [sp, #8]
 8013488:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801348c:	9301      	str	r3, [sp, #4]
 801348e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013492:	9300      	str	r3, [sp, #0]
 8013494:	463a      	mov	r2, r7
 8013496:	4643      	mov	r3, r8
 8013498:	4631      	mov	r1, r6
 801349a:	4620      	mov	r0, r4
 801349c:	47a8      	blx	r5
 801349e:	b007      	add	sp, #28
 80134a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80134a4:	20002322 	.word	0x20002322

080134a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 80134a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134ac:	4604      	mov	r4, r0
 80134ae:	b08f      	sub	sp, #60	; 0x3c
 80134b0:	4610      	mov	r0, r2
 80134b2:	460d      	mov	r5, r1
 80134b4:	4691      	mov	r9, r2
 80134b6:	461e      	mov	r6, r3
 80134b8:	f008 feba 	bl	801c230 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80134bc:	2800      	cmp	r0, #0
 80134be:	f000 809d 	beq.w	80135fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 80134c2:	6823      	ldr	r3, [r4, #0]
 80134c4:	f8df b198 	ldr.w	fp, [pc, #408]	; 8013660 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 80134c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80134ca:	f8df a198 	ldr.w	sl, [pc, #408]	; 8013664 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80134ce:	4f61      	ldr	r7, [pc, #388]	; (8013654 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80134d0:	4620      	mov	r0, r4
 80134d2:	4798      	blx	r3
 80134d4:	6823      	ldr	r3, [r4, #0]
 80134d6:	4620      	mov	r0, r4
 80134d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80134da:	4798      	blx	r3
 80134dc:	f8bb 3000 	ldrh.w	r3, [fp]
 80134e0:	9301      	str	r3, [sp, #4]
 80134e2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80134e6:	f8ba 3000 	ldrh.w	r3, [sl]
 80134ea:	9302      	str	r3, [sp, #8]
 80134ec:	883b      	ldrh	r3, [r7, #0]
 80134ee:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80134f2:	9303      	str	r3, [sp, #12]
 80134f4:	4b58      	ldr	r3, [pc, #352]	; (8013658 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80134f6:	9305      	str	r3, [sp, #20]
 80134f8:	881a      	ldrh	r2, [r3, #0]
 80134fa:	9204      	str	r2, [sp, #16]
 80134fc:	4640      	mov	r0, r8
 80134fe:	f008 ff2b 	bl	801c358 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013502:	8038      	strh	r0, [r7, #0]
 8013504:	4640      	mov	r0, r8
 8013506:	f008 ff5b 	bl	801c3c0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801350a:	9b05      	ldr	r3, [sp, #20]
 801350c:	b280      	uxth	r0, r0
 801350e:	8018      	strh	r0, [r3, #0]
 8013510:	4b52      	ldr	r3, [pc, #328]	; (801365c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8013512:	781b      	ldrb	r3, [r3, #0]
 8013514:	2b00      	cmp	r3, #0
 8013516:	d174      	bne.n	8013602 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8013518:	883b      	ldrh	r3, [r7, #0]
 801351a:	f8ab 3000 	strh.w	r3, [fp]
 801351e:	f8aa 0000 	strh.w	r0, [sl]
 8013522:	4648      	mov	r0, r9
 8013524:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8013528:	f008 fe82 	bl	801c230 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801352c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8013530:	2200      	movs	r2, #0
 8013532:	4611      	mov	r1, r2
 8013534:	4628      	mov	r0, r5
 8013536:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 801353a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 801353e:	f7f6 f998 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
 8013542:	2301      	movs	r3, #1
 8013544:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8013548:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 801354c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8013550:	2b00      	cmp	r3, #0
 8013552:	dd5c      	ble.n	801360e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013554:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8013558:	2b00      	cmp	r3, #0
 801355a:	dd58      	ble.n	801360e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801355c:	462a      	mov	r2, r5
 801355e:	ab0a      	add	r3, sp, #40	; 0x28
 8013560:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013564:	6851      	ldr	r1, [r2, #4]
 8013566:	c303      	stmia	r3!, {r0, r1}
 8013568:	4631      	mov	r1, r6
 801356a:	a80a      	add	r0, sp, #40	; 0x28
 801356c:	f7ff fbf8 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 8013570:	4b38      	ldr	r3, [pc, #224]	; (8013654 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013572:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013576:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801357a:	2100      	movs	r1, #0
 801357c:	aa0a      	add	r2, sp, #40	; 0x28
 801357e:	4b36      	ldr	r3, [pc, #216]	; (8013658 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013580:	910c      	str	r1, [sp, #48]	; 0x30
 8013582:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013586:	f9b3 3000 	ldrsh.w	r3, [r3]
 801358a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801358e:	ab08      	add	r3, sp, #32
 8013590:	e883 0003 	stmia.w	r3, {r0, r1}
 8013594:	4618      	mov	r0, r3
 8013596:	a90c      	add	r1, sp, #48	; 0x30
 8013598:	f7ff fbe2 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 801359c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801359e:	2b00      	cmp	r3, #0
 80135a0:	d13c      	bne.n	801361c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 80135a2:	2000      	movs	r0, #0
 80135a4:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 80135a8:	2600      	movs	r6, #0
 80135aa:	682a      	ldr	r2, [r5, #0]
 80135ac:	696b      	ldr	r3, [r5, #20]
 80135ae:	616e      	str	r6, [r5, #20]
 80135b0:	9305      	str	r3, [sp, #20]
 80135b2:	6892      	ldr	r2, [r2, #8]
 80135b4:	a908      	add	r1, sp, #32
 80135b6:	4628      	mov	r0, r5
 80135b8:	4790      	blx	r2
 80135ba:	9b05      	ldr	r3, [sp, #20]
 80135bc:	616b      	str	r3, [r5, #20]
 80135be:	4652      	mov	r2, sl
 80135c0:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 80135c4:	4649      	mov	r1, r9
 80135c6:	4628      	mov	r0, r5
 80135c8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 80135cc:	f7f6 f951 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
 80135d0:	4b23      	ldr	r3, [pc, #140]	; (8013660 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80135d2:	9a01      	ldr	r2, [sp, #4]
 80135d4:	801a      	strh	r2, [r3, #0]
 80135d6:	4b23      	ldr	r3, [pc, #140]	; (8013664 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80135d8:	9a02      	ldr	r2, [sp, #8]
 80135da:	801a      	strh	r2, [r3, #0]
 80135dc:	4b1d      	ldr	r3, [pc, #116]	; (8013654 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80135de:	9a03      	ldr	r2, [sp, #12]
 80135e0:	801a      	strh	r2, [r3, #0]
 80135e2:	4b1d      	ldr	r3, [pc, #116]	; (8013658 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80135e4:	9a04      	ldr	r2, [sp, #16]
 80135e6:	801a      	strh	r2, [r3, #0]
 80135e8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80135ec:	6823      	ldr	r3, [r4, #0]
 80135ee:	4620      	mov	r0, r4
 80135f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80135f2:	4798      	blx	r3
 80135f4:	6823      	ldr	r3, [r4, #0]
 80135f6:	4620      	mov	r0, r4
 80135f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80135fa:	4798      	blx	r3
 80135fc:	b00f      	add	sp, #60	; 0x3c
 80135fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013602:	883b      	ldrh	r3, [r7, #0]
 8013604:	f8ab 0000 	strh.w	r0, [fp]
 8013608:	f8aa 3000 	strh.w	r3, [sl]
 801360c:	e789      	b.n	8013522 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 801360e:	462a      	mov	r2, r5
 8013610:	ab0a      	add	r3, sp, #40	; 0x28
 8013612:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013616:	6851      	ldr	r1, [r2, #4]
 8013618:	c303      	stmia	r3!, {r0, r1}
 801361a:	e7a9      	b.n	8013570 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 801361c:	a807      	add	r0, sp, #28
 801361e:	f009 f80b 	bl	801c638 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013622:	4606      	mov	r6, r0
 8013624:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8013626:	6803      	ldr	r3, [r0, #0]
 8013628:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801362a:	4798      	blx	r3
 801362c:	4286      	cmp	r6, r0
 801362e:	d1b8      	bne.n	80135a2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8013630:	f7f7 f9ec 	bl	800aa0c <_ZN8touchgfx3HAL3lcdEv>
 8013634:	6803      	ldr	r3, [r0, #0]
 8013636:	4606      	mov	r6, r0
 8013638:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801363a:	9305      	str	r3, [sp, #20]
 801363c:	a807      	add	r0, sp, #28
 801363e:	f008 fffb 	bl	801c638 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013642:	9b05      	ldr	r3, [sp, #20]
 8013644:	4601      	mov	r1, r0
 8013646:	4630      	mov	r0, r6
 8013648:	4798      	blx	r3
 801364a:	f080 0001 	eor.w	r0, r0, #1
 801364e:	b2c0      	uxtb	r0, r0
 8013650:	e7a8      	b.n	80135a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8013652:	bf00      	nop
 8013654:	2000231c 	.word	0x2000231c
 8013658:	2000231e 	.word	0x2000231e
 801365c:	20002320 	.word	0x20002320
 8013660:	20002322 	.word	0x20002322
 8013664:	20002324 	.word	0x20002324

08013668 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8013668:	b510      	push	{r4, lr}
 801366a:	4b07      	ldr	r3, [pc, #28]	; (8013688 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 801366c:	781b      	ldrb	r3, [r3, #0]
 801366e:	4604      	mov	r4, r0
 8013670:	b13b      	cbz	r3, 8013682 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013672:	6803      	ldr	r3, [r0, #0]
 8013674:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013676:	4798      	blx	r3
 8013678:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801367a:	4283      	cmp	r3, r0
 801367c:	d101      	bne.n	8013682 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801367e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8013680:	bd10      	pop	{r4, pc}
 8013682:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8013684:	e7fc      	b.n	8013680 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8013686:	bf00      	nop
 8013688:	20002326 	.word	0x20002326

0801368c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 801368c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013690:	b08a      	sub	sp, #40	; 0x28
 8013692:	461d      	mov	r5, r3
 8013694:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013698:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801369c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80136a0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80136a4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80136a8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80136ac:	2400      	movs	r4, #0
 80136ae:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80136b2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 80136b6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80136ba:	4690      	mov	r8, r2
 80136bc:	4607      	mov	r7, r0
 80136be:	9404      	str	r4, [sp, #16]
 80136c0:	f88d 4020 	strb.w	r4, [sp, #32]
 80136c4:	f7ff ffd0 	bl	8013668 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80136c8:	fb06 8505 	mla	r5, r6, r5, r8
 80136cc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80136d0:	6878      	ldr	r0, [r7, #4]
 80136d2:	9505      	str	r5, [sp, #20]
 80136d4:	f8ad 601e 	strh.w	r6, [sp, #30]
 80136d8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80136dc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 80136e0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80136e4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80136e8:	6803      	ldr	r3, [r0, #0]
 80136ea:	a901      	add	r1, sp, #4
 80136ec:	685b      	ldr	r3, [r3, #4]
 80136ee:	4798      	blx	r3
 80136f0:	b00a      	add	sp, #40	; 0x28
 80136f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080136f6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80136f6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80136fa:	b08b      	sub	sp, #44	; 0x2c
 80136fc:	2400      	movs	r4, #0
 80136fe:	461d      	mov	r5, r3
 8013700:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013704:	4688      	mov	r8, r1
 8013706:	4691      	mov	r9, r2
 8013708:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 801370c:	9404      	str	r4, [sp, #16]
 801370e:	4607      	mov	r7, r0
 8013710:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013714:	f7ff ffa8 	bl	8013668 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013718:	fb06 9505 	mla	r5, r6, r5, r9
 801371c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013720:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013724:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013728:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801372c:	6878      	ldr	r0, [r7, #4]
 801372e:	9505      	str	r5, [sp, #20]
 8013730:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013734:	f8ad 401c 	strh.w	r4, [sp, #28]
 8013738:	f8ad 601e 	strh.w	r6, [sp, #30]
 801373c:	f8cd 8010 	str.w	r8, [sp, #16]
 8013740:	f8ad 4020 	strh.w	r4, [sp, #32]
 8013744:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013748:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801374c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013750:	6803      	ldr	r3, [r0, #0]
 8013752:	a901      	add	r1, sp, #4
 8013754:	685b      	ldr	r3, [r3, #4]
 8013756:	4798      	blx	r3
 8013758:	b00b      	add	sp, #44	; 0x2c
 801375a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08013760 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8013760:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013764:	b08a      	sub	sp, #40	; 0x28
 8013766:	4698      	mov	r8, r3
 8013768:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 801376c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8013770:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8013774:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8013778:	2300      	movs	r3, #0
 801377a:	2d0b      	cmp	r5, #11
 801377c:	4606      	mov	r6, r0
 801377e:	9304      	str	r3, [sp, #16]
 8013780:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8013784:	d138      	bne.n	80137f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8013786:	2380      	movs	r3, #128	; 0x80
 8013788:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801378c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013790:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013794:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013798:	f8ad 301a 	strh.w	r3, [sp, #26]
 801379c:	f88d 0020 	strb.w	r0, [sp, #32]
 80137a0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80137a4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80137a8:	4630      	mov	r0, r6
 80137aa:	9203      	str	r2, [sp, #12]
 80137ac:	f7ff ff5c 	bl	8013668 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80137b0:	2c0b      	cmp	r4, #11
 80137b2:	bf98      	it	ls
 80137b4:	4b1b      	ldrls	r3, [pc, #108]	; (8013824 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 80137b6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 80137ba:	bf98      	it	ls
 80137bc:	5d19      	ldrbls	r1, [r3, r4]
 80137be:	f8ad 701e 	strh.w	r7, [sp, #30]
 80137c2:	bf88      	it	hi
 80137c4:	2100      	movhi	r1, #0
 80137c6:	fb02 8307 	mla	r3, r2, r7, r8
 80137ca:	10c9      	asrs	r1, r1, #3
 80137cc:	fb01 0003 	mla	r0, r1, r3, r0
 80137d0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 80137d4:	9005      	str	r0, [sp, #20]
 80137d6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80137da:	6870      	ldr	r0, [r6, #4]
 80137dc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 80137e0:	2300      	movs	r3, #0
 80137e2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80137e6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80137ea:	6803      	ldr	r3, [r0, #0]
 80137ec:	a901      	add	r1, sp, #4
 80137ee:	685b      	ldr	r3, [r3, #4]
 80137f0:	4798      	blx	r3
 80137f2:	b00a      	add	sp, #40	; 0x28
 80137f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80137f8:	2d02      	cmp	r5, #2
 80137fa:	d109      	bne.n	8013810 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 80137fc:	28ff      	cmp	r0, #255	; 0xff
 80137fe:	d105      	bne.n	801380c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8013800:	f1bc 0f00 	cmp.w	ip, #0
 8013804:	bf14      	ite	ne
 8013806:	2340      	movne	r3, #64	; 0x40
 8013808:	2320      	moveq	r3, #32
 801380a:	e7bd      	b.n	8013788 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801380c:	2340      	movs	r3, #64	; 0x40
 801380e:	e7bb      	b.n	8013788 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013810:	28ff      	cmp	r0, #255	; 0xff
 8013812:	d105      	bne.n	8013820 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8013814:	f1bc 0f00 	cmp.w	ip, #0
 8013818:	bf14      	ite	ne
 801381a:	2304      	movne	r3, #4
 801381c:	2301      	moveq	r3, #1
 801381e:	e7b3      	b.n	8013788 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013820:	2304      	movs	r3, #4
 8013822:	e7b1      	b.n	8013788 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013824:	0802ee70 	.word	0x0802ee70

08013828 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8013828:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801382c:	b08b      	sub	sp, #44	; 0x2c
 801382e:	461d      	mov	r5, r3
 8013830:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8013834:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8013838:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 801383c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013840:	bf14      	ite	ne
 8013842:	2308      	movne	r3, #8
 8013844:	2302      	moveq	r3, #2
 8013846:	2400      	movs	r4, #0
 8013848:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801384c:	4688      	mov	r8, r1
 801384e:	4693      	mov	fp, r2
 8013850:	9404      	str	r4, [sp, #16]
 8013852:	4607      	mov	r7, r0
 8013854:	f7ff ff08 	bl	8013668 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013858:	2e0b      	cmp	r6, #11
 801385a:	bf98      	it	ls
 801385c:	4b15      	ldrls	r3, [pc, #84]	; (80138b4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 801385e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013862:	bf98      	it	ls
 8013864:	5d9c      	ldrbls	r4, [r3, r6]
 8013866:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801386a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801386e:	fb05 b50a 	mla	r5, r5, sl, fp
 8013872:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013876:	f8ad 301a 	strh.w	r3, [sp, #26]
 801387a:	10e4      	asrs	r4, r4, #3
 801387c:	fb04 0405 	mla	r4, r4, r5, r0
 8013880:	2300      	movs	r3, #0
 8013882:	6878      	ldr	r0, [r7, #4]
 8013884:	9405      	str	r4, [sp, #20]
 8013886:	f8ad 301c 	strh.w	r3, [sp, #28]
 801388a:	f8ad a01e 	strh.w	sl, [sp, #30]
 801388e:	f8cd 8010 	str.w	r8, [sp, #16]
 8013892:	f88d 9020 	strb.w	r9, [sp, #32]
 8013896:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 801389a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801389e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 80138a2:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 80138a6:	6803      	ldr	r3, [r0, #0]
 80138a8:	a901      	add	r1, sp, #4
 80138aa:	685b      	ldr	r3, [r3, #4]
 80138ac:	4798      	blx	r3
 80138ae:	b00b      	add	sp, #44	; 0x2c
 80138b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80138b4:	0802ee70 	.word	0x0802ee70

080138b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 80138b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80138bc:	461e      	mov	r6, r3
 80138be:	4b0a      	ldr	r3, [pc, #40]	; (80138e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 80138c0:	460f      	mov	r7, r1
 80138c2:	881d      	ldrh	r5, [r3, #0]
 80138c4:	4690      	mov	r8, r2
 80138c6:	f7f7 f8a1 	bl	800aa0c <_ZN8touchgfx3HAL3lcdEv>
 80138ca:	6803      	ldr	r3, [r0, #0]
 80138cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80138ce:	4798      	blx	r3
 80138d0:	280b      	cmp	r0, #11
 80138d2:	bf9a      	itte	ls
 80138d4:	4b05      	ldrls	r3, [pc, #20]	; (80138ec <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80138d6:	5c1c      	ldrbls	r4, [r3, r0]
 80138d8:	2400      	movhi	r4, #0
 80138da:	fb08 7005 	mla	r0, r8, r5, r7
 80138de:	10e4      	asrs	r4, r4, #3
 80138e0:	fb04 6000 	mla	r0, r4, r0, r6
 80138e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80138e8:	20002322 	.word	0x20002322
 80138ec:	0802ee70 	.word	0x0802ee70

080138f0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 80138f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80138f2:	b08b      	sub	sp, #44	; 0x2c
 80138f4:	461f      	mov	r7, r3
 80138f6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80138fa:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80138fe:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013902:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013906:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801390a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801390e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013912:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013916:	2500      	movs	r5, #0
 8013918:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801391c:	f88d 3020 	strb.w	r3, [sp, #32]
 8013920:	4604      	mov	r4, r0
 8013922:	4616      	mov	r6, r2
 8013924:	9504      	str	r5, [sp, #16]
 8013926:	f7ff fe9f 	bl	8013668 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801392a:	463a      	mov	r2, r7
 801392c:	4631      	mov	r1, r6
 801392e:	4603      	mov	r3, r0
 8013930:	4620      	mov	r0, r4
 8013932:	f7ff ffc1 	bl	80138b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013936:	4b0e      	ldr	r3, [pc, #56]	; (8013970 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8013938:	9005      	str	r0, [sp, #20]
 801393a:	881b      	ldrh	r3, [r3, #0]
 801393c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013940:	f7f7 f864 	bl	800aa0c <_ZN8touchgfx3HAL3lcdEv>
 8013944:	6803      	ldr	r3, [r0, #0]
 8013946:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013948:	4798      	blx	r3
 801394a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801394c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8013950:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8013954:	9304      	str	r3, [sp, #16]
 8013956:	6860      	ldr	r0, [r4, #4]
 8013958:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 801395c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013960:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8013964:	6803      	ldr	r3, [r0, #0]
 8013966:	a901      	add	r1, sp, #4
 8013968:	685b      	ldr	r3, [r3, #4]
 801396a:	4798      	blx	r3
 801396c:	b00b      	add	sp, #44	; 0x2c
 801396e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013970:	20002322 	.word	0x20002322

08013974 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8013974:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013976:	b08d      	sub	sp, #52	; 0x34
 8013978:	466b      	mov	r3, sp
 801397a:	e883 0006 	stmia.w	r3, {r1, r2}
 801397e:	2300      	movs	r3, #0
 8013980:	9306      	str	r3, [sp, #24]
 8013982:	6803      	ldr	r3, [r0, #0]
 8013984:	f8bd 6000 	ldrh.w	r6, [sp]
 8013988:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801398a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801398e:	2501      	movs	r5, #1
 8013990:	9503      	str	r5, [sp, #12]
 8013992:	4604      	mov	r4, r0
 8013994:	4798      	blx	r3
 8013996:	463a      	mov	r2, r7
 8013998:	4631      	mov	r1, r6
 801399a:	4603      	mov	r3, r0
 801399c:	4620      	mov	r0, r4
 801399e:	f7ff ff8b 	bl	80138b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80139a2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80139a4:	9307      	str	r3, [sp, #28]
 80139a6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80139aa:	f8ad 3020 	strh.w	r3, [sp, #32]
 80139ae:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80139b2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80139b6:	4b0f      	ldr	r3, [pc, #60]	; (80139f4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80139b8:	9004      	str	r0, [sp, #16]
 80139ba:	881b      	ldrh	r3, [r3, #0]
 80139bc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80139c0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80139c4:	f7f7 f822 	bl	800aa0c <_ZN8touchgfx3HAL3lcdEv>
 80139c8:	6803      	ldr	r3, [r0, #0]
 80139ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80139cc:	4798      	blx	r3
 80139ce:	23ff      	movs	r3, #255	; 0xff
 80139d0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80139d4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80139d8:	6860      	ldr	r0, [r4, #4]
 80139da:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80139de:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80139e2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80139e6:	6803      	ldr	r3, [r0, #0]
 80139e8:	a903      	add	r1, sp, #12
 80139ea:	685b      	ldr	r3, [r3, #4]
 80139ec:	4798      	blx	r3
 80139ee:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80139f0:	b00d      	add	sp, #52	; 0x34
 80139f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80139f4:	20002322 	.word	0x20002322

080139f8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80139f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80139fc:	b08c      	sub	sp, #48	; 0x30
 80139fe:	461e      	mov	r6, r3
 8013a00:	466d      	mov	r5, sp
 8013a02:	2300      	movs	r3, #0
 8013a04:	e885 0006 	stmia.w	r5, {r1, r2}
 8013a08:	9306      	str	r3, [sp, #24]
 8013a0a:	6803      	ldr	r3, [r0, #0]
 8013a0c:	f8bd 7000 	ldrh.w	r7, [sp]
 8013a10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013a12:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8013a16:	2501      	movs	r5, #1
 8013a18:	9503      	str	r5, [sp, #12]
 8013a1a:	4604      	mov	r4, r0
 8013a1c:	4798      	blx	r3
 8013a1e:	4642      	mov	r2, r8
 8013a20:	4639      	mov	r1, r7
 8013a22:	4603      	mov	r3, r0
 8013a24:	4620      	mov	r0, r4
 8013a26:	f7ff ff47 	bl	80138b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013a2a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8013a2e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013a32:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8013a36:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8013a3a:	4b11      	ldr	r3, [pc, #68]	; (8013a80 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8013a3c:	9004      	str	r0, [sp, #16]
 8013a3e:	881b      	ldrh	r3, [r3, #0]
 8013a40:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8013a44:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013a46:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8013a4a:	9607      	str	r6, [sp, #28]
 8013a4c:	f7f6 ffde 	bl	800aa0c <_ZN8touchgfx3HAL3lcdEv>
 8013a50:	6803      	ldr	r3, [r0, #0]
 8013a52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013a54:	4798      	blx	r3
 8013a56:	23ff      	movs	r3, #255	; 0xff
 8013a58:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8013a5c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013a60:	6860      	ldr	r0, [r4, #4]
 8013a62:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8013a66:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8013a6a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8013a6e:	6803      	ldr	r3, [r0, #0]
 8013a70:	a903      	add	r1, sp, #12
 8013a72:	685b      	ldr	r3, [r3, #4]
 8013a74:	4798      	blx	r3
 8013a76:	4630      	mov	r0, r6
 8013a78:	b00c      	add	sp, #48	; 0x30
 8013a7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013a7e:	bf00      	nop
 8013a80:	20002322 	.word	0x20002322

08013a84 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8013a84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013a86:	b085      	sub	sp, #20
 8013a88:	ac02      	add	r4, sp, #8
 8013a8a:	e884 0006 	stmia.w	r4, {r1, r2}
 8013a8e:	4605      	mov	r5, r0
 8013a90:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8013a94:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8013a98:	f7ff fde6 	bl	8013668 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013a9c:	463a      	mov	r2, r7
 8013a9e:	4603      	mov	r3, r0
 8013aa0:	4631      	mov	r1, r6
 8013aa2:	4628      	mov	r0, r5
 8013aa4:	f7ff ff08 	bl	80138b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013aa8:	4a05      	ldr	r2, [pc, #20]	; (8013ac0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8013aaa:	682b      	ldr	r3, [r5, #0]
 8013aac:	8812      	ldrh	r2, [r2, #0]
 8013aae:	9200      	str	r2, [sp, #0]
 8013ab0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8013ab2:	e894 0006 	ldmia.w	r4, {r1, r2}
 8013ab6:	4603      	mov	r3, r0
 8013ab8:	4628      	mov	r0, r5
 8013aba:	47b0      	blx	r6
 8013abc:	b005      	add	sp, #20
 8013abe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013ac0:	20002322 	.word	0x20002322

08013ac4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8013ac4:	b570      	push	{r4, r5, r6, lr}
 8013ac6:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8013aca:	4604      	mov	r4, r0
 8013acc:	b19b      	cbz	r3, 8013af6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8013ace:	2002      	movs	r0, #2
 8013ad0:	f7fc fee4 	bl	801089c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8013ad4:	2300      	movs	r3, #0
 8013ad6:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8013ada:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8013ade:	6823      	ldr	r3, [r4, #0]
 8013ae0:	4620      	mov	r0, r4
 8013ae2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8013ae6:	f7ff fdbf 	bl	8013668 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013aea:	462b      	mov	r3, r5
 8013aec:	4601      	mov	r1, r0
 8013aee:	4620      	mov	r0, r4
 8013af0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013af4:	4718      	bx	r3
 8013af6:	bd70      	pop	{r4, r5, r6, pc}

08013af8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8013af8:	b538      	push	{r3, r4, r5, lr}
 8013afa:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8013afe:	428b      	cmp	r3, r1
 8013b00:	4604      	mov	r4, r0
 8013b02:	460d      	mov	r5, r1
 8013b04:	d006      	beq.n	8013b14 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8013b06:	6803      	ldr	r3, [r0, #0]
 8013b08:	b929      	cbnz	r1, 8013b16 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8013b0a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013b0e:	4798      	blx	r3
 8013b10:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8013b14:	bd38      	pop	{r3, r4, r5, pc}
 8013b16:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8013b1a:	e7f8      	b.n	8013b0e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08013b1c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8013b1c:	b510      	push	{r4, lr}
 8013b1e:	4b0d      	ldr	r3, [pc, #52]	; (8013b54 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8013b20:	781b      	ldrb	r3, [r3, #0]
 8013b22:	4604      	mov	r4, r0
 8013b24:	b95b      	cbnz	r3, 8013b3e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8013b26:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8013b2a:	2b02      	cmp	r3, #2
 8013b2c:	d007      	beq.n	8013b3e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8013b2e:	6840      	ldr	r0, [r0, #4]
 8013b30:	f000 f928 	bl	8013d84 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8013b34:	b118      	cbz	r0, 8013b3e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8013b36:	6862      	ldr	r2, [r4, #4]
 8013b38:	7a53      	ldrb	r3, [r2, #9]
 8013b3a:	2b00      	cmp	r3, #0
 8013b3c:	d0fc      	beq.n	8013b38 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8013b3e:	f7fd f937 	bl	8010db0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8013b42:	4620      	mov	r0, r4
 8013b44:	2100      	movs	r1, #0
 8013b46:	f7ff ffd7 	bl	8013af8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8013b4a:	4620      	mov	r0, r4
 8013b4c:	f7ff fd8c 	bl	8013668 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013b50:	bd10      	pop	{r4, pc}
 8013b52:	bf00      	nop
 8013b54:	20002326 	.word	0x20002326

08013b58 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8013b58:	b570      	push	{r4, r5, r6, lr}
 8013b5a:	4604      	mov	r4, r0
 8013b5c:	6803      	ldr	r3, [r0, #0]
 8013b5e:	b919      	cbnz	r1, 8013b68 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8013b60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013b62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013b66:	4718      	bx	r3
 8013b68:	2200      	movs	r2, #0
 8013b6a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 8013b6e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8013b72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013b74:	4798      	blx	r3
 8013b76:	6863      	ldr	r3, [r4, #4]
 8013b78:	2101      	movs	r1, #1
 8013b7a:	4605      	mov	r5, r0
 8013b7c:	7299      	strb	r1, [r3, #10]
 8013b7e:	4620      	mov	r0, r4
 8013b80:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8013b84:	f7ff ffb8 	bl	8013af8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8013b88:	4628      	mov	r0, r5
 8013b8a:	bd70      	pop	{r4, r5, r6, pc}

08013b8c <_ZN8touchgfx13DMA_Interface5flushEv>:
 8013b8c:	6803      	ldr	r3, [r0, #0]
 8013b8e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013b90:	4718      	bx	r3

08013b92 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8013b92:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8013b96:	1a13      	subs	r3, r2, r0
 8013b98:	4258      	negs	r0, r3
 8013b9a:	4158      	adcs	r0, r3
 8013b9c:	4770      	bx	lr

08013b9e <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8013b9e:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8013ba2:	1a9b      	subs	r3, r3, r2
 8013ba4:	2b00      	cmp	r3, #0
 8013ba6:	bfdc      	itt	le
 8013ba8:	6882      	ldrle	r2, [r0, #8]
 8013baa:	189b      	addle	r3, r3, r2
 8013bac:	2b01      	cmp	r3, #1
 8013bae:	bfcc      	ite	gt
 8013bb0:	2000      	movgt	r0, #0
 8013bb2:	2001      	movle	r0, #1
 8013bb4:	4770      	bx	lr

08013bb6 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8013bb6:	6902      	ldr	r2, [r0, #16]
 8013bb8:	6843      	ldr	r3, [r0, #4]
 8013bba:	2024      	movs	r0, #36	; 0x24
 8013bbc:	fb00 3002 	mla	r0, r0, r2, r3
 8013bc0:	4770      	bx	lr

08013bc2 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8013bc2:	6803      	ldr	r3, [r0, #0]
 8013bc4:	691b      	ldr	r3, [r3, #16]
 8013bc6:	4718      	bx	r3

08013bc8 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8013bc8:	b570      	push	{r4, r5, r6, lr}
 8013bca:	2301      	movs	r3, #1
 8013bcc:	7203      	strb	r3, [r0, #8]
 8013bce:	4604      	mov	r4, r0
 8013bd0:	6840      	ldr	r0, [r0, #4]
 8013bd2:	6803      	ldr	r3, [r0, #0]
 8013bd4:	699b      	ldr	r3, [r3, #24]
 8013bd6:	4798      	blx	r3
 8013bd8:	6803      	ldr	r3, [r0, #0]
 8013bda:	2b40      	cmp	r3, #64	; 0x40
 8013bdc:	4605      	mov	r5, r0
 8013bde:	d00c      	beq.n	8013bfa <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013be0:	d810      	bhi.n	8013c04 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8013be2:	2b04      	cmp	r3, #4
 8013be4:	d01d      	beq.n	8013c22 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8013be6:	d804      	bhi.n	8013bf2 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8013be8:	2b01      	cmp	r3, #1
 8013bea:	d006      	beq.n	8013bfa <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013bec:	2b02      	cmp	r3, #2
 8013bee:	d02c      	beq.n	8013c4a <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8013bf0:	bd70      	pop	{r4, r5, r6, pc}
 8013bf2:	2b08      	cmp	r3, #8
 8013bf4:	d01d      	beq.n	8013c32 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8013bf6:	2b20      	cmp	r3, #32
 8013bf8:	d1fa      	bne.n	8013bf0 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8013bfa:	6823      	ldr	r3, [r4, #0]
 8013bfc:	4620      	mov	r0, r4
 8013bfe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013c00:	4798      	blx	r3
 8013c02:	e013      	b.n	8013c2c <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8013c04:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8013c08:	d0f7      	beq.n	8013bfa <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013c0a:	d804      	bhi.n	8013c16 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8013c0c:	2b80      	cmp	r3, #128	; 0x80
 8013c0e:	d0f4      	beq.n	8013bfa <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013c10:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8013c14:	e7f0      	b.n	8013bf8 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8013c16:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8013c1a:	d0ee      	beq.n	8013bfa <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013c1c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8013c20:	e7e5      	b.n	8013bee <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8013c22:	6823      	ldr	r3, [r4, #0]
 8013c24:	7f01      	ldrb	r1, [r0, #28]
 8013c26:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013c28:	4620      	mov	r0, r4
 8013c2a:	4798      	blx	r3
 8013c2c:	6823      	ldr	r3, [r4, #0]
 8013c2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013c30:	e006      	b.n	8013c40 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8013c32:	6823      	ldr	r3, [r4, #0]
 8013c34:	7f01      	ldrb	r1, [r0, #28]
 8013c36:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013c38:	4620      	mov	r0, r4
 8013c3a:	4798      	blx	r3
 8013c3c:	6823      	ldr	r3, [r4, #0]
 8013c3e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013c40:	4629      	mov	r1, r5
 8013c42:	4620      	mov	r0, r4
 8013c44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013c48:	4718      	bx	r3
 8013c4a:	6823      	ldr	r3, [r4, #0]
 8013c4c:	4620      	mov	r0, r4
 8013c4e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013c50:	4798      	blx	r3
 8013c52:	e7f3      	b.n	8013c3c <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08013c54 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8013c54:	4770      	bx	lr

08013c56 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8013c56:	4770      	bx	lr

08013c58 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8013c58:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8013c5c:	1ad2      	subs	r2, r2, r3
 8013c5e:	2a00      	cmp	r2, #0
 8013c60:	b510      	push	{r4, lr}
 8013c62:	bfdc      	itt	le
 8013c64:	6884      	ldrle	r4, [r0, #8]
 8013c66:	1912      	addle	r2, r2, r4
 8013c68:	2a01      	cmp	r2, #1
 8013c6a:	dd16      	ble.n	8013c9a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8013c6c:	6842      	ldr	r2, [r0, #4]
 8013c6e:	2424      	movs	r4, #36	; 0x24
 8013c70:	fb04 2303 	mla	r3, r4, r3, r2
 8013c74:	f101 0220 	add.w	r2, r1, #32
 8013c78:	f851 4b04 	ldr.w	r4, [r1], #4
 8013c7c:	f843 4b04 	str.w	r4, [r3], #4
 8013c80:	4291      	cmp	r1, r2
 8013c82:	d1f9      	bne.n	8013c78 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8013c84:	780a      	ldrb	r2, [r1, #0]
 8013c86:	701a      	strb	r2, [r3, #0]
 8013c88:	68c3      	ldr	r3, [r0, #12]
 8013c8a:	6882      	ldr	r2, [r0, #8]
 8013c8c:	f3bf 8f5b 	dmb	ish
 8013c90:	3301      	adds	r3, #1
 8013c92:	429a      	cmp	r2, r3
 8013c94:	bfd8      	it	le
 8013c96:	1a9b      	suble	r3, r3, r2
 8013c98:	60c3      	str	r3, [r0, #12]
 8013c9a:	bd10      	pop	{r4, pc}

08013c9c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8013c9c:	6903      	ldr	r3, [r0, #16]
 8013c9e:	6882      	ldr	r2, [r0, #8]
 8013ca0:	f3bf 8f5b 	dmb	ish
 8013ca4:	3301      	adds	r3, #1
 8013ca6:	429a      	cmp	r2, r3
 8013ca8:	bfd8      	it	le
 8013caa:	1a9b      	suble	r3, r3, r2
 8013cac:	6103      	str	r3, [r0, #16]
 8013cae:	4770      	bx	lr

08013cb0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8013cb0:	b570      	push	{r4, r5, r6, lr}
 8013cb2:	4604      	mov	r4, r0
 8013cb4:	460e      	mov	r6, r1
 8013cb6:	6860      	ldr	r0, [r4, #4]
 8013cb8:	6803      	ldr	r3, [r0, #0]
 8013cba:	685b      	ldr	r3, [r3, #4]
 8013cbc:	4798      	blx	r3
 8013cbe:	2800      	cmp	r0, #0
 8013cc0:	d1f9      	bne.n	8013cb6 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8013cc2:	4d0d      	ldr	r5, [pc, #52]	; (8013cf8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8013cc4:	6828      	ldr	r0, [r5, #0]
 8013cc6:	6803      	ldr	r3, [r0, #0]
 8013cc8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013cca:	4798      	blx	r3
 8013ccc:	f7fd f892 	bl	8010df4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8013cd0:	6828      	ldr	r0, [r5, #0]
 8013cd2:	2101      	movs	r1, #1
 8013cd4:	f7ff ff10 	bl	8013af8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8013cd8:	6860      	ldr	r0, [r4, #4]
 8013cda:	6803      	ldr	r3, [r0, #0]
 8013cdc:	4631      	mov	r1, r6
 8013cde:	689b      	ldr	r3, [r3, #8]
 8013ce0:	4798      	blx	r3
 8013ce2:	6823      	ldr	r3, [r4, #0]
 8013ce4:	4620      	mov	r0, r4
 8013ce6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013ce8:	4798      	blx	r3
 8013cea:	6828      	ldr	r0, [r5, #0]
 8013cec:	6803      	ldr	r3, [r0, #0]
 8013cee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013cf2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8013cf4:	4718      	bx	r3
 8013cf6:	bf00      	nop
 8013cf8:	20002328 	.word	0x20002328

08013cfc <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8013cfc:	b508      	push	{r3, lr}
 8013cfe:	f7fd f857 	bl	8010db0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8013d02:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8013d06:	f7fd b869 	b.w	8010ddc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08013d0a <_ZN8touchgfx13DMA_Interface5startEv>:
 8013d0a:	b510      	push	{r4, lr}
 8013d0c:	4604      	mov	r4, r0
 8013d0e:	6840      	ldr	r0, [r0, #4]
 8013d10:	6803      	ldr	r3, [r0, #0]
 8013d12:	681b      	ldr	r3, [r3, #0]
 8013d14:	4798      	blx	r3
 8013d16:	b948      	cbnz	r0, 8013d2c <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8013d18:	7a63      	ldrb	r3, [r4, #9]
 8013d1a:	b13b      	cbz	r3, 8013d2c <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8013d1c:	7a23      	ldrb	r3, [r4, #8]
 8013d1e:	b92b      	cbnz	r3, 8013d2c <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8013d20:	6823      	ldr	r3, [r4, #0]
 8013d22:	4620      	mov	r0, r4
 8013d24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013d26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013d2a:	4718      	bx	r3
 8013d2c:	bd10      	pop	{r4, pc}

08013d2e <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8013d2e:	b570      	push	{r4, r5, r6, lr}
 8013d30:	4604      	mov	r4, r0
 8013d32:	6840      	ldr	r0, [r0, #4]
 8013d34:	6803      	ldr	r3, [r0, #0]
 8013d36:	681b      	ldr	r3, [r3, #0]
 8013d38:	4798      	blx	r3
 8013d3a:	4605      	mov	r5, r0
 8013d3c:	b930      	cbnz	r0, 8013d4c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8013d3e:	7a23      	ldrb	r3, [r4, #8]
 8013d40:	b123      	cbz	r3, 8013d4c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8013d42:	6860      	ldr	r0, [r4, #4]
 8013d44:	6803      	ldr	r3, [r0, #0]
 8013d46:	695b      	ldr	r3, [r3, #20]
 8013d48:	4798      	blx	r3
 8013d4a:	7225      	strb	r5, [r4, #8]
 8013d4c:	6860      	ldr	r0, [r4, #4]
 8013d4e:	6803      	ldr	r3, [r0, #0]
 8013d50:	681b      	ldr	r3, [r3, #0]
 8013d52:	4798      	blx	r3
 8013d54:	b928      	cbnz	r0, 8013d62 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8013d56:	6823      	ldr	r3, [r4, #0]
 8013d58:	4620      	mov	r0, r4
 8013d5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013d5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013d60:	4718      	bx	r3
 8013d62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013d66:	f7fd b851 	b.w	8010e0c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

08013d6c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8013d6c:	b510      	push	{r4, lr}
 8013d6e:	4c04      	ldr	r4, [pc, #16]	; (8013d80 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8013d70:	6082      	str	r2, [r0, #8]
 8013d72:	2200      	movs	r2, #0
 8013d74:	e9c0 4100 	strd	r4, r1, [r0]
 8013d78:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8013d7c:	bd10      	pop	{r4, pc}
 8013d7e:	bf00      	nop
 8013d80:	0802efac 	.word	0x0802efac

08013d84 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8013d84:	6840      	ldr	r0, [r0, #4]
 8013d86:	6803      	ldr	r3, [r0, #0]
 8013d88:	681b      	ldr	r3, [r3, #0]
 8013d8a:	4718      	bx	r3

08013d8c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
 8013d8c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8013d90:	4770      	bx	lr

08013d92 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:
 8013d92:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8013d96:	4770      	bx	lr

08013d98 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
 8013d98:	2200      	movs	r2, #0
 8013d9a:	8002      	strh	r2, [r0, #0]
 8013d9c:	8042      	strh	r2, [r0, #2]
 8013d9e:	8082      	strh	r2, [r0, #4]
 8013da0:	80c2      	strh	r2, [r0, #6]
 8013da2:	4770      	bx	lr

08013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8013da4:	b507      	push	{r0, r1, r2, lr}
 8013da6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8013daa:	ab01      	add	r3, sp, #4
 8013dac:	6809      	ldr	r1, [r1, #0]
 8013dae:	6800      	ldr	r0, [r0, #0]
 8013db0:	f006 fa5e 	bl	801a270 <_ZN8touchgfx6muldivElllRl>
 8013db4:	b003      	add	sp, #12
 8013db6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08013dbc <_ZN8touchgfx7CWRUtil4sineEi>:
 8013dbc:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8013dc0:	fb90 f2f3 	sdiv	r2, r0, r3
 8013dc4:	fb02 0013 	mls	r0, r2, r3, r0
 8013dc8:	2800      	cmp	r0, #0
 8013dca:	bfb8      	it	lt
 8013dcc:	18c0      	addlt	r0, r0, r3
 8013dce:	285a      	cmp	r0, #90	; 0x5a
 8013dd0:	4b09      	ldr	r3, [pc, #36]	; (8013df8 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8013dd2:	dc02      	bgt.n	8013dda <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8013dd4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8013dd8:	4770      	bx	lr
 8013dda:	28b4      	cmp	r0, #180	; 0xb4
 8013ddc:	dc02      	bgt.n	8013de4 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8013dde:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8013de2:	e7f7      	b.n	8013dd4 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8013de4:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8013de8:	bfd4      	ite	le
 8013dea:	38b4      	suble	r0, #180	; 0xb4
 8013dec:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8013df0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8013df4:	4240      	negs	r0, r0
 8013df6:	4770      	bx	lr
 8013df8:	0802efc8 	.word	0x0802efc8

08013dfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8013dfc:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8013e00:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013e02:	fb90 f2f3 	sdiv	r2, r0, r3
 8013e06:	fb02 0013 	mls	r0, r2, r3, r0
 8013e0a:	2800      	cmp	r0, #0
 8013e0c:	bfb8      	it	lt
 8013e0e:	18c0      	addlt	r0, r0, r3
 8013e10:	1144      	asrs	r4, r0, #5
 8013e12:	f000 061f 	and.w	r6, r0, #31
 8013e16:	4620      	mov	r0, r4
 8013e18:	f7ff ffd0 	bl	8013dbc <_ZN8touchgfx7CWRUtil4sineEi>
 8013e1c:	4605      	mov	r5, r0
 8013e1e:	b90e      	cbnz	r6, 8013e24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8013e20:	b002      	add	sp, #8
 8013e22:	bd70      	pop	{r4, r5, r6, pc}
 8013e24:	1c60      	adds	r0, r4, #1
 8013e26:	f7ff ffc9 	bl	8013dbc <_ZN8touchgfx7CWRUtil4sineEi>
 8013e2a:	ab01      	add	r3, sp, #4
 8013e2c:	2220      	movs	r2, #32
 8013e2e:	4631      	mov	r1, r6
 8013e30:	1b40      	subs	r0, r0, r5
 8013e32:	f006 fa1d 	bl	801a270 <_ZN8touchgfx6muldivElllRl>
 8013e36:	4428      	add	r0, r5
 8013e38:	e7f2      	b.n	8013e20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08013e3a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8013e3a:	b508      	push	{r3, lr}
 8013e3c:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8013e40:	f7ff ffdc 	bl	8013dfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013e44:	bd08      	pop	{r3, pc}
	...

08013e48 <_ZN8touchgfx6CircleC1Ev>:
 8013e48:	b510      	push	{r4, lr}
 8013e4a:	4604      	mov	r4, r0
 8013e4c:	f000 fd68 	bl	8014920 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8013e50:	4b08      	ldr	r3, [pc, #32]	; (8013e74 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8013e52:	6023      	str	r3, [r4, #0]
 8013e54:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8013e58:	2300      	movs	r3, #0
 8013e5a:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8013e5e:	f24b 4205 	movw	r2, #46085	; 0xb405
 8013e62:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8013e66:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8013e6a:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8013e6e:	60a3      	str	r3, [r4, #8]
 8013e70:	4620      	mov	r0, r4
 8013e72:	bd10      	pop	{r4, pc}
 8013e74:	0802f088 	.word	0x0802f088

08013e78 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8013e78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e7c:	428a      	cmp	r2, r1
 8013e7e:	4680      	mov	r8, r0
 8013e80:	4610      	mov	r0, r2
 8013e82:	4699      	mov	r9, r3
 8013e84:	bfa6      	itte	ge
 8013e86:	460a      	movge	r2, r1
 8013e88:	4603      	movge	r3, r0
 8013e8a:	460b      	movlt	r3, r1
 8013e8c:	1a99      	subs	r1, r3, r2
 8013e8e:	b085      	sub	sp, #20
 8013e90:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8013e94:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8013e98:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8013e9a:	bfa4      	itt	ge
 8013e9c:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8013ea0:	2200      	movge	r2, #0
 8013ea2:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8013ea6:	9300      	str	r3, [sp, #0]
 8013ea8:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8013eac:	f102 0b01 	add.w	fp, r2, #1
 8013eb0:	2c00      	cmp	r4, #0
 8013eb2:	f040 80af 	bne.w	8014014 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8013eb6:	4610      	mov	r0, r2
 8013eb8:	9201      	str	r2, [sp, #4]
 8013eba:	f7ff ff9f 	bl	8013dfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013ebe:	a903      	add	r1, sp, #12
 8013ec0:	9003      	str	r0, [sp, #12]
 8013ec2:	4650      	mov	r0, sl
 8013ec4:	f7ff ff6e 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013ec8:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8013ecc:	9a01      	ldr	r2, [sp, #4]
 8013ece:	4408      	add	r0, r1
 8013ed0:	f8d9 1000 	ldr.w	r1, [r9]
 8013ed4:	4281      	cmp	r1, r0
 8013ed6:	bfc8      	it	gt
 8013ed8:	f8c9 0000 	strgt.w	r0, [r9]
 8013edc:	6839      	ldr	r1, [r7, #0]
 8013ede:	4288      	cmp	r0, r1
 8013ee0:	bfc8      	it	gt
 8013ee2:	6038      	strgt	r0, [r7, #0]
 8013ee4:	4610      	mov	r0, r2
 8013ee6:	f7ff ffa8 	bl	8013e3a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013eea:	a903      	add	r1, sp, #12
 8013eec:	9003      	str	r0, [sp, #12]
 8013eee:	4650      	mov	r0, sl
 8013ef0:	f7ff ff58 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013ef4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8013ef8:	1a10      	subs	r0, r2, r0
 8013efa:	6832      	ldr	r2, [r6, #0]
 8013efc:	4282      	cmp	r2, r0
 8013efe:	bfc8      	it	gt
 8013f00:	6030      	strgt	r0, [r6, #0]
 8013f02:	682a      	ldr	r2, [r5, #0]
 8013f04:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8013f08:	4290      	cmp	r0, r2
 8013f0a:	fb9b f2f1 	sdiv	r2, fp, r1
 8013f0e:	fb01 b212 	mls	r2, r1, r2, fp
 8013f12:	eba1 0202 	sub.w	r2, r1, r2
 8013f16:	bfc8      	it	gt
 8013f18:	6028      	strgt	r0, [r5, #0]
 8013f1a:	fb92 f0f1 	sdiv	r0, r2, r1
 8013f1e:	fb01 2210 	mls	r2, r1, r0, r2
 8013f22:	4493      	add	fp, r2
 8013f24:	9b00      	ldr	r3, [sp, #0]
 8013f26:	455b      	cmp	r3, fp
 8013f28:	db2a      	blt.n	8013f80 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8013f2a:	4658      	mov	r0, fp
 8013f2c:	f7ff ff66 	bl	8013dfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013f30:	a903      	add	r1, sp, #12
 8013f32:	9003      	str	r0, [sp, #12]
 8013f34:	4650      	mov	r0, sl
 8013f36:	f7ff ff35 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013f3a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8013f3e:	4410      	add	r0, r2
 8013f40:	f8d9 2000 	ldr.w	r2, [r9]
 8013f44:	4282      	cmp	r2, r0
 8013f46:	bfc8      	it	gt
 8013f48:	f8c9 0000 	strgt.w	r0, [r9]
 8013f4c:	683a      	ldr	r2, [r7, #0]
 8013f4e:	4290      	cmp	r0, r2
 8013f50:	bfc8      	it	gt
 8013f52:	6038      	strgt	r0, [r7, #0]
 8013f54:	4658      	mov	r0, fp
 8013f56:	f7ff ff70 	bl	8013e3a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013f5a:	a903      	add	r1, sp, #12
 8013f5c:	9003      	str	r0, [sp, #12]
 8013f5e:	4650      	mov	r0, sl
 8013f60:	f7ff ff20 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013f64:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8013f68:	1a10      	subs	r0, r2, r0
 8013f6a:	6832      	ldr	r2, [r6, #0]
 8013f6c:	4282      	cmp	r2, r0
 8013f6e:	bfc8      	it	gt
 8013f70:	6030      	strgt	r0, [r6, #0]
 8013f72:	682a      	ldr	r2, [r5, #0]
 8013f74:	4290      	cmp	r0, r2
 8013f76:	bfc8      	it	gt
 8013f78:	6028      	strgt	r0, [r5, #0]
 8013f7a:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8013f7e:	e7d1      	b.n	8013f24 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8013f80:	9b00      	ldr	r3, [sp, #0]
 8013f82:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8013f86:	455b      	cmp	r3, fp
 8013f88:	dd27      	ble.n	8013fda <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 8013f8a:	4618      	mov	r0, r3
 8013f8c:	f7ff ff36 	bl	8013dfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013f90:	a903      	add	r1, sp, #12
 8013f92:	9003      	str	r0, [sp, #12]
 8013f94:	4650      	mov	r0, sl
 8013f96:	f7ff ff05 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013f9a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8013f9e:	4410      	add	r0, r2
 8013fa0:	f8d9 2000 	ldr.w	r2, [r9]
 8013fa4:	4282      	cmp	r2, r0
 8013fa6:	bfc8      	it	gt
 8013fa8:	f8c9 0000 	strgt.w	r0, [r9]
 8013fac:	683a      	ldr	r2, [r7, #0]
 8013fae:	4290      	cmp	r0, r2
 8013fb0:	bfc8      	it	gt
 8013fb2:	6038      	strgt	r0, [r7, #0]
 8013fb4:	9800      	ldr	r0, [sp, #0]
 8013fb6:	f7ff ff40 	bl	8013e3a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013fba:	a903      	add	r1, sp, #12
 8013fbc:	9003      	str	r0, [sp, #12]
 8013fbe:	4650      	mov	r0, sl
 8013fc0:	f7ff fef0 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013fc4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8013fc8:	1a10      	subs	r0, r2, r0
 8013fca:	6832      	ldr	r2, [r6, #0]
 8013fcc:	4282      	cmp	r2, r0
 8013fce:	bfc8      	it	gt
 8013fd0:	6030      	strgt	r0, [r6, #0]
 8013fd2:	682a      	ldr	r2, [r5, #0]
 8013fd4:	4290      	cmp	r0, r2
 8013fd6:	bfc8      	it	gt
 8013fd8:	6028      	strgt	r0, [r5, #0]
 8013fda:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8013fde:	f8d9 1000 	ldr.w	r1, [r9]
 8013fe2:	4291      	cmp	r1, r2
 8013fe4:	bfc8      	it	gt
 8013fe6:	f8c9 2000 	strgt.w	r2, [r9]
 8013fea:	683a      	ldr	r2, [r7, #0]
 8013fec:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8013ff0:	429a      	cmp	r2, r3
 8013ff2:	bfb8      	it	lt
 8013ff4:	603b      	strlt	r3, [r7, #0]
 8013ff6:	6832      	ldr	r2, [r6, #0]
 8013ff8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8013ffc:	429a      	cmp	r2, r3
 8013ffe:	bfc8      	it	gt
 8014000:	6033      	strgt	r3, [r6, #0]
 8014002:	682a      	ldr	r2, [r5, #0]
 8014004:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8014008:	429a      	cmp	r2, r3
 801400a:	da00      	bge.n	801400e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 801400c:	602b      	str	r3, [r5, #0]
 801400e:	b005      	add	sp, #20
 8014010:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014014:	2002      	movs	r0, #2
 8014016:	3401      	adds	r4, #1
 8014018:	fb94 f4f0 	sdiv	r4, r4, r0
 801401c:	4610      	mov	r0, r2
 801401e:	9201      	str	r2, [sp, #4]
 8014020:	f7ff feec 	bl	8013dfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014024:	a903      	add	r1, sp, #12
 8014026:	9003      	str	r0, [sp, #12]
 8014028:	4650      	mov	r0, sl
 801402a:	f7ff febb 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801402e:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8014032:	9a01      	ldr	r2, [sp, #4]
 8014034:	4408      	add	r0, r1
 8014036:	f8d9 1000 	ldr.w	r1, [r9]
 801403a:	1b03      	subs	r3, r0, r4
 801403c:	4299      	cmp	r1, r3
 801403e:	bfc8      	it	gt
 8014040:	f8c9 3000 	strgt.w	r3, [r9]
 8014044:	6839      	ldr	r1, [r7, #0]
 8014046:	428b      	cmp	r3, r1
 8014048:	bfc8      	it	gt
 801404a:	603b      	strgt	r3, [r7, #0]
 801404c:	f8d9 1000 	ldr.w	r1, [r9]
 8014050:	4420      	add	r0, r4
 8014052:	4281      	cmp	r1, r0
 8014054:	bfc8      	it	gt
 8014056:	f8c9 0000 	strgt.w	r0, [r9]
 801405a:	6839      	ldr	r1, [r7, #0]
 801405c:	4288      	cmp	r0, r1
 801405e:	bfc8      	it	gt
 8014060:	6038      	strgt	r0, [r7, #0]
 8014062:	4610      	mov	r0, r2
 8014064:	f7ff fee9 	bl	8013e3a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014068:	a903      	add	r1, sp, #12
 801406a:	9003      	str	r0, [sp, #12]
 801406c:	4650      	mov	r0, sl
 801406e:	f7ff fe99 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014072:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8014076:	1a10      	subs	r0, r2, r0
 8014078:	6832      	ldr	r2, [r6, #0]
 801407a:	1b01      	subs	r1, r0, r4
 801407c:	428a      	cmp	r2, r1
 801407e:	bfc8      	it	gt
 8014080:	6031      	strgt	r1, [r6, #0]
 8014082:	682a      	ldr	r2, [r5, #0]
 8014084:	4291      	cmp	r1, r2
 8014086:	bfc8      	it	gt
 8014088:	6029      	strgt	r1, [r5, #0]
 801408a:	6832      	ldr	r2, [r6, #0]
 801408c:	4420      	add	r0, r4
 801408e:	4282      	cmp	r2, r0
 8014090:	bfc8      	it	gt
 8014092:	6030      	strgt	r0, [r6, #0]
 8014094:	682a      	ldr	r2, [r5, #0]
 8014096:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 801409a:	4290      	cmp	r0, r2
 801409c:	fb9b f2f1 	sdiv	r2, fp, r1
 80140a0:	fb01 b212 	mls	r2, r1, r2, fp
 80140a4:	eba1 0202 	sub.w	r2, r1, r2
 80140a8:	bfc8      	it	gt
 80140aa:	6028      	strgt	r0, [r5, #0]
 80140ac:	fb92 f0f1 	sdiv	r0, r2, r1
 80140b0:	fb01 2210 	mls	r2, r1, r0, r2
 80140b4:	4493      	add	fp, r2
 80140b6:	9b00      	ldr	r3, [sp, #0]
 80140b8:	455b      	cmp	r3, fp
 80140ba:	db40      	blt.n	801413e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 80140bc:	4658      	mov	r0, fp
 80140be:	f7ff fe9d 	bl	8013dfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80140c2:	a903      	add	r1, sp, #12
 80140c4:	9003      	str	r0, [sp, #12]
 80140c6:	4650      	mov	r0, sl
 80140c8:	f7ff fe6c 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80140cc:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80140d0:	4410      	add	r0, r2
 80140d2:	f8d9 2000 	ldr.w	r2, [r9]
 80140d6:	1b01      	subs	r1, r0, r4
 80140d8:	428a      	cmp	r2, r1
 80140da:	bfc8      	it	gt
 80140dc:	f8c9 1000 	strgt.w	r1, [r9]
 80140e0:	683a      	ldr	r2, [r7, #0]
 80140e2:	4291      	cmp	r1, r2
 80140e4:	bfc8      	it	gt
 80140e6:	6039      	strgt	r1, [r7, #0]
 80140e8:	f8d9 2000 	ldr.w	r2, [r9]
 80140ec:	4420      	add	r0, r4
 80140ee:	4282      	cmp	r2, r0
 80140f0:	bfc8      	it	gt
 80140f2:	f8c9 0000 	strgt.w	r0, [r9]
 80140f6:	683a      	ldr	r2, [r7, #0]
 80140f8:	4290      	cmp	r0, r2
 80140fa:	bfc8      	it	gt
 80140fc:	6038      	strgt	r0, [r7, #0]
 80140fe:	4658      	mov	r0, fp
 8014100:	f7ff fe9b 	bl	8013e3a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014104:	a903      	add	r1, sp, #12
 8014106:	9003      	str	r0, [sp, #12]
 8014108:	4650      	mov	r0, sl
 801410a:	f7ff fe4b 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801410e:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8014112:	1a10      	subs	r0, r2, r0
 8014114:	6832      	ldr	r2, [r6, #0]
 8014116:	1b01      	subs	r1, r0, r4
 8014118:	428a      	cmp	r2, r1
 801411a:	bfc8      	it	gt
 801411c:	6031      	strgt	r1, [r6, #0]
 801411e:	682a      	ldr	r2, [r5, #0]
 8014120:	4291      	cmp	r1, r2
 8014122:	bfc8      	it	gt
 8014124:	6029      	strgt	r1, [r5, #0]
 8014126:	6832      	ldr	r2, [r6, #0]
 8014128:	4420      	add	r0, r4
 801412a:	4282      	cmp	r2, r0
 801412c:	bfc8      	it	gt
 801412e:	6030      	strgt	r0, [r6, #0]
 8014130:	682a      	ldr	r2, [r5, #0]
 8014132:	4290      	cmp	r0, r2
 8014134:	bfc8      	it	gt
 8014136:	6028      	strgt	r0, [r5, #0]
 8014138:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 801413c:	e7bb      	b.n	80140b6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 801413e:	9b00      	ldr	r3, [sp, #0]
 8014140:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8014144:	455b      	cmp	r3, fp
 8014146:	f77f af62 	ble.w	801400e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 801414a:	4618      	mov	r0, r3
 801414c:	f7ff fe56 	bl	8013dfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014150:	a903      	add	r1, sp, #12
 8014152:	9003      	str	r0, [sp, #12]
 8014154:	4650      	mov	r0, sl
 8014156:	f7ff fe25 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801415a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 801415e:	4410      	add	r0, r2
 8014160:	f8d9 2000 	ldr.w	r2, [r9]
 8014164:	1b01      	subs	r1, r0, r4
 8014166:	428a      	cmp	r2, r1
 8014168:	bfc8      	it	gt
 801416a:	f8c9 1000 	strgt.w	r1, [r9]
 801416e:	683a      	ldr	r2, [r7, #0]
 8014170:	4291      	cmp	r1, r2
 8014172:	bfc8      	it	gt
 8014174:	6039      	strgt	r1, [r7, #0]
 8014176:	f8d9 2000 	ldr.w	r2, [r9]
 801417a:	4420      	add	r0, r4
 801417c:	4282      	cmp	r2, r0
 801417e:	bfc8      	it	gt
 8014180:	f8c9 0000 	strgt.w	r0, [r9]
 8014184:	683b      	ldr	r3, [r7, #0]
 8014186:	4298      	cmp	r0, r3
 8014188:	bfc8      	it	gt
 801418a:	6038      	strgt	r0, [r7, #0]
 801418c:	9800      	ldr	r0, [sp, #0]
 801418e:	f7ff fe54 	bl	8013e3a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014192:	a903      	add	r1, sp, #12
 8014194:	9003      	str	r0, [sp, #12]
 8014196:	4650      	mov	r0, sl
 8014198:	f7ff fe04 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801419c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80141a0:	6832      	ldr	r2, [r6, #0]
 80141a2:	1a18      	subs	r0, r3, r0
 80141a4:	1b03      	subs	r3, r0, r4
 80141a6:	429a      	cmp	r2, r3
 80141a8:	bfc8      	it	gt
 80141aa:	6033      	strgt	r3, [r6, #0]
 80141ac:	682a      	ldr	r2, [r5, #0]
 80141ae:	4293      	cmp	r3, r2
 80141b0:	bfc8      	it	gt
 80141b2:	602b      	strgt	r3, [r5, #0]
 80141b4:	6833      	ldr	r3, [r6, #0]
 80141b6:	4404      	add	r4, r0
 80141b8:	42a3      	cmp	r3, r4
 80141ba:	bfc8      	it	gt
 80141bc:	6034      	strgt	r4, [r6, #0]
 80141be:	682b      	ldr	r3, [r5, #0]
 80141c0:	429c      	cmp	r4, r3
 80141c2:	bfc8      	it	gt
 80141c4:	602c      	strgt	r4, [r5, #0]
 80141c6:	e722      	b.n	801400e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

080141c8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 80141c8:	b530      	push	{r4, r5, lr}
 80141ca:	4604      	mov	r4, r0
 80141cc:	4608      	mov	r0, r1
 80141ce:	4611      	mov	r1, r2
 80141d0:	461a      	mov	r2, r3
 80141d2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80141d6:	b089      	sub	sp, #36	; 0x24
 80141d8:	015b      	lsls	r3, r3, #5
 80141da:	9304      	str	r3, [sp, #16]
 80141dc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80141e0:	2500      	movs	r5, #0
 80141e2:	015b      	lsls	r3, r3, #5
 80141e4:	e9cd 3506 	strd	r3, r5, [sp, #24]
 80141e8:	ab07      	add	r3, sp, #28
 80141ea:	9302      	str	r3, [sp, #8]
 80141ec:	ab06      	add	r3, sp, #24
 80141ee:	9301      	str	r3, [sp, #4]
 80141f0:	ab05      	add	r3, sp, #20
 80141f2:	9300      	str	r3, [sp, #0]
 80141f4:	ab04      	add	r3, sp, #16
 80141f6:	9505      	str	r5, [sp, #20]
 80141f8:	f7ff fe3e 	bl	8013e78 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 80141fc:	2520      	movs	r5, #32
 80141fe:	9a04      	ldr	r2, [sp, #16]
 8014200:	9805      	ldr	r0, [sp, #20]
 8014202:	fb92 f2f5 	sdiv	r2, r2, r5
 8014206:	fb90 f0f5 	sdiv	r0, r0, r5
 801420a:	b292      	uxth	r2, r2
 801420c:	3002      	adds	r0, #2
 801420e:	1a80      	subs	r0, r0, r2
 8014210:	9b06      	ldr	r3, [sp, #24]
 8014212:	9907      	ldr	r1, [sp, #28]
 8014214:	fb93 f3f5 	sdiv	r3, r3, r5
 8014218:	fb91 f1f5 	sdiv	r1, r1, r5
 801421c:	b29b      	uxth	r3, r3
 801421e:	3102      	adds	r1, #2
 8014220:	1ac9      	subs	r1, r1, r3
 8014222:	3a01      	subs	r2, #1
 8014224:	3b01      	subs	r3, #1
 8014226:	80a0      	strh	r0, [r4, #4]
 8014228:	4620      	mov	r0, r4
 801422a:	8022      	strh	r2, [r4, #0]
 801422c:	8063      	strh	r3, [r4, #2]
 801422e:	80e1      	strh	r1, [r4, #6]
 8014230:	b009      	add	sp, #36	; 0x24
 8014232:	bd30      	pop	{r4, r5, pc}

08014234 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8014234:	b510      	push	{r4, lr}
 8014236:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 801423a:	4604      	mov	r4, r0
 801423c:	f7ff ffc4 	bl	80141c8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8014240:	4620      	mov	r0, r4
 8014242:	bd10      	pop	{r4, pc}

08014244 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8014244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014246:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 801424a:	4606      	mov	r6, r0
 801424c:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8014250:	6813      	ldr	r3, [r2, #0]
 8014252:	42a5      	cmp	r5, r4
 8014254:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8014258:	da2b      	bge.n	80142b2 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 801425a:	42a3      	cmp	r3, r4
 801425c:	dd14      	ble.n	8014288 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 801425e:	b168      	cbz	r0, 801427c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8014260:	4267      	negs	r7, r4
 8014262:	fb97 f2f0 	sdiv	r2, r7, r0
 8014266:	fb00 7212 	mls	r2, r0, r2, r7
 801426a:	1a82      	subs	r2, r0, r2
 801426c:	fb92 f7f0 	sdiv	r7, r2, r0
 8014270:	fb00 2017 	mls	r0, r0, r7, r2
 8014274:	1a24      	subs	r4, r4, r0
 8014276:	42ac      	cmp	r4, r5
 8014278:	bfb8      	it	lt
 801427a:	462c      	movlt	r4, r5
 801427c:	4630      	mov	r0, r6
 801427e:	4622      	mov	r2, r4
 8014280:	f7ff ffa2 	bl	80141c8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8014284:	4630      	mov	r0, r6
 8014286:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014288:	42ab      	cmp	r3, r5
 801428a:	dd0e      	ble.n	80142aa <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 801428c:	b168      	cbz	r0, 80142aa <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 801428e:	425f      	negs	r7, r3
 8014290:	fb97 f2f0 	sdiv	r2, r7, r0
 8014294:	fb00 7212 	mls	r2, r0, r2, r7
 8014298:	1a82      	subs	r2, r0, r2
 801429a:	fb92 f7f0 	sdiv	r7, r2, r0
 801429e:	fb00 2017 	mls	r0, r0, r7, r2
 80142a2:	1a1b      	subs	r3, r3, r0
 80142a4:	42ab      	cmp	r3, r5
 80142a6:	bfb8      	it	lt
 80142a8:	462b      	movlt	r3, r5
 80142aa:	4622      	mov	r2, r4
 80142ac:	461c      	mov	r4, r3
 80142ae:	4613      	mov	r3, r2
 80142b0:	e7e4      	b.n	801427c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80142b2:	42a3      	cmp	r3, r4
 80142b4:	da10      	bge.n	80142d8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 80142b6:	b148      	cbz	r0, 80142cc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 80142b8:	fb94 f2f0 	sdiv	r2, r4, r0
 80142bc:	fb00 4212 	mls	r2, r0, r2, r4
 80142c0:	1a82      	subs	r2, r0, r2
 80142c2:	fb92 f7f0 	sdiv	r7, r2, r0
 80142c6:	fb00 2017 	mls	r0, r0, r7, r2
 80142ca:	4404      	add	r4, r0
 80142cc:	42a5      	cmp	r5, r4
 80142ce:	bfa8      	it	ge
 80142d0:	4625      	movge	r5, r4
 80142d2:	461c      	mov	r4, r3
 80142d4:	462b      	mov	r3, r5
 80142d6:	e7d1      	b.n	801427c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80142d8:	42ab      	cmp	r3, r5
 80142da:	dacf      	bge.n	801427c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80142dc:	2800      	cmp	r0, #0
 80142de:	d0cd      	beq.n	801427c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80142e0:	fb93 f2f0 	sdiv	r2, r3, r0
 80142e4:	fb00 3212 	mls	r2, r0, r2, r3
 80142e8:	1a82      	subs	r2, r0, r2
 80142ea:	fb92 f7f0 	sdiv	r7, r2, r0
 80142ee:	fb00 2017 	mls	r0, r0, r7, r2
 80142f2:	4403      	add	r3, r0
 80142f4:	42ab      	cmp	r3, r5
 80142f6:	bfa8      	it	ge
 80142f8:	462b      	movge	r3, r5
 80142fa:	e7bf      	b.n	801427c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

080142fc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 80142fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014300:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8014304:	42ae      	cmp	r6, r5
 8014306:	bfa2      	ittt	ge
 8014308:	4633      	movge	r3, r6
 801430a:	462e      	movge	r6, r5
 801430c:	461d      	movge	r5, r3
 801430e:	1bab      	subs	r3, r5, r6
 8014310:	468b      	mov	fp, r1
 8014312:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8014314:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8014318:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 801431c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8014320:	f04f 0220 	mov.w	r2, #32
 8014324:	b0ab      	sub	sp, #172	; 0xac
 8014326:	4604      	mov	r4, r0
 8014328:	bfa4      	itt	ge
 801432a:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 801432e:	2600      	movge	r6, #0
 8014330:	fb99 f9f2 	sdiv	r9, r9, r2
 8014334:	fb9a faf2 	sdiv	sl, sl, r2
 8014338:	6b43      	ldr	r3, [r0, #52]	; 0x34
 801433a:	2900      	cmp	r1, #0
 801433c:	f000 80f5 	beq.w	801452a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8014340:	f9bb 0000 	ldrsh.w	r0, [fp]
 8014344:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8014348:	eba9 0700 	sub.w	r7, r9, r0
 801434c:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8014350:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8014354:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8014358:	ebaa 0802 	sub.w	r8, sl, r2
 801435c:	4407      	add	r7, r0
 801435e:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8014362:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8014366:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 801436a:	b23f      	sxth	r7, r7
 801436c:	4490      	add	r8, r2
 801436e:	eba9 0707 	sub.w	r7, r9, r7
 8014372:	fa0f f888 	sxth.w	r8, r8
 8014376:	ebaa 0808 	sub.w	r8, sl, r8
 801437a:	2f00      	cmp	r7, #0
 801437c:	bfb8      	it	lt
 801437e:	427f      	neglt	r7, r7
 8014380:	f1b8 0f00 	cmp.w	r8, #0
 8014384:	bfb8      	it	lt
 8014386:	f1c8 0800 	rsblt	r8, r8, #0
 801438a:	45bc      	cmp	ip, r7
 801438c:	bfcc      	ite	gt
 801438e:	f10c 0701 	addgt.w	r7, ip, #1
 8014392:	3701      	addle	r7, #1
 8014394:	4540      	cmp	r0, r8
 8014396:	bfc8      	it	gt
 8014398:	f100 0801 	addgt.w	r8, r0, #1
 801439c:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 80143a0:	f100 0001 	add.w	r0, r0, #1
 80143a4:	ea4f 0060 	mov.w	r0, r0, asr #1
 80143a8:	f04f 0202 	mov.w	r2, #2
 80143ac:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80143b0:	fb91 f1f2 	sdiv	r1, r1, r2
 80143b4:	eba3 0301 	sub.w	r3, r3, r1
 80143b8:	bfd8      	it	le
 80143ba:	f108 0801 	addle.w	r8, r8, #1
 80143be:	9201      	str	r2, [sp, #4]
 80143c0:	930d      	str	r3, [sp, #52]	; 0x34
 80143c2:	f7ff fcfb 	bl	8013dbc <_ZN8touchgfx7CWRUtil4sineEi>
 80143c6:	a92a      	add	r1, sp, #168	; 0xa8
 80143c8:	fb08 f808 	mul.w	r8, r8, r8
 80143cc:	f841 0d70 	str.w	r0, [r1, #-112]!
 80143d0:	a80d      	add	r0, sp, #52	; 0x34
 80143d2:	f7ff fce7 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80143d6:	fb07 8707 	mla	r7, r7, r7, r8
 80143da:	f04f 0c20 	mov.w	ip, #32
 80143de:	fb90 f0fc 	sdiv	r0, r0, ip
 80143e2:	4340      	muls	r0, r0
 80143e4:	4287      	cmp	r7, r0
 80143e6:	9a01      	ldr	r2, [sp, #4]
 80143e8:	da04      	bge.n	80143f4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 80143ea:	2401      	movs	r4, #1
 80143ec:	4620      	mov	r0, r4
 80143ee:	b02b      	add	sp, #172	; 0xac
 80143f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80143f4:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80143f6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80143f8:	fb91 f3f2 	sdiv	r3, r1, r2
 80143fc:	4403      	add	r3, r0
 80143fe:	fb93 f3fc 	sdiv	r3, r3, ip
 8014402:	f9bb 1000 	ldrsh.w	r1, [fp]
 8014406:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 801440a:	440a      	add	r2, r1
 801440c:	b212      	sxth	r2, r2
 801440e:	454a      	cmp	r2, r9
 8014410:	bfa8      	it	ge
 8014412:	464a      	movge	r2, r9
 8014414:	428a      	cmp	r2, r1
 8014416:	bfac      	ite	ge
 8014418:	eba9 0902 	subge.w	r9, r9, r2
 801441c:	eba9 0901 	sublt.w	r9, r9, r1
 8014420:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8014424:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014428:	440a      	add	r2, r1
 801442a:	b212      	sxth	r2, r2
 801442c:	4552      	cmp	r2, sl
 801442e:	bfa8      	it	ge
 8014430:	4652      	movge	r2, sl
 8014432:	428a      	cmp	r2, r1
 8014434:	bfac      	ite	ge
 8014436:	ebaa 0a02 	subge.w	sl, sl, r2
 801443a:	ebaa 0a01 	sublt.w	sl, sl, r1
 801443e:	3301      	adds	r3, #1
 8014440:	fb0a fa0a 	mul.w	sl, sl, sl
 8014444:	fb09 a909 	mla	r9, r9, r9, sl
 8014448:	435b      	muls	r3, r3
 801444a:	4599      	cmp	r9, r3
 801444c:	dccd      	bgt.n	80143ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 801444e:	465a      	mov	r2, fp
 8014450:	4621      	mov	r1, r4
 8014452:	a80e      	add	r0, sp, #56	; 0x38
 8014454:	f015 fc9a 	bl	8029d8c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8014458:	6b62      	ldr	r2, [r4, #52]	; 0x34
 801445a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801445c:	9209      	str	r2, [sp, #36]	; 0x24
 801445e:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8014462:	930a      	str	r3, [sp, #40]	; 0x28
 8014464:	dd07      	ble.n	8014476 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8014466:	2102      	movs	r1, #2
 8014468:	fb93 f3f1 	sdiv	r3, r3, r1
 801446c:	4413      	add	r3, r2
 801446e:	930a      	str	r3, [sp, #40]	; 0x28
 8014470:	fb93 f3f1 	sdiv	r3, r3, r1
 8014474:	9309      	str	r3, [sp, #36]	; 0x24
 8014476:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801447a:	4630      	mov	r0, r6
 801447c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8014480:	930b      	str	r3, [sp, #44]	; 0x2c
 8014482:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8014486:	f7ff fcb9 	bl	8013dfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 801448a:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 801448e:	f04f 0a02 	mov.w	sl, #2
 8014492:	f849 0d74 	str.w	r0, [r9, #-116]!
 8014496:	a80b      	add	r0, sp, #44	; 0x2c
 8014498:	4649      	mov	r1, r9
 801449a:	f7ff fc83 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801449e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80144a0:	fb90 f0fa 	sdiv	r0, r0, sl
 80144a4:	eb00 0b03 	add.w	fp, r0, r3
 80144a8:	4630      	mov	r0, r6
 80144aa:	f7ff fcc6 	bl	8013e3a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80144ae:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 80144b2:	017f      	lsls	r7, r7, #5
 80144b4:	f848 0d78 	str.w	r0, [r8, #-120]!
 80144b8:	a80b      	add	r0, sp, #44	; 0x2c
 80144ba:	4641      	mov	r1, r8
 80144bc:	f7ff fc72 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80144c0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80144c2:	fb90 f0fa 	sdiv	r0, r0, sl
 80144c6:	4659      	mov	r1, fp
 80144c8:	1a12      	subs	r2, r2, r0
 80144ca:	a80e      	add	r0, sp, #56	; 0x38
 80144cc:	f015 fdde 	bl	802a08c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80144d0:	f106 0a20 	add.w	sl, r6, #32
 80144d4:	bb67      	cbnz	r7, 8014530 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 80144d6:	46b3      	mov	fp, r6
 80144d8:	45aa      	cmp	sl, r5
 80144da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80144dc:	dc33      	bgt.n	8014546 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 80144de:	9909      	ldr	r1, [sp, #36]	; 0x24
 80144e0:	4650      	mov	r0, sl
 80144e2:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 80144e6:	920b      	str	r2, [sp, #44]	; 0x2c
 80144e8:	f7ff fc88 	bl	8013dfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80144ec:	4641      	mov	r1, r8
 80144ee:	900c      	str	r0, [sp, #48]	; 0x30
 80144f0:	a80b      	add	r0, sp, #44	; 0x2c
 80144f2:	f7ff fc57 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80144f6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80144f8:	2302      	movs	r3, #2
 80144fa:	fb90 f0f3 	sdiv	r0, r0, r3
 80144fe:	eb00 0b02 	add.w	fp, r0, r2
 8014502:	4650      	mov	r0, sl
 8014504:	f7ff fc99 	bl	8013e3a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014508:	4649      	mov	r1, r9
 801450a:	900d      	str	r0, [sp, #52]	; 0x34
 801450c:	a80b      	add	r0, sp, #44	; 0x2c
 801450e:	f7ff fc49 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014512:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014514:	2302      	movs	r3, #2
 8014516:	4659      	mov	r1, fp
 8014518:	fb90 f0f3 	sdiv	r0, r0, r3
 801451c:	1a12      	subs	r2, r2, r0
 801451e:	a80e      	add	r0, sp, #56	; 0x38
 8014520:	46d3      	mov	fp, sl
 8014522:	f015 fe00 	bl	802a126 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014526:	44ba      	add	sl, r7
 8014528:	e7d6      	b.n	80144d8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 801452a:	fb93 f3f2 	sdiv	r3, r3, r2
 801452e:	e768      	b.n	8014402 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8014530:	fb9a f2f7 	sdiv	r2, sl, r7
 8014534:	fb07 a212 	mls	r2, r7, r2, sl
 8014538:	1aba      	subs	r2, r7, r2
 801453a:	fb92 f1f7 	sdiv	r1, r2, r7
 801453e:	fb07 2211 	mls	r2, r7, r1, r2
 8014542:	4492      	add	sl, r2
 8014544:	e7c7      	b.n	80144d6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8014546:	45ab      	cmp	fp, r5
 8014548:	da23      	bge.n	8014592 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 801454a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801454c:	4628      	mov	r0, r5
 801454e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8014552:	920b      	str	r2, [sp, #44]	; 0x2c
 8014554:	f7ff fc52 	bl	8013dfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014558:	4641      	mov	r1, r8
 801455a:	900c      	str	r0, [sp, #48]	; 0x30
 801455c:	a80b      	add	r0, sp, #44	; 0x2c
 801455e:	f7ff fc21 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014562:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014564:	f04f 0a02 	mov.w	sl, #2
 8014568:	fb90 f0fa 	sdiv	r0, r0, sl
 801456c:	4403      	add	r3, r0
 801456e:	4628      	mov	r0, r5
 8014570:	9301      	str	r3, [sp, #4]
 8014572:	f7ff fc62 	bl	8013e3a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014576:	4649      	mov	r1, r9
 8014578:	900d      	str	r0, [sp, #52]	; 0x34
 801457a:	a80b      	add	r0, sp, #44	; 0x2c
 801457c:	f7ff fc12 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014580:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014582:	9b01      	ldr	r3, [sp, #4]
 8014584:	fb90 f0fa 	sdiv	r0, r0, sl
 8014588:	4619      	mov	r1, r3
 801458a:	1a12      	subs	r2, r2, r0
 801458c:	a80e      	add	r0, sp, #56	; 0x38
 801458e:	f015 fdca 	bl	802a126 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014592:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014594:	b99b      	cbnz	r3, 80145be <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8014596:	1bad      	subs	r5, r5, r6
 8014598:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 801459c:	da04      	bge.n	80145a8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 801459e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 80145a2:	a80e      	add	r0, sp, #56	; 0x38
 80145a4:	f015 fdbf 	bl	802a126 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80145a8:	21ff      	movs	r1, #255	; 0xff
 80145aa:	a80e      	add	r0, sp, #56	; 0x38
 80145ac:	f015 fcaa 	bl	8029f04 <_ZN8touchgfx6Canvas6renderEh>
 80145b0:	4604      	mov	r4, r0
 80145b2:	4b8a      	ldr	r3, [pc, #552]	; (80147dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 80145b4:	930e      	str	r3, [sp, #56]	; 0x38
 80145b6:	a816      	add	r0, sp, #88	; 0x58
 80145b8:	f002 f84e 	bl	8016658 <_ZN8touchgfx7OutlineD1Ev>
 80145bc:	e716      	b.n	80143ec <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 80145be:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 80145c2:	429a      	cmp	r2, r3
 80145c4:	f0c0 8107 	bcc.w	80147d6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 80145c8:	1bab      	subs	r3, r5, r6
 80145ca:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 80145ce:	9301      	str	r3, [sp, #4]
 80145d0:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80145d4:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 80145d8:	da43      	bge.n	8014662 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 80145da:	4628      	mov	r0, r5
 80145dc:	f7ff fc0e 	bl	8013dfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80145e0:	4649      	mov	r1, r9
 80145e2:	900d      	str	r0, [sp, #52]	; 0x34
 80145e4:	a809      	add	r0, sp, #36	; 0x24
 80145e6:	f7ff fbdd 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80145ea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80145ec:	18c3      	adds	r3, r0, r3
 80145ee:	4628      	mov	r0, r5
 80145f0:	9303      	str	r3, [sp, #12]
 80145f2:	f7ff fc22 	bl	8013e3a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80145f6:	4649      	mov	r1, r9
 80145f8:	900d      	str	r0, [sp, #52]	; 0x34
 80145fa:	a809      	add	r0, sp, #36	; 0x24
 80145fc:	f7ff fbd2 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014600:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014602:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8014606:	1a1b      	subs	r3, r3, r0
 8014608:	9302      	str	r3, [sp, #8]
 801460a:	9204      	str	r2, [sp, #16]
 801460c:	eb0a 0305 	add.w	r3, sl, r5
 8014610:	9a04      	ldr	r2, [sp, #16]
 8014612:	4293      	cmp	r3, r2
 8014614:	da25      	bge.n	8014662 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8014616:	4618      	mov	r0, r3
 8014618:	9306      	str	r3, [sp, #24]
 801461a:	f7ff fbef 	bl	8013dfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 801461e:	4649      	mov	r1, r9
 8014620:	900d      	str	r0, [sp, #52]	; 0x34
 8014622:	a80a      	add	r0, sp, #40	; 0x28
 8014624:	f7ff fbbe 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014628:	9b03      	ldr	r3, [sp, #12]
 801462a:	2202      	movs	r2, #2
 801462c:	fb90 f0f2 	sdiv	r0, r0, r2
 8014630:	18c3      	adds	r3, r0, r3
 8014632:	9305      	str	r3, [sp, #20]
 8014634:	9b06      	ldr	r3, [sp, #24]
 8014636:	9207      	str	r2, [sp, #28]
 8014638:	4618      	mov	r0, r3
 801463a:	f7ff fbfe 	bl	8013e3a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801463e:	a92a      	add	r1, sp, #168	; 0xa8
 8014640:	f841 0d78 	str.w	r0, [r1, #-120]!
 8014644:	a80a      	add	r0, sp, #40	; 0x28
 8014646:	f7ff fbad 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801464a:	9b02      	ldr	r3, [sp, #8]
 801464c:	9a07      	ldr	r2, [sp, #28]
 801464e:	9905      	ldr	r1, [sp, #20]
 8014650:	fb90 f2f2 	sdiv	r2, r0, r2
 8014654:	a80e      	add	r0, sp, #56	; 0x38
 8014656:	1a9a      	subs	r2, r3, r2
 8014658:	f015 fd65 	bl	802a126 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801465c:	9b06      	ldr	r3, [sp, #24]
 801465e:	4453      	add	r3, sl
 8014660:	e7d6      	b.n	8014610 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8014662:	45ab      	cmp	fp, r5
 8014664:	da25      	bge.n	80146b2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8014666:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801466a:	4628      	mov	r0, r5
 801466c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8014670:	930b      	str	r3, [sp, #44]	; 0x2c
 8014672:	f7ff fbc3 	bl	8013dfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014676:	4641      	mov	r1, r8
 8014678:	900c      	str	r0, [sp, #48]	; 0x30
 801467a:	a80b      	add	r0, sp, #44	; 0x2c
 801467c:	f7ff fb92 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014680:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014682:	2202      	movs	r2, #2
 8014684:	fb90 f0f2 	sdiv	r0, r0, r2
 8014688:	eb00 0903 	add.w	r9, r0, r3
 801468c:	4628      	mov	r0, r5
 801468e:	9202      	str	r2, [sp, #8]
 8014690:	f7ff fbd3 	bl	8013e3a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014694:	a92a      	add	r1, sp, #168	; 0xa8
 8014696:	f841 0d74 	str.w	r0, [r1, #-116]!
 801469a:	a80b      	add	r0, sp, #44	; 0x2c
 801469c:	f7ff fb82 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80146a0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80146a2:	9a02      	ldr	r2, [sp, #8]
 80146a4:	fb90 f2f2 	sdiv	r2, r0, r2
 80146a8:	4649      	mov	r1, r9
 80146aa:	1a9a      	subs	r2, r3, r2
 80146ac:	a80e      	add	r0, sp, #56	; 0x38
 80146ae:	f015 fd3a 	bl	802a126 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80146b2:	46d9      	mov	r9, fp
 80146b4:	2502      	movs	r5, #2
 80146b6:	45b1      	cmp	r9, r6
 80146b8:	db25      	blt.n	8014706 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 80146ba:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80146be:	4648      	mov	r0, r9
 80146c0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80146c4:	930b      	str	r3, [sp, #44]	; 0x2c
 80146c6:	f7ff fb99 	bl	8013dfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80146ca:	4641      	mov	r1, r8
 80146cc:	900c      	str	r0, [sp, #48]	; 0x30
 80146ce:	a80b      	add	r0, sp, #44	; 0x2c
 80146d0:	f7ff fb68 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80146d4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80146d6:	fb90 f0f5 	sdiv	r0, r0, r5
 80146da:	eb00 0b03 	add.w	fp, r0, r3
 80146de:	4648      	mov	r0, r9
 80146e0:	f7ff fbab 	bl	8013e3a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80146e4:	a90d      	add	r1, sp, #52	; 0x34
 80146e6:	900d      	str	r0, [sp, #52]	; 0x34
 80146e8:	a80b      	add	r0, sp, #44	; 0x2c
 80146ea:	f7ff fb5b 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80146ee:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80146f0:	fb90 f0f5 	sdiv	r0, r0, r5
 80146f4:	4659      	mov	r1, fp
 80146f6:	1a12      	subs	r2, r2, r0
 80146f8:	a80e      	add	r0, sp, #56	; 0x38
 80146fa:	46cb      	mov	fp, r9
 80146fc:	f015 fd13 	bl	802a126 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014700:	eba9 0907 	sub.w	r9, r9, r7
 8014704:	e7d7      	b.n	80146b6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8014706:	455e      	cmp	r6, fp
 8014708:	da22      	bge.n	8014750 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 801470a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801470e:	4630      	mov	r0, r6
 8014710:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8014714:	930b      	str	r3, [sp, #44]	; 0x2c
 8014716:	f7ff fb71 	bl	8013dfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 801471a:	4641      	mov	r1, r8
 801471c:	900c      	str	r0, [sp, #48]	; 0x30
 801471e:	a80b      	add	r0, sp, #44	; 0x2c
 8014720:	f7ff fb40 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014724:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8014726:	2502      	movs	r5, #2
 8014728:	fb90 f0f5 	sdiv	r0, r0, r5
 801472c:	4407      	add	r7, r0
 801472e:	4630      	mov	r0, r6
 8014730:	f7ff fb83 	bl	8013e3a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014734:	a92a      	add	r1, sp, #168	; 0xa8
 8014736:	f841 0d74 	str.w	r0, [r1, #-116]!
 801473a:	a80b      	add	r0, sp, #44	; 0x2c
 801473c:	f7ff fb32 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014740:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014742:	fb90 f0f5 	sdiv	r0, r0, r5
 8014746:	4639      	mov	r1, r7
 8014748:	1a12      	subs	r2, r2, r0
 801474a:	a80e      	add	r0, sp, #56	; 0x38
 801474c:	f015 fceb 	bl	802a126 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014750:	9b01      	ldr	r3, [sp, #4]
 8014752:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8014756:	f6bf af27 	bge.w	80145a8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 801475a:	4630      	mov	r0, r6
 801475c:	f7ff fb4e 	bl	8013dfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014760:	ad2a      	add	r5, sp, #168	; 0xa8
 8014762:	f04f 0b02 	mov.w	fp, #2
 8014766:	f845 0d74 	str.w	r0, [r5, #-116]!
 801476a:	a809      	add	r0, sp, #36	; 0x24
 801476c:	4629      	mov	r1, r5
 801476e:	f7ff fb19 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014772:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014774:	eb00 0903 	add.w	r9, r0, r3
 8014778:	4630      	mov	r0, r6
 801477a:	f7ff fb5e 	bl	8013e3a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801477e:	4629      	mov	r1, r5
 8014780:	900d      	str	r0, [sp, #52]	; 0x34
 8014782:	a809      	add	r0, sp, #36	; 0x24
 8014784:	f7ff fb0e 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014788:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801478a:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 801478e:	eba3 0800 	sub.w	r8, r3, r0
 8014792:	4454      	add	r4, sl
 8014794:	42a6      	cmp	r6, r4
 8014796:	f77f af07 	ble.w	80145a8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 801479a:	4620      	mov	r0, r4
 801479c:	f7ff fb2e 	bl	8013dfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80147a0:	4629      	mov	r1, r5
 80147a2:	900d      	str	r0, [sp, #52]	; 0x34
 80147a4:	a80a      	add	r0, sp, #40	; 0x28
 80147a6:	f7ff fafd 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80147aa:	fb90 f0fb 	sdiv	r0, r0, fp
 80147ae:	eb00 0709 	add.w	r7, r0, r9
 80147b2:	4620      	mov	r0, r4
 80147b4:	f7ff fb41 	bl	8013e3a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80147b8:	a90c      	add	r1, sp, #48	; 0x30
 80147ba:	900c      	str	r0, [sp, #48]	; 0x30
 80147bc:	a80a      	add	r0, sp, #40	; 0x28
 80147be:	f7ff faf1 	bl	8013da4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80147c2:	4639      	mov	r1, r7
 80147c4:	fb90 f2fb 	sdiv	r2, r0, fp
 80147c8:	a80e      	add	r0, sp, #56	; 0x38
 80147ca:	eba8 0202 	sub.w	r2, r8, r2
 80147ce:	f015 fcaa 	bl	802a126 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80147d2:	4454      	add	r4, sl
 80147d4:	e7de      	b.n	8014794 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 80147d6:	2400      	movs	r4, #0
 80147d8:	e6eb      	b.n	80145b2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 80147da:	bf00      	nop
 80147dc:	0802fc6c 	.word	0x0802fc6c

080147e0 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
 80147e0:	b510      	push	{r4, lr}
 80147e2:	2200      	movs	r2, #0
 80147e4:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80147e8:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80147ec:	8002      	strh	r2, [r0, #0]
 80147ee:	8042      	strh	r2, [r0, #2]
 80147f0:	8084      	strh	r4, [r0, #4]
 80147f2:	80c1      	strh	r1, [r0, #6]
 80147f4:	bd10      	pop	{r4, pc}
	...

080147f8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 80147f8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80147fa:	6803      	ldr	r3, [r0, #0]
 80147fc:	460d      	mov	r5, r1
 80147fe:	4604      	mov	r4, r0
 8014800:	4601      	mov	r1, r0
 8014802:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014804:	a802      	add	r0, sp, #8
 8014806:	4798      	blx	r3
 8014808:	6828      	ldr	r0, [r5, #0]
 801480a:	6869      	ldr	r1, [r5, #4]
 801480c:	466b      	mov	r3, sp
 801480e:	c303      	stmia	r3!, {r0, r1}
 8014810:	4668      	mov	r0, sp
 8014812:	4619      	mov	r1, r3
 8014814:	f7fe faa4 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 8014818:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801481a:	b188      	cbz	r0, 8014840 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801481c:	6803      	ldr	r3, [r0, #0]
 801481e:	1d21      	adds	r1, r4, #4
 8014820:	68db      	ldr	r3, [r3, #12]
 8014822:	4798      	blx	r3
 8014824:	b160      	cbz	r0, 8014840 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014826:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801482a:	2b00      	cmp	r3, #0
 801482c:	dd08      	ble.n	8014840 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801482e:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8014832:	2d00      	cmp	r5, #0
 8014834:	dd04      	ble.n	8014840 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014836:	4a2b      	ldr	r2, [pc, #172]	; (80148e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8014838:	7812      	ldrb	r2, [r2, #0]
 801483a:	b11a      	cbz	r2, 8014844 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 801483c:	2a01      	cmp	r2, #1
 801483e:	d029      	beq.n	8014894 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8014840:	b004      	add	sp, #16
 8014842:	bd70      	pop	{r4, r5, r6, pc}
 8014844:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8014848:	441d      	add	r5, r3
 801484a:	b2ad      	uxth	r5, r5
 801484c:	b22e      	sxth	r6, r5
 801484e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8014852:	42b3      	cmp	r3, r6
 8014854:	daf4      	bge.n	8014840 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014856:	6823      	ldr	r3, [r4, #0]
 8014858:	4669      	mov	r1, sp
 801485a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801485c:	4620      	mov	r0, r4
 801485e:	4798      	blx	r3
 8014860:	b940      	cbnz	r0, 8014874 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8014862:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8014866:	2b01      	cmp	r3, #1
 8014868:	d004      	beq.n	8014874 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801486a:	3301      	adds	r3, #1
 801486c:	105b      	asrs	r3, r3, #1
 801486e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014872:	e7f0      	b.n	8014856 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8014874:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8014878:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801487c:	4413      	add	r3, r2
 801487e:	b29b      	uxth	r3, r3
 8014880:	441a      	add	r2, r3
 8014882:	b212      	sxth	r2, r2
 8014884:	4296      	cmp	r6, r2
 8014886:	f8ad 3002 	strh.w	r3, [sp, #2]
 801488a:	dae0      	bge.n	801484e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 801488c:	1aeb      	subs	r3, r5, r3
 801488e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014892:	e7dc      	b.n	801484e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8014894:	f8bd 5000 	ldrh.w	r5, [sp]
 8014898:	441d      	add	r5, r3
 801489a:	b2ad      	uxth	r5, r5
 801489c:	b22e      	sxth	r6, r5
 801489e:	f9bd 3000 	ldrsh.w	r3, [sp]
 80148a2:	42b3      	cmp	r3, r6
 80148a4:	dacc      	bge.n	8014840 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80148a6:	6823      	ldr	r3, [r4, #0]
 80148a8:	4669      	mov	r1, sp
 80148aa:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80148ac:	4620      	mov	r0, r4
 80148ae:	4798      	blx	r3
 80148b0:	b940      	cbnz	r0, 80148c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80148b2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80148b6:	2b01      	cmp	r3, #1
 80148b8:	d004      	beq.n	80148c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80148ba:	3301      	adds	r3, #1
 80148bc:	105b      	asrs	r3, r3, #1
 80148be:	f8ad 3004 	strh.w	r3, [sp, #4]
 80148c2:	e7f0      	b.n	80148a6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 80148c4:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 80148c8:	f8bd 3000 	ldrh.w	r3, [sp]
 80148cc:	4413      	add	r3, r2
 80148ce:	b29b      	uxth	r3, r3
 80148d0:	441a      	add	r2, r3
 80148d2:	b212      	sxth	r2, r2
 80148d4:	4296      	cmp	r6, r2
 80148d6:	f8ad 3000 	strh.w	r3, [sp]
 80148da:	dae0      	bge.n	801489e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80148dc:	1aeb      	subs	r3, r5, r3
 80148de:	f8ad 3004 	strh.w	r3, [sp, #4]
 80148e2:	e7dc      	b.n	801489e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80148e4:	20002320 	.word	0x20002320

080148e8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 80148e8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80148ea:	6803      	ldr	r3, [r0, #0]
 80148ec:	4604      	mov	r4, r0
 80148ee:	4601      	mov	r1, r0
 80148f0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80148f2:	4668      	mov	r0, sp
 80148f4:	4798      	blx	r3
 80148f6:	2100      	movs	r1, #0
 80148f8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80148fc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8014900:	9102      	str	r1, [sp, #8]
 8014902:	4668      	mov	r0, sp
 8014904:	a902      	add	r1, sp, #8
 8014906:	f8ad 200c 	strh.w	r2, [sp, #12]
 801490a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801490e:	f7fe fa27 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 8014912:	6823      	ldr	r3, [r4, #0]
 8014914:	4669      	mov	r1, sp
 8014916:	691b      	ldr	r3, [r3, #16]
 8014918:	4620      	mov	r0, r4
 801491a:	4798      	blx	r3
 801491c:	b004      	add	sp, #16
 801491e:	bd10      	pop	{r4, pc}

08014920 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8014920:	2101      	movs	r1, #1
 8014922:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8014926:	490b      	ldr	r1, [pc, #44]	; (8014954 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8014928:	6001      	str	r1, [r0, #0]
 801492a:	2200      	movs	r2, #0
 801492c:	21ff      	movs	r1, #255	; 0xff
 801492e:	8082      	strh	r2, [r0, #4]
 8014930:	80c2      	strh	r2, [r0, #6]
 8014932:	8102      	strh	r2, [r0, #8]
 8014934:	8142      	strh	r2, [r0, #10]
 8014936:	8182      	strh	r2, [r0, #12]
 8014938:	81c2      	strh	r2, [r0, #14]
 801493a:	8202      	strh	r2, [r0, #16]
 801493c:	8242      	strh	r2, [r0, #18]
 801493e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8014942:	61c2      	str	r2, [r0, #28]
 8014944:	8402      	strh	r2, [r0, #32]
 8014946:	8442      	strh	r2, [r0, #34]	; 0x22
 8014948:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 801494c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8014950:	6282      	str	r2, [r0, #40]	; 0x28
 8014952:	4770      	bx	lr
 8014954:	0802f100 	.word	0x0802f100

08014958 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8014958:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 801495c:	4770      	bx	lr

0801495e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 801495e:	b510      	push	{r4, lr}
 8014960:	4604      	mov	r4, r0
 8014962:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8014964:	b150      	cbz	r0, 801497c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8014966:	6803      	ldr	r3, [r0, #0]
 8014968:	68db      	ldr	r3, [r3, #12]
 801496a:	4798      	blx	r3
 801496c:	b130      	cbz	r0, 801497c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801496e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8014970:	6803      	ldr	r3, [r0, #0]
 8014972:	4621      	mov	r1, r4
 8014974:	689b      	ldr	r3, [r3, #8]
 8014976:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801497a:	4718      	bx	r3
 801497c:	bd10      	pop	{r4, pc}

0801497e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801497e:	b570      	push	{r4, r5, r6, lr}
 8014980:	790b      	ldrb	r3, [r1, #4]
 8014982:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8014986:	2b00      	cmp	r3, #0
 8014988:	bf0c      	ite	eq
 801498a:	2301      	moveq	r3, #1
 801498c:	2300      	movne	r3, #0
 801498e:	4604      	mov	r4, r0
 8014990:	460e      	mov	r6, r1
 8014992:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8014996:	d109      	bne.n	80149ac <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8014998:	b14d      	cbz	r5, 80149ae <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801499a:	7933      	ldrb	r3, [r6, #4]
 801499c:	2b01      	cmp	r3, #1
 801499e:	d10c      	bne.n	80149ba <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80149a0:	6823      	ldr	r3, [r4, #0]
 80149a2:	4620      	mov	r0, r4
 80149a4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80149a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80149aa:	4718      	bx	r3
 80149ac:	b12d      	cbz	r5, 80149ba <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80149ae:	6823      	ldr	r3, [r4, #0]
 80149b0:	4620      	mov	r0, r4
 80149b2:	695b      	ldr	r3, [r3, #20]
 80149b4:	4798      	blx	r3
 80149b6:	2d00      	cmp	r5, #0
 80149b8:	d1ef      	bne.n	801499a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 80149ba:	bd70      	pop	{r4, r5, r6, pc}

080149bc <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 80149bc:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80149c0:	4770      	bx	lr

080149c2 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 80149c2:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 80149c6:	4770      	bx	lr

080149c8 <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 80149c8:	6802      	ldr	r2, [r0, #0]
 80149ca:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80149ce:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80149d0:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80149d4:	4710      	bx	r2

080149d6 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 80149d6:	6802      	ldr	r2, [r0, #0]
 80149d8:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80149dc:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80149de:	eef0 0a40 	vmov.f32	s1, s0
 80149e2:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80149e6:	4710      	bx	r2

080149e8 <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 80149e8:	6802      	ldr	r2, [r0, #0]
 80149ea:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80149ee:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80149f0:	eeb0 1a40 	vmov.f32	s2, s0
 80149f4:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80149f8:	4710      	bx	r2

080149fa <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 80149fa:	6802      	ldr	r2, [r0, #0]
 80149fc:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8014a00:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8014a02:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8014a06:	4710      	bx	r2

08014a08 <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8014a08:	6802      	ldr	r2, [r0, #0]
 8014a0a:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8014a0e:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8014a10:	eef0 0a40 	vmov.f32	s1, s0
 8014a14:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8014a18:	4710      	bx	r2

08014a1a <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8014a1a:	6802      	ldr	r2, [r0, #0]
 8014a1c:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8014a20:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8014a22:	eeb0 1a40 	vmov.f32	s2, s0
 8014a26:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8014a2a:	4710      	bx	r2

08014a2c <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8014a2c:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8014a30:	4770      	bx	lr

08014a32 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8014a32:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8014a36:	4770      	bx	lr

08014a38 <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8014a38:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8014a3c:	4770      	bx	lr

08014a3e <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8014a3e:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8014a42:	4770      	bx	lr

08014a44 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8014a44:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8014a48:	4770      	bx	lr

08014a4a <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8014a4a:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8014a4e:	4770      	bx	lr

08014a50 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8014a50:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8014a54:	4770      	bx	lr

08014a56 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8014a56:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8014a5a:	4770      	bx	lr

08014a5c <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8014a5c:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8014a60:	4770      	bx	lr

08014a62 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8014a62:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8014a66:	4770      	bx	lr

08014a68 <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8014a68:	ee07 2a90 	vmov	s15, r2
 8014a6c:	6803      	ldr	r3, [r0, #0]
 8014a6e:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8014a72:	ee07 1a90 	vmov	s15, r1
 8014a76:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8014a7a:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8014a7e:	4718      	bx	r3

08014a80 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8014a80:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8014a84:	4770      	bx	lr

08014a86 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8014a86:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8014a8a:	4770      	bx	lr

08014a8c <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8014a8c:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8014a90:	4770      	bx	lr

08014a92 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8014a92:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8014a96:	4770      	bx	lr

08014a98 <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8014a98:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8014a9c:	4770      	bx	lr

08014a9e <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8014a9e:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8014aa2:	4770      	bx	lr

08014aa4 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8014aa4:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8014aa8:	4770      	bx	lr

08014aaa <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8014aaa:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8014aae:	4770      	bx	lr

08014ab0 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8014ab0:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8014ab4:	4770      	bx	lr

08014ab6 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8014ab6:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8014aba:	4770      	bx	lr

08014abc <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8014abc:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8014ac0:	4770      	bx	lr

08014ac2 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8014ac2:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8014ac6:	4770      	bx	lr

08014ac8 <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8014ac8:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8014acc:	4770      	bx	lr

08014ace <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8014ace:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8014ad2:	4770      	bx	lr

08014ad4 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8014ad4:	b510      	push	{r4, lr}
 8014ad6:	ed2d 8b04 	vpush	{d8-d9}
 8014ada:	6803      	ldr	r3, [r0, #0]
 8014adc:	4604      	mov	r4, r0
 8014ade:	699b      	ldr	r3, [r3, #24]
 8014ae0:	eeb0 8a40 	vmov.f32	s16, s0
 8014ae4:	eef0 8a60 	vmov.f32	s17, s1
 8014ae8:	eeb0 9a41 	vmov.f32	s18, s2
 8014aec:	4798      	blx	r3
 8014aee:	6823      	ldr	r3, [r4, #0]
 8014af0:	4620      	mov	r0, r4
 8014af2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014af4:	eeb0 1a49 	vmov.f32	s2, s18
 8014af8:	eef0 0a68 	vmov.f32	s1, s17
 8014afc:	eeb0 0a48 	vmov.f32	s0, s16
 8014b00:	4798      	blx	r3
 8014b02:	ecbd 8b04 	vpop	{d8-d9}
 8014b06:	6823      	ldr	r3, [r4, #0]
 8014b08:	4620      	mov	r0, r4
 8014b0a:	699b      	ldr	r3, [r3, #24]
 8014b0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014b10:	4718      	bx	r3

08014b12 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8014b12:	b510      	push	{r4, lr}
 8014b14:	ed2d 8b02 	vpush	{d8}
 8014b18:	6803      	ldr	r3, [r0, #0]
 8014b1a:	4604      	mov	r4, r0
 8014b1c:	699b      	ldr	r3, [r3, #24]
 8014b1e:	eeb0 8a40 	vmov.f32	s16, s0
 8014b22:	4798      	blx	r3
 8014b24:	6823      	ldr	r3, [r4, #0]
 8014b26:	4620      	mov	r0, r4
 8014b28:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8014b2c:	eeb0 0a48 	vmov.f32	s0, s16
 8014b30:	4798      	blx	r3
 8014b32:	ecbd 8b02 	vpop	{d8}
 8014b36:	6823      	ldr	r3, [r4, #0]
 8014b38:	4620      	mov	r0, r4
 8014b3a:	699b      	ldr	r3, [r3, #24]
 8014b3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014b40:	4718      	bx	r3

08014b42 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8014b42:	2200      	movs	r2, #0
 8014b44:	8002      	strh	r2, [r0, #0]
 8014b46:	8042      	strh	r2, [r0, #2]
 8014b48:	8082      	strh	r2, [r0, #4]
 8014b4a:	80c2      	strh	r2, [r0, #6]
 8014b4c:	4770      	bx	lr
	...

08014b50 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8014b50:	b538      	push	{r3, r4, r5, lr}
 8014b52:	2500      	movs	r5, #0
 8014b54:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8014b58:	2301      	movs	r3, #1
 8014b5a:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8014b5e:	4b1f      	ldr	r3, [pc, #124]	; (8014bdc <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8014b60:	8085      	strh	r5, [r0, #4]
 8014b62:	80c5      	strh	r5, [r0, #6]
 8014b64:	8105      	strh	r5, [r0, #8]
 8014b66:	8145      	strh	r5, [r0, #10]
 8014b68:	8185      	strh	r5, [r0, #12]
 8014b6a:	81c5      	strh	r5, [r0, #14]
 8014b6c:	8205      	strh	r5, [r0, #16]
 8014b6e:	8245      	strh	r5, [r0, #18]
 8014b70:	61c5      	str	r5, [r0, #28]
 8014b72:	8405      	strh	r5, [r0, #32]
 8014b74:	8445      	strh	r5, [r0, #34]	; 0x22
 8014b76:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8014b7a:	6003      	str	r3, [r0, #0]
 8014b7c:	880b      	ldrh	r3, [r1, #0]
 8014b7e:	84c3      	strh	r3, [r0, #38]	; 0x26
 8014b80:	23ff      	movs	r3, #255	; 0xff
 8014b82:	4604      	mov	r4, r0
 8014b84:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8014b88:	f001 fcf0 	bl	801656c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8014b8c:	4b14      	ldr	r3, [pc, #80]	; (8014be0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8014b8e:	6023      	str	r3, [r4, #0]
 8014b90:	2300      	movs	r3, #0
 8014b92:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8014b96:	4913      	ldr	r1, [pc, #76]	; (8014be4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8014b98:	62e3      	str	r3, [r4, #44]	; 0x2c
 8014b9a:	6323      	str	r3, [r4, #48]	; 0x30
 8014b9c:	6363      	str	r3, [r4, #52]	; 0x34
 8014b9e:	63a3      	str	r3, [r4, #56]	; 0x38
 8014ba0:	63e3      	str	r3, [r4, #60]	; 0x3c
 8014ba2:	6463      	str	r3, [r4, #68]	; 0x44
 8014ba4:	64a3      	str	r3, [r4, #72]	; 0x48
 8014ba6:	6523      	str	r3, [r4, #80]	; 0x50
 8014ba8:	6563      	str	r3, [r4, #84]	; 0x54
 8014baa:	65e3      	str	r3, [r4, #92]	; 0x5c
 8014bac:	6623      	str	r3, [r4, #96]	; 0x60
 8014bae:	66a3      	str	r3, [r4, #104]	; 0x68
 8014bb0:	66e3      	str	r3, [r4, #108]	; 0x6c
 8014bb2:	6763      	str	r3, [r4, #116]	; 0x74
 8014bb4:	67a3      	str	r3, [r4, #120]	; 0x78
 8014bb6:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8014bba:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8014bbe:	230c      	movs	r3, #12
 8014bc0:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8014bc4:	6422      	str	r2, [r4, #64]	; 0x40
 8014bc6:	64e1      	str	r1, [r4, #76]	; 0x4c
 8014bc8:	65a1      	str	r1, [r4, #88]	; 0x58
 8014bca:	6662      	str	r2, [r4, #100]	; 0x64
 8014bcc:	6722      	str	r2, [r4, #112]	; 0x70
 8014bce:	67e2      	str	r2, [r4, #124]	; 0x7c
 8014bd0:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8014bd4:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8014bd8:	4620      	mov	r0, r4
 8014bda:	bd38      	pop	{r3, r4, r5, pc}
 8014bdc:	0802f730 	.word	0x0802f730
 8014be0:	0802f1e8 	.word	0x0802f1e8
 8014be4:	447a0000 	.word	0x447a0000

08014be8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8014be8:	b570      	push	{r4, r5, r6, lr}
 8014bea:	ed2d 8b04 	vpush	{d8-d9}
 8014bee:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8014bf2:	add0      	add	r5, sp, #832	; 0x340
 8014bf4:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8014bf6:	f825 3d40 	strh.w	r3, [r5, #-64]!
 8014bfa:	4604      	mov	r4, r0
 8014bfc:	4628      	mov	r0, r5
 8014bfe:	f007 fbab 	bl	801c358 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014c02:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8014c04:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8014c08:	4606      	mov	r6, r0
 8014c0a:	4628      	mov	r0, r5
 8014c0c:	f007 fbd8 	bl	801c3c0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014c10:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014c14:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8014c18:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8014c1a:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8014c1e:	9312      	str	r3, [sp, #72]	; 0x48
 8014c20:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014c24:	1c72      	adds	r2, r6, #1
 8014c26:	3001      	adds	r0, #1
 8014c28:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8014c2c:	ee07 2a90 	vmov	s15, r2
 8014c30:	ee06 0a90 	vmov	s13, r0
 8014c34:	ee36 6a47 	vsub.f32	s12, s12, s14
 8014c38:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014c3c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8014c40:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014c44:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014c48:	9316      	str	r3, [sp, #88]	; 0x58
 8014c4a:	931a      	str	r3, [sp, #104]	; 0x68
 8014c4c:	931e      	str	r3, [sp, #120]	; 0x78
 8014c4e:	2300      	movs	r3, #0
 8014c50:	9320      	str	r3, [sp, #128]	; 0x80
 8014c52:	9321      	str	r3, [sp, #132]	; 0x84
 8014c54:	9322      	str	r3, [sp, #136]	; 0x88
 8014c56:	9324      	str	r3, [sp, #144]	; 0x90
 8014c58:	9325      	str	r3, [sp, #148]	; 0x94
 8014c5a:	9326      	str	r3, [sp, #152]	; 0x98
 8014c5c:	9328      	str	r3, [sp, #160]	; 0xa0
 8014c5e:	9329      	str	r3, [sp, #164]	; 0xa4
 8014c60:	932a      	str	r3, [sp, #168]	; 0xa8
 8014c62:	932c      	str	r3, [sp, #176]	; 0xb0
 8014c64:	932d      	str	r3, [sp, #180]	; 0xb4
 8014c66:	932e      	str	r3, [sp, #184]	; 0xb8
 8014c68:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014c6c:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8014c70:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8014c74:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8014c78:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8014c7c:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8014c80:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8014c84:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8014c88:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8014c8c:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8014c90:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8014c94:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8014c98:	a830      	add	r0, sp, #192	; 0xc0
 8014c9a:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8014c9e:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8014ca2:	f006 fbef 	bl	801b484 <_ZN8touchgfx9Matrix4x4C1Ev>
 8014ca6:	eeb1 0a49 	vneg.f32	s0, s18
 8014caa:	a830      	add	r0, sp, #192	; 0xc0
 8014cac:	f006 fcbe 	bl	801b62c <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8014cb0:	eeb1 0a68 	vneg.f32	s0, s17
 8014cb4:	f006 fcc8 	bl	801b648 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8014cb8:	eeb1 0a48 	vneg.f32	s0, s16
 8014cbc:	f006 fcd3 	bl	801b666 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8014cc0:	a840      	add	r0, sp, #256	; 0x100
 8014cc2:	f006 fbdf 	bl	801b484 <_ZN8touchgfx9Matrix4x4C1Ev>
 8014cc6:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 8014cca:	a840      	add	r0, sp, #256	; 0x100
 8014ccc:	f006 fc32 	bl	801b534 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8014cd0:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8014cd4:	f006 fc58 	bl	801b588 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8014cd8:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8014cdc:	f006 fc7d 	bl	801b5da <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8014ce0:	a850      	add	r0, sp, #320	; 0x140
 8014ce2:	f006 fbcf 	bl	801b484 <_ZN8touchgfx9Matrix4x4C1Ev>
 8014ce6:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8014cea:	a850      	add	r0, sp, #320	; 0x140
 8014cec:	f006 fcca 	bl	801b684 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8014cf0:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8014cf4:	f006 fcd2 	bl	801b69c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8014cf8:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8014cfc:	f006 fcdb 	bl	801b6b6 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8014d00:	a860      	add	r0, sp, #384	; 0x180
 8014d02:	f006 fbbf 	bl	801b484 <_ZN8touchgfx9Matrix4x4C1Ev>
 8014d06:	eeb0 0a49 	vmov.f32	s0, s18
 8014d0a:	a860      	add	r0, sp, #384	; 0x180
 8014d0c:	f006 fc8e 	bl	801b62c <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8014d10:	eeb0 0a68 	vmov.f32	s0, s17
 8014d14:	f006 fc98 	bl	801b648 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8014d18:	eeb0 0a48 	vmov.f32	s0, s16
 8014d1c:	f006 fca3 	bl	801b666 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8014d20:	aa50      	add	r2, sp, #320	; 0x140
 8014d22:	a960      	add	r1, sp, #384	; 0x180
 8014d24:	a8b0      	add	r0, sp, #704	; 0x2c0
 8014d26:	f006 fbc7 	bl	801b4b8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8014d2a:	4628      	mov	r0, r5
 8014d2c:	aa40      	add	r2, sp, #256	; 0x100
 8014d2e:	a9b0      	add	r1, sp, #704	; 0x2c0
 8014d30:	f006 fbc2 	bl	801b4b8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8014d34:	4629      	mov	r1, r5
 8014d36:	aa30      	add	r2, sp, #192	; 0xc0
 8014d38:	a870      	add	r0, sp, #448	; 0x1c0
 8014d3a:	f006 fbbd 	bl	801b4b8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8014d3e:	a880      	add	r0, sp, #512	; 0x200
 8014d40:	f006 fba0 	bl	801b484 <_ZN8touchgfx9Matrix4x4C1Ev>
 8014d44:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8014d48:	a880      	add	r0, sp, #512	; 0x200
 8014d4a:	eeb1 0a40 	vneg.f32	s0, s0
 8014d4e:	f006 fc6d 	bl	801b62c <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8014d52:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8014d56:	a880      	add	r0, sp, #512	; 0x200
 8014d58:	eeb1 0a40 	vneg.f32	s0, s0
 8014d5c:	f006 fc74 	bl	801b648 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8014d60:	a890      	add	r0, sp, #576	; 0x240
 8014d62:	f006 fb8f 	bl	801b484 <_ZN8touchgfx9Matrix4x4C1Ev>
 8014d66:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 8014d6a:	a890      	add	r0, sp, #576	; 0x240
 8014d6c:	f006 fbd2 	bl	801b514 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8014d70:	a8a0      	add	r0, sp, #640	; 0x280
 8014d72:	f006 fb87 	bl	801b484 <_ZN8touchgfx9Matrix4x4C1Ev>
 8014d76:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8014d7a:	a8a0      	add	r0, sp, #640	; 0x280
 8014d7c:	f006 fc56 	bl	801b62c <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8014d80:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8014d84:	f006 fc60 	bl	801b648 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8014d88:	aa90      	add	r2, sp, #576	; 0x240
 8014d8a:	a9a0      	add	r1, sp, #640	; 0x280
 8014d8c:	a8b0      	add	r0, sp, #704	; 0x2c0
 8014d8e:	f006 fb93 	bl	801b4b8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8014d92:	4628      	mov	r0, r5
 8014d94:	aa80      	add	r2, sp, #512	; 0x200
 8014d96:	a9b0      	add	r1, sp, #704	; 0x2c0
 8014d98:	f006 fb8e 	bl	801b4b8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8014d9c:	4629      	mov	r1, r5
 8014d9e:	aa70      	add	r2, sp, #448	; 0x1c0
 8014da0:	4668      	mov	r0, sp
 8014da2:	466d      	mov	r5, sp
 8014da4:	f006 fb88 	bl	801b4b8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8014da8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014daa:	ae70      	add	r6, sp, #448	; 0x1c0
 8014dac:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8014dae:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014db0:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8014db2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014db4:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8014db6:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8014dba:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8014dbe:	2500      	movs	r5, #0
 8014dc0:	0129      	lsls	r1, r5, #4
 8014dc2:	ab20      	add	r3, sp, #128	; 0x80
 8014dc4:	185e      	adds	r6, r3, r1
 8014dc6:	ab10      	add	r3, sp, #64	; 0x40
 8014dc8:	4419      	add	r1, r3
 8014dca:	a870      	add	r0, sp, #448	; 0x1c0
 8014dcc:	f006 fb2a 	bl	801b424 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8014dd0:	3501      	adds	r5, #1
 8014dd2:	2d04      	cmp	r5, #4
 8014dd4:	ed86 0a00 	vstr	s0, [r6]
 8014dd8:	edc6 0a01 	vstr	s1, [r6, #4]
 8014ddc:	ed86 1a02 	vstr	s2, [r6, #8]
 8014de0:	edc6 1a03 	vstr	s3, [r6, #12]
 8014de4:	d1ec      	bne.n	8014dc0 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 8014de6:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 8014dea:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8014dee:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8014df2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8014df6:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 8014dfa:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8014dfe:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8014e02:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8014e06:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8014e0a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8014e0e:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8014e12:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8014e16:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 8014e1a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8014e1e:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8014e22:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8014e26:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 8014e2a:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8014e2e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8014e32:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8014e36:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 8014e3a:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8014e3e:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8014e42:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8014e46:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 8014e4a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8014e4e:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8014e52:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 8014e56:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8014e5a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8014e5e:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8014e62:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8014e66:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 8014e6a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8014e6e:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8014e72:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8014e76:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8014e7a:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8014e7e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014e82:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8014e86:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 8014e8a:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8014e8e:	ecbd 8b04 	vpop	{d8-d9}
 8014e92:	bd70      	pop	{r4, r5, r6, pc}

08014e94 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8014e94:	b510      	push	{r4, lr}
 8014e96:	4604      	mov	r4, r0
 8014e98:	f001 fb68 	bl	801656c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8014e9c:	4620      	mov	r0, r4
 8014e9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014ea2:	f7ff bea1 	b.w	8014be8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08014ea6 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8014ea6:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 8014eaa:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8014eae:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8014eb2:	f7ff be99 	b.w	8014be8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08014eb6 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8014eb6:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 8014eba:	f7ff be95 	b.w	8014be8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08014ebe <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8014ebe:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8014ec2:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8014ec6:	f7ff be8f 	b.w	8014be8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08014eca <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 8014eca:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8014ece:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8014ed2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014ed6:	bfd8      	it	le
 8014ed8:	eeb0 0a67 	vmovle.f32	s0, s15
 8014edc:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8014ee0:	f7ff be82 	b.w	8014be8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08014ee4 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8014ee4:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8014ee8:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8014eec:	f7ff be7c 	b.w	8014be8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08014ef0 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8014ef0:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8014ef4:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8014ef8:	f7ff be76 	b.w	8014be8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08014efc <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8014efc:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8014f00:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8014f04:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8014f08:	f7ff be6e 	b.w	8014be8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08014f0c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8014f0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014f10:	ed2d 8b04 	vpush	{d8-d9}
 8014f14:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 8014f18:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8014f1c:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8014f20:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8014f24:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8014f28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014f2c:	bf54      	ite	pl
 8014f2e:	eeb0 0a69 	vmovpl.f32	s0, s19
 8014f32:	eeb0 0a48 	vmovmi.f32	s0, s16
 8014f36:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8014f3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014f3e:	bfd8      	it	le
 8014f40:	eeb0 0a49 	vmovle.f32	s0, s18
 8014f44:	eef4 8ac0 	vcmpe.f32	s17, s0
 8014f48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014f4c:	bfd8      	it	le
 8014f4e:	eeb0 0a68 	vmovle.f32	s0, s17
 8014f52:	460c      	mov	r4, r1
 8014f54:	4607      	mov	r7, r0
 8014f56:	f015 fa95 	bl	802a484 <floorf>
 8014f5a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8014f5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014f62:	bf58      	it	pl
 8014f64:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8014f68:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8014f6c:	bf56      	itet	pl
 8014f6e:	ee10 3a10 	vmovpl	r3, s0
 8014f72:	2600      	movmi	r6, #0
 8014f74:	b21e      	sxthpl	r6, r3
 8014f76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014f7a:	bfd8      	it	le
 8014f7c:	eeb0 8a69 	vmovle.f32	s16, s19
 8014f80:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8014f84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014f88:	bf58      	it	pl
 8014f8a:	eeb0 8a49 	vmovpl.f32	s16, s18
 8014f8e:	eef4 8ac8 	vcmpe.f32	s17, s16
 8014f92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014f96:	bf54      	ite	pl
 8014f98:	eeb0 0a68 	vmovpl.f32	s0, s17
 8014f9c:	eeb0 0a48 	vmovmi.f32	s0, s16
 8014fa0:	f015 fa2e 	bl	802a400 <ceilf>
 8014fa4:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8014fa8:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8014fac:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8014fb0:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8014fb4:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8014fb8:	ee07 8a90 	vmov	s15, r8
 8014fbc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014fc0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8014fc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014fc8:	bfd8      	it	le
 8014fca:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8014fce:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8014fd2:	bfdc      	itt	le
 8014fd4:	ee10 3a10 	vmovle	r3, s0
 8014fd8:	fa0f f883 	sxthle.w	r8, r3
 8014fdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014fe0:	bf54      	ite	pl
 8014fe2:	eeb0 0a69 	vmovpl.f32	s0, s19
 8014fe6:	eeb0 0a48 	vmovmi.f32	s0, s16
 8014fea:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8014fee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014ff2:	bfd8      	it	le
 8014ff4:	eeb0 0a49 	vmovle.f32	s0, s18
 8014ff8:	eef4 8ac0 	vcmpe.f32	s17, s0
 8014ffc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015000:	bfd8      	it	le
 8015002:	eeb0 0a68 	vmovle.f32	s0, s17
 8015006:	f015 fa3d 	bl	802a484 <floorf>
 801500a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801500e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015012:	bf58      	it	pl
 8015014:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8015018:	eeb4 8ae9 	vcmpe.f32	s16, s19
 801501c:	bf56      	itet	pl
 801501e:	ee10 3a10 	vmovpl	r3, s0
 8015022:	2500      	movmi	r5, #0
 8015024:	b21d      	sxthpl	r5, r3
 8015026:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801502a:	bfd8      	it	le
 801502c:	eeb0 8a69 	vmovle.f32	s16, s19
 8015030:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8015034:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015038:	bf58      	it	pl
 801503a:	eeb0 8a49 	vmovpl.f32	s16, s18
 801503e:	eef4 8ac8 	vcmpe.f32	s17, s16
 8015042:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015046:	bf54      	ite	pl
 8015048:	eeb0 0a68 	vmovpl.f32	s0, s17
 801504c:	eeb0 0a48 	vmovmi.f32	s0, s16
 8015050:	f015 f9d6 	bl	802a400 <ceilf>
 8015054:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8015058:	803e      	strh	r6, [r7, #0]
 801505a:	ee07 3a90 	vmov	s15, r3
 801505e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015062:	807d      	strh	r5, [r7, #2]
 8015064:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8015068:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801506c:	bfd8      	it	le
 801506e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8015072:	eba8 0606 	sub.w	r6, r8, r6
 8015076:	bfdc      	itt	le
 8015078:	ee10 3a10 	vmovle	r3, s0
 801507c:	b21b      	sxthle	r3, r3
 801507e:	1b5d      	subs	r5, r3, r5
 8015080:	80be      	strh	r6, [r7, #4]
 8015082:	80fd      	strh	r5, [r7, #6]
 8015084:	ecbd 8b04 	vpop	{d8-d9}
 8015088:	4638      	mov	r0, r7
 801508a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801508e <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 801508e:	b513      	push	{r0, r1, r4, lr}
 8015090:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8015094:	4604      	mov	r4, r0
 8015096:	b143      	cbz	r3, 80150aa <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8015098:	4601      	mov	r1, r0
 801509a:	4668      	mov	r0, sp
 801509c:	f7ff ff36 	bl	8014f0c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 80150a0:	6823      	ldr	r3, [r4, #0]
 80150a2:	4669      	mov	r1, sp
 80150a4:	691b      	ldr	r3, [r3, #16]
 80150a6:	4620      	mov	r0, r4
 80150a8:	4798      	blx	r3
 80150aa:	b002      	add	sp, #8
 80150ac:	bd10      	pop	{r4, pc}

080150ae <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 80150ae:	4603      	mov	r3, r0
 80150b0:	3026      	adds	r0, #38	; 0x26
 80150b2:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 80150b6:	b90b      	cbnz	r3, 80150bc <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 80150b8:	f005 b84c 	b.w	801a154 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 80150bc:	f005 b85a 	b.w	801a174 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

080150c0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 80150c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80150c4:	ed2d 8b04 	vpush	{d8-d9}
 80150c8:	4604      	mov	r4, r0
 80150ca:	469b      	mov	fp, r3
 80150cc:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 80150d0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80150d4:	f9b1 6000 	ldrsh.w	r6, [r1]
 80150d8:	8888      	ldrh	r0, [r1, #4]
 80150da:	b0b3      	sub	sp, #204	; 0xcc
 80150dc:	4430      	add	r0, r6
 80150de:	b280      	uxth	r0, r0
 80150e0:	9206      	str	r2, [sp, #24]
 80150e2:	fa0f fe80 	sxth.w	lr, r0
 80150e6:	2200      	movs	r2, #0
 80150e8:	4596      	cmp	lr, r2
 80150ea:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 80150ee:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 80150f2:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 80150f6:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 80150f8:	9211      	str	r2, [sp, #68]	; 0x44
 80150fa:	f340 8129 	ble.w	8015350 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80150fe:	45b4      	cmp	ip, r6
 8015100:	f340 8126 	ble.w	8015350 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8015104:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8015108:	88ca      	ldrh	r2, [r1, #6]
 801510a:	442a      	add	r2, r5
 801510c:	b292      	uxth	r2, r2
 801510e:	b211      	sxth	r1, r2
 8015110:	2900      	cmp	r1, #0
 8015112:	f340 811d 	ble.w	8015350 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8015116:	42ab      	cmp	r3, r5
 8015118:	f340 811a 	ble.w	8015350 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 801511c:	45f4      	cmp	ip, lr
 801511e:	bfb8      	it	lt
 8015120:	fa1f f08c 	uxthlt.w	r0, ip
 8015124:	428b      	cmp	r3, r1
 8015126:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801512a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801512e:	bfb8      	it	lt
 8015130:	b29a      	uxthlt	r2, r3
 8015132:	1b80      	subs	r0, r0, r6
 8015134:	1b52      	subs	r2, r2, r5
 8015136:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 801513a:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 801513e:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8015142:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8015146:	ab11      	add	r3, sp, #68	; 0x44
 8015148:	e893 0003 	ldmia.w	r3, {r0, r1}
 801514c:	6822      	ldr	r2, [r4, #0]
 801514e:	9307      	str	r3, [sp, #28]
 8015150:	ad13      	add	r5, sp, #76	; 0x4c
 8015152:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8015154:	e885 0003 	stmia.w	r5, {r0, r1}
 8015158:	4629      	mov	r1, r5
 801515a:	4620      	mov	r0, r4
 801515c:	4790      	blx	r2
 801515e:	4621      	mov	r1, r4
 8015160:	a815      	add	r0, sp, #84	; 0x54
 8015162:	f004 ff53 	bl	801a00c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015166:	a815      	add	r0, sp, #84	; 0x54
 8015168:	f003 fc4a 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801516c:	9b07      	ldr	r3, [sp, #28]
 801516e:	1d26      	adds	r6, r4, #4
 8015170:	4618      	mov	r0, r3
 8015172:	4631      	mov	r1, r6
 8015174:	f003 fc88 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015178:	4628      	mov	r0, r5
 801517a:	f104 0526 	add.w	r5, r4, #38	; 0x26
 801517e:	f003 fc3f 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015182:	4628      	mov	r0, r5
 8015184:	f007 f9d4 	bl	801c530 <_ZNK8touchgfx6Bitmap7getDataEv>
 8015188:	9007      	str	r0, [sp, #28]
 801518a:	2800      	cmp	r0, #0
 801518c:	f000 80db 	beq.w	8015346 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8015190:	f8db 2000 	ldr.w	r2, [fp]
 8015194:	9209      	str	r2, [sp, #36]	; 0x24
 8015196:	f8db 2004 	ldr.w	r2, [fp, #4]
 801519a:	920a      	str	r2, [sp, #40]	; 0x28
 801519c:	f8db 2008 	ldr.w	r2, [fp, #8]
 80151a0:	920b      	str	r2, [sp, #44]	; 0x2c
 80151a2:	f8db 200c 	ldr.w	r2, [fp, #12]
 80151a6:	920c      	str	r2, [sp, #48]	; 0x30
 80151a8:	f8da 2000 	ldr.w	r2, [sl]
 80151ac:	920d      	str	r2, [sp, #52]	; 0x34
 80151ae:	f8da 2004 	ldr.w	r2, [sl, #4]
 80151b2:	920e      	str	r2, [sp, #56]	; 0x38
 80151b4:	f8da 2008 	ldr.w	r2, [sl, #8]
 80151b8:	920f      	str	r2, [sp, #60]	; 0x3c
 80151ba:	f8da 200c 	ldr.w	r2, [sl, #12]
 80151be:	9210      	str	r2, [sp, #64]	; 0x40
 80151c0:	a90d      	add	r1, sp, #52	; 0x34
 80151c2:	4632      	mov	r2, r6
 80151c4:	a809      	add	r0, sp, #36	; 0x24
 80151c6:	f003 fc43 	bl	8018a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80151ca:	4632      	mov	r2, r6
 80151cc:	a90e      	add	r1, sp, #56	; 0x38
 80151ce:	a80a      	add	r0, sp, #40	; 0x28
 80151d0:	f003 fc3e 	bl	8018a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80151d4:	4632      	mov	r2, r6
 80151d6:	a90f      	add	r1, sp, #60	; 0x3c
 80151d8:	a80b      	add	r0, sp, #44	; 0x2c
 80151da:	f003 fc39 	bl	8018a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80151de:	4632      	mov	r2, r6
 80151e0:	a910      	add	r1, sp, #64	; 0x40
 80151e2:	a80c      	add	r0, sp, #48	; 0x30
 80151e4:	f003 fc34 	bl	8018a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80151e8:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 80151ec:	edd7 4a00 	vldr	s9, [r7]
 80151f0:	edd7 5a01 	vldr	s11, [r7, #4]
 80151f4:	ed98 4a00 	vldr	s8, [r8]
 80151f8:	ed98 5a01 	vldr	s10, [r8, #4]
 80151fc:	ed99 9a00 	vldr	s18, [r9]
 8015200:	ed99 8a01 	vldr	s16, [r9, #4]
 8015204:	edd9 8a02 	vldr	s17, [r9, #8]
 8015208:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 801520c:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8015210:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8015214:	eef0 6a67 	vmov.f32	s13, s15
 8015218:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 801521c:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8015220:	eeb0 7a67 	vmov.f32	s14, s15
 8015224:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8015228:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 801522c:	eeb0 6a67 	vmov.f32	s12, s15
 8015230:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8015234:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8015238:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 801523c:	ee16 6a10 	vmov	r6, s12
 8015240:	eeb0 6a67 	vmov.f32	s12, s15
 8015244:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8015248:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 801524c:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8015250:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8015254:	68ff      	ldr	r7, [r7, #12]
 8015256:	9624      	str	r6, [sp, #144]	; 0x90
 8015258:	ee16 0a10 	vmov	r0, s12
 801525c:	eeb0 6a67 	vmov.f32	s12, s15
 8015260:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8015264:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8015268:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 801526c:	ee16 1a10 	vmov	r1, s12
 8015270:	eeb0 6a67 	vmov.f32	s12, s15
 8015274:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8015278:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 801527c:	ee16 2a10 	vmov	r2, s12
 8015280:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8015284:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8015288:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801528c:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8015290:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8015294:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8015298:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 801529c:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 80152a0:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 80152a4:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 80152a8:	922d      	str	r2, [sp, #180]	; 0xb4
 80152aa:	4a2b      	ldr	r2, [pc, #172]	; (8015358 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 80152ac:	9b06      	ldr	r3, [sp, #24]
 80152ae:	8812      	ldrh	r2, [r2, #0]
 80152b0:	9317      	str	r3, [sp, #92]	; 0x5c
 80152b2:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 80152b6:	9b07      	ldr	r3, [sp, #28]
 80152b8:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 80152bc:	4628      	mov	r0, r5
 80152be:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 80152c2:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 80152c6:	9218      	str	r2, [sp, #96]	; 0x60
 80152c8:	9319      	str	r3, [sp, #100]	; 0x64
 80152ca:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 80152ce:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 80152d2:	9731      	str	r7, [sp, #196]	; 0xc4
 80152d4:	f007 f95c 	bl	801c590 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80152d8:	901a      	str	r0, [sp, #104]	; 0x68
 80152da:	4628      	mov	r0, r5
 80152dc:	f007 f83c 	bl	801c358 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80152e0:	901b      	str	r0, [sp, #108]	; 0x6c
 80152e2:	4628      	mov	r0, r5
 80152e4:	f007 f86c 	bl	801c3c0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80152e8:	901c      	str	r0, [sp, #112]	; 0x70
 80152ea:	4628      	mov	r0, r5
 80152ec:	f007 f834 	bl	801c358 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80152f0:	eeb4 9a48 	vcmp.f32	s18, s16
 80152f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80152f8:	901d      	str	r0, [sp, #116]	; 0x74
 80152fa:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 80152fe:	d107      	bne.n	8015310 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8015300:	eeb4 8a68 	vcmp.f32	s16, s17
 8015304:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015308:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801530c:	bf08      	it	eq
 801530e:	461e      	moveq	r6, r3
 8015310:	4b12      	ldr	r3, [pc, #72]	; (801535c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8015312:	681b      	ldr	r3, [r3, #0]
 8015314:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015318:	b10a      	cbz	r2, 801531e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 801531a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 801531c:	b905      	cbnz	r5, 8015320 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 801531e:	689d      	ldr	r5, [r3, #8]
 8015320:	682b      	ldr	r3, [r5, #0]
 8015322:	4620      	mov	r0, r4
 8015324:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8015326:	f7ff fec2 	bl	80150ae <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 801532a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 801532e:	9604      	str	r6, [sp, #16]
 8015330:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8015334:	ab13      	add	r3, sp, #76	; 0x4c
 8015336:	9301      	str	r3, [sp, #4]
 8015338:	ab15      	add	r3, sp, #84	; 0x54
 801533a:	9300      	str	r3, [sp, #0]
 801533c:	aa1e      	add	r2, sp, #120	; 0x78
 801533e:	ab19      	add	r3, sp, #100	; 0x64
 8015340:	a917      	add	r1, sp, #92	; 0x5c
 8015342:	4628      	mov	r0, r5
 8015344:	47b8      	blx	r7
 8015346:	b033      	add	sp, #204	; 0xcc
 8015348:	ecbd 8b04 	vpop	{d8-d9}
 801534c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015350:	2300      	movs	r3, #0
 8015352:	9312      	str	r3, [sp, #72]	; 0x48
 8015354:	e6f7      	b.n	8015146 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8015356:	bf00      	nop
 8015358:	20002322 	.word	0x20002322
 801535c:	20002328 	.word	0x20002328

08015360 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8015360:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015364:	ed2d 8b02 	vpush	{d8}
 8015368:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 801536c:	b098      	sub	sp, #96	; 0x60
 801536e:	4604      	mov	r4, r0
 8015370:	4688      	mov	r8, r1
 8015372:	2b00      	cmp	r3, #0
 8015374:	d077      	beq.n	8015466 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 8015376:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801537a:	4628      	mov	r0, r5
 801537c:	f006 ffec 	bl	801c358 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015380:	ee07 0a90 	vmov	s15, r0
 8015384:	4628      	mov	r0, r5
 8015386:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 801538a:	f007 f819 	bl	801c3c0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801538e:	4b4e      	ldr	r3, [pc, #312]	; (80154c8 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8015390:	781b      	ldrb	r3, [r3, #0]
 8015392:	ee07 0a90 	vmov	s15, r0
 8015396:	2b01      	cmp	r3, #1
 8015398:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801539c:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 80153a0:	d066      	beq.n	8015470 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 80153a2:	eeb0 6a47 	vmov.f32	s12, s14
 80153a6:	ee17 3a10 	vmov	r3, s14
 80153aa:	eeb0 4a48 	vmov.f32	s8, s16
 80153ae:	eeb0 7a48 	vmov.f32	s14, s16
 80153b2:	eef0 4a67 	vmov.f32	s9, s15
 80153b6:	eeb0 8a67 	vmov.f32	s16, s15
 80153ba:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 80153be:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 80153c2:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 80153c6:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 80153ca:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 80153ce:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 80153d2:	6f25      	ldr	r5, [r4, #112]	; 0x70
 80153d4:	6e66      	ldr	r6, [r4, #100]	; 0x64
 80153d6:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 80153d8:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 80153dc:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 80153e0:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80153e4:	ee73 1a65 	vsub.f32	s3, s6, s11
 80153e8:	ee72 6ac5 	vsub.f32	s13, s5, s10
 80153ec:	ee32 1a45 	vsub.f32	s2, s4, s10
 80153f0:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 80153f4:	ee73 1ae5 	vsub.f32	s3, s7, s11
 80153f8:	eee1 6a21 	vfma.f32	s13, s2, s3
 80153fc:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8015400:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015404:	dd3d      	ble.n	8015482 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8015406:	ed8d 5a04 	vstr	s10, [sp, #16]
 801540a:	ed8d 2a05 	vstr	s4, [sp, #20]
 801540e:	edcd 2a06 	vstr	s5, [sp, #24]
 8015412:	f8cd c01c 	str.w	ip, [sp, #28]
 8015416:	edcd 5a08 	vstr	s11, [sp, #32]
 801541a:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 801541e:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8015422:	970b      	str	r7, [sp, #44]	; 0x2c
 8015424:	960c      	str	r6, [sp, #48]	; 0x30
 8015426:	950d      	str	r5, [sp, #52]	; 0x34
 8015428:	920e      	str	r2, [sp, #56]	; 0x38
 801542a:	900f      	str	r0, [sp, #60]	; 0x3c
 801542c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8015430:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8015434:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8015438:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 801543c:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8015440:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8015444:	9316      	str	r3, [sp, #88]	; 0x58
 8015446:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 801544a:	ab14      	add	r3, sp, #80	; 0x50
 801544c:	9303      	str	r3, [sp, #12]
 801544e:	ab10      	add	r3, sp, #64	; 0x40
 8015450:	9302      	str	r3, [sp, #8]
 8015452:	ab0c      	add	r3, sp, #48	; 0x30
 8015454:	9301      	str	r3, [sp, #4]
 8015456:	ab08      	add	r3, sp, #32
 8015458:	9300      	str	r3, [sp, #0]
 801545a:	2200      	movs	r2, #0
 801545c:	ab04      	add	r3, sp, #16
 801545e:	4641      	mov	r1, r8
 8015460:	4620      	mov	r0, r4
 8015462:	f7ff fe2d 	bl	80150c0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8015466:	b018      	add	sp, #96	; 0x60
 8015468:	ecbd 8b02 	vpop	{d8}
 801546c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015470:	eeb0 6a48 	vmov.f32	s12, s16
 8015474:	eef0 4a47 	vmov.f32	s9, s14
 8015478:	ee17 3a90 	vmov	r3, s15
 801547c:	eeb0 4a67 	vmov.f32	s8, s15
 8015480:	e79b      	b.n	80153ba <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8015482:	ed8d 5a05 	vstr	s10, [sp, #20]
 8015486:	ed8d 2a04 	vstr	s4, [sp, #16]
 801548a:	f8cd c018 	str.w	ip, [sp, #24]
 801548e:	edcd 2a07 	vstr	s5, [sp, #28]
 8015492:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8015496:	ed8d 3a08 	vstr	s6, [sp, #32]
 801549a:	970a      	str	r7, [sp, #40]	; 0x28
 801549c:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 80154a0:	960d      	str	r6, [sp, #52]	; 0x34
 80154a2:	950c      	str	r5, [sp, #48]	; 0x30
 80154a4:	900e      	str	r0, [sp, #56]	; 0x38
 80154a6:	920f      	str	r2, [sp, #60]	; 0x3c
 80154a8:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 80154ac:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 80154b0:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 80154b4:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80154b8:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 80154bc:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 80154c0:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 80154c4:	9317      	str	r3, [sp, #92]	; 0x5c
 80154c6:	e7c0      	b.n	801544a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 80154c8:	20002320 	.word	0x20002320

080154cc <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
 80154cc:	b508      	push	{r3, lr}
 80154ce:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80154d2:	b10b      	cbz	r3, 80154d8 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
 80154d4:	f7f4 f970 	bl	80097b8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 80154d8:	bd08      	pop	{r3, pc}

080154da <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 80154da:	6803      	ldr	r3, [r0, #0]
 80154dc:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 80154e0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80154e2:	4718      	bx	r3

080154e4 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 80154e4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80154e8:	2bff      	cmp	r3, #255	; 0xff
 80154ea:	b510      	push	{r4, lr}
 80154ec:	d104      	bne.n	80154f8 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 80154ee:	8cca      	ldrh	r2, [r1, #38]	; 0x26
 80154f0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80154f4:	429a      	cmp	r2, r3
 80154f6:	d105      	bne.n	8015504 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 80154f8:	2300      	movs	r3, #0
 80154fa:	8003      	strh	r3, [r0, #0]
 80154fc:	8043      	strh	r3, [r0, #2]
 80154fe:	8083      	strh	r3, [r0, #4]
 8015500:	80c3      	strh	r3, [r0, #6]
 8015502:	bd10      	pop	{r4, pc}
 8015504:	2300      	movs	r3, #0
 8015506:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 801550a:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 801550e:	8003      	strh	r3, [r0, #0]
 8015510:	8043      	strh	r3, [r0, #2]
 8015512:	8084      	strh	r4, [r0, #4]
 8015514:	80c2      	strh	r2, [r0, #6]
 8015516:	e7f4      	b.n	8015502 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

08015518 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 8015518:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801551c:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8015520:	b087      	sub	sp, #28
 8015522:	4604      	mov	r4, r0
 8015524:	4689      	mov	r9, r1
 8015526:	b363      	cbz	r3, 8015582 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 8015528:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 801552a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801552e:	429a      	cmp	r2, r3
 8015530:	d027      	beq.n	8015582 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 8015532:	ad06      	add	r5, sp, #24
 8015534:	2700      	movs	r7, #0
 8015536:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 801553a:	4628      	mov	r0, r5
 801553c:	f006 ff0c 	bl	801c358 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015540:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8015544:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015548:	6823      	ldr	r3, [r4, #0]
 801554a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801554e:	a904      	add	r1, sp, #16
 8015550:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015552:	9704      	str	r7, [sp, #16]
 8015554:	4620      	mov	r0, r4
 8015556:	4798      	blx	r3
 8015558:	f7f5 fa58 	bl	800aa0c <_ZN8touchgfx3HAL3lcdEv>
 801555c:	6803      	ldr	r3, [r0, #0]
 801555e:	4606      	mov	r6, r0
 8015560:	f8d3 800c 	ldr.w	r8, [r3, #12]
 8015564:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8015566:	f8ad 300c 	strh.w	r3, [sp, #12]
 801556a:	4628      	mov	r0, r5
 801556c:	f006 ffe0 	bl	801c530 <_ZNK8touchgfx6Bitmap7getDataEv>
 8015570:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8015574:	9300      	str	r3, [sp, #0]
 8015576:	4601      	mov	r1, r0
 8015578:	9701      	str	r7, [sp, #4]
 801557a:	464b      	mov	r3, r9
 801557c:	aa04      	add	r2, sp, #16
 801557e:	4630      	mov	r0, r6
 8015580:	47c0      	blx	r8
 8015582:	b007      	add	sp, #28
 8015584:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08015588 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 8015588:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801558a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801558e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015592:	6803      	ldr	r3, [r0, #0]
 8015594:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8015598:	f8ad 2004 	strh.w	r2, [sp, #4]
 801559c:	460d      	mov	r5, r1
 801559e:	2100      	movs	r1, #0
 80155a0:	4604      	mov	r4, r0
 80155a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80155a4:	9100      	str	r1, [sp, #0]
 80155a6:	4669      	mov	r1, sp
 80155a8:	4798      	blx	r3
 80155aa:	4621      	mov	r1, r4
 80155ac:	a802      	add	r0, sp, #8
 80155ae:	f004 fd2d 	bl	801a00c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80155b2:	f7f5 fa2b 	bl	800aa0c <_ZN8touchgfx3HAL3lcdEv>
 80155b6:	6803      	ldr	r3, [r0, #0]
 80155b8:	aa02      	add	r2, sp, #8
 80155ba:	695e      	ldr	r6, [r3, #20]
 80155bc:	4669      	mov	r1, sp
 80155be:	462b      	mov	r3, r5
 80155c0:	47b0      	blx	r6
 80155c2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80155c6:	2800      	cmp	r0, #0
 80155c8:	bf08      	it	eq
 80155ca:	461d      	moveq	r5, r3
 80155cc:	84e5      	strh	r5, [r4, #38]	; 0x26
 80155ce:	b004      	add	sp, #16
 80155d0:	bd70      	pop	{r4, r5, r6, pc}
	...

080155d4 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 80155d4:	2200      	movs	r2, #0
 80155d6:	8082      	strh	r2, [r0, #4]
 80155d8:	80c2      	strh	r2, [r0, #6]
 80155da:	8102      	strh	r2, [r0, #8]
 80155dc:	8142      	strh	r2, [r0, #10]
 80155de:	8182      	strh	r2, [r0, #12]
 80155e0:	81c2      	strh	r2, [r0, #14]
 80155e2:	8202      	strh	r2, [r0, #16]
 80155e4:	8242      	strh	r2, [r0, #18]
 80155e6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80155ea:	61c2      	str	r2, [r0, #28]
 80155ec:	8402      	strh	r2, [r0, #32]
 80155ee:	8442      	strh	r2, [r0, #34]	; 0x22
 80155f0:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80155f4:	2201      	movs	r2, #1
 80155f6:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80155fa:	4a04      	ldr	r2, [pc, #16]	; (801560c <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
 80155fc:	6002      	str	r2, [r0, #0]
 80155fe:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8015602:	84c2      	strh	r2, [r0, #38]	; 0x26
 8015604:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 8015608:	4770      	bx	lr
 801560a:	bf00      	nop
 801560c:	0802f2fc 	.word	0x0802f2fc

08015610 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8015610:	2000      	movs	r0, #0
 8015612:	4770      	bx	lr

08015614 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8015614:	4b07      	ldr	r3, [pc, #28]	; (8015634 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8015616:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8015618:	881b      	ldrh	r3, [r3, #0]
 801561a:	4293      	cmp	r3, r2
 801561c:	bf81      	itttt	hi
 801561e:	4b06      	ldrhi	r3, [pc, #24]	; (8015638 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8015620:	681b      	ldrhi	r3, [r3, #0]
 8015622:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8015626:	7858      	ldrbhi	r0, [r3, #1]
 8015628:	bf8c      	ite	hi
 801562a:	f000 0003 	andhi.w	r0, r0, #3
 801562e:	2000      	movls	r0, #0
 8015630:	4770      	bx	lr
 8015632:	bf00      	nop
 8015634:	20002384 	.word	0x20002384
 8015638:	20002380 	.word	0x20002380

0801563c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 801563c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015640:	4b10      	ldr	r3, [pc, #64]	; (8015684 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8015642:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8015644:	881b      	ldrh	r3, [r3, #0]
 8015646:	428b      	cmp	r3, r1
 8015648:	4604      	mov	r4, r0
 801564a:	d918      	bls.n	801567e <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 801564c:	6803      	ldr	r3, [r0, #0]
 801564e:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8015650:	4b0d      	ldr	r3, [pc, #52]	; (8015688 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8015652:	6818      	ldr	r0, [r3, #0]
 8015654:	f7fa fa4a 	bl	800faec <_ZNK8touchgfx5Texts7getTextEt>
 8015658:	6823      	ldr	r3, [r4, #0]
 801565a:	4606      	mov	r6, r0
 801565c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801565e:	4620      	mov	r0, r4
 8015660:	4798      	blx	r3
 8015662:	6823      	ldr	r3, [r4, #0]
 8015664:	4607      	mov	r7, r0
 8015666:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801566a:	4620      	mov	r0, r4
 801566c:	4798      	blx	r3
 801566e:	463a      	mov	r2, r7
 8015670:	4603      	mov	r3, r0
 8015672:	4631      	mov	r1, r6
 8015674:	4620      	mov	r0, r4
 8015676:	46ac      	mov	ip, r5
 8015678:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801567c:	4760      	bx	ip
 801567e:	2000      	movs	r0, #0
 8015680:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015684:	20002384 	.word	0x20002384
 8015688:	2000238c 	.word	0x2000238c

0801568c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 801568c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8015690:	4b17      	ldr	r3, [pc, #92]	; (80156f0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8015692:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8015694:	881b      	ldrh	r3, [r3, #0]
 8015696:	428b      	cmp	r3, r1
 8015698:	4604      	mov	r4, r0
 801569a:	d926      	bls.n	80156ea <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 801569c:	4b15      	ldr	r3, [pc, #84]	; (80156f4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 801569e:	681b      	ldr	r3, [r3, #0]
 80156a0:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80156a4:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80156a8:	4b13      	ldr	r3, [pc, #76]	; (80156f8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80156aa:	7855      	ldrb	r5, [r2, #1]
 80156ac:	681b      	ldr	r3, [r3, #0]
 80156ae:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 80156b2:	6833      	ldr	r3, [r6, #0]
 80156b4:	69df      	ldr	r7, [r3, #28]
 80156b6:	4b11      	ldr	r3, [pc, #68]	; (80156fc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80156b8:	6818      	ldr	r0, [r3, #0]
 80156ba:	f7fa fa17 	bl	800faec <_ZNK8touchgfx5Texts7getTextEt>
 80156be:	6823      	ldr	r3, [r4, #0]
 80156c0:	4680      	mov	r8, r0
 80156c2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80156c4:	4620      	mov	r0, r4
 80156c6:	4798      	blx	r3
 80156c8:	6823      	ldr	r3, [r4, #0]
 80156ca:	4681      	mov	r9, r0
 80156cc:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80156d0:	4620      	mov	r0, r4
 80156d2:	4798      	blx	r3
 80156d4:	f3c5 0581 	ubfx	r5, r5, #2, #2
 80156d8:	9000      	str	r0, [sp, #0]
 80156da:	464b      	mov	r3, r9
 80156dc:	4642      	mov	r2, r8
 80156de:	4629      	mov	r1, r5
 80156e0:	4630      	mov	r0, r6
 80156e2:	47b8      	blx	r7
 80156e4:	b003      	add	sp, #12
 80156e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80156ea:	2000      	movs	r0, #0
 80156ec:	e7fa      	b.n	80156e4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 80156ee:	bf00      	nop
 80156f0:	20002384 	.word	0x20002384
 80156f4:	20002380 	.word	0x20002380
 80156f8:	20002388 	.word	0x20002388
 80156fc:	2000238c 	.word	0x2000238c

08015700 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8015700:	b40e      	push	{r1, r2, r3}
 8015702:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015706:	4b2f      	ldr	r3, [pc, #188]	; (80157c4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8015708:	881a      	ldrh	r2, [r3, #0]
 801570a:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 801570c:	429a      	cmp	r2, r3
 801570e:	b09d      	sub	sp, #116	; 0x74
 8015710:	4604      	mov	r4, r0
 8015712:	d954      	bls.n	80157be <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8015714:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80157c8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8015718:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80157cc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 801571c:	aa26      	add	r2, sp, #152	; 0x98
 801571e:	9202      	str	r2, [sp, #8]
 8015720:	f8d9 2000 	ldr.w	r2, [r9]
 8015724:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8015728:	f8d8 3000 	ldr.w	r3, [r8]
 801572c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8015730:	682b      	ldr	r3, [r5, #0]
 8015732:	4628      	mov	r0, r5
 8015734:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015736:	4798      	blx	r3
 8015738:	b207      	sxth	r7, r0
 801573a:	4606      	mov	r6, r0
 801573c:	a803      	add	r0, sp, #12
 801573e:	f005 f929 	bl	801a994 <_ZN8touchgfx12TextProviderC1Ev>
 8015742:	682b      	ldr	r3, [r5, #0]
 8015744:	4628      	mov	r0, r5
 8015746:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015748:	4798      	blx	r3
 801574a:	682b      	ldr	r3, [r5, #0]
 801574c:	4682      	mov	sl, r0
 801574e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015750:	4628      	mov	r0, r5
 8015752:	4798      	blx	r3
 8015754:	4653      	mov	r3, sl
 8015756:	9000      	str	r0, [sp, #0]
 8015758:	9a02      	ldr	r2, [sp, #8]
 801575a:	9925      	ldr	r1, [sp, #148]	; 0x94
 801575c:	a803      	add	r0, sp, #12
 801575e:	f005 f974 	bl	801aa4a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015762:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8015764:	f8d9 3000 	ldr.w	r3, [r9]
 8015768:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 801576c:	8925      	ldrh	r5, [r4, #8]
 801576e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8015772:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8015776:	eba5 050c 	sub.w	r5, r5, ip
 801577a:	784a      	ldrb	r2, [r1, #1]
 801577c:	f8d8 3000 	ldr.w	r3, [r8]
 8015780:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8015784:	b22d      	sxth	r5, r5
 8015786:	9500      	str	r5, [sp, #0]
 8015788:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 801578c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8015790:	a803      	add	r0, sp, #12
 8015792:	f002 fe3b 	bl	801840c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8015796:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 801579a:	18b9      	adds	r1, r7, r2
 801579c:	2900      	cmp	r1, #0
 801579e:	b203      	sxth	r3, r0
 80157a0:	dd0b      	ble.n	80157ba <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 80157a2:	3b01      	subs	r3, #1
 80157a4:	fb13 f302 	smulbb	r3, r3, r2
 80157a8:	fb16 3300 	smlabb	r3, r6, r0, r3
 80157ac:	b21f      	sxth	r7, r3
 80157ae:	4638      	mov	r0, r7
 80157b0:	b01d      	add	sp, #116	; 0x74
 80157b2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80157b6:	b003      	add	sp, #12
 80157b8:	4770      	bx	lr
 80157ba:	2b00      	cmp	r3, #0
 80157bc:	dcf7      	bgt.n	80157ae <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80157be:	2700      	movs	r7, #0
 80157c0:	e7f5      	b.n	80157ae <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80157c2:	bf00      	nop
 80157c4:	20002384 	.word	0x20002384
 80157c8:	20002380 	.word	0x20002380
 80157cc:	20002388 	.word	0x20002388

080157d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 80157d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157d4:	4bbc      	ldr	r3, [pc, #752]	; (8015ac8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 80157d6:	460c      	mov	r4, r1
 80157d8:	881b      	ldrh	r3, [r3, #0]
 80157da:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 80157dc:	428b      	cmp	r3, r1
 80157de:	b0a9      	sub	sp, #164	; 0xa4
 80157e0:	4680      	mov	r8, r0
 80157e2:	d809      	bhi.n	80157f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 80157e4:	2300      	movs	r3, #0
 80157e6:	f04f 32ff 	mov.w	r2, #4294967295
 80157ea:	e9c0 3200 	strd	r3, r2, [r0]
 80157ee:	6083      	str	r3, [r0, #8]
 80157f0:	4640      	mov	r0, r8
 80157f2:	b029      	add	sp, #164	; 0xa4
 80157f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80157f8:	4eb4      	ldr	r6, [pc, #720]	; (8015acc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 80157fa:	6833      	ldr	r3, [r6, #0]
 80157fc:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8015800:	4bb3      	ldr	r3, [pc, #716]	; (8015ad0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8015802:	681b      	ldr	r3, [r3, #0]
 8015804:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8015808:	4bb2      	ldr	r3, [pc, #712]	; (8015ad4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801580a:	6818      	ldr	r0, [r3, #0]
 801580c:	f7fa f96e 	bl	800faec <_ZNK8touchgfx5Texts7getTextEt>
 8015810:	682b      	ldr	r3, [r5, #0]
 8015812:	4681      	mov	r9, r0
 8015814:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015816:	4628      	mov	r0, r5
 8015818:	4798      	blx	r3
 801581a:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 801581c:	b203      	sxth	r3, r0
 801581e:	4407      	add	r7, r0
 8015820:	9304      	str	r3, [sp, #16]
 8015822:	b2bb      	uxth	r3, r7
 8015824:	9303      	str	r3, [sp, #12]
 8015826:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801582a:	4682      	mov	sl, r0
 801582c:	a80f      	add	r0, sp, #60	; 0x3c
 801582e:	2b00      	cmp	r3, #0
 8015830:	f040 80a6 	bne.w	8015980 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8015834:	f005 f8ae 	bl	801a994 <_ZN8touchgfx12TextProviderC1Ev>
 8015838:	682b      	ldr	r3, [r5, #0]
 801583a:	4628      	mov	r0, r5
 801583c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801583e:	4798      	blx	r3
 8015840:	682b      	ldr	r3, [r5, #0]
 8015842:	4606      	mov	r6, r0
 8015844:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015846:	4628      	mov	r0, r5
 8015848:	4798      	blx	r3
 801584a:	6823      	ldr	r3, [r4, #0]
 801584c:	4607      	mov	r7, r0
 801584e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8015850:	4620      	mov	r0, r4
 8015852:	4798      	blx	r3
 8015854:	6823      	ldr	r3, [r4, #0]
 8015856:	4683      	mov	fp, r0
 8015858:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801585c:	4620      	mov	r0, r4
 801585e:	4798      	blx	r3
 8015860:	463b      	mov	r3, r7
 8015862:	e9cd b000 	strd	fp, r0, [sp]
 8015866:	4649      	mov	r1, r9
 8015868:	4632      	mov	r2, r6
 801586a:	a80f      	add	r0, sp, #60	; 0x3c
 801586c:	f005 f902 	bl	801aa74 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8015870:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015874:	f8df b254 	ldr.w	fp, [pc, #596]	; 8015acc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8015878:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801587c:	f04f 0600 	mov.w	r6, #0
 8015880:	bf0c      	ite	eq
 8015882:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8015886:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 801588a:	4637      	mov	r7, r6
 801588c:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801588e:	f8db 3000 	ldr.w	r3, [fp]
 8015892:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8015896:	4629      	mov	r1, r5
 8015898:	785b      	ldrb	r3, [r3, #1]
 801589a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801589e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80158a2:	a80f      	add	r0, sp, #60	; 0x3c
 80158a4:	f002 facd 	bl	8017e42 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80158a8:	9b03      	ldr	r3, [sp, #12]
 80158aa:	4286      	cmp	r6, r0
 80158ac:	bfb8      	it	lt
 80158ae:	4606      	movlt	r6, r0
 80158b0:	3701      	adds	r7, #1
 80158b2:	eba9 0903 	sub.w	r9, r9, r3
 80158b6:	a80f      	add	r0, sp, #60	; 0x3c
 80158b8:	b236      	sxth	r6, r6
 80158ba:	b2bf      	uxth	r7, r7
 80158bc:	fa0f f989 	sxth.w	r9, r9
 80158c0:	f005 f88f 	bl	801a9e2 <_ZN8touchgfx12TextProvider11endOfStringEv>
 80158c4:	b918      	cbnz	r0, 80158ce <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80158c6:	7a2b      	ldrb	r3, [r5, #8]
 80158c8:	444b      	add	r3, r9
 80158ca:	2b00      	cmp	r3, #0
 80158cc:	dcde      	bgt.n	801588c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 80158ce:	9b03      	ldr	r3, [sp, #12]
 80158d0:	9a04      	ldr	r2, [sp, #16]
 80158d2:	f895 9009 	ldrb.w	r9, [r5, #9]
 80158d6:	fb13 f707 	smulbb	r7, r3, r7
 80158da:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80158dc:	1aff      	subs	r7, r7, r3
 80158de:	b2bf      	uxth	r7, r7
 80158e0:	b23b      	sxth	r3, r7
 80158e2:	429a      	cmp	r2, r3
 80158e4:	bfa8      	it	ge
 80158e6:	4657      	movge	r7, sl
 80158e8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80158ec:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80158f0:	6823      	ldr	r3, [r4, #0]
 80158f2:	bf08      	it	eq
 80158f4:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 80158f8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80158fa:	bf18      	it	ne
 80158fc:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8015900:	4620      	mov	r0, r4
 8015902:	4798      	blx	r3
 8015904:	444f      	add	r7, r9
 8015906:	fa1f f987 	uxth.w	r9, r7
 801590a:	2801      	cmp	r0, #1
 801590c:	fa0f f789 	sxth.w	r7, r9
 8015910:	b2b3      	uxth	r3, r6
 8015912:	f000 80e1 	beq.w	8015ad8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8015916:	2802      	cmp	r0, #2
 8015918:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 801591c:	f000 80e2 	beq.w	8015ae4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8015920:	7aea      	ldrb	r2, [r5, #11]
 8015922:	7b2d      	ldrb	r5, [r5, #12]
 8015924:	b236      	sxth	r6, r6
 8015926:	1ab6      	subs	r6, r6, r2
 8015928:	442a      	add	r2, r5
 801592a:	4413      	add	r3, r2
 801592c:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8015930:	fa1f fa86 	uxth.w	sl, r6
 8015934:	b29b      	uxth	r3, r3
 8015936:	2a02      	cmp	r2, #2
 8015938:	fa0f fb8a 	sxth.w	fp, sl
 801593c:	b21e      	sxth	r6, r3
 801593e:	f000 80d5 	beq.w	8015aec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8015942:	2a03      	cmp	r2, #3
 8015944:	f000 80dd 	beq.w	8015b02 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8015948:	2a01      	cmp	r2, #1
 801594a:	f040 80e5 	bne.w	8015b18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 801594e:	8925      	ldrh	r5, [r4, #8]
 8015950:	4633      	mov	r3, r6
 8015952:	eba5 0909 	sub.w	r9, r5, r9
 8015956:	463e      	mov	r6, r7
 8015958:	465d      	mov	r5, fp
 801595a:	461f      	mov	r7, r3
 801595c:	fa0f fb89 	sxth.w	fp, r9
 8015960:	4b5c      	ldr	r3, [pc, #368]	; (8015ad4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8015962:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015964:	6818      	ldr	r0, [r3, #0]
 8015966:	f7fa f8c1 	bl	800faec <_ZNK8touchgfx5Texts7getTextEt>
 801596a:	f8a8 b000 	strh.w	fp, [r8]
 801596e:	f8a8 5002 	strh.w	r5, [r8, #2]
 8015972:	f8a8 6004 	strh.w	r6, [r8, #4]
 8015976:	f8a8 7006 	strh.w	r7, [r8, #6]
 801597a:	f8c8 0008 	str.w	r0, [r8, #8]
 801597e:	e737      	b.n	80157f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8015980:	f005 f808 	bl	801a994 <_ZN8touchgfx12TextProviderC1Ev>
 8015984:	682b      	ldr	r3, [r5, #0]
 8015986:	4628      	mov	r0, r5
 8015988:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801598a:	4798      	blx	r3
 801598c:	682b      	ldr	r3, [r5, #0]
 801598e:	4607      	mov	r7, r0
 8015990:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015992:	4628      	mov	r0, r5
 8015994:	4798      	blx	r3
 8015996:	6823      	ldr	r3, [r4, #0]
 8015998:	4683      	mov	fp, r0
 801599a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801599c:	4620      	mov	r0, r4
 801599e:	4798      	blx	r3
 80159a0:	6822      	ldr	r2, [r4, #0]
 80159a2:	9005      	str	r0, [sp, #20]
 80159a4:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80159a8:	4620      	mov	r0, r4
 80159aa:	4790      	blx	r2
 80159ac:	9b05      	ldr	r3, [sp, #20]
 80159ae:	9001      	str	r0, [sp, #4]
 80159b0:	463a      	mov	r2, r7
 80159b2:	4649      	mov	r1, r9
 80159b4:	9300      	str	r3, [sp, #0]
 80159b6:	a80f      	add	r0, sp, #60	; 0x3c
 80159b8:	465b      	mov	r3, fp
 80159ba:	f005 f85b 	bl	801aa74 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80159be:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80159c2:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 80159c6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80159c8:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 80159cc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80159d0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80159d4:	bf0a      	itet	eq
 80159d6:	464a      	moveq	r2, r9
 80159d8:	461a      	movne	r2, r3
 80159da:	4699      	moveq	r9, r3
 80159dc:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 80159e0:	1ad2      	subs	r2, r2, r3
 80159e2:	6833      	ldr	r3, [r6, #0]
 80159e4:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 80159e8:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80159ec:	af0f      	add	r7, sp, #60	; 0x3c
 80159ee:	7859      	ldrb	r1, [r3, #1]
 80159f0:	9707      	str	r7, [sp, #28]
 80159f2:	2300      	movs	r3, #0
 80159f4:	f3c1 0181 	ubfx	r1, r1, #2, #2
 80159f8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80159fc:	f88d 1020 	strb.w	r1, [sp, #32]
 8015a00:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8015a04:	9509      	str	r5, [sp, #36]	; 0x24
 8015a06:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8015a0a:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8015a0e:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8015a12:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015a16:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8015a1a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015a1e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8015a22:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015a26:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8015a2a:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8015a2e:	b350      	cbz	r0, 8015a86 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015a30:	682b      	ldr	r3, [r5, #0]
 8015a32:	4628      	mov	r0, r5
 8015a34:	695b      	ldr	r3, [r3, #20]
 8015a36:	4798      	blx	r3
 8015a38:	4607      	mov	r7, r0
 8015a3a:	b320      	cbz	r0, 8015a86 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015a3c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015a3e:	6803      	ldr	r3, [r0, #0]
 8015a40:	4639      	mov	r1, r7
 8015a42:	68db      	ldr	r3, [r3, #12]
 8015a44:	4798      	blx	r3
 8015a46:	4606      	mov	r6, r0
 8015a48:	b1e8      	cbz	r0, 8015a86 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015a4a:	7b43      	ldrb	r3, [r0, #13]
 8015a4c:	7a82      	ldrb	r2, [r0, #10]
 8015a4e:	005b      	lsls	r3, r3, #1
 8015a50:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015a54:	4313      	orrs	r3, r2
 8015a56:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8015a5a:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8015a5e:	2b06      	cmp	r3, #6
 8015a60:	d111      	bne.n	8015a86 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015a62:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015a64:	6803      	ldr	r3, [r0, #0]
 8015a66:	4632      	mov	r2, r6
 8015a68:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015a6a:	4639      	mov	r1, r7
 8015a6c:	4798      	blx	r3
 8015a6e:	7b73      	ldrb	r3, [r6, #13]
 8015a70:	005b      	lsls	r3, r3, #1
 8015a72:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015a76:	7ab3      	ldrb	r3, [r6, #10]
 8015a78:	4313      	orrs	r3, r2
 8015a7a:	4418      	add	r0, r3
 8015a7c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8015a80:	4418      	add	r0, r3
 8015a82:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8015a86:	2600      	movs	r6, #0
 8015a88:	4637      	mov	r7, r6
 8015a8a:	a806      	add	r0, sp, #24
 8015a8c:	f002 fbba 	bl	8018204 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015a90:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8015a94:	9b03      	ldr	r3, [sp, #12]
 8015a96:	4286      	cmp	r6, r0
 8015a98:	eba9 0903 	sub.w	r9, r9, r3
 8015a9c:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8015aa0:	bfb8      	it	lt
 8015aa2:	4606      	movlt	r6, r0
 8015aa4:	3701      	adds	r7, #1
 8015aa6:	b236      	sxth	r6, r6
 8015aa8:	b2bf      	uxth	r7, r7
 8015aaa:	fa0f f989 	sxth.w	r9, r9
 8015aae:	2b00      	cmp	r3, #0
 8015ab0:	f43f af0d 	beq.w	80158ce <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8015ab4:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8015ab8:	2b00      	cmp	r3, #0
 8015aba:	f47f af08 	bne.w	80158ce <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8015abe:	7a2b      	ldrb	r3, [r5, #8]
 8015ac0:	444b      	add	r3, r9
 8015ac2:	2b00      	cmp	r3, #0
 8015ac4:	dce1      	bgt.n	8015a8a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8015ac6:	e702      	b.n	80158ce <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8015ac8:	20002384 	.word	0x20002384
 8015acc:	20002380 	.word	0x20002380
 8015ad0:	20002388 	.word	0x20002388
 8015ad4:	2000238c 	.word	0x2000238c
 8015ad8:	ebaa 0606 	sub.w	r6, sl, r6
 8015adc:	2002      	movs	r0, #2
 8015ade:	fb96 f6f0 	sdiv	r6, r6, r0
 8015ae2:	e71d      	b.n	8015920 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8015ae4:	441e      	add	r6, r3
 8015ae6:	ebaa 0606 	sub.w	r6, sl, r6
 8015aea:	e719      	b.n	8015920 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8015aec:	8925      	ldrh	r5, [r4, #8]
 8015aee:	1aed      	subs	r5, r5, r3
 8015af0:	eba5 050a 	sub.w	r5, r5, sl
 8015af4:	fa0f fb85 	sxth.w	fp, r5
 8015af8:	8965      	ldrh	r5, [r4, #10]
 8015afa:	eba5 0509 	sub.w	r5, r5, r9
 8015afe:	b22d      	sxth	r5, r5
 8015b00:	e72e      	b.n	8015960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8015b02:	8965      	ldrh	r5, [r4, #10]
 8015b04:	1aed      	subs	r5, r5, r3
 8015b06:	eba5 050a 	sub.w	r5, r5, sl
 8015b0a:	4633      	mov	r3, r6
 8015b0c:	b22d      	sxth	r5, r5
 8015b0e:	463e      	mov	r6, r7
 8015b10:	f04f 0b00 	mov.w	fp, #0
 8015b14:	461f      	mov	r7, r3
 8015b16:	e723      	b.n	8015960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8015b18:	2500      	movs	r5, #0
 8015b1a:	e721      	b.n	8015960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08015b1c <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8015b1c:	b513      	push	{r0, r1, r4, lr}
 8015b1e:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8015b22:	4604      	mov	r4, r0
 8015b24:	b1fb      	cbz	r3, 8015b66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8015b26:	4b16      	ldr	r3, [pc, #88]	; (8015b80 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8015b28:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8015b2a:	881b      	ldrh	r3, [r3, #0]
 8015b2c:	428b      	cmp	r3, r1
 8015b2e:	d91a      	bls.n	8015b66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8015b30:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8015b34:	2b00      	cmp	r3, #0
 8015b36:	dd16      	ble.n	8015b66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8015b38:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015b3c:	2b00      	cmp	r3, #0
 8015b3e:	dd12      	ble.n	8015b66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8015b40:	4b10      	ldr	r3, [pc, #64]	; (8015b84 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8015b42:	6818      	ldr	r0, [r3, #0]
 8015b44:	f7f9 ffd2 	bl	800faec <_ZNK8touchgfx5Texts7getTextEt>
 8015b48:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8015b4c:	6822      	ldr	r2, [r4, #0]
 8015b4e:	2b00      	cmp	r3, #0
 8015b50:	db06      	blt.n	8015b60 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8015b52:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8015b56:	2b00      	cmp	r3, #0
 8015b58:	db02      	blt.n	8015b60 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8015b5a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8015b5c:	4298      	cmp	r0, r3
 8015b5e:	d004      	beq.n	8015b6a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8015b60:	6953      	ldr	r3, [r2, #20]
 8015b62:	4620      	mov	r0, r4
 8015b64:	4798      	blx	r3
 8015b66:	b002      	add	sp, #8
 8015b68:	bd10      	pop	{r4, pc}
 8015b6a:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8015b6e:	c903      	ldmia	r1, {r0, r1}
 8015b70:	466b      	mov	r3, sp
 8015b72:	e883 0003 	stmia.w	r3, {r0, r1}
 8015b76:	6912      	ldr	r2, [r2, #16]
 8015b78:	4619      	mov	r1, r3
 8015b7a:	4620      	mov	r0, r4
 8015b7c:	4790      	blx	r2
 8015b7e:	e7f2      	b.n	8015b66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8015b80:	20002384 	.word	0x20002384
 8015b84:	2000238c 	.word	0x2000238c

08015b88 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8015b88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015b8c:	4b44      	ldr	r3, [pc, #272]	; (8015ca0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8015b8e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8015b90:	881b      	ldrh	r3, [r3, #0]
 8015b92:	4293      	cmp	r3, r2
 8015b94:	b08e      	sub	sp, #56	; 0x38
 8015b96:	4604      	mov	r4, r0
 8015b98:	d97e      	bls.n	8015c98 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8015b9a:	6808      	ldr	r0, [r1, #0]
 8015b9c:	4d41      	ldr	r5, [pc, #260]	; (8015ca4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8015b9e:	6849      	ldr	r1, [r1, #4]
 8015ba0:	ab05      	add	r3, sp, #20
 8015ba2:	c303      	stmia	r3!, {r0, r1}
 8015ba4:	4611      	mov	r1, r2
 8015ba6:	6828      	ldr	r0, [r5, #0]
 8015ba8:	f7f9 ffa0 	bl	800faec <_ZNK8touchgfx5Texts7getTextEt>
 8015bac:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8015bb0:	2b00      	cmp	r3, #0
 8015bb2:	db11      	blt.n	8015bd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8015bb4:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8015bb8:	2b00      	cmp	r3, #0
 8015bba:	db0d      	blt.n	8015bd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8015bbc:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8015bbe:	4298      	cmp	r0, r3
 8015bc0:	d10a      	bne.n	8015bd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8015bc2:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8015bc6:	e892 0003 	ldmia.w	r2, {r0, r1}
 8015bca:	ab09      	add	r3, sp, #36	; 0x24
 8015bcc:	e883 0003 	stmia.w	r3, {r0, r1}
 8015bd0:	4619      	mov	r1, r3
 8015bd2:	a805      	add	r0, sp, #20
 8015bd4:	f7fd f8c4 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 8015bd8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015bdc:	2b00      	cmp	r3, #0
 8015bde:	dd5b      	ble.n	8015c98 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8015be0:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8015be4:	2b00      	cmp	r3, #0
 8015be6:	dd57      	ble.n	8015c98 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8015be8:	4f2f      	ldr	r7, [pc, #188]	; (8015ca8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8015bea:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8015bec:	683b      	ldr	r3, [r7, #0]
 8015bee:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8015bf2:	4b2e      	ldr	r3, [pc, #184]	; (8015cac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8015bf4:	681b      	ldr	r3, [r3, #0]
 8015bf6:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8015bfa:	2e00      	cmp	r6, #0
 8015bfc:	d04c      	beq.n	8015c98 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8015bfe:	6823      	ldr	r3, [r4, #0]
 8015c00:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8015c04:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015c06:	4620      	mov	r0, r4
 8015c08:	4798      	blx	r3
 8015c0a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8015c0c:	683b      	ldr	r3, [r7, #0]
 8015c0e:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8015c12:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8015c16:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8015c1a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8015c1c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8015c20:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8015c24:	785b      	ldrb	r3, [r3, #1]
 8015c26:	9609      	str	r6, [sp, #36]	; 0x24
 8015c28:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8015c2c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8015c30:	4b1f      	ldr	r3, [pc, #124]	; (8015cb0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8015c32:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8015c36:	681b      	ldr	r3, [r3, #0]
 8015c38:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8015c3c:	910b      	str	r1, [sp, #44]	; 0x2c
 8015c3e:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8015c42:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8015c46:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8015c4a:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8015c4e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015c52:	b10a      	cbz	r2, 8015c58 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8015c54:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8015c56:	b906      	cbnz	r6, 8015c5a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8015c58:	689e      	ldr	r6, [r3, #8]
 8015c5a:	af07      	add	r7, sp, #28
 8015c5c:	4621      	mov	r1, r4
 8015c5e:	4638      	mov	r0, r7
 8015c60:	f004 f9d4 	bl	801a00c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015c64:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015c66:	6828      	ldr	r0, [r5, #0]
 8015c68:	f7f9 ff40 	bl	800faec <_ZNK8touchgfx5Texts7getTextEt>
 8015c6c:	6823      	ldr	r3, [r4, #0]
 8015c6e:	4605      	mov	r5, r0
 8015c70:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8015c72:	4620      	mov	r0, r4
 8015c74:	4798      	blx	r3
 8015c76:	6823      	ldr	r3, [r4, #0]
 8015c78:	4680      	mov	r8, r0
 8015c7a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8015c7e:	4620      	mov	r0, r4
 8015c80:	4798      	blx	r3
 8015c82:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8015c86:	ab09      	add	r3, sp, #36	; 0x24
 8015c88:	9300      	str	r3, [sp, #0]
 8015c8a:	9501      	str	r5, [sp, #4]
 8015c8c:	ab05      	add	r3, sp, #20
 8015c8e:	e897 0006 	ldmia.w	r7, {r1, r2}
 8015c92:	4630      	mov	r0, r6
 8015c94:	f7f9 febb 	bl	800fa0e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8015c98:	b00e      	add	sp, #56	; 0x38
 8015c9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015c9e:	bf00      	nop
 8015ca0:	20002384 	.word	0x20002384
 8015ca4:	2000238c 	.word	0x2000238c
 8015ca8:	20002380 	.word	0x20002380
 8015cac:	20002388 	.word	0x20002388
 8015cb0:	20002328 	.word	0x20002328

08015cb4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8015cb4:	b538      	push	{r3, r4, r5, lr}
 8015cb6:	4b0e      	ldr	r3, [pc, #56]	; (8015cf0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8015cb8:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8015cba:	881b      	ldrh	r3, [r3, #0]
 8015cbc:	429a      	cmp	r2, r3
 8015cbe:	4604      	mov	r4, r0
 8015cc0:	d214      	bcs.n	8015cec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8015cc2:	6803      	ldr	r3, [r0, #0]
 8015cc4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8015cc6:	4798      	blx	r3
 8015cc8:	6823      	ldr	r3, [r4, #0]
 8015cca:	4605      	mov	r5, r0
 8015ccc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8015cce:	4620      	mov	r0, r4
 8015cd0:	4798      	blx	r3
 8015cd2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015cd6:	b22d      	sxth	r5, r5
 8015cd8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8015cdc:	4601      	mov	r1, r0
 8015cde:	bf06      	itte	eq
 8015ce0:	4602      	moveq	r2, r0
 8015ce2:	4629      	moveq	r1, r5
 8015ce4:	462a      	movne	r2, r5
 8015ce6:	4620      	mov	r0, r4
 8015ce8:	f7f3 fe1f 	bl	800992a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8015cec:	bd38      	pop	{r3, r4, r5, pc}
 8015cee:	bf00      	nop
 8015cf0:	20002384 	.word	0x20002384

08015cf4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8015cf4:	b530      	push	{r4, r5, lr}
 8015cf6:	888b      	ldrh	r3, [r1, #4]
 8015cf8:	8583      	strh	r3, [r0, #44]	; 0x2c
 8015cfa:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8015cfe:	b085      	sub	sp, #20
 8015d00:	4604      	mov	r4, r0
 8015d02:	b923      	cbnz	r3, 8015d0e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8015d04:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015d08:	b90b      	cbnz	r3, 8015d0e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8015d0a:	f7ff ffd3 	bl	8015cb4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8015d0e:	6823      	ldr	r3, [r4, #0]
 8015d10:	466d      	mov	r5, sp
 8015d12:	4621      	mov	r1, r4
 8015d14:	4628      	mov	r0, r5
 8015d16:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8015d1a:	4798      	blx	r3
 8015d1c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8015d20:	343c      	adds	r4, #60	; 0x3c
 8015d22:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8015d26:	b005      	add	sp, #20
 8015d28:	bd30      	pop	{r4, r5, pc}

08015d2a <_ZNK8touchgfx3Box12getSolidRectEv>:
 8015d2a:	2300      	movs	r3, #0
 8015d2c:	8083      	strh	r3, [r0, #4]
 8015d2e:	80c3      	strh	r3, [r0, #6]
 8015d30:	8003      	strh	r3, [r0, #0]
 8015d32:	8043      	strh	r3, [r0, #2]
 8015d34:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8015d38:	2bff      	cmp	r3, #255	; 0xff
 8015d3a:	bf01      	itttt	eq
 8015d3c:	890b      	ldrheq	r3, [r1, #8]
 8015d3e:	8083      	strheq	r3, [r0, #4]
 8015d40:	894b      	ldrheq	r3, [r1, #10]
 8015d42:	80c3      	strheq	r3, [r0, #6]
 8015d44:	4770      	bx	lr
	...

08015d48 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8015d48:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015d4a:	4604      	mov	r4, r0
 8015d4c:	6808      	ldr	r0, [r1, #0]
 8015d4e:	6849      	ldr	r1, [r1, #4]
 8015d50:	466b      	mov	r3, sp
 8015d52:	c303      	stmia	r3!, {r0, r1}
 8015d54:	6823      	ldr	r3, [r4, #0]
 8015d56:	4669      	mov	r1, sp
 8015d58:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015d5a:	4620      	mov	r0, r4
 8015d5c:	4798      	blx	r3
 8015d5e:	4b08      	ldr	r3, [pc, #32]	; (8015d80 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8015d60:	681b      	ldr	r3, [r3, #0]
 8015d62:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015d66:	b10a      	cbz	r2, 8015d6c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8015d68:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015d6a:	b900      	cbnz	r0, 8015d6e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8015d6c:	6898      	ldr	r0, [r3, #8]
 8015d6e:	6803      	ldr	r3, [r0, #0]
 8015d70:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8015d72:	6a1d      	ldr	r5, [r3, #32]
 8015d74:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8015d78:	4669      	mov	r1, sp
 8015d7a:	47a8      	blx	r5
 8015d7c:	b003      	add	sp, #12
 8015d7e:	bd30      	pop	{r4, r5, pc}
 8015d80:	20002328 	.word	0x20002328

08015d84 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8015d84:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8015d88:	b12a      	cbz	r2, 8015d96 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8015d8a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8015d8e:	b112      	cbz	r2, 8015d96 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8015d90:	6803      	ldr	r3, [r0, #0]
 8015d92:	695b      	ldr	r3, [r3, #20]
 8015d94:	4718      	bx	r3
 8015d96:	4770      	bx	lr

08015d98 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8015d98:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8015d9c:	600b      	str	r3, [r1, #0]
 8015d9e:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8015da2:	6013      	str	r3, [r2, #0]
 8015da4:	4770      	bx	lr

08015da6 <_ZN8touchgfx5Gauge8setWidthEs>:
 8015da6:	8101      	strh	r1, [r0, #8]
 8015da8:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8015dac:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8015db0:	4770      	bx	lr

08015db2 <_ZN8touchgfx5Gauge9setHeightEs>:
 8015db2:	8141      	strh	r1, [r0, #10]
 8015db4:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8015db8:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8015dbc:	4770      	bx	lr

08015dbe <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8015dbe:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8015dc2:	4770      	bx	lr

08015dc4 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8015dc4:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8015dc8:	4770      	bx	lr

08015dca <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8015dca:	4770      	bx	lr

08015dcc <_ZN8touchgfx5Gauge8setAlphaEh>:
 8015dcc:	b538      	push	{r3, r4, r5, lr}
 8015dce:	4604      	mov	r4, r0
 8015dd0:	460d      	mov	r5, r1
 8015dd2:	f7fc fb36 	bl	8012442 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8015dd6:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8015dda:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8015dde:	bd38      	pop	{r3, r4, r5, pc}

08015de0 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8015de0:	b510      	push	{r4, lr}
 8015de2:	6803      	ldr	r3, [r0, #0]
 8015de4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8015de8:	4604      	mov	r4, r0
 8015dea:	4798      	blx	r3
 8015dec:	b170      	cbz	r0, 8015e0c <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8015dee:	6823      	ldr	r3, [r4, #0]
 8015df0:	4620      	mov	r0, r4
 8015df2:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8015df6:	4798      	blx	r3
 8015df8:	b140      	cbz	r0, 8015e0c <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8015dfa:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8015dfe:	b12b      	cbz	r3, 8015e0c <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8015e00:	6823      	ldr	r3, [r4, #0]
 8015e02:	4620      	mov	r0, r4
 8015e04:	695b      	ldr	r3, [r3, #20]
 8015e06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015e0a:	4718      	bx	r3
 8015e0c:	bd10      	pop	{r4, pc}
	...

08015e10 <_ZN8touchgfx5GaugeC1Ev>:
 8015e10:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8015e12:	4604      	mov	r4, r0
 8015e14:	4626      	mov	r6, r4
 8015e16:	f7fc fc07 	bl	8012628 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8015e1a:	4b18      	ldr	r3, [pc, #96]	; (8015e7c <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8015e1c:	f846 3bb4 	str.w	r3, [r6], #180
 8015e20:	a902      	add	r1, sp, #8
 8015e22:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015e26:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8015e2a:	4630      	mov	r0, r6
 8015e2c:	f7fe fe90 	bl	8014b50 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8015e30:	2500      	movs	r5, #0
 8015e32:	2301      	movs	r3, #1
 8015e34:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8015e38:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8015e3c:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8015e40:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8015e44:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8015e48:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8015e4c:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8015e50:	4638      	mov	r0, r7
 8015e52:	f7fd fff9 	bl	8013e48 <_ZN8touchgfx6CircleC1Ev>
 8015e56:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8015e5a:	4620      	mov	r0, r4
 8015e5c:	f7fc fe3b 	bl	8012ad6 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8015e60:	4639      	mov	r1, r7
 8015e62:	4620      	mov	r0, r4
 8015e64:	f7fc fdfe 	bl	8012a64 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015e68:	4620      	mov	r0, r4
 8015e6a:	4631      	mov	r1, r6
 8015e6c:	f7fc fdfa 	bl	8012a64 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015e70:	4620      	mov	r0, r4
 8015e72:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8015e76:	b003      	add	sp, #12
 8015e78:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015e7a:	bf00      	nop
 8015e7c:	0802f464 	.word	0x0802f464

08015e80 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8015e80:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8015e84:	4770      	bx	lr

08015e86 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8015e86:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8015e8a:	4770      	bx	lr

08015e8c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8015e8c:	b538      	push	{r3, r4, r5, lr}
 8015e8e:	8902      	ldrh	r2, [r0, #8]
 8015e90:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015e94:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8015e98:	4604      	mov	r4, r0
 8015e9a:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8015e9e:	2200      	movs	r2, #0
 8015ea0:	4611      	mov	r1, r2
 8015ea2:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8015ea6:	4628      	mov	r0, r5
 8015ea8:	f7f3 fce3 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
 8015eac:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8015eb0:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8015eb4:	1a9b      	subs	r3, r3, r2
 8015eb6:	ee07 3a90 	vmov	s15, r3
 8015eba:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8015ebe:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8015ec2:	1a9b      	subs	r3, r3, r2
 8015ec4:	ee07 3a10 	vmov	s14, r3
 8015ec8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015ecc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015ed0:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8015ed4:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8015ed8:	4628      	mov	r0, r5
 8015eda:	f7fe fe85 	bl	8014be8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015ede:	4b16      	ldr	r3, [pc, #88]	; (8015f38 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8015ee0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8015ee4:	4628      	mov	r0, r5
 8015ee6:	f7fe fe7f 	bl	8014be8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015eea:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8015eee:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8015ef2:	ee07 3a90 	vmov	s15, r3
 8015ef6:	ee07 2a10 	vmov	s14, r2
 8015efa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015efe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015f02:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8015f06:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8015f0a:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8015f0e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8015f12:	4628      	mov	r0, r5
 8015f14:	f7fe fe68 	bl	8014be8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015f18:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8015f1c:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8015f20:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8015f24:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8015f28:	4628      	mov	r0, r5
 8015f2a:	f7fe fe5d 	bl	8014be8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015f2e:	2301      	movs	r3, #1
 8015f30:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8015f34:	bd38      	pop	{r3, r4, r5, pc}
 8015f36:	bf00      	nop
 8015f38:	43960000 	.word	0x43960000

08015f3c <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8015f3c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8015f3e:	4604      	mov	r4, r0
 8015f40:	a802      	add	r0, sp, #8
 8015f42:	4616      	mov	r6, r2
 8015f44:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8015f48:	461d      	mov	r5, r3
 8015f4a:	4601      	mov	r1, r0
 8015f4c:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8015f50:	f7fe ffa0 	bl	8014e94 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8015f54:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8015f58:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8015f5c:	4620      	mov	r0, r4
 8015f5e:	f7ff ff95 	bl	8015e8c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8015f62:	b002      	add	sp, #8
 8015f64:	bd70      	pop	{r4, r5, r6, pc}

08015f66 <_ZN8touchgfx5Gauge9setCenterEii>:
 8015f66:	b570      	push	{r4, r5, r6, lr}
 8015f68:	4606      	mov	r6, r0
 8015f6a:	460d      	mov	r5, r1
 8015f6c:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8015f70:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8015f74:	4614      	mov	r4, r2
 8015f76:	f7ff ff89 	bl	8015e8c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8015f7a:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8015f7e:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8015f82:	1aa4      	subs	r4, r4, r2
 8015f84:	1a6d      	subs	r5, r5, r1
 8015f86:	0164      	lsls	r4, r4, #5
 8015f88:	016d      	lsls	r5, r5, #5
 8015f8a:	3410      	adds	r4, #16
 8015f8c:	3510      	adds	r5, #16
 8015f8e:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8015f92:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8015f96:	bd70      	pop	{r4, r5, r6, pc}

08015f98 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8015f98:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8015f9a:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8015f9c:	0149      	lsls	r1, r1, #5
 8015f9e:	4299      	cmp	r1, r3
 8015fa0:	4604      	mov	r4, r0
 8015fa2:	9101      	str	r1, [sp, #4]
 8015fa4:	d00b      	beq.n	8015fbe <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8015fa6:	4601      	mov	r1, r0
 8015fa8:	aa01      	add	r2, sp, #4
 8015faa:	a802      	add	r0, sp, #8
 8015fac:	f7fe f94a 	bl	8014244 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8015fb0:	9b01      	ldr	r3, [sp, #4]
 8015fb2:	63e3      	str	r3, [r4, #60]	; 0x3c
 8015fb4:	6823      	ldr	r3, [r4, #0]
 8015fb6:	a902      	add	r1, sp, #8
 8015fb8:	691b      	ldr	r3, [r3, #16]
 8015fba:	4620      	mov	r0, r4
 8015fbc:	4798      	blx	r3
 8015fbe:	b004      	add	sp, #16
 8015fc0:	bd10      	pop	{r4, pc}
	...

08015fc4 <_ZN8touchgfx5Gauge8setValueEi>:
 8015fc4:	b570      	push	{r4, r5, r6, lr}
 8015fc6:	4604      	mov	r4, r0
 8015fc8:	f7fc fa86 	bl	80124d8 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8015fcc:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8015fd0:	429a      	cmp	r2, r3
 8015fd2:	bfac      	ite	ge
 8015fd4:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8015fd8:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8015fdc:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8015fe0:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8015fe4:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8015fe8:	1ac9      	subs	r1, r1, r3
 8015fea:	2900      	cmp	r1, #0
 8015fec:	bfb8      	it	lt
 8015fee:	4249      	neglt	r1, r1
 8015ff0:	b289      	uxth	r1, r1
 8015ff2:	4620      	mov	r0, r4
 8015ff4:	f7fc fa92 	bl	801251c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8015ff8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8015ffc:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8016000:	eddf 6a19 	vldr	s13, [pc, #100]	; 8016068 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8016004:	ed9f 7a19 	vldr	s14, [pc, #100]	; 801606c <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8016008:	429a      	cmp	r2, r3
 801600a:	4605      	mov	r5, r0
 801600c:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8016010:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8016014:	da15      	bge.n	8016042 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8016016:	1b5b      	subs	r3, r3, r5
 8016018:	ee07 3a90 	vmov	s15, r3
 801601c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016020:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8016024:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8016028:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 801602c:	ee21 1a07 	vmul.f32	s2, s2, s14
 8016030:	f7fe fd50 	bl	8014ad4 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8016034:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8016038:	1b49      	subs	r1, r1, r5
 801603a:	4630      	mov	r0, r6
 801603c:	f7ff ffac 	bl	8015f98 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8016040:	bd70      	pop	{r4, r5, r6, pc}
 8016042:	442b      	add	r3, r5
 8016044:	ee07 3a90 	vmov	s15, r3
 8016048:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801604c:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8016050:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8016054:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8016058:	ee21 1a07 	vmul.f32	s2, s2, s14
 801605c:	f7fe fd3a 	bl	8014ad4 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8016060:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8016064:	4429      	add	r1, r5
 8016066:	e7e8      	b.n	801603a <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8016068:	43340000 	.word	0x43340000
 801606c:	40490fdb 	.word	0x40490fdb

08016070 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8016070:	b510      	push	{r4, lr}
 8016072:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8016076:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 801607a:	0149      	lsls	r1, r1, #5
 801607c:	0152      	lsls	r2, r2, #5
 801607e:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8016082:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8016086:	4604      	mov	r4, r0
 8016088:	f7fc f9d8 	bl	801243c <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 801608c:	4601      	mov	r1, r0
 801608e:	4620      	mov	r0, r4
 8016090:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016094:	f7ff bf96 	b.w	8015fc4 <_ZN8touchgfx5Gauge8setValueEi>

08016098 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8016098:	b570      	push	{r4, r5, r6, lr}
 801609a:	880b      	ldrh	r3, [r1, #0]
 801609c:	85c3      	strh	r3, [r0, #46]	; 0x2e
 801609e:	4605      	mov	r5, r0
 80160a0:	8813      	ldrh	r3, [r2, #0]
 80160a2:	f825 3f30 	strh.w	r3, [r5, #48]!
 80160a6:	4604      	mov	r4, r0
 80160a8:	4628      	mov	r0, r5
 80160aa:	f006 f955 	bl	801c358 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80160ae:	4606      	mov	r6, r0
 80160b0:	4628      	mov	r0, r5
 80160b2:	f006 f985 	bl	801c3c0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80160b6:	6823      	ldr	r3, [r4, #0]
 80160b8:	4605      	mov	r5, r0
 80160ba:	4631      	mov	r1, r6
 80160bc:	4620      	mov	r0, r4
 80160be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80160c0:	4798      	blx	r3
 80160c2:	6823      	ldr	r3, [r4, #0]
 80160c4:	4629      	mov	r1, r5
 80160c6:	4620      	mov	r0, r4
 80160c8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80160ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80160ce:	4718      	bx	r3

080160d0 <_ZNK8touchgfx6Button12getSolidRectEv>:
 80160d0:	b510      	push	{r4, lr}
 80160d2:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 80160d6:	2bff      	cmp	r3, #255	; 0xff
 80160d8:	4604      	mov	r4, r0
 80160da:	d006      	beq.n	80160ea <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80160dc:	2300      	movs	r3, #0
 80160de:	8003      	strh	r3, [r0, #0]
 80160e0:	8043      	strh	r3, [r0, #2]
 80160e2:	8083      	strh	r3, [r0, #4]
 80160e4:	80c3      	strh	r3, [r0, #6]
 80160e6:	4620      	mov	r0, r4
 80160e8:	bd10      	pop	{r4, pc}
 80160ea:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 80160ee:	b11b      	cbz	r3, 80160f8 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 80160f0:	3130      	adds	r1, #48	; 0x30
 80160f2:	f006 f999 	bl	801c428 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80160f6:	e7f6      	b.n	80160e6 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 80160f8:	312e      	adds	r1, #46	; 0x2e
 80160fa:	e7fa      	b.n	80160f2 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

080160fc <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 80160fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016100:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8016104:	b08a      	sub	sp, #40	; 0x28
 8016106:	4604      	mov	r4, r0
 8016108:	4688      	mov	r8, r1
 801610a:	2b00      	cmp	r3, #0
 801610c:	d066      	beq.n	80161dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801610e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8016110:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016114:	a805      	add	r0, sp, #20
 8016116:	f006 f91f 	bl	801c358 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801611a:	4607      	mov	r7, r0
 801611c:	a805      	add	r0, sp, #20
 801611e:	f006 f94f 	bl	801c3c0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016122:	f9b8 6000 	ldrsh.w	r6, [r8]
 8016126:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 801612a:	4432      	add	r2, r6
 801612c:	b292      	uxth	r2, r2
 801612e:	2300      	movs	r3, #0
 8016130:	fa0f fc82 	sxth.w	ip, r2
 8016134:	459c      	cmp	ip, r3
 8016136:	9306      	str	r3, [sp, #24]
 8016138:	dd52      	ble.n	80161e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801613a:	42b7      	cmp	r7, r6
 801613c:	dd50      	ble.n	80161e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801613e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8016142:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8016146:	442b      	add	r3, r5
 8016148:	b29b      	uxth	r3, r3
 801614a:	b219      	sxth	r1, r3
 801614c:	2900      	cmp	r1, #0
 801614e:	dd47      	ble.n	80161e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8016150:	42a8      	cmp	r0, r5
 8016152:	dd45      	ble.n	80161e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8016154:	4567      	cmp	r7, ip
 8016156:	bfb8      	it	lt
 8016158:	b2ba      	uxthlt	r2, r7
 801615a:	4288      	cmp	r0, r1
 801615c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8016160:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8016164:	bfb8      	it	lt
 8016166:	b283      	uxthlt	r3, r0
 8016168:	1b92      	subs	r2, r2, r6
 801616a:	1b5b      	subs	r3, r3, r5
 801616c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8016170:	f8ad 301e 	strh.w	r3, [sp, #30]
 8016174:	f8ad 6018 	strh.w	r6, [sp, #24]
 8016178:	f8ad 501a 	strh.w	r5, [sp, #26]
 801617c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8016180:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8016184:	429a      	cmp	r2, r3
 8016186:	d026      	beq.n	80161d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8016188:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801618c:	2b00      	cmp	r3, #0
 801618e:	dd22      	ble.n	80161d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8016190:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8016194:	2b00      	cmp	r3, #0
 8016196:	dd1e      	ble.n	80161d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8016198:	2300      	movs	r3, #0
 801619a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801619e:	6823      	ldr	r3, [r4, #0]
 80161a0:	a908      	add	r1, sp, #32
 80161a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80161a4:	4620      	mov	r0, r4
 80161a6:	4798      	blx	r3
 80161a8:	4b0f      	ldr	r3, [pc, #60]	; (80161e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80161aa:	681b      	ldr	r3, [r3, #0]
 80161ac:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80161b0:	b10a      	cbz	r2, 80161b6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 80161b2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80161b4:	b900      	cbnz	r0, 80161b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 80161b6:	6898      	ldr	r0, [r3, #8]
 80161b8:	6801      	ldr	r1, [r0, #0]
 80161ba:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80161be:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80161c2:	2501      	movs	r5, #1
 80161c4:	9502      	str	r5, [sp, #8]
 80161c6:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80161ca:	9401      	str	r4, [sp, #4]
 80161cc:	ac06      	add	r4, sp, #24
 80161ce:	9400      	str	r4, [sp, #0]
 80161d0:	688c      	ldr	r4, [r1, #8]
 80161d2:	a905      	add	r1, sp, #20
 80161d4:	47a0      	blx	r4
 80161d6:	b00a      	add	sp, #40	; 0x28
 80161d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80161dc:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80161de:	e797      	b.n	8016110 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80161e0:	2300      	movs	r3, #0
 80161e2:	9307      	str	r3, [sp, #28]
 80161e4:	e7ca      	b.n	801617c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 80161e6:	bf00      	nop
 80161e8:	20002328 	.word	0x20002328

080161ec <_ZNK8touchgfx6Button17invalidateContentEv>:
 80161ec:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 80161f0:	b12a      	cbz	r2, 80161fe <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80161f2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80161f6:	b112      	cbz	r2, 80161fe <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80161f8:	6803      	ldr	r3, [r0, #0]
 80161fa:	695b      	ldr	r3, [r3, #20]
 80161fc:	4718      	bx	r3
 80161fe:	4770      	bx	lr

08016200 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8016200:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016204:	4b2f      	ldr	r3, [pc, #188]	; (80162c4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8016206:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8016208:	881b      	ldrh	r3, [r3, #0]
 801620a:	4293      	cmp	r3, r2
 801620c:	b08d      	sub	sp, #52	; 0x34
 801620e:	4604      	mov	r4, r0
 8016210:	460f      	mov	r7, r1
 8016212:	d954      	bls.n	80162be <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8016214:	4b2c      	ldr	r3, [pc, #176]	; (80162c8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8016216:	6819      	ldr	r1, [r3, #0]
 8016218:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 801621c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8016220:	4a2a      	ldr	r2, [pc, #168]	; (80162cc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8016222:	6812      	ldr	r2, [r2, #0]
 8016224:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8016228:	2900      	cmp	r1, #0
 801622a:	d048      	beq.n	80162be <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 801622c:	785a      	ldrb	r2, [r3, #1]
 801622e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8016232:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8016236:	4b26      	ldr	r3, [pc, #152]	; (80162d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8016238:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 801623c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8016240:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8016244:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8016246:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 801624a:	9107      	str	r1, [sp, #28]
 801624c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8016250:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8016254:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8016258:	681a      	ldr	r2, [r3, #0]
 801625a:	f88d 8020 	strb.w	r8, [sp, #32]
 801625e:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8016262:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8016266:	9609      	str	r6, [sp, #36]	; 0x24
 8016268:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 801626c:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8016270:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8016274:	b10b      	cbz	r3, 801627a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8016276:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8016278:	b905      	cbnz	r5, 801627c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 801627a:	6895      	ldr	r5, [r2, #8]
 801627c:	ae05      	add	r6, sp, #20
 801627e:	4621      	mov	r1, r4
 8016280:	4630      	mov	r0, r6
 8016282:	f003 fec3 	bl	801a00c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016286:	4b13      	ldr	r3, [pc, #76]	; (80162d4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8016288:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801628a:	6818      	ldr	r0, [r3, #0]
 801628c:	f7f9 fc2e 	bl	800faec <_ZNK8touchgfx5Texts7getTextEt>
 8016290:	6823      	ldr	r3, [r4, #0]
 8016292:	4680      	mov	r8, r0
 8016294:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8016296:	4620      	mov	r0, r4
 8016298:	4798      	blx	r3
 801629a:	6823      	ldr	r3, [r4, #0]
 801629c:	4681      	mov	r9, r0
 801629e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80162a2:	4620      	mov	r0, r4
 80162a4:	4798      	blx	r3
 80162a6:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80162aa:	ab07      	add	r3, sp, #28
 80162ac:	9300      	str	r3, [sp, #0]
 80162ae:	f8cd 8004 	str.w	r8, [sp, #4]
 80162b2:	463b      	mov	r3, r7
 80162b4:	e896 0006 	ldmia.w	r6, {r1, r2}
 80162b8:	4628      	mov	r0, r5
 80162ba:	f7f9 fba8 	bl	800fa0e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80162be:	b00d      	add	sp, #52	; 0x34
 80162c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80162c4:	20002384 	.word	0x20002384
 80162c8:	20002380 	.word	0x20002380
 80162cc:	20002388 	.word	0x20002388
 80162d0:	20002328 	.word	0x20002328
 80162d4:	2000238c 	.word	0x2000238c

080162d8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 80162d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80162dc:	4604      	mov	r4, r0
 80162de:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80162e0:	8962      	ldrh	r2, [r4, #10]
 80162e2:	b218      	sxth	r0, r3
 80162e4:	460e      	mov	r6, r1
 80162e6:	005b      	lsls	r3, r3, #1
 80162e8:	8921      	ldrh	r1, [r4, #8]
 80162ea:	b29b      	uxth	r3, r3
 80162ec:	1ac9      	subs	r1, r1, r3
 80162ee:	b08e      	sub	sp, #56	; 0x38
 80162f0:	b209      	sxth	r1, r1
 80162f2:	1ad3      	subs	r3, r2, r3
 80162f4:	b21b      	sxth	r3, r3
 80162f6:	2900      	cmp	r1, #0
 80162f8:	f8ad 0000 	strh.w	r0, [sp]
 80162fc:	f8ad 0002 	strh.w	r0, [sp, #2]
 8016300:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016304:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016308:	dd5e      	ble.n	80163c8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801630a:	2b00      	cmp	r3, #0
 801630c:	dd5c      	ble.n	80163c8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801630e:	6830      	ldr	r0, [r6, #0]
 8016310:	6871      	ldr	r1, [r6, #4]
 8016312:	ab02      	add	r3, sp, #8
 8016314:	c303      	stmia	r3!, {r0, r1}
 8016316:	4669      	mov	r1, sp
 8016318:	a802      	add	r0, sp, #8
 801631a:	f7fc fd21 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 801631e:	4620      	mov	r0, r4
 8016320:	a902      	add	r1, sp, #8
 8016322:	f7ff fd11 	bl	8015d48 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 8016326:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 8016328:	2800      	cmp	r0, #0
 801632a:	d05f      	beq.n	80163ec <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 801632c:	8963      	ldrh	r3, [r4, #10]
 801632e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8016332:	f8ad 101c 	strh.w	r1, [sp, #28]
 8016336:	1a1f      	subs	r7, r3, r0
 8016338:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 801633c:	b202      	sxth	r2, r0
 801633e:	2500      	movs	r5, #0
 8016340:	b21b      	sxth	r3, r3
 8016342:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 8016346:	1a09      	subs	r1, r1, r0
 8016348:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801634c:	9506      	str	r5, [sp, #24]
 801634e:	f8ad 201e 	strh.w	r2, [sp, #30]
 8016352:	f8ad 5020 	strh.w	r5, [sp, #32]
 8016356:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 801635a:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 801635e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8016362:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8016366:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801636a:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 801636e:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8016372:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8016376:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801637a:	af04      	add	r7, sp, #16
 801637c:	ab06      	add	r3, sp, #24
 801637e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016382:	e893 0003 	ldmia.w	r3, {r0, r1}
 8016386:	e887 0003 	stmia.w	r7, {r0, r1}
 801638a:	4631      	mov	r1, r6
 801638c:	4638      	mov	r0, r7
 801638e:	f7fc fce7 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 8016392:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8016396:	2b00      	cmp	r3, #0
 8016398:	dd12      	ble.n	80163c0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 801639a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801639e:	2b00      	cmp	r3, #0
 80163a0:	dd0e      	ble.n	80163c0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80163a2:	6823      	ldr	r3, [r4, #0]
 80163a4:	4639      	mov	r1, r7
 80163a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80163a8:	4620      	mov	r0, r4
 80163aa:	4798      	blx	r3
 80163ac:	f7f4 fb2e 	bl	800aa0c <_ZN8touchgfx3HAL3lcdEv>
 80163b0:	6803      	ldr	r3, [r0, #0]
 80163b2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80163b4:	f8d3 8020 	ldr.w	r8, [r3, #32]
 80163b8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80163bc:	4639      	mov	r1, r7
 80163be:	47c0      	blx	r8
 80163c0:	3501      	adds	r5, #1
 80163c2:	2d04      	cmp	r5, #4
 80163c4:	d1da      	bne.n	801637c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 80163c6:	e011      	b.n	80163ec <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 80163c8:	6830      	ldr	r0, [r6, #0]
 80163ca:	6871      	ldr	r1, [r6, #4]
 80163cc:	ab06      	add	r3, sp, #24
 80163ce:	c303      	stmia	r3!, {r0, r1}
 80163d0:	6823      	ldr	r3, [r4, #0]
 80163d2:	a906      	add	r1, sp, #24
 80163d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80163d6:	4620      	mov	r0, r4
 80163d8:	4798      	blx	r3
 80163da:	f7f4 fb17 	bl	800aa0c <_ZN8touchgfx3HAL3lcdEv>
 80163de:	6803      	ldr	r3, [r0, #0]
 80163e0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80163e2:	6a1d      	ldr	r5, [r3, #32]
 80163e4:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80163e8:	a906      	add	r1, sp, #24
 80163ea:	47a8      	blx	r5
 80163ec:	b00e      	add	sp, #56	; 0x38
 80163ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080163f2 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 80163f2:	4770      	bx	lr

080163f4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 80163f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80163f8:	461c      	mov	r4, r3
 80163fa:	4606      	mov	r6, r0
 80163fc:	9f06      	ldr	r7, [sp, #24]
 80163fe:	f7ff fe4b 	bl	8016098 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8016402:	8823      	ldrh	r3, [r4, #0]
 8016404:	86b3      	strh	r3, [r6, #52]	; 0x34
 8016406:	883b      	ldrh	r3, [r7, #0]
 8016408:	86f3      	strh	r3, [r6, #54]	; 0x36
 801640a:	4638      	mov	r0, r7
 801640c:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8016410:	f005 ffa2 	bl	801c358 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016414:	f04f 0802 	mov.w	r8, #2
 8016418:	fb95 f5f8 	sdiv	r5, r5, r8
 801641c:	b2ad      	uxth	r5, r5
 801641e:	fb90 f0f8 	sdiv	r0, r0, r8
 8016422:	1a2d      	subs	r5, r5, r0
 8016424:	8735      	strh	r5, [r6, #56]	; 0x38
 8016426:	4638      	mov	r0, r7
 8016428:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 801642c:	fb94 f4f8 	sdiv	r4, r4, r8
 8016430:	f005 ffc6 	bl	801c3c0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016434:	b2a4      	uxth	r4, r4
 8016436:	fb90 f0f8 	sdiv	r0, r0, r8
 801643a:	1a24      	subs	r4, r4, r0
 801643c:	8774      	strh	r4, [r6, #58]	; 0x3a
 801643e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08016444 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8016444:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016448:	4604      	mov	r4, r0
 801644a:	b08c      	sub	sp, #48	; 0x30
 801644c:	460d      	mov	r5, r1
 801644e:	f7ff fe55 	bl	80160fc <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8016452:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8016456:	2b00      	cmp	r3, #0
 8016458:	d05d      	beq.n	8016516 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801645a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801645c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016460:	a805      	add	r0, sp, #20
 8016462:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8016466:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801646a:	f005 ff75 	bl	801c358 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801646e:	4606      	mov	r6, r0
 8016470:	a805      	add	r0, sp, #20
 8016472:	f005 ffa5 	bl	801c3c0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016476:	6869      	ldr	r1, [r5, #4]
 8016478:	f8ad 001e 	strh.w	r0, [sp, #30]
 801647c:	6828      	ldr	r0, [r5, #0]
 801647e:	f8ad 8018 	strh.w	r8, [sp, #24]
 8016482:	ab08      	add	r3, sp, #32
 8016484:	ad08      	add	r5, sp, #32
 8016486:	c303      	stmia	r3!, {r0, r1}
 8016488:	a906      	add	r1, sp, #24
 801648a:	4628      	mov	r0, r5
 801648c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8016490:	f8ad 601c 	strh.w	r6, [sp, #28]
 8016494:	f7fc fc64 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 8016498:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801649c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80164a0:	429a      	cmp	r2, r3
 80164a2:	d035      	beq.n	8016510 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80164a4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80164a8:	2b00      	cmp	r3, #0
 80164aa:	dd31      	ble.n	8016510 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80164ac:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 80164b0:	2b00      	cmp	r3, #0
 80164b2:	dd2d      	ble.n	8016510 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80164b4:	2300      	movs	r3, #0
 80164b6:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 80164ba:	6823      	ldr	r3, [r4, #0]
 80164bc:	a90a      	add	r1, sp, #40	; 0x28
 80164be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80164c0:	4620      	mov	r0, r4
 80164c2:	4798      	blx	r3
 80164c4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80164c8:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80164ca:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80164ce:	1a9b      	subs	r3, r3, r2
 80164d0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80164d4:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 80164d6:	1ac9      	subs	r1, r1, r3
 80164d8:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 80164dc:	490f      	ldr	r1, [pc, #60]	; (801651c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 80164de:	6809      	ldr	r1, [r1, #0]
 80164e0:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 80164e4:	b108      	cbz	r0, 80164ea <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 80164e6:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 80164e8:	b900      	cbnz	r0, 80164ec <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 80164ea:	6888      	ldr	r0, [r1, #8]
 80164ec:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 80164f0:	440b      	add	r3, r1
 80164f2:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80164f6:	2601      	movs	r6, #1
 80164f8:	440a      	add	r2, r1
 80164fa:	6801      	ldr	r1, [r0, #0]
 80164fc:	9602      	str	r6, [sp, #8]
 80164fe:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8016502:	e9cd 5400 	strd	r5, r4, [sp]
 8016506:	b21b      	sxth	r3, r3
 8016508:	688c      	ldr	r4, [r1, #8]
 801650a:	b212      	sxth	r2, r2
 801650c:	a905      	add	r1, sp, #20
 801650e:	47a0      	blx	r4
 8016510:	b00c      	add	sp, #48	; 0x30
 8016512:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016516:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8016518:	e7a0      	b.n	801645c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801651a:	bf00      	nop
 801651c:	20002328 	.word	0x20002328

08016520 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8016520:	b510      	push	{r4, lr}
 8016522:	2101      	movs	r1, #1
 8016524:	2200      	movs	r2, #0
 8016526:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801652a:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 801652e:	4c0e      	ldr	r4, [pc, #56]	; (8016568 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8016530:	8082      	strh	r2, [r0, #4]
 8016532:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016536:	80c2      	strh	r2, [r0, #6]
 8016538:	8102      	strh	r2, [r0, #8]
 801653a:	8142      	strh	r2, [r0, #10]
 801653c:	8182      	strh	r2, [r0, #12]
 801653e:	81c2      	strh	r2, [r0, #14]
 8016540:	8202      	strh	r2, [r0, #16]
 8016542:	8242      	strh	r2, [r0, #18]
 8016544:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8016548:	61c2      	str	r2, [r0, #28]
 801654a:	8402      	strh	r2, [r0, #32]
 801654c:	8442      	strh	r2, [r0, #34]	; 0x22
 801654e:	6282      	str	r2, [r0, #40]	; 0x28
 8016550:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8016554:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8016556:	8601      	strh	r1, [r0, #48]	; 0x30
 8016558:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 801655c:	6004      	str	r4, [r0, #0]
 801655e:	8681      	strh	r1, [r0, #52]	; 0x34
 8016560:	86c1      	strh	r1, [r0, #54]	; 0x36
 8016562:	8702      	strh	r2, [r0, #56]	; 0x38
 8016564:	8742      	strh	r2, [r0, #58]	; 0x3a
 8016566:	bd10      	pop	{r4, pc}
 8016568:	0802f6b8 	.word	0x0802f6b8

0801656c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 801656c:	b570      	push	{r4, r5, r6, lr}
 801656e:	880b      	ldrh	r3, [r1, #0]
 8016570:	84c3      	strh	r3, [r0, #38]	; 0x26
 8016572:	4604      	mov	r4, r0
 8016574:	4608      	mov	r0, r1
 8016576:	460d      	mov	r5, r1
 8016578:	f005 feee 	bl	801c358 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801657c:	4606      	mov	r6, r0
 801657e:	4628      	mov	r0, r5
 8016580:	f005 ff1e 	bl	801c3c0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016584:	6823      	ldr	r3, [r4, #0]
 8016586:	4605      	mov	r5, r0
 8016588:	4631      	mov	r1, r6
 801658a:	4620      	mov	r0, r4
 801658c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801658e:	4798      	blx	r3
 8016590:	6823      	ldr	r3, [r4, #0]
 8016592:	4629      	mov	r1, r5
 8016594:	4620      	mov	r0, r4
 8016596:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016598:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801659c:	4718      	bx	r3

0801659e <_ZNK8touchgfx5Image12getSolidRectEv>:
 801659e:	b510      	push	{r4, lr}
 80165a0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80165a4:	2bff      	cmp	r3, #255	; 0xff
 80165a6:	4604      	mov	r4, r0
 80165a8:	d006      	beq.n	80165b8 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80165aa:	2300      	movs	r3, #0
 80165ac:	8003      	strh	r3, [r0, #0]
 80165ae:	8043      	strh	r3, [r0, #2]
 80165b0:	8083      	strh	r3, [r0, #4]
 80165b2:	80c3      	strh	r3, [r0, #6]
 80165b4:	4620      	mov	r0, r4
 80165b6:	bd10      	pop	{r4, pc}
 80165b8:	3126      	adds	r1, #38	; 0x26
 80165ba:	f005 ff35 	bl	801c428 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80165be:	e7f9      	b.n	80165b4 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

080165c0 <_ZNK8touchgfx5Image17invalidateContentEv>:
 80165c0:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80165c4:	b12a      	cbz	r2, 80165d2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80165c6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80165ca:	b112      	cbz	r2, 80165d2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80165cc:	6803      	ldr	r3, [r0, #0]
 80165ce:	695b      	ldr	r3, [r3, #20]
 80165d0:	4718      	bx	r3
 80165d2:	4770      	bx	lr

080165d4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80165d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80165d8:	4604      	mov	r4, r0
 80165da:	b088      	sub	sp, #32
 80165dc:	f854 3b26 	ldr.w	r3, [r4], #38
 80165e0:	2500      	movs	r5, #0
 80165e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80165e4:	460f      	mov	r7, r1
 80165e6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80165ea:	a904      	add	r1, sp, #16
 80165ec:	4606      	mov	r6, r0
 80165ee:	4798      	blx	r3
 80165f0:	4620      	mov	r0, r4
 80165f2:	f005 feb1 	bl	801c358 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80165f6:	4680      	mov	r8, r0
 80165f8:	4620      	mov	r0, r4
 80165fa:	f005 fee1 	bl	801c3c0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80165fe:	9506      	str	r5, [sp, #24]
 8016600:	ad06      	add	r5, sp, #24
 8016602:	f8ad 001e 	strh.w	r0, [sp, #30]
 8016606:	4639      	mov	r1, r7
 8016608:	4628      	mov	r0, r5
 801660a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801660e:	f7fc fba7 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 8016612:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016616:	2b00      	cmp	r3, #0
 8016618:	dd19      	ble.n	801664e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801661a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801661e:	2b00      	cmp	r3, #0
 8016620:	dd15      	ble.n	801664e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8016622:	4b0c      	ldr	r3, [pc, #48]	; (8016654 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8016624:	681b      	ldr	r3, [r3, #0]
 8016626:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801662a:	b10a      	cbz	r2, 8016630 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801662c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801662e:	b900      	cbnz	r0, 8016632 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8016630:	6898      	ldr	r0, [r3, #8]
 8016632:	6801      	ldr	r1, [r0, #0]
 8016634:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8016638:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801663c:	2701      	movs	r7, #1
 801663e:	9702      	str	r7, [sp, #8]
 8016640:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8016644:	e9cd 5600 	strd	r5, r6, [sp]
 8016648:	688d      	ldr	r5, [r1, #8]
 801664a:	4621      	mov	r1, r4
 801664c:	47a8      	blx	r5
 801664e:	b008      	add	sp, #32
 8016650:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016654:	20002328 	.word	0x20002328

08016658 <_ZN8touchgfx7OutlineD1Ev>:
 8016658:	4770      	bx	lr

0801665a <_ZN8touchgfx7OutlineD0Ev>:
 801665a:	b510      	push	{r4, lr}
 801665c:	2130      	movs	r1, #48	; 0x30
 801665e:	4604      	mov	r4, r0
 8016660:	f013 fdd5 	bl	802a20e <_ZdlPvj>
 8016664:	4620      	mov	r0, r4
 8016666:	bd10      	pop	{r4, pc}

08016668 <_ZN8touchgfx7Outline5resetEv>:
 8016668:	b510      	push	{r4, lr}
 801666a:	4604      	mov	r4, r0
 801666c:	f000 fe82 	bl	8017374 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8016670:	60e0      	str	r0, [r4, #12]
 8016672:	f000 fe85 	bl	8017380 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8016676:	68e3      	ldr	r3, [r4, #12]
 8016678:	6123      	str	r3, [r4, #16]
 801667a:	08c0      	lsrs	r0, r0, #3
 801667c:	2200      	movs	r2, #0
 801667e:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8016682:	3801      	subs	r0, #1
 8016684:	6060      	str	r0, [r4, #4]
 8016686:	60a2      	str	r2, [r4, #8]
 8016688:	8019      	strh	r1, [r3, #0]
 801668a:	8059      	strh	r1, [r3, #2]
 801668c:	809a      	strh	r2, [r3, #4]
 801668e:	80da      	strh	r2, [r3, #6]
 8016690:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016692:	f023 0301 	bic.w	r3, r3, #1
 8016696:	f043 0302 	orr.w	r3, r3, #2
 801669a:	6263      	str	r3, [r4, #36]	; 0x24
 801669c:	bd10      	pop	{r4, pc}
	...

080166a0 <_ZN8touchgfx7OutlineC1Ev>:
 80166a0:	b510      	push	{r4, lr}
 80166a2:	4b0a      	ldr	r3, [pc, #40]	; (80166cc <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80166a4:	6003      	str	r3, [r0, #0]
 80166a6:	2300      	movs	r3, #0
 80166a8:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80166ac:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80166b0:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80166b4:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80166b8:	6243      	str	r3, [r0, #36]	; 0x24
 80166ba:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80166be:	4604      	mov	r4, r0
 80166c0:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80166c4:	f7ff ffd0 	bl	8016668 <_ZN8touchgfx7Outline5resetEv>
 80166c8:	4620      	mov	r0, r4
 80166ca:	bd10      	pop	{r4, pc}
 80166cc:	0802f79c 	.word	0x0802f79c

080166d0 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80166d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80166d4:	b093      	sub	sp, #76	; 0x4c
 80166d6:	1156      	asrs	r6, r2, #5
 80166d8:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80166da:	9305      	str	r3, [sp, #20]
 80166dc:	f004 051f 	and.w	r5, r4, #31
 80166e0:	1153      	asrs	r3, r2, #5
 80166e2:	9504      	str	r5, [sp, #16]
 80166e4:	1165      	asrs	r5, r4, #5
 80166e6:	9303      	str	r3, [sp, #12]
 80166e8:	42ae      	cmp	r6, r5
 80166ea:	ea4f 1364 	mov.w	r3, r4, asr #5
 80166ee:	9306      	str	r3, [sp, #24]
 80166f0:	f002 031f 	and.w	r3, r2, #31
 80166f4:	f040 80f8 	bne.w	80168e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 80166f8:	9c04      	ldr	r4, [sp, #16]
 80166fa:	9a05      	ldr	r2, [sp, #20]
 80166fc:	42a3      	cmp	r3, r4
 80166fe:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8016702:	6902      	ldr	r2, [r0, #16]
 8016704:	d125      	bne.n	8016752 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8016706:	f9b2 3000 	ldrsh.w	r3, [r2]
 801670a:	459e      	cmp	lr, r3
 801670c:	d103      	bne.n	8016716 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 801670e:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8016712:	429e      	cmp	r6, r3
 8016714:	d035      	beq.n	8016782 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016716:	88d1      	ldrh	r1, [r2, #6]
 8016718:	8893      	ldrh	r3, [r2, #4]
 801671a:	430b      	orrs	r3, r1
 801671c:	d010      	beq.n	8016740 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801671e:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8016722:	2b00      	cmp	r3, #0
 8016724:	db0c      	blt.n	8016740 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8016726:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8016728:	428b      	cmp	r3, r1
 801672a:	da09      	bge.n	8016740 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801672c:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8016730:	428b      	cmp	r3, r1
 8016732:	bf38      	it	cc
 8016734:	3208      	addcc	r2, #8
 8016736:	f103 0301 	add.w	r3, r3, #1
 801673a:	bf38      	it	cc
 801673c:	6102      	strcc	r2, [r0, #16]
 801673e:	6083      	str	r3, [r0, #8]
 8016740:	6903      	ldr	r3, [r0, #16]
 8016742:	9a03      	ldr	r2, [sp, #12]
 8016744:	f8a3 e000 	strh.w	lr, [r3]
 8016748:	805a      	strh	r2, [r3, #2]
 801674a:	2200      	movs	r2, #0
 801674c:	809a      	strh	r2, [r3, #4]
 801674e:	80da      	strh	r2, [r3, #6]
 8016750:	e017      	b.n	8016782 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016752:	9c05      	ldr	r4, [sp, #20]
 8016754:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8016758:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 801675c:	f004 041f 	and.w	r4, r4, #31
 8016760:	114e      	asrs	r6, r1, #5
 8016762:	9402      	str	r4, [sp, #8]
 8016764:	9c04      	ldr	r4, [sp, #16]
 8016766:	4576      	cmp	r6, lr
 8016768:	f001 0c1f 	and.w	ip, r1, #31
 801676c:	eba4 0403 	sub.w	r4, r4, r3
 8016770:	d10a      	bne.n	8016788 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8016772:	9b02      	ldr	r3, [sp, #8]
 8016774:	449c      	add	ip, r3
 8016776:	44a0      	add	r8, r4
 8016778:	fb04 a40c 	mla	r4, r4, ip, sl
 801677c:	f8a2 8004 	strh.w	r8, [r2, #4]
 8016780:	80d4      	strh	r4, [r2, #6]
 8016782:	b013      	add	sp, #76	; 0x4c
 8016784:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016788:	9d05      	ldr	r5, [sp, #20]
 801678a:	1a69      	subs	r1, r5, r1
 801678c:	bf5b      	ittet	pl
 801678e:	f1cc 0520 	rsbpl	r5, ip, #32
 8016792:	436c      	mulpl	r4, r5
 8016794:	2500      	movmi	r5, #0
 8016796:	2520      	movpl	r5, #32
 8016798:	bf44      	itt	mi
 801679a:	fb04 f40c 	mulmi.w	r4, r4, ip
 801679e:	4249      	negmi	r1, r1
 80167a0:	9501      	str	r5, [sp, #4]
 80167a2:	9f01      	ldr	r7, [sp, #4]
 80167a4:	fb94 f5f1 	sdiv	r5, r4, r1
 80167a8:	fb01 4415 	mls	r4, r1, r5, r4
 80167ac:	bf54      	ite	pl
 80167ae:	f04f 0901 	movpl.w	r9, #1
 80167b2:	f04f 39ff 	movmi.w	r9, #4294967295
 80167b6:	2c00      	cmp	r4, #0
 80167b8:	bfb8      	it	lt
 80167ba:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80167be:	44bc      	add	ip, r7
 80167c0:	44a8      	add	r8, r5
 80167c2:	fb05 ac0c 	mla	ip, r5, ip, sl
 80167c6:	f8a2 8004 	strh.w	r8, [r2, #4]
 80167ca:	f8a2 c006 	strh.w	ip, [r2, #6]
 80167ce:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80167d2:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80167d6:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80167da:	bfb8      	it	lt
 80167dc:	1864      	addlt	r4, r4, r1
 80167de:	ea58 0202 	orrs.w	r2, r8, r2
 80167e2:	444e      	add	r6, r9
 80167e4:	d011      	beq.n	801680a <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80167e6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80167ea:	f1b8 0f00 	cmp.w	r8, #0
 80167ee:	db0c      	blt.n	801680a <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80167f0:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80167f2:	4590      	cmp	r8, r2
 80167f4:	da09      	bge.n	801680a <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80167f6:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 80167fa:	4590      	cmp	r8, r2
 80167fc:	bf3c      	itt	cc
 80167fe:	f10c 0208 	addcc.w	r2, ip, #8
 8016802:	6102      	strcc	r2, [r0, #16]
 8016804:	f108 0201 	add.w	r2, r8, #1
 8016808:	6082      	str	r2, [r0, #8]
 801680a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801680e:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016812:	f8ac 6000 	strh.w	r6, [ip]
 8016816:	2700      	movs	r7, #0
 8016818:	45b6      	cmp	lr, r6
 801681a:	f8ac 2002 	strh.w	r2, [ip, #2]
 801681e:	f8ac 7004 	strh.w	r7, [ip, #4]
 8016822:	f8ac 7006 	strh.w	r7, [ip, #6]
 8016826:	442b      	add	r3, r5
 8016828:	d04d      	beq.n	80168c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801682a:	9f04      	ldr	r7, [sp, #16]
 801682c:	1aff      	subs	r7, r7, r3
 801682e:	443d      	add	r5, r7
 8016830:	016d      	lsls	r5, r5, #5
 8016832:	fb95 f8f1 	sdiv	r8, r5, r1
 8016836:	fb01 5518 	mls	r5, r1, r8, r5
 801683a:	2d00      	cmp	r5, #0
 801683c:	bfb8      	it	lt
 801683e:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016842:	f108 0701 	add.w	r7, r8, #1
 8016846:	bfb8      	it	lt
 8016848:	186d      	addlt	r5, r5, r1
 801684a:	1a64      	subs	r4, r4, r1
 801684c:	9703      	str	r7, [sp, #12]
 801684e:	f04f 0a00 	mov.w	sl, #0
 8016852:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016856:	1964      	adds	r4, r4, r5
 8016858:	bf58      	it	pl
 801685a:	9f03      	ldrpl	r7, [sp, #12]
 801685c:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8016860:	bf48      	it	mi
 8016862:	4647      	movmi	r7, r8
 8016864:	44bb      	add	fp, r7
 8016866:	f8ac b004 	strh.w	fp, [ip, #4]
 801686a:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801686e:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016872:	f8ac b006 	strh.w	fp, [ip, #6]
 8016876:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801687a:	443b      	add	r3, r7
 801687c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016880:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016884:	bf58      	it	pl
 8016886:	1a64      	subpl	r4, r4, r1
 8016888:	ea5b 0707 	orrs.w	r7, fp, r7
 801688c:	444e      	add	r6, r9
 801688e:	d011      	beq.n	80168b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8016890:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8016894:	f1bb 0f00 	cmp.w	fp, #0
 8016898:	db0c      	blt.n	80168b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801689a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801689c:	45bb      	cmp	fp, r7
 801689e:	da09      	bge.n	80168b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80168a0:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80168a4:	45bb      	cmp	fp, r7
 80168a6:	bf3c      	itt	cc
 80168a8:	f10c 0708 	addcc.w	r7, ip, #8
 80168ac:	6107      	strcc	r7, [r0, #16]
 80168ae:	f10b 0701 	add.w	r7, fp, #1
 80168b2:	6087      	str	r7, [r0, #8]
 80168b4:	6907      	ldr	r7, [r0, #16]
 80168b6:	45b6      	cmp	lr, r6
 80168b8:	803e      	strh	r6, [r7, #0]
 80168ba:	807a      	strh	r2, [r7, #2]
 80168bc:	f8a7 a004 	strh.w	sl, [r7, #4]
 80168c0:	f8a7 a006 	strh.w	sl, [r7, #6]
 80168c4:	d1c5      	bne.n	8016852 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80168c6:	9a04      	ldr	r2, [sp, #16]
 80168c8:	1ad3      	subs	r3, r2, r3
 80168ca:	6902      	ldr	r2, [r0, #16]
 80168cc:	8891      	ldrh	r1, [r2, #4]
 80168ce:	88d6      	ldrh	r6, [r2, #6]
 80168d0:	4419      	add	r1, r3
 80168d2:	8091      	strh	r1, [r2, #4]
 80168d4:	9902      	ldr	r1, [sp, #8]
 80168d6:	f101 0c20 	add.w	ip, r1, #32
 80168da:	9901      	ldr	r1, [sp, #4]
 80168dc:	ebac 0c01 	sub.w	ip, ip, r1
 80168e0:	fb03 630c 	mla	r3, r3, ip, r6
 80168e4:	80d3      	strh	r3, [r2, #6]
 80168e6:	e74c      	b.n	8016782 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80168e8:	9d05      	ldr	r5, [sp, #20]
 80168ea:	1aa2      	subs	r2, r4, r2
 80168ec:	eba5 0501 	sub.w	r5, r5, r1
 80168f0:	9508      	str	r5, [sp, #32]
 80168f2:	9202      	str	r2, [sp, #8]
 80168f4:	f140 8128 	bpl.w	8016b48 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 80168f8:	9a03      	ldr	r2, [sp, #12]
 80168fa:	2a00      	cmp	r2, #0
 80168fc:	f6ff af41 	blt.w	8016782 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016900:	9a02      	ldr	r2, [sp, #8]
 8016902:	4252      	negs	r2, r2
 8016904:	9202      	str	r2, [sp, #8]
 8016906:	9a06      	ldr	r2, [sp, #24]
 8016908:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 801690c:	f04f 34ff 	mov.w	r4, #4294967295
 8016910:	9206      	str	r2, [sp, #24]
 8016912:	462a      	mov	r2, r5
 8016914:	940b      	str	r4, [sp, #44]	; 0x2c
 8016916:	435a      	muls	r2, r3
 8016918:	2400      	movs	r4, #0
 801691a:	9d02      	ldr	r5, [sp, #8]
 801691c:	9401      	str	r4, [sp, #4]
 801691e:	9c02      	ldr	r4, [sp, #8]
 8016920:	fb92 f4f4 	sdiv	r4, r2, r4
 8016924:	fb05 2214 	mls	r2, r5, r4, r2
 8016928:	2a00      	cmp	r2, #0
 801692a:	9207      	str	r2, [sp, #28]
 801692c:	bfbc      	itt	lt
 801692e:	1952      	addlt	r2, r2, r5
 8016930:	9207      	strlt	r2, [sp, #28]
 8016932:	9a01      	ldr	r2, [sp, #4]
 8016934:	6905      	ldr	r5, [r0, #16]
 8016936:	bfb8      	it	lt
 8016938:	f104 34ff 	addlt.w	r4, r4, #4294967295
 801693c:	eb04 0901 	add.w	r9, r4, r1
 8016940:	429a      	cmp	r2, r3
 8016942:	ea4f 1669 	mov.w	r6, r9, asr #5
 8016946:	f040 8112 	bne.w	8016b6e <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801694a:	f9b5 3000 	ldrsh.w	r3, [r5]
 801694e:	429e      	cmp	r6, r3
 8016950:	d104      	bne.n	801695c <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8016952:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8016956:	9a03      	ldr	r2, [sp, #12]
 8016958:	429a      	cmp	r2, r3
 801695a:	d01b      	beq.n	8016994 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 801695c:	88ea      	ldrh	r2, [r5, #6]
 801695e:	88ab      	ldrh	r3, [r5, #4]
 8016960:	4313      	orrs	r3, r2
 8016962:	d010      	beq.n	8016986 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016964:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8016968:	2a00      	cmp	r2, #0
 801696a:	db0c      	blt.n	8016986 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 801696c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801696e:	429a      	cmp	r2, r3
 8016970:	da09      	bge.n	8016986 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016972:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8016976:	429a      	cmp	r2, r3
 8016978:	bf38      	it	cc
 801697a:	3508      	addcc	r5, #8
 801697c:	f102 0201 	add.w	r2, r2, #1
 8016980:	bf38      	it	cc
 8016982:	6105      	strcc	r5, [r0, #16]
 8016984:	6082      	str	r2, [r0, #8]
 8016986:	6903      	ldr	r3, [r0, #16]
 8016988:	9a03      	ldr	r2, [sp, #12]
 801698a:	805a      	strh	r2, [r3, #2]
 801698c:	2200      	movs	r2, #0
 801698e:	801e      	strh	r6, [r3, #0]
 8016990:	809a      	strh	r2, [r3, #4]
 8016992:	80da      	strh	r2, [r3, #6]
 8016994:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016996:	9a03      	ldr	r2, [sp, #12]
 8016998:	6901      	ldr	r1, [r0, #16]
 801699a:	441a      	add	r2, r3
 801699c:	f9b1 3000 	ldrsh.w	r3, [r1]
 80169a0:	42b3      	cmp	r3, r6
 80169a2:	d103      	bne.n	80169ac <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80169a4:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80169a8:	429a      	cmp	r2, r3
 80169aa:	d01a      	beq.n	80169e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80169ac:	88cc      	ldrh	r4, [r1, #6]
 80169ae:	888b      	ldrh	r3, [r1, #4]
 80169b0:	4323      	orrs	r3, r4
 80169b2:	d010      	beq.n	80169d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80169b4:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80169b8:	2c00      	cmp	r4, #0
 80169ba:	db0c      	blt.n	80169d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80169bc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80169be:	429c      	cmp	r4, r3
 80169c0:	da09      	bge.n	80169d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80169c2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80169c6:	429c      	cmp	r4, r3
 80169c8:	bf38      	it	cc
 80169ca:	3108      	addcc	r1, #8
 80169cc:	f104 0401 	add.w	r4, r4, #1
 80169d0:	bf38      	it	cc
 80169d2:	6101      	strcc	r1, [r0, #16]
 80169d4:	6084      	str	r4, [r0, #8]
 80169d6:	6903      	ldr	r3, [r0, #16]
 80169d8:	2100      	movs	r1, #0
 80169da:	801e      	strh	r6, [r3, #0]
 80169dc:	805a      	strh	r2, [r3, #2]
 80169de:	8099      	strh	r1, [r3, #4]
 80169e0:	80d9      	strh	r1, [r3, #6]
 80169e2:	9b06      	ldr	r3, [sp, #24]
 80169e4:	4293      	cmp	r3, r2
 80169e6:	f000 8082 	beq.w	8016aee <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 80169ea:	9b08      	ldr	r3, [sp, #32]
 80169ec:	9c02      	ldr	r4, [sp, #8]
 80169ee:	9902      	ldr	r1, [sp, #8]
 80169f0:	015b      	lsls	r3, r3, #5
 80169f2:	fb93 f1f1 	sdiv	r1, r3, r1
 80169f6:	fb04 3311 	mls	r3, r4, r1, r3
 80169fa:	2b00      	cmp	r3, #0
 80169fc:	9103      	str	r1, [sp, #12]
 80169fe:	9308      	str	r3, [sp, #32]
 8016a00:	da04      	bge.n	8016a0c <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8016a02:	1e4b      	subs	r3, r1, #1
 8016a04:	9303      	str	r3, [sp, #12]
 8016a06:	9b08      	ldr	r3, [sp, #32]
 8016a08:	4423      	add	r3, r4
 8016a0a:	9308      	str	r3, [sp, #32]
 8016a0c:	9b07      	ldr	r3, [sp, #28]
 8016a0e:	9902      	ldr	r1, [sp, #8]
 8016a10:	1a5b      	subs	r3, r3, r1
 8016a12:	9307      	str	r3, [sp, #28]
 8016a14:	9b01      	ldr	r3, [sp, #4]
 8016a16:	f1c3 0320 	rsb	r3, r3, #32
 8016a1a:	930e      	str	r3, [sp, #56]	; 0x38
 8016a1c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016a1e:	9b01      	ldr	r3, [sp, #4]
 8016a20:	1a5b      	subs	r3, r3, r1
 8016a22:	464f      	mov	r7, r9
 8016a24:	930a      	str	r3, [sp, #40]	; 0x28
 8016a26:	2600      	movs	r6, #0
 8016a28:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8016a2c:	185b      	adds	r3, r3, r1
 8016a2e:	bf58      	it	pl
 8016a30:	9902      	ldrpl	r1, [sp, #8]
 8016a32:	9307      	str	r3, [sp, #28]
 8016a34:	bf5d      	ittte	pl
 8016a36:	1a5b      	subpl	r3, r3, r1
 8016a38:	9307      	strpl	r3, [sp, #28]
 8016a3a:	9b03      	ldrpl	r3, [sp, #12]
 8016a3c:	9903      	ldrmi	r1, [sp, #12]
 8016a3e:	bf58      	it	pl
 8016a40:	1c59      	addpl	r1, r3, #1
 8016a42:	4489      	add	r9, r1
 8016a44:	2a00      	cmp	r2, #0
 8016a46:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8016a4a:	db2e      	blt.n	8016aaa <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016a4c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016a4e:	4293      	cmp	r3, r2
 8016a50:	dd2b      	ble.n	8016aaa <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016a52:	9c01      	ldr	r4, [sp, #4]
 8016a54:	6905      	ldr	r5, [r0, #16]
 8016a56:	46a0      	mov	r8, r4
 8016a58:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016a5a:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8016a5e:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8016a62:	45a0      	cmp	r8, r4
 8016a64:	f040 814f 	bne.w	8016d06 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8016a68:	f9b5 1000 	ldrsh.w	r1, [r5]
 8016a6c:	4551      	cmp	r1, sl
 8016a6e:	d103      	bne.n	8016a78 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8016a70:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8016a74:	4291      	cmp	r1, r2
 8016a76:	d018      	beq.n	8016aaa <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016a78:	ea5c 010e 	orrs.w	r1, ip, lr
 8016a7c:	d00f      	beq.n	8016a9e <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8016a7e:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8016a82:	2900      	cmp	r1, #0
 8016a84:	db0b      	blt.n	8016a9e <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8016a86:	428b      	cmp	r3, r1
 8016a88:	dd09      	ble.n	8016a9e <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8016a8a:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8016a8e:	4299      	cmp	r1, r3
 8016a90:	bf38      	it	cc
 8016a92:	3508      	addcc	r5, #8
 8016a94:	f101 0101 	add.w	r1, r1, #1
 8016a98:	bf38      	it	cc
 8016a9a:	6105      	strcc	r5, [r0, #16]
 8016a9c:	6081      	str	r1, [r0, #8]
 8016a9e:	6903      	ldr	r3, [r0, #16]
 8016aa0:	f8a3 a000 	strh.w	sl, [r3]
 8016aa4:	805a      	strh	r2, [r3, #2]
 8016aa6:	809e      	strh	r6, [r3, #4]
 8016aa8:	80de      	strh	r6, [r3, #6]
 8016aaa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016aac:	6901      	ldr	r1, [r0, #16]
 8016aae:	441a      	add	r2, r3
 8016ab0:	88cc      	ldrh	r4, [r1, #6]
 8016ab2:	888b      	ldrh	r3, [r1, #4]
 8016ab4:	4323      	orrs	r3, r4
 8016ab6:	d010      	beq.n	8016ada <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8016ab8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8016abc:	2c00      	cmp	r4, #0
 8016abe:	db0c      	blt.n	8016ada <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8016ac0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016ac2:	429c      	cmp	r4, r3
 8016ac4:	da09      	bge.n	8016ada <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8016ac6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8016aca:	429c      	cmp	r4, r3
 8016acc:	bf38      	it	cc
 8016ace:	3108      	addcc	r1, #8
 8016ad0:	f104 0401 	add.w	r4, r4, #1
 8016ad4:	bf38      	it	cc
 8016ad6:	6101      	strcc	r1, [r0, #16]
 8016ad8:	6084      	str	r4, [r0, #8]
 8016ada:	6903      	ldr	r3, [r0, #16]
 8016adc:	f8a3 a000 	strh.w	sl, [r3]
 8016ae0:	805a      	strh	r2, [r3, #2]
 8016ae2:	809e      	strh	r6, [r3, #4]
 8016ae4:	80de      	strh	r6, [r3, #6]
 8016ae6:	9b06      	ldr	r3, [sp, #24]
 8016ae8:	4293      	cmp	r3, r2
 8016aea:	464f      	mov	r7, r9
 8016aec:	d19c      	bne.n	8016a28 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8016aee:	9b01      	ldr	r3, [sp, #4]
 8016af0:	6907      	ldr	r7, [r0, #16]
 8016af2:	f1c3 0620 	rsb	r6, r3, #32
 8016af6:	9b05      	ldr	r3, [sp, #20]
 8016af8:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8016afc:	9b04      	ldr	r3, [sp, #16]
 8016afe:	429e      	cmp	r6, r3
 8016b00:	f040 81cc 	bne.w	8016e9c <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8016b04:	f9b7 3000 	ldrsh.w	r3, [r7]
 8016b08:	459e      	cmp	lr, r3
 8016b0a:	d104      	bne.n	8016b16 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8016b0c:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8016b10:	429a      	cmp	r2, r3
 8016b12:	f43f ae36 	beq.w	8016782 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016b16:	88f9      	ldrh	r1, [r7, #6]
 8016b18:	88bb      	ldrh	r3, [r7, #4]
 8016b1a:	430b      	orrs	r3, r1
 8016b1c:	d010      	beq.n	8016b40 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8016b1e:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8016b22:	2b00      	cmp	r3, #0
 8016b24:	db0c      	blt.n	8016b40 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8016b26:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8016b28:	428b      	cmp	r3, r1
 8016b2a:	da09      	bge.n	8016b40 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8016b2c:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8016b30:	428b      	cmp	r3, r1
 8016b32:	bf38      	it	cc
 8016b34:	3708      	addcc	r7, #8
 8016b36:	f103 0301 	add.w	r3, r3, #1
 8016b3a:	bf38      	it	cc
 8016b3c:	6107      	strcc	r7, [r0, #16]
 8016b3e:	6083      	str	r3, [r0, #8]
 8016b40:	6903      	ldr	r3, [r0, #16]
 8016b42:	f8a3 e000 	strh.w	lr, [r3]
 8016b46:	e5ff      	b.n	8016748 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8016b48:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8016b4a:	9c03      	ldr	r4, [sp, #12]
 8016b4c:	42a2      	cmp	r2, r4
 8016b4e:	f6ff ae18 	blt.w	8016782 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016b52:	9c06      	ldr	r4, [sp, #24]
 8016b54:	42a2      	cmp	r2, r4
 8016b56:	bfb8      	it	lt
 8016b58:	3201      	addlt	r2, #1
 8016b5a:	9c08      	ldr	r4, [sp, #32]
 8016b5c:	bfb8      	it	lt
 8016b5e:	9206      	strlt	r2, [sp, #24]
 8016b60:	f1c3 0220 	rsb	r2, r3, #32
 8016b64:	4362      	muls	r2, r4
 8016b66:	2401      	movs	r4, #1
 8016b68:	940b      	str	r4, [sp, #44]	; 0x2c
 8016b6a:	2420      	movs	r4, #32
 8016b6c:	e6d5      	b.n	801691a <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8016b6e:	f009 021f 	and.w	r2, r9, #31
 8016b72:	ea4f 1861 	mov.w	r8, r1, asr #5
 8016b76:	920c      	str	r2, [sp, #48]	; 0x30
 8016b78:	9a01      	ldr	r2, [sp, #4]
 8016b7a:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8016b7e:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8016b82:	45b0      	cmp	r8, r6
 8016b84:	f001 011f 	and.w	r1, r1, #31
 8016b88:	eba2 0203 	sub.w	r2, r2, r3
 8016b8c:	d108      	bne.n	8016ba0 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8016b8e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016b90:	4419      	add	r1, r3
 8016b92:	4496      	add	lr, r2
 8016b94:	fb02 a101 	mla	r1, r2, r1, sl
 8016b98:	f8a5 e004 	strh.w	lr, [r5, #4]
 8016b9c:	80e9      	strh	r1, [r5, #6]
 8016b9e:	e6f9      	b.n	8016994 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8016ba0:	2c00      	cmp	r4, #0
 8016ba2:	f2c0 80a9 	blt.w	8016cf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8016ba6:	2701      	movs	r7, #1
 8016ba8:	f1c1 0c20 	rsb	ip, r1, #32
 8016bac:	970a      	str	r7, [sp, #40]	; 0x28
 8016bae:	fb02 f20c 	mul.w	r2, r2, ip
 8016bb2:	2720      	movs	r7, #32
 8016bb4:	9709      	str	r7, [sp, #36]	; 0x24
 8016bb6:	fb92 fcf4 	sdiv	ip, r2, r4
 8016bba:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8016bbc:	fb04 221c 	mls	r2, r4, ip, r2
 8016bc0:	2a00      	cmp	r2, #0
 8016bc2:	bfb8      	it	lt
 8016bc4:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8016bc8:	4439      	add	r1, r7
 8016bca:	fb0c a101 	mla	r1, ip, r1, sl
 8016bce:	80e9      	strh	r1, [r5, #6]
 8016bd0:	44e6      	add	lr, ip
 8016bd2:	990a      	ldr	r1, [sp, #40]	; 0x28
 8016bd4:	f8a5 e004 	strh.w	lr, [r5, #4]
 8016bd8:	eb08 0501 	add.w	r5, r8, r1
 8016bdc:	6901      	ldr	r1, [r0, #16]
 8016bde:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8016be2:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8016be6:	bfb8      	it	lt
 8016be8:	1912      	addlt	r2, r2, r4
 8016bea:	ea58 070e 	orrs.w	r7, r8, lr
 8016bee:	d010      	beq.n	8016c12 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8016bf0:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8016bf4:	f1be 0f00 	cmp.w	lr, #0
 8016bf8:	db0b      	blt.n	8016c12 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8016bfa:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016bfc:	45be      	cmp	lr, r7
 8016bfe:	da08      	bge.n	8016c12 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8016c00:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8016c04:	45be      	cmp	lr, r7
 8016c06:	bf3c      	itt	cc
 8016c08:	3108      	addcc	r1, #8
 8016c0a:	6101      	strcc	r1, [r0, #16]
 8016c0c:	f10e 0101 	add.w	r1, lr, #1
 8016c10:	6081      	str	r1, [r0, #8]
 8016c12:	6901      	ldr	r1, [r0, #16]
 8016c14:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8016c18:	800d      	strh	r5, [r1, #0]
 8016c1a:	f04f 0e00 	mov.w	lr, #0
 8016c1e:	42ae      	cmp	r6, r5
 8016c20:	f8a1 8002 	strh.w	r8, [r1, #2]
 8016c24:	f8a1 e004 	strh.w	lr, [r1, #4]
 8016c28:	f8a1 e006 	strh.w	lr, [r1, #6]
 8016c2c:	4463      	add	r3, ip
 8016c2e:	d054      	beq.n	8016cda <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8016c30:	9901      	ldr	r1, [sp, #4]
 8016c32:	1ac9      	subs	r1, r1, r3
 8016c34:	4461      	add	r1, ip
 8016c36:	0149      	lsls	r1, r1, #5
 8016c38:	fb91 fef4 	sdiv	lr, r1, r4
 8016c3c:	fb04 111e 	mls	r1, r4, lr, r1
 8016c40:	2900      	cmp	r1, #0
 8016c42:	bfb8      	it	lt
 8016c44:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8016c48:	f10e 0701 	add.w	r7, lr, #1
 8016c4c:	bfb8      	it	lt
 8016c4e:	1909      	addlt	r1, r1, r4
 8016c50:	1b12      	subs	r2, r2, r4
 8016c52:	970d      	str	r7, [sp, #52]	; 0x34
 8016c54:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8016c58:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016c5a:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8016c5e:	1852      	adds	r2, r2, r1
 8016c60:	bf54      	ite	pl
 8016c62:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8016c66:	46f4      	movmi	ip, lr
 8016c68:	44e3      	add	fp, ip
 8016c6a:	f8aa b004 	strh.w	fp, [sl, #4]
 8016c6e:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8016c72:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8016c76:	f8aa b006 	strh.w	fp, [sl, #6]
 8016c7a:	4463      	add	r3, ip
 8016c7c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016c80:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016c84:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8016c88:	bf58      	it	pl
 8016c8a:	1b12      	subpl	r2, r2, r4
 8016c8c:	443d      	add	r5, r7
 8016c8e:	ea5b 070a 	orrs.w	r7, fp, sl
 8016c92:	d014      	beq.n	8016cbe <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8016c94:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8016c98:	f1ba 0f00 	cmp.w	sl, #0
 8016c9c:	db0f      	blt.n	8016cbe <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8016c9e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016ca0:	45ba      	cmp	sl, r7
 8016ca2:	da0c      	bge.n	8016cbe <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8016ca4:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8016ca8:	45ba      	cmp	sl, r7
 8016caa:	bf38      	it	cc
 8016cac:	f10c 0c08 	addcc.w	ip, ip, #8
 8016cb0:	f10a 0a01 	add.w	sl, sl, #1
 8016cb4:	bf38      	it	cc
 8016cb6:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8016cba:	f8c0 a008 	str.w	sl, [r0, #8]
 8016cbe:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016cc2:	f04f 0700 	mov.w	r7, #0
 8016cc6:	42ae      	cmp	r6, r5
 8016cc8:	f8ac 5000 	strh.w	r5, [ip]
 8016ccc:	f8ac 8002 	strh.w	r8, [ip, #2]
 8016cd0:	f8ac 7004 	strh.w	r7, [ip, #4]
 8016cd4:	f8ac 7006 	strh.w	r7, [ip, #6]
 8016cd8:	d1bc      	bne.n	8016c54 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8016cda:	6904      	ldr	r4, [r0, #16]
 8016cdc:	9a01      	ldr	r2, [sp, #4]
 8016cde:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016ce0:	1ad3      	subs	r3, r2, r3
 8016ce2:	88a2      	ldrh	r2, [r4, #4]
 8016ce4:	441a      	add	r2, r3
 8016ce6:	80a2      	strh	r2, [r4, #4]
 8016ce8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016cea:	3120      	adds	r1, #32
 8016cec:	1a89      	subs	r1, r1, r2
 8016cee:	88e2      	ldrh	r2, [r4, #6]
 8016cf0:	fb03 2301 	mla	r3, r3, r1, r2
 8016cf4:	80e3      	strh	r3, [r4, #6]
 8016cf6:	e64d      	b.n	8016994 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8016cf8:	f04f 37ff 	mov.w	r7, #4294967295
 8016cfc:	970a      	str	r7, [sp, #40]	; 0x28
 8016cfe:	434a      	muls	r2, r1
 8016d00:	4264      	negs	r4, r4
 8016d02:	2700      	movs	r7, #0
 8016d04:	e756      	b.n	8016bb4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8016d06:	ea4f 1867 	mov.w	r8, r7, asr #5
 8016d0a:	f009 031f 	and.w	r3, r9, #31
 8016d0e:	45d0      	cmp	r8, sl
 8016d10:	f007 071f 	and.w	r7, r7, #31
 8016d14:	930f      	str	r3, [sp, #60]	; 0x3c
 8016d16:	fa1f fc8c 	uxth.w	ip, ip
 8016d1a:	fa1f fe8e 	uxth.w	lr, lr
 8016d1e:	d10a      	bne.n	8016d36 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8016d20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016d22:	449c      	add	ip, r3
 8016d24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016d26:	f8a5 c004 	strh.w	ip, [r5, #4]
 8016d2a:	441f      	add	r7, r3
 8016d2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016d2e:	fb03 e707 	mla	r7, r3, r7, lr
 8016d32:	80ef      	strh	r7, [r5, #6]
 8016d34:	e6b9      	b.n	8016aaa <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016d36:	2900      	cmp	r1, #0
 8016d38:	f2c0 80a8 	blt.w	8016e8c <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8016d3c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016d3e:	f1c7 0320 	rsb	r3, r7, #32
 8016d42:	4363      	muls	r3, r4
 8016d44:	2401      	movs	r4, #1
 8016d46:	940d      	str	r4, [sp, #52]	; 0x34
 8016d48:	2420      	movs	r4, #32
 8016d4a:	940c      	str	r4, [sp, #48]	; 0x30
 8016d4c:	fb93 f4f1 	sdiv	r4, r3, r1
 8016d50:	fb01 3b14 	mls	fp, r1, r4, r3
 8016d54:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016d56:	f1bb 0f00 	cmp.w	fp, #0
 8016d5a:	bfb8      	it	lt
 8016d5c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8016d60:	441f      	add	r7, r3
 8016d62:	fb04 e707 	mla	r7, r4, r7, lr
 8016d66:	44a4      	add	ip, r4
 8016d68:	f8a5 c004 	strh.w	ip, [r5, #4]
 8016d6c:	80ef      	strh	r7, [r5, #6]
 8016d6e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016d72:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016d74:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8016d78:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016d7c:	bfb8      	it	lt
 8016d7e:	448b      	addlt	fp, r1
 8016d80:	eb08 0503 	add.w	r5, r8, r3
 8016d84:	ea5e 0307 	orrs.w	r3, lr, r7
 8016d88:	d011      	beq.n	8016dae <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8016d8a:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8016d8e:	f1be 0f00 	cmp.w	lr, #0
 8016d92:	db0c      	blt.n	8016dae <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8016d94:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016d96:	45be      	cmp	lr, r7
 8016d98:	da09      	bge.n	8016dae <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8016d9a:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8016d9e:	45be      	cmp	lr, r7
 8016da0:	bf3c      	itt	cc
 8016da2:	f10c 0708 	addcc.w	r7, ip, #8
 8016da6:	6107      	strcc	r7, [r0, #16]
 8016da8:	f10e 0701 	add.w	r7, lr, #1
 8016dac:	6087      	str	r7, [r0, #8]
 8016dae:	6907      	ldr	r7, [r0, #16]
 8016db0:	b213      	sxth	r3, r2
 8016db2:	9310      	str	r3, [sp, #64]	; 0x40
 8016db4:	807b      	strh	r3, [r7, #2]
 8016db6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016db8:	803d      	strh	r5, [r7, #0]
 8016dba:	4555      	cmp	r5, sl
 8016dbc:	80be      	strh	r6, [r7, #4]
 8016dbe:	80fe      	strh	r6, [r7, #6]
 8016dc0:	eb04 0c03 	add.w	ip, r4, r3
 8016dc4:	d051      	beq.n	8016e6a <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8016dc6:	9b01      	ldr	r3, [sp, #4]
 8016dc8:	eba3 070c 	sub.w	r7, r3, ip
 8016dcc:	443c      	add	r4, r7
 8016dce:	0164      	lsls	r4, r4, #5
 8016dd0:	fb94 f8f1 	sdiv	r8, r4, r1
 8016dd4:	fb01 4418 	mls	r4, r1, r8, r4
 8016dd8:	2c00      	cmp	r4, #0
 8016dda:	bfb8      	it	lt
 8016ddc:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016de0:	ebab 0301 	sub.w	r3, fp, r1
 8016de4:	f108 0701 	add.w	r7, r8, #1
 8016de8:	bfb8      	it	lt
 8016dea:	1864      	addlt	r4, r4, r1
 8016dec:	9309      	str	r3, [sp, #36]	; 0x24
 8016dee:	9711      	str	r7, [sp, #68]	; 0x44
 8016df0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016df2:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8016df6:	191b      	adds	r3, r3, r4
 8016df8:	bf58      	it	pl
 8016dfa:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8016dfc:	f8be b004 	ldrh.w	fp, [lr, #4]
 8016e00:	9309      	str	r3, [sp, #36]	; 0x24
 8016e02:	bf48      	it	mi
 8016e04:	4647      	movmi	r7, r8
 8016e06:	44bb      	add	fp, r7
 8016e08:	f8ae b004 	strh.w	fp, [lr, #4]
 8016e0c:	f8be b006 	ldrh.w	fp, [lr, #6]
 8016e10:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016e14:	f8ae b006 	strh.w	fp, [lr, #6]
 8016e18:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8016e1c:	44bc      	add	ip, r7
 8016e1e:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8016e20:	f8be b006 	ldrh.w	fp, [lr, #6]
 8016e24:	443d      	add	r5, r7
 8016e26:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8016e2a:	bf5c      	itt	pl
 8016e2c:	1a5b      	subpl	r3, r3, r1
 8016e2e:	9309      	strpl	r3, [sp, #36]	; 0x24
 8016e30:	ea5b 0307 	orrs.w	r3, fp, r7
 8016e34:	d011      	beq.n	8016e5a <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016e36:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8016e3a:	f1bb 0f00 	cmp.w	fp, #0
 8016e3e:	db0c      	blt.n	8016e5a <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016e40:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016e42:	45bb      	cmp	fp, r7
 8016e44:	da09      	bge.n	8016e5a <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016e46:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016e4a:	45bb      	cmp	fp, r7
 8016e4c:	bf3c      	itt	cc
 8016e4e:	f10e 0708 	addcc.w	r7, lr, #8
 8016e52:	6107      	strcc	r7, [r0, #16]
 8016e54:	f10b 0701 	add.w	r7, fp, #1
 8016e58:	6087      	str	r7, [r0, #8]
 8016e5a:	6907      	ldr	r7, [r0, #16]
 8016e5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016e5e:	803d      	strh	r5, [r7, #0]
 8016e60:	4555      	cmp	r5, sl
 8016e62:	807b      	strh	r3, [r7, #2]
 8016e64:	80be      	strh	r6, [r7, #4]
 8016e66:	80fe      	strh	r6, [r7, #6]
 8016e68:	d1c2      	bne.n	8016df0 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8016e6a:	9b01      	ldr	r3, [sp, #4]
 8016e6c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016e6e:	eba3 0c0c 	sub.w	ip, r3, ip
 8016e72:	6903      	ldr	r3, [r0, #16]
 8016e74:	8899      	ldrh	r1, [r3, #4]
 8016e76:	4461      	add	r1, ip
 8016e78:	8099      	strh	r1, [r3, #4]
 8016e7a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016e7c:	3720      	adds	r7, #32
 8016e7e:	1a7f      	subs	r7, r7, r1
 8016e80:	88d9      	ldrh	r1, [r3, #6]
 8016e82:	fb0c 1c07 	mla	ip, ip, r7, r1
 8016e86:	f8a3 c006 	strh.w	ip, [r3, #6]
 8016e8a:	e60e      	b.n	8016aaa <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016e8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016e8e:	f04f 34ff 	mov.w	r4, #4294967295
 8016e92:	940d      	str	r4, [sp, #52]	; 0x34
 8016e94:	437b      	muls	r3, r7
 8016e96:	4249      	negs	r1, r1
 8016e98:	2400      	movs	r4, #0
 8016e9a:	e756      	b.n	8016d4a <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8016e9c:	9905      	ldr	r1, [sp, #20]
 8016e9e:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8016ea2:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8016ea6:	f001 011f 	and.w	r1, r1, #31
 8016eaa:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8016eae:	9102      	str	r1, [sp, #8]
 8016eb0:	9904      	ldr	r1, [sp, #16]
 8016eb2:	45f3      	cmp	fp, lr
 8016eb4:	f009 0c1f 	and.w	ip, r9, #31
 8016eb8:	eba1 0406 	sub.w	r4, r1, r6
 8016ebc:	d108      	bne.n	8016ed0 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8016ebe:	9b02      	ldr	r3, [sp, #8]
 8016ec0:	449c      	add	ip, r3
 8016ec2:	44a0      	add	r8, r4
 8016ec4:	fb04 a40c 	mla	r4, r4, ip, sl
 8016ec8:	f8a7 8004 	strh.w	r8, [r7, #4]
 8016ecc:	80fc      	strh	r4, [r7, #6]
 8016ece:	e458      	b.n	8016782 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016ed0:	9905      	ldr	r1, [sp, #20]
 8016ed2:	ebb1 0109 	subs.w	r1, r1, r9
 8016ed6:	bf5b      	ittet	pl
 8016ed8:	f1cc 0520 	rsbpl	r5, ip, #32
 8016edc:	436c      	mulpl	r4, r5
 8016ede:	2500      	movmi	r5, #0
 8016ee0:	2520      	movpl	r5, #32
 8016ee2:	bf44      	itt	mi
 8016ee4:	fb04 f40c 	mulmi.w	r4, r4, ip
 8016ee8:	4249      	negmi	r1, r1
 8016eea:	9501      	str	r5, [sp, #4]
 8016eec:	9b01      	ldr	r3, [sp, #4]
 8016eee:	fb94 f5f1 	sdiv	r5, r4, r1
 8016ef2:	fb01 4415 	mls	r4, r1, r5, r4
 8016ef6:	bf54      	ite	pl
 8016ef8:	f04f 0901 	movpl.w	r9, #1
 8016efc:	f04f 39ff 	movmi.w	r9, #4294967295
 8016f00:	2c00      	cmp	r4, #0
 8016f02:	bfb8      	it	lt
 8016f04:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8016f08:	449c      	add	ip, r3
 8016f0a:	44a8      	add	r8, r5
 8016f0c:	fb05 ac0c 	mla	ip, r5, ip, sl
 8016f10:	f8a7 8004 	strh.w	r8, [r7, #4]
 8016f14:	f8a7 c006 	strh.w	ip, [r7, #6]
 8016f18:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016f1c:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8016f20:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016f24:	bfb8      	it	lt
 8016f26:	1864      	addlt	r4, r4, r1
 8016f28:	ea58 0707 	orrs.w	r7, r8, r7
 8016f2c:	eb0b 0309 	add.w	r3, fp, r9
 8016f30:	d011      	beq.n	8016f56 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016f32:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8016f36:	f1b8 0f00 	cmp.w	r8, #0
 8016f3a:	db0c      	blt.n	8016f56 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016f3c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016f3e:	45b8      	cmp	r8, r7
 8016f40:	da09      	bge.n	8016f56 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016f42:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8016f46:	45b8      	cmp	r8, r7
 8016f48:	bf3c      	itt	cc
 8016f4a:	f10c 0708 	addcc.w	r7, ip, #8
 8016f4e:	6107      	strcc	r7, [r0, #16]
 8016f50:	f108 0701 	add.w	r7, r8, #1
 8016f54:	6087      	str	r7, [r0, #8]
 8016f56:	6907      	ldr	r7, [r0, #16]
 8016f58:	f04f 0c00 	mov.w	ip, #0
 8016f5c:	b212      	sxth	r2, r2
 8016f5e:	459e      	cmp	lr, r3
 8016f60:	803b      	strh	r3, [r7, #0]
 8016f62:	807a      	strh	r2, [r7, #2]
 8016f64:	f8a7 c004 	strh.w	ip, [r7, #4]
 8016f68:	f8a7 c006 	strh.w	ip, [r7, #6]
 8016f6c:	442e      	add	r6, r5
 8016f6e:	d04d      	beq.n	801700c <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8016f70:	9f04      	ldr	r7, [sp, #16]
 8016f72:	1bbf      	subs	r7, r7, r6
 8016f74:	443d      	add	r5, r7
 8016f76:	016d      	lsls	r5, r5, #5
 8016f78:	fb95 f8f1 	sdiv	r8, r5, r1
 8016f7c:	fb01 5518 	mls	r5, r1, r8, r5
 8016f80:	4565      	cmp	r5, ip
 8016f82:	bfb8      	it	lt
 8016f84:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016f88:	f108 0701 	add.w	r7, r8, #1
 8016f8c:	bfb8      	it	lt
 8016f8e:	186d      	addlt	r5, r5, r1
 8016f90:	1a64      	subs	r4, r4, r1
 8016f92:	9703      	str	r7, [sp, #12]
 8016f94:	f04f 0a00 	mov.w	sl, #0
 8016f98:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016f9c:	1964      	adds	r4, r4, r5
 8016f9e:	bf58      	it	pl
 8016fa0:	9f03      	ldrpl	r7, [sp, #12]
 8016fa2:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8016fa6:	bf48      	it	mi
 8016fa8:	4647      	movmi	r7, r8
 8016faa:	44bb      	add	fp, r7
 8016fac:	f8ac b004 	strh.w	fp, [ip, #4]
 8016fb0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016fb4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016fb8:	f8ac b006 	strh.w	fp, [ip, #6]
 8016fbc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016fc0:	443e      	add	r6, r7
 8016fc2:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016fc6:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016fca:	bf58      	it	pl
 8016fcc:	1a64      	subpl	r4, r4, r1
 8016fce:	ea5b 0707 	orrs.w	r7, fp, r7
 8016fd2:	444b      	add	r3, r9
 8016fd4:	d011      	beq.n	8016ffa <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016fd6:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8016fda:	f1bb 0f00 	cmp.w	fp, #0
 8016fde:	db0c      	blt.n	8016ffa <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016fe0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016fe2:	45bb      	cmp	fp, r7
 8016fe4:	da09      	bge.n	8016ffa <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016fe6:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016fea:	45bb      	cmp	fp, r7
 8016fec:	bf3c      	itt	cc
 8016fee:	f10c 0708 	addcc.w	r7, ip, #8
 8016ff2:	6107      	strcc	r7, [r0, #16]
 8016ff4:	f10b 0701 	add.w	r7, fp, #1
 8016ff8:	6087      	str	r7, [r0, #8]
 8016ffa:	6907      	ldr	r7, [r0, #16]
 8016ffc:	459e      	cmp	lr, r3
 8016ffe:	803b      	strh	r3, [r7, #0]
 8017000:	807a      	strh	r2, [r7, #2]
 8017002:	f8a7 a004 	strh.w	sl, [r7, #4]
 8017006:	f8a7 a006 	strh.w	sl, [r7, #6]
 801700a:	d1c5      	bne.n	8016f98 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 801700c:	9b04      	ldr	r3, [sp, #16]
 801700e:	1b9e      	subs	r6, r3, r6
 8017010:	6903      	ldr	r3, [r0, #16]
 8017012:	889a      	ldrh	r2, [r3, #4]
 8017014:	4432      	add	r2, r6
 8017016:	809a      	strh	r2, [r3, #4]
 8017018:	9a02      	ldr	r2, [sp, #8]
 801701a:	f102 0c20 	add.w	ip, r2, #32
 801701e:	9a01      	ldr	r2, [sp, #4]
 8017020:	ebac 0c02 	sub.w	ip, ip, r2
 8017024:	88da      	ldrh	r2, [r3, #6]
 8017026:	fb06 260c 	mla	r6, r6, ip, r2
 801702a:	80de      	strh	r6, [r3, #6]
 801702c:	f7ff bba9 	b.w	8016782 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08017030 <_ZN8touchgfx7Outline6lineToEii>:
 8017030:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8017032:	079b      	lsls	r3, r3, #30
 8017034:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8017036:	460e      	mov	r6, r1
 8017038:	4615      	mov	r5, r2
 801703a:	d511      	bpl.n	8017060 <_ZN8touchgfx7Outline6lineToEii+0x30>
 801703c:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8017040:	ea86 0701 	eor.w	r7, r6, r1
 8017044:	ea85 0302 	eor.w	r3, r5, r2
 8017048:	433b      	orrs	r3, r7
 801704a:	d009      	beq.n	8017060 <_ZN8touchgfx7Outline6lineToEii+0x30>
 801704c:	4633      	mov	r3, r6
 801704e:	9500      	str	r5, [sp, #0]
 8017050:	f7ff fb3e 	bl	80166d0 <_ZN8touchgfx7Outline10renderLineEiiii>
 8017054:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8017056:	e9c0 6505 	strd	r6, r5, [r0, #20]
 801705a:	f043 0301 	orr.w	r3, r3, #1
 801705e:	6243      	str	r3, [r0, #36]	; 0x24
 8017060:	b003      	add	sp, #12
 8017062:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017064 <_ZN8touchgfx7Outline6moveToEii>:
 8017064:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017066:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8017068:	4615      	mov	r5, r2
 801706a:	079a      	lsls	r2, r3, #30
 801706c:	4604      	mov	r4, r0
 801706e:	460e      	mov	r6, r1
 8017070:	d401      	bmi.n	8017076 <_ZN8touchgfx7Outline6moveToEii+0x12>
 8017072:	f7ff faf9 	bl	8016668 <_ZN8touchgfx7Outline5resetEv>
 8017076:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8017078:	07db      	lsls	r3, r3, #31
 801707a:	d504      	bpl.n	8017086 <_ZN8touchgfx7Outline6moveToEii+0x22>
 801707c:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8017080:	4620      	mov	r0, r4
 8017082:	f7ff ffd5 	bl	8017030 <_ZN8touchgfx7Outline6lineToEii>
 8017086:	6923      	ldr	r3, [r4, #16]
 8017088:	f9b3 2000 	ldrsh.w	r2, [r3]
 801708c:	1170      	asrs	r0, r6, #5
 801708e:	4290      	cmp	r0, r2
 8017090:	ea4f 1165 	mov.w	r1, r5, asr #5
 8017094:	d103      	bne.n	801709e <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8017096:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801709a:	4291      	cmp	r1, r2
 801709c:	d01a      	beq.n	80170d4 <_ZN8touchgfx7Outline6moveToEii+0x70>
 801709e:	88df      	ldrh	r7, [r3, #6]
 80170a0:	889a      	ldrh	r2, [r3, #4]
 80170a2:	433a      	orrs	r2, r7
 80170a4:	d010      	beq.n	80170c8 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80170a6:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80170aa:	2a00      	cmp	r2, #0
 80170ac:	db0c      	blt.n	80170c8 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80170ae:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80170b0:	42ba      	cmp	r2, r7
 80170b2:	da09      	bge.n	80170c8 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80170b4:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 80170b8:	42ba      	cmp	r2, r7
 80170ba:	bf38      	it	cc
 80170bc:	3308      	addcc	r3, #8
 80170be:	f102 0201 	add.w	r2, r2, #1
 80170c2:	bf38      	it	cc
 80170c4:	6123      	strcc	r3, [r4, #16]
 80170c6:	60a2      	str	r2, [r4, #8]
 80170c8:	6923      	ldr	r3, [r4, #16]
 80170ca:	2200      	movs	r2, #0
 80170cc:	8018      	strh	r0, [r3, #0]
 80170ce:	8059      	strh	r1, [r3, #2]
 80170d0:	809a      	strh	r2, [r3, #4]
 80170d2:	80da      	strh	r2, [r3, #6]
 80170d4:	6166      	str	r6, [r4, #20]
 80170d6:	e9c4 5606 	strd	r5, r6, [r4, #24]
 80170da:	6225      	str	r5, [r4, #32]
 80170dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080170de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 80170de:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80170e2:	b0d0      	sub	sp, #320	; 0x140
 80170e4:	466c      	mov	r4, sp
 80170e6:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80170ea:	4627      	mov	r7, r4
 80170ec:	1a0d      	subs	r5, r1, r0
 80170ee:	2d48      	cmp	r5, #72	; 0x48
 80170f0:	f100 0308 	add.w	r3, r0, #8
 80170f4:	f340 80d5 	ble.w	80172a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80170f8:	112d      	asrs	r5, r5, #4
 80170fa:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 80170fe:	f9b0 9000 	ldrsh.w	r9, [r0]
 8017102:	6816      	ldr	r6, [r2, #0]
 8017104:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8017108:	6006      	str	r6, [r0, #0]
 801710a:	6856      	ldr	r6, [r2, #4]
 801710c:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8017110:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8017114:	6046      	str	r6, [r0, #4]
 8017116:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801711a:	f8a2 8002 	strh.w	r8, [r2, #2]
 801711e:	f8a2 e004 	strh.w	lr, [r2, #4]
 8017122:	f8a2 c006 	strh.w	ip, [r2, #6]
 8017126:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801712a:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 801712e:	4565      	cmp	r5, ip
 8017130:	f1a1 0208 	sub.w	r2, r1, #8
 8017134:	db06      	blt.n	8017144 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8017136:	d119      	bne.n	801716c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8017138:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 801713c:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8017140:	42ae      	cmp	r6, r5
 8017142:	dd13      	ble.n	801716c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8017144:	460e      	mov	r6, r1
 8017146:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801714a:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 801714e:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8017152:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8017156:	601d      	str	r5, [r3, #0]
 8017158:	6875      	ldr	r5, [r6, #4]
 801715a:	605d      	str	r5, [r3, #4]
 801715c:	f821 9c08 	strh.w	r9, [r1, #-8]
 8017160:	f821 cc06 	strh.w	ip, [r1, #-6]
 8017164:	f821 8c04 	strh.w	r8, [r1, #-4]
 8017168:	f821 ec02 	strh.w	lr, [r1, #-2]
 801716c:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8017170:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8017174:	42ae      	cmp	r6, r5
 8017176:	db06      	blt.n	8017186 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8017178:	d116      	bne.n	80171a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801717a:	f9b0 c000 	ldrsh.w	ip, [r0]
 801717e:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8017182:	45ac      	cmp	ip, r5
 8017184:	da10      	bge.n	80171a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8017186:	681d      	ldr	r5, [r3, #0]
 8017188:	f9b0 8000 	ldrsh.w	r8, [r0]
 801718c:	6005      	str	r5, [r0, #0]
 801718e:	685d      	ldr	r5, [r3, #4]
 8017190:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8017194:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8017198:	f8a0 8008 	strh.w	r8, [r0, #8]
 801719c:	6045      	str	r5, [r0, #4]
 801719e:	8146      	strh	r6, [r0, #10]
 80171a0:	f8a0 e00c 	strh.w	lr, [r0, #12]
 80171a4:	f8a0 c00e 	strh.w	ip, [r0, #14]
 80171a8:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80171ac:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80171b0:	4565      	cmp	r5, ip
 80171b2:	db06      	blt.n	80171c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80171b4:	d119      	bne.n	80171ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80171b6:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80171ba:	f9b0 5000 	ldrsh.w	r5, [r0]
 80171be:	42ae      	cmp	r6, r5
 80171c0:	da13      	bge.n	80171ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80171c2:	460e      	mov	r6, r1
 80171c4:	f9b0 9000 	ldrsh.w	r9, [r0]
 80171c8:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80171cc:	6005      	str	r5, [r0, #0]
 80171ce:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80171d2:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 80171d6:	6875      	ldr	r5, [r6, #4]
 80171d8:	6045      	str	r5, [r0, #4]
 80171da:	f821 9c08 	strh.w	r9, [r1, #-8]
 80171de:	f821 cc06 	strh.w	ip, [r1, #-6]
 80171e2:	f821 8c04 	strh.w	r8, [r1, #-4]
 80171e6:	f821 ec02 	strh.w	lr, [r1, #-2]
 80171ea:	3308      	adds	r3, #8
 80171ec:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80171f0:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80171f4:	45e6      	cmp	lr, ip
 80171f6:	dbf8      	blt.n	80171ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80171f8:	d105      	bne.n	8017206 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80171fa:	f9b3 6000 	ldrsh.w	r6, [r3]
 80171fe:	f9b0 5000 	ldrsh.w	r5, [r0]
 8017202:	42ae      	cmp	r6, r5
 8017204:	dbf1      	blt.n	80171ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8017206:	4615      	mov	r5, r2
 8017208:	3a08      	subs	r2, #8
 801720a:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 801720e:	45b4      	cmp	ip, r6
 8017210:	dbf9      	blt.n	8017206 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8017212:	d105      	bne.n	8017220 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8017214:	f9b0 8000 	ldrsh.w	r8, [r0]
 8017218:	f9b2 6000 	ldrsh.w	r6, [r2]
 801721c:	45b0      	cmp	r8, r6
 801721e:	dbf2      	blt.n	8017206 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8017220:	4293      	cmp	r3, r2
 8017222:	f1a5 0608 	sub.w	r6, r5, #8
 8017226:	d816      	bhi.n	8017256 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8017228:	f8d6 c000 	ldr.w	ip, [r6]
 801722c:	f9b3 a000 	ldrsh.w	sl, [r3]
 8017230:	f8c3 c000 	str.w	ip, [r3]
 8017234:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8017238:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 801723c:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8017240:	f8c3 c004 	str.w	ip, [r3, #4]
 8017244:	f825 ac08 	strh.w	sl, [r5, #-8]
 8017248:	f825 ec06 	strh.w	lr, [r5, #-6]
 801724c:	f825 9c04 	strh.w	r9, [r5, #-4]
 8017250:	f825 8c02 	strh.w	r8, [r5, #-2]
 8017254:	e7c9      	b.n	80171ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8017256:	f8d6 e000 	ldr.w	lr, [r6]
 801725a:	f9b0 a000 	ldrsh.w	sl, [r0]
 801725e:	f8c0 e000 	str.w	lr, [r0]
 8017262:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8017266:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801726a:	f8d6 e004 	ldr.w	lr, [r6, #4]
 801726e:	f8c0 e004 	str.w	lr, [r0, #4]
 8017272:	f825 ac08 	strh.w	sl, [r5, #-8]
 8017276:	f825 cc06 	strh.w	ip, [r5, #-6]
 801727a:	f825 9c04 	strh.w	r9, [r5, #-4]
 801727e:	f825 8c02 	strh.w	r8, [r5, #-2]
 8017282:	1acd      	subs	r5, r1, r3
 8017284:	1a16      	subs	r6, r2, r0
 8017286:	10ed      	asrs	r5, r5, #3
 8017288:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 801728c:	bfb5      	itete	lt
 801728e:	e9c4 0200 	strdlt	r0, r2, [r4]
 8017292:	e9c4 3100 	strdge	r3, r1, [r4]
 8017296:	460a      	movlt	r2, r1
 8017298:	4603      	movge	r3, r0
 801729a:	3408      	adds	r4, #8
 801729c:	4618      	mov	r0, r3
 801729e:	4611      	mov	r1, r2
 80172a0:	e724      	b.n	80170ec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80172a2:	4299      	cmp	r1, r3
 80172a4:	d928      	bls.n	80172f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 80172a6:	f1a3 0210 	sub.w	r2, r3, #16
 80172aa:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80172ae:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80172b2:	45ac      	cmp	ip, r5
 80172b4:	db06      	blt.n	80172c4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80172b6:	d11d      	bne.n	80172f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80172b8:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80172bc:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80172c0:	42ae      	cmp	r6, r5
 80172c2:	da17      	bge.n	80172f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80172c4:	4615      	mov	r5, r2
 80172c6:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80172ca:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80172ce:	6116      	str	r6, [r2, #16]
 80172d0:	686e      	ldr	r6, [r5, #4]
 80172d2:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80172d6:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 80172da:	f8a2 9008 	strh.w	r9, [r2, #8]
 80172de:	42a8      	cmp	r0, r5
 80172e0:	6156      	str	r6, [r2, #20]
 80172e2:	f8a2 c00a 	strh.w	ip, [r2, #10]
 80172e6:	f8a2 800c 	strh.w	r8, [r2, #12]
 80172ea:	f8a2 e00e 	strh.w	lr, [r2, #14]
 80172ee:	f1a2 0208 	sub.w	r2, r2, #8
 80172f2:	d1da      	bne.n	80172aa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 80172f4:	3308      	adds	r3, #8
 80172f6:	e7d4      	b.n	80172a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80172f8:	42bc      	cmp	r4, r7
 80172fa:	d903      	bls.n	8017304 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 80172fc:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8017300:	3c08      	subs	r4, #8
 8017302:	e6f3      	b.n	80170ec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8017304:	b050      	add	sp, #320	; 0x140
 8017306:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801730a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801730a:	b510      	push	{r4, lr}
 801730c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801730e:	07da      	lsls	r2, r3, #31
 8017310:	4604      	mov	r4, r0
 8017312:	d507      	bpl.n	8017324 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8017314:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8017318:	f7ff fe8a 	bl	8017030 <_ZN8touchgfx7Outline6lineToEii>
 801731c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801731e:	f023 0301 	bic.w	r3, r3, #1
 8017322:	6243      	str	r3, [r0, #36]	; 0x24
 8017324:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8017326:	079b      	lsls	r3, r3, #30
 8017328:	d521      	bpl.n	801736e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801732a:	6923      	ldr	r3, [r4, #16]
 801732c:	88d9      	ldrh	r1, [r3, #6]
 801732e:	889a      	ldrh	r2, [r3, #4]
 8017330:	430a      	orrs	r2, r1
 8017332:	d010      	beq.n	8017356 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8017334:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8017338:	2a00      	cmp	r2, #0
 801733a:	db0c      	blt.n	8017356 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 801733c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 801733e:	428a      	cmp	r2, r1
 8017340:	da09      	bge.n	8017356 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8017342:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8017346:	4291      	cmp	r1, r2
 8017348:	bf88      	it	hi
 801734a:	3308      	addhi	r3, #8
 801734c:	f102 0201 	add.w	r2, r2, #1
 8017350:	bf88      	it	hi
 8017352:	6123      	strhi	r3, [r4, #16]
 8017354:	60a2      	str	r2, [r4, #8]
 8017356:	68a1      	ldr	r1, [r4, #8]
 8017358:	b129      	cbz	r1, 8017366 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801735a:	6863      	ldr	r3, [r4, #4]
 801735c:	4299      	cmp	r1, r3
 801735e:	d802      	bhi.n	8017366 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8017360:	68e0      	ldr	r0, [r4, #12]
 8017362:	f7ff febc 	bl	80170de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8017366:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8017368:	f023 0302 	bic.w	r3, r3, #2
 801736c:	6263      	str	r3, [r4, #36]	; 0x24
 801736e:	68e0      	ldr	r0, [r4, #12]
 8017370:	bd10      	pop	{r4, pc}
	...

08017374 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8017374:	4b01      	ldr	r3, [pc, #4]	; (801737c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8017376:	6818      	ldr	r0, [r3, #0]
 8017378:	4770      	bx	lr
 801737a:	bf00      	nop
 801737c:	20002330 	.word	0x20002330

08017380 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8017380:	4b01      	ldr	r3, [pc, #4]	; (8017388 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8017382:	6818      	ldr	r0, [r3, #0]
 8017384:	4770      	bx	lr
 8017386:	bf00      	nop
 8017388:	20002334 	.word	0x20002334

0801738c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 801738c:	b510      	push	{r4, lr}
 801738e:	6803      	ldr	r3, [r0, #0]
 8017390:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017392:	460c      	mov	r4, r1
 8017394:	4798      	blx	r3
 8017396:	1b03      	subs	r3, r0, r4
 8017398:	4258      	negs	r0, r3
 801739a:	4158      	adcs	r0, r3
 801739c:	bd10      	pop	{r4, pc}
	...

080173a0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80173a0:	4b01      	ldr	r3, [pc, #4]	; (80173a8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80173a2:	6019      	str	r1, [r3, #0]
 80173a4:	4770      	bx	lr
 80173a6:	bf00      	nop
 80173a8:	20002338 	.word	0x20002338

080173ac <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80173ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173b0:	4696      	mov	lr, r2
 80173b2:	4605      	mov	r5, r0
 80173b4:	4614      	mov	r4, r2
 80173b6:	460e      	mov	r6, r1
 80173b8:	461f      	mov	r7, r3
 80173ba:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80173be:	b097      	sub	sp, #92	; 0x5c
 80173c0:	f10d 0c1c 	add.w	ip, sp, #28
 80173c4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80173c8:	f8de 3000 	ldr.w	r3, [lr]
 80173cc:	f8cc 3000 	str.w	r3, [ip]
 80173d0:	f104 0e14 	add.w	lr, r4, #20
 80173d4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80173d8:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80173dc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80173e0:	f8de 3000 	ldr.w	r3, [lr]
 80173e4:	f8cc 3000 	str.w	r3, [ip]
 80173e8:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80173ec:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80173f0:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80173f4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80173f8:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 80173fc:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8017400:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8017404:	f8de 3000 	ldr.w	r3, [lr]
 8017408:	f8cc 3000 	str.w	r3, [ip]
 801740c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801740e:	682b      	ldr	r3, [r5, #0]
 8017410:	9201      	str	r2, [sp, #4]
 8017412:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8017416:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017418:	9200      	str	r2, [sp, #0]
 801741a:	f8cd 8008 	str.w	r8, [sp, #8]
 801741e:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8017422:	aa07      	add	r2, sp, #28
 8017424:	463b      	mov	r3, r7
 8017426:	4631      	mov	r1, r6
 8017428:	4628      	mov	r0, r5
 801742a:	47d8      	blx	fp
 801742c:	46a6      	mov	lr, r4
 801742e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017432:	f10d 0c1c 	add.w	ip, sp, #28
 8017436:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801743a:	f8de 3000 	ldr.w	r3, [lr]
 801743e:	f8cc 3000 	str.w	r3, [ip]
 8017442:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8017446:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801744a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801744e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017452:	343c      	adds	r4, #60	; 0x3c
 8017454:	f8de 3000 	ldr.w	r3, [lr]
 8017458:	f8cc 3000 	str.w	r3, [ip]
 801745c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801745e:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8017462:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017466:	6823      	ldr	r3, [r4, #0]
 8017468:	f8cc 3000 	str.w	r3, [ip]
 801746c:	682b      	ldr	r3, [r5, #0]
 801746e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8017472:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8017474:	9201      	str	r2, [sp, #4]
 8017476:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017478:	9200      	str	r2, [sp, #0]
 801747a:	f8cd 8008 	str.w	r8, [sp, #8]
 801747e:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8017480:	aa07      	add	r2, sp, #28
 8017482:	463b      	mov	r3, r7
 8017484:	4631      	mov	r1, r6
 8017486:	4628      	mov	r0, r5
 8017488:	47a0      	blx	r4
 801748a:	b017      	add	sp, #92	; 0x5c
 801748c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017490 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8017490:	2000      	movs	r0, #0
 8017492:	4770      	bx	lr

08017494 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8017494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017498:	b08d      	sub	sp, #52	; 0x34
 801749a:	4688      	mov	r8, r1
 801749c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801749e:	f8d3 c000 	ldr.w	ip, [r3]
 80174a2:	680f      	ldr	r7, [r1, #0]
 80174a4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80174a8:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80174ac:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80174b0:	edd3 6a07 	vldr	s13, [r3, #28]
 80174b4:	9918      	ldr	r1, [sp, #96]	; 0x60
 80174b6:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80174ba:	f9b1 9000 	ldrsh.w	r9, [r1]
 80174be:	f9ba 1000 	ldrsh.w	r1, [sl]
 80174c2:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80174c6:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 80174ca:	eba7 070c 	sub.w	r7, r7, ip
 80174ce:	42bc      	cmp	r4, r7
 80174d0:	bfa8      	it	ge
 80174d2:	463c      	movge	r4, r7
 80174d4:	ee07 4a90 	vmov	s15, r4
 80174d8:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80174dc:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 80174e0:	ee25 4a04 	vmul.f32	s8, s10, s8
 80174e4:	ee65 4a24 	vmul.f32	s9, s10, s9
 80174e8:	ee25 5a27 	vmul.f32	s10, s10, s15
 80174ec:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80174f0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80174f4:	eb09 0e0c 	add.w	lr, r9, ip
 80174f8:	4571      	cmp	r1, lr
 80174fa:	ee71 0aa4 	vadd.f32	s1, s3, s9
 80174fe:	ee32 1a05 	vadd.f32	s2, s4, s10
 8017502:	ee36 0a84 	vadd.f32	s0, s13, s8
 8017506:	ee61 1a87 	vmul.f32	s3, s3, s14
 801750a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801750e:	f340 808d 	ble.w	801762c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8017512:	eba1 060e 	sub.w	r6, r1, lr
 8017516:	fb96 f5f4 	sdiv	r5, r6, r4
 801751a:	ee07 5a10 	vmov	s14, r5
 801751e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017522:	2d00      	cmp	r5, #0
 8017524:	fb04 6615 	mls	r6, r4, r5, r6
 8017528:	eea7 0a04 	vfma.f32	s0, s14, s8
 801752c:	eee7 0a24 	vfma.f32	s1, s14, s9
 8017530:	eea7 1a05 	vfma.f32	s2, s14, s10
 8017534:	dd13      	ble.n	801755e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8017536:	ee70 6a44 	vsub.f32	s13, s0, s8
 801753a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 801753e:	eef5 6a40 	vcmp.f32	s13, #0.0
 8017542:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017546:	bf18      	it	ne
 8017548:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 801754c:	ee31 2a45 	vsub.f32	s4, s2, s10
 8017550:	bf08      	it	eq
 8017552:	eeb0 7a67 	vmoveq.f32	s14, s15
 8017556:	ee61 1a87 	vmul.f32	s3, s3, s14
 801755a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801755e:	fb05 f204 	mul.w	r2, r5, r4
 8017562:	1abf      	subs	r7, r7, r2
 8017564:	4494      	add	ip, r2
 8017566:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 801756a:	4411      	add	r1, r2
 801756c:	eb09 020c 	add.w	r2, r9, ip
 8017570:	443a      	add	r2, r7
 8017572:	b209      	sxth	r1, r1
 8017574:	428a      	cmp	r2, r1
 8017576:	bfc4      	itt	gt
 8017578:	eba1 0209 	subgt.w	r2, r1, r9
 801757c:	eba2 070c 	subgt.w	r7, r2, ip
 8017580:	2f00      	cmp	r7, #0
 8017582:	dd50      	ble.n	8017626 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8017584:	fb97 f1f4 	sdiv	r1, r7, r4
 8017588:	fb04 7211 	mls	r2, r4, r1, r7
 801758c:	b90a      	cbnz	r2, 8017592 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 801758e:	3901      	subs	r1, #1
 8017590:	4622      	mov	r2, r4
 8017592:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8017596:	6840      	ldr	r0, [r0, #4]
 8017598:	900b      	str	r0, [sp, #44]	; 0x2c
 801759a:	f8d0 a000 	ldr.w	sl, [r0]
 801759e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80175a0:	9008      	str	r0, [sp, #32]
 80175a2:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80175a6:	9818      	ldr	r0, [sp, #96]	; 0x60
 80175a8:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80175ac:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80175b0:	695b      	ldr	r3, [r3, #20]
 80175b2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80175b4:	445b      	add	r3, fp
 80175b6:	eef0 6a42 	vmov.f32	s13, s4
 80175ba:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80175be:	ee21 3a23 	vmul.f32	s6, s2, s7
 80175c2:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80175c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80175ca:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80175ce:	9307      	str	r3, [sp, #28]
 80175d0:	ee17 7a90 	vmov	r7, s15
 80175d4:	ee73 7a42 	vsub.f32	s15, s6, s4
 80175d8:	eeb0 7a61 	vmov.f32	s14, s3
 80175dc:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80175e0:	ee16 3a90 	vmov	r3, s13
 80175e4:	fb97 f7f4 	sdiv	r7, r7, r4
 80175e8:	ee17 ca90 	vmov	ip, s15
 80175ec:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80175f0:	fb9c fcf4 	sdiv	ip, ip, r4
 80175f4:	fb0c 3306 	mla	r3, ip, r6, r3
 80175f8:	9302      	str	r3, [sp, #8]
 80175fa:	ee17 3a10 	vmov	r3, s14
 80175fe:	44b6      	add	lr, r6
 8017600:	fb04 e505 	mla	r5, r4, r5, lr
 8017604:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8017608:	fb07 3706 	mla	r7, r7, r6, r3
 801760c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8017610:	e9cd 4700 	strd	r4, r7, [sp]
 8017614:	2900      	cmp	r1, #0
 8017616:	bfcc      	ite	gt
 8017618:	46a1      	movgt	r9, r4
 801761a:	4691      	movle	r9, r2
 801761c:	eba9 0306 	sub.w	r3, r9, r6
 8017620:	f8da 4008 	ldr.w	r4, [sl, #8]
 8017624:	47a0      	blx	r4
 8017626:	b00d      	add	sp, #52	; 0x34
 8017628:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801762c:	2500      	movs	r5, #0
 801762e:	462e      	mov	r6, r5
 8017630:	e799      	b.n	8017566 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08017634 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8017634:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017638:	b0db      	sub	sp, #364	; 0x16c
 801763a:	461d      	mov	r5, r3
 801763c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8017640:	930a      	str	r3, [sp, #40]	; 0x28
 8017642:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8017646:	930b      	str	r3, [sp, #44]	; 0x2c
 8017648:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 801764c:	9310      	str	r3, [sp, #64]	; 0x40
 801764e:	6803      	ldr	r3, [r0, #0]
 8017650:	910f      	str	r1, [sp, #60]	; 0x3c
 8017652:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8017654:	9009      	str	r0, [sp, #36]	; 0x24
 8017656:	4614      	mov	r4, r2
 8017658:	4629      	mov	r1, r5
 801765a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 801765e:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8017662:	47b8      	blx	r7
 8017664:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017666:	6058      	str	r0, [r3, #4]
 8017668:	2800      	cmp	r0, #0
 801766a:	f000 83a1 	beq.w	8017db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801766e:	682b      	ldr	r3, [r5, #0]
 8017670:	9314      	str	r3, [sp, #80]	; 0x50
 8017672:	686b      	ldr	r3, [r5, #4]
 8017674:	9315      	str	r3, [sp, #84]	; 0x54
 8017676:	4bc4      	ldr	r3, [pc, #784]	; (8017988 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8017678:	ed94 7a02 	vldr	s14, [r4, #8]
 801767c:	7819      	ldrb	r1, [r3, #0]
 801767e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8017682:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8017686:	2900      	cmp	r1, #0
 8017688:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801768c:	bf16      	itet	ne
 801768e:	4619      	movne	r1, r3
 8017690:	4611      	moveq	r1, r2
 8017692:	4613      	movne	r3, r2
 8017694:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017698:	9116      	str	r1, [sp, #88]	; 0x58
 801769a:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 801769e:	f240 8387 	bls.w	8017db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80176a2:	ed94 7a07 	vldr	s14, [r4, #28]
 80176a6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80176aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176ae:	f240 837f 	bls.w	8017db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80176b2:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80176b6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80176ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176be:	f240 8377 	bls.w	8017db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80176c2:	6822      	ldr	r2, [r4, #0]
 80176c4:	4bb1      	ldr	r3, [pc, #708]	; (801798c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80176c6:	429a      	cmp	r2, r3
 80176c8:	f2c0 8372 	blt.w	8017db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80176cc:	49b0      	ldr	r1, [pc, #704]	; (8017990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80176ce:	6963      	ldr	r3, [r4, #20]
 80176d0:	428a      	cmp	r2, r1
 80176d2:	f300 836d 	bgt.w	8017db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80176d6:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80176da:	48ae      	ldr	r0, [pc, #696]	; (8017994 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 80176dc:	33ff      	adds	r3, #255	; 0xff
 80176de:	4283      	cmp	r3, r0
 80176e0:	f200 8366 	bhi.w	8017db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80176e4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80176e6:	4dac      	ldr	r5, [pc, #688]	; (8017998 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 80176e8:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80176ec:	33ff      	adds	r3, #255	; 0xff
 80176ee:	42ab      	cmp	r3, r5
 80176f0:	f200 835e 	bhi.w	8017db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80176f4:	6862      	ldr	r2, [r4, #4]
 80176f6:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 80176fa:	33ff      	adds	r3, #255	; 0xff
 80176fc:	4283      	cmp	r3, r0
 80176fe:	f200 8357 	bhi.w	8017db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017702:	69a1      	ldr	r1, [r4, #24]
 8017704:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8017708:	33ff      	adds	r3, #255	; 0xff
 801770a:	4283      	cmp	r3, r0
 801770c:	f200 8350 	bhi.w	8017db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017710:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8017712:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8017716:	30ff      	adds	r0, #255	; 0xff
 8017718:	42a8      	cmp	r0, r5
 801771a:	f200 8349 	bhi.w	8017db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801771e:	428a      	cmp	r2, r1
 8017720:	f280 8110 	bge.w	8017944 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8017724:	429a      	cmp	r2, r3
 8017726:	f300 8119 	bgt.w	801795c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 801772a:	4299      	cmp	r1, r3
 801772c:	f280 811d 	bge.w	801796a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8017730:	2502      	movs	r5, #2
 8017732:	2701      	movs	r7, #1
 8017734:	46a9      	mov	r9, r5
 8017736:	46b8      	mov	r8, r7
 8017738:	f04f 0a00 	mov.w	sl, #0
 801773c:	4621      	mov	r1, r4
 801773e:	a849      	add	r0, sp, #292	; 0x124
 8017740:	f003 ffc6 	bl	801b6d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8017744:	4622      	mov	r2, r4
 8017746:	4653      	mov	r3, sl
 8017748:	a949      	add	r1, sp, #292	; 0x124
 801774a:	f8cd 9000 	str.w	r9, [sp]
 801774e:	a819      	add	r0, sp, #100	; 0x64
 8017750:	f004 f8ee 	bl	801b930 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8017754:	4622      	mov	r2, r4
 8017756:	4653      	mov	r3, sl
 8017758:	a949      	add	r1, sp, #292	; 0x124
 801775a:	f8cd 8000 	str.w	r8, [sp]
 801775e:	a829      	add	r0, sp, #164	; 0xa4
 8017760:	f004 f8e6 	bl	801b930 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8017764:	4643      	mov	r3, r8
 8017766:	4622      	mov	r2, r4
 8017768:	a949      	add	r1, sp, #292	; 0x124
 801776a:	f8cd 9000 	str.w	r9, [sp]
 801776e:	a839      	add	r0, sp, #228	; 0xe4
 8017770:	f004 f8de 	bl	801b930 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8017774:	42af      	cmp	r7, r5
 8017776:	bfb5      	itete	lt
 8017778:	2300      	movlt	r3, #0
 801777a:	2301      	movge	r3, #1
 801777c:	930e      	strlt	r3, [sp, #56]	; 0x38
 801777e:	930e      	strge	r3, [sp, #56]	; 0x38
 8017780:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017782:	e893 0003 	ldmia.w	r3, {r0, r1}
 8017786:	af12      	add	r7, sp, #72	; 0x48
 8017788:	bfb9      	ittee	lt
 801778a:	ad29      	addlt	r5, sp, #164	; 0xa4
 801778c:	ac19      	addlt	r4, sp, #100	; 0x64
 801778e:	ad19      	addge	r5, sp, #100	; 0x64
 8017790:	ac29      	addge	r4, sp, #164	; 0xa4
 8017792:	e887 0003 	stmia.w	r7, {r0, r1}
 8017796:	b928      	cbnz	r0, 80177a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8017798:	4b80      	ldr	r3, [pc, #512]	; (801799c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 801779a:	6818      	ldr	r0, [r3, #0]
 801779c:	6803      	ldr	r3, [r0, #0]
 801779e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80177a0:	4798      	blx	r3
 80177a2:	6038      	str	r0, [r7, #0]
 80177a4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80177a6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80177aa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80177ae:	930c      	str	r3, [sp, #48]	; 0x30
 80177b0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80177b2:	6963      	ldr	r3, [r4, #20]
 80177b4:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80177b6:	440b      	add	r3, r1
 80177b8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80177bc:	4408      	add	r0, r1
 80177be:	b200      	sxth	r0, r0
 80177c0:	4283      	cmp	r3, r0
 80177c2:	900d      	str	r0, [sp, #52]	; 0x34
 80177c4:	f280 80dd 	bge.w	8017982 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80177c8:	428b      	cmp	r3, r1
 80177ca:	da08      	bge.n	80177de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80177cc:	2a00      	cmp	r2, #0
 80177ce:	dd06      	ble.n	80177de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80177d0:	1acb      	subs	r3, r1, r3
 80177d2:	429a      	cmp	r2, r3
 80177d4:	f2c0 80e4 	blt.w	80179a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 80177d8:	2b00      	cmp	r3, #0
 80177da:	f300 80e2 	bgt.w	80179a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80177de:	6967      	ldr	r7, [r4, #20]
 80177e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80177e2:	443b      	add	r3, r7
 80177e4:	461f      	mov	r7, r3
 80177e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80177e8:	1bdf      	subs	r7, r3, r7
 80177ea:	4297      	cmp	r7, r2
 80177ec:	bfa8      	it	ge
 80177ee:	4617      	movge	r7, r2
 80177f0:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80177f4:	2f00      	cmp	r7, #0
 80177f6:	f340 8166 	ble.w	8017ac6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80177fa:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80177fc:	6829      	ldr	r1, [r5, #0]
 80177fe:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017802:	f9bb 3000 	ldrsh.w	r3, [fp]
 8017806:	6820      	ldr	r0, [r4, #0]
 8017808:	4411      	add	r1, r2
 801780a:	4299      	cmp	r1, r3
 801780c:	dd1a      	ble.n	8017844 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801780e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8017812:	440b      	add	r3, r1
 8017814:	4402      	add	r2, r0
 8017816:	b21b      	sxth	r3, r3
 8017818:	429a      	cmp	r2, r3
 801781a:	dc13      	bgt.n	8017844 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801781c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801781e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017820:	681b      	ldr	r3, [r3, #0]
 8017822:	9206      	str	r2, [sp, #24]
 8017824:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017826:	9205      	str	r2, [sp, #20]
 8017828:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801782a:	9500      	str	r5, [sp, #0]
 801782c:	e9cd b203 	strd	fp, r2, [sp, #12]
 8017830:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8017832:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017834:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8017838:	a912      	add	r1, sp, #72	; 0x48
 801783a:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 801783e:	aa49      	add	r2, sp, #292	; 0x124
 8017840:	4623      	mov	r3, r4
 8017842:	47c8      	blx	r9
 8017844:	e9d4 2300 	ldrd	r2, r3, [r4]
 8017848:	441a      	add	r2, r3
 801784a:	6963      	ldr	r3, [r4, #20]
 801784c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8017850:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8017854:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8017858:	68a1      	ldr	r1, [r4, #8]
 801785a:	ed94 6a08 	vldr	s12, [r4, #32]
 801785e:	6022      	str	r2, [r4, #0]
 8017860:	3301      	adds	r3, #1
 8017862:	6163      	str	r3, [r4, #20]
 8017864:	69a3      	ldr	r3, [r4, #24]
 8017866:	ee37 7a27 	vadd.f32	s14, s14, s15
 801786a:	3b01      	subs	r3, #1
 801786c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8017870:	61a3      	str	r3, [r4, #24]
 8017872:	6923      	ldr	r3, [r4, #16]
 8017874:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8017878:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801787c:	edd4 6a07 	vldr	s13, [r4, #28]
 8017880:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8017884:	440b      	add	r3, r1
 8017886:	68e1      	ldr	r1, [r4, #12]
 8017888:	6123      	str	r3, [r4, #16]
 801788a:	ee76 6a86 	vadd.f32	s13, s13, s12
 801788e:	428b      	cmp	r3, r1
 8017890:	edc4 6a07 	vstr	s13, [r4, #28]
 8017894:	db15      	blt.n	80178c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8017896:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801789a:	ee76 6a26 	vadd.f32	s13, s12, s13
 801789e:	3201      	adds	r2, #1
 80178a0:	edc4 6a07 	vstr	s13, [r4, #28]
 80178a4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80178a8:	6022      	str	r2, [r4, #0]
 80178aa:	ee36 7a87 	vadd.f32	s14, s13, s14
 80178ae:	1a5b      	subs	r3, r3, r1
 80178b0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80178b4:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80178b8:	6123      	str	r3, [r4, #16]
 80178ba:	ee77 7a27 	vadd.f32	s15, s14, s15
 80178be:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80178c2:	e9d5 2300 	ldrd	r2, r3, [r5]
 80178c6:	441a      	add	r2, r3
 80178c8:	696b      	ldr	r3, [r5, #20]
 80178ca:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80178ce:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80178d2:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80178d6:	68a9      	ldr	r1, [r5, #8]
 80178d8:	ed95 6a08 	vldr	s12, [r5, #32]
 80178dc:	602a      	str	r2, [r5, #0]
 80178de:	3301      	adds	r3, #1
 80178e0:	616b      	str	r3, [r5, #20]
 80178e2:	69ab      	ldr	r3, [r5, #24]
 80178e4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80178e8:	3b01      	subs	r3, #1
 80178ea:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80178ee:	61ab      	str	r3, [r5, #24]
 80178f0:	692b      	ldr	r3, [r5, #16]
 80178f2:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80178f6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80178fa:	edd5 6a07 	vldr	s13, [r5, #28]
 80178fe:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017902:	440b      	add	r3, r1
 8017904:	68e9      	ldr	r1, [r5, #12]
 8017906:	612b      	str	r3, [r5, #16]
 8017908:	ee76 6a86 	vadd.f32	s13, s13, s12
 801790c:	428b      	cmp	r3, r1
 801790e:	edc5 6a07 	vstr	s13, [r5, #28]
 8017912:	db15      	blt.n	8017940 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8017914:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8017918:	ee76 6a26 	vadd.f32	s13, s12, s13
 801791c:	3201      	adds	r2, #1
 801791e:	edc5 6a07 	vstr	s13, [r5, #28]
 8017922:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8017926:	602a      	str	r2, [r5, #0]
 8017928:	ee36 7a87 	vadd.f32	s14, s13, s14
 801792c:	1a5b      	subs	r3, r3, r1
 801792e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8017932:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8017936:	612b      	str	r3, [r5, #16]
 8017938:	ee77 7a27 	vadd.f32	s15, s14, s15
 801793c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017940:	3f01      	subs	r7, #1
 8017942:	e757      	b.n	80177f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8017944:	4299      	cmp	r1, r3
 8017946:	dc13      	bgt.n	8017970 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8017948:	429a      	cmp	r2, r3
 801794a:	da14      	bge.n	8017976 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 801794c:	2502      	movs	r5, #2
 801794e:	2703      	movs	r7, #3
 8017950:	46a9      	mov	r9, r5
 8017952:	f04f 0800 	mov.w	r8, #0
 8017956:	f04f 0a01 	mov.w	sl, #1
 801795a:	e6ef      	b.n	801773c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801795c:	2501      	movs	r5, #1
 801795e:	2700      	movs	r7, #0
 8017960:	46a9      	mov	r9, r5
 8017962:	46b8      	mov	r8, r7
 8017964:	f04f 0a02 	mov.w	sl, #2
 8017968:	e6e8      	b.n	801773c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801796a:	2501      	movs	r5, #1
 801796c:	2702      	movs	r7, #2
 801796e:	e6e1      	b.n	8017734 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8017970:	2500      	movs	r5, #0
 8017972:	2701      	movs	r7, #1
 8017974:	e7f4      	b.n	8017960 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8017976:	2702      	movs	r7, #2
 8017978:	2503      	movs	r5, #3
 801797a:	f04f 0900 	mov.w	r9, #0
 801797e:	46b8      	mov	r8, r7
 8017980:	e7e9      	b.n	8017956 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8017982:	4613      	mov	r3, r2
 8017984:	e728      	b.n	80177d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8017986:	bf00      	nop
 8017988:	20002320 	.word	0x20002320
 801798c:	fffd8f01 	.word	0xfffd8f01
 8017990:	00027100 	.word	0x00027100
 8017994:	0004e1ff 	.word	0x0004e1ff
 8017998:	0004e1fe 	.word	0x0004e1fe
 801799c:	20002328 	.word	0x20002328
 80179a0:	4613      	mov	r3, r2
 80179a2:	992b      	ldr	r1, [sp, #172]	; 0xac
 80179a4:	9111      	str	r1, [sp, #68]	; 0x44
 80179a6:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80179aa:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80179ae:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80179b0:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80179b4:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80179b8:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80179bc:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80179c0:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80179c4:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80179c8:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80179cc:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80179d0:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 80179d4:	469e      	mov	lr, r3
 80179d6:	469c      	mov	ip, r3
 80179d8:	f04f 0900 	mov.w	r9, #0
 80179dc:	f1bc 0f00 	cmp.w	ip, #0
 80179e0:	d147      	bne.n	8017a72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80179e2:	eb03 0c07 	add.w	ip, r3, r7
 80179e6:	1ad7      	subs	r7, r2, r3
 80179e8:	f1b9 0f00 	cmp.w	r9, #0
 80179ec:	d009      	beq.n	8017a02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80179ee:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 80179f2:	9029      	str	r0, [sp, #164]	; 0xa4
 80179f4:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 80179f8:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 80179fc:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8017a00:	912d      	str	r1, [sp, #180]	; 0xb4
 8017a02:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8017a04:	9111      	str	r1, [sp, #68]	; 0x44
 8017a06:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8017a0a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8017a0e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8017a12:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8017a16:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8017a1a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8017a1e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8017a22:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8017a26:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8017a2a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8017a2e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8017a32:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8017a36:	f04f 0800 	mov.w	r8, #0
 8017a3a:	f1be 0f00 	cmp.w	lr, #0
 8017a3e:	d031      	beq.n	8017aa4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8017a40:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8017a42:	4431      	add	r1, r6
 8017a44:	4549      	cmp	r1, r9
 8017a46:	4450      	add	r0, sl
 8017a48:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8017a4c:	ee37 7a04 	vadd.f32	s14, s14, s8
 8017a50:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8017a54:	db08      	blt.n	8017a68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8017a56:	ee77 7a85 	vadd.f32	s15, s15, s10
 8017a5a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8017a5e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8017a62:	3001      	adds	r0, #1
 8017a64:	eba1 0109 	sub.w	r1, r1, r9
 8017a68:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017a6c:	f04f 0801 	mov.w	r8, #1
 8017a70:	e7e3      	b.n	8017a3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8017a72:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8017a74:	4431      	add	r1, r6
 8017a76:	4541      	cmp	r1, r8
 8017a78:	4450      	add	r0, sl
 8017a7a:	ee37 7a24 	vadd.f32	s14, s14, s9
 8017a7e:	ee77 7a84 	vadd.f32	s15, s15, s8
 8017a82:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8017a86:	db08      	blt.n	8017a9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8017a88:	ee76 6a85 	vadd.f32	s13, s13, s10
 8017a8c:	ee37 7a25 	vadd.f32	s14, s14, s11
 8017a90:	ee77 7a86 	vadd.f32	s15, s15, s12
 8017a94:	3001      	adds	r0, #1
 8017a96:	eba1 0108 	sub.w	r1, r1, r8
 8017a9a:	f10c 3cff 	add.w	ip, ip, #4294967295
 8017a9e:	f04f 0901 	mov.w	r9, #1
 8017aa2:	e79b      	b.n	80179dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8017aa4:	449c      	add	ip, r3
 8017aa6:	1aff      	subs	r7, r7, r3
 8017aa8:	f1b8 0f00 	cmp.w	r8, #0
 8017aac:	d009      	beq.n	8017ac2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8017aae:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8017ab2:	9019      	str	r0, [sp, #100]	; 0x64
 8017ab4:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8017ab8:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8017abc:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8017ac0:	911d      	str	r1, [sp, #116]	; 0x74
 8017ac2:	1ad2      	subs	r2, r2, r3
 8017ac4:	e68b      	b.n	80177de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8017ac6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017ac8:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8017aca:	2b00      	cmp	r3, #0
 8017acc:	f000 80d1 	beq.w	8017c72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8017ad0:	ad19      	add	r5, sp, #100	; 0x64
 8017ad2:	ac39      	add	r4, sp, #228	; 0xe4
 8017ad4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017ad6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8017ada:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8017ade:	930c      	str	r3, [sp, #48]	; 0x30
 8017ae0:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017ae2:	6963      	ldr	r3, [r4, #20]
 8017ae4:	440b      	add	r3, r1
 8017ae6:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8017aea:	4408      	add	r0, r1
 8017aec:	b200      	sxth	r0, r0
 8017aee:	4283      	cmp	r3, r0
 8017af0:	900d      	str	r0, [sp, #52]	; 0x34
 8017af2:	f280 80c1 	bge.w	8017c78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8017af6:	428b      	cmp	r3, r1
 8017af8:	da08      	bge.n	8017b0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8017afa:	2a00      	cmp	r2, #0
 8017afc:	dd06      	ble.n	8017b0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8017afe:	1acb      	subs	r3, r1, r3
 8017b00:	429a      	cmp	r2, r3
 8017b02:	f2c0 80bb 	blt.w	8017c7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8017b06:	2b00      	cmp	r3, #0
 8017b08:	f300 80b9 	bgt.w	8017c7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8017b0c:	6967      	ldr	r7, [r4, #20]
 8017b0e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017b10:	443b      	add	r3, r7
 8017b12:	461f      	mov	r7, r3
 8017b14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017b16:	1bdf      	subs	r7, r3, r7
 8017b18:	4297      	cmp	r7, r2
 8017b1a:	bfa8      	it	ge
 8017b1c:	4617      	movge	r7, r2
 8017b1e:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8017b22:	2f00      	cmp	r7, #0
 8017b24:	f340 813c 	ble.w	8017da0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8017b28:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017b2a:	6829      	ldr	r1, [r5, #0]
 8017b2c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017b30:	f9bb 3000 	ldrsh.w	r3, [fp]
 8017b34:	6820      	ldr	r0, [r4, #0]
 8017b36:	4411      	add	r1, r2
 8017b38:	4299      	cmp	r1, r3
 8017b3a:	dd1a      	ble.n	8017b72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8017b3c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8017b40:	440b      	add	r3, r1
 8017b42:	4402      	add	r2, r0
 8017b44:	b21b      	sxth	r3, r3
 8017b46:	429a      	cmp	r2, r3
 8017b48:	dc13      	bgt.n	8017b72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8017b4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017b4c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017b4e:	681b      	ldr	r3, [r3, #0]
 8017b50:	9206      	str	r2, [sp, #24]
 8017b52:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017b54:	9205      	str	r2, [sp, #20]
 8017b56:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017b58:	9500      	str	r5, [sp, #0]
 8017b5a:	e9cd b203 	strd	fp, r2, [sp, #12]
 8017b5e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8017b60:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017b62:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8017b66:	a912      	add	r1, sp, #72	; 0x48
 8017b68:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8017b6c:	aa49      	add	r2, sp, #292	; 0x124
 8017b6e:	4623      	mov	r3, r4
 8017b70:	47c8      	blx	r9
 8017b72:	e9d4 2300 	ldrd	r2, r3, [r4]
 8017b76:	441a      	add	r2, r3
 8017b78:	6963      	ldr	r3, [r4, #20]
 8017b7a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8017b7e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8017b82:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8017b86:	68a1      	ldr	r1, [r4, #8]
 8017b88:	ed94 6a08 	vldr	s12, [r4, #32]
 8017b8c:	6022      	str	r2, [r4, #0]
 8017b8e:	3301      	adds	r3, #1
 8017b90:	6163      	str	r3, [r4, #20]
 8017b92:	69a3      	ldr	r3, [r4, #24]
 8017b94:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017b98:	3b01      	subs	r3, #1
 8017b9a:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8017b9e:	61a3      	str	r3, [r4, #24]
 8017ba0:	6923      	ldr	r3, [r4, #16]
 8017ba2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8017ba6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017baa:	edd4 6a07 	vldr	s13, [r4, #28]
 8017bae:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8017bb2:	440b      	add	r3, r1
 8017bb4:	68e1      	ldr	r1, [r4, #12]
 8017bb6:	6123      	str	r3, [r4, #16]
 8017bb8:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017bbc:	428b      	cmp	r3, r1
 8017bbe:	edc4 6a07 	vstr	s13, [r4, #28]
 8017bc2:	db15      	blt.n	8017bf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8017bc4:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8017bc8:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017bcc:	3201      	adds	r2, #1
 8017bce:	edc4 6a07 	vstr	s13, [r4, #28]
 8017bd2:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8017bd6:	6022      	str	r2, [r4, #0]
 8017bd8:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017bdc:	1a5b      	subs	r3, r3, r1
 8017bde:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8017be2:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8017be6:	6123      	str	r3, [r4, #16]
 8017be8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017bec:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8017bf0:	e9d5 2300 	ldrd	r2, r3, [r5]
 8017bf4:	441a      	add	r2, r3
 8017bf6:	696b      	ldr	r3, [r5, #20]
 8017bf8:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8017bfc:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8017c00:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8017c04:	68a9      	ldr	r1, [r5, #8]
 8017c06:	ed95 6a08 	vldr	s12, [r5, #32]
 8017c0a:	602a      	str	r2, [r5, #0]
 8017c0c:	3301      	adds	r3, #1
 8017c0e:	616b      	str	r3, [r5, #20]
 8017c10:	69ab      	ldr	r3, [r5, #24]
 8017c12:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017c16:	3b01      	subs	r3, #1
 8017c18:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8017c1c:	61ab      	str	r3, [r5, #24]
 8017c1e:	692b      	ldr	r3, [r5, #16]
 8017c20:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8017c24:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017c28:	edd5 6a07 	vldr	s13, [r5, #28]
 8017c2c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017c30:	440b      	add	r3, r1
 8017c32:	68e9      	ldr	r1, [r5, #12]
 8017c34:	612b      	str	r3, [r5, #16]
 8017c36:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017c3a:	428b      	cmp	r3, r1
 8017c3c:	edc5 6a07 	vstr	s13, [r5, #28]
 8017c40:	db15      	blt.n	8017c6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8017c42:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8017c46:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017c4a:	3201      	adds	r2, #1
 8017c4c:	edc5 6a07 	vstr	s13, [r5, #28]
 8017c50:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8017c54:	602a      	str	r2, [r5, #0]
 8017c56:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017c5a:	1a5b      	subs	r3, r3, r1
 8017c5c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8017c60:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8017c64:	612b      	str	r3, [r5, #16]
 8017c66:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017c6a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017c6e:	3f01      	subs	r7, #1
 8017c70:	e757      	b.n	8017b22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8017c72:	ad39      	add	r5, sp, #228	; 0xe4
 8017c74:	ac19      	add	r4, sp, #100	; 0x64
 8017c76:	e72d      	b.n	8017ad4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8017c78:	4613      	mov	r3, r2
 8017c7a:	e744      	b.n	8017b06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8017c7c:	4613      	mov	r3, r2
 8017c7e:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8017c82:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8017c84:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8017c88:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8017c8c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8017c90:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8017c94:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8017c98:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8017c9c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8017ca0:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8017ca2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8017ca6:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8017caa:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8017cae:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8017cb2:	960e      	str	r6, [sp, #56]	; 0x38
 8017cb4:	469e      	mov	lr, r3
 8017cb6:	461f      	mov	r7, r3
 8017cb8:	f04f 0900 	mov.w	r9, #0
 8017cbc:	2f00      	cmp	r7, #0
 8017cbe:	d146      	bne.n	8017d4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8017cc0:	449c      	add	ip, r3
 8017cc2:	1ad7      	subs	r7, r2, r3
 8017cc4:	f1b9 0f00 	cmp.w	r9, #0
 8017cc8:	d009      	beq.n	8017cde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8017cca:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8017cce:	9039      	str	r0, [sp, #228]	; 0xe4
 8017cd0:	913d      	str	r1, [sp, #244]	; 0xf4
 8017cd2:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8017cd6:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8017cda:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8017cde:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8017ce0:	910e      	str	r1, [sp, #56]	; 0x38
 8017ce2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8017ce6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8017cea:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8017cee:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8017cf2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8017cf6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8017cfa:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8017cfe:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8017d02:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8017d06:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8017d0a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8017d0e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8017d12:	f04f 0800 	mov.w	r8, #0
 8017d16:	f1be 0f00 	cmp.w	lr, #0
 8017d1a:	d030      	beq.n	8017d7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8017d1c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8017d1e:	4431      	add	r1, r6
 8017d20:	4549      	cmp	r1, r9
 8017d22:	4450      	add	r0, sl
 8017d24:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8017d28:	ee37 7a04 	vadd.f32	s14, s14, s8
 8017d2c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8017d30:	db08      	blt.n	8017d44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8017d32:	ee77 7a85 	vadd.f32	s15, s15, s10
 8017d36:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8017d3a:	ee37 7a06 	vadd.f32	s14, s14, s12
 8017d3e:	3001      	adds	r0, #1
 8017d40:	eba1 0109 	sub.w	r1, r1, r9
 8017d44:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017d48:	f04f 0801 	mov.w	r8, #1
 8017d4c:	e7e3      	b.n	8017d16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8017d4e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8017d50:	4431      	add	r1, r6
 8017d52:	4541      	cmp	r1, r8
 8017d54:	4450      	add	r0, sl
 8017d56:	ee37 7a24 	vadd.f32	s14, s14, s9
 8017d5a:	ee77 7a84 	vadd.f32	s15, s15, s8
 8017d5e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8017d62:	db08      	blt.n	8017d76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8017d64:	ee76 6a85 	vadd.f32	s13, s13, s10
 8017d68:	ee37 7a25 	vadd.f32	s14, s14, s11
 8017d6c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8017d70:	3001      	adds	r0, #1
 8017d72:	eba1 0108 	sub.w	r1, r1, r8
 8017d76:	3f01      	subs	r7, #1
 8017d78:	f04f 0901 	mov.w	r9, #1
 8017d7c:	e79e      	b.n	8017cbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8017d7e:	449c      	add	ip, r3
 8017d80:	1aff      	subs	r7, r7, r3
 8017d82:	f1b8 0f00 	cmp.w	r8, #0
 8017d86:	d009      	beq.n	8017d9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8017d88:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8017d8c:	9019      	str	r0, [sp, #100]	; 0x64
 8017d8e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8017d92:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8017d96:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8017d9a:	911d      	str	r1, [sp, #116]	; 0x74
 8017d9c:	1ad2      	subs	r2, r2, r3
 8017d9e:	e6b5      	b.n	8017b0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8017da0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017da2:	681b      	ldr	r3, [r3, #0]
 8017da4:	b923      	cbnz	r3, 8017db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017da6:	4b04      	ldr	r3, [pc, #16]	; (8017db8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8017da8:	6818      	ldr	r0, [r3, #0]
 8017daa:	6803      	ldr	r3, [r0, #0]
 8017dac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017dae:	4798      	blx	r3
 8017db0:	b05b      	add	sp, #364	; 0x16c
 8017db2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017db6:	bf00      	nop
 8017db8:	20002328 	.word	0x20002328

08017dbc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8017dbc:	b570      	push	{r4, r5, r6, lr}
 8017dbe:	4604      	mov	r4, r0
 8017dc0:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8017dc4:	9805      	ldr	r0, [sp, #20]
 8017dc6:	6061      	str	r1, [r4, #4]
 8017dc8:	2500      	movs	r5, #0
 8017dca:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8017dce:	8263      	strh	r3, [r4, #18]
 8017dd0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8017dd4:	8025      	strh	r5, [r4, #0]
 8017dd6:	7221      	strb	r1, [r4, #8]
 8017dd8:	7266      	strb	r6, [r4, #9]
 8017dda:	60e0      	str	r0, [r4, #12]
 8017ddc:	8222      	strh	r2, [r4, #16]
 8017dde:	82a3      	strh	r3, [r4, #20]
 8017de0:	82e5      	strh	r5, [r4, #22]
 8017de2:	8325      	strh	r5, [r4, #24]
 8017de4:	8365      	strh	r5, [r4, #26]
 8017de6:	83a5      	strh	r5, [r4, #28]
 8017de8:	83e5      	strh	r5, [r4, #30]
 8017dea:	8425      	strh	r5, [r4, #32]
 8017dec:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8017df0:	b32e      	cbz	r6, 8017e3e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017df2:	6803      	ldr	r3, [r0, #0]
 8017df4:	695b      	ldr	r3, [r3, #20]
 8017df6:	4798      	blx	r3
 8017df8:	4606      	mov	r6, r0
 8017dfa:	b300      	cbz	r0, 8017e3e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017dfc:	68e0      	ldr	r0, [r4, #12]
 8017dfe:	6803      	ldr	r3, [r0, #0]
 8017e00:	4631      	mov	r1, r6
 8017e02:	68db      	ldr	r3, [r3, #12]
 8017e04:	4798      	blx	r3
 8017e06:	4605      	mov	r5, r0
 8017e08:	b1c8      	cbz	r0, 8017e3e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017e0a:	7b43      	ldrb	r3, [r0, #13]
 8017e0c:	7a82      	ldrb	r2, [r0, #10]
 8017e0e:	005b      	lsls	r3, r3, #1
 8017e10:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017e14:	4313      	orrs	r3, r2
 8017e16:	8423      	strh	r3, [r4, #32]
 8017e18:	7a63      	ldrb	r3, [r4, #9]
 8017e1a:	2b06      	cmp	r3, #6
 8017e1c:	d10f      	bne.n	8017e3e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017e1e:	68e0      	ldr	r0, [r4, #12]
 8017e20:	6803      	ldr	r3, [r0, #0]
 8017e22:	462a      	mov	r2, r5
 8017e24:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017e26:	4631      	mov	r1, r6
 8017e28:	4798      	blx	r3
 8017e2a:	7b6b      	ldrb	r3, [r5, #13]
 8017e2c:	005b      	lsls	r3, r3, #1
 8017e2e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017e32:	7aab      	ldrb	r3, [r5, #10]
 8017e34:	4313      	orrs	r3, r2
 8017e36:	4418      	add	r0, r3
 8017e38:	8c23      	ldrh	r3, [r4, #32]
 8017e3a:	4418      	add	r0, r3
 8017e3c:	8420      	strh	r0, [r4, #32]
 8017e3e:	4620      	mov	r0, r4
 8017e40:	bd70      	pop	{r4, r5, r6, pc}

08017e42 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8017e42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e46:	2400      	movs	r4, #0
 8017e48:	b085      	sub	sp, #20
 8017e4a:	4681      	mov	r9, r0
 8017e4c:	4688      	mov	r8, r1
 8017e4e:	4692      	mov	sl, r2
 8017e50:	469b      	mov	fp, r3
 8017e52:	4627      	mov	r7, r4
 8017e54:	4625      	mov	r5, r4
 8017e56:	4626      	mov	r6, r4
 8017e58:	4554      	cmp	r4, sl
 8017e5a:	da2a      	bge.n	8017eb2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017e5c:	2300      	movs	r3, #0
 8017e5e:	9303      	str	r3, [sp, #12]
 8017e60:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017e64:	429d      	cmp	r5, r3
 8017e66:	d004      	beq.n	8017e72 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8017e68:	f242 030b 	movw	r3, #8203	; 0x200b
 8017e6c:	429d      	cmp	r5, r3
 8017e6e:	bf18      	it	ne
 8017e70:	462f      	movne	r7, r5
 8017e72:	ab03      	add	r3, sp, #12
 8017e74:	4642      	mov	r2, r8
 8017e76:	4659      	mov	r1, fp
 8017e78:	4648      	mov	r0, r9
 8017e7a:	f003 f8e9 	bl	801b050 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017e7e:	4605      	mov	r5, r0
 8017e80:	b1b8      	cbz	r0, 8017eb2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017e82:	280a      	cmp	r0, #10
 8017e84:	d015      	beq.n	8017eb2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017e86:	9a03      	ldr	r2, [sp, #12]
 8017e88:	b18a      	cbz	r2, 8017eae <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8017e8a:	7b50      	ldrb	r0, [r2, #13]
 8017e8c:	7a93      	ldrb	r3, [r2, #10]
 8017e8e:	8895      	ldrh	r5, [r2, #4]
 8017e90:	0040      	lsls	r0, r0, #1
 8017e92:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8017e96:	4303      	orrs	r3, r0
 8017e98:	9301      	str	r3, [sp, #4]
 8017e9a:	f8d8 3000 	ldr.w	r3, [r8]
 8017e9e:	4639      	mov	r1, r7
 8017ea0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017ea2:	4640      	mov	r0, r8
 8017ea4:	4798      	blx	r3
 8017ea6:	9b01      	ldr	r3, [sp, #4]
 8017ea8:	4418      	add	r0, r3
 8017eaa:	4406      	add	r6, r0
 8017eac:	b2b6      	uxth	r6, r6
 8017eae:	3401      	adds	r4, #1
 8017eb0:	e7d2      	b.n	8017e58 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8017eb2:	4630      	mov	r0, r6
 8017eb4:	b005      	add	sp, #20
 8017eb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017eba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8017eba:	2a02      	cmp	r2, #2
 8017ebc:	b530      	push	{r4, r5, lr}
 8017ebe:	d011      	beq.n	8017ee4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8017ec0:	2a03      	cmp	r2, #3
 8017ec2:	d01c      	beq.n	8017efe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8017ec4:	2a01      	cmp	r2, #1
 8017ec6:	d10c      	bne.n	8017ee2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8017ec8:	888b      	ldrh	r3, [r1, #4]
 8017eca:	8801      	ldrh	r1, [r0, #0]
 8017ecc:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8017ed0:	8844      	ldrh	r4, [r0, #2]
 8017ed2:	8004      	strh	r4, [r0, #0]
 8017ed4:	1a5b      	subs	r3, r3, r1
 8017ed6:	1a9b      	subs	r3, r3, r2
 8017ed8:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8017edc:	8043      	strh	r3, [r0, #2]
 8017ede:	8081      	strh	r1, [r0, #4]
 8017ee0:	80c2      	strh	r2, [r0, #6]
 8017ee2:	bd30      	pop	{r4, r5, pc}
 8017ee4:	88cb      	ldrh	r3, [r1, #6]
 8017ee6:	8842      	ldrh	r2, [r0, #2]
 8017ee8:	1a9b      	subs	r3, r3, r2
 8017eea:	88c2      	ldrh	r2, [r0, #6]
 8017eec:	1a9b      	subs	r3, r3, r2
 8017eee:	888a      	ldrh	r2, [r1, #4]
 8017ef0:	8801      	ldrh	r1, [r0, #0]
 8017ef2:	8043      	strh	r3, [r0, #2]
 8017ef4:	1a52      	subs	r2, r2, r1
 8017ef6:	8881      	ldrh	r1, [r0, #4]
 8017ef8:	1a52      	subs	r2, r2, r1
 8017efa:	8002      	strh	r2, [r0, #0]
 8017efc:	e7f1      	b.n	8017ee2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8017efe:	88cb      	ldrh	r3, [r1, #6]
 8017f00:	8841      	ldrh	r1, [r0, #2]
 8017f02:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8017f06:	f9b0 5000 	ldrsh.w	r5, [r0]
 8017f0a:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8017f0e:	8045      	strh	r5, [r0, #2]
 8017f10:	1a5b      	subs	r3, r3, r1
 8017f12:	1a9b      	subs	r3, r3, r2
 8017f14:	8003      	strh	r3, [r0, #0]
 8017f16:	8082      	strh	r2, [r0, #4]
 8017f18:	80c4      	strh	r4, [r0, #6]
 8017f1a:	e7e2      	b.n	8017ee2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08017f1c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8017f1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f20:	b09f      	sub	sp, #124	; 0x7c
 8017f22:	9116      	str	r1, [sp, #88]	; 0x58
 8017f24:	9317      	str	r3, [sp, #92]	; 0x5c
 8017f26:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8017f28:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017f2a:	8809      	ldrh	r1, [r1, #0]
 8017f2c:	889b      	ldrh	r3, [r3, #4]
 8017f2e:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8017f32:	9212      	str	r2, [sp, #72]	; 0x48
 8017f34:	440b      	add	r3, r1
 8017f36:	b21b      	sxth	r3, r3
 8017f38:	9310      	str	r3, [sp, #64]	; 0x40
 8017f3a:	f8d8 3000 	ldr.w	r3, [r8]
 8017f3e:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8017f42:	7b19      	ldrb	r1, [r3, #12]
 8017f44:	7adb      	ldrb	r3, [r3, #11]
 8017f46:	9011      	str	r0, [sp, #68]	; 0x44
 8017f48:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8017f4c:	9114      	str	r1, [sp, #80]	; 0x50
 8017f4e:	9315      	str	r3, [sp, #84]	; 0x54
 8017f50:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8017f54:	2a00      	cmp	r2, #0
 8017f56:	d06a      	beq.n	801802e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8017f58:	f898 3010 	ldrb.w	r3, [r8, #16]
 8017f5c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017f5e:	2b06      	cmp	r3, #6
 8017f60:	bf14      	ite	ne
 8017f62:	2301      	movne	r3, #1
 8017f64:	2302      	moveq	r3, #2
 8017f66:	4413      	add	r3, r2
 8017f68:	f04f 0900 	mov.w	r9, #0
 8017f6c:	930f      	str	r3, [sp, #60]	; 0x3c
 8017f6e:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8017f72:	464c      	mov	r4, r9
 8017f74:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8017f78:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8017f7c:	4293      	cmp	r3, r2
 8017f7e:	f280 808f 	bge.w	80180a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8017f82:	2300      	movs	r3, #0
 8017f84:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8017f88:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8017f8c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017f90:	429c      	cmp	r4, r3
 8017f92:	d006      	beq.n	8017fa2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8017f94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017f96:	f242 020b 	movw	r2, #8203	; 0x200b
 8017f9a:	4294      	cmp	r4, r2
 8017f9c:	bf18      	it	ne
 8017f9e:	4623      	movne	r3, r4
 8017fa0:	930d      	str	r3, [sp, #52]	; 0x34
 8017fa2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017fa4:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8017fa6:	f8d8 2000 	ldr.w	r2, [r8]
 8017faa:	428b      	cmp	r3, r1
 8017fac:	db41      	blt.n	8018032 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8017fae:	6813      	ldr	r3, [r2, #0]
 8017fb0:	4610      	mov	r0, r2
 8017fb2:	695b      	ldr	r3, [r3, #20]
 8017fb4:	4798      	blx	r3
 8017fb6:	4604      	mov	r4, r0
 8017fb8:	f8d8 0000 	ldr.w	r0, [r8]
 8017fbc:	6803      	ldr	r3, [r0, #0]
 8017fbe:	aa1d      	add	r2, sp, #116	; 0x74
 8017fc0:	689d      	ldr	r5, [r3, #8]
 8017fc2:	4621      	mov	r1, r4
 8017fc4:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8017fc8:	47a8      	blx	r5
 8017fca:	901c      	str	r0, [sp, #112]	; 0x70
 8017fcc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017fd0:	429c      	cmp	r4, r3
 8017fd2:	f000 80eb 	beq.w	80181ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017fd6:	f242 030b 	movw	r3, #8203	; 0x200b
 8017fda:	429c      	cmp	r4, r3
 8017fdc:	f000 80e6 	beq.w	80181ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017fe0:	2c00      	cmp	r4, #0
 8017fe2:	f000 80f8 	beq.w	80181d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017fe6:	2c0a      	cmp	r4, #10
 8017fe8:	d060      	beq.n	80180ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8017fea:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8017fec:	b36a      	cbz	r2, 801804a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8017fee:	8894      	ldrh	r4, [r2, #4]
 8017ff0:	f1bb 0f00 	cmp.w	fp, #0
 8017ff4:	d03b      	beq.n	801806e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8017ff6:	f892 900d 	ldrb.w	r9, [r2, #13]
 8017ffa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017ffe:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8018002:	f892 900a 	ldrb.w	r9, [r2, #10]
 8018006:	f1bb 0f01 	cmp.w	fp, #1
 801800a:	ea49 0903 	orr.w	r9, r9, r3
 801800e:	d134      	bne.n	801807a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8018010:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018012:	eba6 0609 	sub.w	r6, r6, r9
 8018016:	2b00      	cmp	r3, #0
 8018018:	d14f      	bne.n	80180ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 801801a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801801c:	eb09 0306 	add.w	r3, r9, r6
 8018020:	4413      	add	r3, r2
 8018022:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018024:	f9b2 2000 	ldrsh.w	r2, [r2]
 8018028:	4293      	cmp	r3, r2
 801802a:	da51      	bge.n	80180d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801802c:	e038      	b.n	80180a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801802e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018030:	e79a      	b.n	8017f68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8018032:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8018036:	9301      	str	r3, [sp, #4]
 8018038:	ab1d      	add	r3, sp, #116	; 0x74
 801803a:	9300      	str	r3, [sp, #0]
 801803c:	4659      	mov	r1, fp
 801803e:	ab1c      	add	r3, sp, #112	; 0x70
 8018040:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8018042:	f003 f84e 	bl	801b0e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8018046:	4604      	mov	r4, r0
 8018048:	e7c0      	b.n	8017fcc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 801804a:	f8d8 0000 	ldr.w	r0, [r8]
 801804e:	6803      	ldr	r3, [r0, #0]
 8018050:	691b      	ldr	r3, [r3, #16]
 8018052:	4798      	blx	r3
 8018054:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8018058:	4298      	cmp	r0, r3
 801805a:	f000 80a7 	beq.w	80181ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801805e:	f242 030b 	movw	r3, #8203	; 0x200b
 8018062:	4298      	cmp	r0, r3
 8018064:	f000 80a2 	beq.w	80181ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8018068:	f1bb 0f00 	cmp.w	fp, #0
 801806c:	d100      	bne.n	8018070 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 801806e:	444e      	add	r6, r9
 8018070:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8018072:	2a00      	cmp	r2, #0
 8018074:	d1bf      	bne.n	8017ff6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8018076:	4691      	mov	r9, r2
 8018078:	e098      	b.n	80181ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801807a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801807c:	2b00      	cmp	r3, #0
 801807e:	f000 80ac 	beq.w	80181da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8018082:	f1bb 0f00 	cmp.w	fp, #0
 8018086:	d118      	bne.n	80180ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8018088:	f8d8 0000 	ldr.w	r0, [r8]
 801808c:	990d      	ldr	r1, [sp, #52]	; 0x34
 801808e:	6803      	ldr	r3, [r0, #0]
 8018090:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018092:	4798      	blx	r3
 8018094:	4406      	add	r6, r0
 8018096:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8018098:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801809a:	1af3      	subs	r3, r6, r3
 801809c:	4293      	cmp	r3, r2
 801809e:	dd17      	ble.n	80180d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80180a0:	2c00      	cmp	r4, #0
 80180a2:	f000 8098 	beq.w	80181d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80180a6:	2c0a      	cmp	r4, #10
 80180a8:	f040 8086 	bne.w	80181b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 80180ac:	240a      	movs	r4, #10
 80180ae:	fab4 f084 	clz	r0, r4
 80180b2:	0940      	lsrs	r0, r0, #5
 80180b4:	b01f      	add	sp, #124	; 0x7c
 80180b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80180ba:	f8d8 0000 	ldr.w	r0, [r8]
 80180be:	990d      	ldr	r1, [sp, #52]	; 0x34
 80180c0:	6803      	ldr	r3, [r0, #0]
 80180c2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80180c4:	4798      	blx	r3
 80180c6:	f1bb 0f01 	cmp.w	fp, #1
 80180ca:	eba6 0600 	sub.w	r6, r6, r0
 80180ce:	d0a4      	beq.n	801801a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80180d0:	981c      	ldr	r0, [sp, #112]	; 0x70
 80180d2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80180d4:	f990 1009 	ldrsb.w	r1, [r0, #9]
 80180d8:	f9b3 7000 	ldrsh.w	r7, [r3]
 80180dc:	7b43      	ldrb	r3, [r0, #13]
 80180de:	015b      	lsls	r3, r3, #5
 80180e0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80180e4:	7983      	ldrb	r3, [r0, #6]
 80180e6:	4431      	add	r1, r6
 80180e8:	4313      	orrs	r3, r2
 80180ea:	440b      	add	r3, r1
 80180ec:	42bb      	cmp	r3, r7
 80180ee:	db5d      	blt.n	80181ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80180f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80180f2:	4299      	cmp	r1, r3
 80180f4:	da5a      	bge.n	80181ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80180f6:	f8d8 0000 	ldr.w	r0, [r8]
 80180fa:	6803      	ldr	r3, [r0, #0]
 80180fc:	42b7      	cmp	r7, r6
 80180fe:	bfc8      	it	gt
 8018100:	1bbf      	subgt	r7, r7, r6
 8018102:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8018104:	bfcc      	ite	gt
 8018106:	b2bf      	uxthgt	r7, r7
 8018108:	2700      	movle	r7, #0
 801810a:	4798      	blx	r3
 801810c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801810e:	7b5a      	ldrb	r2, [r3, #13]
 8018110:	00d1      	lsls	r1, r2, #3
 8018112:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8018116:	7a19      	ldrb	r1, [r3, #8]
 8018118:	4329      	orrs	r1, r5
 801811a:	0655      	lsls	r5, r2, #25
 801811c:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 801811e:	bf44      	itt	mi
 8018120:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8018124:	b209      	sxthmi	r1, r1
 8018126:	1945      	adds	r5, r0, r5
 8018128:	1a6d      	subs	r5, r5, r1
 801812a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801812c:	b2ad      	uxth	r5, r5
 801812e:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8018132:	fa0f fa85 	sxth.w	sl, r5
 8018136:	4551      	cmp	r1, sl
 8018138:	dd3c      	ble.n	80181b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 801813a:	0112      	lsls	r2, r2, #4
 801813c:	79d8      	ldrb	r0, [r3, #7]
 801813e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018142:	4302      	orrs	r2, r0
 8018144:	4492      	add	sl, r2
 8018146:	4551      	cmp	r1, sl
 8018148:	dc30      	bgt.n	80181ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801814a:	1b4d      	subs	r5, r1, r5
 801814c:	b22d      	sxth	r5, r5
 801814e:	468a      	mov	sl, r1
 8018150:	9319      	str	r3, [sp, #100]	; 0x64
 8018152:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018154:	f8d8 0000 	ldr.w	r0, [r8]
 8018158:	681a      	ldr	r2, [r3, #0]
 801815a:	6801      	ldr	r1, [r0, #0]
 801815c:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 801815e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8018160:	9313      	str	r3, [sp, #76]	; 0x4c
 8018162:	9218      	str	r2, [sp, #96]	; 0x60
 8018164:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8018166:	4788      	blx	r1
 8018168:	f898 1006 	ldrb.w	r1, [r8, #6]
 801816c:	910b      	str	r1, [sp, #44]	; 0x2c
 801816e:	f898 100e 	ldrb.w	r1, [r8, #14]
 8018172:	910a      	str	r1, [sp, #40]	; 0x28
 8018174:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8018178:	9109      	str	r1, [sp, #36]	; 0x24
 801817a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 801817e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8018180:	9305      	str	r3, [sp, #20]
 8018182:	b2ad      	uxth	r5, r5
 8018184:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8018188:	e9cd 7502 	strd	r7, r5, [sp, #8]
 801818c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801818e:	9304      	str	r3, [sp, #16]
 8018190:	4437      	add	r7, r6
 8018192:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8018194:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018196:	9206      	str	r2, [sp, #24]
 8018198:	b23f      	sxth	r7, r7
 801819a:	f8cd a004 	str.w	sl, [sp, #4]
 801819e:	9700      	str	r7, [sp, #0]
 80181a0:	681a      	ldr	r2, [r3, #0]
 80181a2:	9916      	ldr	r1, [sp, #88]	; 0x58
 80181a4:	685b      	ldr	r3, [r3, #4]
 80181a6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80181a8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80181aa:	47a8      	blx	r5
 80181ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80181ae:	3301      	adds	r3, #1
 80181b0:	930e      	str	r3, [sp, #56]	; 0x38
 80181b2:	e6e1      	b.n	8017f78 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 80181b4:	2500      	movs	r5, #0
 80181b6:	e7cb      	b.n	8018150 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 80181b8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80181ba:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80181bc:	3501      	adds	r5, #1
 80181be:	429d      	cmp	r5, r3
 80181c0:	f6bf af75 	bge.w	80180ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80181c4:	4659      	mov	r1, fp
 80181c6:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80181c8:	f7f7 fb70 	bl	800f8ac <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80181cc:	4604      	mov	r4, r0
 80181ce:	b110      	cbz	r0, 80181d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80181d0:	280a      	cmp	r0, #10
 80181d2:	d1f2      	bne.n	80181ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 80181d4:	e76a      	b.n	80180ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80181d6:	2400      	movs	r4, #0
 80181d8:	e769      	b.n	80180ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80181da:	f1bb 0f00 	cmp.w	fp, #0
 80181de:	f43f af5a 	beq.w	8018096 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 80181e2:	e775      	b.n	80180d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

080181e4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80181e4:	b530      	push	{r4, r5, lr}
 80181e6:	8ac4      	ldrh	r4, [r0, #22]
 80181e8:	8b45      	ldrh	r5, [r0, #26]
 80181ea:	8343      	strh	r3, [r0, #26]
 80181ec:	442c      	add	r4, r5
 80181ee:	1ae4      	subs	r4, r4, r3
 80181f0:	82c4      	strh	r4, [r0, #22]
 80181f2:	8b83      	ldrh	r3, [r0, #28]
 80181f4:	8b04      	ldrh	r4, [r0, #24]
 80181f6:	4422      	add	r2, r4
 80181f8:	440c      	add	r4, r1
 80181fa:	1a59      	subs	r1, r3, r1
 80181fc:	83c2      	strh	r2, [r0, #30]
 80181fe:	8304      	strh	r4, [r0, #24]
 8018200:	8381      	strh	r1, [r0, #28]
 8018202:	bd30      	pop	{r4, r5, pc}

08018204 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8018204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018208:	4604      	mov	r4, r0
 801820a:	8a47      	ldrh	r7, [r0, #18]
 801820c:	68c0      	ldr	r0, [r0, #12]
 801820e:	6803      	ldr	r3, [r0, #0]
 8018210:	b085      	sub	sp, #20
 8018212:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018214:	4798      	blx	r3
 8018216:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 801821a:	7a63      	ldrb	r3, [r4, #9]
 801821c:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8018220:	42b7      	cmp	r7, r6
 8018222:	f103 33ff 	add.w	r3, r3, #4294967295
 8018226:	bfac      	ite	ge
 8018228:	f04f 0900 	movge.w	r9, #0
 801822c:	f04f 0901 	movlt.w	r9, #1
 8018230:	2b05      	cmp	r3, #5
 8018232:	d804      	bhi.n	801823e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8018234:	e8df f003 	tbb	[pc, r3]
 8018238:	470e0854 	.word	0x470e0854
 801823c:	4c4c      	.short	0x4c4c
 801823e:	2500      	movs	r5, #0
 8018240:	46a9      	mov	r9, r5
 8018242:	462e      	mov	r6, r5
 8018244:	462f      	mov	r7, r5
 8018246:	e00d      	b.n	8018264 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8018248:	42b7      	cmp	r7, r6
 801824a:	bfb4      	ite	lt
 801824c:	2600      	movlt	r6, #0
 801824e:	2601      	movge	r6, #1
 8018250:	2500      	movs	r5, #0
 8018252:	e7f7      	b.n	8018244 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8018254:	42b7      	cmp	r7, r6
 8018256:	464d      	mov	r5, r9
 8018258:	f04f 0900 	mov.w	r9, #0
 801825c:	bfb4      	ite	lt
 801825e:	2600      	movlt	r6, #0
 8018260:	2601      	movge	r6, #1
 8018262:	464f      	mov	r7, r9
 8018264:	f04f 0800 	mov.w	r8, #0
 8018268:	f8a4 8016 	strh.w	r8, [r4, #22]
 801826c:	f8a4 8018 	strh.w	r8, [r4, #24]
 8018270:	f8cd 8004 	str.w	r8, [sp, #4]
 8018274:	2300      	movs	r3, #0
 8018276:	9303      	str	r3, [sp, #12]
 8018278:	8823      	ldrh	r3, [r4, #0]
 801827a:	2b20      	cmp	r3, #32
 801827c:	d034      	beq.n	80182e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 801827e:	f242 010b 	movw	r1, #8203	; 0x200b
 8018282:	1a5a      	subs	r2, r3, r1
 8018284:	f1d2 0a00 	rsbs	sl, r2, #0
 8018288:	eb4a 0a02 	adc.w	sl, sl, r2
 801828c:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8018290:	4293      	cmp	r3, r2
 8018292:	d009      	beq.n	80182a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8018294:	428b      	cmp	r3, r1
 8018296:	9a01      	ldr	r2, [sp, #4]
 8018298:	bf18      	it	ne
 801829a:	461a      	movne	r2, r3
 801829c:	9201      	str	r2, [sp, #4]
 801829e:	bf0c      	ite	eq
 80182a0:	f04f 0a01 	moveq.w	sl, #1
 80182a4:	f04f 0a00 	movne.w	sl, #0
 80182a8:	ab03      	add	r3, sp, #12
 80182aa:	68e2      	ldr	r2, [r4, #12]
 80182ac:	7a21      	ldrb	r1, [r4, #8]
 80182ae:	6860      	ldr	r0, [r4, #4]
 80182b0:	f002 fece 	bl	801b050 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80182b4:	8020      	strh	r0, [r4, #0]
 80182b6:	b9d8      	cbnz	r0, 80182f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80182b8:	8ba2      	ldrh	r2, [r4, #28]
 80182ba:	2300      	movs	r3, #0
 80182bc:	4611      	mov	r1, r2
 80182be:	4620      	mov	r0, r4
 80182c0:	f7ff ff90 	bl	80181e4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80182c4:	e06e      	b.n	80183a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80182c6:	2500      	movs	r5, #0
 80182c8:	46a9      	mov	r9, r5
 80182ca:	462e      	mov	r6, r5
 80182cc:	2701      	movs	r7, #1
 80182ce:	e7c9      	b.n	8018264 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80182d0:	42b7      	cmp	r7, r6
 80182d2:	f04f 0500 	mov.w	r5, #0
 80182d6:	bfb4      	ite	lt
 80182d8:	2700      	movlt	r7, #0
 80182da:	2701      	movge	r7, #1
 80182dc:	462e      	mov	r6, r5
 80182de:	e7c1      	b.n	8018264 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80182e0:	2500      	movs	r5, #0
 80182e2:	46a9      	mov	r9, r5
 80182e4:	2601      	movs	r6, #1
 80182e6:	e7ad      	b.n	8018244 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80182e8:	9301      	str	r3, [sp, #4]
 80182ea:	f04f 0a01 	mov.w	sl, #1
 80182ee:	e7db      	b.n	80182a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80182f0:	8b63      	ldrh	r3, [r4, #26]
 80182f2:	280a      	cmp	r0, #10
 80182f4:	f103 0301 	add.w	r3, r3, #1
 80182f8:	8363      	strh	r3, [r4, #26]
 80182fa:	d0dd      	beq.n	80182b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 80182fc:	9a03      	ldr	r2, [sp, #12]
 80182fe:	bb62      	cbnz	r2, 801835a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8018300:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8018304:	4298      	cmp	r0, r3
 8018306:	d003      	beq.n	8018310 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8018308:	f242 030b 	movw	r3, #8203	; 0x200b
 801830c:	4298      	cmp	r0, r3
 801830e:	d1b1      	bne.n	8018274 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018310:	8823      	ldrh	r3, [r4, #0]
 8018312:	8ba1      	ldrh	r1, [r4, #28]
 8018314:	2b20      	cmp	r3, #32
 8018316:	d003      	beq.n	8018320 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8018318:	f242 000b 	movw	r0, #8203	; 0x200b
 801831c:	4283      	cmp	r3, r0
 801831e:	d131      	bne.n	8018384 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8018320:	f1ba 0f00 	cmp.w	sl, #0
 8018324:	bf0a      	itet	eq
 8018326:	4688      	moveq	r8, r1
 8018328:	4650      	movne	r0, sl
 801832a:	2001      	moveq	r0, #1
 801832c:	440a      	add	r2, r1
 801832e:	8b23      	ldrh	r3, [r4, #24]
 8018330:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8018334:	b292      	uxth	r2, r2
 8018336:	83a2      	strh	r2, [r4, #28]
 8018338:	4413      	add	r3, r2
 801833a:	f1b9 0f00 	cmp.w	r9, #0
 801833e:	d102      	bne.n	8018346 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8018340:	2d00      	cmp	r5, #0
 8018342:	d042      	beq.n	80183ca <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8018344:	b300      	cbz	r0, 8018388 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8018346:	8c21      	ldrh	r1, [r4, #32]
 8018348:	4419      	add	r1, r3
 801834a:	458c      	cmp	ip, r1
 801834c:	da37      	bge.n	80183be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801834e:	8ae1      	ldrh	r1, [r4, #22]
 8018350:	2900      	cmp	r1, #0
 8018352:	d034      	beq.n	80183be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8018354:	4563      	cmp	r3, ip
 8018356:	dd8d      	ble.n	8018274 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018358:	e01d      	b.n	8018396 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 801835a:	8893      	ldrh	r3, [r2, #4]
 801835c:	8023      	strh	r3, [r4, #0]
 801835e:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8018362:	9901      	ldr	r1, [sp, #4]
 8018364:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8018368:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 801836c:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8018370:	ea4b 0b00 	orr.w	fp, fp, r0
 8018374:	68e0      	ldr	r0, [r4, #12]
 8018376:	6803      	ldr	r3, [r0, #0]
 8018378:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801837a:	4798      	blx	r3
 801837c:	eb0b 0200 	add.w	r2, fp, r0
 8018380:	b292      	uxth	r2, r2
 8018382:	e7c5      	b.n	8018310 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8018384:	2000      	movs	r0, #0
 8018386:	e7d1      	b.n	801832c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8018388:	4563      	cmp	r3, ip
 801838a:	f77f af73 	ble.w	8018274 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801838e:	8ae3      	ldrh	r3, [r4, #22]
 8018390:	2b00      	cmp	r3, #0
 8018392:	f43f af6f 	beq.w	8018274 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018396:	2301      	movs	r3, #1
 8018398:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 801839c:	8c22      	ldrh	r2, [r4, #32]
 801839e:	8be3      	ldrh	r3, [r4, #30]
 80183a0:	4413      	add	r3, r2
 80183a2:	83e3      	strh	r3, [r4, #30]
 80183a4:	68e0      	ldr	r0, [r4, #12]
 80183a6:	6803      	ldr	r3, [r0, #0]
 80183a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80183aa:	4798      	blx	r3
 80183ac:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80183b0:	4418      	add	r0, r3
 80183b2:	8a63      	ldrh	r3, [r4, #18]
 80183b4:	1a18      	subs	r0, r3, r0
 80183b6:	8260      	strh	r0, [r4, #18]
 80183b8:	b005      	add	sp, #20
 80183ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80183be:	2300      	movs	r3, #0
 80183c0:	4611      	mov	r1, r2
 80183c2:	4620      	mov	r0, r4
 80183c4:	f7ff ff0e 	bl	80181e4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80183c8:	e754      	b.n	8018274 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80183ca:	4563      	cmp	r3, ip
 80183cc:	dd14      	ble.n	80183f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 80183ce:	b117      	cbz	r7, 80183d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 80183d0:	2301      	movs	r3, #1
 80183d2:	460a      	mov	r2, r1
 80183d4:	e772      	b.n	80182bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 80183d6:	2e00      	cmp	r6, #0
 80183d8:	f43f af4c 	beq.w	8018274 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80183dc:	2800      	cmp	r0, #0
 80183de:	f47f af49 	bne.w	8018274 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80183e2:	f1ba 0f00 	cmp.w	sl, #0
 80183e6:	d002      	beq.n	80183ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 80183e8:	2301      	movs	r3, #1
 80183ea:	4642      	mov	r2, r8
 80183ec:	e767      	b.n	80182be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 80183ee:	8ae3      	ldrh	r3, [r4, #22]
 80183f0:	2b00      	cmp	r3, #0
 80183f2:	f43f af3f 	beq.w	8018274 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80183f6:	e7d5      	b.n	80183a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80183f8:	2800      	cmp	r0, #0
 80183fa:	f47f af3b 	bne.w	8018274 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80183fe:	f1ba 0f00 	cmp.w	sl, #0
 8018402:	f43f af37 	beq.w	8018274 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018406:	2301      	movs	r3, #1
 8018408:	4642      	mov	r2, r8
 801840a:	e7da      	b.n	80183c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

0801840c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 801840c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801840e:	4605      	mov	r5, r0
 8018410:	b08f      	sub	sp, #60	; 0x3c
 8018412:	4617      	mov	r7, r2
 8018414:	461c      	mov	r4, r3
 8018416:	460e      	mov	r6, r1
 8018418:	b1d1      	cbz	r1, 8018450 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 801841a:	681b      	ldr	r3, [r3, #0]
 801841c:	4620      	mov	r0, r4
 801841e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018420:	4798      	blx	r3
 8018422:	4240      	negs	r0, r0
 8018424:	b200      	sxth	r0, r0
 8018426:	e9cd 4001 	strd	r4, r0, [sp, #4]
 801842a:	9603      	str	r6, [sp, #12]
 801842c:	9700      	str	r7, [sp, #0]
 801842e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8018432:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8018436:	4629      	mov	r1, r5
 8018438:	a805      	add	r0, sp, #20
 801843a:	f7ff fcbf 	bl	8017dbc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801843e:	2401      	movs	r4, #1
 8018440:	a805      	add	r0, sp, #20
 8018442:	f7ff fedf 	bl	8018204 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8018446:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 801844a:	b163      	cbz	r3, 8018466 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 801844c:	3401      	adds	r4, #1
 801844e:	e7f7      	b.n	8018440 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8018450:	f002 fecc 	bl	801b1ec <_ZN8touchgfx12TextProvider11getNextCharEv>
 8018454:	2401      	movs	r4, #1
 8018456:	280a      	cmp	r0, #10
 8018458:	4628      	mov	r0, r5
 801845a:	bf08      	it	eq
 801845c:	3401      	addeq	r4, #1
 801845e:	f002 fec5 	bl	801b1ec <_ZN8touchgfx12TextProvider11getNextCharEv>
 8018462:	2800      	cmp	r0, #0
 8018464:	d1f7      	bne.n	8018456 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8018466:	b2a0      	uxth	r0, r4
 8018468:	b00f      	add	sp, #60	; 0x3c
 801846a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801846c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 801846c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018470:	b0e3      	sub	sp, #396	; 0x18c
 8018472:	461c      	mov	r4, r3
 8018474:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8018476:	4683      	mov	fp, r0
 8018478:	4688      	mov	r8, r1
 801847a:	2b00      	cmp	r3, #0
 801847c:	f000 8112 	beq.w	80186a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018480:	6823      	ldr	r3, [r4, #0]
 8018482:	2b00      	cmp	r3, #0
 8018484:	f000 810e 	beq.w	80186a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018488:	7ba3      	ldrb	r3, [r4, #14]
 801848a:	2b00      	cmp	r3, #0
 801848c:	f000 810a 	beq.w	80186a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018490:	6810      	ldr	r0, [r2, #0]
 8018492:	6851      	ldr	r1, [r2, #4]
 8018494:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8018498:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801849c:	ad0a      	add	r5, sp, #40	; 0x28
 801849e:	462b      	mov	r3, r5
 80184a0:	c303      	stmia	r3!, {r0, r1}
 80184a2:	2100      	movs	r1, #0
 80184a4:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80184a8:	910c      	str	r1, [sp, #48]	; 0x30
 80184aa:	79a2      	ldrb	r2, [r4, #6]
 80184ac:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80184b0:	a90c      	add	r1, sp, #48	; 0x30
 80184b2:	4628      	mov	r0, r5
 80184b4:	f7ff fd01 	bl	8017eba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80184b8:	a90c      	add	r1, sp, #48	; 0x30
 80184ba:	4608      	mov	r0, r1
 80184bc:	79a2      	ldrb	r2, [r4, #6]
 80184be:	f7ff fcfc 	bl	8017eba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80184c2:	a817      	add	r0, sp, #92	; 0x5c
 80184c4:	f002 fa66 	bl	801a994 <_ZN8touchgfx12TextProviderC1Ev>
 80184c8:	6820      	ldr	r0, [r4, #0]
 80184ca:	6803      	ldr	r3, [r0, #0]
 80184cc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80184ce:	4798      	blx	r3
 80184d0:	4606      	mov	r6, r0
 80184d2:	6820      	ldr	r0, [r4, #0]
 80184d4:	6803      	ldr	r3, [r0, #0]
 80184d6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80184d8:	4798      	blx	r3
 80184da:	4633      	mov	r3, r6
 80184dc:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80184de:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80184e0:	9000      	str	r0, [sp, #0]
 80184e2:	a817      	add	r0, sp, #92	; 0x5c
 80184e4:	f002 fab1 	bl	801aa4a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80184e8:	6820      	ldr	r0, [r4, #0]
 80184ea:	f894 a004 	ldrb.w	sl, [r4, #4]
 80184ee:	6803      	ldr	r3, [r0, #0]
 80184f0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80184f2:	4798      	blx	r3
 80184f4:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 80184f8:	6823      	ldr	r3, [r4, #0]
 80184fa:	4607      	mov	r7, r0
 80184fc:	4406      	add	r6, r0
 80184fe:	a830      	add	r0, sp, #192	; 0xc0
 8018500:	f893 9009 	ldrb.w	r9, [r3, #9]
 8018504:	f002 fa46 	bl	801a994 <_ZN8touchgfx12TextProviderC1Ev>
 8018508:	7c23      	ldrb	r3, [r4, #16]
 801850a:	b17b      	cbz	r3, 801852c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 801850c:	6820      	ldr	r0, [r4, #0]
 801850e:	6803      	ldr	r3, [r0, #0]
 8018510:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018512:	4798      	blx	r3
 8018514:	9009      	str	r0, [sp, #36]	; 0x24
 8018516:	6820      	ldr	r0, [r4, #0]
 8018518:	6802      	ldr	r2, [r0, #0]
 801851a:	6d12      	ldr	r2, [r2, #80]	; 0x50
 801851c:	4790      	blx	r2
 801851e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018520:	9000      	str	r0, [sp, #0]
 8018522:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8018524:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8018526:	a830      	add	r0, sp, #192	; 0xc0
 8018528:	f002 fa8f 	bl	801aa4a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801852c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8018530:	7be2      	ldrb	r2, [r4, #15]
 8018532:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8018536:	1a8a      	subs	r2, r1, r2
 8018538:	7c21      	ldrb	r1, [r4, #16]
 801853a:	9103      	str	r1, [sp, #12]
 801853c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8018540:	9102      	str	r1, [sp, #8]
 8018542:	6821      	ldr	r1, [r4, #0]
 8018544:	9101      	str	r1, [sp, #4]
 8018546:	7961      	ldrb	r1, [r4, #5]
 8018548:	9100      	str	r1, [sp, #0]
 801854a:	b292      	uxth	r2, r2
 801854c:	a930      	add	r1, sp, #192	; 0xc0
 801854e:	a80e      	add	r0, sp, #56	; 0x38
 8018550:	f7ff fc34 	bl	8017dbc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8018554:	2e00      	cmp	r6, #0
 8018556:	dc5b      	bgt.n	8018610 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8018558:	af17      	add	r7, sp, #92	; 0x5c
 801855a:	f04f 0900 	mov.w	r9, #0
 801855e:	7c23      	ldrb	r3, [r4, #16]
 8018560:	2b00      	cmp	r3, #0
 8018562:	f000 80b1 	beq.w	80186c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8018566:	a80e      	add	r0, sp, #56	; 0x38
 8018568:	f7ff fe4c 	bl	8018204 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801856c:	f1ba 0f00 	cmp.w	sl, #0
 8018570:	f000 80a5 	beq.w	80186be <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8018574:	7c23      	ldrb	r3, [r4, #16]
 8018576:	9309      	str	r3, [sp, #36]	; 0x24
 8018578:	2264      	movs	r2, #100	; 0x64
 801857a:	4639      	mov	r1, r7
 801857c:	a849      	add	r0, sp, #292	; 0x124
 801857e:	f013 f90c 	bl	802b79a <memcpy>
 8018582:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018584:	2b00      	cmp	r3, #0
 8018586:	f000 80a7 	beq.w	80186d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 801858a:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 801858e:	7922      	ldrb	r2, [r4, #4]
 8018590:	2a01      	cmp	r2, #1
 8018592:	f040 808a 	bne.w	80186aa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8018596:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 801859a:	1ac0      	subs	r0, r0, r3
 801859c:	2302      	movs	r3, #2
 801859e:	fb90 f0f3 	sdiv	r0, r0, r3
 80185a2:	b200      	sxth	r0, r0
 80185a4:	7c23      	ldrb	r3, [r4, #16]
 80185a6:	2b00      	cmp	r3, #0
 80185a8:	f000 808b 	beq.w	80186c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80185ac:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80185b0:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80185b4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80185b8:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80185bc:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80185c0:	4410      	add	r0, r2
 80185c2:	b200      	sxth	r0, r0
 80185c4:	9000      	str	r0, [sp, #0]
 80185c6:	e9cd 9703 	strd	r9, r7, [sp, #12]
 80185ca:	e9cd 5401 	strd	r5, r4, [sp, #4]
 80185ce:	4642      	mov	r2, r8
 80185d0:	2100      	movs	r1, #0
 80185d2:	4658      	mov	r0, fp
 80185d4:	f7ff fca2 	bl	8017f1c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80185d8:	2800      	cmp	r0, #0
 80185da:	d163      	bne.n	80186a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80185dc:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80185e0:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80185e4:	b2b2      	uxth	r2, r6
 80185e6:	4413      	add	r3, r2
 80185e8:	1a8a      	subs	r2, r1, r2
 80185ea:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 80185ee:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 80185f2:	b21b      	sxth	r3, r3
 80185f4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80185f8:	2a00      	cmp	r2, #0
 80185fa:	d153      	bne.n	80186a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80185fc:	6822      	ldr	r2, [r4, #0]
 80185fe:	8869      	ldrh	r1, [r5, #2]
 8018600:	7a12      	ldrb	r2, [r2, #8]
 8018602:	1a9b      	subs	r3, r3, r2
 8018604:	88ea      	ldrh	r2, [r5, #6]
 8018606:	440a      	add	r2, r1
 8018608:	b212      	sxth	r2, r2
 801860a:	4293      	cmp	r3, r2
 801860c:	dda7      	ble.n	801855e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 801860e:	e049      	b.n	80186a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018610:	7c23      	ldrb	r3, [r4, #16]
 8018612:	444f      	add	r7, r9
 8018614:	b1c3      	cbz	r3, 8018648 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8018616:	f64f 79ff 	movw	r9, #65535	; 0xffff
 801861a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801861e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8018622:	443b      	add	r3, r7
 8018624:	4293      	cmp	r3, r2
 8018626:	da97      	bge.n	8018558 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8018628:	a80e      	add	r0, sp, #56	; 0x38
 801862a:	f7ff fdeb 	bl	8018204 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801862e:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8018632:	3b01      	subs	r3, #1
 8018634:	b29b      	uxth	r3, r3
 8018636:	454b      	cmp	r3, r9
 8018638:	9309      	str	r3, [sp, #36]	; 0x24
 801863a:	d021      	beq.n	8018680 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 801863c:	7961      	ldrb	r1, [r4, #5]
 801863e:	a817      	add	r0, sp, #92	; 0x5c
 8018640:	f7f7 f934 	bl	800f8ac <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018644:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018646:	e7f4      	b.n	8018632 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8018648:	fa1f f986 	uxth.w	r9, r6
 801864c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018650:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8018654:	443b      	add	r3, r7
 8018656:	4293      	cmp	r3, r2
 8018658:	f6bf af7e 	bge.w	8018558 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 801865c:	a817      	add	r0, sp, #92	; 0x5c
 801865e:	f002 fdc5 	bl	801b1ec <_ZN8touchgfx12TextProvider11getNextCharEv>
 8018662:	b1f8      	cbz	r0, 80186a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018664:	280a      	cmp	r0, #10
 8018666:	d1f1      	bne.n	801864c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8018668:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801866c:	444b      	add	r3, r9
 801866e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018672:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8018676:	eba3 0309 	sub.w	r3, r3, r9
 801867a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801867e:	e7e5      	b.n	801864c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8018680:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8018684:	b2b3      	uxth	r3, r6
 8018686:	441a      	add	r2, r3
 8018688:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801868c:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8018690:	1ad3      	subs	r3, r2, r3
 8018692:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8018696:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801869a:	b11b      	cbz	r3, 80186a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801869c:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80186a0:	2b00      	cmp	r3, #0
 80186a2:	d0ba      	beq.n	801861a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80186a4:	b063      	add	sp, #396	; 0x18c
 80186a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80186aa:	2a02      	cmp	r2, #2
 80186ac:	d105      	bne.n	80186ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80186ae:	7be2      	ldrb	r2, [r4, #15]
 80186b0:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80186b4:	1a80      	subs	r0, r0, r2
 80186b6:	1ac0      	subs	r0, r0, r3
 80186b8:	e773      	b.n	80185a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80186ba:	2000      	movs	r0, #0
 80186bc:	e772      	b.n	80185a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80186be:	7be0      	ldrb	r0, [r4, #15]
 80186c0:	e770      	b.n	80185a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80186c2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80186c6:	e773      	b.n	80185b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80186c8:	f1ba 0f00 	cmp.w	sl, #0
 80186cc:	d0f7      	beq.n	80186be <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80186ce:	2264      	movs	r2, #100	; 0x64
 80186d0:	4639      	mov	r1, r7
 80186d2:	a849      	add	r0, sp, #292	; 0x124
 80186d4:	f013 f861 	bl	802b79a <memcpy>
 80186d8:	2300      	movs	r3, #0
 80186da:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80186de:	6821      	ldr	r1, [r4, #0]
 80186e0:	a849      	add	r0, sp, #292	; 0x124
 80186e2:	f7ff fbae 	bl	8017e42 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80186e6:	b203      	sxth	r3, r0
 80186e8:	e751      	b.n	801858e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

080186ea <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80186ea:	2b03      	cmp	r3, #3
 80186ec:	d818      	bhi.n	8018720 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80186ee:	e8df f003 	tbb	[pc, r3]
 80186f2:	0602      	.short	0x0602
 80186f4:	130d      	.short	0x130d
 80186f6:	f9b0 2000 	ldrsh.w	r2, [r0]
 80186fa:	1850      	adds	r0, r2, r1
 80186fc:	4770      	bx	lr
 80186fe:	8803      	ldrh	r3, [r0, #0]
 8018700:	8880      	ldrh	r0, [r0, #4]
 8018702:	4418      	add	r0, r3
 8018704:	b200      	sxth	r0, r0
 8018706:	1a80      	subs	r0, r0, r2
 8018708:	3801      	subs	r0, #1
 801870a:	4770      	bx	lr
 801870c:	8803      	ldrh	r3, [r0, #0]
 801870e:	8880      	ldrh	r0, [r0, #4]
 8018710:	4418      	add	r0, r3
 8018712:	b200      	sxth	r0, r0
 8018714:	1a40      	subs	r0, r0, r1
 8018716:	e7f7      	b.n	8018708 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8018718:	f9b0 0000 	ldrsh.w	r0, [r0]
 801871c:	4410      	add	r0, r2
 801871e:	4770      	bx	lr
 8018720:	2000      	movs	r0, #0
 8018722:	4770      	bx	lr

08018724 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8018724:	2b03      	cmp	r3, #3
 8018726:	d817      	bhi.n	8018758 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8018728:	e8df f003 	tbb	[pc, r3]
 801872c:	10090602 	.word	0x10090602
 8018730:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8018734:	1850      	adds	r0, r2, r1
 8018736:	4770      	bx	lr
 8018738:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801873c:	e7fa      	b.n	8018734 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 801873e:	8843      	ldrh	r3, [r0, #2]
 8018740:	88c0      	ldrh	r0, [r0, #6]
 8018742:	4418      	add	r0, r3
 8018744:	b200      	sxth	r0, r0
 8018746:	1a80      	subs	r0, r0, r2
 8018748:	3801      	subs	r0, #1
 801874a:	4770      	bx	lr
 801874c:	8843      	ldrh	r3, [r0, #2]
 801874e:	88c0      	ldrh	r0, [r0, #6]
 8018750:	4418      	add	r0, r3
 8018752:	b200      	sxth	r0, r0
 8018754:	1a40      	subs	r0, r0, r1
 8018756:	e7f7      	b.n	8018748 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8018758:	2000      	movs	r0, #0
 801875a:	4770      	bx	lr

0801875c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 801875c:	4b01      	ldr	r3, [pc, #4]	; (8018764 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801875e:	2200      	movs	r2, #0
 8018760:	601a      	str	r2, [r3, #0]
 8018762:	4770      	bx	lr
 8018764:	20002338 	.word	0x20002338

08018768 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8018768:	4603      	mov	r3, r0
 801876a:	b1c8      	cbz	r0, 80187a0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 801876c:	0c02      	lsrs	r2, r0, #16
 801876e:	0412      	lsls	r2, r2, #16
 8018770:	b9a2      	cbnz	r2, 801879c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8018772:	0403      	lsls	r3, r0, #16
 8018774:	2010      	movs	r0, #16
 8018776:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801877a:	bf04      	itt	eq
 801877c:	021b      	lsleq	r3, r3, #8
 801877e:	3008      	addeq	r0, #8
 8018780:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8018784:	bf04      	itt	eq
 8018786:	011b      	lsleq	r3, r3, #4
 8018788:	3004      	addeq	r0, #4
 801878a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801878e:	bf04      	itt	eq
 8018790:	009b      	lsleq	r3, r3, #2
 8018792:	3002      	addeq	r0, #2
 8018794:	2b00      	cmp	r3, #0
 8018796:	db04      	blt.n	80187a2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8018798:	3001      	adds	r0, #1
 801879a:	4770      	bx	lr
 801879c:	2000      	movs	r0, #0
 801879e:	e7ea      	b.n	8018776 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80187a0:	2020      	movs	r0, #32
 80187a2:	4770      	bx	lr

080187a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80187a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80187a8:	b087      	sub	sp, #28
 80187aa:	460d      	mov	r5, r1
 80187ac:	4616      	mov	r6, r2
 80187ae:	4698      	mov	r8, r3
 80187b0:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80187b4:	4601      	mov	r1, r0
 80187b6:	b120      	cbz	r0, 80187c2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80187b8:	b11a      	cbz	r2, 80187c2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80187ba:	2d1f      	cmp	r5, #31
 80187bc:	d801      	bhi.n	80187c2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80187be:	2b1f      	cmp	r3, #31
 80187c0:	d904      	bls.n	80187cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80187c2:	2000      	movs	r0, #0
 80187c4:	6038      	str	r0, [r7, #0]
 80187c6:	b007      	add	sp, #28
 80187c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80187cc:	b97d      	cbnz	r5, 80187ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80187ce:	b143      	cbz	r3, 80187e2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80187d0:	4602      	mov	r2, r0
 80187d2:	e9cd 4700 	strd	r4, r7, [sp]
 80187d6:	462b      	mov	r3, r5
 80187d8:	4641      	mov	r1, r8
 80187da:	4630      	mov	r0, r6
 80187dc:	f7ff ffe2 	bl	80187a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80187e0:	e7f1      	b.n	80187c6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80187e2:	f04f 33ff 	mov.w	r3, #4294967295
 80187e6:	603b      	str	r3, [r7, #0]
 80187e8:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80187ec:	e7eb      	b.n	80187c6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80187ee:	fa32 fa05 	lsrs.w	sl, r2, r5
 80187f2:	d106      	bne.n	8018802 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 80187f4:	4346      	muls	r6, r0
 80187f6:	fbb6 f0f4 	udiv	r0, r6, r4
 80187fa:	fb04 6610 	mls	r6, r4, r0, r6
 80187fe:	603e      	str	r6, [r7, #0]
 8018800:	e7e1      	b.n	80187c6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8018802:	2201      	movs	r2, #1
 8018804:	40aa      	lsls	r2, r5
 8018806:	3a01      	subs	r2, #1
 8018808:	4016      	ands	r6, r2
 801880a:	fa00 fb05 	lsl.w	fp, r0, r5
 801880e:	4630      	mov	r0, r6
 8018810:	fbbb f9f4 	udiv	r9, fp, r4
 8018814:	fb0a f309 	mul.w	r3, sl, r9
 8018818:	9303      	str	r3, [sp, #12]
 801881a:	f7ff ffa5 	bl	8018768 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801881e:	462b      	mov	r3, r5
 8018820:	460a      	mov	r2, r1
 8018822:	e9cd 4700 	strd	r4, r7, [sp]
 8018826:	4601      	mov	r1, r0
 8018828:	4630      	mov	r0, r6
 801882a:	f7ff ffbb 	bl	80187a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801882e:	fb04 b919 	mls	r9, r4, r9, fp
 8018832:	4606      	mov	r6, r0
 8018834:	4648      	mov	r0, r9
 8018836:	eb05 0108 	add.w	r1, r5, r8
 801883a:	f7ff ff95 	bl	8018768 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801883e:	ab05      	add	r3, sp, #20
 8018840:	e9cd 4300 	strd	r4, r3, [sp]
 8018844:	464a      	mov	r2, r9
 8018846:	4603      	mov	r3, r0
 8018848:	4650      	mov	r0, sl
 801884a:	f7ff ffab 	bl	80187a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801884e:	6839      	ldr	r1, [r7, #0]
 8018850:	9a05      	ldr	r2, [sp, #20]
 8018852:	9b03      	ldr	r3, [sp, #12]
 8018854:	4411      	add	r1, r2
 8018856:	fbb1 f2f4 	udiv	r2, r1, r4
 801885a:	18d3      	adds	r3, r2, r3
 801885c:	441e      	add	r6, r3
 801885e:	fb04 1412 	mls	r4, r4, r2, r1
 8018862:	4430      	add	r0, r6
 8018864:	603c      	str	r4, [r7, #0]
 8018866:	e7ae      	b.n	80187c6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08018868 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8018868:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801886c:	b085      	sub	sp, #20
 801886e:	f1b0 0900 	subs.w	r9, r0, #0
 8018872:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018874:	461d      	mov	r5, r3
 8018876:	bfbf      	itttt	lt
 8018878:	6823      	ldrlt	r3, [r4, #0]
 801887a:	425b      	neglt	r3, r3
 801887c:	f1c9 0900 	rsblt	r9, r9, #0
 8018880:	6023      	strlt	r3, [r4, #0]
 8018882:	bfb4      	ite	lt
 8018884:	f04f 36ff 	movlt.w	r6, #4294967295
 8018888:	2601      	movge	r6, #1
 801888a:	2a00      	cmp	r2, #0
 801888c:	4617      	mov	r7, r2
 801888e:	da04      	bge.n	801889a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8018890:	6823      	ldr	r3, [r4, #0]
 8018892:	425b      	negs	r3, r3
 8018894:	4257      	negs	r7, r2
 8018896:	4276      	negs	r6, r6
 8018898:	6023      	str	r3, [r4, #0]
 801889a:	2d00      	cmp	r5, #0
 801889c:	4638      	mov	r0, r7
 801889e:	bfba      	itte	lt
 80188a0:	426d      	neglt	r5, r5
 80188a2:	f04f 38ff 	movlt.w	r8, #4294967295
 80188a6:	f04f 0801 	movge.w	r8, #1
 80188aa:	f7ff ff5d 	bl	8018768 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80188ae:	ab03      	add	r3, sp, #12
 80188b0:	e9cd 5300 	strd	r5, r3, [sp]
 80188b4:	463a      	mov	r2, r7
 80188b6:	4603      	mov	r3, r0
 80188b8:	4648      	mov	r0, r9
 80188ba:	f7ff ff73 	bl	80187a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80188be:	6823      	ldr	r3, [r4, #0]
 80188c0:	9a03      	ldr	r2, [sp, #12]
 80188c2:	4546      	cmp	r6, r8
 80188c4:	441a      	add	r2, r3
 80188c6:	fb92 f3f5 	sdiv	r3, r2, r5
 80188ca:	4418      	add	r0, r3
 80188cc:	bf18      	it	ne
 80188ce:	4240      	negne	r0, r0
 80188d0:	fb05 2313 	mls	r3, r5, r3, r2
 80188d4:	1c72      	adds	r2, r6, #1
 80188d6:	6023      	str	r3, [r4, #0]
 80188d8:	d105      	bne.n	80188e6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80188da:	2b00      	cmp	r3, #0
 80188dc:	f1c3 0200 	rsb	r2, r3, #0
 80188e0:	db0b      	blt.n	80188fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80188e2:	6022      	str	r2, [r4, #0]
 80188e4:	e006      	b.n	80188f4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80188e6:	2e01      	cmp	r6, #1
 80188e8:	d104      	bne.n	80188f4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80188ea:	2b00      	cmp	r3, #0
 80188ec:	da02      	bge.n	80188f4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80188ee:	442b      	add	r3, r5
 80188f0:	3801      	subs	r0, #1
 80188f2:	6023      	str	r3, [r4, #0]
 80188f4:	b005      	add	sp, #20
 80188f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80188fa:	3801      	subs	r0, #1
 80188fc:	1b52      	subs	r2, r2, r5
 80188fe:	e7f0      	b.n	80188e2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08018900 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8018900:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8018904:	4c1c      	ldr	r4, [pc, #112]	; (8018978 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8018906:	6807      	ldr	r7, [r0, #0]
 8018908:	69a3      	ldr	r3, [r4, #24]
 801890a:	4605      	mov	r5, r0
 801890c:	b92b      	cbnz	r3, 801891a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 801890e:	6840      	ldr	r0, [r0, #4]
 8018910:	e9c5 7000 	strd	r7, r0, [r5]
 8018914:	b004      	add	sp, #16
 8018916:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801891a:	68a2      	ldr	r2, [r4, #8]
 801891c:	6820      	ldr	r0, [r4, #0]
 801891e:	ae04      	add	r6, sp, #16
 8018920:	f04f 0802 	mov.w	r8, #2
 8018924:	fb93 f1f8 	sdiv	r1, r3, r8
 8018928:	440a      	add	r2, r1
 801892a:	f846 2d04 	str.w	r2, [r6, #-4]!
 801892e:	69e1      	ldr	r1, [r4, #28]
 8018930:	9600      	str	r6, [sp, #0]
 8018932:	463a      	mov	r2, r7
 8018934:	f7ff ff98 	bl	8018868 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018938:	69a3      	ldr	r3, [r4, #24]
 801893a:	686a      	ldr	r2, [r5, #4]
 801893c:	6a21      	ldr	r1, [r4, #32]
 801893e:	9600      	str	r6, [sp, #0]
 8018940:	4607      	mov	r7, r0
 8018942:	6860      	ldr	r0, [r4, #4]
 8018944:	f7ff ff90 	bl	8018868 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018948:	6962      	ldr	r2, [r4, #20]
 801894a:	69a3      	ldr	r3, [r4, #24]
 801894c:	fb93 f8f8 	sdiv	r8, r3, r8
 8018950:	4442      	add	r2, r8
 8018952:	9203      	str	r2, [sp, #12]
 8018954:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8018956:	682a      	ldr	r2, [r5, #0]
 8018958:	9600      	str	r6, [sp, #0]
 801895a:	4407      	add	r7, r0
 801895c:	68e0      	ldr	r0, [r4, #12]
 801895e:	f7ff ff83 	bl	8018868 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018962:	9600      	str	r6, [sp, #0]
 8018964:	4680      	mov	r8, r0
 8018966:	69a3      	ldr	r3, [r4, #24]
 8018968:	686a      	ldr	r2, [r5, #4]
 801896a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 801896c:	6920      	ldr	r0, [r4, #16]
 801896e:	f7ff ff7b 	bl	8018868 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018972:	4440      	add	r0, r8
 8018974:	e7cc      	b.n	8018910 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8018976:	bf00      	nop
 8018978:	2000233c 	.word	0x2000233c

0801897c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 801897c:	4b07      	ldr	r3, [pc, #28]	; (801899c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 801897e:	781b      	ldrb	r3, [r3, #0]
 8018980:	2b01      	cmp	r3, #1
 8018982:	d109      	bne.n	8018998 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8018984:	f9b1 3000 	ldrsh.w	r3, [r1]
 8018988:	f9b0 2000 	ldrsh.w	r2, [r0]
 801898c:	8003      	strh	r3, [r0, #0]
 801898e:	4b04      	ldr	r3, [pc, #16]	; (80189a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8018990:	881b      	ldrh	r3, [r3, #0]
 8018992:	3b01      	subs	r3, #1
 8018994:	1a9b      	subs	r3, r3, r2
 8018996:	800b      	strh	r3, [r1, #0]
 8018998:	4770      	bx	lr
 801899a:	bf00      	nop
 801899c:	20002320 	.word	0x20002320
 80189a0:	2000231c 	.word	0x2000231c

080189a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80189a4:	b510      	push	{r4, lr}
 80189a6:	4b07      	ldr	r3, [pc, #28]	; (80189c4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80189a8:	781b      	ldrb	r3, [r3, #0]
 80189aa:	2b01      	cmp	r3, #1
 80189ac:	d108      	bne.n	80189c0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80189ae:	4b06      	ldr	r3, [pc, #24]	; (80189c8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80189b0:	880c      	ldrh	r4, [r1, #0]
 80189b2:	881b      	ldrh	r3, [r3, #0]
 80189b4:	f9b0 2000 	ldrsh.w	r2, [r0]
 80189b8:	3b01      	subs	r3, #1
 80189ba:	1b1b      	subs	r3, r3, r4
 80189bc:	8003      	strh	r3, [r0, #0]
 80189be:	800a      	strh	r2, [r1, #0]
 80189c0:	bd10      	pop	{r4, pc}
 80189c2:	bf00      	nop
 80189c4:	20002320 	.word	0x20002320
 80189c8:	2000231c 	.word	0x2000231c

080189cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80189cc:	b510      	push	{r4, lr}
 80189ce:	4b0a      	ldr	r3, [pc, #40]	; (80189f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80189d0:	781b      	ldrb	r3, [r3, #0]
 80189d2:	2b01      	cmp	r3, #1
 80189d4:	d10e      	bne.n	80189f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80189d6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80189da:	8843      	ldrh	r3, [r0, #2]
 80189dc:	f9b0 4000 	ldrsh.w	r4, [r0]
 80189e0:	8044      	strh	r4, [r0, #2]
 80189e2:	18ca      	adds	r2, r1, r3
 80189e4:	4b05      	ldr	r3, [pc, #20]	; (80189fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80189e6:	881b      	ldrh	r3, [r3, #0]
 80189e8:	1a9b      	subs	r3, r3, r2
 80189ea:	8003      	strh	r3, [r0, #0]
 80189ec:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80189f0:	80c3      	strh	r3, [r0, #6]
 80189f2:	8081      	strh	r1, [r0, #4]
 80189f4:	bd10      	pop	{r4, pc}
 80189f6:	bf00      	nop
 80189f8:	20002320 	.word	0x20002320
 80189fc:	2000231c 	.word	0x2000231c

08018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8018a00:	4b08      	ldr	r3, [pc, #32]	; (8018a24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8018a02:	781b      	ldrb	r3, [r3, #0]
 8018a04:	2b01      	cmp	r3, #1
 8018a06:	d10c      	bne.n	8018a22 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8018a08:	8803      	ldrh	r3, [r0, #0]
 8018a0a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8018a0e:	8842      	ldrh	r2, [r0, #2]
 8018a10:	8002      	strh	r2, [r0, #0]
 8018a12:	185a      	adds	r2, r3, r1
 8018a14:	4b04      	ldr	r3, [pc, #16]	; (8018a28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8018a16:	881b      	ldrh	r3, [r3, #0]
 8018a18:	1a9b      	subs	r3, r3, r2
 8018a1a:	8043      	strh	r3, [r0, #2]
 8018a1c:	88c3      	ldrh	r3, [r0, #6]
 8018a1e:	8083      	strh	r3, [r0, #4]
 8018a20:	80c1      	strh	r1, [r0, #6]
 8018a22:	4770      	bx	lr
 8018a24:	20002320 	.word	0x20002320
 8018a28:	2000231c 	.word	0x2000231c

08018a2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8018a2c:	b510      	push	{r4, lr}
 8018a2e:	4b07      	ldr	r3, [pc, #28]	; (8018a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8018a30:	781b      	ldrb	r3, [r3, #0]
 8018a32:	2b01      	cmp	r3, #1
 8018a34:	d108      	bne.n	8018a48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8018a36:	f9b1 3000 	ldrsh.w	r3, [r1]
 8018a3a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018a3e:	8003      	strh	r3, [r0, #0]
 8018a40:	8893      	ldrh	r3, [r2, #4]
 8018a42:	3b01      	subs	r3, #1
 8018a44:	1b1b      	subs	r3, r3, r4
 8018a46:	800b      	strh	r3, [r1, #0]
 8018a48:	bd10      	pop	{r4, pc}
 8018a4a:	bf00      	nop
 8018a4c:	20002320 	.word	0x20002320

08018a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8018a50:	4b0b      	ldr	r3, [pc, #44]	; (8018a80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8018a52:	781b      	ldrb	r3, [r3, #0]
 8018a54:	2b01      	cmp	r3, #1
 8018a56:	d111      	bne.n	8018a7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8018a58:	680b      	ldr	r3, [r1, #0]
 8018a5a:	ed90 7a00 	vldr	s14, [r0]
 8018a5e:	6003      	str	r3, [r0, #0]
 8018a60:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8018a64:	eddf 6a07 	vldr	s13, [pc, #28]	; 8018a84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8018a68:	ee07 3a90 	vmov	s15, r3
 8018a6c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018a70:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8018a74:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8018a78:	edc1 7a00 	vstr	s15, [r1]
 8018a7c:	4770      	bx	lr
 8018a7e:	bf00      	nop
 8018a80:	20002320 	.word	0x20002320
 8018a84:	38d1b717 	.word	0x38d1b717

08018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8018a88:	b510      	push	{r4, lr}
 8018a8a:	4b0a      	ldr	r3, [pc, #40]	; (8018ab4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8018a8c:	781b      	ldrb	r3, [r3, #0]
 8018a8e:	2b01      	cmp	r3, #1
 8018a90:	460a      	mov	r2, r1
 8018a92:	d10d      	bne.n	8018ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8018a94:	8881      	ldrh	r1, [r0, #4]
 8018a96:	8803      	ldrh	r3, [r0, #0]
 8018a98:	440b      	add	r3, r1
 8018a9a:	4601      	mov	r1, r0
 8018a9c:	3b01      	subs	r3, #1
 8018a9e:	f821 3b02 	strh.w	r3, [r1], #2
 8018aa2:	f7ff ffc3 	bl	8018a2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8018aa6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018aaa:	88c2      	ldrh	r2, [r0, #6]
 8018aac:	8082      	strh	r2, [r0, #4]
 8018aae:	80c3      	strh	r3, [r0, #6]
 8018ab0:	bd10      	pop	{r4, pc}
 8018ab2:	bf00      	nop
 8018ab4:	20002320 	.word	0x20002320

08018ab8 <_ZN8touchgfx11Application13requestRedrawEv>:
 8018ab8:	4b06      	ldr	r3, [pc, #24]	; (8018ad4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8018aba:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018abe:	4b06      	ldr	r3, [pc, #24]	; (8018ad8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8018ac0:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8018ac4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018ac8:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8018acc:	2100      	movs	r1, #0
 8018ace:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8018ad2:	4770      	bx	lr
 8018ad4:	2000231c 	.word	0x2000231c
 8018ad8:	2000231e 	.word	0x2000231e

08018adc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8018adc:	4b03      	ldr	r3, [pc, #12]	; (8018aec <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8018ade:	6818      	ldr	r0, [r3, #0]
 8018ae0:	b110      	cbz	r0, 8018ae8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8018ae2:	6803      	ldr	r3, [r0, #0]
 8018ae4:	699b      	ldr	r3, [r3, #24]
 8018ae6:	4718      	bx	r3
 8018ae8:	4770      	bx	lr
 8018aea:	bf00      	nop
 8018aec:	2000236c 	.word	0x2000236c

08018af0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8018af0:	4770      	bx	lr
	...

08018af4 <_ZN8touchgfx11Application4drawEv>:
 8018af4:	b507      	push	{r0, r1, r2, lr}
 8018af6:	4b09      	ldr	r3, [pc, #36]	; (8018b1c <_ZN8touchgfx11Application4drawEv+0x28>)
 8018af8:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018afc:	4b08      	ldr	r3, [pc, #32]	; (8018b20 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8018afe:	f8ad 2004 	strh.w	r2, [sp, #4]
 8018b02:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018b06:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018b0a:	6803      	ldr	r3, [r0, #0]
 8018b0c:	2100      	movs	r1, #0
 8018b0e:	9100      	str	r1, [sp, #0]
 8018b10:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8018b12:	4669      	mov	r1, sp
 8018b14:	4798      	blx	r3
 8018b16:	b003      	add	sp, #12
 8018b18:	f85d fb04 	ldr.w	pc, [sp], #4
 8018b1c:	2000231c 	.word	0x2000231c
 8018b20:	2000231e 	.word	0x2000231e

08018b24 <_ZN8touchgfx11Application10invalidateEv>:
 8018b24:	4b09      	ldr	r3, [pc, #36]	; (8018b4c <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8018b26:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018b2a:	4b09      	ldr	r3, [pc, #36]	; (8018b50 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8018b2c:	b082      	sub	sp, #8
 8018b2e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018b32:	f8ad 2004 	strh.w	r2, [sp, #4]
 8018b36:	2100      	movs	r1, #0
 8018b38:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018b3c:	9100      	str	r1, [sp, #0]
 8018b3e:	6803      	ldr	r3, [r0, #0]
 8018b40:	aa02      	add	r2, sp, #8
 8018b42:	e912 0006 	ldmdb	r2, {r1, r2}
 8018b46:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8018b48:	b002      	add	sp, #8
 8018b4a:	4718      	bx	r3
 8018b4c:	2000231c 	.word	0x2000231c
 8018b50:	2000231e 	.word	0x2000231e

08018b54 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8018b54:	4b03      	ldr	r3, [pc, #12]	; (8018b64 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8018b56:	6818      	ldr	r0, [r3, #0]
 8018b58:	b110      	cbz	r0, 8018b60 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8018b5a:	6803      	ldr	r3, [r0, #0]
 8018b5c:	69db      	ldr	r3, [r3, #28]
 8018b5e:	4718      	bx	r3
 8018b60:	4770      	bx	lr
 8018b62:	bf00      	nop
 8018b64:	2000236c 	.word	0x2000236c

08018b68 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8018b68:	4b03      	ldr	r3, [pc, #12]	; (8018b78 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8018b6a:	6818      	ldr	r0, [r3, #0]
 8018b6c:	b110      	cbz	r0, 8018b74 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8018b6e:	6803      	ldr	r3, [r0, #0]
 8018b70:	6a1b      	ldr	r3, [r3, #32]
 8018b72:	4718      	bx	r3
 8018b74:	4770      	bx	lr
 8018b76:	bf00      	nop
 8018b78:	2000236c 	.word	0x2000236c

08018b7c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8018b7c:	2300      	movs	r3, #0
 8018b7e:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8018b82:	4770      	bx	lr

08018b84 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8018b84:	4b03      	ldr	r3, [pc, #12]	; (8018b94 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8018b86:	6818      	ldr	r0, [r3, #0]
 8018b88:	b110      	cbz	r0, 8018b90 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8018b8a:	6803      	ldr	r3, [r0, #0]
 8018b8c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018b8e:	4718      	bx	r3
 8018b90:	4770      	bx	lr
 8018b92:	bf00      	nop
 8018b94:	2000236c 	.word	0x2000236c

08018b98 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8018b98:	b510      	push	{r4, lr}
 8018b9a:	f9b1 4000 	ldrsh.w	r4, [r1]
 8018b9e:	888a      	ldrh	r2, [r1, #4]
 8018ba0:	f9b0 3000 	ldrsh.w	r3, [r0]
 8018ba4:	4422      	add	r2, r4
 8018ba6:	b212      	sxth	r2, r2
 8018ba8:	4293      	cmp	r3, r2
 8018baa:	da15      	bge.n	8018bd8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8018bac:	8882      	ldrh	r2, [r0, #4]
 8018bae:	4413      	add	r3, r2
 8018bb0:	b21b      	sxth	r3, r3
 8018bb2:	429c      	cmp	r4, r3
 8018bb4:	da10      	bge.n	8018bd8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8018bb6:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8018bba:	88c9      	ldrh	r1, [r1, #6]
 8018bbc:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8018bc0:	4419      	add	r1, r3
 8018bc2:	b209      	sxth	r1, r1
 8018bc4:	428a      	cmp	r2, r1
 8018bc6:	da07      	bge.n	8018bd8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8018bc8:	88c0      	ldrh	r0, [r0, #6]
 8018bca:	4410      	add	r0, r2
 8018bcc:	b200      	sxth	r0, r0
 8018bce:	4283      	cmp	r3, r0
 8018bd0:	bfac      	ite	ge
 8018bd2:	2000      	movge	r0, #0
 8018bd4:	2001      	movlt	r0, #1
 8018bd6:	bd10      	pop	{r4, pc}
 8018bd8:	2000      	movs	r0, #0
 8018bda:	e7fc      	b.n	8018bd6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08018bdc <_ZN8touchgfx4Rect10restrictToEss>:
 8018bdc:	f9b0 3000 	ldrsh.w	r3, [r0]
 8018be0:	2b00      	cmp	r3, #0
 8018be2:	b510      	push	{r4, lr}
 8018be4:	da04      	bge.n	8018bf0 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8018be6:	8884      	ldrh	r4, [r0, #4]
 8018be8:	4423      	add	r3, r4
 8018bea:	8083      	strh	r3, [r0, #4]
 8018bec:	2300      	movs	r3, #0
 8018bee:	8003      	strh	r3, [r0, #0]
 8018bf0:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018bf4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018bf8:	1b09      	subs	r1, r1, r4
 8018bfa:	428b      	cmp	r3, r1
 8018bfc:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8018c00:	bfc8      	it	gt
 8018c02:	8081      	strhgt	r1, [r0, #4]
 8018c04:	2b00      	cmp	r3, #0
 8018c06:	da04      	bge.n	8018c12 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8018c08:	88c1      	ldrh	r1, [r0, #6]
 8018c0a:	440b      	add	r3, r1
 8018c0c:	80c3      	strh	r3, [r0, #6]
 8018c0e:	2300      	movs	r3, #0
 8018c10:	8043      	strh	r3, [r0, #2]
 8018c12:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8018c16:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8018c1a:	1a52      	subs	r2, r2, r1
 8018c1c:	4293      	cmp	r3, r2
 8018c1e:	bfc8      	it	gt
 8018c20:	80c2      	strhgt	r2, [r0, #6]
 8018c22:	bd10      	pop	{r4, pc}

08018c24 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8018c24:	b510      	push	{r4, lr}
 8018c26:	4b10      	ldr	r3, [pc, #64]	; (8018c68 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8018c28:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018c2c:	4b0f      	ldr	r3, [pc, #60]	; (8018c6c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8018c2e:	460c      	mov	r4, r1
 8018c30:	4620      	mov	r0, r4
 8018c32:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018c36:	f7ff ffd1 	bl	8018bdc <_ZN8touchgfx4Rect10restrictToEss>
 8018c3a:	4b0d      	ldr	r3, [pc, #52]	; (8018c70 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8018c3c:	6818      	ldr	r0, [r3, #0]
 8018c3e:	b190      	cbz	r0, 8018c66 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8018c40:	6803      	ldr	r3, [r0, #0]
 8018c42:	4621      	mov	r1, r4
 8018c44:	689b      	ldr	r3, [r3, #8]
 8018c46:	4798      	blx	r3
 8018c48:	4b0a      	ldr	r3, [pc, #40]	; (8018c74 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8018c4a:	6818      	ldr	r0, [r3, #0]
 8018c4c:	b118      	cbz	r0, 8018c56 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8018c4e:	6803      	ldr	r3, [r0, #0]
 8018c50:	4621      	mov	r1, r4
 8018c52:	689b      	ldr	r3, [r3, #8]
 8018c54:	4798      	blx	r3
 8018c56:	4b08      	ldr	r3, [pc, #32]	; (8018c78 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8018c58:	6818      	ldr	r0, [r3, #0]
 8018c5a:	6803      	ldr	r3, [r0, #0]
 8018c5c:	4621      	mov	r1, r4
 8018c5e:	69db      	ldr	r3, [r3, #28]
 8018c60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018c64:	4718      	bx	r3
 8018c66:	bd10      	pop	{r4, pc}
 8018c68:	2000231e 	.word	0x2000231e
 8018c6c:	2000231c 	.word	0x2000231c
 8018c70:	2000236c 	.word	0x2000236c
 8018c74:	20002368 	.word	0x20002368
 8018c78:	20002328 	.word	0x20002328

08018c7c <_ZNK8touchgfx4Rect8includesERKS0_>:
 8018c7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018c7e:	4606      	mov	r6, r0
 8018c80:	4608      	mov	r0, r1
 8018c82:	460f      	mov	r7, r1
 8018c84:	f7fa f8af 	bl	8012de6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018c88:	b9e8      	cbnz	r0, 8018cc6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8018c8a:	f9b7 5000 	ldrsh.w	r5, [r7]
 8018c8e:	f9b6 4000 	ldrsh.w	r4, [r6]
 8018c92:	42a5      	cmp	r5, r4
 8018c94:	db17      	blt.n	8018cc6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8018c96:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8018c9a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8018c9e:	429a      	cmp	r2, r3
 8018ca0:	db11      	blt.n	8018cc6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8018ca2:	88b9      	ldrh	r1, [r7, #4]
 8018ca4:	440d      	add	r5, r1
 8018ca6:	88b1      	ldrh	r1, [r6, #4]
 8018ca8:	440c      	add	r4, r1
 8018caa:	b22d      	sxth	r5, r5
 8018cac:	b224      	sxth	r4, r4
 8018cae:	42a5      	cmp	r5, r4
 8018cb0:	dc09      	bgt.n	8018cc6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8018cb2:	88f8      	ldrh	r0, [r7, #6]
 8018cb4:	4410      	add	r0, r2
 8018cb6:	88f2      	ldrh	r2, [r6, #6]
 8018cb8:	4413      	add	r3, r2
 8018cba:	b200      	sxth	r0, r0
 8018cbc:	b21b      	sxth	r3, r3
 8018cbe:	4298      	cmp	r0, r3
 8018cc0:	bfcc      	ite	gt
 8018cc2:	2000      	movgt	r0, #0
 8018cc4:	2001      	movle	r0, #1
 8018cc6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08018cc8 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8018cc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018cca:	4604      	mov	r4, r0
 8018ccc:	4608      	mov	r0, r1
 8018cce:	460d      	mov	r5, r1
 8018cd0:	f7fa f889 	bl	8012de6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018cd4:	b978      	cbnz	r0, 8018cf6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8018cd6:	4620      	mov	r0, r4
 8018cd8:	f7fa f885 	bl	8012de6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018cdc:	f9b5 6000 	ldrsh.w	r6, [r5]
 8018ce0:	b150      	cbz	r0, 8018cf8 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8018ce2:	8026      	strh	r6, [r4, #0]
 8018ce4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8018ce8:	8063      	strh	r3, [r4, #2]
 8018cea:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8018cee:	80a3      	strh	r3, [r4, #4]
 8018cf0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8018cf4:	80e3      	strh	r3, [r4, #6]
 8018cf6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018cf8:	f9b4 1000 	ldrsh.w	r1, [r4]
 8018cfc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8018d00:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8018d04:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8018d08:	88ed      	ldrh	r5, [r5, #6]
 8018d0a:	42b1      	cmp	r1, r6
 8018d0c:	460f      	mov	r7, r1
 8018d0e:	bfa8      	it	ge
 8018d10:	4637      	movge	r7, r6
 8018d12:	4293      	cmp	r3, r2
 8018d14:	4618      	mov	r0, r3
 8018d16:	4466      	add	r6, ip
 8018d18:	bfa8      	it	ge
 8018d1a:	4610      	movge	r0, r2
 8018d1c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8018d20:	8027      	strh	r7, [r4, #0]
 8018d22:	442a      	add	r2, r5
 8018d24:	88e5      	ldrh	r5, [r4, #6]
 8018d26:	8060      	strh	r0, [r4, #2]
 8018d28:	4461      	add	r1, ip
 8018d2a:	442b      	add	r3, r5
 8018d2c:	b236      	sxth	r6, r6
 8018d2e:	b209      	sxth	r1, r1
 8018d30:	b212      	sxth	r2, r2
 8018d32:	b21b      	sxth	r3, r3
 8018d34:	428e      	cmp	r6, r1
 8018d36:	bfac      	ite	ge
 8018d38:	ebc7 0106 	rsbge	r1, r7, r6
 8018d3c:	ebc7 0101 	rsblt	r1, r7, r1
 8018d40:	429a      	cmp	r2, r3
 8018d42:	bfac      	ite	ge
 8018d44:	ebc0 0202 	rsbge	r2, r0, r2
 8018d48:	ebc0 0203 	rsblt	r2, r0, r3
 8018d4c:	80a1      	strh	r1, [r4, #4]
 8018d4e:	80e2      	strh	r2, [r4, #6]
 8018d50:	e7d1      	b.n	8018cf6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08018d54 <_ZN8touchgfx11Application11getInstanceEv>:
 8018d54:	4b01      	ldr	r3, [pc, #4]	; (8018d5c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8018d56:	6818      	ldr	r0, [r3, #0]
 8018d58:	4770      	bx	lr
 8018d5a:	bf00      	nop
 8018d5c:	2000237c 	.word	0x2000237c

08018d60 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8018d60:	b510      	push	{r4, lr}
 8018d62:	2300      	movs	r3, #0
 8018d64:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8018d68:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8018d6c:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8018d70:	4604      	mov	r4, r0
 8018d72:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8018d76:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8018d7a:	429a      	cmp	r2, r3
 8018d7c:	d90e      	bls.n	8018d9c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8018d7e:	18e2      	adds	r2, r4, r3
 8018d80:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8018d84:	b122      	cbz	r2, 8018d90 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8018d86:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8018d8a:	6803      	ldr	r3, [r0, #0]
 8018d8c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8018d8e:	4798      	blx	r3
 8018d90:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8018d94:	3301      	adds	r3, #1
 8018d96:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8018d9a:	e7ea      	b.n	8018d72 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8018d9c:	bd10      	pop	{r4, pc}

08018d9e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8018d9e:	b530      	push	{r4, r5, lr}
 8018da0:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8018da4:	2200      	movs	r2, #0
 8018da6:	b293      	uxth	r3, r2
 8018da8:	429d      	cmp	r5, r3
 8018daa:	d90e      	bls.n	8018dca <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8018dac:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8018db0:	428b      	cmp	r3, r1
 8018db2:	d10b      	bne.n	8018dcc <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8018db4:	1884      	adds	r4, r0, r2
 8018db6:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8018dba:	b13b      	cbz	r3, 8018dcc <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8018dbc:	3b01      	subs	r3, #1
 8018dbe:	b2db      	uxtb	r3, r3
 8018dc0:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8018dc4:	b90b      	cbnz	r3, 8018dca <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8018dc6:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8018dca:	bd30      	pop	{r4, r5, pc}
 8018dcc:	3201      	adds	r2, #1
 8018dce:	e7ea      	b.n	8018da6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08018dd0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8018dd0:	2300      	movs	r3, #0
 8018dd2:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8018dd6:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8018dda:	30a4      	adds	r0, #164	; 0xa4
 8018ddc:	f802 3b01 	strb.w	r3, [r2], #1
 8018de0:	4282      	cmp	r2, r0
 8018de2:	d1fb      	bne.n	8018ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8018de4:	4770      	bx	lr
	...

08018de8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8018de8:	b570      	push	{r4, r5, r6, lr}
 8018dea:	4c0b      	ldr	r4, [pc, #44]	; (8018e18 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8018dec:	4605      	mov	r5, r0
 8018dee:	6820      	ldr	r0, [r4, #0]
 8018df0:	460e      	mov	r6, r1
 8018df2:	b110      	cbz	r0, 8018dfa <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8018df4:	6803      	ldr	r3, [r0, #0]
 8018df6:	695b      	ldr	r3, [r3, #20]
 8018df8:	4798      	blx	r3
 8018dfa:	1d28      	adds	r0, r5, #4
 8018dfc:	f7ff ffe8 	bl	8018dd0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8018e00:	6026      	str	r6, [r4, #0]
 8018e02:	6833      	ldr	r3, [r6, #0]
 8018e04:	4630      	mov	r0, r6
 8018e06:	68db      	ldr	r3, [r3, #12]
 8018e08:	4798      	blx	r3
 8018e0a:	682b      	ldr	r3, [r5, #0]
 8018e0c:	4628      	mov	r0, r5
 8018e0e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018e10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018e14:	4718      	bx	r3
 8018e16:	bf00      	nop
 8018e18:	2000236c 	.word	0x2000236c

08018e1c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8018e1c:	2300      	movs	r3, #0
 8018e1e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8018e22:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8018e26:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018e28:	461a      	mov	r2, r3
 8018e2a:	461c      	mov	r4, r3
 8018e2c:	461d      	mov	r5, r3
 8018e2e:	459c      	cmp	ip, r3
 8018e30:	dd1a      	ble.n	8018e68 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8018e32:	18c6      	adds	r6, r0, r3
 8018e34:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8018e38:	b16e      	cbz	r6, 8018e56 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8018e3a:	429a      	cmp	r2, r3
 8018e3c:	d008      	beq.n	8018e50 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8018e3e:	fa1f fe82 	uxth.w	lr, r2
 8018e42:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8018e46:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8018e4a:	1887      	adds	r7, r0, r2
 8018e4c:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8018e50:	3201      	adds	r2, #1
 8018e52:	3301      	adds	r3, #1
 8018e54:	e7eb      	b.n	8018e2e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8018e56:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8018e5a:	4299      	cmp	r1, r3
 8018e5c:	bfa8      	it	ge
 8018e5e:	3501      	addge	r5, #1
 8018e60:	429e      	cmp	r6, r3
 8018e62:	bfc8      	it	gt
 8018e64:	3401      	addgt	r4, #1
 8018e66:	e7f4      	b.n	8018e52 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8018e68:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8018e6c:	1b49      	subs	r1, r1, r5
 8018e6e:	1b1b      	subs	r3, r3, r4
 8018e70:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8018e74:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8018e78:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8018e7c:	4293      	cmp	r3, r2
 8018e7e:	dd03      	ble.n	8018e88 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8018e80:	3b01      	subs	r3, #1
 8018e82:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8018e86:	e7f7      	b.n	8018e78 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8018e88:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08018e8c <_ZN8touchgfx11Application15handleTickEventEv>:
 8018e8c:	b570      	push	{r4, r5, r6, lr}
 8018e8e:	4d16      	ldr	r5, [pc, #88]	; (8018ee8 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8018e90:	4604      	mov	r4, r0
 8018e92:	6828      	ldr	r0, [r5, #0]
 8018e94:	b140      	cbz	r0, 8018ea8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8018e96:	7a03      	ldrb	r3, [r0, #8]
 8018e98:	b933      	cbnz	r3, 8018ea8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8018e9a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8018e9e:	6803      	ldr	r3, [r0, #0]
 8018ea0:	689b      	ldr	r3, [r3, #8]
 8018ea2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018ea6:	4718      	bx	r3
 8018ea8:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8018eac:	4e0f      	ldr	r6, [pc, #60]	; (8018eec <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8018eae:	b973      	cbnz	r3, 8018ece <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018eb0:	b168      	cbz	r0, 8018ece <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018eb2:	7a03      	ldrb	r3, [r0, #8]
 8018eb4:	b15b      	cbz	r3, 8018ece <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018eb6:	6830      	ldr	r0, [r6, #0]
 8018eb8:	b110      	cbz	r0, 8018ec0 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8018eba:	6803      	ldr	r3, [r0, #0]
 8018ebc:	691b      	ldr	r3, [r3, #16]
 8018ebe:	4798      	blx	r3
 8018ec0:	6828      	ldr	r0, [r5, #0]
 8018ec2:	6803      	ldr	r3, [r0, #0]
 8018ec4:	68db      	ldr	r3, [r3, #12]
 8018ec6:	4798      	blx	r3
 8018ec8:	2301      	movs	r3, #1
 8018eca:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8018ece:	3404      	adds	r4, #4
 8018ed0:	4620      	mov	r0, r4
 8018ed2:	f7ff ff45 	bl	8018d60 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8018ed6:	4620      	mov	r0, r4
 8018ed8:	f7ff ffa0 	bl	8018e1c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8018edc:	6830      	ldr	r0, [r6, #0]
 8018ede:	b110      	cbz	r0, 8018ee6 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8018ee0:	6803      	ldr	r3, [r0, #0]
 8018ee2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8018ee4:	e7dd      	b.n	8018ea2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8018ee6:	bd70      	pop	{r4, r5, r6, pc}
 8018ee8:	20002370 	.word	0x20002370
 8018eec:	2000236c 	.word	0x2000236c

08018ef0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8018ef0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018ef2:	2300      	movs	r3, #0
 8018ef4:	4604      	mov	r4, r0
 8018ef6:	460d      	mov	r5, r1
 8018ef8:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8018efc:	4618      	mov	r0, r3
 8018efe:	b29a      	uxth	r2, r3
 8018f00:	4291      	cmp	r1, r2
 8018f02:	d911      	bls.n	8018f28 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8018f04:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8018f08:	18e6      	adds	r6, r4, r3
 8018f0a:	42af      	cmp	r7, r5
 8018f0c:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8018f10:	d105      	bne.n	8018f1e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8018f12:	2aff      	cmp	r2, #255	; 0xff
 8018f14:	d002      	beq.n	8018f1c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8018f16:	3201      	adds	r2, #1
 8018f18:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8018f1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018f1e:	2a00      	cmp	r2, #0
 8018f20:	bf08      	it	eq
 8018f22:	2001      	moveq	r0, #1
 8018f24:	3301      	adds	r3, #1
 8018f26:	e7ea      	b.n	8018efe <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8018f28:	b120      	cbz	r0, 8018f34 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8018f2a:	2920      	cmp	r1, #32
 8018f2c:	d102      	bne.n	8018f34 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8018f2e:	4620      	mov	r0, r4
 8018f30:	f7ff ff74 	bl	8018e1c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8018f34:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8018f38:	2b1f      	cmp	r3, #31
 8018f3a:	d8ef      	bhi.n	8018f1c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8018f3c:	18e2      	adds	r2, r4, r3
 8018f3e:	2101      	movs	r1, #1
 8018f40:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8018f44:	185a      	adds	r2, r3, r1
 8018f46:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8018f4a:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8018f4e:	e7e5      	b.n	8018f1c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08018f50 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8018f50:	4603      	mov	r3, r0
 8018f52:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8018f56:	2200      	movs	r2, #0
 8018f58:	801a      	strh	r2, [r3, #0]
 8018f5a:	805a      	strh	r2, [r3, #2]
 8018f5c:	809a      	strh	r2, [r3, #4]
 8018f5e:	80da      	strh	r2, [r3, #6]
 8018f60:	3308      	adds	r3, #8
 8018f62:	428b      	cmp	r3, r1
 8018f64:	d1f8      	bne.n	8018f58 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8018f66:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8018f6a:	4770      	bx	lr

08018f6c <_ZN8touchgfx11ApplicationC1Ev>:
 8018f6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018f6e:	4606      	mov	r6, r0
 8018f70:	4b1c      	ldr	r3, [pc, #112]	; (8018fe4 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8018f72:	f846 3b04 	str.w	r3, [r6], #4
 8018f76:	4604      	mov	r4, r0
 8018f78:	2500      	movs	r5, #0
 8018f7a:	22a8      	movs	r2, #168	; 0xa8
 8018f7c:	2100      	movs	r1, #0
 8018f7e:	4630      	mov	r0, r6
 8018f80:	f012 fb3b 	bl	802b5fa <memset>
 8018f84:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8018f88:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8018f8c:	f7ff ffe0 	bl	8018f50 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8018f90:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8018f94:	f7ff ffdc 	bl	8018f50 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8018f98:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8018f9c:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8018fa0:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8018fa4:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8018fa8:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8018fac:	490e      	ldr	r1, [pc, #56]	; (8018fe8 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8018fae:	480f      	ldr	r0, [pc, #60]	; (8018fec <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8018fb0:	4f0f      	ldr	r7, [pc, #60]	; (8018ff0 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8018fb2:	f010 fcf9 	bl	80299a8 <CRC_Lock>
 8018fb6:	4b0f      	ldr	r3, [pc, #60]	; (8018ff4 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8018fb8:	b158      	cbz	r0, 8018fd2 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8018fba:	801d      	strh	r5, [r3, #0]
 8018fbc:	4a0e      	ldr	r2, [pc, #56]	; (8018ff8 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8018fbe:	2300      	movs	r3, #0
 8018fc0:	6013      	str	r3, [r2, #0]
 8018fc2:	4a0e      	ldr	r2, [pc, #56]	; (8018ffc <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8018fc4:	603b      	str	r3, [r7, #0]
 8018fc6:	4630      	mov	r0, r6
 8018fc8:	6013      	str	r3, [r2, #0]
 8018fca:	f7ff ff01 	bl	8018dd0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8018fce:	4620      	mov	r0, r4
 8018fd0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018fd2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8018fd6:	2002      	movs	r0, #2
 8018fd8:	801a      	strh	r2, [r3, #0]
 8018fda:	6038      	str	r0, [r7, #0]
 8018fdc:	f001 fb00 	bl	801a5e0 <_ZN8touchgfx6Screen4drawEv>
 8018fe0:	e7ec      	b.n	8018fbc <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8018fe2:	bf00      	nop
 8018fe4:	0802f804 	.word	0x0802f804
 8018fe8:	b5e8b5cd 	.word	0xb5e8b5cd
 8018fec:	f407a5c2 	.word	0xf407a5c2
 8018ff0:	2000236c 	.word	0x2000236c
 8018ff4:	2000001c 	.word	0x2000001c
 8018ff8:	2000237c 	.word	0x2000237c
 8018ffc:	20002370 	.word	0x20002370

08019000 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8019000:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8019004:	3b01      	subs	r3, #1
 8019006:	b29b      	uxth	r3, r3
 8019008:	428b      	cmp	r3, r1
 801900a:	b510      	push	{r4, lr}
 801900c:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8019010:	d908      	bls.n	8019024 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8019012:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8019016:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801901a:	681a      	ldr	r2, [r3, #0]
 801901c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8019020:	685a      	ldr	r2, [r3, #4]
 8019022:	6062      	str	r2, [r4, #4]
 8019024:	bd10      	pop	{r4, pc}
	...

08019028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8019028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801902c:	4b8f      	ldr	r3, [pc, #572]	; (801926c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 801902e:	b08f      	sub	sp, #60	; 0x3c
 8019030:	ac0a      	add	r4, sp, #40	; 0x28
 8019032:	e884 0006 	stmia.w	r4, {r1, r2}
 8019036:	f9b3 2000 	ldrsh.w	r2, [r3]
 801903a:	4b8d      	ldr	r3, [pc, #564]	; (8019270 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 801903c:	4683      	mov	fp, r0
 801903e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8019042:	4620      	mov	r0, r4
 8019044:	f7ff fdca 	bl	8018bdc <_ZN8touchgfx4Rect10restrictToEss>
 8019048:	4620      	mov	r0, r4
 801904a:	f7f9 fecc 	bl	8012de6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801904e:	2800      	cmp	r0, #0
 8019050:	d16a      	bne.n	8019128 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8019052:	9403      	str	r4, [sp, #12]
 8019054:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8019058:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 801905c:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8019060:	35a4      	adds	r5, #164	; 0xa4
 8019062:	9301      	str	r3, [sp, #4]
 8019064:	b15c      	cbz	r4, 801907e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8019066:	4629      	mov	r1, r5
 8019068:	9803      	ldr	r0, [sp, #12]
 801906a:	f7ff fe07 	bl	8018c7c <_ZNK8touchgfx4Rect8includesERKS0_>
 801906e:	3c01      	subs	r4, #1
 8019070:	b118      	cbz	r0, 801907a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8019072:	b2a1      	uxth	r1, r4
 8019074:	9801      	ldr	r0, [sp, #4]
 8019076:	f7ff ffc3 	bl	8019000 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801907a:	3d08      	subs	r5, #8
 801907c:	e7f2      	b.n	8019064 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801907e:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8019082:	f8cd a010 	str.w	sl, [sp, #16]
 8019086:	f10a 33ff 	add.w	r3, sl, #4294967295
 801908a:	9302      	str	r3, [sp, #8]
 801908c:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8019090:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8019094:	9306      	str	r3, [sp, #24]
 8019096:	445c      	add	r4, fp
 8019098:	2500      	movs	r5, #0
 801909a:	4626      	mov	r6, r4
 801909c:	f8cd a014 	str.w	sl, [sp, #20]
 80190a0:	462f      	mov	r7, r5
 80190a2:	9b05      	ldr	r3, [sp, #20]
 80190a4:	2b00      	cmp	r3, #0
 80190a6:	d073      	beq.n	8019190 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80190a8:	9903      	ldr	r1, [sp, #12]
 80190aa:	4630      	mov	r0, r6
 80190ac:	f7ff fd74 	bl	8018b98 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80190b0:	b350      	cbz	r0, 8019108 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80190b2:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 80190b6:	f9b6 c000 	ldrsh.w	ip, [r6]
 80190ba:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 80190be:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80190c2:	45e6      	cmp	lr, ip
 80190c4:	db33      	blt.n	801912e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80190c6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80190ca:	88b3      	ldrh	r3, [r6, #4]
 80190cc:	4472      	add	r2, lr
 80190ce:	4463      	add	r3, ip
 80190d0:	b212      	sxth	r2, r2
 80190d2:	b21b      	sxth	r3, r3
 80190d4:	429a      	cmp	r2, r3
 80190d6:	dc2a      	bgt.n	801912e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80190d8:	88f3      	ldrh	r3, [r6, #6]
 80190da:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80190de:	fa1f f289 	uxth.w	r2, r9
 80190e2:	4413      	add	r3, r2
 80190e4:	b29b      	uxth	r3, r3
 80190e6:	45c8      	cmp	r8, r9
 80190e8:	fa1f fc88 	uxth.w	ip, r8
 80190ec:	fa0f fe83 	sxth.w	lr, r3
 80190f0:	db0f      	blt.n	8019112 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80190f2:	eba3 030c 	sub.w	r3, r3, ip
 80190f6:	1ac9      	subs	r1, r1, r3
 80190f8:	b209      	sxth	r1, r1
 80190fa:	2900      	cmp	r1, #0
 80190fc:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8019100:	dd12      	ble.n	8019128 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8019102:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8019106:	4605      	mov	r5, r0
 8019108:	9b05      	ldr	r3, [sp, #20]
 801910a:	3b01      	subs	r3, #1
 801910c:	9305      	str	r3, [sp, #20]
 801910e:	3e08      	subs	r6, #8
 8019110:	e7c7      	b.n	80190a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8019112:	4461      	add	r1, ip
 8019114:	b209      	sxth	r1, r1
 8019116:	4571      	cmp	r1, lr
 8019118:	dc38      	bgt.n	801918c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801911a:	eba2 020c 	sub.w	r2, r2, ip
 801911e:	b212      	sxth	r2, r2
 8019120:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8019124:	2a00      	cmp	r2, #0
 8019126:	dcee      	bgt.n	8019106 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8019128:	b00f      	add	sp, #60	; 0x3c
 801912a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801912e:	45c8      	cmp	r8, r9
 8019130:	db2c      	blt.n	801918c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8019132:	88f3      	ldrh	r3, [r6, #6]
 8019134:	4499      	add	r9, r3
 8019136:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 801913a:	4498      	add	r8, r3
 801913c:	fa0f f989 	sxth.w	r9, r9
 8019140:	fa0f f888 	sxth.w	r8, r8
 8019144:	45c1      	cmp	r9, r8
 8019146:	db21      	blt.n	801918c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8019148:	88b3      	ldrh	r3, [r6, #4]
 801914a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801914e:	fa1f f28c 	uxth.w	r2, ip
 8019152:	4413      	add	r3, r2
 8019154:	b29b      	uxth	r3, r3
 8019156:	45e6      	cmp	lr, ip
 8019158:	fa1f f88e 	uxth.w	r8, lr
 801915c:	fa0f f983 	sxth.w	r9, r3
 8019160:	db0a      	blt.n	8019178 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8019162:	eba3 0308 	sub.w	r3, r3, r8
 8019166:	1ac9      	subs	r1, r1, r3
 8019168:	b209      	sxth	r1, r1
 801916a:	2900      	cmp	r1, #0
 801916c:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8019170:	ddda      	ble.n	8019128 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8019172:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8019176:	e7c6      	b.n	8019106 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8019178:	4441      	add	r1, r8
 801917a:	b209      	sxth	r1, r1
 801917c:	4549      	cmp	r1, r9
 801917e:	dc05      	bgt.n	801918c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8019180:	eba2 0208 	sub.w	r2, r2, r8
 8019184:	b212      	sxth	r2, r2
 8019186:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801918a:	e7cb      	b.n	8019124 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 801918c:	4607      	mov	r7, r0
 801918e:	e7bb      	b.n	8019108 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8019190:	2d00      	cmp	r5, #0
 8019192:	d181      	bne.n	8019098 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8019194:	2f00      	cmp	r7, #0
 8019196:	f000 81dd 	beq.w	8019554 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801919a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801919e:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80191a2:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 80191a6:	b2b3      	uxth	r3, r6
 80191a8:	9305      	str	r3, [sp, #20]
 80191aa:	9a05      	ldr	r2, [sp, #20]
 80191ac:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80191b0:	4413      	add	r3, r2
 80191b2:	b2ba      	uxth	r2, r7
 80191b4:	4492      	add	sl, r2
 80191b6:	b29b      	uxth	r3, r3
 80191b8:	fa1f fa8a 	uxth.w	sl, sl
 80191bc:	fa0f f883 	sxth.w	r8, r3
 80191c0:	fa0f f98a 	sxth.w	r9, sl
 80191c4:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80191c8:	9b04      	ldr	r3, [sp, #16]
 80191ca:	2b00      	cmp	r3, #0
 80191cc:	d052      	beq.n	8019274 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 80191ce:	9903      	ldr	r1, [sp, #12]
 80191d0:	4620      	mov	r0, r4
 80191d2:	f7ff fce1 	bl	8018b98 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80191d6:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80191da:	b1c0      	cbz	r0, 801920e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80191dc:	f9b4 e000 	ldrsh.w	lr, [r4]
 80191e0:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80191e4:	4576      	cmp	r6, lr
 80191e6:	dc22      	bgt.n	801922e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80191e8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80191ec:	44f4      	add	ip, lr
 80191ee:	fa0f fc8c 	sxth.w	ip, ip
 80191f2:	45e0      	cmp	r8, ip
 80191f4:	db1b      	blt.n	801922e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80191f6:	428f      	cmp	r7, r1
 80191f8:	fa1f fc81 	uxth.w	ip, r1
 80191fc:	88e1      	ldrh	r1, [r4, #6]
 80191fe:	dc0d      	bgt.n	801921c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8019200:	ebaa 0c0c 	sub.w	ip, sl, ip
 8019204:	eba1 010c 	sub.w	r1, r1, ip
 8019208:	f8a4 9002 	strh.w	r9, [r4, #2]
 801920c:	80e1      	strh	r1, [r4, #6]
 801920e:	4628      	mov	r0, r5
 8019210:	9904      	ldr	r1, [sp, #16]
 8019212:	3901      	subs	r1, #1
 8019214:	9104      	str	r1, [sp, #16]
 8019216:	3c08      	subs	r4, #8
 8019218:	4605      	mov	r5, r0
 801921a:	e7d3      	b.n	80191c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 801921c:	4461      	add	r1, ip
 801921e:	b209      	sxth	r1, r1
 8019220:	4549      	cmp	r1, r9
 8019222:	dcf5      	bgt.n	8019210 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8019224:	eba2 0c0c 	sub.w	ip, r2, ip
 8019228:	f8a4 c006 	strh.w	ip, [r4, #6]
 801922c:	e7ef      	b.n	801920e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801922e:	428f      	cmp	r7, r1
 8019230:	dcee      	bgt.n	8019210 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8019232:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8019236:	4461      	add	r1, ip
 8019238:	b209      	sxth	r1, r1
 801923a:	4589      	cmp	r9, r1
 801923c:	dbe8      	blt.n	8019210 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801923e:	4576      	cmp	r6, lr
 8019240:	fa1f fc8e 	uxth.w	ip, lr
 8019244:	88a1      	ldrh	r1, [r4, #4]
 8019246:	dc07      	bgt.n	8019258 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8019248:	eba3 0c0c 	sub.w	ip, r3, ip
 801924c:	eba1 010c 	sub.w	r1, r1, ip
 8019250:	f8a4 8000 	strh.w	r8, [r4]
 8019254:	80a1      	strh	r1, [r4, #4]
 8019256:	e7da      	b.n	801920e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8019258:	4461      	add	r1, ip
 801925a:	b209      	sxth	r1, r1
 801925c:	4588      	cmp	r8, r1
 801925e:	dbd7      	blt.n	8019210 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8019260:	9905      	ldr	r1, [sp, #20]
 8019262:	eba1 0c0c 	sub.w	ip, r1, ip
 8019266:	f8a4 c004 	strh.w	ip, [r4, #4]
 801926a:	e7d0      	b.n	801920e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801926c:	2000231e 	.word	0x2000231e
 8019270:	2000231c 	.word	0x2000231c
 8019274:	2d00      	cmp	r5, #0
 8019276:	f000 816d 	beq.w	8019554 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801927a:	9b06      	ldr	r3, [sp, #24]
 801927c:	445b      	add	r3, fp
 801927e:	461c      	mov	r4, r3
 8019280:	9b02      	ldr	r3, [sp, #8]
 8019282:	3301      	adds	r3, #1
 8019284:	f000 8166 	beq.w	8019554 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8019288:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 801928c:	4629      	mov	r1, r5
 801928e:	9803      	ldr	r0, [sp, #12]
 8019290:	f7ff fcf4 	bl	8018c7c <_ZNK8touchgfx4Rect8includesERKS0_>
 8019294:	b120      	cbz	r0, 80192a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8019296:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801929a:	9801      	ldr	r0, [sp, #4]
 801929c:	f7ff feb0 	bl	8019000 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80192a0:	9903      	ldr	r1, [sp, #12]
 80192a2:	4628      	mov	r0, r5
 80192a4:	f7ff fc78 	bl	8018b98 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80192a8:	2800      	cmp	r0, #0
 80192aa:	f000 809c 	beq.w	80193e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80192ae:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 80192b2:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80192b6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80192ba:	9309      	str	r3, [sp, #36]	; 0x24
 80192bc:	fa1f f189 	uxth.w	r1, r9
 80192c0:	eb01 0c03 	add.w	ip, r1, r3
 80192c4:	fa1f fa8c 	uxth.w	sl, ip
 80192c8:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80192cc:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80192d0:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 80192d4:	b283      	uxth	r3, r0
 80192d6:	eb03 050c 	add.w	r5, r3, ip
 80192da:	b2ad      	uxth	r5, r5
 80192dc:	9505      	str	r5, [sp, #20]
 80192de:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 80192e2:	9504      	str	r5, [sp, #16]
 80192e4:	4548      	cmp	r0, r9
 80192e6:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 80192ea:	f340 8099 	ble.w	8019420 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 80192ee:	1a5b      	subs	r3, r3, r1
 80192f0:	b29b      	uxth	r3, r3
 80192f2:	4596      	cmp	lr, r2
 80192f4:	fa0f f08a 	sxth.w	r0, sl
 80192f8:	b21e      	sxth	r6, r3
 80192fa:	dd2e      	ble.n	801935a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 80192fc:	9f02      	ldr	r7, [sp, #8]
 80192fe:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8019302:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8019306:	9f04      	ldr	r7, [sp, #16]
 8019308:	1a3f      	subs	r7, r7, r0
 801930a:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801930e:	fa1f fe8e 	uxth.w	lr, lr
 8019312:	b292      	uxth	r2, r2
 8019314:	ebae 0102 	sub.w	r1, lr, r2
 8019318:	44a6      	add	lr, r4
 801931a:	4402      	add	r2, r0
 801931c:	b289      	uxth	r1, r1
 801931e:	fa0f fe8e 	sxth.w	lr, lr
 8019322:	b212      	sxth	r2, r2
 8019324:	b20d      	sxth	r5, r1
 8019326:	ebae 0202 	sub.w	r2, lr, r2
 801932a:	436f      	muls	r7, r5
 801932c:	4372      	muls	r2, r6
 801932e:	4297      	cmp	r7, r2
 8019330:	db09      	blt.n	8019346 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8019332:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8019336:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 801933a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801933e:	449c      	add	ip, r3
 8019340:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8019344:	e686      	b.n	8019054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019346:	4421      	add	r1, r4
 8019348:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 801934c:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8019350:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8019354:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8019358:	e67c      	b.n	8019054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801935a:	9f04      	ldr	r7, [sp, #16]
 801935c:	42b8      	cmp	r0, r7
 801935e:	da27      	bge.n	80193b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8019360:	9902      	ldr	r1, [sp, #8]
 8019362:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8019366:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 801936a:	eb05 010e 	add.w	r1, r5, lr
 801936e:	fa1f f881 	uxth.w	r8, r1
 8019372:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8019376:	4411      	add	r1, r2
 8019378:	eba1 0108 	sub.w	r1, r1, r8
 801937c:	b289      	uxth	r1, r1
 801937e:	fa0f f988 	sxth.w	r9, r8
 8019382:	eba2 020e 	sub.w	r2, r2, lr
 8019386:	fa0f f881 	sxth.w	r8, r1
 801938a:	1a3f      	subs	r7, r7, r0
 801938c:	4372      	muls	r2, r6
 801938e:	fb08 f707 	mul.w	r7, r8, r7
 8019392:	42ba      	cmp	r2, r7
 8019394:	dc06      	bgt.n	80193a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8019396:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 801939a:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801939e:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 80193a2:	e7ca      	b.n	801933a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80193a4:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 80193a8:	4429      	add	r1, r5
 80193aa:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80193ae:	e651      	b.n	8019054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80193b0:	9805      	ldr	r0, [sp, #20]
 80193b2:	ebaa 0000 	sub.w	r0, sl, r0
 80193b6:	b280      	uxth	r0, r0
 80193b8:	2d06      	cmp	r5, #6
 80193ba:	fa0f fe80 	sxth.w	lr, r0
 80193be:	d817      	bhi.n	80193f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80193c0:	9b04      	ldr	r3, [sp, #16]
 80193c2:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80193c6:	1c6b      	adds	r3, r5, #1
 80193c8:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 80193cc:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 80193d0:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80193d4:	9b01      	ldr	r3, [sp, #4]
 80193d6:	9801      	ldr	r0, [sp, #4]
 80193d8:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80193dc:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80193e0:	805a      	strh	r2, [r3, #2]
 80193e2:	809e      	strh	r6, [r3, #4]
 80193e4:	80d9      	strh	r1, [r3, #6]
 80193e6:	9b02      	ldr	r3, [sp, #8]
 80193e8:	3b01      	subs	r3, #1
 80193ea:	9302      	str	r3, [sp, #8]
 80193ec:	3c08      	subs	r4, #8
 80193ee:	e747      	b.n	8019280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 80193f0:	9a02      	ldr	r2, [sp, #8]
 80193f2:	45b6      	cmp	lr, r6
 80193f4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80193f8:	db0d      	blt.n	8019416 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 80193fa:	449c      	add	ip, r3
 80193fc:	fa1f fc8c 	uxth.w	ip, ip
 8019400:	445a      	add	r2, fp
 8019402:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8019406:	448c      	add	ip, r1
 8019408:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 801940c:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8019410:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8019414:	e61e      	b.n	8019054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019416:	445a      	add	r2, fp
 8019418:	4484      	add	ip, r0
 801941a:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801941e:	e78f      	b.n	8019340 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8019420:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8019424:	fa1f f18e 	uxth.w	r1, lr
 8019428:	eb01 0806 	add.w	r8, r1, r6
 801942c:	b293      	uxth	r3, r2
 801942e:	fa1f f888 	uxth.w	r8, r8
 8019432:	9306      	str	r3, [sp, #24]
 8019434:	fa0f f388 	sxth.w	r3, r8
 8019438:	9307      	str	r3, [sp, #28]
 801943a:	9f06      	ldr	r7, [sp, #24]
 801943c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8019440:	443b      	add	r3, r7
 8019442:	b29b      	uxth	r3, r3
 8019444:	4596      	cmp	lr, r2
 8019446:	9308      	str	r3, [sp, #32]
 8019448:	da24      	bge.n	8019494 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 801944a:	9905      	ldr	r1, [sp, #20]
 801944c:	eba3 0308 	sub.w	r3, r3, r8
 8019450:	ebaa 0401 	sub.w	r4, sl, r1
 8019454:	b2a4      	uxth	r4, r4
 8019456:	b29b      	uxth	r3, r3
 8019458:	b225      	sxth	r5, r4
 801945a:	b219      	sxth	r1, r3
 801945c:	eba2 020e 	sub.w	r2, r2, lr
 8019460:	eba9 0000 	sub.w	r0, r9, r0
 8019464:	436a      	muls	r2, r5
 8019466:	4348      	muls	r0, r1
 8019468:	4282      	cmp	r2, r0
 801946a:	9a02      	ldr	r2, [sp, #8]
 801946c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8019470:	445a      	add	r2, fp
 8019472:	dc06      	bgt.n	8019482 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8019474:	9b07      	ldr	r3, [sp, #28]
 8019476:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 801947a:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801947e:	44a4      	add	ip, r4
 8019480:	e75e      	b.n	8019340 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8019482:	9904      	ldr	r1, [sp, #16]
 8019484:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8019488:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 801948c:	4433      	add	r3, r6
 801948e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8019492:	e5df      	b.n	8019054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019494:	9f06      	ldr	r7, [sp, #24]
 8019496:	9b04      	ldr	r3, [sp, #16]
 8019498:	1bc9      	subs	r1, r1, r7
 801949a:	fa0f f78a 	sxth.w	r7, sl
 801949e:	b289      	uxth	r1, r1
 80194a0:	429f      	cmp	r7, r3
 80194a2:	fa0f fe81 	sxth.w	lr, r1
 80194a6:	dd23      	ble.n	80194f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80194a8:	9a05      	ldr	r2, [sp, #20]
 80194aa:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80194ae:	9d07      	ldr	r5, [sp, #28]
 80194b0:	ebaa 0202 	sub.w	r2, sl, r2
 80194b4:	b292      	uxth	r2, r2
 80194b6:	eba5 0a03 	sub.w	sl, r5, r3
 80194ba:	b214      	sxth	r4, r2
 80194bc:	eba9 0000 	sub.w	r0, r9, r0
 80194c0:	9b02      	ldr	r3, [sp, #8]
 80194c2:	fb0e f000 	mul.w	r0, lr, r0
 80194c6:	fb04 fa0a 	mul.w	sl, r4, sl
 80194ca:	00db      	lsls	r3, r3, #3
 80194cc:	4550      	cmp	r0, sl
 80194ce:	445b      	add	r3, fp
 80194d0:	db03      	blt.n	80194da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 80194d2:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 80194d6:	4494      	add	ip, r2
 80194d8:	e732      	b.n	8019340 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80194da:	9a04      	ldr	r2, [sp, #16]
 80194dc:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 80194e0:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 80194e4:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 80194e8:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80194ec:	4431      	add	r1, r6
 80194ee:	e75c      	b.n	80193aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 80194f0:	9b08      	ldr	r3, [sp, #32]
 80194f2:	eba3 0308 	sub.w	r3, r3, r8
 80194f6:	b29b      	uxth	r3, r3
 80194f8:	2d06      	cmp	r5, #6
 80194fa:	b218      	sxth	r0, r3
 80194fc:	d813      	bhi.n	8019526 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 80194fe:	9b07      	ldr	r3, [sp, #28]
 8019500:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8019504:	1c6b      	adds	r3, r5, #1
 8019506:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 801950a:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801950e:	9b01      	ldr	r3, [sp, #4]
 8019510:	9901      	ldr	r1, [sp, #4]
 8019512:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8019516:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 801951a:	805a      	strh	r2, [r3, #2]
 801951c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801951e:	809a      	strh	r2, [r3, #4]
 8019520:	f8a3 e006 	strh.w	lr, [r3, #6]
 8019524:	e75f      	b.n	80193e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8019526:	9c02      	ldr	r4, [sp, #8]
 8019528:	4570      	cmp	r0, lr
 801952a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801952e:	db0d      	blt.n	801954c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8019530:	4431      	add	r1, r6
 8019532:	9b06      	ldr	r3, [sp, #24]
 8019534:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8019538:	b289      	uxth	r1, r1
 801953a:	445c      	add	r4, fp
 801953c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8019540:	4419      	add	r1, r3
 8019542:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8019546:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 801954a:	e583      	b.n	8019054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801954c:	445c      	add	r4, fp
 801954e:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8019552:	e79b      	b.n	801948c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8019554:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8019558:	1e65      	subs	r5, r4, #1
 801955a:	b2ad      	uxth	r5, r5
 801955c:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8019560:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8019564:	42b5      	cmp	r5, r6
 8019566:	d044      	beq.n	80195f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8019568:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801956c:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8019570:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8019574:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8019578:	4282      	cmp	r2, r0
 801957a:	d11f      	bne.n	80195bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 801957c:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8019580:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8019584:	459c      	cmp	ip, r3
 8019586:	d119      	bne.n	80195bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8019588:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 801958c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8019590:	19d8      	adds	r0, r3, r7
 8019592:	b200      	sxth	r0, r0
 8019594:	4288      	cmp	r0, r1
 8019596:	d109      	bne.n	80195ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8019598:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 801959c:	4413      	add	r3, r2
 801959e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80195a2:	4629      	mov	r1, r5
 80195a4:	9801      	ldr	r0, [sp, #4]
 80195a6:	f7ff fd2b 	bl	8019000 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80195aa:	e003      	b.n	80195b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80195ac:	4411      	add	r1, r2
 80195ae:	b209      	sxth	r1, r1
 80195b0:	42b9      	cmp	r1, r7
 80195b2:	d0f3      	beq.n	801959c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 80195b4:	3d01      	subs	r5, #1
 80195b6:	b2ad      	uxth	r5, r5
 80195b8:	3c08      	subs	r4, #8
 80195ba:	e7d3      	b.n	8019564 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80195bc:	42b9      	cmp	r1, r7
 80195be:	d1f9      	bne.n	80195b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80195c0:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 80195c4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80195c8:	4299      	cmp	r1, r3
 80195ca:	d1f3      	bne.n	80195b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80195cc:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80195d0:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80195d4:	181f      	adds	r7, r3, r0
 80195d6:	b23f      	sxth	r7, r7
 80195d8:	42ba      	cmp	r2, r7
 80195da:	d105      	bne.n	80195e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 80195dc:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 80195e0:	440b      	add	r3, r1
 80195e2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80195e6:	e7dc      	b.n	80195a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 80195e8:	440a      	add	r2, r1
 80195ea:	b212      	sxth	r2, r2
 80195ec:	4290      	cmp	r0, r2
 80195ee:	d1e1      	bne.n	80195b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80195f0:	e7f6      	b.n	80195e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 80195f2:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 80195f6:	2e07      	cmp	r6, #7
 80195f8:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80195fc:	d812      	bhi.n	8019624 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 80195fe:	1c75      	adds	r5, r6, #1
 8019600:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8019604:	9d01      	ldr	r5, [sp, #4]
 8019606:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801960a:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801960e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8019612:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8019616:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 801961a:	442c      	add	r4, r5
 801961c:	8061      	strh	r1, [r4, #2]
 801961e:	80a2      	strh	r2, [r4, #4]
 8019620:	80e3      	strh	r3, [r4, #6]
 8019622:	e581      	b.n	8019128 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8019624:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8019628:	3e01      	subs	r6, #1
 801962a:	445c      	add	r4, fp
 801962c:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8019630:	f04f 37ff 	mov.w	r7, #4294967295
 8019634:	2500      	movs	r5, #0
 8019636:	9305      	str	r3, [sp, #20]
 8019638:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 801963c:	9302      	str	r3, [sp, #8]
 801963e:	1e72      	subs	r2, r6, #1
 8019640:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8019644:	9304      	str	r3, [sp, #16]
 8019646:	4691      	mov	r9, r2
 8019648:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 801964c:	f1b9 3fff 	cmp.w	r9, #4294967295
 8019650:	bf14      	ite	ne
 8019652:	9905      	ldrne	r1, [sp, #20]
 8019654:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8019658:	6818      	ldr	r0, [r3, #0]
 801965a:	9207      	str	r2, [sp, #28]
 801965c:	bf18      	it	ne
 801965e:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8019662:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8019666:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801966a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801966e:	9306      	str	r3, [sp, #24]
 8019670:	fb18 f801 	smulbb	r8, r8, r1
 8019674:	6859      	ldr	r1, [r3, #4]
 8019676:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801967a:	4671      	mov	r1, lr
 801967c:	a80c      	add	r0, sp, #48	; 0x30
 801967e:	f7ff fb23 	bl	8018cc8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8019682:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8019686:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801968a:	9b04      	ldr	r3, [sp, #16]
 801968c:	9a02      	ldr	r2, [sp, #8]
 801968e:	fb10 f001 	smulbb	r0, r0, r1
 8019692:	fb02 8803 	mla	r8, r2, r3, r8
 8019696:	eba0 0108 	sub.w	r1, r0, r8
 801969a:	f04f 0c08 	mov.w	ip, #8
 801969e:	fb90 f0fc 	sdiv	r0, r0, ip
 80196a2:	4288      	cmp	r0, r1
 80196a4:	dc20      	bgt.n	80196e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80196a6:	4551      	cmp	r1, sl
 80196a8:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80196ac:	da03      	bge.n	80196b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 80196ae:	b1d9      	cbz	r1, 80196e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80196b0:	468a      	mov	sl, r1
 80196b2:	464f      	mov	r7, r9
 80196b4:	4635      	mov	r5, r6
 80196b6:	f109 39ff 	add.w	r9, r9, #4294967295
 80196ba:	f119 0f02 	cmn.w	r9, #2
 80196be:	d1c5      	bne.n	801964c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80196c0:	4616      	mov	r6, r2
 80196c2:	3201      	adds	r2, #1
 80196c4:	f1a4 0408 	sub.w	r4, r4, #8
 80196c8:	d1b6      	bne.n	8019638 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 80196ca:	9b01      	ldr	r3, [sp, #4]
 80196cc:	b2ac      	uxth	r4, r5
 80196ce:	00ed      	lsls	r5, r5, #3
 80196d0:	1958      	adds	r0, r3, r5
 80196d2:	1c7b      	adds	r3, r7, #1
 80196d4:	d10b      	bne.n	80196ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 80196d6:	4601      	mov	r1, r0
 80196d8:	9803      	ldr	r0, [sp, #12]
 80196da:	f7ff faf5 	bl	8018cc8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80196de:	4621      	mov	r1, r4
 80196e0:	9801      	ldr	r0, [sp, #4]
 80196e2:	f7ff fc8d 	bl	8019000 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80196e6:	e4b5      	b.n	8019054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80196e8:	464f      	mov	r7, r9
 80196ea:	4635      	mov	r5, r6
 80196ec:	e7ed      	b.n	80196ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 80196ee:	9b01      	ldr	r3, [sp, #4]
 80196f0:	00ff      	lsls	r7, r7, #3
 80196f2:	19d9      	adds	r1, r3, r7
 80196f4:	f7ff fae8 	bl	8018cc8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80196f8:	9b03      	ldr	r3, [sp, #12]
 80196fa:	cb03      	ldmia	r3!, {r0, r1}
 80196fc:	445f      	add	r7, fp
 80196fe:	445d      	add	r5, fp
 8019700:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8019704:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8019708:	f855 0fac 	ldr.w	r0, [r5, #172]!
 801970c:	9b03      	ldr	r3, [sp, #12]
 801970e:	6869      	ldr	r1, [r5, #4]
 8019710:	c303      	stmia	r3!, {r0, r1}
 8019712:	e7e4      	b.n	80196de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08019714 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8019714:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019718:	f500 7698 	add.w	r6, r0, #304	; 0x130
 801971c:	b09b      	sub	sp, #108	; 0x6c
 801971e:	4604      	mov	r4, r0
 8019720:	4630      	mov	r0, r6
 8019722:	f7f9 fb60 	bl	8012de6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019726:	4605      	mov	r5, r0
 8019728:	b948      	cbnz	r0, 801973e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 801972a:	6823      	ldr	r3, [r4, #0]
 801972c:	e896 0006 	ldmia.w	r6, {r1, r2}
 8019730:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019732:	4620      	mov	r0, r4
 8019734:	4798      	blx	r3
 8019736:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 801973a:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801973e:	4bc6      	ldr	r3, [pc, #792]	; (8019a58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8019740:	681b      	ldr	r3, [r3, #0]
 8019742:	2b00      	cmp	r3, #0
 8019744:	d03f      	beq.n	80197c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8019746:	4dc5      	ldr	r5, [pc, #788]	; (8019a5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8019748:	4628      	mov	r0, r5
 801974a:	f7f9 fb4c 	bl	8012de6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801974e:	4606      	mov	r6, r0
 8019750:	2800      	cmp	r0, #0
 8019752:	d138      	bne.n	80197c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8019754:	4628      	mov	r0, r5
 8019756:	f7ff f939 	bl	80189cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801975a:	6823      	ldr	r3, [r4, #0]
 801975c:	6829      	ldr	r1, [r5, #0]
 801975e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019760:	686a      	ldr	r2, [r5, #4]
 8019762:	4620      	mov	r0, r4
 8019764:	4798      	blx	r3
 8019766:	802e      	strh	r6, [r5, #0]
 8019768:	806e      	strh	r6, [r5, #2]
 801976a:	80ae      	strh	r6, [r5, #4]
 801976c:	80ee      	strh	r6, [r5, #6]
 801976e:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8019772:	4dbb      	ldr	r5, [pc, #748]	; (8019a60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8019774:	4640      	mov	r0, r8
 8019776:	f7ff fbeb 	bl	8018f50 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801977a:	882e      	ldrh	r6, [r5, #0]
 801977c:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8019780:	4633      	mov	r3, r6
 8019782:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8019786:	42bb      	cmp	r3, r7
 8019788:	d224      	bcs.n	80197d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801978a:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801978e:	2907      	cmp	r1, #7
 8019790:	d816      	bhi.n	80197c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8019792:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8019796:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 801979a:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801979e:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80197a2:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80197a6:	1c4a      	adds	r2, r1, #1
 80197a8:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80197ac:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80197b0:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80197b4:	f8a2 a002 	strh.w	sl, [r2, #2]
 80197b8:	f8a2 e004 	strh.w	lr, [r2, #4]
 80197bc:	f8a2 c006 	strh.w	ip, [r2, #6]
 80197c0:	3301      	adds	r3, #1
 80197c2:	b29b      	uxth	r3, r3
 80197c4:	e7df      	b.n	8019786 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80197c6:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80197ca:	2b00      	cmp	r3, #0
 80197cc:	d1cf      	bne.n	801976e <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80197ce:	b01b      	add	sp, #108	; 0x6c
 80197d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80197d4:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 80197d8:	42b3      	cmp	r3, r6
 80197da:	d90c      	bls.n	80197f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 80197dc:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80197e0:	6822      	ldr	r2, [r4, #0]
 80197e2:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 80197e6:	6c17      	ldr	r7, [r2, #64]	; 0x40
 80197e8:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 80197ec:	4620      	mov	r0, r4
 80197ee:	3601      	adds	r6, #1
 80197f0:	47b8      	blx	r7
 80197f2:	b2b6      	uxth	r6, r6
 80197f4:	e7ee      	b.n	80197d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80197f6:	4a9b      	ldr	r2, [pc, #620]	; (8019a64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80197f8:	6813      	ldr	r3, [r2, #0]
 80197fa:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80197fe:	2b01      	cmp	r3, #1
 8019800:	4691      	mov	r9, r2
 8019802:	f040 80e2 	bne.w	80199ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8019806:	8829      	ldrh	r1, [r5, #0]
 8019808:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801980c:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8019810:	33ae      	adds	r3, #174	; 0xae
 8019812:	2600      	movs	r6, #0
 8019814:	428f      	cmp	r7, r1
 8019816:	f103 0308 	add.w	r3, r3, #8
 801981a:	dd0a      	ble.n	8019832 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 801981c:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8019820:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8019824:	4402      	add	r2, r0
 8019826:	b212      	sxth	r2, r2
 8019828:	4296      	cmp	r6, r2
 801982a:	bfb8      	it	lt
 801982c:	4616      	movlt	r6, r2
 801982e:	3101      	adds	r1, #1
 8019830:	e7f0      	b.n	8019814 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8019832:	4b8d      	ldr	r3, [pc, #564]	; (8019a68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8019834:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8019a64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8019838:	881b      	ldrh	r3, [r3, #0]
 801983a:	2b0f      	cmp	r3, #15
 801983c:	bf88      	it	hi
 801983e:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8019842:	f04f 0300 	mov.w	r3, #0
 8019846:	e9cd 3305 	strd	r3, r3, [sp, #20]
 801984a:	bf98      	it	ls
 801984c:	f04f 0b01 	movls.w	fp, #1
 8019850:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8019854:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8019858:	4b82      	ldr	r3, [pc, #520]	; (8019a64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 801985a:	4438      	add	r0, r7
 801985c:	b207      	sxth	r7, r0
 801985e:	6818      	ldr	r0, [r3, #0]
 8019860:	42b7      	cmp	r7, r6
 8019862:	6803      	ldr	r3, [r0, #0]
 8019864:	f280 8083 	bge.w	801996e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8019868:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 801986c:	4798      	blx	r3
 801986e:	eb07 030b 	add.w	r3, r7, fp
 8019872:	4298      	cmp	r0, r3
 8019874:	da07      	bge.n	8019886 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8019876:	42b0      	cmp	r0, r6
 8019878:	da05      	bge.n	8019886 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 801987a:	4287      	cmp	r7, r0
 801987c:	dd6c      	ble.n	8019958 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801987e:	2f00      	cmp	r7, #0
 8019880:	dd6a      	ble.n	8019958 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8019882:	4630      	mov	r0, r6
 8019884:	e004      	b.n	8019890 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8019886:	4287      	cmp	r7, r0
 8019888:	dcfb      	bgt.n	8019882 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 801988a:	42b0      	cmp	r0, r6
 801988c:	bfa8      	it	ge
 801988e:	4630      	movge	r0, r6
 8019890:	4b76      	ldr	r3, [pc, #472]	; (8019a6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8019892:	f8ad 7016 	strh.w	r7, [sp, #22]
 8019896:	1bc0      	subs	r0, r0, r7
 8019898:	f9b3 3000 	ldrsh.w	r3, [r3]
 801989c:	882f      	ldrh	r7, [r5, #0]
 801989e:	f8ad 3018 	strh.w	r3, [sp, #24]
 80198a2:	2200      	movs	r2, #0
 80198a4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80198a8:	f8ad 001a 	strh.w	r0, [sp, #26]
 80198ac:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80198b0:	42bb      	cmp	r3, r7
 80198b2:	d9cd      	bls.n	8019850 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80198b4:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80198b8:	ab07      	add	r3, sp, #28
 80198ba:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80198be:	6851      	ldr	r1, [r2, #4]
 80198c0:	c303      	stmia	r3!, {r0, r1}
 80198c2:	a905      	add	r1, sp, #20
 80198c4:	a807      	add	r0, sp, #28
 80198c6:	f7ff f967 	bl	8018b98 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80198ca:	2800      	cmp	r0, #0
 80198cc:	d04c      	beq.n	8019968 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 80198ce:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80198d2:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80198d6:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80198da:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80198de:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80198e2:	9302      	str	r3, [sp, #8]
 80198e4:	4686      	mov	lr, r0
 80198e6:	4290      	cmp	r0, r2
 80198e8:	4450      	add	r0, sl
 80198ea:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80198ee:	bfb8      	it	lt
 80198f0:	4696      	movlt	lr, r2
 80198f2:	4452      	add	r2, sl
 80198f4:	4299      	cmp	r1, r3
 80198f6:	b280      	uxth	r0, r0
 80198f8:	b292      	uxth	r2, r2
 80198fa:	468c      	mov	ip, r1
 80198fc:	fa0f fa82 	sxth.w	sl, r2
 8019900:	bfb8      	it	lt
 8019902:	469c      	movlt	ip, r3
 8019904:	b203      	sxth	r3, r0
 8019906:	4553      	cmp	r3, sl
 8019908:	bfb8      	it	lt
 801990a:	4602      	movlt	r2, r0
 801990c:	eba2 020e 	sub.w	r2, r2, lr
 8019910:	f8ad 2020 	strh.w	r2, [sp, #32]
 8019914:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8019918:	9b02      	ldr	r3, [sp, #8]
 801991a:	f8ad e01c 	strh.w	lr, [sp, #28]
 801991e:	4411      	add	r1, r2
 8019920:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8019924:	f8ad c01e 	strh.w	ip, [sp, #30]
 8019928:	4413      	add	r3, r2
 801992a:	b289      	uxth	r1, r1
 801992c:	b29b      	uxth	r3, r3
 801992e:	b208      	sxth	r0, r1
 8019930:	b21a      	sxth	r2, r3
 8019932:	4290      	cmp	r0, r2
 8019934:	bfb8      	it	lt
 8019936:	460b      	movlt	r3, r1
 8019938:	eba3 030c 	sub.w	r3, r3, ip
 801993c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8019940:	a807      	add	r0, sp, #28
 8019942:	f7f9 fa50 	bl	8012de6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019946:	b920      	cbnz	r0, 8019952 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8019948:	6823      	ldr	r3, [r4, #0]
 801994a:	a907      	add	r1, sp, #28
 801994c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801994e:	4620      	mov	r0, r4
 8019950:	4798      	blx	r3
 8019952:	3701      	adds	r7, #1
 8019954:	b2bf      	uxth	r7, r7
 8019956:	e7a9      	b.n	80198ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8019958:	f8d9 0000 	ldr.w	r0, [r9]
 801995c:	6803      	ldr	r3, [r0, #0]
 801995e:	2101      	movs	r1, #1
 8019960:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8019964:	4798      	blx	r3
 8019966:	e773      	b.n	8019850 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8019968:	e9cd 0007 	strd	r0, r0, [sp, #28]
 801996c:	e7e8      	b.n	8019940 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801996e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8019970:	4798      	blx	r3
 8019972:	4b3f      	ldr	r3, [pc, #252]	; (8019a70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8019974:	781b      	ldrb	r3, [r3, #0]
 8019976:	2b00      	cmp	r3, #0
 8019978:	f43f af29 	beq.w	80197ce <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801997c:	2300      	movs	r3, #0
 801997e:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8019982:	882b      	ldrh	r3, [r5, #0]
 8019984:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8019988:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 801998c:	42ab      	cmp	r3, r5
 801998e:	f4bf af1e 	bcs.w	80197ce <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8019992:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8019996:	2907      	cmp	r1, #7
 8019998:	d814      	bhi.n	80199c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 801999a:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801999e:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80199a2:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80199a6:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80199aa:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80199ae:	1c4a      	adds	r2, r1, #1
 80199b0:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 80199b4:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80199b8:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80199bc:	f8a2 c002 	strh.w	ip, [r2, #2]
 80199c0:	8097      	strh	r7, [r2, #4]
 80199c2:	80d6      	strh	r6, [r2, #6]
 80199c4:	3301      	adds	r3, #1
 80199c6:	b29b      	uxth	r3, r3
 80199c8:	e7e0      	b.n	801998c <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 80199ca:	2b02      	cmp	r3, #2
 80199cc:	f040 8133 	bne.w	8019c36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 80199d0:	4b28      	ldr	r3, [pc, #160]	; (8019a74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 80199d2:	781b      	ldrb	r3, [r3, #0]
 80199d4:	2b01      	cmp	r3, #1
 80199d6:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 80199da:	f000 8098 	beq.w	8019b0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80199de:	882a      	ldrh	r2, [r5, #0]
 80199e0:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 80199e4:	3201      	adds	r2, #1
 80199e6:	b292      	uxth	r2, r2
 80199e8:	2900      	cmp	r1, #0
 80199ea:	d0c2      	beq.n	8019972 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80199ec:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 80199f0:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 80199f4:	441e      	add	r6, r3
 80199f6:	b236      	sxth	r6, r6
 80199f8:	4694      	mov	ip, r2
 80199fa:	f04f 0900 	mov.w	r9, #0
 80199fe:	fa1f f38c 	uxth.w	r3, ip
 8019a02:	4299      	cmp	r1, r3
 8019a04:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8019a08:	f240 80bf 	bls.w	8019b8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8019a0c:	4427      	add	r7, r4
 8019a0e:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8019a12:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8019a16:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8019a1a:	4283      	cmp	r3, r0
 8019a1c:	f340 80a1 	ble.w	8019b62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8019a20:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8019a24:	4406      	add	r6, r0
 8019a26:	b236      	sxth	r6, r6
 8019a28:	429e      	cmp	r6, r3
 8019a2a:	bfa8      	it	ge
 8019a2c:	461e      	movge	r6, r3
 8019a2e:	46e1      	mov	r9, ip
 8019a30:	f10c 0c01 	add.w	ip, ip, #1
 8019a34:	e7e3      	b.n	80199fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8019a36:	d10a      	bne.n	8019a4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8019a38:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8019a3c:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8019a40:	4562      	cmp	r2, ip
 8019a42:	bfb8      	it	lt
 8019a44:	4662      	movlt	r2, ip
 8019a46:	4288      	cmp	r0, r1
 8019a48:	bfb8      	it	lt
 8019a4a:	461f      	movlt	r7, r3
 8019a4c:	e087      	b.n	8019b5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8019a4e:	428a      	cmp	r2, r1
 8019a50:	bfb8      	it	lt
 8019a52:	460a      	movlt	r2, r1
 8019a54:	e083      	b.n	8019b5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8019a56:	bf00      	nop
 8019a58:	20002368 	.word	0x20002368
 8019a5c:	20002374 	.word	0x20002374
 8019a60:	2000001c 	.word	0x2000001c
 8019a64:	20002328 	.word	0x20002328
 8019a68:	2000231e 	.word	0x2000231e
 8019a6c:	2000231c 	.word	0x2000231c
 8019a70:	20002326 	.word	0x20002326
 8019a74:	20002320 	.word	0x20002320
 8019a78:	19a1      	adds	r1, r4, r6
 8019a7a:	ab07      	add	r3, sp, #28
 8019a7c:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8019a80:	6849      	ldr	r1, [r1, #4]
 8019a82:	c303      	stmia	r3!, {r0, r1}
 8019a84:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8019a88:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8019a8c:	2b13      	cmp	r3, #19
 8019a8e:	bfd8      	it	le
 8019a90:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8019a94:	f8ad 201c 	strh.w	r2, [sp, #28]
 8019a98:	440b      	add	r3, r1
 8019a9a:	1a9b      	subs	r3, r3, r2
 8019a9c:	a807      	add	r0, sp, #28
 8019a9e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8019aa2:	f7fe ffad 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019aa6:	a807      	add	r0, sp, #28
 8019aa8:	f7f9 f99d 	bl	8012de6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019aac:	bb78      	cbnz	r0, 8019b0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8019aae:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8019ab2:	f8d9 0000 	ldr.w	r0, [r9]
 8019ab6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8019aba:	f8d0 e000 	ldr.w	lr, [r0]
 8019abe:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8019ac2:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8019ac6:	f1bc 0f14 	cmp.w	ip, #20
 8019aca:	bfa8      	it	ge
 8019acc:	f04f 0c14 	movge.w	ip, #20
 8019ad0:	fa1f fc8c 	uxth.w	ip, ip
 8019ad4:	f8cd c000 	str.w	ip, [sp]
 8019ad8:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8019adc:	47d8      	blx	fp
 8019ade:	4683      	mov	fp, r0
 8019ae0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8019ae4:	a807      	add	r0, sp, #28
 8019ae6:	f7fe ff71 	bl	80189cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8019aea:	6823      	ldr	r3, [r4, #0]
 8019aec:	4426      	add	r6, r4
 8019aee:	4620      	mov	r0, r4
 8019af0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8019af2:	a907      	add	r1, sp, #28
 8019af4:	4798      	blx	r3
 8019af6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8019afa:	eba0 000b 	sub.w	r0, r0, fp
 8019afe:	b200      	sxth	r0, r0
 8019b00:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8019b04:	b918      	cbnz	r0, 8019b0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8019b06:	b2b9      	uxth	r1, r7
 8019b08:	4650      	mov	r0, sl
 8019b0a:	f7ff fa79 	bl	8019000 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019b0e:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8019b12:	f1bb 0f00 	cmp.w	fp, #0
 8019b16:	f43f af2c 	beq.w	8019972 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8019b1a:	882b      	ldrh	r3, [r5, #0]
 8019b1c:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8019b20:	3301      	adds	r3, #1
 8019b22:	b29b      	uxth	r3, r3
 8019b24:	2700      	movs	r7, #0
 8019b26:	b299      	uxth	r1, r3
 8019b28:	458b      	cmp	fp, r1
 8019b2a:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8019b2e:	d9a3      	bls.n	8019a78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8019b30:	4426      	add	r6, r4
 8019b32:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8019b36:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8019b3a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8019b3e:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8019b42:	4408      	add	r0, r1
 8019b44:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8019b48:	4461      	add	r1, ip
 8019b4a:	b200      	sxth	r0, r0
 8019b4c:	b209      	sxth	r1, r1
 8019b4e:	4288      	cmp	r0, r1
 8019b50:	f6bf af71 	bge.w	8019a36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8019b54:	4584      	cmp	ip, r0
 8019b56:	4662      	mov	r2, ip
 8019b58:	461f      	mov	r7, r3
 8019b5a:	bfb8      	it	lt
 8019b5c:	4602      	movlt	r2, r0
 8019b5e:	3301      	adds	r3, #1
 8019b60:	e7e1      	b.n	8019b26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8019b62:	d10e      	bne.n	8019b82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8019b64:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8019b68:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8019b6c:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8019b70:	4473      	add	r3, lr
 8019b72:	b21b      	sxth	r3, r3
 8019b74:	429e      	cmp	r6, r3
 8019b76:	bfa8      	it	ge
 8019b78:	461e      	movge	r6, r3
 8019b7a:	4287      	cmp	r7, r0
 8019b7c:	bfb8      	it	lt
 8019b7e:	46e1      	movlt	r9, ip
 8019b80:	e756      	b.n	8019a30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8019b82:	4286      	cmp	r6, r0
 8019b84:	bfa8      	it	ge
 8019b86:	4606      	movge	r6, r0
 8019b88:	e752      	b.n	8019a30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8019b8a:	eb0a 0007 	add.w	r0, sl, r7
 8019b8e:	4427      	add	r7, r4
 8019b90:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8019b94:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8019b98:	f1bb 0f13 	cmp.w	fp, #19
 8019b9c:	bfde      	ittt	le
 8019b9e:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8019ba2:	445e      	addle	r6, fp
 8019ba4:	b236      	sxthle	r6, r6
 8019ba6:	f7f9 f91e 	bl	8012de6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019baa:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8019bae:	2800      	cmp	r0, #0
 8019bb0:	f47f af1a 	bne.w	80199e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8019bb4:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8019bb8:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8019bbc:	482a      	ldr	r0, [pc, #168]	; (8019c68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8019bbe:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8019bc2:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8019bc6:	6800      	ldr	r0, [r0, #0]
 8019bc8:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019bcc:	1ab6      	subs	r6, r6, r2
 8019bce:	2e14      	cmp	r6, #20
 8019bd0:	f8ad 201e 	strh.w	r2, [sp, #30]
 8019bd4:	f8ad 3020 	strh.w	r3, [sp, #32]
 8019bd8:	bfa8      	it	ge
 8019bda:	2614      	movge	r6, #20
 8019bdc:	f8d0 c000 	ldr.w	ip, [r0]
 8019be0:	b2b6      	uxth	r6, r6
 8019be2:	fa1f fb8b 	uxth.w	fp, fp
 8019be6:	455e      	cmp	r6, fp
 8019be8:	bf94      	ite	ls
 8019bea:	9600      	strls	r6, [sp, #0]
 8019bec:	f8cd b000 	strhi.w	fp, [sp]
 8019bf0:	b292      	uxth	r2, r2
 8019bf2:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8019bf6:	b29b      	uxth	r3, r3
 8019bf8:	b289      	uxth	r1, r1
 8019bfa:	47b0      	blx	r6
 8019bfc:	6823      	ldr	r3, [r4, #0]
 8019bfe:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8019c02:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8019c04:	a907      	add	r1, sp, #28
 8019c06:	4620      	mov	r0, r4
 8019c08:	4798      	blx	r3
 8019c0a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8019c0e:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8019c12:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8019c16:	1a5b      	subs	r3, r3, r1
 8019c18:	440a      	add	r2, r1
 8019c1a:	b21b      	sxth	r3, r3
 8019c1c:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8019c20:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8019c24:	2b00      	cmp	r3, #0
 8019c26:	f47f aeda 	bne.w	80199de <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8019c2a:	fa1f f189 	uxth.w	r1, r9
 8019c2e:	4650      	mov	r0, sl
 8019c30:	f7ff f9e6 	bl	8019000 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019c34:	e6d3      	b.n	80199de <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8019c36:	882e      	ldrh	r6, [r5, #0]
 8019c38:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8019c3c:	42b3      	cmp	r3, r6
 8019c3e:	f67f ae98 	bls.w	8019972 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8019c42:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8019c46:	ab07      	add	r3, sp, #28
 8019c48:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8019c4c:	6851      	ldr	r1, [r2, #4]
 8019c4e:	c303      	stmia	r3!, {r0, r1}
 8019c50:	a807      	add	r0, sp, #28
 8019c52:	f7f9 f8c8 	bl	8012de6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019c56:	b920      	cbnz	r0, 8019c62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8019c58:	6823      	ldr	r3, [r4, #0]
 8019c5a:	a907      	add	r1, sp, #28
 8019c5c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8019c5e:	4620      	mov	r0, r4
 8019c60:	4798      	blx	r3
 8019c62:	3601      	adds	r6, #1
 8019c64:	b2b6      	uxth	r6, r6
 8019c66:	e7e7      	b.n	8019c38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8019c68:	20002328 	.word	0x20002328

08019c6c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8019c6c:	4b03      	ldr	r3, [pc, #12]	; (8019c7c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8019c6e:	2200      	movs	r2, #0
 8019c70:	801a      	strh	r2, [r3, #0]
 8019c72:	805a      	strh	r2, [r3, #2]
 8019c74:	809a      	strh	r2, [r3, #4]
 8019c76:	80da      	strh	r2, [r3, #6]
 8019c78:	4770      	bx	lr
 8019c7a:	bf00      	nop
 8019c7c:	20002374 	.word	0x20002374

08019c80 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8019c80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c84:	4606      	mov	r6, r0
 8019c86:	b09d      	sub	sp, #116	; 0x74
 8019c88:	a803      	add	r0, sp, #12
 8019c8a:	4614      	mov	r4, r2
 8019c8c:	468a      	mov	sl, r1
 8019c8e:	461d      	mov	r5, r3
 8019c90:	f000 fe80 	bl	801a994 <_ZN8touchgfx12TextProviderC1Ev>
 8019c94:	6833      	ldr	r3, [r6, #0]
 8019c96:	4630      	mov	r0, r6
 8019c98:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019c9a:	4798      	blx	r3
 8019c9c:	6833      	ldr	r3, [r6, #0]
 8019c9e:	4607      	mov	r7, r0
 8019ca0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019ca2:	4630      	mov	r0, r6
 8019ca4:	4798      	blx	r3
 8019ca6:	462a      	mov	r2, r5
 8019ca8:	9000      	str	r0, [sp, #0]
 8019caa:	4621      	mov	r1, r4
 8019cac:	463b      	mov	r3, r7
 8019cae:	a803      	add	r0, sp, #12
 8019cb0:	f000 fecb 	bl	801aa4a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019cb4:	2500      	movs	r5, #0
 8019cb6:	462c      	mov	r4, r5
 8019cb8:	46a9      	mov	r9, r5
 8019cba:	46a8      	mov	r8, r5
 8019cbc:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8019cc0:	2300      	movs	r3, #0
 8019cc2:	9302      	str	r3, [sp, #8]
 8019cc4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8019cc8:	429c      	cmp	r4, r3
 8019cca:	d002      	beq.n	8019cd2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8019ccc:	455c      	cmp	r4, fp
 8019cce:	bf18      	it	ne
 8019cd0:	4625      	movne	r5, r4
 8019cd2:	ab02      	add	r3, sp, #8
 8019cd4:	4632      	mov	r2, r6
 8019cd6:	4651      	mov	r1, sl
 8019cd8:	a803      	add	r0, sp, #12
 8019cda:	f001 f9b9 	bl	801b050 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019cde:	4604      	mov	r4, r0
 8019ce0:	b108      	cbz	r0, 8019ce6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8019ce2:	280a      	cmp	r0, #10
 8019ce4:	d10a      	bne.n	8019cfc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8019ce6:	45c1      	cmp	r9, r8
 8019ce8:	bf38      	it	cc
 8019cea:	46c1      	movcc	r9, r8
 8019cec:	f04f 0800 	mov.w	r8, #0
 8019cf0:	2c00      	cmp	r4, #0
 8019cf2:	d1e5      	bne.n	8019cc0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8019cf4:	4648      	mov	r0, r9
 8019cf6:	b01d      	add	sp, #116	; 0x74
 8019cf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019cfc:	9a02      	ldr	r2, [sp, #8]
 8019cfe:	2a00      	cmp	r2, #0
 8019d00:	d0de      	beq.n	8019cc0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8019d02:	7b57      	ldrb	r7, [r2, #13]
 8019d04:	6833      	ldr	r3, [r6, #0]
 8019d06:	8894      	ldrh	r4, [r2, #4]
 8019d08:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8019d0a:	007f      	lsls	r7, r7, #1
 8019d0c:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8019d10:	7a97      	ldrb	r7, [r2, #10]
 8019d12:	4629      	mov	r1, r5
 8019d14:	4307      	orrs	r7, r0
 8019d16:	4630      	mov	r0, r6
 8019d18:	4798      	blx	r3
 8019d1a:	4438      	add	r0, r7
 8019d1c:	4480      	add	r8, r0
 8019d1e:	fa1f f888 	uxth.w	r8, r8
 8019d22:	e7e5      	b.n	8019cf0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08019d24 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8019d24:	b508      	push	{r3, lr}
 8019d26:	6803      	ldr	r3, [r0, #0]
 8019d28:	68db      	ldr	r3, [r3, #12]
 8019d2a:	4798      	blx	r3
 8019d2c:	b128      	cbz	r0, 8019d3a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8019d2e:	7b43      	ldrb	r3, [r0, #13]
 8019d30:	7a80      	ldrb	r0, [r0, #10]
 8019d32:	005b      	lsls	r3, r3, #1
 8019d34:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8019d38:	4318      	orrs	r0, r3
 8019d3a:	bd08      	pop	{r3, pc}

08019d3c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8019d3c:	b40e      	push	{r1, r2, r3}
 8019d3e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019d40:	b09e      	sub	sp, #120	; 0x78
 8019d42:	ab23      	add	r3, sp, #140	; 0x8c
 8019d44:	4605      	mov	r5, r0
 8019d46:	f853 4b04 	ldr.w	r4, [r3], #4
 8019d4a:	9303      	str	r3, [sp, #12]
 8019d4c:	a805      	add	r0, sp, #20
 8019d4e:	f000 fe21 	bl	801a994 <_ZN8touchgfx12TextProviderC1Ev>
 8019d52:	682b      	ldr	r3, [r5, #0]
 8019d54:	4628      	mov	r0, r5
 8019d56:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019d58:	4798      	blx	r3
 8019d5a:	682b      	ldr	r3, [r5, #0]
 8019d5c:	4606      	mov	r6, r0
 8019d5e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019d60:	4628      	mov	r0, r5
 8019d62:	4798      	blx	r3
 8019d64:	4633      	mov	r3, r6
 8019d66:	ae1e      	add	r6, sp, #120	; 0x78
 8019d68:	4621      	mov	r1, r4
 8019d6a:	9000      	str	r0, [sp, #0]
 8019d6c:	9a03      	ldr	r2, [sp, #12]
 8019d6e:	2400      	movs	r4, #0
 8019d70:	a805      	add	r0, sp, #20
 8019d72:	f000 fe6a 	bl	801aa4a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019d76:	f846 4d68 	str.w	r4, [r6, #-104]!
 8019d7a:	462a      	mov	r2, r5
 8019d7c:	4633      	mov	r3, r6
 8019d7e:	4621      	mov	r1, r4
 8019d80:	a805      	add	r0, sp, #20
 8019d82:	f001 f965 	bl	801b050 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019d86:	b1f0      	cbz	r0, 8019dc6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8019d88:	280a      	cmp	r0, #10
 8019d8a:	d018      	beq.n	8019dbe <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8019d8c:	9f04      	ldr	r7, [sp, #16]
 8019d8e:	b1b7      	cbz	r7, 8019dbe <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8019d90:	7b78      	ldrb	r0, [r7, #13]
 8019d92:	7a3b      	ldrb	r3, [r7, #8]
 8019d94:	88ea      	ldrh	r2, [r5, #6]
 8019d96:	00c1      	lsls	r1, r0, #3
 8019d98:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8019d9c:	4319      	orrs	r1, r3
 8019d9e:	0643      	lsls	r3, r0, #25
 8019da0:	bf44      	itt	mi
 8019da2:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8019da6:	b219      	sxthmi	r1, r3
 8019da8:	0100      	lsls	r0, r0, #4
 8019daa:	79fb      	ldrb	r3, [r7, #7]
 8019dac:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8019db0:	4303      	orrs	r3, r0
 8019db2:	4413      	add	r3, r2
 8019db4:	1a5b      	subs	r3, r3, r1
 8019db6:	b21b      	sxth	r3, r3
 8019db8:	429c      	cmp	r4, r3
 8019dba:	bfb8      	it	lt
 8019dbc:	461c      	movlt	r4, r3
 8019dbe:	4633      	mov	r3, r6
 8019dc0:	462a      	mov	r2, r5
 8019dc2:	2100      	movs	r1, #0
 8019dc4:	e7dc      	b.n	8019d80 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8019dc6:	b2a0      	uxth	r0, r4
 8019dc8:	b01e      	add	sp, #120	; 0x78
 8019dca:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8019dce:	b003      	add	sp, #12
 8019dd0:	4770      	bx	lr

08019dd2 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8019dd2:	7a43      	ldrb	r3, [r0, #9]
 8019dd4:	8880      	ldrh	r0, [r0, #4]
 8019dd6:	4418      	add	r0, r3
 8019dd8:	b280      	uxth	r0, r0
 8019dda:	4770      	bx	lr

08019ddc <_ZNK8touchgfx4Font13getFontHeightEv>:
 8019ddc:	6803      	ldr	r3, [r0, #0]
 8019dde:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019de0:	4718      	bx	r3

08019de2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8019de2:	b40e      	push	{r1, r2, r3}
 8019de4:	b570      	push	{r4, r5, r6, lr}
 8019de6:	b09d      	sub	sp, #116	; 0x74
 8019de8:	ab21      	add	r3, sp, #132	; 0x84
 8019dea:	4604      	mov	r4, r0
 8019dec:	f853 5b04 	ldr.w	r5, [r3], #4
 8019df0:	9302      	str	r3, [sp, #8]
 8019df2:	a803      	add	r0, sp, #12
 8019df4:	f000 fdce 	bl	801a994 <_ZN8touchgfx12TextProviderC1Ev>
 8019df8:	6823      	ldr	r3, [r4, #0]
 8019dfa:	4620      	mov	r0, r4
 8019dfc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019dfe:	4798      	blx	r3
 8019e00:	6823      	ldr	r3, [r4, #0]
 8019e02:	4606      	mov	r6, r0
 8019e04:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019e06:	4620      	mov	r0, r4
 8019e08:	4798      	blx	r3
 8019e0a:	4633      	mov	r3, r6
 8019e0c:	9000      	str	r0, [sp, #0]
 8019e0e:	9a02      	ldr	r2, [sp, #8]
 8019e10:	4629      	mov	r1, r5
 8019e12:	a803      	add	r0, sp, #12
 8019e14:	f000 fe19 	bl	801aa4a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019e18:	a803      	add	r0, sp, #12
 8019e1a:	f001 f9e7 	bl	801b1ec <_ZN8touchgfx12TextProvider11getNextCharEv>
 8019e1e:	2401      	movs	r4, #1
 8019e20:	b2a3      	uxth	r3, r4
 8019e22:	b140      	cbz	r0, 8019e36 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8019e24:	280a      	cmp	r0, #10
 8019e26:	bf08      	it	eq
 8019e28:	3301      	addeq	r3, #1
 8019e2a:	a803      	add	r0, sp, #12
 8019e2c:	bf08      	it	eq
 8019e2e:	b21c      	sxtheq	r4, r3
 8019e30:	f001 f9dc 	bl	801b1ec <_ZN8touchgfx12TextProvider11getNextCharEv>
 8019e34:	e7f4      	b.n	8019e20 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8019e36:	4618      	mov	r0, r3
 8019e38:	b01d      	add	sp, #116	; 0x74
 8019e3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019e3e:	b003      	add	sp, #12
 8019e40:	4770      	bx	lr

08019e42 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8019e42:	b40e      	push	{r1, r2, r3}
 8019e44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019e46:	b09e      	sub	sp, #120	; 0x78
 8019e48:	ab23      	add	r3, sp, #140	; 0x8c
 8019e4a:	4604      	mov	r4, r0
 8019e4c:	f853 5b04 	ldr.w	r5, [r3], #4
 8019e50:	9303      	str	r3, [sp, #12]
 8019e52:	a805      	add	r0, sp, #20
 8019e54:	f000 fd9e 	bl	801a994 <_ZN8touchgfx12TextProviderC1Ev>
 8019e58:	6823      	ldr	r3, [r4, #0]
 8019e5a:	4620      	mov	r0, r4
 8019e5c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019e5e:	4798      	blx	r3
 8019e60:	6823      	ldr	r3, [r4, #0]
 8019e62:	4606      	mov	r6, r0
 8019e64:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019e66:	4620      	mov	r0, r4
 8019e68:	4798      	blx	r3
 8019e6a:	4633      	mov	r3, r6
 8019e6c:	4629      	mov	r1, r5
 8019e6e:	9000      	str	r0, [sp, #0]
 8019e70:	9a03      	ldr	r2, [sp, #12]
 8019e72:	a805      	add	r0, sp, #20
 8019e74:	ad1e      	add	r5, sp, #120	; 0x78
 8019e76:	f000 fde8 	bl	801aa4a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019e7a:	2100      	movs	r1, #0
 8019e7c:	f845 1d68 	str.w	r1, [r5, #-104]!
 8019e80:	4622      	mov	r2, r4
 8019e82:	462b      	mov	r3, r5
 8019e84:	a805      	add	r0, sp, #20
 8019e86:	f001 f8e3 	bl	801b050 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019e8a:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8019e8e:	b1d8      	cbz	r0, 8019ec8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8019e90:	280a      	cmp	r0, #10
 8019e92:	d012      	beq.n	8019eba <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8019e94:	9804      	ldr	r0, [sp, #16]
 8019e96:	b180      	cbz	r0, 8019eba <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8019e98:	7b47      	ldrb	r7, [r0, #13]
 8019e9a:	88e2      	ldrh	r2, [r4, #6]
 8019e9c:	00fb      	lsls	r3, r7, #3
 8019e9e:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8019ea2:	7a03      	ldrb	r3, [r0, #8]
 8019ea4:	430b      	orrs	r3, r1
 8019ea6:	0679      	lsls	r1, r7, #25
 8019ea8:	bf44      	itt	mi
 8019eaa:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019eae:	b21b      	sxthmi	r3, r3
 8019eb0:	1ad3      	subs	r3, r2, r3
 8019eb2:	b21b      	sxth	r3, r3
 8019eb4:	429e      	cmp	r6, r3
 8019eb6:	bfa8      	it	ge
 8019eb8:	461e      	movge	r6, r3
 8019eba:	462b      	mov	r3, r5
 8019ebc:	4622      	mov	r2, r4
 8019ebe:	2100      	movs	r1, #0
 8019ec0:	a805      	add	r0, sp, #20
 8019ec2:	f001 f8c5 	bl	801b050 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019ec6:	e7e2      	b.n	8019e8e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8019ec8:	4630      	mov	r0, r6
 8019eca:	b01e      	add	sp, #120	; 0x78
 8019ecc:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8019ed0:	b003      	add	sp, #12
 8019ed2:	4770      	bx	lr

08019ed4 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8019ed4:	b513      	push	{r0, r1, r4, lr}
 8019ed6:	6803      	ldr	r3, [r0, #0]
 8019ed8:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8019edc:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8019ee0:	f8ad 1004 	strh.w	r1, [sp, #4]
 8019ee4:	2400      	movs	r4, #0
 8019ee6:	9400      	str	r4, [sp, #0]
 8019ee8:	f8ad 2006 	strh.w	r2, [sp, #6]
 8019eec:	691b      	ldr	r3, [r3, #16]
 8019eee:	4669      	mov	r1, sp
 8019ef0:	4798      	blx	r3
 8019ef2:	b002      	add	sp, #8
 8019ef4:	bd10      	pop	{r4, pc}

08019ef6 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8019ef6:	b538      	push	{r3, r4, r5, lr}
 8019ef8:	680b      	ldr	r3, [r1, #0]
 8019efa:	460c      	mov	r4, r1
 8019efc:	68db      	ldr	r3, [r3, #12]
 8019efe:	4605      	mov	r5, r0
 8019f00:	4798      	blx	r3
 8019f02:	6823      	ldr	r3, [r4, #0]
 8019f04:	4620      	mov	r0, r4
 8019f06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019f08:	4629      	mov	r1, r5
 8019f0a:	4798      	blx	r3
 8019f0c:	4628      	mov	r0, r5
 8019f0e:	bd38      	pop	{r3, r4, r5, pc}

08019f10 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8019f10:	b410      	push	{r4}
 8019f12:	880a      	ldrh	r2, [r1, #0]
 8019f14:	8884      	ldrh	r4, [r0, #4]
 8019f16:	4422      	add	r2, r4
 8019f18:	800a      	strh	r2, [r1, #0]
 8019f1a:	88c4      	ldrh	r4, [r0, #6]
 8019f1c:	884a      	ldrh	r2, [r1, #2]
 8019f1e:	4422      	add	r2, r4
 8019f20:	804a      	strh	r2, [r1, #2]
 8019f22:	6940      	ldr	r0, [r0, #20]
 8019f24:	b120      	cbz	r0, 8019f30 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8019f26:	6803      	ldr	r3, [r0, #0]
 8019f28:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019f2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019f2e:	4718      	bx	r3
 8019f30:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019f34:	4770      	bx	lr

08019f36 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8019f36:	b570      	push	{r4, r5, r6, lr}
 8019f38:	8882      	ldrh	r2, [r0, #4]
 8019f3a:	880b      	ldrh	r3, [r1, #0]
 8019f3c:	4413      	add	r3, r2
 8019f3e:	800b      	strh	r3, [r1, #0]
 8019f40:	88c2      	ldrh	r2, [r0, #6]
 8019f42:	884b      	ldrh	r3, [r1, #2]
 8019f44:	460c      	mov	r4, r1
 8019f46:	4413      	add	r3, r2
 8019f48:	804b      	strh	r3, [r1, #2]
 8019f4a:	4605      	mov	r5, r0
 8019f4c:	1d01      	adds	r1, r0, #4
 8019f4e:	4620      	mov	r0, r4
 8019f50:	f7f8 ff06 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 8019f54:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8019f58:	2b00      	cmp	r3, #0
 8019f5a:	dd0b      	ble.n	8019f74 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019f5c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019f60:	2b00      	cmp	r3, #0
 8019f62:	dd07      	ble.n	8019f74 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019f64:	6968      	ldr	r0, [r5, #20]
 8019f66:	b128      	cbz	r0, 8019f74 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019f68:	6803      	ldr	r3, [r0, #0]
 8019f6a:	4621      	mov	r1, r4
 8019f6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019f6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019f72:	4718      	bx	r3
 8019f74:	bd70      	pop	{r4, r5, r6, pc}
	...

08019f78 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8019f78:	b570      	push	{r4, r5, r6, lr}
 8019f7a:	8882      	ldrh	r2, [r0, #4]
 8019f7c:	880b      	ldrh	r3, [r1, #0]
 8019f7e:	4413      	add	r3, r2
 8019f80:	800b      	strh	r3, [r1, #0]
 8019f82:	88c2      	ldrh	r2, [r0, #6]
 8019f84:	884b      	ldrh	r3, [r1, #2]
 8019f86:	460c      	mov	r4, r1
 8019f88:	4413      	add	r3, r2
 8019f8a:	804b      	strh	r3, [r1, #2]
 8019f8c:	4605      	mov	r5, r0
 8019f8e:	1d01      	adds	r1, r0, #4
 8019f90:	4620      	mov	r0, r4
 8019f92:	f7f8 fee5 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 8019f96:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8019f9a:	2b00      	cmp	r3, #0
 8019f9c:	dd19      	ble.n	8019fd2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019f9e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019fa2:	2b00      	cmp	r3, #0
 8019fa4:	dd15      	ble.n	8019fd2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019fa6:	6968      	ldr	r0, [r5, #20]
 8019fa8:	b128      	cbz	r0, 8019fb6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8019faa:	6803      	ldr	r3, [r0, #0]
 8019fac:	4621      	mov	r1, r4
 8019fae:	691b      	ldr	r3, [r3, #16]
 8019fb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019fb4:	4718      	bx	r3
 8019fb6:	4b07      	ldr	r3, [pc, #28]	; (8019fd4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8019fb8:	681b      	ldr	r3, [r3, #0]
 8019fba:	3304      	adds	r3, #4
 8019fbc:	429d      	cmp	r5, r3
 8019fbe:	d108      	bne.n	8019fd2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019fc0:	f7fe fec8 	bl	8018d54 <_ZN8touchgfx11Application11getInstanceEv>
 8019fc4:	6803      	ldr	r3, [r0, #0]
 8019fc6:	6821      	ldr	r1, [r4, #0]
 8019fc8:	6862      	ldr	r2, [r4, #4]
 8019fca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019fcc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019fd0:	4718      	bx	r3
 8019fd2:	bd70      	pop	{r4, r5, r6, pc}
 8019fd4:	2000236c 	.word	0x2000236c

08019fd8 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8019fd8:	b570      	push	{r4, r5, r6, lr}
 8019fda:	4604      	mov	r4, r0
 8019fdc:	4616      	mov	r6, r2
 8019fde:	460d      	mov	r5, r1
 8019fe0:	b901      	cbnz	r1, 8019fe4 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8019fe2:	b192      	cbz	r2, 801a00a <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8019fe4:	6823      	ldr	r3, [r4, #0]
 8019fe6:	4620      	mov	r0, r4
 8019fe8:	699b      	ldr	r3, [r3, #24]
 8019fea:	4798      	blx	r3
 8019fec:	88e2      	ldrh	r2, [r4, #6]
 8019fee:	88a1      	ldrh	r1, [r4, #4]
 8019ff0:	4432      	add	r2, r6
 8019ff2:	4429      	add	r1, r5
 8019ff4:	4620      	mov	r0, r4
 8019ff6:	b212      	sxth	r2, r2
 8019ff8:	b209      	sxth	r1, r1
 8019ffa:	f7ef fc3a 	bl	8009872 <_ZN8touchgfx8Drawable5setXYEss>
 8019ffe:	6823      	ldr	r3, [r4, #0]
 801a000:	4620      	mov	r0, r4
 801a002:	699b      	ldr	r3, [r3, #24]
 801a004:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a008:	4718      	bx	r3
 801a00a:	bd70      	pop	{r4, r5, r6, pc}

0801a00c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 801a00c:	b510      	push	{r4, lr}
 801a00e:	4604      	mov	r4, r0
 801a010:	4608      	mov	r0, r1
 801a012:	2300      	movs	r3, #0
 801a014:	8023      	strh	r3, [r4, #0]
 801a016:	8063      	strh	r3, [r4, #2]
 801a018:	6803      	ldr	r3, [r0, #0]
 801a01a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a01e:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801a022:	80a1      	strh	r1, [r4, #4]
 801a024:	80e2      	strh	r2, [r4, #6]
 801a026:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a028:	4621      	mov	r1, r4
 801a02a:	4798      	blx	r3
 801a02c:	4620      	mov	r0, r4
 801a02e:	bd10      	pop	{r4, pc}

0801a030 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801a030:	b530      	push	{r4, r5, lr}
 801a032:	8083      	strh	r3, [r0, #4]
 801a034:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 801a038:	80c3      	strh	r3, [r0, #6]
 801a03a:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801a03e:	7203      	strb	r3, [r0, #8]
 801a040:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801a044:	f89d 5018 	ldrb.w	r5, [sp, #24]
 801a048:	7243      	strb	r3, [r0, #9]
 801a04a:	7a83      	ldrb	r3, [r0, #10]
 801a04c:	6141      	str	r1, [r0, #20]
 801a04e:	f365 0306 	bfi	r3, r5, #0, #7
 801a052:	f89d 501c 	ldrb.w	r5, [sp, #28]
 801a056:	8302      	strh	r2, [r0, #24]
 801a058:	f365 13c7 	bfi	r3, r5, #7, #1
 801a05c:	7283      	strb	r3, [r0, #10]
 801a05e:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801a062:	72c3      	strb	r3, [r0, #11]
 801a064:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 801a068:	7303      	strb	r3, [r0, #12]
 801a06a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801a06e:	81c3      	strh	r3, [r0, #14]
 801a070:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801a074:	8203      	strh	r3, [r0, #16]
 801a076:	4b01      	ldr	r3, [pc, #4]	; (801a07c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 801a078:	6003      	str	r3, [r0, #0]
 801a07a:	bd30      	pop	{r4, r5, pc}
 801a07c:	0802f8c0 	.word	0x0802f8c0

0801a080 <_ZNK8touchgfx9ConstFont4findEt>:
 801a080:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a082:	6944      	ldr	r4, [r0, #20]
 801a084:	b3bc      	cbz	r4, 801a0f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a086:	88a3      	ldrh	r3, [r4, #4]
 801a088:	8b02      	ldrh	r2, [r0, #24]
 801a08a:	1acb      	subs	r3, r1, r3
 801a08c:	f102 32ff 	add.w	r2, r2, #4294967295
 801a090:	d431      	bmi.n	801a0f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a092:	4293      	cmp	r3, r2
 801a094:	dd0c      	ble.n	801a0b0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801a096:	230e      	movs	r3, #14
 801a098:	fb03 4302 	mla	r3, r3, r2, r4
 801a09c:	889b      	ldrh	r3, [r3, #4]
 801a09e:	1a5b      	subs	r3, r3, r1
 801a0a0:	1ad3      	subs	r3, r2, r3
 801a0a2:	429a      	cmp	r2, r3
 801a0a4:	db27      	blt.n	801a0f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a0a6:	2b00      	cmp	r3, #0
 801a0a8:	bfbc      	itt	lt
 801a0aa:	2302      	movlt	r3, #2
 801a0ac:	fb92 f3f3 	sdivlt	r3, r2, r3
 801a0b0:	2500      	movs	r5, #0
 801a0b2:	260e      	movs	r6, #14
 801a0b4:	4295      	cmp	r5, r2
 801a0b6:	dc1e      	bgt.n	801a0f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a0b8:	fb06 4003 	mla	r0, r6, r3, r4
 801a0bc:	8887      	ldrh	r7, [r0, #4]
 801a0be:	42b9      	cmp	r1, r7
 801a0c0:	d01a      	beq.n	801a0f8 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801a0c2:	d20d      	bcs.n	801a0e0 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801a0c4:	1e5a      	subs	r2, r3, #1
 801a0c6:	4295      	cmp	r5, r2
 801a0c8:	dc15      	bgt.n	801a0f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a0ca:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801a0ce:	1a5b      	subs	r3, r3, r1
 801a0d0:	1ad3      	subs	r3, r2, r3
 801a0d2:	429a      	cmp	r2, r3
 801a0d4:	db0f      	blt.n	801a0f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a0d6:	429d      	cmp	r5, r3
 801a0d8:	ddec      	ble.n	801a0b4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801a0da:	1953      	adds	r3, r2, r5
 801a0dc:	105b      	asrs	r3, r3, #1
 801a0de:	e7e9      	b.n	801a0b4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801a0e0:	1c5d      	adds	r5, r3, #1
 801a0e2:	42aa      	cmp	r2, r5
 801a0e4:	db07      	blt.n	801a0f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a0e6:	8a43      	ldrh	r3, [r0, #18]
 801a0e8:	1acb      	subs	r3, r1, r3
 801a0ea:	442b      	add	r3, r5
 801a0ec:	429d      	cmp	r5, r3
 801a0ee:	dc02      	bgt.n	801a0f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a0f0:	429a      	cmp	r2, r3
 801a0f2:	dadf      	bge.n	801a0b4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801a0f4:	e7f1      	b.n	801a0da <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801a0f6:	2000      	movs	r0, #0
 801a0f8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a0fa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801a0fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a0fc:	4604      	mov	r4, r0
 801a0fe:	4617      	mov	r7, r2
 801a100:	461e      	mov	r6, r3
 801a102:	b911      	cbnz	r1, 801a10a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 801a104:	2500      	movs	r5, #0
 801a106:	4628      	mov	r0, r5
 801a108:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801a10a:	290a      	cmp	r1, #10
 801a10c:	d0fa      	beq.n	801a104 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a10e:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801a112:	4291      	cmp	r1, r2
 801a114:	d0f6      	beq.n	801a104 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a116:	f242 020b 	movw	r2, #8203	; 0x200b
 801a11a:	4291      	cmp	r1, r2
 801a11c:	d0f2      	beq.n	801a104 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a11e:	f7ff ffaf 	bl	801a080 <_ZNK8touchgfx9ConstFont4findEt>
 801a122:	4605      	mov	r5, r0
 801a124:	b950      	cbnz	r0, 801a13c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801a126:	6823      	ldr	r3, [r4, #0]
 801a128:	4620      	mov	r0, r4
 801a12a:	691b      	ldr	r3, [r3, #16]
 801a12c:	4798      	blx	r3
 801a12e:	4601      	mov	r1, r0
 801a130:	4620      	mov	r0, r4
 801a132:	f7ff ffa5 	bl	801a080 <_ZNK8touchgfx9ConstFont4findEt>
 801a136:	4605      	mov	r5, r0
 801a138:	2800      	cmp	r0, #0
 801a13a:	d0e3      	beq.n	801a104 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a13c:	6823      	ldr	r3, [r4, #0]
 801a13e:	4629      	mov	r1, r5
 801a140:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801a142:	4620      	mov	r0, r4
 801a144:	4798      	blx	r3
 801a146:	6038      	str	r0, [r7, #0]
 801a148:	6823      	ldr	r3, [r4, #0]
 801a14a:	4620      	mov	r0, r4
 801a14c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801a14e:	4798      	blx	r3
 801a150:	7030      	strb	r0, [r6, #0]
 801a152:	e7d8      	b.n	801a106 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801a154 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 801a154:	b538      	push	{r3, r4, r5, lr}
 801a156:	4605      	mov	r5, r0
 801a158:	f002 fa6e 	bl	801c638 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801a15c:	4604      	mov	r4, r0
 801a15e:	4628      	mov	r0, r5
 801a160:	f002 f9ae 	bl	801c4c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801a164:	2800      	cmp	r0, #0
 801a166:	bf14      	ite	ne
 801a168:	2002      	movne	r0, #2
 801a16a:	2000      	moveq	r0, #0
 801a16c:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801a170:	b280      	uxth	r0, r0
 801a172:	bd38      	pop	{r3, r4, r5, pc}

0801a174 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 801a174:	b538      	push	{r3, r4, r5, lr}
 801a176:	4605      	mov	r5, r0
 801a178:	f002 fa5e 	bl	801c638 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801a17c:	4604      	mov	r4, r0
 801a17e:	4628      	mov	r0, r5
 801a180:	f002 f99e 	bl	801c4c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801a184:	2800      	cmp	r0, #0
 801a186:	bf14      	ite	ne
 801a188:	2002      	movne	r0, #2
 801a18a:	2000      	moveq	r0, #0
 801a18c:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801a190:	f040 0001 	orr.w	r0, r0, #1
 801a194:	b280      	uxth	r0, r0
 801a196:	bd38      	pop	{r3, r4, r5, pc}

0801a198 <_ZN8touchgfx4clzuEm>:
 801a198:	4603      	mov	r3, r0
 801a19a:	b1c8      	cbz	r0, 801a1d0 <_ZN8touchgfx4clzuEm+0x38>
 801a19c:	0c02      	lsrs	r2, r0, #16
 801a19e:	0412      	lsls	r2, r2, #16
 801a1a0:	b9a2      	cbnz	r2, 801a1cc <_ZN8touchgfx4clzuEm+0x34>
 801a1a2:	0403      	lsls	r3, r0, #16
 801a1a4:	2010      	movs	r0, #16
 801a1a6:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801a1aa:	bf04      	itt	eq
 801a1ac:	021b      	lsleq	r3, r3, #8
 801a1ae:	3008      	addeq	r0, #8
 801a1b0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801a1b4:	bf04      	itt	eq
 801a1b6:	011b      	lsleq	r3, r3, #4
 801a1b8:	3004      	addeq	r0, #4
 801a1ba:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801a1be:	bf04      	itt	eq
 801a1c0:	009b      	lsleq	r3, r3, #2
 801a1c2:	3002      	addeq	r0, #2
 801a1c4:	2b00      	cmp	r3, #0
 801a1c6:	db04      	blt.n	801a1d2 <_ZN8touchgfx4clzuEm+0x3a>
 801a1c8:	3001      	adds	r0, #1
 801a1ca:	4770      	bx	lr
 801a1cc:	2000      	movs	r0, #0
 801a1ce:	e7ea      	b.n	801a1a6 <_ZN8touchgfx4clzuEm+0xe>
 801a1d0:	2020      	movs	r0, #32
 801a1d2:	4770      	bx	lr

0801a1d4 <_ZN8touchgfx7muldivuEmmmRm>:
 801a1d4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801a1d8:	460f      	mov	r7, r1
 801a1da:	4615      	mov	r5, r2
 801a1dc:	461e      	mov	r6, r3
 801a1de:	4601      	mov	r1, r0
 801a1e0:	b100      	cbz	r0, 801a1e4 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801a1e2:	b927      	cbnz	r7, 801a1ee <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 801a1e4:	2000      	movs	r0, #0
 801a1e6:	6030      	str	r0, [r6, #0]
 801a1e8:	b002      	add	sp, #8
 801a1ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a1ee:	f7ff ffd3 	bl	801a198 <_ZN8touchgfx4clzuEm>
 801a1f2:	b980      	cbnz	r0, 801a216 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 801a1f4:	4638      	mov	r0, r7
 801a1f6:	f7ff ffcf 	bl	801a198 <_ZN8touchgfx4clzuEm>
 801a1fa:	2800      	cmp	r0, #0
 801a1fc:	dd05      	ble.n	801a20a <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801a1fe:	4633      	mov	r3, r6
 801a200:	462a      	mov	r2, r5
 801a202:	4638      	mov	r0, r7
 801a204:	f7ff ffe6 	bl	801a1d4 <_ZN8touchgfx7muldivuEmmmRm>
 801a208:	e7ee      	b.n	801a1e8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801a20a:	f04f 33ff 	mov.w	r3, #4294967295
 801a20e:	6033      	str	r3, [r6, #0]
 801a210:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801a214:	e7e8      	b.n	801a1e8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801a216:	fa37 f800 	lsrs.w	r8, r7, r0
 801a21a:	fb07 f301 	mul.w	r3, r7, r1
 801a21e:	d105      	bne.n	801a22c <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801a220:	fbb3 f0f5 	udiv	r0, r3, r5
 801a224:	fb05 3510 	mls	r5, r5, r0, r3
 801a228:	6035      	str	r5, [r6, #0]
 801a22a:	e7dd      	b.n	801a1e8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801a22c:	2301      	movs	r3, #1
 801a22e:	fa01 fa00 	lsl.w	sl, r1, r0
 801a232:	fa03 f000 	lsl.w	r0, r3, r0
 801a236:	3801      	subs	r0, #1
 801a238:	462a      	mov	r2, r5
 801a23a:	4633      	mov	r3, r6
 801a23c:	4038      	ands	r0, r7
 801a23e:	f7ff ffc9 	bl	801a1d4 <_ZN8touchgfx7muldivuEmmmRm>
 801a242:	fbba f9f5 	udiv	r9, sl, r5
 801a246:	462a      	mov	r2, r5
 801a248:	4607      	mov	r7, r0
 801a24a:	ab01      	add	r3, sp, #4
 801a24c:	fb05 a119 	mls	r1, r5, r9, sl
 801a250:	4640      	mov	r0, r8
 801a252:	f7ff ffbf 	bl	801a1d4 <_ZN8touchgfx7muldivuEmmmRm>
 801a256:	9b01      	ldr	r3, [sp, #4]
 801a258:	6832      	ldr	r2, [r6, #0]
 801a25a:	fb08 f409 	mul.w	r4, r8, r9
 801a25e:	441a      	add	r2, r3
 801a260:	fbb2 f3f5 	udiv	r3, r2, r5
 801a264:	441c      	add	r4, r3
 801a266:	443c      	add	r4, r7
 801a268:	4420      	add	r0, r4
 801a26a:	fb05 2513 	mls	r5, r5, r3, r2
 801a26e:	e7db      	b.n	801a228 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801a270 <_ZN8touchgfx6muldivElllRl>:
 801a270:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801a272:	2800      	cmp	r0, #0
 801a274:	bfba      	itte	lt
 801a276:	4240      	neglt	r0, r0
 801a278:	f04f 34ff 	movlt.w	r4, #4294967295
 801a27c:	2401      	movge	r4, #1
 801a27e:	2900      	cmp	r1, #0
 801a280:	bfbc      	itt	lt
 801a282:	4249      	neglt	r1, r1
 801a284:	4264      	neglt	r4, r4
 801a286:	2a00      	cmp	r2, #0
 801a288:	bfb6      	itet	lt
 801a28a:	4265      	neglt	r5, r4
 801a28c:	4625      	movge	r5, r4
 801a28e:	4252      	neglt	r2, r2
 801a290:	4288      	cmp	r0, r1
 801a292:	461e      	mov	r6, r3
 801a294:	bfc2      	ittt	gt
 801a296:	4603      	movgt	r3, r0
 801a298:	4608      	movgt	r0, r1
 801a29a:	4619      	movgt	r1, r3
 801a29c:	ab01      	add	r3, sp, #4
 801a29e:	f7ff ff99 	bl	801a1d4 <_ZN8touchgfx7muldivuEmmmRm>
 801a2a2:	9b01      	ldr	r3, [sp, #4]
 801a2a4:	4368      	muls	r0, r5
 801a2a6:	435c      	muls	r4, r3
 801a2a8:	6034      	str	r4, [r6, #0]
 801a2aa:	b002      	add	sp, #8
 801a2ac:	bd70      	pop	{r4, r5, r6, pc}

0801a2ae <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801a2ae:	2000      	movs	r0, #0
 801a2b0:	4770      	bx	lr

0801a2b2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 801a2b2:	2001      	movs	r0, #1
 801a2b4:	4770      	bx	lr

0801a2b6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801a2b6:	2002      	movs	r0, #2
 801a2b8:	4770      	bx	lr

0801a2ba <_ZN8touchgfx12GestureEventD1Ev>:
 801a2ba:	4770      	bx	lr

0801a2bc <_ZN8touchgfx9DragEventD1Ev>:
 801a2bc:	4770      	bx	lr

0801a2be <_ZN8touchgfx10ClickEventD1Ev>:
 801a2be:	4770      	bx	lr

0801a2c0 <_ZN8touchgfx10ClickEventD0Ev>:
 801a2c0:	b510      	push	{r4, lr}
 801a2c2:	210c      	movs	r1, #12
 801a2c4:	4604      	mov	r4, r0
 801a2c6:	f00f ffa2 	bl	802a20e <_ZdlPvj>
 801a2ca:	4620      	mov	r0, r4
 801a2cc:	bd10      	pop	{r4, pc}

0801a2ce <_ZN8touchgfx9DragEventD0Ev>:
 801a2ce:	b510      	push	{r4, lr}
 801a2d0:	2110      	movs	r1, #16
 801a2d2:	4604      	mov	r4, r0
 801a2d4:	f00f ff9b 	bl	802a20e <_ZdlPvj>
 801a2d8:	4620      	mov	r0, r4
 801a2da:	bd10      	pop	{r4, pc}

0801a2dc <_ZN8touchgfx12GestureEventD0Ev>:
 801a2dc:	b510      	push	{r4, lr}
 801a2de:	210c      	movs	r1, #12
 801a2e0:	4604      	mov	r4, r0
 801a2e2:	f00f ff94 	bl	802a20e <_ZdlPvj>
 801a2e6:	4620      	mov	r0, r4
 801a2e8:	bd10      	pop	{r4, pc}
	...

0801a2ec <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801a2ec:	b530      	push	{r4, r5, lr}
 801a2ee:	460d      	mov	r5, r1
 801a2f0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a2f2:	b087      	sub	sp, #28
 801a2f4:	4604      	mov	r4, r0
 801a2f6:	b301      	cbz	r1, 801a33a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801a2f8:	a801      	add	r0, sp, #4
 801a2fa:	f7ff fe87 	bl	801a00c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a2fe:	892a      	ldrh	r2, [r5, #8]
 801a300:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801a304:	7928      	ldrb	r0, [r5, #4]
 801a306:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801a30a:	f88d 0010 	strb.w	r0, [sp, #16]
 801a30e:	1ad2      	subs	r2, r2, r3
 801a310:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801a312:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a314:	f8ad 1012 	strh.w	r1, [sp, #18]
 801a318:	441a      	add	r2, r3
 801a31a:	896b      	ldrh	r3, [r5, #10]
 801a31c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801a320:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a324:	1b5b      	subs	r3, r3, r5
 801a326:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801a328:	442b      	add	r3, r5
 801a32a:	4d05      	ldr	r5, [pc, #20]	; (801a340 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801a32c:	9503      	str	r5, [sp, #12]
 801a32e:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a332:	6803      	ldr	r3, [r0, #0]
 801a334:	a903      	add	r1, sp, #12
 801a336:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a338:	4798      	blx	r3
 801a33a:	b007      	add	sp, #28
 801a33c:	bd30      	pop	{r4, r5, pc}
 801a33e:	bf00      	nop
 801a340:	0802f948 	.word	0x0802f948

0801a344 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801a344:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a348:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801a34a:	b08a      	sub	sp, #40	; 0x28
 801a34c:	4604      	mov	r4, r0
 801a34e:	460d      	mov	r5, r1
 801a350:	b113      	cbz	r3, 801a358 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801a352:	790b      	ldrb	r3, [r1, #4]
 801a354:	2b00      	cmp	r3, #0
 801a356:	d044      	beq.n	801a3e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a358:	f104 0804 	add.w	r8, r4, #4
 801a35c:	4641      	mov	r1, r8
 801a35e:	a803      	add	r0, sp, #12
 801a360:	f7ff fe54 	bl	801a00c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a364:	792b      	ldrb	r3, [r5, #4]
 801a366:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801a36a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801a36e:	b983      	cbnz	r3, 801a392 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801a370:	892a      	ldrh	r2, [r5, #8]
 801a372:	88e9      	ldrh	r1, [r5, #6]
 801a374:	f104 0336 	add.w	r3, r4, #54	; 0x36
 801a378:	1b92      	subs	r2, r2, r6
 801a37a:	1bc9      	subs	r1, r1, r7
 801a37c:	9301      	str	r3, [sp, #4]
 801a37e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 801a382:	9300      	str	r3, [sp, #0]
 801a384:	b212      	sxth	r2, r2
 801a386:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801a38a:	b209      	sxth	r1, r1
 801a38c:	4640      	mov	r0, r8
 801a38e:	f7f8 fc03 	bl	8012b98 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801a392:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801a394:	b329      	cbz	r1, 801a3e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a396:	a805      	add	r0, sp, #20
 801a398:	f7ff fe38 	bl	801a00c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a39c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801a3a0:	792b      	ldrb	r3, [r5, #4]
 801a3a2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a3a4:	f88d 3020 	strb.w	r3, [sp, #32]
 801a3a8:	1abf      	subs	r7, r7, r2
 801a3aa:	88ea      	ldrh	r2, [r5, #6]
 801a3ac:	4417      	add	r7, r2
 801a3ae:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 801a3b0:	4417      	add	r7, r2
 801a3b2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801a3b6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801a3ba:	1ab6      	subs	r6, r6, r2
 801a3bc:	892a      	ldrh	r2, [r5, #8]
 801a3be:	4416      	add	r6, r2
 801a3c0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801a3c2:	4416      	add	r6, r2
 801a3c4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 801a3c8:	4a07      	ldr	r2, [pc, #28]	; (801a3e8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801a3ca:	9207      	str	r2, [sp, #28]
 801a3cc:	2600      	movs	r6, #0
 801a3ce:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 801a3d2:	6803      	ldr	r3, [r0, #0]
 801a3d4:	a907      	add	r1, sp, #28
 801a3d6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a3d8:	4798      	blx	r3
 801a3da:	792b      	ldrb	r3, [r5, #4]
 801a3dc:	b10b      	cbz	r3, 801a3e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a3de:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801a3e2:	b00a      	add	sp, #40	; 0x28
 801a3e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a3e8:	0802f920 	.word	0x0802f920

0801a3ec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801a3ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a3f0:	460c      	mov	r4, r1
 801a3f2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a3f4:	b088      	sub	sp, #32
 801a3f6:	4605      	mov	r5, r0
 801a3f8:	2900      	cmp	r1, #0
 801a3fa:	d06d      	beq.n	801a4d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801a3fc:	4668      	mov	r0, sp
 801a3fe:	f7ff fe05 	bl	801a00c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a402:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 801a404:	88e3      	ldrh	r3, [r4, #6]
 801a406:	f9bd 8000 	ldrsh.w	r8, [sp]
 801a40a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801a40e:	440b      	add	r3, r1
 801a410:	b21b      	sxth	r3, r3
 801a412:	4543      	cmp	r3, r8
 801a414:	db31      	blt.n	801a47a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a416:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801a41a:	44c4      	add	ip, r8
 801a41c:	fa0f fc8c 	sxth.w	ip, ip
 801a420:	4563      	cmp	r3, ip
 801a422:	da2a      	bge.n	801a47a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a424:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801a426:	8926      	ldrh	r6, [r4, #8]
 801a428:	4416      	add	r6, r2
 801a42a:	b236      	sxth	r6, r6
 801a42c:	42be      	cmp	r6, r7
 801a42e:	db24      	blt.n	801a47a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a430:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801a434:	4438      	add	r0, r7
 801a436:	b200      	sxth	r0, r0
 801a438:	4286      	cmp	r6, r0
 801a43a:	da1e      	bge.n	801a47a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a43c:	8963      	ldrh	r3, [r4, #10]
 801a43e:	4419      	add	r1, r3
 801a440:	b209      	sxth	r1, r1
 801a442:	4541      	cmp	r1, r8
 801a444:	db08      	blt.n	801a458 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a446:	4561      	cmp	r1, ip
 801a448:	da06      	bge.n	801a458 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a44a:	89a3      	ldrh	r3, [r4, #12]
 801a44c:	441a      	add	r2, r3
 801a44e:	b212      	sxth	r2, r2
 801a450:	42ba      	cmp	r2, r7
 801a452:	db01      	blt.n	801a458 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a454:	4282      	cmp	r2, r0
 801a456:	db10      	blt.n	801a47a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a458:	4b21      	ldr	r3, [pc, #132]	; (801a4e0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801a45a:	9304      	str	r3, [sp, #16]
 801a45c:	2302      	movs	r3, #2
 801a45e:	f88d 3014 	strb.w	r3, [sp, #20]
 801a462:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a464:	2300      	movs	r3, #0
 801a466:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a46a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801a46e:	f8ad 301a 	strh.w	r3, [sp, #26]
 801a472:	6803      	ldr	r3, [r0, #0]
 801a474:	a904      	add	r1, sp, #16
 801a476:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a478:	4798      	blx	r3
 801a47a:	1d29      	adds	r1, r5, #4
 801a47c:	a802      	add	r0, sp, #8
 801a47e:	f7ff fdc5 	bl	801a00c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a482:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a486:	88e0      	ldrh	r0, [r4, #6]
 801a488:	7921      	ldrb	r1, [r4, #4]
 801a48a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801a48e:	8922      	ldrh	r2, [r4, #8]
 801a490:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801a492:	f88d 1014 	strb.w	r1, [sp, #20]
 801a496:	eba3 0808 	sub.w	r8, r3, r8
 801a49a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a49e:	1bdf      	subs	r7, r3, r7
 801a4a0:	b2bb      	uxth	r3, r7
 801a4a2:	fa1f f888 	uxth.w	r8, r8
 801a4a6:	8967      	ldrh	r7, [r4, #10]
 801a4a8:	89a4      	ldrh	r4, [r4, #12]
 801a4aa:	4440      	add	r0, r8
 801a4ac:	4460      	add	r0, ip
 801a4ae:	441a      	add	r2, r3
 801a4b0:	44b8      	add	r8, r7
 801a4b2:	4423      	add	r3, r4
 801a4b4:	f8ad 0016 	strh.w	r0, [sp, #22]
 801a4b8:	4433      	add	r3, r6
 801a4ba:	4432      	add	r2, r6
 801a4bc:	44e0      	add	r8, ip
 801a4be:	4c09      	ldr	r4, [pc, #36]	; (801a4e4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801a4c0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a4c2:	9404      	str	r4, [sp, #16]
 801a4c4:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a4c8:	f8ad 801a 	strh.w	r8, [sp, #26]
 801a4cc:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a4d0:	6803      	ldr	r3, [r0, #0]
 801a4d2:	a904      	add	r1, sp, #16
 801a4d4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a4d6:	4798      	blx	r3
 801a4d8:	b008      	add	sp, #32
 801a4da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a4de:	bf00      	nop
 801a4e0:	0802f920 	.word	0x0802f920
 801a4e4:	0802f934 	.word	0x0802f934

0801a4e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801a4e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801a4ea:	4604      	mov	r4, r0
 801a4ec:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801a4f0:	3201      	adds	r2, #1
 801a4f2:	d112      	bne.n	801a51a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801a4f4:	6803      	ldr	r3, [r0, #0]
 801a4f6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801a4fa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a4fe:	f8ad 1004 	strh.w	r1, [sp, #4]
 801a502:	2500      	movs	r5, #0
 801a504:	9500      	str	r5, [sp, #0]
 801a506:	466d      	mov	r5, sp
 801a508:	4629      	mov	r1, r5
 801a50a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801a50e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a510:	4798      	blx	r3
 801a512:	e895 0003 	ldmia.w	r5, {r0, r1}
 801a516:	e884 0003 	stmia.w	r4, {r0, r1}
 801a51a:	4620      	mov	r0, r4
 801a51c:	b003      	add	sp, #12
 801a51e:	bd30      	pop	{r4, r5, pc}

0801a520 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801a520:	b513      	push	{r0, r1, r4, lr}
 801a522:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801a526:	3301      	adds	r3, #1
 801a528:	4604      	mov	r4, r0
 801a52a:	d109      	bne.n	801a540 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801a52c:	4601      	mov	r1, r0
 801a52e:	4668      	mov	r0, sp
 801a530:	f7ff fd6c 	bl	801a00c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a534:	f8bd 3000 	ldrh.w	r3, [sp]
 801a538:	8423      	strh	r3, [r4, #32]
 801a53a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a53e:	8463      	strh	r3, [r4, #34]	; 0x22
 801a540:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801a544:	b002      	add	sp, #8
 801a546:	bd10      	pop	{r4, pc}

0801a548 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801a548:	b513      	push	{r0, r1, r4, lr}
 801a54a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801a54e:	3301      	adds	r3, #1
 801a550:	4604      	mov	r4, r0
 801a552:	d109      	bne.n	801a568 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801a554:	4601      	mov	r1, r0
 801a556:	4668      	mov	r0, sp
 801a558:	f7ff fd58 	bl	801a00c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a55c:	f8bd 3000 	ldrh.w	r3, [sp]
 801a560:	8423      	strh	r3, [r4, #32]
 801a562:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a566:	8463      	strh	r3, [r4, #34]	; 0x22
 801a568:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801a56c:	b002      	add	sp, #8
 801a56e:	bd10      	pop	{r4, pc}

0801a570 <_ZN8touchgfx6ScreenC1Ev>:
 801a570:	b570      	push	{r4, r5, r6, lr}
 801a572:	4605      	mov	r5, r0
 801a574:	4b16      	ldr	r3, [pc, #88]	; (801a5d0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801a576:	f845 3b04 	str.w	r3, [r5], #4
 801a57a:	2300      	movs	r3, #0
 801a57c:	8103      	strh	r3, [r0, #8]
 801a57e:	8143      	strh	r3, [r0, #10]
 801a580:	8183      	strh	r3, [r0, #12]
 801a582:	81c3      	strh	r3, [r0, #14]
 801a584:	8203      	strh	r3, [r0, #16]
 801a586:	8243      	strh	r3, [r0, #18]
 801a588:	8283      	strh	r3, [r0, #20]
 801a58a:	82c3      	strh	r3, [r0, #22]
 801a58c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801a590:	6203      	str	r3, [r0, #32]
 801a592:	8483      	strh	r3, [r0, #36]	; 0x24
 801a594:	84c3      	strh	r3, [r0, #38]	; 0x26
 801a596:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801a59a:	4a0e      	ldr	r2, [pc, #56]	; (801a5d4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801a59c:	6343      	str	r3, [r0, #52]	; 0x34
 801a59e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801a5a2:	4b0d      	ldr	r3, [pc, #52]	; (801a5d8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801a5a4:	6042      	str	r2, [r0, #4]
 801a5a6:	f9b3 6000 	ldrsh.w	r6, [r3]
 801a5aa:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801a5ac:	4a0b      	ldr	r2, [pc, #44]	; (801a5dc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801a5ae:	4604      	mov	r4, r0
 801a5b0:	2101      	movs	r1, #1
 801a5b2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801a5b6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801a5ba:	f9b2 1000 	ldrsh.w	r1, [r2]
 801a5be:	4628      	mov	r0, r5
 801a5c0:	4798      	blx	r3
 801a5c2:	6863      	ldr	r3, [r4, #4]
 801a5c4:	4628      	mov	r0, r5
 801a5c6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801a5c8:	4631      	mov	r1, r6
 801a5ca:	4798      	blx	r3
 801a5cc:	4620      	mov	r0, r4
 801a5ce:	bd70      	pop	{r4, r5, r6, pc}
 801a5d0:	0802f95c 	.word	0x0802f95c
 801a5d4:	0802ede8 	.word	0x0802ede8
 801a5d8:	2000231e 	.word	0x2000231e
 801a5dc:	2000231c 	.word	0x2000231c

0801a5e0 <_ZN8touchgfx6Screen4drawEv>:
 801a5e0:	b507      	push	{r0, r1, r2, lr}
 801a5e2:	4b09      	ldr	r3, [pc, #36]	; (801a608 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801a5e4:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a5e8:	4b08      	ldr	r3, [pc, #32]	; (801a60c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801a5ea:	f8ad 2004 	strh.w	r2, [sp, #4]
 801a5ee:	f9b3 3000 	ldrsh.w	r3, [r3]
 801a5f2:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a5f6:	6803      	ldr	r3, [r0, #0]
 801a5f8:	2100      	movs	r1, #0
 801a5fa:	9100      	str	r1, [sp, #0]
 801a5fc:	689b      	ldr	r3, [r3, #8]
 801a5fe:	4669      	mov	r1, sp
 801a600:	4798      	blx	r3
 801a602:	b003      	add	sp, #12
 801a604:	f85d fb04 	ldr.w	pc, [sp], #4
 801a608:	2000231c 	.word	0x2000231c
 801a60c:	2000231e 	.word	0x2000231e

0801a610 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801a610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a614:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801a618:	2b00      	cmp	r3, #0
 801a61a:	b089      	sub	sp, #36	; 0x24
 801a61c:	4680      	mov	r8, r0
 801a61e:	460c      	mov	r4, r1
 801a620:	4615      	mov	r5, r2
 801a622:	dd0e      	ble.n	801a642 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a624:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801a628:	2b00      	cmp	r3, #0
 801a62a:	dd0a      	ble.n	801a642 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a62c:	4628      	mov	r0, r5
 801a62e:	f7ff ff5b 	bl	801a4e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a632:	4621      	mov	r1, r4
 801a634:	f7fe fab0 	bl	8018b98 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801a638:	69eb      	ldr	r3, [r5, #28]
 801a63a:	b928      	cbnz	r0, 801a648 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801a63c:	461d      	mov	r5, r3
 801a63e:	2b00      	cmp	r3, #0
 801a640:	d1f4      	bne.n	801a62c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801a642:	b009      	add	sp, #36	; 0x24
 801a644:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a648:	ae04      	add	r6, sp, #16
 801a64a:	2b00      	cmp	r3, #0
 801a64c:	f000 80b5 	beq.w	801a7ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a650:	682b      	ldr	r3, [r5, #0]
 801a652:	4629      	mov	r1, r5
 801a654:	68db      	ldr	r3, [r3, #12]
 801a656:	a802      	add	r0, sp, #8
 801a658:	4798      	blx	r3
 801a65a:	4628      	mov	r0, r5
 801a65c:	f7ff ff60 	bl	801a520 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801a660:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801a664:	4407      	add	r7, r0
 801a666:	4628      	mov	r0, r5
 801a668:	f7ff ff6e 	bl	801a548 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801a66c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a670:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801a674:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a678:	4418      	add	r0, r3
 801a67a:	4621      	mov	r1, r4
 801a67c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801a680:	f8ad 0012 	strh.w	r0, [sp, #18]
 801a684:	b23f      	sxth	r7, r7
 801a686:	4630      	mov	r0, r6
 801a688:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a68c:	f8ad 7010 	strh.w	r7, [sp, #16]
 801a690:	f7f8 fb66 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 801a694:	4628      	mov	r0, r5
 801a696:	f7ff ff27 	bl	801a4e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a69a:	4602      	mov	r2, r0
 801a69c:	e896 0003 	ldmia.w	r6, {r0, r1}
 801a6a0:	ab06      	add	r3, sp, #24
 801a6a2:	e883 0003 	stmia.w	r3, {r0, r1}
 801a6a6:	4611      	mov	r1, r2
 801a6a8:	4618      	mov	r0, r3
 801a6aa:	f7f8 fb59 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 801a6ae:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801a6b2:	f9b4 1000 	ldrsh.w	r1, [r4]
 801a6b6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801a6ba:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801a6be:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801a6c2:	4299      	cmp	r1, r3
 801a6c4:	d10b      	bne.n	801a6de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a6c6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a6ca:	4552      	cmp	r2, sl
 801a6cc:	d107      	bne.n	801a6de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a6ce:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801a6d2:	455a      	cmp	r2, fp
 801a6d4:	d103      	bne.n	801a6de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a6d6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801a6da:	454a      	cmp	r2, r9
 801a6dc:	d06d      	beq.n	801a7ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a6de:	f1bb 0f00 	cmp.w	fp, #0
 801a6e2:	dd65      	ble.n	801a7b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801a6e4:	f1b9 0f00 	cmp.w	r9, #0
 801a6e8:	dd62      	ble.n	801a7b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801a6ea:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a6ee:	fa1f f08a 	uxth.w	r0, sl
 801a6f2:	4552      	cmp	r2, sl
 801a6f4:	9000      	str	r0, [sp, #0]
 801a6f6:	da12      	bge.n	801a71e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801a6f8:	9301      	str	r3, [sp, #4]
 801a6fa:	9b00      	ldr	r3, [sp, #0]
 801a6fc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a700:	f8ad 2012 	strh.w	r2, [sp, #18]
 801a704:	1a9a      	subs	r2, r3, r2
 801a706:	f8ad 1010 	strh.w	r1, [sp, #16]
 801a70a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801a70e:	f8ad 2016 	strh.w	r2, [sp, #22]
 801a712:	69ea      	ldr	r2, [r5, #28]
 801a714:	4631      	mov	r1, r6
 801a716:	4640      	mov	r0, r8
 801a718:	f7ff ff7a 	bl	801a610 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a71c:	9b01      	ldr	r3, [sp, #4]
 801a71e:	f9b4 2000 	ldrsh.w	r2, [r4]
 801a722:	429a      	cmp	r2, r3
 801a724:	b29f      	uxth	r7, r3
 801a726:	da0d      	bge.n	801a744 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801a728:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a72c:	1aba      	subs	r2, r7, r2
 801a72e:	f8ad a012 	strh.w	sl, [sp, #18]
 801a732:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a736:	f8ad 9016 	strh.w	r9, [sp, #22]
 801a73a:	69ea      	ldr	r2, [r5, #28]
 801a73c:	4631      	mov	r1, r6
 801a73e:	4640      	mov	r0, r8
 801a740:	f7ff ff66 	bl	801a610 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a744:	8822      	ldrh	r2, [r4, #0]
 801a746:	88a3      	ldrh	r3, [r4, #4]
 801a748:	445f      	add	r7, fp
 801a74a:	4413      	add	r3, r2
 801a74c:	b29b      	uxth	r3, r3
 801a74e:	b2bf      	uxth	r7, r7
 801a750:	b23a      	sxth	r2, r7
 801a752:	b219      	sxth	r1, r3
 801a754:	4291      	cmp	r1, r2
 801a756:	dd0d      	ble.n	801a774 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801a758:	1bdb      	subs	r3, r3, r7
 801a75a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a75e:	f8ad a012 	strh.w	sl, [sp, #18]
 801a762:	f8ad 3014 	strh.w	r3, [sp, #20]
 801a766:	f8ad 9016 	strh.w	r9, [sp, #22]
 801a76a:	69ea      	ldr	r2, [r5, #28]
 801a76c:	4631      	mov	r1, r6
 801a76e:	4640      	mov	r0, r8
 801a770:	f7ff ff4e 	bl	801a610 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a774:	88e2      	ldrh	r2, [r4, #6]
 801a776:	8863      	ldrh	r3, [r4, #2]
 801a778:	4413      	add	r3, r2
 801a77a:	9a00      	ldr	r2, [sp, #0]
 801a77c:	444a      	add	r2, r9
 801a77e:	b29b      	uxth	r3, r3
 801a780:	fa1f f982 	uxth.w	r9, r2
 801a784:	fa0f f289 	sxth.w	r2, r9
 801a788:	b219      	sxth	r1, r3
 801a78a:	428a      	cmp	r2, r1
 801a78c:	da15      	bge.n	801a7ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a78e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a792:	f9b4 0000 	ldrsh.w	r0, [r4]
 801a796:	f8ad 1014 	strh.w	r1, [sp, #20]
 801a79a:	eba3 0309 	sub.w	r3, r3, r9
 801a79e:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a7a2:	f8ad 2012 	strh.w	r2, [sp, #18]
 801a7a6:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a7aa:	69ea      	ldr	r2, [r5, #28]
 801a7ac:	4631      	mov	r1, r6
 801a7ae:	e001      	b.n	801a7b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801a7b0:	69ea      	ldr	r2, [r5, #28]
 801a7b2:	4621      	mov	r1, r4
 801a7b4:	4640      	mov	r0, r8
 801a7b6:	f7ff ff2b 	bl	801a610 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a7ba:	4628      	mov	r0, r5
 801a7bc:	f7ff fe94 	bl	801a4e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a7c0:	6861      	ldr	r1, [r4, #4]
 801a7c2:	4602      	mov	r2, r0
 801a7c4:	6820      	ldr	r0, [r4, #0]
 801a7c6:	4633      	mov	r3, r6
 801a7c8:	c303      	stmia	r3!, {r0, r1}
 801a7ca:	4611      	mov	r1, r2
 801a7cc:	4630      	mov	r0, r6
 801a7ce:	f7f8 fac7 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 801a7d2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801a7d6:	2b00      	cmp	r3, #0
 801a7d8:	f77f af33 	ble.w	801a642 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a7dc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801a7e0:	2b00      	cmp	r3, #0
 801a7e2:	f77f af2e 	ble.w	801a642 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a7e6:	4628      	mov	r0, r5
 801a7e8:	f7ff fe9a 	bl	801a520 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801a7ec:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801a7f0:	1a18      	subs	r0, r3, r0
 801a7f2:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a7f6:	4628      	mov	r0, r5
 801a7f8:	f7ff fea6 	bl	801a548 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801a7fc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801a800:	1a18      	subs	r0, r3, r0
 801a802:	f8ad 0012 	strh.w	r0, [sp, #18]
 801a806:	682b      	ldr	r3, [r5, #0]
 801a808:	4631      	mov	r1, r6
 801a80a:	689b      	ldr	r3, [r3, #8]
 801a80c:	4628      	mov	r0, r5
 801a80e:	4798      	blx	r3
 801a810:	e717      	b.n	801a642 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801a812 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801a812:	b570      	push	{r4, r5, r6, lr}
 801a814:	460c      	mov	r4, r1
 801a816:	b086      	sub	sp, #24
 801a818:	1d06      	adds	r6, r0, #4
 801a81a:	2300      	movs	r3, #0
 801a81c:	4631      	mov	r1, r6
 801a81e:	4605      	mov	r5, r0
 801a820:	a802      	add	r0, sp, #8
 801a822:	9301      	str	r3, [sp, #4]
 801a824:	f7ff fbf2 	bl	801a00c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a828:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a82c:	8822      	ldrh	r2, [r4, #0]
 801a82e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801a832:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a836:	f8ad 0014 	strh.w	r0, [sp, #20]
 801a83a:	1ad2      	subs	r2, r2, r3
 801a83c:	8863      	ldrh	r3, [r4, #2]
 801a83e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a842:	1a5b      	subs	r3, r3, r1
 801a844:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801a848:	f8ad 1016 	strh.w	r1, [sp, #22]
 801a84c:	aa01      	add	r2, sp, #4
 801a84e:	a904      	add	r1, sp, #16
 801a850:	4630      	mov	r0, r6
 801a852:	f8ad 3012 	strh.w	r3, [sp, #18]
 801a856:	f7f8 fb5b 	bl	8012f10 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801a85a:	9a01      	ldr	r2, [sp, #4]
 801a85c:	b11a      	cbz	r2, 801a866 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801a85e:	4621      	mov	r1, r4
 801a860:	4628      	mov	r0, r5
 801a862:	f7ff fed5 	bl	801a610 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a866:	b006      	add	sp, #24
 801a868:	bd70      	pop	{r4, r5, r6, pc}

0801a86a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801a86a:	b530      	push	{r4, r5, lr}
 801a86c:	4602      	mov	r2, r0
 801a86e:	4604      	mov	r4, r0
 801a870:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801a874:	b085      	sub	sp, #20
 801a876:	460d      	mov	r5, r1
 801a878:	6851      	ldr	r1, [r2, #4]
 801a87a:	466b      	mov	r3, sp
 801a87c:	c303      	stmia	r3!, {r0, r1}
 801a87e:	4629      	mov	r1, r5
 801a880:	4668      	mov	r0, sp
 801a882:	f7f8 fa6d 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 801a886:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801a88a:	b12b      	cbz	r3, 801a898 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801a88c:	4669      	mov	r1, sp
 801a88e:	4620      	mov	r0, r4
 801a890:	f7ff ffbf 	bl	801a812 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801a894:	b005      	add	sp, #20
 801a896:	bd30      	pop	{r4, r5, pc}
 801a898:	3404      	adds	r4, #4
 801a89a:	4621      	mov	r1, r4
 801a89c:	a802      	add	r0, sp, #8
 801a89e:	f7ff fbb5 	bl	801a00c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a8a2:	f8bd 3000 	ldrh.w	r3, [sp]
 801a8a6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801a8aa:	1a9b      	subs	r3, r3, r2
 801a8ac:	f8ad 3000 	strh.w	r3, [sp]
 801a8b0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a8b4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a8b8:	4669      	mov	r1, sp
 801a8ba:	1a9b      	subs	r3, r3, r2
 801a8bc:	4620      	mov	r0, r4
 801a8be:	f8ad 3002 	strh.w	r3, [sp, #2]
 801a8c2:	f7f8 faec 	bl	8012e9e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801a8c6:	e7e5      	b.n	801a894 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801a8c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801a8c8:	680a      	ldr	r2, [r1, #0]
 801a8ca:	460b      	mov	r3, r1
 801a8cc:	6992      	ldr	r2, [r2, #24]
 801a8ce:	1d01      	adds	r1, r0, #4
 801a8d0:	4618      	mov	r0, r3
 801a8d2:	4710      	bx	r2

0801a8d4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 801a8d4:	4298      	cmp	r0, r3
 801a8d6:	d200      	bcs.n	801a8da <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 801a8d8:	b913      	cbnz	r3, 801a8e0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801a8da:	440a      	add	r2, r1
 801a8dc:	b210      	sxth	r0, r2
 801a8de:	4770      	bx	lr
 801a8e0:	ee07 0a90 	vmov	s15, r0
 801a8e4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801a8e8:	ee07 3a90 	vmov	s15, r3
 801a8ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a8f0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801a8f4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a8f8:	ee37 7a66 	vsub.f32	s14, s14, s13
 801a8fc:	ee07 2a90 	vmov	s15, r2
 801a900:	ee67 5a07 	vmul.f32	s11, s14, s14
 801a904:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801a908:	eee5 6a87 	vfma.f32	s13, s11, s14
 801a90c:	ee07 1a90 	vmov	s15, r1
 801a910:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a914:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a918:	eee6 7a26 	vfma.f32	s15, s12, s13
 801a91c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a920:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a924:	bfcc      	ite	gt
 801a926:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a92a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a92e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a932:	ee17 3a90 	vmov	r3, s15
 801a936:	b218      	sxth	r0, r3
 801a938:	4770      	bx	lr

0801a93a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801a93a:	4298      	cmp	r0, r3
 801a93c:	d200      	bcs.n	801a940 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801a93e:	b913      	cbnz	r3, 801a946 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 801a940:	440a      	add	r2, r1
 801a942:	b210      	sxth	r0, r2
 801a944:	4770      	bx	lr
 801a946:	ee07 2a90 	vmov	s15, r2
 801a94a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801a94e:	ee07 0a90 	vmov	s15, r0
 801a952:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801a956:	ee67 7a27 	vmul.f32	s15, s14, s15
 801a95a:	ee07 3a10 	vmov	s14, r3
 801a95e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801a962:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801a966:	ee07 1a90 	vmov	s15, r1
 801a96a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a96e:	ee77 7a27 	vadd.f32	s15, s14, s15
 801a972:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a976:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a97a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a97e:	bfcc      	ite	gt
 801a980:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a984:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a988:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a98c:	ee17 3a90 	vmov	r3, s15
 801a990:	b218      	sxth	r0, r3
 801a992:	4770      	bx	lr

0801a994 <_ZN8touchgfx12TextProviderC1Ev>:
 801a994:	b538      	push	{r3, r4, r5, lr}
 801a996:	2500      	movs	r5, #0
 801a998:	2302      	movs	r3, #2
 801a99a:	4604      	mov	r4, r0
 801a99c:	e9c0 5500 	strd	r5, r5, [r0]
 801a9a0:	7403      	strb	r3, [r0, #16]
 801a9a2:	6145      	str	r5, [r0, #20]
 801a9a4:	7605      	strb	r5, [r0, #24]
 801a9a6:	83c5      	strh	r5, [r0, #30]
 801a9a8:	8405      	strh	r5, [r0, #32]
 801a9aa:	86c5      	strh	r5, [r0, #54]	; 0x36
 801a9ac:	8705      	strh	r5, [r0, #56]	; 0x38
 801a9ae:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801a9b0:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801a9b4:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801a9b8:	220e      	movs	r2, #14
 801a9ba:	4629      	mov	r1, r5
 801a9bc:	304c      	adds	r0, #76	; 0x4c
 801a9be:	f010 fe1c 	bl	802b5fa <memset>
 801a9c2:	2301      	movs	r3, #1
 801a9c4:	4620      	mov	r0, r4
 801a9c6:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801a9ca:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801a9ce:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801a9d2:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801a9d6:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801a9da:	f7f5 f80d 	bl	800f9f8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801a9de:	4620      	mov	r0, r4
 801a9e0:	bd38      	pop	{r3, r4, r5, pc}

0801a9e2 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801a9e2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801a9e4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a9e8:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801a9ea:	fab0 f080 	clz	r0, r0
 801a9ee:	0940      	lsrs	r0, r0, #5
 801a9f0:	4770      	bx	lr

0801a9f2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801a9f2:	b530      	push	{r4, r5, lr}
 801a9f4:	2500      	movs	r5, #0
 801a9f6:	2401      	movs	r4, #1
 801a9f8:	6843      	ldr	r3, [r0, #4]
 801a9fa:	b913      	cbnz	r3, 801aa02 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801a9fc:	6803      	ldr	r3, [r0, #0]
 801a9fe:	b313      	cbz	r3, 801aa46 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801aa00:	6043      	str	r3, [r0, #4]
 801aa02:	7e03      	ldrb	r3, [r0, #24]
 801aa04:	b143      	cbz	r3, 801aa18 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801aa06:	6943      	ldr	r3, [r0, #20]
 801aa08:	b12b      	cbz	r3, 801aa16 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801aa0a:	881a      	ldrh	r2, [r3, #0]
 801aa0c:	b11a      	cbz	r2, 801aa16 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801aa0e:	1c9a      	adds	r2, r3, #2
 801aa10:	6142      	str	r2, [r0, #20]
 801aa12:	8818      	ldrh	r0, [r3, #0]
 801aa14:	bd30      	pop	{r4, r5, pc}
 801aa16:	7605      	strb	r5, [r0, #24]
 801aa18:	6843      	ldr	r3, [r0, #4]
 801aa1a:	8819      	ldrh	r1, [r3, #0]
 801aa1c:	b199      	cbz	r1, 801aa46 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801aa1e:	1c9a      	adds	r2, r3, #2
 801aa20:	2902      	cmp	r1, #2
 801aa22:	6042      	str	r2, [r0, #4]
 801aa24:	d1f5      	bne.n	801aa12 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801aa26:	7c03      	ldrb	r3, [r0, #16]
 801aa28:	2b01      	cmp	r3, #1
 801aa2a:	d8e5      	bhi.n	801a9f8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801aa2c:	1c5a      	adds	r2, r3, #1
 801aa2e:	3302      	adds	r3, #2
 801aa30:	7402      	strb	r2, [r0, #16]
 801aa32:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801aa36:	6143      	str	r3, [r0, #20]
 801aa38:	2b00      	cmp	r3, #0
 801aa3a:	d0dd      	beq.n	801a9f8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801aa3c:	881b      	ldrh	r3, [r3, #0]
 801aa3e:	2b00      	cmp	r3, #0
 801aa40:	d0da      	beq.n	801a9f8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801aa42:	7604      	strb	r4, [r0, #24]
 801aa44:	e7d8      	b.n	801a9f8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801aa46:	2000      	movs	r0, #0
 801aa48:	e7e4      	b.n	801aa14 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801aa4a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801aa4a:	b430      	push	{r4, r5}
 801aa4c:	6001      	str	r1, [r0, #0]
 801aa4e:	2100      	movs	r1, #0
 801aa50:	6041      	str	r1, [r0, #4]
 801aa52:	6815      	ldr	r5, [r2, #0]
 801aa54:	6085      	str	r5, [r0, #8]
 801aa56:	6852      	ldr	r2, [r2, #4]
 801aa58:	6443      	str	r3, [r0, #68]	; 0x44
 801aa5a:	9b02      	ldr	r3, [sp, #8]
 801aa5c:	60c2      	str	r2, [r0, #12]
 801aa5e:	7401      	strb	r1, [r0, #16]
 801aa60:	6141      	str	r1, [r0, #20]
 801aa62:	7601      	strb	r1, [r0, #24]
 801aa64:	8701      	strh	r1, [r0, #56]	; 0x38
 801aa66:	8401      	strh	r1, [r0, #32]
 801aa68:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801aa6c:	6483      	str	r3, [r0, #72]	; 0x48
 801aa6e:	bc30      	pop	{r4, r5}
 801aa70:	f7f4 bfc2 	b.w	800f9f8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801aa74 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801aa74:	b408      	push	{r3}
 801aa76:	b510      	push	{r4, lr}
 801aa78:	b085      	sub	sp, #20
 801aa7a:	ac07      	add	r4, sp, #28
 801aa7c:	f854 3b04 	ldr.w	r3, [r4], #4
 801aa80:	9300      	str	r3, [sp, #0]
 801aa82:	4613      	mov	r3, r2
 801aa84:	4622      	mov	r2, r4
 801aa86:	9403      	str	r4, [sp, #12]
 801aa88:	f7ff ffdf 	bl	801aa4a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801aa8c:	b005      	add	sp, #20
 801aa8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801aa92:	b001      	add	sp, #4
 801aa94:	4770      	bx	lr

0801aa96 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801aa96:	b5f0      	push	{r4, r5, r6, r7, lr}
 801aa98:	4605      	mov	r5, r0
 801aa9a:	4608      	mov	r0, r1
 801aa9c:	b1e9      	cbz	r1, 801aada <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801aa9e:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801aaa2:	460b      	mov	r3, r1
 801aaa4:	f101 0708 	add.w	r7, r1, #8
 801aaa8:	4622      	mov	r2, r4
 801aaaa:	6818      	ldr	r0, [r3, #0]
 801aaac:	6859      	ldr	r1, [r3, #4]
 801aaae:	4626      	mov	r6, r4
 801aab0:	c603      	stmia	r6!, {r0, r1}
 801aab2:	3308      	adds	r3, #8
 801aab4:	42bb      	cmp	r3, r7
 801aab6:	4634      	mov	r4, r6
 801aab8:	d1f7      	bne.n	801aaaa <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801aaba:	6818      	ldr	r0, [r3, #0]
 801aabc:	6030      	str	r0, [r6, #0]
 801aabe:	889b      	ldrh	r3, [r3, #4]
 801aac0:	80b3      	strh	r3, [r6, #4]
 801aac2:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801aac6:	015b      	lsls	r3, r3, #5
 801aac8:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801aacc:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801aad0:	430b      	orrs	r3, r1
 801aad2:	425b      	negs	r3, r3
 801aad4:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801aad8:	4610      	mov	r0, r2
 801aada:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801aadc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801aadc:	b538      	push	{r3, r4, r5, lr}
 801aade:	460c      	mov	r4, r1
 801aae0:	6811      	ldr	r1, [r2, #0]
 801aae2:	4610      	mov	r0, r2
 801aae4:	68cd      	ldr	r5, [r1, #12]
 801aae6:	4619      	mov	r1, r3
 801aae8:	47a8      	blx	r5
 801aaea:	2800      	cmp	r0, #0
 801aaec:	bf08      	it	eq
 801aaee:	4620      	moveq	r0, r4
 801aaf0:	bd38      	pop	{r3, r4, r5, pc}
	...

0801aaf4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801aaf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801aaf6:	4604      	mov	r4, r0
 801aaf8:	4615      	mov	r5, r2
 801aafa:	4608      	mov	r0, r1
 801aafc:	b93a      	cbnz	r2, 801ab0e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801aafe:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801ab02:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801ab06:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801ab0a:	4628      	mov	r0, r5
 801ab0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801ab0e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801ab12:	8893      	ldrh	r3, [r2, #4]
 801ab14:	ea4f 160c 	mov.w	r6, ip, lsl #4
 801ab18:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801ab1c:	79ee      	ldrb	r6, [r5, #7]
 801ab1e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801ab22:	4316      	orrs	r6, r2
 801ab24:	19da      	adds	r2, r3, r7
 801ab26:	b291      	uxth	r1, r2
 801ab28:	291d      	cmp	r1, #29
 801ab2a:	b2b7      	uxth	r7, r6
 801ab2c:	d87a      	bhi.n	801ac24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801ab2e:	2201      	movs	r2, #1
 801ab30:	408a      	lsls	r2, r1
 801ab32:	4975      	ldr	r1, [pc, #468]	; (801ad08 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 801ab34:	420a      	tst	r2, r1
 801ab36:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801ab3a:	d12d      	bne.n	801ab98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801ab3c:	f412 7f60 	tst.w	r2, #896	; 0x380
 801ab40:	d070      	beq.n	801ac24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801ab42:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801ab46:	462b      	mov	r3, r5
 801ab48:	f105 0e08 	add.w	lr, r5, #8
 801ab4c:	4615      	mov	r5, r2
 801ab4e:	6818      	ldr	r0, [r3, #0]
 801ab50:	6859      	ldr	r1, [r3, #4]
 801ab52:	4694      	mov	ip, r2
 801ab54:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801ab58:	3308      	adds	r3, #8
 801ab5a:	4573      	cmp	r3, lr
 801ab5c:	4662      	mov	r2, ip
 801ab5e:	d1f6      	bne.n	801ab4e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801ab60:	6818      	ldr	r0, [r3, #0]
 801ab62:	f8cc 0000 	str.w	r0, [ip]
 801ab66:	889b      	ldrh	r3, [r3, #4]
 801ab68:	f8ac 3004 	strh.w	r3, [ip, #4]
 801ab6c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801ab70:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801ab74:	b2b3      	uxth	r3, r6
 801ab76:	1aca      	subs	r2, r1, r3
 801ab78:	b292      	uxth	r2, r2
 801ab7a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801ab7e:	10d2      	asrs	r2, r2, #3
 801ab80:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801ab84:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801ab88:	4302      	orrs	r2, r0
 801ab8a:	1bcf      	subs	r7, r1, r7
 801ab8c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801ab90:	1afb      	subs	r3, r7, r3
 801ab92:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801ab96:	e7b8      	b.n	801ab0a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801ab98:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801ab9a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ab9e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801aba0:	f640 6333 	movw	r3, #3635	; 0xe33
 801aba4:	4299      	cmp	r1, r3
 801aba6:	d110      	bne.n	801abca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 801aba8:	6803      	ldr	r3, [r0, #0]
 801abaa:	68db      	ldr	r3, [r3, #12]
 801abac:	4798      	blx	r3
 801abae:	7b41      	ldrb	r1, [r0, #13]
 801abb0:	00cb      	lsls	r3, r1, #3
 801abb2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801abb6:	7a03      	ldrb	r3, [r0, #8]
 801abb8:	0648      	lsls	r0, r1, #25
 801abba:	ea43 0302 	orr.w	r3, r3, r2
 801abbe:	bf44      	itt	mi
 801abc0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801abc4:	b21b      	sxthmi	r3, r3
 801abc6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801abca:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801abce:	443b      	add	r3, r7
 801abd0:	4433      	add	r3, r6
 801abd2:	b29b      	uxth	r3, r3
 801abd4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 801abd8:	462a      	mov	r2, r5
 801abda:	f105 0c08 	add.w	ip, r5, #8
 801abde:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801abe2:	4635      	mov	r5, r6
 801abe4:	6810      	ldr	r0, [r2, #0]
 801abe6:	6851      	ldr	r1, [r2, #4]
 801abe8:	4637      	mov	r7, r6
 801abea:	c703      	stmia	r7!, {r0, r1}
 801abec:	3208      	adds	r2, #8
 801abee:	4562      	cmp	r2, ip
 801abf0:	463e      	mov	r6, r7
 801abf2:	d1f7      	bne.n	801abe4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 801abf4:	6810      	ldr	r0, [r2, #0]
 801abf6:	6038      	str	r0, [r7, #0]
 801abf8:	8892      	ldrh	r2, [r2, #4]
 801abfa:	80ba      	strh	r2, [r7, #4]
 801abfc:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801ac00:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801ac04:	10db      	asrs	r3, r3, #3
 801ac06:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801ac0a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801ac0e:	4313      	orrs	r3, r2
 801ac10:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801ac14:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801ac18:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801ac1c:	1a9b      	subs	r3, r3, r2
 801ac1e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801ac22:	e772      	b.n	801ab0a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801ac24:	f023 0204 	bic.w	r2, r3, #4
 801ac28:	f640 611b 	movw	r1, #3611	; 0xe1b
 801ac2c:	428a      	cmp	r2, r1
 801ac2e:	d003      	beq.n	801ac38 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 801ac30:	f640 621d 	movw	r2, #3613	; 0xe1d
 801ac34:	4293      	cmp	r3, r2
 801ac36:	d120      	bne.n	801ac7a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 801ac38:	3b01      	subs	r3, #1
 801ac3a:	4602      	mov	r2, r0
 801ac3c:	b29b      	uxth	r3, r3
 801ac3e:	4629      	mov	r1, r5
 801ac40:	4620      	mov	r0, r4
 801ac42:	f7ff ff4b 	bl	801aadc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801ac46:	7b41      	ldrb	r1, [r0, #13]
 801ac48:	00cb      	lsls	r3, r1, #3
 801ac4a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801ac4e:	7a03      	ldrb	r3, [r0, #8]
 801ac50:	0649      	lsls	r1, r1, #25
 801ac52:	ea43 0302 	orr.w	r3, r3, r2
 801ac56:	bf44      	itt	mi
 801ac58:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ac5c:	b21b      	sxthmi	r3, r3
 801ac5e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801ac62:	7b6b      	ldrb	r3, [r5, #13]
 801ac64:	7aaa      	ldrb	r2, [r5, #10]
 801ac66:	005b      	lsls	r3, r3, #1
 801ac68:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801ac6c:	4313      	orrs	r3, r2
 801ac6e:	115a      	asrs	r2, r3, #5
 801ac70:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801ac74:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801ac78:	e036      	b.n	801ace8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801ac7a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801ac7e:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801ac82:	7a2a      	ldrb	r2, [r5, #8]
 801ac84:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801ac88:	ea42 0201 	orr.w	r2, r2, r1
 801ac8c:	bf1c      	itt	ne
 801ac8e:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801ac92:	b212      	sxthne	r2, r2
 801ac94:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801ac98:	f640 6109 	movw	r1, #3593	; 0xe09
 801ac9c:	f023 0210 	bic.w	r2, r3, #16
 801aca0:	428a      	cmp	r2, r1
 801aca2:	d003      	beq.n	801acac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 801aca4:	f640 6213 	movw	r2, #3603	; 0xe13
 801aca8:	4293      	cmp	r3, r2
 801acaa:	d12a      	bne.n	801ad02 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801acac:	7b6e      	ldrb	r6, [r5, #13]
 801acae:	0076      	lsls	r6, r6, #1
 801acb0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801acb4:	7aae      	ldrb	r6, [r5, #10]
 801acb6:	4316      	orrs	r6, r2
 801acb8:	f640 6213 	movw	r2, #3603	; 0xe13
 801acbc:	4293      	cmp	r3, r2
 801acbe:	bf18      	it	ne
 801acc0:	f103 33ff 	addne.w	r3, r3, #4294967295
 801acc4:	4602      	mov	r2, r0
 801acc6:	bf14      	ite	ne
 801acc8:	b29b      	uxthne	r3, r3
 801acca:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801acce:	4629      	mov	r1, r5
 801acd0:	4620      	mov	r0, r4
 801acd2:	f7ff ff03 	bl	801aadc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801acd6:	7b43      	ldrb	r3, [r0, #13]
 801acd8:	7a82      	ldrb	r2, [r0, #10]
 801acda:	005b      	lsls	r3, r3, #1
 801acdc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801ace0:	4313      	orrs	r3, r2
 801ace2:	1af6      	subs	r6, r6, r3
 801ace4:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 801ace8:	7b69      	ldrb	r1, [r5, #13]
 801acea:	00cb      	lsls	r3, r1, #3
 801acec:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801acf0:	7a2b      	ldrb	r3, [r5, #8]
 801acf2:	4313      	orrs	r3, r2
 801acf4:	064a      	lsls	r2, r1, #25
 801acf6:	bf44      	itt	mi
 801acf8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801acfc:	b21b      	sxthmi	r3, r3
 801acfe:	1bdb      	subs	r3, r3, r7
 801ad00:	e747      	b.n	801ab92 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801ad02:	2300      	movs	r3, #0
 801ad04:	e7b6      	b.n	801ac74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 801ad06:	bf00      	nop
 801ad08:	3fc00079 	.word	0x3fc00079

0801ad0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801ad0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ad10:	4604      	mov	r4, r0
 801ad12:	b942      	cbnz	r2, 801ad26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801ad14:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801ad18:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801ad1c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 801ad20:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801ad24:	e047      	b.n	801adb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801ad26:	7b51      	ldrb	r1, [r2, #13]
 801ad28:	8893      	ldrh	r3, [r2, #4]
 801ad2a:	010d      	lsls	r5, r1, #4
 801ad2c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 801ad30:	79d5      	ldrb	r5, [r2, #7]
 801ad32:	4305      	orrs	r5, r0
 801ad34:	2d04      	cmp	r5, #4
 801ad36:	bfcc      	ite	gt
 801ad38:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801ad3c:	f04f 0e01 	movle.w	lr, #1
 801ad40:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801ad44:	f200 80ab 	bhi.w	801ae9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801ad48:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801ad4c:	4283      	cmp	r3, r0
 801ad4e:	d216      	bcs.n	801ad7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ad50:	f240 605b 	movw	r0, #1627	; 0x65b
 801ad54:	4283      	cmp	r3, r0
 801ad56:	d859      	bhi.n	801ae0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801ad58:	f240 6057 	movw	r0, #1623	; 0x657
 801ad5c:	4283      	cmp	r3, r0
 801ad5e:	d20e      	bcs.n	801ad7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ad60:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801ad64:	d24a      	bcs.n	801adfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801ad66:	f240 604e 	movw	r0, #1614	; 0x64e
 801ad6a:	4283      	cmp	r3, r0
 801ad6c:	d207      	bcs.n	801ad7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ad6e:	f240 601a 	movw	r0, #1562	; 0x61a
 801ad72:	4283      	cmp	r3, r0
 801ad74:	d02a      	beq.n	801adcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ad76:	d821      	bhi.n	801adbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801ad78:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801ad7c:	d35b      	bcc.n	801ae36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ad7e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801ad82:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ad86:	f040 80d0 	bne.w	801af2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801ad8a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801ad8e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ad92:	f040 80ca 	bne.w	801af2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801ad96:	00cb      	lsls	r3, r1, #3
 801ad98:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801ad9c:	7a13      	ldrb	r3, [r2, #8]
 801ad9e:	0649      	lsls	r1, r1, #25
 801ada0:	ea43 0300 	orr.w	r3, r3, r0
 801ada4:	bf44      	itt	mi
 801ada6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801adaa:	b21b      	sxthmi	r3, r3
 801adac:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801adb0:	1b5d      	subs	r5, r3, r5
 801adb2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801adb6:	4610      	mov	r0, r2
 801adb8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801adbc:	f240 604b 	movw	r0, #1611	; 0x64b
 801adc0:	4283      	cmp	r3, r0
 801adc2:	d338      	bcc.n	801ae36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801adc4:	f240 604c 	movw	r0, #1612	; 0x64c
 801adc8:	4283      	cmp	r3, r0
 801adca:	d9d8      	bls.n	801ad7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801adcc:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 801add0:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 801add4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801add8:	f040 80f2 	bne.w	801afc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801addc:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ade0:	f040 80ee 	bne.w	801afc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801ade4:	00cb      	lsls	r3, r1, #3
 801ade6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801adea:	7a13      	ldrb	r3, [r2, #8]
 801adec:	064e      	lsls	r6, r1, #25
 801adee:	ea43 0300 	orr.w	r3, r3, r0
 801adf2:	bf44      	itt	mi
 801adf4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801adf8:	b21b      	sxthmi	r3, r3
 801adfa:	e7d9      	b.n	801adb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801adfc:	f240 6054 	movw	r0, #1620	; 0x654
 801ae00:	4283      	cmp	r3, r0
 801ae02:	d8e3      	bhi.n	801adcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ae04:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801ae08:	d9e0      	bls.n	801adcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ae0a:	e7b8      	b.n	801ad7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ae0c:	f240 6074 	movw	r0, #1652	; 0x674
 801ae10:	4283      	cmp	r3, r0
 801ae12:	d0b4      	beq.n	801ad7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ae14:	d82d      	bhi.n	801ae72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801ae16:	f240 605e 	movw	r0, #1630	; 0x65e
 801ae1a:	4283      	cmp	r3, r0
 801ae1c:	d804      	bhi.n	801ae28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801ae1e:	f240 605d 	movw	r0, #1629	; 0x65d
 801ae22:	4283      	cmp	r3, r0
 801ae24:	d3d2      	bcc.n	801adcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ae26:	e7aa      	b.n	801ad7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ae28:	f240 605f 	movw	r0, #1631	; 0x65f
 801ae2c:	4283      	cmp	r3, r0
 801ae2e:	d0cd      	beq.n	801adcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ae30:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801ae34:	d0a3      	beq.n	801ad7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ae36:	00cb      	lsls	r3, r1, #3
 801ae38:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801ae3c:	7a13      	ldrb	r3, [r2, #8]
 801ae3e:	0649      	lsls	r1, r1, #25
 801ae40:	ea43 0300 	orr.w	r3, r3, r0
 801ae44:	bf44      	itt	mi
 801ae46:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ae4a:	b21b      	sxthmi	r3, r3
 801ae4c:	1b5d      	subs	r5, r3, r5
 801ae4e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801ae52:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801ae56:	7b53      	ldrb	r3, [r2, #13]
 801ae58:	015b      	lsls	r3, r3, #5
 801ae5a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801ae5e:	7993      	ldrb	r3, [r2, #6]
 801ae60:	430b      	orrs	r3, r1
 801ae62:	005b      	lsls	r3, r3, #1
 801ae64:	2105      	movs	r1, #5
 801ae66:	fb93 f3f1 	sdiv	r3, r3, r1
 801ae6a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801ae6e:	440b      	add	r3, r1
 801ae70:	e756      	b.n	801ad20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801ae72:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801ae76:	4283      	cmp	r3, r0
 801ae78:	d809      	bhi.n	801ae8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801ae7a:	f240 60df 	movw	r0, #1759	; 0x6df
 801ae7e:	4283      	cmp	r3, r0
 801ae80:	f4bf af7d 	bcs.w	801ad7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ae84:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801ae88:	2b05      	cmp	r3, #5
 801ae8a:	d8d4      	bhi.n	801ae36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ae8c:	e777      	b.n	801ad7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ae8e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801ae92:	4283      	cmp	r3, r0
 801ae94:	d09a      	beq.n	801adcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ae96:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801ae9a:	4283      	cmp	r3, r0
 801ae9c:	e7ca      	b.n	801ae34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801ae9e:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801aea2:	d22b      	bcs.n	801aefc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801aea4:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801aea8:	4283      	cmp	r3, r0
 801aeaa:	d28f      	bcs.n	801adcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801aeac:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801aeb0:	4283      	cmp	r3, r0
 801aeb2:	d816      	bhi.n	801aee2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801aeb4:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801aeb8:	4283      	cmp	r3, r0
 801aeba:	f4bf af60 	bcs.w	801ad7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aebe:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801aec2:	4283      	cmp	r3, r0
 801aec4:	d80a      	bhi.n	801aedc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801aec6:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801aeca:	4283      	cmp	r3, r0
 801aecc:	f4bf af57 	bcs.w	801ad7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aed0:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801aed4:	4283      	cmp	r3, r0
 801aed6:	f43f af79 	beq.w	801adcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801aeda:	e7ac      	b.n	801ae36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801aedc:	f240 60ed 	movw	r0, #1773	; 0x6ed
 801aee0:	e7f8      	b.n	801aed4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801aee2:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801aee6:	4283      	cmp	r3, r0
 801aee8:	d802      	bhi.n	801aef0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801aeea:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801aeee:	e798      	b.n	801ae22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 801aef0:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801aef4:	4283      	cmp	r3, r0
 801aef6:	f47f af42 	bne.w	801ad7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aefa:	e767      	b.n	801adcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801aefc:	f640 00f6 	movw	r0, #2294	; 0x8f6
 801af00:	4283      	cmp	r3, r0
 801af02:	f43f af63 	beq.w	801adcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801af06:	d802      	bhi.n	801af0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801af08:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801af0c:	e7f2      	b.n	801aef4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801af0e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801af12:	4283      	cmp	r3, r0
 801af14:	d805      	bhi.n	801af22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801af16:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801af1a:	4283      	cmp	r3, r0
 801af1c:	f4ff af2f 	bcc.w	801ad7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801af20:	e754      	b.n	801adcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801af22:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801af26:	4283      	cmp	r3, r0
 801af28:	e7af      	b.n	801ae8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801af2a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801af2e:	4617      	mov	r7, r2
 801af30:	f102 0808 	add.w	r8, r2, #8
 801af34:	4666      	mov	r6, ip
 801af36:	6838      	ldr	r0, [r7, #0]
 801af38:	6879      	ldr	r1, [r7, #4]
 801af3a:	46e6      	mov	lr, ip
 801af3c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801af40:	3708      	adds	r7, #8
 801af42:	4547      	cmp	r7, r8
 801af44:	46f4      	mov	ip, lr
 801af46:	d1f6      	bne.n	801af36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801af48:	6838      	ldr	r0, [r7, #0]
 801af4a:	f8ce 0000 	str.w	r0, [lr]
 801af4e:	88b9      	ldrh	r1, [r7, #4]
 801af50:	f8ae 1004 	strh.w	r1, [lr, #4]
 801af54:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801af58:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801af5c:	d009      	beq.n	801af72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801af5e:	7b51      	ldrb	r1, [r2, #13]
 801af60:	7992      	ldrb	r2, [r2, #6]
 801af62:	0149      	lsls	r1, r1, #5
 801af64:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801af68:	4311      	orrs	r1, r2
 801af6a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801af6e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801af72:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801af76:	b2ad      	uxth	r5, r5
 801af78:	d00d      	beq.n	801af96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801af7a:	442b      	add	r3, r5
 801af7c:	b29b      	uxth	r3, r3
 801af7e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801af82:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801af86:	10db      	asrs	r3, r3, #3
 801af88:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801af8c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801af90:	4313      	orrs	r3, r2
 801af92:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801af96:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801af9a:	00cb      	lsls	r3, r1, #3
 801af9c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801afa0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801afa4:	064f      	lsls	r7, r1, #25
 801afa6:	ea43 0302 	orr.w	r3, r3, r2
 801afaa:	bf44      	itt	mi
 801afac:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801afb0:	b21b      	sxthmi	r3, r3
 801afb2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801afb6:	1b5b      	subs	r3, r3, r5
 801afb8:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801afbc:	4632      	mov	r2, r6
 801afbe:	e6fa      	b.n	801adb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801afc0:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801afc4:	4617      	mov	r7, r2
 801afc6:	f102 0908 	add.w	r9, r2, #8
 801afca:	4666      	mov	r6, ip
 801afcc:	6838      	ldr	r0, [r7, #0]
 801afce:	6879      	ldr	r1, [r7, #4]
 801afd0:	46e0      	mov	r8, ip
 801afd2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801afd6:	3708      	adds	r7, #8
 801afd8:	454f      	cmp	r7, r9
 801afda:	46c4      	mov	ip, r8
 801afdc:	d1f6      	bne.n	801afcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801afde:	6838      	ldr	r0, [r7, #0]
 801afe0:	f8c8 0000 	str.w	r0, [r8]
 801afe4:	88b9      	ldrh	r1, [r7, #4]
 801afe6:	f8a8 1004 	strh.w	r1, [r8, #4]
 801afea:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801afee:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801aff2:	d009      	beq.n	801b008 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801aff4:	7b51      	ldrb	r1, [r2, #13]
 801aff6:	7992      	ldrb	r2, [r2, #6]
 801aff8:	0149      	lsls	r1, r1, #5
 801affa:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801affe:	4311      	orrs	r1, r2
 801b000:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801b004:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801b008:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801b00c:	d00e      	beq.n	801b02c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801b00e:	eba3 030e 	sub.w	r3, r3, lr
 801b012:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801b016:	b29b      	uxth	r3, r3
 801b018:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801b01c:	10db      	asrs	r3, r3, #3
 801b01e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801b022:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801b026:	4313      	orrs	r3, r2
 801b028:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801b02c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801b030:	00cb      	lsls	r3, r1, #3
 801b032:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b036:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801b03a:	0648      	lsls	r0, r1, #25
 801b03c:	ea43 0302 	orr.w	r3, r3, r2
 801b040:	bf44      	itt	mi
 801b042:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b046:	b21b      	sxthmi	r3, r3
 801b048:	1b5d      	subs	r5, r3, r5
 801b04a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801b04e:	e7b5      	b.n	801afbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801b050 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801b050:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b054:	461e      	mov	r6, r3
 801b056:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b058:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b05c:	4604      	mov	r4, r0
 801b05e:	4617      	mov	r7, r2
 801b060:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b064:	f7f4 fc22 	bl	800f8ac <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801b068:	4605      	mov	r5, r0
 801b06a:	b918      	cbnz	r0, 801b074 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801b06c:	6030      	str	r0, [r6, #0]
 801b06e:	4628      	mov	r0, r5
 801b070:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b074:	683b      	ldr	r3, [r7, #0]
 801b076:	4601      	mov	r1, r0
 801b078:	68db      	ldr	r3, [r3, #12]
 801b07a:	4638      	mov	r0, r7
 801b07c:	4798      	blx	r3
 801b07e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801b082:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801b086:	4602      	mov	r2, r0
 801b088:	6030      	str	r0, [r6, #0]
 801b08a:	d213      	bcs.n	801b0b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801b08c:	4643      	mov	r3, r8
 801b08e:	4639      	mov	r1, r7
 801b090:	4620      	mov	r0, r4
 801b092:	f7ff fe3b 	bl	801ad0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801b096:	6030      	str	r0, [r6, #0]
 801b098:	6833      	ldr	r3, [r6, #0]
 801b09a:	b143      	cbz	r3, 801b0ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801b09c:	7b5a      	ldrb	r2, [r3, #13]
 801b09e:	7a9b      	ldrb	r3, [r3, #10]
 801b0a0:	0052      	lsls	r2, r2, #1
 801b0a2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801b0a6:	4313      	orrs	r3, r2
 801b0a8:	bf0c      	ite	eq
 801b0aa:	2301      	moveq	r3, #1
 801b0ac:	2300      	movne	r3, #0
 801b0ae:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801b0b2:	e7dc      	b.n	801b06e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801b0b4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801b0b8:	b29b      	uxth	r3, r3
 801b0ba:	2b7f      	cmp	r3, #127	; 0x7f
 801b0bc:	d804      	bhi.n	801b0c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801b0be:	4639      	mov	r1, r7
 801b0c0:	4620      	mov	r0, r4
 801b0c2:	f7ff fd17 	bl	801aaf4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801b0c6:	e7e6      	b.n	801b096 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801b0c8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801b0cc:	2b00      	cmp	r3, #0
 801b0ce:	d0e3      	beq.n	801b098 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801b0d0:	f640 1302 	movw	r3, #2306	; 0x902
 801b0d4:	429d      	cmp	r5, r3
 801b0d6:	d1df      	bne.n	801b098 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801b0d8:	4601      	mov	r1, r0
 801b0da:	4620      	mov	r0, r4
 801b0dc:	f7ff fcdb 	bl	801aa96 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801b0e0:	e7d9      	b.n	801b096 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801b0e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801b0e2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b0e6:	461e      	mov	r6, r3
 801b0e8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b0ea:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b0ee:	4604      	mov	r4, r0
 801b0f0:	4617      	mov	r7, r2
 801b0f2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b0f6:	f7f4 fbd9 	bl	800f8ac <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801b0fa:	4605      	mov	r5, r0
 801b0fc:	b918      	cbnz	r0, 801b106 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801b0fe:	6030      	str	r0, [r6, #0]
 801b100:	4628      	mov	r0, r5
 801b102:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b106:	683b      	ldr	r3, [r7, #0]
 801b108:	4601      	mov	r1, r0
 801b10a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801b10e:	4638      	mov	r0, r7
 801b110:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801b114:	47c8      	blx	r9
 801b116:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801b11a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801b11e:	4602      	mov	r2, r0
 801b120:	6030      	str	r0, [r6, #0]
 801b122:	d213      	bcs.n	801b14c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801b124:	4643      	mov	r3, r8
 801b126:	4639      	mov	r1, r7
 801b128:	4620      	mov	r0, r4
 801b12a:	f7ff fdef 	bl	801ad0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801b12e:	6030      	str	r0, [r6, #0]
 801b130:	6833      	ldr	r3, [r6, #0]
 801b132:	b143      	cbz	r3, 801b146 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801b134:	7b5a      	ldrb	r2, [r3, #13]
 801b136:	7a9b      	ldrb	r3, [r3, #10]
 801b138:	0052      	lsls	r2, r2, #1
 801b13a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801b13e:	4313      	orrs	r3, r2
 801b140:	bf0c      	ite	eq
 801b142:	2301      	moveq	r3, #1
 801b144:	2300      	movne	r3, #0
 801b146:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801b14a:	e7d9      	b.n	801b100 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801b14c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801b150:	b29b      	uxth	r3, r3
 801b152:	2b7f      	cmp	r3, #127	; 0x7f
 801b154:	d804      	bhi.n	801b160 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801b156:	4639      	mov	r1, r7
 801b158:	4620      	mov	r0, r4
 801b15a:	f7ff fccb 	bl	801aaf4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801b15e:	e7e6      	b.n	801b12e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801b160:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801b164:	2b00      	cmp	r3, #0
 801b166:	d0e3      	beq.n	801b130 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801b168:	f640 1302 	movw	r3, #2306	; 0x902
 801b16c:	429d      	cmp	r5, r3
 801b16e:	d1df      	bne.n	801b130 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801b170:	4601      	mov	r1, r0
 801b172:	4620      	mov	r0, r4
 801b174:	f7ff fc8f 	bl	801aa96 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801b178:	e7d9      	b.n	801b12e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801b17a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801b17a:	b510      	push	{r4, lr}
 801b17c:	4604      	mov	r4, r0
 801b17e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801b182:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b184:	b1f1      	cbz	r1, 801b1c4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801b186:	2b0a      	cmp	r3, #10
 801b188:	d02f      	beq.n	801b1ea <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801b18a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801b18c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801b190:	3901      	subs	r1, #1
 801b192:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801b194:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801b198:	1c51      	adds	r1, r2, #1
 801b19a:	b289      	uxth	r1, r1
 801b19c:	2901      	cmp	r1, #1
 801b19e:	bf84      	itt	hi
 801b1a0:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801b1a4:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801b1a6:	f103 0201 	add.w	r2, r3, #1
 801b1aa:	8722      	strh	r2, [r4, #56]	; 0x38
 801b1ac:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801b1ae:	bf98      	it	ls
 801b1b0:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801b1b2:	4413      	add	r3, r2
 801b1b4:	b29b      	uxth	r3, r3
 801b1b6:	2b09      	cmp	r3, #9
 801b1b8:	bf88      	it	hi
 801b1ba:	3b0a      	subhi	r3, #10
 801b1bc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b1c0:	8458      	strh	r0, [r3, #34]	; 0x22
 801b1c2:	e7dc      	b.n	801b17e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801b1c4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b1c6:	2b0a      	cmp	r3, #10
 801b1c8:	d00f      	beq.n	801b1ea <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801b1ca:	4620      	mov	r0, r4
 801b1cc:	f7ff fc11 	bl	801a9f2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801b1d0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b1d2:	1c5a      	adds	r2, r3, #1
 801b1d4:	8722      	strh	r2, [r4, #56]	; 0x38
 801b1d6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801b1d8:	4413      	add	r3, r2
 801b1da:	b29b      	uxth	r3, r3
 801b1dc:	2b09      	cmp	r3, #9
 801b1de:	bf88      	it	hi
 801b1e0:	3b0a      	subhi	r3, #10
 801b1e2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b1e6:	8458      	strh	r0, [r3, #34]	; 0x22
 801b1e8:	e7ec      	b.n	801b1c4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801b1ea:	bd10      	pop	{r4, pc}

0801b1ec <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801b1ec:	b538      	push	{r3, r4, r5, lr}
 801b1ee:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b1f0:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801b1f4:	4604      	mov	r4, r0
 801b1f6:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 801b1f8:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801b1fa:	3a01      	subs	r2, #1
 801b1fc:	8702      	strh	r2, [r0, #56]	; 0x38
 801b1fe:	1c5a      	adds	r2, r3, #1
 801b200:	b292      	uxth	r2, r2
 801b202:	2a09      	cmp	r2, #9
 801b204:	bf86      	itte	hi
 801b206:	3b09      	subhi	r3, #9
 801b208:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801b20a:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801b20c:	f7ff ffb5 	bl	801b17a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801b210:	8c23      	ldrh	r3, [r4, #32]
 801b212:	2b01      	cmp	r3, #1
 801b214:	bf9c      	itt	ls
 801b216:	3301      	addls	r3, #1
 801b218:	8423      	strhls	r3, [r4, #32]
 801b21a:	8be3      	ldrh	r3, [r4, #30]
 801b21c:	b90b      	cbnz	r3, 801b222 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801b21e:	2302      	movs	r3, #2
 801b220:	83e3      	strh	r3, [r4, #30]
 801b222:	8be3      	ldrh	r3, [r4, #30]
 801b224:	3b01      	subs	r3, #1
 801b226:	b29b      	uxth	r3, r3
 801b228:	83e3      	strh	r3, [r4, #30]
 801b22a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b22e:	4628      	mov	r0, r5
 801b230:	8365      	strh	r5, [r4, #26]
 801b232:	bd38      	pop	{r3, r4, r5, pc}

0801b234 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801b234:	428a      	cmp	r2, r1
 801b236:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b23a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801b23c:	d931      	bls.n	801b2a2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801b23e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 801b240:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801b244:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 801b248:	19ee      	adds	r6, r5, r7
 801b24a:	1a54      	subs	r4, r2, r1
 801b24c:	3e01      	subs	r6, #1
 801b24e:	fa1f fe84 	uxth.w	lr, r4
 801b252:	b2b4      	uxth	r4, r6
 801b254:	eba4 090e 	sub.w	r9, r4, lr
 801b258:	fa1f f989 	uxth.w	r9, r9
 801b25c:	2c09      	cmp	r4, #9
 801b25e:	4626      	mov	r6, r4
 801b260:	bf88      	it	hi
 801b262:	f1a4 060a 	subhi.w	r6, r4, #10
 801b266:	f1bc 0f00 	cmp.w	ip, #0
 801b26a:	bf08      	it	eq
 801b26c:	f04f 0c02 	moveq.w	ip, #2
 801b270:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b274:	f10c 3cff 	add.w	ip, ip, #4294967295
 801b278:	fa1f fc8c 	uxth.w	ip, ip
 801b27c:	3c01      	subs	r4, #1
 801b27e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801b282:	b2a4      	uxth	r4, r4
 801b284:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801b288:	454c      	cmp	r4, r9
 801b28a:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801b28e:	d1e5      	bne.n	801b25c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801b290:	eba5 050e 	sub.w	r5, r5, lr
 801b294:	eb0e 0408 	add.w	r4, lr, r8
 801b298:	8705      	strh	r5, [r0, #56]	; 0x38
 801b29a:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801b29e:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801b2a2:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801b2a4:	1a64      	subs	r4, r4, r1
 801b2a6:	4439      	add	r1, r7
 801b2a8:	b289      	uxth	r1, r1
 801b2aa:	2909      	cmp	r1, #9
 801b2ac:	bf88      	it	hi
 801b2ae:	390a      	subhi	r1, #10
 801b2b0:	8704      	strh	r4, [r0, #56]	; 0x38
 801b2b2:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b2b4:	250a      	movs	r5, #10
 801b2b6:	b18a      	cbz	r2, 801b2dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801b2b8:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801b2ba:	3a01      	subs	r2, #1
 801b2bc:	b292      	uxth	r2, r2
 801b2be:	3101      	adds	r1, #1
 801b2c0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801b2c4:	8701      	strh	r1, [r0, #56]	; 0x38
 801b2c6:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b2c8:	b901      	cbnz	r1, 801b2cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801b2ca:	86c5      	strh	r5, [r0, #54]	; 0x36
 801b2cc:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b2ce:	3901      	subs	r1, #1
 801b2d0:	b289      	uxth	r1, r1
 801b2d2:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b2d4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801b2d8:	844c      	strh	r4, [r1, #34]	; 0x22
 801b2da:	e7ec      	b.n	801b2b6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801b2dc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b2e0:	f7ff bf4b 	b.w	801b17a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801b2e4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801b2e4:	b570      	push	{r4, r5, r6, lr}
 801b2e6:	2500      	movs	r5, #0
 801b2e8:	4295      	cmp	r5, r2
 801b2ea:	d011      	beq.n	801b310 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801b2ec:	8bc4      	ldrh	r4, [r0, #30]
 801b2ee:	f831 6b02 	ldrh.w	r6, [r1], #2
 801b2f2:	4414      	add	r4, r2
 801b2f4:	3c01      	subs	r4, #1
 801b2f6:	1b64      	subs	r4, r4, r5
 801b2f8:	b2a4      	uxth	r4, r4
 801b2fa:	2c01      	cmp	r4, #1
 801b2fc:	bf88      	it	hi
 801b2fe:	3c02      	subhi	r4, #2
 801b300:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b304:	8b64      	ldrh	r4, [r4, #26]
 801b306:	42b4      	cmp	r4, r6
 801b308:	d117      	bne.n	801b33a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801b30a:	3501      	adds	r5, #1
 801b30c:	b2ad      	uxth	r5, r5
 801b30e:	e7eb      	b.n	801b2e8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801b310:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b314:	2400      	movs	r4, #0
 801b316:	4413      	add	r3, r2
 801b318:	b2a2      	uxth	r2, r4
 801b31a:	429a      	cmp	r2, r3
 801b31c:	da0f      	bge.n	801b33e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801b31e:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 801b320:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801b324:	4432      	add	r2, r6
 801b326:	b292      	uxth	r2, r2
 801b328:	2a09      	cmp	r2, #9
 801b32a:	bf88      	it	hi
 801b32c:	3a0a      	subhi	r2, #10
 801b32e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801b332:	3401      	adds	r4, #1
 801b334:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801b336:	42aa      	cmp	r2, r5
 801b338:	d0ee      	beq.n	801b318 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801b33a:	2000      	movs	r0, #0
 801b33c:	bd70      	pop	{r4, r5, r6, pc}
 801b33e:	2001      	movs	r0, #1
 801b340:	e7fc      	b.n	801b33c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801b342 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801b342:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b346:	4605      	mov	r5, r0
 801b348:	4616      	mov	r6, r2
 801b34a:	1c8c      	adds	r4, r1, #2
 801b34c:	8809      	ldrh	r1, [r1, #0]
 801b34e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801b352:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801b356:	42b3      	cmp	r3, r6
 801b358:	d124      	bne.n	801b3a4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801b35a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801b35e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801b362:	f001 070f 	and.w	r7, r1, #15
 801b366:	f8cd 8000 	str.w	r8, [sp]
 801b36a:	464b      	mov	r3, r9
 801b36c:	4652      	mov	r2, sl
 801b36e:	4621      	mov	r1, r4
 801b370:	4628      	mov	r0, r5
 801b372:	f7ff ffb7 	bl	801b2e4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801b376:	4683      	mov	fp, r0
 801b378:	b168      	cbz	r0, 801b396 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801b37a:	eb0a 0109 	add.w	r1, sl, r9
 801b37e:	4441      	add	r1, r8
 801b380:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801b384:	463a      	mov	r2, r7
 801b386:	4649      	mov	r1, r9
 801b388:	4628      	mov	r0, r5
 801b38a:	f7ff ff53 	bl	801b234 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801b38e:	4658      	mov	r0, fp
 801b390:	b003      	add	sp, #12
 801b392:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b396:	eb07 010a 	add.w	r1, r7, sl
 801b39a:	4449      	add	r1, r9
 801b39c:	4441      	add	r1, r8
 801b39e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801b3a2:	e7d2      	b.n	801b34a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801b3a4:	f04f 0b00 	mov.w	fp, #0
 801b3a8:	e7f1      	b.n	801b38e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801b3aa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801b3aa:	b570      	push	{r4, r5, r6, lr}
 801b3ac:	8810      	ldrh	r0, [r2, #0]
 801b3ae:	4298      	cmp	r0, r3
 801b3b0:	d817      	bhi.n	801b3e2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b3b2:	1e48      	subs	r0, r1, #1
 801b3b4:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801b3b8:	4298      	cmp	r0, r3
 801b3ba:	d312      	bcc.n	801b3e2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b3bc:	2400      	movs	r4, #0
 801b3be:	428c      	cmp	r4, r1
 801b3c0:	d20f      	bcs.n	801b3e2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b3c2:	1860      	adds	r0, r4, r1
 801b3c4:	1040      	asrs	r0, r0, #1
 801b3c6:	0085      	lsls	r5, r0, #2
 801b3c8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801b3cc:	42b3      	cmp	r3, r6
 801b3ce:	d902      	bls.n	801b3d6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801b3d0:	3001      	adds	r0, #1
 801b3d2:	b284      	uxth	r4, r0
 801b3d4:	e7f3      	b.n	801b3be <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b3d6:	d201      	bcs.n	801b3dc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801b3d8:	b281      	uxth	r1, r0
 801b3da:	e7f0      	b.n	801b3be <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b3dc:	442a      	add	r2, r5
 801b3de:	8850      	ldrh	r0, [r2, #2]
 801b3e0:	bd70      	pop	{r4, r5, r6, pc}
 801b3e2:	2000      	movs	r0, #0
 801b3e4:	e7fc      	b.n	801b3e0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801b3e6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801b3e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b3ea:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801b3ec:	886f      	ldrh	r7, [r5, #2]
 801b3ee:	4604      	mov	r4, r0
 801b3f0:	087f      	lsrs	r7, r7, #1
 801b3f2:	260b      	movs	r6, #11
 801b3f4:	3e01      	subs	r6, #1
 801b3f6:	d013      	beq.n	801b420 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b3f8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801b3fa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b3fe:	462a      	mov	r2, r5
 801b400:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b404:	4639      	mov	r1, r7
 801b406:	4643      	mov	r3, r8
 801b408:	4620      	mov	r0, r4
 801b40a:	f7ff ffce 	bl	801b3aa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801b40e:	b138      	cbz	r0, 801b420 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b410:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801b414:	4642      	mov	r2, r8
 801b416:	4620      	mov	r0, r4
 801b418:	f7ff ff93 	bl	801b342 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801b41c:	2800      	cmp	r0, #0
 801b41e:	d1e9      	bne.n	801b3f4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801b420:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801b424 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 801b424:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b426:	b08d      	sub	sp, #52	; 0x34
 801b428:	2300      	movs	r3, #0
 801b42a:	9304      	str	r3, [sp, #16]
 801b42c:	9305      	str	r3, [sp, #20]
 801b42e:	9306      	str	r3, [sp, #24]
 801b430:	aa04      	add	r2, sp, #16
 801b432:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 801b436:	9307      	str	r3, [sp, #28]
 801b438:	f100 0640 	add.w	r6, r0, #64	; 0x40
 801b43c:	4613      	mov	r3, r2
 801b43e:	f101 0710 	add.w	r7, r1, #16
 801b442:	eddf 7a0f 	vldr	s15, [pc, #60]	; 801b480 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 801b446:	460c      	mov	r4, r1
 801b448:	4605      	mov	r5, r0
 801b44a:	ecb4 7a01 	vldmia	r4!, {s14}
 801b44e:	ecf5 6a01 	vldmia	r5!, {s13}
 801b452:	42bc      	cmp	r4, r7
 801b454:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b458:	d1f7      	bne.n	801b44a <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 801b45a:	3010      	adds	r0, #16
 801b45c:	42b0      	cmp	r0, r6
 801b45e:	ece2 7a01 	vstmia	r2!, {s15}
 801b462:	d1ee      	bne.n	801b442 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 801b464:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801b466:	ac0c      	add	r4, sp, #48	; 0x30
 801b468:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 801b46c:	ed9d 0a08 	vldr	s0, [sp, #32]
 801b470:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 801b474:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 801b478:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 801b47c:	b00d      	add	sp, #52	; 0x34
 801b47e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b480:	00000000 	.word	0x00000000

0801b484 <_ZN8touchgfx9Matrix4x4C1Ev>:
 801b484:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 801b4b4 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 801b488:	2300      	movs	r3, #0
 801b48a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801b48e:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 801b492:	2200      	movs	r2, #0
 801b494:	4293      	cmp	r3, r2
 801b496:	f102 0201 	add.w	r2, r2, #1
 801b49a:	bf14      	ite	ne
 801b49c:	eef0 6a47 	vmovne.f32	s13, s14
 801b4a0:	eef0 6a67 	vmoveq.f32	s13, s15
 801b4a4:	2a04      	cmp	r2, #4
 801b4a6:	ece1 6a01 	vstmia	r1!, {s13}
 801b4aa:	d1f3      	bne.n	801b494 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 801b4ac:	3301      	adds	r3, #1
 801b4ae:	2b04      	cmp	r3, #4
 801b4b0:	d1ed      	bne.n	801b48e <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 801b4b2:	4770      	bx	lr
 801b4b4:	00000000 	.word	0x00000000

0801b4b8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 801b4b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b4bc:	460c      	mov	r4, r1
 801b4be:	4605      	mov	r5, r0
 801b4c0:	4690      	mov	r8, r2
 801b4c2:	f7ff ffdf 	bl	801b484 <_ZN8touchgfx9Matrix4x4C1Ev>
 801b4c6:	4628      	mov	r0, r5
 801b4c8:	4621      	mov	r1, r4
 801b4ca:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 801b4ce:	2300      	movs	r3, #0
 801b4d0:	eddf 7a0f 	vldr	s15, [pc, #60]	; 801b510 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 801b4d4:	eb08 0603 	add.w	r6, r8, r3
 801b4d8:	460f      	mov	r7, r1
 801b4da:	2400      	movs	r4, #0
 801b4dc:	4632      	mov	r2, r6
 801b4de:	ecf7 6a01 	vldmia	r7!, {s13}
 801b4e2:	ed92 7a00 	vldr	s14, [r2]
 801b4e6:	3401      	adds	r4, #1
 801b4e8:	2c04      	cmp	r4, #4
 801b4ea:	f106 0610 	add.w	r6, r6, #16
 801b4ee:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b4f2:	d1f3      	bne.n	801b4dc <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 801b4f4:	18c2      	adds	r2, r0, r3
 801b4f6:	3304      	adds	r3, #4
 801b4f8:	2b10      	cmp	r3, #16
 801b4fa:	edc2 7a00 	vstr	s15, [r2]
 801b4fe:	d1e7      	bne.n	801b4d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 801b500:	3110      	adds	r1, #16
 801b502:	4561      	cmp	r1, ip
 801b504:	f100 0010 	add.w	r0, r0, #16
 801b508:	d1e1      	bne.n	801b4ce <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 801b50a:	4628      	mov	r0, r5
 801b50c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b510:	00000000 	.word	0x00000000

0801b514 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 801b514:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801b518:	ee87 0a80 	vdiv.f32	s0, s15, s0
 801b51c:	f100 0320 	add.w	r3, r0, #32
 801b520:	3030      	adds	r0, #48	; 0x30
 801b522:	ecf3 7a01 	vldmia	r3!, {s15}
 801b526:	ee60 7a27 	vmul.f32	s15, s0, s15
 801b52a:	4283      	cmp	r3, r0
 801b52c:	edc3 7a03 	vstr	s15, [r3, #12]
 801b530:	d1f7      	bne.n	801b522 <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 801b532:	4770      	bx	lr

0801b534 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 801b534:	b510      	push	{r4, lr}
 801b536:	ed2d 8b02 	vpush	{d8}
 801b53a:	4604      	mov	r4, r0
 801b53c:	eef0 8a40 	vmov.f32	s17, s0
 801b540:	f00e ff10 	bl	802a364 <sinf>
 801b544:	eeb0 8a40 	vmov.f32	s16, s0
 801b548:	eeb0 0a68 	vmov.f32	s0, s17
 801b54c:	f00e fec6 	bl	802a2dc <cosf>
 801b550:	f104 0310 	add.w	r3, r4, #16
 801b554:	f104 0220 	add.w	r2, r4, #32
 801b558:	eeb1 6a48 	vneg.f32	s12, s16
 801b55c:	edd3 7a04 	vldr	s15, [r3, #16]
 801b560:	edd3 6a00 	vldr	s13, [r3]
 801b564:	ee26 7a27 	vmul.f32	s14, s12, s15
 801b568:	ee67 7a80 	vmul.f32	s15, s15, s0
 801b56c:	eea6 7a80 	vfma.f32	s14, s13, s0
 801b570:	eee6 7a88 	vfma.f32	s15, s13, s16
 801b574:	eca3 7a01 	vstmia	r3!, {s14}
 801b578:	429a      	cmp	r2, r3
 801b57a:	edc3 7a03 	vstr	s15, [r3, #12]
 801b57e:	d1ed      	bne.n	801b55c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 801b580:	ecbd 8b02 	vpop	{d8}
 801b584:	4620      	mov	r0, r4
 801b586:	bd10      	pop	{r4, pc}

0801b588 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 801b588:	b510      	push	{r4, lr}
 801b58a:	ed2d 8b02 	vpush	{d8}
 801b58e:	4604      	mov	r4, r0
 801b590:	eef0 8a40 	vmov.f32	s17, s0
 801b594:	f00e fee6 	bl	802a364 <sinf>
 801b598:	eeb0 8a40 	vmov.f32	s16, s0
 801b59c:	eeb0 0a68 	vmov.f32	s0, s17
 801b5a0:	f00e fe9c 	bl	802a2dc <cosf>
 801b5a4:	4623      	mov	r3, r4
 801b5a6:	f104 0210 	add.w	r2, r4, #16
 801b5aa:	eeb1 6a48 	vneg.f32	s12, s16
 801b5ae:	edd3 7a08 	vldr	s15, [r3, #32]
 801b5b2:	edd3 6a00 	vldr	s13, [r3]
 801b5b6:	ee27 7a88 	vmul.f32	s14, s15, s16
 801b5ba:	ee67 7a80 	vmul.f32	s15, s15, s0
 801b5be:	eea6 7a80 	vfma.f32	s14, s13, s0
 801b5c2:	eee6 7a26 	vfma.f32	s15, s12, s13
 801b5c6:	eca3 7a01 	vstmia	r3!, {s14}
 801b5ca:	429a      	cmp	r2, r3
 801b5cc:	edc3 7a07 	vstr	s15, [r3, #28]
 801b5d0:	d1ed      	bne.n	801b5ae <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 801b5d2:	ecbd 8b02 	vpop	{d8}
 801b5d6:	4620      	mov	r0, r4
 801b5d8:	bd10      	pop	{r4, pc}

0801b5da <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 801b5da:	b510      	push	{r4, lr}
 801b5dc:	ed2d 8b02 	vpush	{d8}
 801b5e0:	4604      	mov	r4, r0
 801b5e2:	eef0 8a40 	vmov.f32	s17, s0
 801b5e6:	f00e febd 	bl	802a364 <sinf>
 801b5ea:	eeb0 8a40 	vmov.f32	s16, s0
 801b5ee:	eeb0 0a68 	vmov.f32	s0, s17
 801b5f2:	f00e fe73 	bl	802a2dc <cosf>
 801b5f6:	4623      	mov	r3, r4
 801b5f8:	f104 0210 	add.w	r2, r4, #16
 801b5fc:	eeb1 6a48 	vneg.f32	s12, s16
 801b600:	edd3 7a04 	vldr	s15, [r3, #16]
 801b604:	edd3 6a00 	vldr	s13, [r3]
 801b608:	ee26 7a27 	vmul.f32	s14, s12, s15
 801b60c:	ee67 7a80 	vmul.f32	s15, s15, s0
 801b610:	eea6 7a80 	vfma.f32	s14, s13, s0
 801b614:	eee6 7a88 	vfma.f32	s15, s13, s16
 801b618:	eca3 7a01 	vstmia	r3!, {s14}
 801b61c:	429a      	cmp	r2, r3
 801b61e:	edc3 7a03 	vstr	s15, [r3, #12]
 801b622:	d1ed      	bne.n	801b600 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 801b624:	ecbd 8b02 	vpop	{d8}
 801b628:	4620      	mov	r0, r4
 801b62a:	bd10      	pop	{r4, pc}

0801b62c <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 801b62c:	4603      	mov	r3, r0
 801b62e:	f100 0210 	add.w	r2, r0, #16
 801b632:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 801b636:	edd3 7a00 	vldr	s15, [r3]
 801b63a:	eee7 7a00 	vfma.f32	s15, s14, s0
 801b63e:	ece3 7a01 	vstmia	r3!, {s15}
 801b642:	4293      	cmp	r3, r2
 801b644:	d1f5      	bne.n	801b632 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 801b646:	4770      	bx	lr

0801b648 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 801b648:	f100 0310 	add.w	r3, r0, #16
 801b64c:	f100 0220 	add.w	r2, r0, #32
 801b650:	ed93 7a08 	vldr	s14, [r3, #32]
 801b654:	edd3 7a00 	vldr	s15, [r3]
 801b658:	eee7 7a00 	vfma.f32	s15, s14, s0
 801b65c:	ece3 7a01 	vstmia	r3!, {s15}
 801b660:	4293      	cmp	r3, r2
 801b662:	d1f5      	bne.n	801b650 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 801b664:	4770      	bx	lr

0801b666 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 801b666:	f100 0320 	add.w	r3, r0, #32
 801b66a:	f100 0230 	add.w	r2, r0, #48	; 0x30
 801b66e:	ed93 7a04 	vldr	s14, [r3, #16]
 801b672:	edd3 7a00 	vldr	s15, [r3]
 801b676:	eee7 7a00 	vfma.f32	s15, s14, s0
 801b67a:	ece3 7a01 	vstmia	r3!, {s15}
 801b67e:	4293      	cmp	r3, r2
 801b680:	d1f5      	bne.n	801b66e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 801b682:	4770      	bx	lr

0801b684 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 801b684:	4603      	mov	r3, r0
 801b686:	f100 0210 	add.w	r2, r0, #16
 801b68a:	edd3 7a00 	vldr	s15, [r3]
 801b68e:	ee67 7a80 	vmul.f32	s15, s15, s0
 801b692:	ece3 7a01 	vstmia	r3!, {s15}
 801b696:	4293      	cmp	r3, r2
 801b698:	d1f7      	bne.n	801b68a <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 801b69a:	4770      	bx	lr

0801b69c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 801b69c:	f100 0310 	add.w	r3, r0, #16
 801b6a0:	f100 0220 	add.w	r2, r0, #32
 801b6a4:	edd3 7a00 	vldr	s15, [r3]
 801b6a8:	ee67 7a80 	vmul.f32	s15, s15, s0
 801b6ac:	ece3 7a01 	vstmia	r3!, {s15}
 801b6b0:	4293      	cmp	r3, r2
 801b6b2:	d1f7      	bne.n	801b6a4 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 801b6b4:	4770      	bx	lr

0801b6b6 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 801b6b6:	f100 0320 	add.w	r3, r0, #32
 801b6ba:	f100 0230 	add.w	r2, r0, #48	; 0x30
 801b6be:	edd3 7a00 	vldr	s15, [r3]
 801b6c2:	ee67 7a80 	vmul.f32	s15, s15, s0
 801b6c6:	ece3 7a01 	vstmia	r3!, {s15}
 801b6ca:	4293      	cmp	r3, r2
 801b6cc:	d1f7      	bne.n	801b6be <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 801b6ce:	4770      	bx	lr

0801b6d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801b6d0:	b570      	push	{r4, r5, r6, lr}
 801b6d2:	694a      	ldr	r2, [r1, #20]
 801b6d4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801b6d6:	684b      	ldr	r3, [r1, #4]
 801b6d8:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801b6da:	1b54      	subs	r4, r2, r5
 801b6dc:	f000 8106 	beq.w	801b8ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801b6e0:	1b9b      	subs	r3, r3, r6
 801b6e2:	d003      	beq.n	801b6ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801b6e4:	4363      	muls	r3, r4
 801b6e6:	2210      	movs	r2, #16
 801b6e8:	fb93 f3f2 	sdiv	r3, r3, r2
 801b6ec:	680c      	ldr	r4, [r1, #0]
 801b6ee:	698a      	ldr	r2, [r1, #24]
 801b6f0:	1b65      	subs	r5, r4, r5
 801b6f2:	f000 80fd 	beq.w	801b8f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801b6f6:	1b92      	subs	r2, r2, r6
 801b6f8:	d003      	beq.n	801b702 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801b6fa:	436a      	muls	r2, r5
 801b6fc:	2410      	movs	r4, #16
 801b6fe:	fb92 f2f4 	sdiv	r2, r2, r4
 801b702:	1a9b      	subs	r3, r3, r2
 801b704:	ee07 3a90 	vmov	s15, r3
 801b708:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801b92c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801b70c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b710:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b714:	ee67 7a84 	vmul.f32	s15, s15, s8
 801b718:	460a      	mov	r2, r1
 801b71a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801b71e:	4603      	mov	r3, r0
 801b720:	f100 040c 	add.w	r4, r0, #12
 801b724:	eeb1 6a43 	vneg.f32	s12, s6
 801b728:	edd2 7a02 	vldr	s15, [r2, #8]
 801b72c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801b730:	3214      	adds	r2, #20
 801b732:	ece3 6a01 	vstmia	r3!, {s13}
 801b736:	ed52 7a02 	vldr	s15, [r2, #-8]
 801b73a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b73e:	429c      	cmp	r4, r3
 801b740:	edc3 7a02 	vstr	s15, [r3, #8]
 801b744:	ed52 7a01 	vldr	s15, [r2, #-4]
 801b748:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b74c:	edc3 7a05 	vstr	s15, [r3, #20]
 801b750:	d1ea      	bne.n	801b728 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801b752:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b754:	698b      	ldr	r3, [r1, #24]
 801b756:	edd0 4a02 	vldr	s9, [r0, #8]
 801b75a:	edd0 3a00 	vldr	s7, [r0]
 801b75e:	edd0 6a01 	vldr	s13, [r0, #4]
 801b762:	ed90 5a05 	vldr	s10, [r0, #20]
 801b766:	ed90 2a03 	vldr	s4, [r0, #12]
 801b76a:	edd0 5a04 	vldr	s11, [r0, #16]
 801b76e:	ed90 1a07 	vldr	s2, [r0, #28]
 801b772:	edd0 2a06 	vldr	s5, [r0, #24]
 801b776:	1a9b      	subs	r3, r3, r2
 801b778:	ee07 3a90 	vmov	s15, r3
 801b77c:	684b      	ldr	r3, [r1, #4]
 801b77e:	1a9b      	subs	r3, r3, r2
 801b780:	ee07 3a10 	vmov	s14, r3
 801b784:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b788:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801b78c:	ee67 7a84 	vmul.f32	s15, s15, s8
 801b790:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801b794:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b798:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801b79c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b7a0:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801b7a4:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b7a8:	ee32 5a45 	vsub.f32	s10, s4, s10
 801b7ac:	ee67 7a83 	vmul.f32	s15, s15, s6
 801b7b0:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801b7b4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b7b6:	694a      	ldr	r2, [r1, #20]
 801b7b8:	1b13      	subs	r3, r2, r4
 801b7ba:	ee07 3a10 	vmov	s14, r3
 801b7be:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b7c2:	680b      	ldr	r3, [r1, #0]
 801b7c4:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b7c8:	1b1b      	subs	r3, r3, r4
 801b7ca:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801b7ce:	ee07 3a10 	vmov	s14, r3
 801b7d2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b7d6:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b7da:	eee6 4a87 	vfma.f32	s9, s13, s14
 801b7de:	ee64 4a86 	vmul.f32	s9, s9, s12
 801b7e2:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801b7e6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b7e8:	698b      	ldr	r3, [r1, #24]
 801b7ea:	1a9b      	subs	r3, r3, r2
 801b7ec:	ee06 3a90 	vmov	s13, r3
 801b7f0:	684b      	ldr	r3, [r1, #4]
 801b7f2:	1a9b      	subs	r3, r3, r2
 801b7f4:	ee07 3a10 	vmov	s14, r3
 801b7f8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801b7fc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b800:	ee66 6a84 	vmul.f32	s13, s13, s8
 801b804:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b808:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801b80c:	eee5 6a87 	vfma.f32	s13, s11, s14
 801b810:	ee66 6a83 	vmul.f32	s13, s13, s6
 801b814:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801b818:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b81a:	694a      	ldr	r2, [r1, #20]
 801b81c:	1b13      	subs	r3, r2, r4
 801b81e:	ee07 3a10 	vmov	s14, r3
 801b822:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b826:	680b      	ldr	r3, [r1, #0]
 801b828:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b82c:	1b1b      	subs	r3, r3, r4
 801b82e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801b832:	ee07 3a10 	vmov	s14, r3
 801b836:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b83a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b83e:	eea5 5a87 	vfma.f32	s10, s11, s14
 801b842:	edd0 5a08 	vldr	s11, [r0, #32]
 801b846:	ee25 5a06 	vmul.f32	s10, s10, s12
 801b84a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801b84e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801b852:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b854:	698b      	ldr	r3, [r1, #24]
 801b856:	1a9b      	subs	r3, r3, r2
 801b858:	ee07 3a10 	vmov	s14, r3
 801b85c:	684b      	ldr	r3, [r1, #4]
 801b85e:	1a9b      	subs	r3, r3, r2
 801b860:	ee01 3a90 	vmov	s3, r3
 801b864:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b868:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801b86c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b870:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801b874:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801b878:	ee61 1a84 	vmul.f32	s3, s3, s8
 801b87c:	eea1 7a21 	vfma.f32	s14, s2, s3
 801b880:	ee27 7a03 	vmul.f32	s14, s14, s6
 801b884:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801b888:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b88a:	694a      	ldr	r2, [r1, #20]
 801b88c:	1b13      	subs	r3, r2, r4
 801b88e:	ee03 3a10 	vmov	s6, r3
 801b892:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801b896:	680b      	ldr	r3, [r1, #0]
 801b898:	ee23 3a04 	vmul.f32	s6, s6, s8
 801b89c:	1b1b      	subs	r3, r3, r4
 801b89e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801b8a2:	ee03 3a10 	vmov	s6, r3
 801b8a6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801b8aa:	ee23 4a04 	vmul.f32	s8, s6, s8
 801b8ae:	eee1 5a04 	vfma.f32	s11, s2, s8
 801b8b2:	ee25 6a86 	vmul.f32	s12, s11, s12
 801b8b6:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801b8ba:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801b8be:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801b8c2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801b8c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b8ca:	dd13      	ble.n	801b8f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801b8cc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b8d0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801b8d4:	63c3      	str	r3, [r0, #60]	; 0x3c
 801b8d6:	eee3 7a87 	vfma.f32	s15, s7, s14
 801b8da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801b8de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b8e2:	dd15      	ble.n	801b910 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801b8e4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b8e8:	6403      	str	r3, [r0, #64]	; 0x40
 801b8ea:	bd70      	pop	{r4, r5, r6, pc}
 801b8ec:	4623      	mov	r3, r4
 801b8ee:	e6fd      	b.n	801b6ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801b8f0:	462a      	mov	r2, r5
 801b8f2:	e706      	b.n	801b702 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801b8f4:	d502      	bpl.n	801b8fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801b8f6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801b8fa:	e7e9      	b.n	801b8d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801b8fc:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801b900:	eea3 2a85 	vfma.f32	s4, s7, s10
 801b904:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801b908:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b90c:	dade      	bge.n	801b8cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801b90e:	e7f2      	b.n	801b8f6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801b910:	d502      	bpl.n	801b918 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801b912:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801b916:	e7e7      	b.n	801b8e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801b918:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801b91c:	eee3 4a86 	vfma.f32	s9, s7, s12
 801b920:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801b924:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b928:	dadc      	bge.n	801b8e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801b92a:	e7f2      	b.n	801b912 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801b92c:	3d800000 	.word	0x3d800000

0801b930 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801b930:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b934:	2714      	movs	r7, #20
 801b936:	435f      	muls	r7, r3
 801b938:	eb02 0c07 	add.w	ip, r2, r7
 801b93c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801b940:	f115 0e0f 	adds.w	lr, r5, #15
 801b944:	f100 80a2 	bmi.w	801ba8c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801b948:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801b94c:	9c08      	ldr	r4, [sp, #32]
 801b94e:	f8c0 e014 	str.w	lr, [r0, #20]
 801b952:	2614      	movs	r6, #20
 801b954:	4366      	muls	r6, r4
 801b956:	eb02 0806 	add.w	r8, r2, r6
 801b95a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b95e:	f115 040f 	adds.w	r4, r5, #15
 801b962:	f100 809f 	bmi.w	801baa4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801b966:	1124      	asrs	r4, r4, #4
 801b968:	eba4 040e 	sub.w	r4, r4, lr
 801b96c:	6184      	str	r4, [r0, #24]
 801b96e:	2c00      	cmp	r4, #0
 801b970:	f000 808a 	beq.w	801ba88 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801b974:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801b978:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801b97c:	5995      	ldr	r5, [r2, r6]
 801b97e:	eba4 0809 	sub.w	r8, r4, r9
 801b982:	59d4      	ldr	r4, [r2, r7]
 801b984:	eba5 0a04 	sub.w	sl, r5, r4
 801b988:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801b98c:	fb0e fe05 	mul.w	lr, lr, r5
 801b990:	fb0a ee19 	mls	lr, sl, r9, lr
 801b994:	fb08 e404 	mla	r4, r8, r4, lr
 801b998:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801b99c:	3c01      	subs	r4, #1
 801b99e:	19a4      	adds	r4, r4, r6
 801b9a0:	f100 808c 	bmi.w	801babc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801b9a4:	fb94 fef6 	sdiv	lr, r4, r6
 801b9a8:	f8c0 e000 	str.w	lr, [r0]
 801b9ac:	fb06 441e 	mls	r4, r6, lr, r4
 801b9b0:	6104      	str	r4, [r0, #16]
 801b9b2:	2d00      	cmp	r5, #0
 801b9b4:	f2c0 8095 	blt.w	801bae2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801b9b8:	fb95 f4f6 	sdiv	r4, r5, r6
 801b9bc:	6044      	str	r4, [r0, #4]
 801b9be:	fb06 5514 	mls	r5, r6, r4, r5
 801b9c2:	6085      	str	r5, [r0, #8]
 801b9c4:	60c6      	str	r6, [r0, #12]
 801b9c6:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801b9ca:	6945      	ldr	r5, [r0, #20]
 801b9cc:	59d2      	ldr	r2, [r2, r7]
 801b9ce:	eddf 6a4d 	vldr	s13, [pc, #308]	; 801bb04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801b9d2:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801b9d6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801b9da:	ee07 4a10 	vmov	s14, r4
 801b9de:	6804      	ldr	r4, [r0, #0]
 801b9e0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801b9e4:	ee07 2a90 	vmov	s15, r2
 801b9e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b9ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b9f0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b9f4:	ee27 7a26 	vmul.f32	s14, s14, s13
 801b9f8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b9fc:	edd3 6a00 	vldr	s13, [r3]
 801ba00:	eee6 6a07 	vfma.f32	s13, s12, s14
 801ba04:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801ba08:	eee6 6a27 	vfma.f32	s13, s12, s15
 801ba0c:	edc0 6a07 	vstr	s13, [r0, #28]
 801ba10:	edd0 6a01 	vldr	s13, [r0, #4]
 801ba14:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801ba18:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801ba1c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801ba20:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801ba24:	ed80 6a08 	vstr	s12, [r0, #32]
 801ba28:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801ba2a:	6242      	str	r2, [r0, #36]	; 0x24
 801ba2c:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801ba30:	ed93 6a03 	vldr	s12, [r3, #12]
 801ba34:	eea5 6a87 	vfma.f32	s12, s11, s14
 801ba38:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801ba3c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801ba40:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801ba44:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801ba48:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801ba4c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801ba50:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801ba54:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801ba56:	6302      	str	r2, [r0, #48]	; 0x30
 801ba58:	ed93 6a06 	vldr	s12, [r3, #24]
 801ba5c:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801ba60:	eea5 6a87 	vfma.f32	s12, s11, s14
 801ba64:	eeb0 7a46 	vmov.f32	s14, s12
 801ba68:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801ba6c:	eea6 7a27 	vfma.f32	s14, s12, s15
 801ba70:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801ba74:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801ba78:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801ba7c:	eee6 7a87 	vfma.f32	s15, s13, s14
 801ba80:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801ba84:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801ba86:	63c3      	str	r3, [r0, #60]	; 0x3c
 801ba88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ba8c:	f1c5 0501 	rsb	r5, r5, #1
 801ba90:	f015 050f 	ands.w	r5, r5, #15
 801ba94:	bf18      	it	ne
 801ba96:	2501      	movne	r5, #1
 801ba98:	2410      	movs	r4, #16
 801ba9a:	fb9e fef4 	sdiv	lr, lr, r4
 801ba9e:	ebae 0e05 	sub.w	lr, lr, r5
 801baa2:	e753      	b.n	801b94c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801baa4:	f1c5 0501 	rsb	r5, r5, #1
 801baa8:	f015 050f 	ands.w	r5, r5, #15
 801baac:	bf18      	it	ne
 801baae:	2501      	movne	r5, #1
 801bab0:	f04f 0910 	mov.w	r9, #16
 801bab4:	fb94 f4f9 	sdiv	r4, r4, r9
 801bab8:	1b64      	subs	r4, r4, r5
 801baba:	e755      	b.n	801b968 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801babc:	4264      	negs	r4, r4
 801babe:	fb94 fef6 	sdiv	lr, r4, r6
 801bac2:	f1ce 0800 	rsb	r8, lr, #0
 801bac6:	fb06 441e 	mls	r4, r6, lr, r4
 801baca:	f8c0 8000 	str.w	r8, [r0]
 801bace:	6104      	str	r4, [r0, #16]
 801bad0:	2c00      	cmp	r4, #0
 801bad2:	f43f af6e 	beq.w	801b9b2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801bad6:	ea6f 0e0e 	mvn.w	lr, lr
 801bada:	f8c0 e000 	str.w	lr, [r0]
 801bade:	1b34      	subs	r4, r6, r4
 801bae0:	e766      	b.n	801b9b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801bae2:	426d      	negs	r5, r5
 801bae4:	fb95 f4f6 	sdiv	r4, r5, r6
 801bae8:	f1c4 0e00 	rsb	lr, r4, #0
 801baec:	fb06 5514 	mls	r5, r6, r4, r5
 801baf0:	f8c0 e004 	str.w	lr, [r0, #4]
 801baf4:	6085      	str	r5, [r0, #8]
 801baf6:	2d00      	cmp	r5, #0
 801baf8:	f43f af64 	beq.w	801b9c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801bafc:	43e4      	mvns	r4, r4
 801bafe:	6044      	str	r4, [r0, #4]
 801bb00:	1b75      	subs	r5, r6, r5
 801bb02:	e75e      	b.n	801b9c2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801bb04:	3d800000 	.word	0x3d800000

0801bb08 <_ZN8touchgfx7Unicode6strlenEPKt>:
 801bb08:	4602      	mov	r2, r0
 801bb0a:	b148      	cbz	r0, 801bb20 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801bb0c:	2300      	movs	r3, #0
 801bb0e:	b298      	uxth	r0, r3
 801bb10:	3301      	adds	r3, #1
 801bb12:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801bb16:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801bb1a:	2900      	cmp	r1, #0
 801bb1c:	d1f7      	bne.n	801bb0e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801bb1e:	4770      	bx	lr
 801bb20:	4770      	bx	lr

0801bb22 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801bb22:	b530      	push	{r4, r5, lr}
 801bb24:	4604      	mov	r4, r0
 801bb26:	b159      	cbz	r1, 801bb40 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801bb28:	b148      	cbz	r0, 801bb3e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801bb2a:	2300      	movs	r3, #0
 801bb2c:	b298      	uxth	r0, r3
 801bb2e:	4282      	cmp	r2, r0
 801bb30:	d905      	bls.n	801bb3e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801bb32:	5ccd      	ldrb	r5, [r1, r3]
 801bb34:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801bb38:	3301      	adds	r3, #1
 801bb3a:	2d00      	cmp	r5, #0
 801bb3c:	d1f6      	bne.n	801bb2c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801bb3e:	bd30      	pop	{r4, r5, pc}
 801bb40:	4608      	mov	r0, r1
 801bb42:	e7fc      	b.n	801bb3e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801bb44 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 801bb44:	b5f0      	push	{r4, r5, r6, r7, lr}
 801bb46:	b08b      	sub	sp, #44	; 0x2c
 801bb48:	468c      	mov	ip, r1
 801bb4a:	2100      	movs	r1, #0
 801bb4c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801bb50:	4604      	mov	r4, r0
 801bb52:	261f      	movs	r6, #31
 801bb54:	af01      	add	r7, sp, #4
 801bb56:	fb94 fef3 	sdiv	lr, r4, r3
 801bb5a:	fb03 441e 	mls	r4, r3, lr, r4
 801bb5e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801bb62:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801bb66:	b2ec      	uxtb	r4, r5
 801bb68:	2d09      	cmp	r5, #9
 801bb6a:	bfd4      	ite	le
 801bb6c:	3430      	addle	r4, #48	; 0x30
 801bb6e:	3457      	addgt	r4, #87	; 0x57
 801bb70:	b2e4      	uxtb	r4, r4
 801bb72:	55bc      	strb	r4, [r7, r6]
 801bb74:	4674      	mov	r4, lr
 801bb76:	1e71      	subs	r1, r6, #1
 801bb78:	b974      	cbnz	r4, 801bb98 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801bb7a:	2800      	cmp	r0, #0
 801bb7c:	da05      	bge.n	801bb8a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801bb7e:	ab0a      	add	r3, sp, #40	; 0x28
 801bb80:	4419      	add	r1, r3
 801bb82:	232d      	movs	r3, #45	; 0x2d
 801bb84:	f801 3c24 	strb.w	r3, [r1, #-36]
 801bb88:	1eb1      	subs	r1, r6, #2
 801bb8a:	3101      	adds	r1, #1
 801bb8c:	4439      	add	r1, r7
 801bb8e:	4660      	mov	r0, ip
 801bb90:	f7ff ffc7 	bl	801bb22 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801bb94:	b00b      	add	sp, #44	; 0x2c
 801bb96:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801bb98:	460e      	mov	r6, r1
 801bb9a:	e7dc      	b.n	801bb56 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801bb9c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801bb9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801bb9e:	b08b      	sub	sp, #44	; 0x2c
 801bba0:	468c      	mov	ip, r1
 801bba2:	2100      	movs	r1, #0
 801bba4:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801bba8:	ae01      	add	r6, sp, #4
 801bbaa:	211f      	movs	r1, #31
 801bbac:	fbb0 f7f3 	udiv	r7, r0, r3
 801bbb0:	fb03 0517 	mls	r5, r3, r7, r0
 801bbb4:	b2ec      	uxtb	r4, r5
 801bbb6:	2d09      	cmp	r5, #9
 801bbb8:	bfd4      	ite	le
 801bbba:	3430      	addle	r4, #48	; 0x30
 801bbbc:	3457      	addgt	r4, #87	; 0x57
 801bbbe:	b2e4      	uxtb	r4, r4
 801bbc0:	558c      	strb	r4, [r1, r6]
 801bbc2:	4638      	mov	r0, r7
 801bbc4:	1e4c      	subs	r4, r1, #1
 801bbc6:	b92f      	cbnz	r7, 801bbd4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801bbc8:	4431      	add	r1, r6
 801bbca:	4660      	mov	r0, ip
 801bbcc:	f7ff ffa9 	bl	801bb22 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801bbd0:	b00b      	add	sp, #44	; 0x2c
 801bbd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801bbd4:	4621      	mov	r1, r4
 801bbd6:	e7e9      	b.n	801bbac <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801bbd8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801bbd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bbdc:	4691      	mov	r9, r2
 801bbde:	b085      	sub	sp, #20
 801bbe0:	6802      	ldr	r2, [r0, #0]
 801bbe2:	9201      	str	r2, [sp, #4]
 801bbe4:	4688      	mov	r8, r1
 801bbe6:	4683      	mov	fp, r0
 801bbe8:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 801bbec:	9103      	str	r1, [sp, #12]
 801bbee:	4610      	mov	r0, r2
 801bbf0:	461c      	mov	r4, r3
 801bbf2:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801bbf6:	9302      	str	r3, [sp, #8]
 801bbf8:	f7ff ff86 	bl	801bb08 <_ZN8touchgfx7Unicode6strlenEPKt>
 801bbfc:	f1b8 0f00 	cmp.w	r8, #0
 801bc00:	bf0c      	ite	eq
 801bc02:	4684      	moveq	ip, r0
 801bc04:	f100 0c01 	addne.w	ip, r0, #1
 801bc08:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 801bc0c:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801bc10:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801bc12:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bc14:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801bc18:	9903      	ldr	r1, [sp, #12]
 801bc1a:	fa1f fc8c 	uxth.w	ip, ip
 801bc1e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801bc22:	d041      	beq.n	801bca8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801bc24:	d834      	bhi.n	801bc90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801bc26:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801bc2a:	d059      	beq.n	801bce0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801bc2c:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801bc30:	d03a      	beq.n	801bca8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801bc32:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801bc36:	d034      	beq.n	801bca2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801bc38:	2400      	movs	r4, #0
 801bc3a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801bc3e:	3a01      	subs	r2, #1
 801bc40:	b169      	cbz	r1, 801bc5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801bc42:	9911      	ldr	r1, [sp, #68]	; 0x44
 801bc44:	458c      	cmp	ip, r1
 801bc46:	da09      	bge.n	801bc5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801bc48:	eba1 010c 	sub.w	r1, r1, ip
 801bc4c:	b289      	uxth	r1, r1
 801bc4e:	b933      	cbnz	r3, 801bc5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801bc50:	2e00      	cmp	r6, #0
 801bc52:	d051      	beq.n	801bcf8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801bc54:	2800      	cmp	r0, #0
 801bc56:	d04f      	beq.n	801bcf8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801bc58:	440c      	add	r4, r1
 801bc5a:	b2a4      	uxth	r4, r4
 801bc5c:	2100      	movs	r1, #0
 801bc5e:	682b      	ldr	r3, [r5, #0]
 801bc60:	4293      	cmp	r3, r2
 801bc62:	da07      	bge.n	801bc74 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801bc64:	f1b8 0f00 	cmp.w	r8, #0
 801bc68:	d004      	beq.n	801bc74 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801bc6a:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801bc6e:	682b      	ldr	r3, [r5, #0]
 801bc70:	3301      	adds	r3, #1
 801bc72:	602b      	str	r3, [r5, #0]
 801bc74:	2730      	movs	r7, #48	; 0x30
 801bc76:	2c00      	cmp	r4, #0
 801bc78:	d04e      	beq.n	801bd18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801bc7a:	682e      	ldr	r6, [r5, #0]
 801bc7c:	3c01      	subs	r4, #1
 801bc7e:	42b2      	cmp	r2, r6
 801bc80:	b2a4      	uxth	r4, r4
 801bc82:	dd49      	ble.n	801bd18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801bc84:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801bc88:	682b      	ldr	r3, [r5, #0]
 801bc8a:	3301      	adds	r3, #1
 801bc8c:	602b      	str	r3, [r5, #0]
 801bc8e:	e7f2      	b.n	801bc76 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801bc90:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801bc94:	d01d      	beq.n	801bcd2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801bc96:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801bc9a:	d002      	beq.n	801bca2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801bc9c:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801bca0:	e7c9      	b.n	801bc36 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801bca2:	4684      	mov	ip, r0
 801bca4:	f04f 0800 	mov.w	r8, #0
 801bca8:	2c00      	cmp	r4, #0
 801bcaa:	d0c6      	beq.n	801bc3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801bcac:	b947      	cbnz	r7, 801bcc0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801bcae:	2801      	cmp	r0, #1
 801bcb0:	d106      	bne.n	801bcc0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801bcb2:	8814      	ldrh	r4, [r2, #0]
 801bcb4:	2c30      	cmp	r4, #48	; 0x30
 801bcb6:	bf02      	ittt	eq
 801bcb8:	3202      	addeq	r2, #2
 801bcba:	f8cb 2000 	streq.w	r2, [fp]
 801bcbe:	4638      	moveq	r0, r7
 801bcc0:	45bc      	cmp	ip, r7
 801bcc2:	da14      	bge.n	801bcee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801bcc4:	b2bf      	uxth	r7, r7
 801bcc6:	eba7 040c 	sub.w	r4, r7, ip
 801bcca:	b2a4      	uxth	r4, r4
 801bccc:	46bc      	mov	ip, r7
 801bcce:	2600      	movs	r6, #0
 801bcd0:	e7b3      	b.n	801bc3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801bcd2:	4684      	mov	ip, r0
 801bcd4:	b16c      	cbz	r4, 801bcf2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801bcd6:	42b8      	cmp	r0, r7
 801bcd8:	dd00      	ble.n	801bcdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801bcda:	b2b8      	uxth	r0, r7
 801bcdc:	2400      	movs	r4, #0
 801bcde:	e003      	b.n	801bce8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801bce0:	f04f 0c01 	mov.w	ip, #1
 801bce4:	2400      	movs	r4, #0
 801bce6:	4660      	mov	r0, ip
 801bce8:	4626      	mov	r6, r4
 801bcea:	46a0      	mov	r8, r4
 801bcec:	e7a5      	b.n	801bc3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801bcee:	2400      	movs	r4, #0
 801bcf0:	e7ed      	b.n	801bcce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801bcf2:	4626      	mov	r6, r4
 801bcf4:	46a0      	mov	r8, r4
 801bcf6:	e7a0      	b.n	801bc3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801bcf8:	2900      	cmp	r1, #0
 801bcfa:	d0b0      	beq.n	801bc5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801bcfc:	2720      	movs	r7, #32
 801bcfe:	682e      	ldr	r6, [r5, #0]
 801bd00:	2900      	cmp	r1, #0
 801bd02:	d0ac      	beq.n	801bc5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801bd04:	3901      	subs	r1, #1
 801bd06:	4296      	cmp	r6, r2
 801bd08:	b289      	uxth	r1, r1
 801bd0a:	daa7      	bge.n	801bc5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801bd0c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801bd10:	682b      	ldr	r3, [r5, #0]
 801bd12:	3301      	adds	r3, #1
 801bd14:	602b      	str	r3, [r5, #0]
 801bd16:	e7f2      	b.n	801bcfe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801bd18:	b188      	cbz	r0, 801bd3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801bd1a:	682b      	ldr	r3, [r5, #0]
 801bd1c:	3801      	subs	r0, #1
 801bd1e:	429a      	cmp	r2, r3
 801bd20:	b280      	uxth	r0, r0
 801bd22:	dd0c      	ble.n	801bd3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801bd24:	f8db 3000 	ldr.w	r3, [fp]
 801bd28:	1c9c      	adds	r4, r3, #2
 801bd2a:	f8cb 4000 	str.w	r4, [fp]
 801bd2e:	881c      	ldrh	r4, [r3, #0]
 801bd30:	682b      	ldr	r3, [r5, #0]
 801bd32:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801bd36:	682b      	ldr	r3, [r5, #0]
 801bd38:	3301      	adds	r3, #1
 801bd3a:	602b      	str	r3, [r5, #0]
 801bd3c:	e7ec      	b.n	801bd18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801bd3e:	2620      	movs	r6, #32
 801bd40:	b151      	cbz	r1, 801bd58 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801bd42:	6828      	ldr	r0, [r5, #0]
 801bd44:	3901      	subs	r1, #1
 801bd46:	4282      	cmp	r2, r0
 801bd48:	b289      	uxth	r1, r1
 801bd4a:	dd05      	ble.n	801bd58 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801bd4c:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801bd50:	682b      	ldr	r3, [r5, #0]
 801bd52:	3301      	adds	r3, #1
 801bd54:	602b      	str	r3, [r5, #0]
 801bd56:	e7f3      	b.n	801bd40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801bd58:	b005      	add	sp, #20
 801bd5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bd5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801bd5e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801bd62:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801bd66:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801bd6a:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801bd6e:	2400      	movs	r4, #0
 801bd70:	8014      	strh	r4, [r2, #0]
 801bd72:	701c      	strb	r4, [r3, #0]
 801bd74:	f888 4000 	strb.w	r4, [r8]
 801bd78:	f88c 4000 	strb.w	r4, [ip]
 801bd7c:	f88e 4000 	strb.w	r4, [lr]
 801bd80:	703c      	strb	r4, [r7, #0]
 801bd82:	6804      	ldr	r4, [r0, #0]
 801bd84:	b1a4      	cbz	r4, 801bdb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801bd86:	8824      	ldrh	r4, [r4, #0]
 801bd88:	f04f 0901 	mov.w	r9, #1
 801bd8c:	b314      	cbz	r4, 801bdd4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801bd8e:	2c2b      	cmp	r4, #43	; 0x2b
 801bd90:	d001      	beq.n	801bd96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801bd92:	2c20      	cmp	r4, #32
 801bd94:	d110      	bne.n	801bdb8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801bd96:	8014      	strh	r4, [r2, #0]
 801bd98:	6804      	ldr	r4, [r0, #0]
 801bd9a:	b10c      	cbz	r4, 801bda0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801bd9c:	3402      	adds	r4, #2
 801bd9e:	6004      	str	r4, [r0, #0]
 801bda0:	680c      	ldr	r4, [r1, #0]
 801bda2:	b10c      	cbz	r4, 801bda8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801bda4:	3401      	adds	r4, #1
 801bda6:	600c      	str	r4, [r1, #0]
 801bda8:	6804      	ldr	r4, [r0, #0]
 801bdaa:	b17c      	cbz	r4, 801bdcc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801bdac:	8824      	ldrh	r4, [r4, #0]
 801bdae:	e7ed      	b.n	801bd8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801bdb0:	680c      	ldr	r4, [r1, #0]
 801bdb2:	b17c      	cbz	r4, 801bdd4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801bdb4:	7824      	ldrb	r4, [r4, #0]
 801bdb6:	e7e7      	b.n	801bd88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801bdb8:	2c2d      	cmp	r4, #45	; 0x2d
 801bdba:	d102      	bne.n	801bdc2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801bdbc:	f883 9000 	strb.w	r9, [r3]
 801bdc0:	e7ea      	b.n	801bd98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801bdc2:	2c23      	cmp	r4, #35	; 0x23
 801bdc4:	d107      	bne.n	801bdd6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801bdc6:	f888 9000 	strb.w	r9, [r8]
 801bdca:	e7e5      	b.n	801bd98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801bdcc:	680c      	ldr	r4, [r1, #0]
 801bdce:	b10c      	cbz	r4, 801bdd4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801bdd0:	7824      	ldrb	r4, [r4, #0]
 801bdd2:	e7db      	b.n	801bd8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801bdd4:	2400      	movs	r4, #0
 801bdd6:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801bdda:	2b09      	cmp	r3, #9
 801bddc:	d901      	bls.n	801bde2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801bdde:	2c2a      	cmp	r4, #42	; 0x2a
 801bde0:	d122      	bne.n	801be28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801bde2:	2301      	movs	r3, #1
 801bde4:	2c30      	cmp	r4, #48	; 0x30
 801bde6:	f88e 3000 	strb.w	r3, [lr]
 801bdea:	d10d      	bne.n	801be08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801bdec:	f88c 3000 	strb.w	r3, [ip]
 801bdf0:	6803      	ldr	r3, [r0, #0]
 801bdf2:	b10b      	cbz	r3, 801bdf8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801bdf4:	3302      	adds	r3, #2
 801bdf6:	6003      	str	r3, [r0, #0]
 801bdf8:	680b      	ldr	r3, [r1, #0]
 801bdfa:	b10b      	cbz	r3, 801be00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801bdfc:	3301      	adds	r3, #1
 801bdfe:	600b      	str	r3, [r1, #0]
 801be00:	6803      	ldr	r3, [r0, #0]
 801be02:	2b00      	cmp	r3, #0
 801be04:	d02f      	beq.n	801be66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801be06:	881c      	ldrh	r4, [r3, #0]
 801be08:	2c2a      	cmp	r4, #42	; 0x2a
 801be0a:	d135      	bne.n	801be78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801be0c:	f04f 33ff 	mov.w	r3, #4294967295
 801be10:	6033      	str	r3, [r6, #0]
 801be12:	6803      	ldr	r3, [r0, #0]
 801be14:	b10b      	cbz	r3, 801be1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801be16:	3302      	adds	r3, #2
 801be18:	6003      	str	r3, [r0, #0]
 801be1a:	680b      	ldr	r3, [r1, #0]
 801be1c:	b10b      	cbz	r3, 801be22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801be1e:	3301      	adds	r3, #1
 801be20:	600b      	str	r3, [r1, #0]
 801be22:	6803      	ldr	r3, [r0, #0]
 801be24:	b31b      	cbz	r3, 801be6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801be26:	881c      	ldrh	r4, [r3, #0]
 801be28:	2c2e      	cmp	r4, #46	; 0x2e
 801be2a:	d11a      	bne.n	801be62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801be2c:	2301      	movs	r3, #1
 801be2e:	703b      	strb	r3, [r7, #0]
 801be30:	6803      	ldr	r3, [r0, #0]
 801be32:	b10b      	cbz	r3, 801be38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801be34:	3302      	adds	r3, #2
 801be36:	6003      	str	r3, [r0, #0]
 801be38:	680b      	ldr	r3, [r1, #0]
 801be3a:	b10b      	cbz	r3, 801be40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801be3c:	3301      	adds	r3, #1
 801be3e:	600b      	str	r3, [r1, #0]
 801be40:	6803      	ldr	r3, [r0, #0]
 801be42:	2b00      	cmp	r3, #0
 801be44:	d036      	beq.n	801beb4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801be46:	881b      	ldrh	r3, [r3, #0]
 801be48:	2b2a      	cmp	r3, #42	; 0x2a
 801be4a:	d137      	bne.n	801bebc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801be4c:	f04f 33ff 	mov.w	r3, #4294967295
 801be50:	602b      	str	r3, [r5, #0]
 801be52:	6803      	ldr	r3, [r0, #0]
 801be54:	b10b      	cbz	r3, 801be5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801be56:	3302      	adds	r3, #2
 801be58:	6003      	str	r3, [r0, #0]
 801be5a:	680b      	ldr	r3, [r1, #0]
 801be5c:	b10b      	cbz	r3, 801be62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801be5e:	3301      	adds	r3, #1
 801be60:	600b      	str	r3, [r1, #0]
 801be62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801be66:	680c      	ldr	r4, [r1, #0]
 801be68:	b134      	cbz	r4, 801be78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801be6a:	7824      	ldrb	r4, [r4, #0]
 801be6c:	e7cc      	b.n	801be08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801be6e:	680b      	ldr	r3, [r1, #0]
 801be70:	2b00      	cmp	r3, #0
 801be72:	d0f6      	beq.n	801be62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801be74:	781c      	ldrb	r4, [r3, #0]
 801be76:	e7d7      	b.n	801be28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801be78:	2300      	movs	r3, #0
 801be7a:	6033      	str	r3, [r6, #0]
 801be7c:	220a      	movs	r2, #10
 801be7e:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801be82:	fa1f f38c 	uxth.w	r3, ip
 801be86:	2b09      	cmp	r3, #9
 801be88:	d8ce      	bhi.n	801be28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801be8a:	6833      	ldr	r3, [r6, #0]
 801be8c:	fb02 c303 	mla	r3, r2, r3, ip
 801be90:	6033      	str	r3, [r6, #0]
 801be92:	6803      	ldr	r3, [r0, #0]
 801be94:	b10b      	cbz	r3, 801be9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801be96:	3302      	adds	r3, #2
 801be98:	6003      	str	r3, [r0, #0]
 801be9a:	680b      	ldr	r3, [r1, #0]
 801be9c:	b10b      	cbz	r3, 801bea2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801be9e:	3301      	adds	r3, #1
 801bea0:	600b      	str	r3, [r1, #0]
 801bea2:	6803      	ldr	r3, [r0, #0]
 801bea4:	b10b      	cbz	r3, 801beaa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801bea6:	881c      	ldrh	r4, [r3, #0]
 801bea8:	e7e9      	b.n	801be7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801beaa:	680c      	ldr	r4, [r1, #0]
 801beac:	2c00      	cmp	r4, #0
 801beae:	d0e6      	beq.n	801be7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801beb0:	7824      	ldrb	r4, [r4, #0]
 801beb2:	e7e4      	b.n	801be7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801beb4:	680b      	ldr	r3, [r1, #0]
 801beb6:	b10b      	cbz	r3, 801bebc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801beb8:	781b      	ldrb	r3, [r3, #0]
 801beba:	e7c5      	b.n	801be48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801bebc:	2200      	movs	r2, #0
 801bebe:	602a      	str	r2, [r5, #0]
 801bec0:	240a      	movs	r4, #10
 801bec2:	3b30      	subs	r3, #48	; 0x30
 801bec4:	b29e      	uxth	r6, r3
 801bec6:	2e09      	cmp	r6, #9
 801bec8:	682a      	ldr	r2, [r5, #0]
 801beca:	d813      	bhi.n	801bef4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801becc:	fb04 3302 	mla	r3, r4, r2, r3
 801bed0:	602b      	str	r3, [r5, #0]
 801bed2:	6803      	ldr	r3, [r0, #0]
 801bed4:	b10b      	cbz	r3, 801beda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801bed6:	3302      	adds	r3, #2
 801bed8:	6003      	str	r3, [r0, #0]
 801beda:	680b      	ldr	r3, [r1, #0]
 801bedc:	b10b      	cbz	r3, 801bee2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801bede:	3301      	adds	r3, #1
 801bee0:	600b      	str	r3, [r1, #0]
 801bee2:	6803      	ldr	r3, [r0, #0]
 801bee4:	b10b      	cbz	r3, 801beea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801bee6:	881b      	ldrh	r3, [r3, #0]
 801bee8:	e7eb      	b.n	801bec2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801beea:	680b      	ldr	r3, [r1, #0]
 801beec:	2b00      	cmp	r3, #0
 801beee:	d0e8      	beq.n	801bec2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801bef0:	781b      	ldrb	r3, [r3, #0]
 801bef2:	e7e6      	b.n	801bec2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801bef4:	2a06      	cmp	r2, #6
 801bef6:	bfa8      	it	ge
 801bef8:	2206      	movge	r2, #6
 801befa:	602a      	str	r2, [r5, #0]
 801befc:	e7b1      	b.n	801be62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801befe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801befe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf02:	b0a3      	sub	sp, #140	; 0x8c
 801bf04:	2600      	movs	r6, #0
 801bf06:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801bf0a:	4607      	mov	r7, r0
 801bf0c:	4688      	mov	r8, r1
 801bf0e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801bf12:	4631      	mov	r1, r6
 801bf14:	2242      	movs	r2, #66	; 0x42
 801bf16:	4648      	mov	r0, r9
 801bf18:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801bf1a:	960d      	str	r6, [sp, #52]	; 0x34
 801bf1c:	f00f fb6d 	bl	802b5fa <memset>
 801bf20:	b15f      	cbz	r7, 801bf3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801bf22:	f108 3aff 	add.w	sl, r8, #4294967295
 801bf26:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bf28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bf2a:	b152      	cbz	r2, 801bf42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801bf2c:	8812      	ldrh	r2, [r2, #0]
 801bf2e:	b10a      	cbz	r2, 801bf34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801bf30:	459a      	cmp	sl, r3
 801bf32:	dc2e      	bgt.n	801bf92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801bf34:	2200      	movs	r2, #0
 801bf36:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801bf3a:	4638      	mov	r0, r7
 801bf3c:	b023      	add	sp, #140	; 0x8c
 801bf3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bf42:	9a08      	ldr	r2, [sp, #32]
 801bf44:	2a00      	cmp	r2, #0
 801bf46:	d0f5      	beq.n	801bf34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801bf48:	7812      	ldrb	r2, [r2, #0]
 801bf4a:	e7f0      	b.n	801bf2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801bf4c:	2d00      	cmp	r5, #0
 801bf4e:	d0ea      	beq.n	801bf26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bf50:	782a      	ldrb	r2, [r5, #0]
 801bf52:	b142      	cbz	r2, 801bf66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801bf54:	2a25      	cmp	r2, #37	; 0x25
 801bf56:	d001      	beq.n	801bf5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801bf58:	459a      	cmp	sl, r3
 801bf5a:	dc08      	bgt.n	801bf6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801bf5c:	f1bb 0f00 	cmp.w	fp, #0
 801bf60:	d121      	bne.n	801bfa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801bf62:	2d00      	cmp	r5, #0
 801bf64:	d0df      	beq.n	801bf26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bf66:	782a      	ldrb	r2, [r5, #0]
 801bf68:	f04f 0b00 	mov.w	fp, #0
 801bf6c:	e01d      	b.n	801bfaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801bf6e:	f1bb 0f00 	cmp.w	fp, #0
 801bf72:	d078      	beq.n	801c066 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801bf74:	f8bb 2000 	ldrh.w	r2, [fp]
 801bf78:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801bf7c:	f1bb 0f00 	cmp.w	fp, #0
 801bf80:	d002      	beq.n	801bf88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801bf82:	f10b 0202 	add.w	r2, fp, #2
 801bf86:	9209      	str	r2, [sp, #36]	; 0x24
 801bf88:	b10d      	cbz	r5, 801bf8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801bf8a:	3501      	adds	r5, #1
 801bf8c:	9508      	str	r5, [sp, #32]
 801bf8e:	3301      	adds	r3, #1
 801bf90:	930d      	str	r3, [sp, #52]	; 0x34
 801bf92:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801bf96:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bf98:	f1bb 0f00 	cmp.w	fp, #0
 801bf9c:	d0d6      	beq.n	801bf4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801bf9e:	f8bb 2000 	ldrh.w	r2, [fp]
 801bfa2:	2a00      	cmp	r2, #0
 801bfa4:	d1d6      	bne.n	801bf54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801bfa6:	f8bb 2000 	ldrh.w	r2, [fp]
 801bfaa:	2a00      	cmp	r2, #0
 801bfac:	d0bb      	beq.n	801bf26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bfae:	459a      	cmp	sl, r3
 801bfb0:	ddb9      	ble.n	801bf26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bfb2:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801bfb6:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801bfba:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801bfbe:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801bfc2:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801bfc6:	960e      	str	r6, [sp, #56]	; 0x38
 801bfc8:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801bfcc:	960f      	str	r6, [sp, #60]	; 0x3c
 801bfce:	f1bb 0f00 	cmp.w	fp, #0
 801bfd2:	d002      	beq.n	801bfda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801bfd4:	f10b 0302 	add.w	r3, fp, #2
 801bfd8:	9309      	str	r3, [sp, #36]	; 0x24
 801bfda:	b10d      	cbz	r5, 801bfe0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801bfdc:	1c6b      	adds	r3, r5, #1
 801bfde:	9308      	str	r3, [sp, #32]
 801bfe0:	ab0f      	add	r3, sp, #60	; 0x3c
 801bfe2:	9305      	str	r3, [sp, #20]
 801bfe4:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801bfe8:	9304      	str	r3, [sp, #16]
 801bfea:	ab0e      	add	r3, sp, #56	; 0x38
 801bfec:	9303      	str	r3, [sp, #12]
 801bfee:	ab0c      	add	r3, sp, #48	; 0x30
 801bff0:	9302      	str	r3, [sp, #8]
 801bff2:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801bff6:	9301      	str	r3, [sp, #4]
 801bff8:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801bffc:	9300      	str	r3, [sp, #0]
 801bffe:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801c002:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801c006:	a908      	add	r1, sp, #32
 801c008:	a809      	add	r0, sp, #36	; 0x24
 801c00a:	f7ff fea8 	bl	801bd5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801c00e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c010:	2b00      	cmp	r3, #0
 801c012:	bfbe      	ittt	lt
 801c014:	6823      	ldrlt	r3, [r4, #0]
 801c016:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801c01a:	930e      	strlt	r3, [sp, #56]	; 0x38
 801c01c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c01e:	bfb8      	it	lt
 801c020:	3404      	addlt	r4, #4
 801c022:	2b00      	cmp	r3, #0
 801c024:	bfb8      	it	lt
 801c026:	6823      	ldrlt	r3, [r4, #0]
 801c028:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c02c:	bfbe      	ittt	lt
 801c02e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801c032:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801c034:	3404      	addlt	r4, #4
 801c036:	b1d9      	cbz	r1, 801c070 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801c038:	880b      	ldrh	r3, [r1, #0]
 801c03a:	2b69      	cmp	r3, #105	; 0x69
 801c03c:	d01f      	beq.n	801c07e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c03e:	d82f      	bhi.n	801c0a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801c040:	2b58      	cmp	r3, #88	; 0x58
 801c042:	d01c      	beq.n	801c07e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c044:	d818      	bhi.n	801c078 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801c046:	2b25      	cmp	r3, #37	; 0x25
 801c048:	d034      	beq.n	801c0b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801c04a:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801c04e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c050:	f1bb 0f00 	cmp.w	fp, #0
 801c054:	f000 80b8 	beq.w	801c1c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801c058:	f8bb 5000 	ldrh.w	r5, [fp]
 801c05c:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801c060:	3301      	adds	r3, #1
 801c062:	930d      	str	r3, [sp, #52]	; 0x34
 801c064:	e029      	b.n	801c0ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801c066:	b10d      	cbz	r5, 801c06c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801c068:	782a      	ldrb	r2, [r5, #0]
 801c06a:	e785      	b.n	801bf78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801c06c:	462a      	mov	r2, r5
 801c06e:	e783      	b.n	801bf78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801c070:	2a00      	cmp	r2, #0
 801c072:	d0ea      	beq.n	801c04a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801c074:	7813      	ldrb	r3, [r2, #0]
 801c076:	e7e0      	b.n	801c03a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801c078:	3b63      	subs	r3, #99	; 0x63
 801c07a:	2b01      	cmp	r3, #1
 801c07c:	d8e5      	bhi.n	801c04a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801c07e:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801c082:	b329      	cbz	r1, 801c0d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801c084:	880b      	ldrh	r3, [r1, #0]
 801c086:	2b69      	cmp	r3, #105	; 0x69
 801c088:	d063      	beq.n	801c152 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801c08a:	d825      	bhi.n	801c0d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801c08c:	2b63      	cmp	r3, #99	; 0x63
 801c08e:	d038      	beq.n	801c102 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801c090:	2b64      	cmp	r3, #100	; 0x64
 801c092:	d05e      	beq.n	801c152 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801c094:	2b58      	cmp	r3, #88	; 0x58
 801c096:	d07b      	beq.n	801c190 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801c098:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801c09c:	4625      	mov	r5, r4
 801c09e:	e036      	b.n	801c10e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c0a0:	2b73      	cmp	r3, #115	; 0x73
 801c0a2:	d0ec      	beq.n	801c07e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c0a4:	d802      	bhi.n	801c0ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801c0a6:	2b6f      	cmp	r3, #111	; 0x6f
 801c0a8:	d1cf      	bne.n	801c04a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801c0aa:	e7e8      	b.n	801c07e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c0ac:	2b75      	cmp	r3, #117	; 0x75
 801c0ae:	d0e6      	beq.n	801c07e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c0b0:	2b78      	cmp	r3, #120	; 0x78
 801c0b2:	e7f9      	b.n	801c0a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801c0b4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c0b6:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801c0ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c0bc:	b10b      	cbz	r3, 801c0c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801c0be:	3302      	adds	r3, #2
 801c0c0:	9309      	str	r3, [sp, #36]	; 0x24
 801c0c2:	9b08      	ldr	r3, [sp, #32]
 801c0c4:	2b00      	cmp	r3, #0
 801c0c6:	f43f af2e 	beq.w	801bf26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c0ca:	3301      	adds	r3, #1
 801c0cc:	9308      	str	r3, [sp, #32]
 801c0ce:	e72a      	b.n	801bf26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c0d0:	2a00      	cmp	r2, #0
 801c0d2:	d0e1      	beq.n	801c098 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801c0d4:	7813      	ldrb	r3, [r2, #0]
 801c0d6:	e7d6      	b.n	801c086 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801c0d8:	2b73      	cmp	r3, #115	; 0x73
 801c0da:	d036      	beq.n	801c14a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801c0dc:	d807      	bhi.n	801c0ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801c0de:	2b6f      	cmp	r3, #111	; 0x6f
 801c0e0:	d1da      	bne.n	801c098 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801c0e2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c0e4:	1d25      	adds	r5, r4, #4
 801c0e6:	eba8 0202 	sub.w	r2, r8, r2
 801c0ea:	2308      	movs	r3, #8
 801c0ec:	e04a      	b.n	801c184 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801c0ee:	2b75      	cmp	r3, #117	; 0x75
 801c0f0:	d043      	beq.n	801c17a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801c0f2:	2b78      	cmp	r3, #120	; 0x78
 801c0f4:	d1d0      	bne.n	801c098 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801c0f6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c0f8:	1d25      	adds	r5, r4, #4
 801c0fa:	eba8 0202 	sub.w	r2, r8, r2
 801c0fe:	2310      	movs	r3, #16
 801c100:	e040      	b.n	801c184 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801c102:	6823      	ldr	r3, [r4, #0]
 801c104:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801c108:	1d25      	adds	r5, r4, #4
 801c10a:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801c10e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c110:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801c114:	2b00      	cmp	r3, #0
 801c116:	d052      	beq.n	801c1be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801c118:	881a      	ldrh	r2, [r3, #0]
 801c11a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801c11e:	a80d      	add	r0, sp, #52	; 0x34
 801c120:	9005      	str	r0, [sp, #20]
 801c122:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801c126:	9004      	str	r0, [sp, #16]
 801c128:	980e      	ldr	r0, [sp, #56]	; 0x38
 801c12a:	9003      	str	r0, [sp, #12]
 801c12c:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801c130:	9002      	str	r0, [sp, #8]
 801c132:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c134:	9001      	str	r0, [sp, #4]
 801c136:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801c13a:	9000      	str	r0, [sp, #0]
 801c13c:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801c140:	a810      	add	r0, sp, #64	; 0x40
 801c142:	f7ff fd49 	bl	801bbd8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801c146:	462c      	mov	r4, r5
 801c148:	e7b7      	b.n	801c0ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801c14a:	6823      	ldr	r3, [r4, #0]
 801c14c:	1d25      	adds	r5, r4, #4
 801c14e:	9310      	str	r3, [sp, #64]	; 0x40
 801c150:	e7dd      	b.n	801c10e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c152:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c154:	6820      	ldr	r0, [r4, #0]
 801c156:	eba8 0202 	sub.w	r2, r8, r2
 801c15a:	230a      	movs	r3, #10
 801c15c:	b292      	uxth	r2, r2
 801c15e:	4649      	mov	r1, r9
 801c160:	f7ff fcf0 	bl	801bb44 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801c164:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801c168:	2b2d      	cmp	r3, #45	; 0x2d
 801c16a:	f104 0504 	add.w	r5, r4, #4
 801c16e:	d1ce      	bne.n	801c10e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c170:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c174:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c176:	3302      	adds	r3, #2
 801c178:	e7e9      	b.n	801c14e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801c17a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c17c:	1d25      	adds	r5, r4, #4
 801c17e:	eba8 0202 	sub.w	r2, r8, r2
 801c182:	230a      	movs	r3, #10
 801c184:	b292      	uxth	r2, r2
 801c186:	4649      	mov	r1, r9
 801c188:	6820      	ldr	r0, [r4, #0]
 801c18a:	f7ff fd07 	bl	801bb9c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801c18e:	e7be      	b.n	801c10e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c190:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c192:	6820      	ldr	r0, [r4, #0]
 801c194:	eba8 0202 	sub.w	r2, r8, r2
 801c198:	b292      	uxth	r2, r2
 801c19a:	2310      	movs	r3, #16
 801c19c:	4649      	mov	r1, r9
 801c19e:	f7ff fcfd 	bl	801bb9c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801c1a2:	1d25      	adds	r5, r4, #4
 801c1a4:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801c1a8:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801c1ac:	2b00      	cmp	r3, #0
 801c1ae:	d0ae      	beq.n	801c10e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c1b0:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801c1b4:	2919      	cmp	r1, #25
 801c1b6:	d8f7      	bhi.n	801c1a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801c1b8:	3b20      	subs	r3, #32
 801c1ba:	8013      	strh	r3, [r2, #0]
 801c1bc:	e7f4      	b.n	801c1a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801c1be:	9a08      	ldr	r2, [sp, #32]
 801c1c0:	2a00      	cmp	r2, #0
 801c1c2:	d0aa      	beq.n	801c11a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801c1c4:	7812      	ldrb	r2, [r2, #0]
 801c1c6:	e7a8      	b.n	801c11a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801c1c8:	2d00      	cmp	r5, #0
 801c1ca:	f43f af47 	beq.w	801c05c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801c1ce:	782d      	ldrb	r5, [r5, #0]
 801c1d0:	e744      	b.n	801c05c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801c1d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801c1d2:	b507      	push	{r0, r1, r2, lr}
 801c1d4:	9300      	str	r3, [sp, #0]
 801c1d6:	4613      	mov	r3, r2
 801c1d8:	2200      	movs	r2, #0
 801c1da:	f7ff fe90 	bl	801befe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801c1de:	b003      	add	sp, #12
 801c1e0:	f85d fb04 	ldr.w	pc, [sp], #4

0801c1e4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801c1e4:	b40c      	push	{r2, r3}
 801c1e6:	b507      	push	{r0, r1, r2, lr}
 801c1e8:	ab04      	add	r3, sp, #16
 801c1ea:	f853 2b04 	ldr.w	r2, [r3], #4
 801c1ee:	9301      	str	r3, [sp, #4]
 801c1f0:	f7ff ffef 	bl	801c1d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801c1f4:	b003      	add	sp, #12
 801c1f6:	f85d eb04 	ldr.w	lr, [sp], #4
 801c1fa:	b002      	add	sp, #8
 801c1fc:	4770      	bx	lr
	...

0801c200 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801c200:	4b01      	ldr	r3, [pc, #4]	; (801c208 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801c202:	6018      	str	r0, [r3, #0]
 801c204:	4770      	bx	lr
 801c206:	bf00      	nop
 801c208:	20002390 	.word	0x20002390

0801c20c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801c20c:	4b06      	ldr	r3, [pc, #24]	; (801c228 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801c20e:	881a      	ldrh	r2, [r3, #0]
 801c210:	4282      	cmp	r2, r0
 801c212:	d807      	bhi.n	801c224 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801c214:	4b05      	ldr	r3, [pc, #20]	; (801c22c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801c216:	881b      	ldrh	r3, [r3, #0]
 801c218:	4413      	add	r3, r2
 801c21a:	4298      	cmp	r0, r3
 801c21c:	bfac      	ite	ge
 801c21e:	2000      	movge	r0, #0
 801c220:	2001      	movlt	r0, #1
 801c222:	4770      	bx	lr
 801c224:	2000      	movs	r0, #0
 801c226:	4770      	bx	lr
 801c228:	200023b0 	.word	0x200023b0
 801c22c:	200023b4 	.word	0x200023b4

0801c230 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801c230:	b508      	push	{r3, lr}
 801c232:	4601      	mov	r1, r0
 801c234:	f7ff ffea 	bl	801c20c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801c238:	b118      	cbz	r0, 801c242 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801c23a:	4b02      	ldr	r3, [pc, #8]	; (801c244 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801c23c:	681b      	ldr	r3, [r3, #0]
 801c23e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801c242:	bd08      	pop	{r3, pc}
 801c244:	20002394 	.word	0x20002394

0801c248 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801c248:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c24a:	4c24      	ldr	r4, [pc, #144]	; (801c2dc <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801c24c:	6823      	ldr	r3, [r4, #0]
 801c24e:	2b00      	cmp	r3, #0
 801c250:	d042      	beq.n	801c2d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c252:	4a23      	ldr	r2, [pc, #140]	; (801c2e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801c254:	4d23      	ldr	r5, [pc, #140]	; (801c2e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801c256:	8811      	ldrh	r1, [r2, #0]
 801c258:	f8b5 c000 	ldrh.w	ip, [r5]
 801c25c:	4822      	ldr	r0, [pc, #136]	; (801c2e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801c25e:	4461      	add	r1, ip
 801c260:	1c4a      	adds	r2, r1, #1
 801c262:	f022 0201 	bic.w	r2, r2, #1
 801c266:	008f      	lsls	r7, r1, #2
 801c268:	0412      	lsls	r2, r2, #16
 801c26a:	19de      	adds	r6, r3, r7
 801c26c:	0c12      	lsrs	r2, r2, #16
 801c26e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801c272:	6006      	str	r6, [r0, #0]
 801c274:	4e1d      	ldr	r6, [pc, #116]	; (801c2ec <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801c276:	19da      	adds	r2, r3, r7
 801c278:	6032      	str	r2, [r6, #0]
 801c27a:	220e      	movs	r2, #14
 801c27c:	fb02 f20c 	mul.w	r2, r2, ip
 801c280:	3203      	adds	r2, #3
 801c282:	f022 0203 	bic.w	r2, r2, #3
 801c286:	443a      	add	r2, r7
 801c288:	4f19      	ldr	r7, [pc, #100]	; (801c2f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801c28a:	4413      	add	r3, r2
 801c28c:	603b      	str	r3, [r7, #0]
 801c28e:	4f19      	ldr	r7, [pc, #100]	; (801c2f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801c290:	2300      	movs	r3, #0
 801c292:	803b      	strh	r3, [r7, #0]
 801c294:	4f18      	ldr	r7, [pc, #96]	; (801c2f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801c296:	683f      	ldr	r7, [r7, #0]
 801c298:	1aba      	subs	r2, r7, r2
 801c29a:	4f18      	ldr	r7, [pc, #96]	; (801c2fc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801c29c:	603a      	str	r2, [r7, #0]
 801c29e:	4a18      	ldr	r2, [pc, #96]	; (801c300 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801c2a0:	469c      	mov	ip, r3
 801c2a2:	8013      	strh	r3, [r2, #0]
 801c2a4:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801c2a8:	428b      	cmp	r3, r1
 801c2aa:	d10d      	bne.n	801c2c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801c2ac:	882d      	ldrh	r5, [r5, #0]
 801c2ae:	6830      	ldr	r0, [r6, #0]
 801c2b0:	2300      	movs	r3, #0
 801c2b2:	240e      	movs	r4, #14
 801c2b4:	429d      	cmp	r5, r3
 801c2b6:	d90f      	bls.n	801c2d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c2b8:	fb04 0203 	mla	r2, r4, r3, r0
 801c2bc:	3301      	adds	r3, #1
 801c2be:	7b11      	ldrb	r1, [r2, #12]
 801c2c0:	f36f 1145 	bfc	r1, #5, #1
 801c2c4:	7311      	strb	r1, [r2, #12]
 801c2c6:	e7f5      	b.n	801c2b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801c2c8:	6822      	ldr	r2, [r4, #0]
 801c2ca:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801c2ce:	6802      	ldr	r2, [r0, #0]
 801c2d0:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801c2d4:	3301      	adds	r3, #1
 801c2d6:	e7e7      	b.n	801c2a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801c2d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c2da:	bf00      	nop
 801c2dc:	20002394 	.word	0x20002394
 801c2e0:	200023b0 	.word	0x200023b0
 801c2e4:	200023b4 	.word	0x200023b4
 801c2e8:	200023a8 	.word	0x200023a8
 801c2ec:	20002398 	.word	0x20002398
 801c2f0:	200023a0 	.word	0x200023a0
 801c2f4:	200023b2 	.word	0x200023b2
 801c2f8:	2000239c 	.word	0x2000239c
 801c2fc:	200023ac 	.word	0x200023ac
 801c300:	200023a4 	.word	0x200023a4

0801c304 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801c304:	4b06      	ldr	r3, [pc, #24]	; (801c320 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801c306:	681b      	ldr	r3, [r3, #0]
 801c308:	b943      	cbnz	r3, 801c31c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c30a:	b139      	cbz	r1, 801c31c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c30c:	4b05      	ldr	r3, [pc, #20]	; (801c324 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801c30e:	801a      	strh	r2, [r3, #0]
 801c310:	4b05      	ldr	r3, [pc, #20]	; (801c328 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801c312:	6019      	str	r1, [r3, #0]
 801c314:	4b05      	ldr	r3, [pc, #20]	; (801c32c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801c316:	6018      	str	r0, [r3, #0]
 801c318:	f7ff bf96 	b.w	801c248 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801c31c:	4770      	bx	lr
 801c31e:	bf00      	nop
 801c320:	200023a0 	.word	0x200023a0
 801c324:	200023b4 	.word	0x200023b4
 801c328:	2000239c 	.word	0x2000239c
 801c32c:	20002394 	.word	0x20002394

0801c330 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801c330:	b470      	push	{r4, r5, r6}
 801c332:	4c07      	ldr	r4, [pc, #28]	; (801c350 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801c334:	6826      	ldr	r6, [r4, #0]
 801c336:	4605      	mov	r5, r0
 801c338:	4610      	mov	r0, r2
 801c33a:	9a03      	ldr	r2, [sp, #12]
 801c33c:	b936      	cbnz	r6, 801c34c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801c33e:	6025      	str	r5, [r4, #0]
 801c340:	4c04      	ldr	r4, [pc, #16]	; (801c354 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801c342:	8021      	strh	r1, [r4, #0]
 801c344:	bc70      	pop	{r4, r5, r6}
 801c346:	4619      	mov	r1, r3
 801c348:	f7ff bfdc 	b.w	801c304 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801c34c:	bc70      	pop	{r4, r5, r6}
 801c34e:	4770      	bx	lr
 801c350:	200023b8 	.word	0x200023b8
 801c354:	200023b0 	.word	0x200023b0

0801c358 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801c358:	4a12      	ldr	r2, [pc, #72]	; (801c3a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801c35a:	8803      	ldrh	r3, [r0, #0]
 801c35c:	8812      	ldrh	r2, [r2, #0]
 801c35e:	4293      	cmp	r3, r2
 801c360:	d207      	bcs.n	801c372 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801c362:	4a11      	ldr	r2, [pc, #68]	; (801c3a8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801c364:	6812      	ldr	r2, [r2, #0]
 801c366:	2114      	movs	r1, #20
 801c368:	fb01 2303 	mla	r3, r1, r3, r2
 801c36c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801c370:	4770      	bx	lr
 801c372:	490e      	ldr	r1, [pc, #56]	; (801c3ac <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801c374:	8809      	ldrh	r1, [r1, #0]
 801c376:	4411      	add	r1, r2
 801c378:	428b      	cmp	r3, r1
 801c37a:	da04      	bge.n	801c386 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801c37c:	1a9b      	subs	r3, r3, r2
 801c37e:	4a0c      	ldr	r2, [pc, #48]	; (801c3b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801c380:	210e      	movs	r1, #14
 801c382:	6812      	ldr	r2, [r2, #0]
 801c384:	e7f0      	b.n	801c368 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801c386:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c38a:	4293      	cmp	r3, r2
 801c38c:	d108      	bne.n	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801c38e:	4b09      	ldr	r3, [pc, #36]	; (801c3b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801c390:	781b      	ldrb	r3, [r3, #0]
 801c392:	b91b      	cbnz	r3, 801c39c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801c394:	4b08      	ldr	r3, [pc, #32]	; (801c3b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801c396:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c39a:	4770      	bx	lr
 801c39c:	4b07      	ldr	r3, [pc, #28]	; (801c3bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801c39e:	e7fa      	b.n	801c396 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801c3a0:	2000      	movs	r0, #0
 801c3a2:	4770      	bx	lr
 801c3a4:	200023b0 	.word	0x200023b0
 801c3a8:	200023b8 	.word	0x200023b8
 801c3ac:	200023b4 	.word	0x200023b4
 801c3b0:	20002398 	.word	0x20002398
 801c3b4:	20002320 	.word	0x20002320
 801c3b8:	20002322 	.word	0x20002322
 801c3bc:	20002324 	.word	0x20002324

0801c3c0 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801c3c0:	4a12      	ldr	r2, [pc, #72]	; (801c40c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801c3c2:	8803      	ldrh	r3, [r0, #0]
 801c3c4:	8812      	ldrh	r2, [r2, #0]
 801c3c6:	4293      	cmp	r3, r2
 801c3c8:	d207      	bcs.n	801c3da <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801c3ca:	4a11      	ldr	r2, [pc, #68]	; (801c410 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801c3cc:	6812      	ldr	r2, [r2, #0]
 801c3ce:	2114      	movs	r1, #20
 801c3d0:	fb01 2303 	mla	r3, r1, r3, r2
 801c3d4:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801c3d8:	4770      	bx	lr
 801c3da:	490e      	ldr	r1, [pc, #56]	; (801c414 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801c3dc:	8809      	ldrh	r1, [r1, #0]
 801c3de:	4411      	add	r1, r2
 801c3e0:	428b      	cmp	r3, r1
 801c3e2:	da04      	bge.n	801c3ee <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801c3e4:	1a9b      	subs	r3, r3, r2
 801c3e6:	4a0c      	ldr	r2, [pc, #48]	; (801c418 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801c3e8:	210e      	movs	r1, #14
 801c3ea:	6812      	ldr	r2, [r2, #0]
 801c3ec:	e7f0      	b.n	801c3d0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801c3ee:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c3f2:	4293      	cmp	r3, r2
 801c3f4:	d108      	bne.n	801c408 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801c3f6:	4b09      	ldr	r3, [pc, #36]	; (801c41c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801c3f8:	781b      	ldrb	r3, [r3, #0]
 801c3fa:	b91b      	cbnz	r3, 801c404 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801c3fc:	4b08      	ldr	r3, [pc, #32]	; (801c420 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801c3fe:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c402:	4770      	bx	lr
 801c404:	4b07      	ldr	r3, [pc, #28]	; (801c424 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801c406:	e7fa      	b.n	801c3fe <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801c408:	2000      	movs	r0, #0
 801c40a:	4770      	bx	lr
 801c40c:	200023b0 	.word	0x200023b0
 801c410:	200023b8 	.word	0x200023b8
 801c414:	200023b4 	.word	0x200023b4
 801c418:	20002398 	.word	0x20002398
 801c41c:	20002320 	.word	0x20002320
 801c420:	20002324 	.word	0x20002324
 801c424:	20002322 	.word	0x20002322

0801c428 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801c428:	b510      	push	{r4, lr}
 801c42a:	4a1f      	ldr	r2, [pc, #124]	; (801c4a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801c42c:	880b      	ldrh	r3, [r1, #0]
 801c42e:	8812      	ldrh	r2, [r2, #0]
 801c430:	4293      	cmp	r3, r2
 801c432:	d213      	bcs.n	801c45c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801c434:	4a1d      	ldr	r2, [pc, #116]	; (801c4ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801c436:	6812      	ldr	r2, [r2, #0]
 801c438:	2114      	movs	r1, #20
 801c43a:	fb01 2303 	mla	r3, r1, r3, r2
 801c43e:	8a1a      	ldrh	r2, [r3, #16]
 801c440:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801c444:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801c448:	8a5b      	ldrh	r3, [r3, #18]
 801c44a:	8004      	strh	r4, [r0, #0]
 801c44c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c450:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801c454:	8041      	strh	r1, [r0, #2]
 801c456:	8082      	strh	r2, [r0, #4]
 801c458:	80c3      	strh	r3, [r0, #6]
 801c45a:	e00e      	b.n	801c47a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c45c:	4914      	ldr	r1, [pc, #80]	; (801c4b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801c45e:	8809      	ldrh	r1, [r1, #0]
 801c460:	4411      	add	r1, r2
 801c462:	428b      	cmp	r3, r1
 801c464:	da0a      	bge.n	801c47c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801c466:	1a9b      	subs	r3, r3, r2
 801c468:	4a12      	ldr	r2, [pc, #72]	; (801c4b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801c46a:	6812      	ldr	r2, [r2, #0]
 801c46c:	210e      	movs	r1, #14
 801c46e:	fb01 2303 	mla	r3, r1, r3, r2
 801c472:	681a      	ldr	r2, [r3, #0]
 801c474:	6002      	str	r2, [r0, #0]
 801c476:	685a      	ldr	r2, [r3, #4]
 801c478:	6042      	str	r2, [r0, #4]
 801c47a:	bd10      	pop	{r4, pc}
 801c47c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c480:	4293      	cmp	r3, r2
 801c482:	d10b      	bne.n	801c49c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801c484:	4b0c      	ldr	r3, [pc, #48]	; (801c4b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801c486:	f9b3 1000 	ldrsh.w	r1, [r3]
 801c48a:	4b0c      	ldr	r3, [pc, #48]	; (801c4bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801c48c:	8081      	strh	r1, [r0, #4]
 801c48e:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c492:	80c2      	strh	r2, [r0, #6]
 801c494:	2300      	movs	r3, #0
 801c496:	8003      	strh	r3, [r0, #0]
 801c498:	8043      	strh	r3, [r0, #2]
 801c49a:	e7ee      	b.n	801c47a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c49c:	2300      	movs	r3, #0
 801c49e:	8003      	strh	r3, [r0, #0]
 801c4a0:	8043      	strh	r3, [r0, #2]
 801c4a2:	8083      	strh	r3, [r0, #4]
 801c4a4:	e7d8      	b.n	801c458 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801c4a6:	bf00      	nop
 801c4a8:	200023b0 	.word	0x200023b0
 801c4ac:	200023b8 	.word	0x200023b8
 801c4b0:	200023b4 	.word	0x200023b4
 801c4b4:	20002398 	.word	0x20002398
 801c4b8:	2000231c 	.word	0x2000231c
 801c4bc:	2000231e 	.word	0x2000231e

0801c4c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801c4c0:	4a17      	ldr	r2, [pc, #92]	; (801c520 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801c4c2:	8803      	ldrh	r3, [r0, #0]
 801c4c4:	8812      	ldrh	r2, [r2, #0]
 801c4c6:	4293      	cmp	r3, r2
 801c4c8:	d213      	bcs.n	801c4f2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801c4ca:	4a16      	ldr	r2, [pc, #88]	; (801c524 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801c4cc:	6812      	ldr	r2, [r2, #0]
 801c4ce:	2114      	movs	r1, #20
 801c4d0:	fb01 2303 	mla	r3, r1, r3, r2
 801c4d4:	8a1a      	ldrh	r2, [r3, #16]
 801c4d6:	8919      	ldrh	r1, [r3, #8]
 801c4d8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c4dc:	428a      	cmp	r2, r1
 801c4de:	db1d      	blt.n	801c51c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801c4e0:	8a58      	ldrh	r0, [r3, #18]
 801c4e2:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801c4e6:	895b      	ldrh	r3, [r3, #10]
 801c4e8:	4298      	cmp	r0, r3
 801c4ea:	bfac      	ite	ge
 801c4ec:	2000      	movge	r0, #0
 801c4ee:	2001      	movlt	r0, #1
 801c4f0:	4770      	bx	lr
 801c4f2:	490d      	ldr	r1, [pc, #52]	; (801c528 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801c4f4:	8809      	ldrh	r1, [r1, #0]
 801c4f6:	4411      	add	r1, r2
 801c4f8:	428b      	cmp	r3, r1
 801c4fa:	da0d      	bge.n	801c518 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801c4fc:	1a9b      	subs	r3, r3, r2
 801c4fe:	4a0b      	ldr	r2, [pc, #44]	; (801c52c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801c500:	6812      	ldr	r2, [r2, #0]
 801c502:	210e      	movs	r1, #14
 801c504:	fb01 2303 	mla	r3, r1, r3, r2
 801c508:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801c50c:	891a      	ldrh	r2, [r3, #8]
 801c50e:	4291      	cmp	r1, r2
 801c510:	db04      	blt.n	801c51c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801c512:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801c516:	e7e6      	b.n	801c4e6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801c518:	2000      	movs	r0, #0
 801c51a:	4770      	bx	lr
 801c51c:	2001      	movs	r0, #1
 801c51e:	4770      	bx	lr
 801c520:	200023b0 	.word	0x200023b0
 801c524:	200023b8 	.word	0x200023b8
 801c528:	200023b4 	.word	0x200023b4
 801c52c:	20002398 	.word	0x20002398

0801c530 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801c530:	4a12      	ldr	r2, [pc, #72]	; (801c57c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801c532:	8803      	ldrh	r3, [r0, #0]
 801c534:	8811      	ldrh	r1, [r2, #0]
 801c536:	428b      	cmp	r3, r1
 801c538:	d20b      	bcs.n	801c552 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801c53a:	4a11      	ldr	r2, [pc, #68]	; (801c580 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c53c:	6812      	ldr	r2, [r2, #0]
 801c53e:	b112      	cbz	r2, 801c546 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801c540:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c544:	b9c0      	cbnz	r0, 801c578 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801c546:	4a0f      	ldr	r2, [pc, #60]	; (801c584 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801c548:	6811      	ldr	r1, [r2, #0]
 801c54a:	2214      	movs	r2, #20
 801c54c:	4353      	muls	r3, r2
 801c54e:	58c8      	ldr	r0, [r1, r3]
 801c550:	4770      	bx	lr
 801c552:	4a0d      	ldr	r2, [pc, #52]	; (801c588 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801c554:	8812      	ldrh	r2, [r2, #0]
 801c556:	440a      	add	r2, r1
 801c558:	4293      	cmp	r3, r2
 801c55a:	da04      	bge.n	801c566 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801c55c:	4a08      	ldr	r2, [pc, #32]	; (801c580 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c55e:	6812      	ldr	r2, [r2, #0]
 801c560:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c564:	4770      	bx	lr
 801c566:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c56a:	4293      	cmp	r3, r2
 801c56c:	d103      	bne.n	801c576 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801c56e:	4b07      	ldr	r3, [pc, #28]	; (801c58c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801c570:	681b      	ldr	r3, [r3, #0]
 801c572:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801c574:	4770      	bx	lr
 801c576:	2000      	movs	r0, #0
 801c578:	4770      	bx	lr
 801c57a:	bf00      	nop
 801c57c:	200023b0 	.word	0x200023b0
 801c580:	20002394 	.word	0x20002394
 801c584:	200023b8 	.word	0x200023b8
 801c588:	200023b4 	.word	0x200023b4
 801c58c:	20002328 	.word	0x20002328

0801c590 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801c590:	4b24      	ldr	r3, [pc, #144]	; (801c624 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801c592:	8802      	ldrh	r2, [r0, #0]
 801c594:	8818      	ldrh	r0, [r3, #0]
 801c596:	4282      	cmp	r2, r0
 801c598:	d221      	bcs.n	801c5de <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801c59a:	4b23      	ldr	r3, [pc, #140]	; (801c628 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801c59c:	6819      	ldr	r1, [r3, #0]
 801c59e:	2314      	movs	r3, #20
 801c5a0:	fb03 1302 	mla	r3, r3, r2, r1
 801c5a4:	6858      	ldr	r0, [r3, #4]
 801c5a6:	2800      	cmp	r0, #0
 801c5a8:	d03a      	beq.n	801c620 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c5aa:	4920      	ldr	r1, [pc, #128]	; (801c62c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c5ac:	6809      	ldr	r1, [r1, #0]
 801c5ae:	2900      	cmp	r1, #0
 801c5b0:	d036      	beq.n	801c620 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c5b2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801c5b6:	2900      	cmp	r1, #0
 801c5b8:	d032      	beq.n	801c620 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c5ba:	891a      	ldrh	r2, [r3, #8]
 801c5bc:	8958      	ldrh	r0, [r3, #10]
 801c5be:	4350      	muls	r0, r2
 801c5c0:	7c5a      	ldrb	r2, [r3, #17]
 801c5c2:	7cdb      	ldrb	r3, [r3, #19]
 801c5c4:	0952      	lsrs	r2, r2, #5
 801c5c6:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801c5ca:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801c5ce:	2b0b      	cmp	r3, #11
 801c5d0:	bf18      	it	ne
 801c5d2:	0040      	lslne	r0, r0, #1
 801c5d4:	3003      	adds	r0, #3
 801c5d6:	f020 0003 	bic.w	r0, r0, #3
 801c5da:	4408      	add	r0, r1
 801c5dc:	4770      	bx	lr
 801c5de:	4b14      	ldr	r3, [pc, #80]	; (801c630 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801c5e0:	881b      	ldrh	r3, [r3, #0]
 801c5e2:	4403      	add	r3, r0
 801c5e4:	429a      	cmp	r2, r3
 801c5e6:	da1a      	bge.n	801c61e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c5e8:	4b12      	ldr	r3, [pc, #72]	; (801c634 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801c5ea:	681b      	ldr	r3, [r3, #0]
 801c5ec:	1a10      	subs	r0, r2, r0
 801c5ee:	210e      	movs	r1, #14
 801c5f0:	fb01 3000 	mla	r0, r1, r0, r3
 801c5f4:	7b03      	ldrb	r3, [r0, #12]
 801c5f6:	f003 031f 	and.w	r3, r3, #31
 801c5fa:	2b0b      	cmp	r3, #11
 801c5fc:	d10b      	bne.n	801c616 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801c5fe:	8903      	ldrh	r3, [r0, #8]
 801c600:	8940      	ldrh	r0, [r0, #10]
 801c602:	4358      	muls	r0, r3
 801c604:	4b09      	ldr	r3, [pc, #36]	; (801c62c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c606:	6819      	ldr	r1, [r3, #0]
 801c608:	3003      	adds	r0, #3
 801c60a:	f020 0303 	bic.w	r3, r0, #3
 801c60e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801c612:	4418      	add	r0, r3
 801c614:	4770      	bx	lr
 801c616:	2b0d      	cmp	r3, #13
 801c618:	d101      	bne.n	801c61e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c61a:	300d      	adds	r0, #13
 801c61c:	4770      	bx	lr
 801c61e:	2000      	movs	r0, #0
 801c620:	4770      	bx	lr
 801c622:	bf00      	nop
 801c624:	200023b0 	.word	0x200023b0
 801c628:	200023b8 	.word	0x200023b8
 801c62c:	20002394 	.word	0x20002394
 801c630:	200023b4 	.word	0x200023b4
 801c634:	20002398 	.word	0x20002398

0801c638 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801c638:	b510      	push	{r4, lr}
 801c63a:	4a17      	ldr	r2, [pc, #92]	; (801c698 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801c63c:	8803      	ldrh	r3, [r0, #0]
 801c63e:	8812      	ldrh	r2, [r2, #0]
 801c640:	4293      	cmp	r3, r2
 801c642:	d20c      	bcs.n	801c65e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801c644:	4a15      	ldr	r2, [pc, #84]	; (801c69c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801c646:	6812      	ldr	r2, [r2, #0]
 801c648:	2114      	movs	r1, #20
 801c64a:	fb01 2303 	mla	r3, r1, r3, r2
 801c64e:	7c58      	ldrb	r0, [r3, #17]
 801c650:	0942      	lsrs	r2, r0, #5
 801c652:	7cd8      	ldrb	r0, [r3, #19]
 801c654:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801c658:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801c65c:	bd10      	pop	{r4, pc}
 801c65e:	4910      	ldr	r1, [pc, #64]	; (801c6a0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801c660:	8809      	ldrh	r1, [r1, #0]
 801c662:	4411      	add	r1, r2
 801c664:	428b      	cmp	r3, r1
 801c666:	da09      	bge.n	801c67c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801c668:	1a9b      	subs	r3, r3, r2
 801c66a:	4a0e      	ldr	r2, [pc, #56]	; (801c6a4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801c66c:	6812      	ldr	r2, [r2, #0]
 801c66e:	210e      	movs	r1, #14
 801c670:	fb01 2303 	mla	r3, r1, r3, r2
 801c674:	7b18      	ldrb	r0, [r3, #12]
 801c676:	f000 001f 	and.w	r0, r0, #31
 801c67a:	e7ef      	b.n	801c65c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801c67c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c680:	4293      	cmp	r3, r2
 801c682:	d106      	bne.n	801c692 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801c684:	f7ee f9c2 	bl	800aa0c <_ZN8touchgfx3HAL3lcdEv>
 801c688:	6803      	ldr	r3, [r0, #0]
 801c68a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c68e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c690:	4718      	bx	r3
 801c692:	2000      	movs	r0, #0
 801c694:	e7e2      	b.n	801c65c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801c696:	bf00      	nop
 801c698:	200023b0 	.word	0x200023b0
 801c69c:	200023b8 	.word	0x200023b8
 801c6a0:	200023b4 	.word	0x200023b4
 801c6a4:	20002398 	.word	0x20002398

0801c6a8 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801c6a8:	2010      	movs	r0, #16
 801c6aa:	4770      	bx	lr

0801c6ac <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801c6ac:	2000      	movs	r0, #0
 801c6ae:	4770      	bx	lr

0801c6b0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801c6b0:	4b02      	ldr	r3, [pc, #8]	; (801c6bc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801c6b2:	8818      	ldrh	r0, [r3, #0]
 801c6b4:	0040      	lsls	r0, r0, #1
 801c6b6:	b280      	uxth	r0, r0
 801c6b8:	4770      	bx	lr
 801c6ba:	bf00      	nop
 801c6bc:	20002322 	.word	0x20002322

0801c6c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801c6c0:	2bff      	cmp	r3, #255	; 0xff
 801c6c2:	d050      	beq.n	801c766 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801c6c4:	2a0b      	cmp	r2, #11
 801c6c6:	d04a      	beq.n	801c75e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801c6c8:	d80e      	bhi.n	801c6e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801c6ca:	2a03      	cmp	r2, #3
 801c6cc:	d03f      	beq.n	801c74e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801c6ce:	d804      	bhi.n	801c6da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801c6d0:	2a01      	cmp	r2, #1
 801c6d2:	d03e      	beq.n	801c752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801c6d4:	d93f      	bls.n	801c756 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801c6d6:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801c6d8:	4770      	bx	lr
 801c6da:	2a09      	cmp	r2, #9
 801c6dc:	d03f      	beq.n	801c75e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801c6de:	d83c      	bhi.n	801c75a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801c6e0:	2a08      	cmp	r2, #8
 801c6e2:	d03a      	beq.n	801c75a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801c6e4:	2000      	movs	r0, #0
 801c6e6:	4770      	bx	lr
 801c6e8:	2a2f      	cmp	r2, #47	; 0x2f
 801c6ea:	d024      	beq.n	801c736 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801c6ec:	d80d      	bhi.n	801c70a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801c6ee:	2a2d      	cmp	r2, #45	; 0x2d
 801c6f0:	d014      	beq.n	801c71c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801c6f2:	d826      	bhi.n	801c742 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801c6f4:	2a2c      	cmp	r2, #44	; 0x2c
 801c6f6:	d1f5      	bne.n	801c6e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6f8:	684b      	ldr	r3, [r1, #4]
 801c6fa:	781b      	ldrb	r3, [r3, #0]
 801c6fc:	2b01      	cmp	r3, #1
 801c6fe:	d018      	beq.n	801c732 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801c700:	d323      	bcc.n	801c74a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801c702:	2b02      	cmp	r3, #2
 801c704:	d1ee      	bne.n	801c6e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c706:	6880      	ldr	r0, [r0, #8]
 801c708:	4770      	bx	lr
 801c70a:	2a31      	cmp	r2, #49	; 0x31
 801c70c:	d004      	beq.n	801c718 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801c70e:	d328      	bcc.n	801c762 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801c710:	2a32      	cmp	r2, #50	; 0x32
 801c712:	d026      	beq.n	801c762 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801c714:	2a33      	cmp	r2, #51	; 0x33
 801c716:	d1e5      	bne.n	801c6e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c718:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801c71a:	4770      	bx	lr
 801c71c:	684b      	ldr	r3, [r1, #4]
 801c71e:	781b      	ldrb	r3, [r3, #0]
 801c720:	2b01      	cmp	r3, #1
 801c722:	d004      	beq.n	801c72e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801c724:	d30b      	bcc.n	801c73e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801c726:	2b02      	cmp	r3, #2
 801c728:	d1dc      	bne.n	801c6e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c72a:	6900      	ldr	r0, [r0, #16]
 801c72c:	4770      	bx	lr
 801c72e:	6a00      	ldr	r0, [r0, #32]
 801c730:	4770      	bx	lr
 801c732:	6980      	ldr	r0, [r0, #24]
 801c734:	4770      	bx	lr
 801c736:	684b      	ldr	r3, [r1, #4]
 801c738:	781b      	ldrb	r3, [r3, #0]
 801c73a:	2b00      	cmp	r3, #0
 801c73c:	d1d2      	bne.n	801c6e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c73e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801c740:	4770      	bx	lr
 801c742:	684b      	ldr	r3, [r1, #4]
 801c744:	781b      	ldrb	r3, [r3, #0]
 801c746:	2b00      	cmp	r3, #0
 801c748:	d1cc      	bne.n	801c6e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c74a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801c74c:	4770      	bx	lr
 801c74e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801c750:	4770      	bx	lr
 801c752:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801c754:	4770      	bx	lr
 801c756:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801c758:	4770      	bx	lr
 801c75a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801c75c:	4770      	bx	lr
 801c75e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801c760:	4770      	bx	lr
 801c762:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801c764:	4770      	bx	lr
 801c766:	2a0b      	cmp	r2, #11
 801c768:	d049      	beq.n	801c7fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801c76a:	d80e      	bhi.n	801c78a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801c76c:	2a03      	cmp	r2, #3
 801c76e:	d040      	beq.n	801c7f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801c770:	d804      	bhi.n	801c77c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801c772:	2a01      	cmp	r2, #1
 801c774:	d03f      	beq.n	801c7f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801c776:	d940      	bls.n	801c7fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801c778:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801c77a:	4770      	bx	lr
 801c77c:	2a09      	cmp	r2, #9
 801c77e:	d03e      	beq.n	801c7fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801c780:	d801      	bhi.n	801c786 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801c782:	2a08      	cmp	r2, #8
 801c784:	d1ae      	bne.n	801c6e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c786:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801c788:	4770      	bx	lr
 801c78a:	2a2f      	cmp	r2, #47	; 0x2f
 801c78c:	d024      	beq.n	801c7d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801c78e:	d80d      	bhi.n	801c7ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801c790:	2a2d      	cmp	r2, #45	; 0x2d
 801c792:	d014      	beq.n	801c7be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801c794:	d826      	bhi.n	801c7e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801c796:	2a2c      	cmp	r2, #44	; 0x2c
 801c798:	d1a4      	bne.n	801c6e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c79a:	684b      	ldr	r3, [r1, #4]
 801c79c:	781b      	ldrb	r3, [r3, #0]
 801c79e:	2b01      	cmp	r3, #1
 801c7a0:	d018      	beq.n	801c7d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801c7a2:	d324      	bcc.n	801c7ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801c7a4:	2b02      	cmp	r3, #2
 801c7a6:	d19d      	bne.n	801c6e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c7a8:	68c0      	ldr	r0, [r0, #12]
 801c7aa:	4770      	bx	lr
 801c7ac:	2a31      	cmp	r2, #49	; 0x31
 801c7ae:	d004      	beq.n	801c7ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801c7b0:	d327      	bcc.n	801c802 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801c7b2:	2a32      	cmp	r2, #50	; 0x32
 801c7b4:	d025      	beq.n	801c802 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801c7b6:	2a33      	cmp	r2, #51	; 0x33
 801c7b8:	d194      	bne.n	801c6e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c7ba:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801c7bc:	4770      	bx	lr
 801c7be:	684b      	ldr	r3, [r1, #4]
 801c7c0:	781b      	ldrb	r3, [r3, #0]
 801c7c2:	2b01      	cmp	r3, #1
 801c7c4:	d004      	beq.n	801c7d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801c7c6:	d30b      	bcc.n	801c7e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801c7c8:	2b02      	cmp	r3, #2
 801c7ca:	d18b      	bne.n	801c6e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c7cc:	6940      	ldr	r0, [r0, #20]
 801c7ce:	4770      	bx	lr
 801c7d0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801c7d2:	4770      	bx	lr
 801c7d4:	69c0      	ldr	r0, [r0, #28]
 801c7d6:	4770      	bx	lr
 801c7d8:	684b      	ldr	r3, [r1, #4]
 801c7da:	781b      	ldrb	r3, [r3, #0]
 801c7dc:	2b00      	cmp	r3, #0
 801c7de:	d181      	bne.n	801c6e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c7e0:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801c7e2:	4770      	bx	lr
 801c7e4:	684b      	ldr	r3, [r1, #4]
 801c7e6:	781b      	ldrb	r3, [r3, #0]
 801c7e8:	2b00      	cmp	r3, #0
 801c7ea:	f47f af7b 	bne.w	801c6e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c7ee:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801c7f0:	4770      	bx	lr
 801c7f2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801c7f4:	4770      	bx	lr
 801c7f6:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801c7f8:	4770      	bx	lr
 801c7fa:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801c7fc:	4770      	bx	lr
 801c7fe:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801c800:	4770      	bx	lr
 801c802:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801c804:	4770      	bx	lr

0801c806 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c806:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c80a:	b087      	sub	sp, #28
 801c80c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c80e:	9205      	str	r2, [sp, #20]
 801c810:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c814:	9202      	str	r2, [sp, #8]
 801c816:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c81a:	9101      	str	r1, [sp, #4]
 801c81c:	6841      	ldr	r1, [r0, #4]
 801c81e:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801c822:	fb01 2404 	mla	r4, r1, r4, r2
 801c826:	6802      	ldr	r2, [r0, #0]
 801c828:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c82c:	f8de 2000 	ldr.w	r2, [lr]
 801c830:	9203      	str	r2, [sp, #12]
 801c832:	f8de 2004 	ldr.w	r2, [lr, #4]
 801c836:	3204      	adds	r2, #4
 801c838:	9204      	str	r2, [sp, #16]
 801c83a:	9a02      	ldr	r2, [sp, #8]
 801c83c:	43d6      	mvns	r6, r2
 801c83e:	b2f6      	uxtb	r6, r6
 801c840:	9a01      	ldr	r2, [sp, #4]
 801c842:	2a00      	cmp	r2, #0
 801c844:	dc03      	bgt.n	801c84e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c846:	9a05      	ldr	r2, [sp, #20]
 801c848:	2a00      	cmp	r2, #0
 801c84a:	f340 8129 	ble.w	801caa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c84e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c850:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801c854:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801c858:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c85c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c85e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c862:	2b00      	cmp	r3, #0
 801c864:	dd0e      	ble.n	801c884 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c866:	1408      	asrs	r0, r1, #16
 801c868:	d405      	bmi.n	801c876 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c86a:	4560      	cmp	r0, ip
 801c86c:	da03      	bge.n	801c876 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c86e:	1410      	asrs	r0, r2, #16
 801c870:	d401      	bmi.n	801c876 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c872:	42b8      	cmp	r0, r7
 801c874:	db07      	blt.n	801c886 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c876:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c878:	4401      	add	r1, r0
 801c87a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c87c:	3b01      	subs	r3, #1
 801c87e:	4402      	add	r2, r0
 801c880:	3402      	adds	r4, #2
 801c882:	e7ee      	b.n	801c862 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801c884:	d071      	beq.n	801c96a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c886:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c888:	1e58      	subs	r0, r3, #1
 801c88a:	fb05 1500 	mla	r5, r5, r0, r1
 801c88e:	142d      	asrs	r5, r5, #16
 801c890:	d45f      	bmi.n	801c952 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c892:	4565      	cmp	r5, ip
 801c894:	da5d      	bge.n	801c952 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c896:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c898:	fb05 2000 	mla	r0, r5, r0, r2
 801c89c:	1400      	asrs	r0, r0, #16
 801c89e:	d458      	bmi.n	801c952 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c8a0:	42b8      	cmp	r0, r7
 801c8a2:	da56      	bge.n	801c952 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c8a4:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801c8a8:	4699      	mov	r9, r3
 801c8aa:	46a2      	mov	sl, r4
 801c8ac:	f1b9 0f00 	cmp.w	r9, #0
 801c8b0:	dd57      	ble.n	801c962 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801c8b2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801c8b6:	9803      	ldr	r0, [sp, #12]
 801c8b8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801c8bc:	140d      	asrs	r5, r1, #16
 801c8be:	fb07 000c 	mla	r0, r7, ip, r0
 801c8c2:	f109 39ff 	add.w	r9, r9, #4294967295
 801c8c6:	5d40      	ldrb	r0, [r0, r5]
 801c8c8:	9d04      	ldr	r5, [sp, #16]
 801c8ca:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801c8ce:	f8ba 5000 	ldrh.w	r5, [sl]
 801c8d2:	122f      	asrs	r7, r5, #8
 801c8d4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c8d8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c8dc:	fb17 f706 	smulbb	r7, r7, r6
 801c8e0:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801c8e4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c8e8:	00ed      	lsls	r5, r5, #3
 801c8ea:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801c8ee:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801c8f2:	10c7      	asrs	r7, r0, #3
 801c8f4:	b2ed      	uxtb	r5, r5
 801c8f6:	00c0      	lsls	r0, r0, #3
 801c8f8:	fb18 f806 	smulbb	r8, r8, r6
 801c8fc:	fb15 f506 	smulbb	r5, r5, r6
 801c900:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c904:	b2c0      	uxtb	r0, r0
 801c906:	fa1f fc8c 	uxth.w	ip, ip
 801c90a:	fb07 870b 	mla	r7, r7, fp, r8
 801c90e:	fb00 500b 	mla	r0, r0, fp, r5
 801c912:	b280      	uxth	r0, r0
 801c914:	b2bf      	uxth	r7, r7
 801c916:	f10c 0501 	add.w	r5, ip, #1
 801c91a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c91e:	f107 0801 	add.w	r8, r7, #1
 801c922:	1c45      	adds	r5, r0, #1
 801c924:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c928:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801c92c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c92e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c932:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c936:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801c93a:	ea45 0c0c 	orr.w	ip, r5, ip
 801c93e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c942:	4401      	add	r1, r0
 801c944:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c946:	ea4c 0c08 	orr.w	ip, ip, r8
 801c94a:	f82a cb02 	strh.w	ip, [sl], #2
 801c94e:	4402      	add	r2, r0
 801c950:	e7ac      	b.n	801c8ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c952:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801c956:	f04f 0800 	mov.w	r8, #0
 801c95a:	eb03 0008 	add.w	r0, r3, r8
 801c95e:	2800      	cmp	r0, #0
 801c960:	dc41      	bgt.n	801c9e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801c962:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c966:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c96a:	9b01      	ldr	r3, [sp, #4]
 801c96c:	2b00      	cmp	r3, #0
 801c96e:	f340 8097 	ble.w	801caa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c972:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c976:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c97a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c97e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c980:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c984:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c988:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c98c:	eef0 6a62 	vmov.f32	s13, s5
 801c990:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c994:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c998:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c99c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801c9a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c9a4:	eef0 6a43 	vmov.f32	s13, s6
 801c9a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c9ac:	ee12 2a90 	vmov	r2, s5
 801c9b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c9b4:	fb92 f3f3 	sdiv	r3, r2, r3
 801c9b8:	ee13 2a10 	vmov	r2, s6
 801c9bc:	9313      	str	r3, [sp, #76]	; 0x4c
 801c9be:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c9c0:	fb92 f3f3 	sdiv	r3, r2, r3
 801c9c4:	9314      	str	r3, [sp, #80]	; 0x50
 801c9c6:	9b01      	ldr	r3, [sp, #4]
 801c9c8:	9a05      	ldr	r2, [sp, #20]
 801c9ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c9ce:	3b01      	subs	r3, #1
 801c9d0:	9301      	str	r3, [sp, #4]
 801c9d2:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801c9d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c9d8:	eeb0 3a67 	vmov.f32	s6, s15
 801c9dc:	bf08      	it	eq
 801c9de:	4613      	moveq	r3, r2
 801c9e0:	eef0 2a47 	vmov.f32	s5, s14
 801c9e4:	e72c      	b.n	801c840 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c9e6:	140f      	asrs	r7, r1, #16
 801c9e8:	d453      	bmi.n	801ca92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c9ea:	f8de 5008 	ldr.w	r5, [lr, #8]
 801c9ee:	42bd      	cmp	r5, r7
 801c9f0:	dd4f      	ble.n	801ca92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c9f2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c9f6:	d44c      	bmi.n	801ca92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c9f8:	f8de 000c 	ldr.w	r0, [lr, #12]
 801c9fc:	4560      	cmp	r0, ip
 801c9fe:	dd48      	ble.n	801ca92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ca00:	9803      	ldr	r0, [sp, #12]
 801ca02:	b22d      	sxth	r5, r5
 801ca04:	fb0c 0505 	mla	r5, ip, r5, r0
 801ca08:	5de8      	ldrb	r0, [r5, r7]
 801ca0a:	9d04      	ldr	r5, [sp, #16]
 801ca0c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ca10:	f06f 0501 	mvn.w	r5, #1
 801ca14:	fb05 fb08 	mul.w	fp, r5, r8
 801ca18:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ca1c:	f834 500b 	ldrh.w	r5, [r4, fp]
 801ca20:	122f      	asrs	r7, r5, #8
 801ca22:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ca26:	fb17 f706 	smulbb	r7, r7, r6
 801ca2a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ca2e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ca32:	00ed      	lsls	r5, r5, #3
 801ca34:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801ca38:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ca3c:	10c7      	asrs	r7, r0, #3
 801ca3e:	b2ed      	uxtb	r5, r5
 801ca40:	00c0      	lsls	r0, r0, #3
 801ca42:	fb19 f906 	smulbb	r9, r9, r6
 801ca46:	fb15 f506 	smulbb	r5, r5, r6
 801ca4a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ca4e:	b2c0      	uxtb	r0, r0
 801ca50:	fa1f fc8c 	uxth.w	ip, ip
 801ca54:	fb07 970a 	mla	r7, r7, sl, r9
 801ca58:	fb00 500a 	mla	r0, r0, sl, r5
 801ca5c:	b2bf      	uxth	r7, r7
 801ca5e:	b280      	uxth	r0, r0
 801ca60:	f10c 0501 	add.w	r5, ip, #1
 801ca64:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ca68:	f107 0901 	add.w	r9, r7, #1
 801ca6c:	1c45      	adds	r5, r0, #1
 801ca6e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ca72:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801ca76:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ca7a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ca7e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ca82:	ea45 0c0c 	orr.w	ip, r5, ip
 801ca86:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ca8a:	ea4c 0c09 	orr.w	ip, ip, r9
 801ca8e:	f824 c00b 	strh.w	ip, [r4, fp]
 801ca92:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ca94:	4401      	add	r1, r0
 801ca96:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ca98:	f108 38ff 	add.w	r8, r8, #4294967295
 801ca9c:	4402      	add	r2, r0
 801ca9e:	e75c      	b.n	801c95a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801caa0:	b007      	add	sp, #28
 801caa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801caa6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801caa6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801caaa:	b085      	sub	sp, #20
 801caac:	4693      	mov	fp, r2
 801caae:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801cab0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801cab2:	6870      	ldr	r0, [r6, #4]
 801cab4:	9100      	str	r1, [sp, #0]
 801cab6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801caba:	fb00 2404 	mla	r4, r0, r4, r2
 801cabe:	6832      	ldr	r2, [r6, #0]
 801cac0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cac4:	682a      	ldr	r2, [r5, #0]
 801cac6:	9201      	str	r2, [sp, #4]
 801cac8:	686a      	ldr	r2, [r5, #4]
 801caca:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801cace:	3204      	adds	r2, #4
 801cad0:	9202      	str	r2, [sp, #8]
 801cad2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cad6:	9a00      	ldr	r2, [sp, #0]
 801cad8:	2a00      	cmp	r2, #0
 801cada:	dc03      	bgt.n	801cae4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801cadc:	f1bb 0f00 	cmp.w	fp, #0
 801cae0:	f340 80a0 	ble.w	801cc24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801cae4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cae6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801caea:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801caee:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801caf2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801caf4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801caf8:	2b00      	cmp	r3, #0
 801cafa:	dd0c      	ble.n	801cb16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cafc:	1406      	asrs	r6, r0, #16
 801cafe:	d405      	bmi.n	801cb0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cb00:	454e      	cmp	r6, r9
 801cb02:	da03      	bge.n	801cb0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cb04:	1416      	asrs	r6, r2, #16
 801cb06:	d401      	bmi.n	801cb0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cb08:	4546      	cmp	r6, r8
 801cb0a:	db05      	blt.n	801cb18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb0c:	4470      	add	r0, lr
 801cb0e:	4462      	add	r2, ip
 801cb10:	3b01      	subs	r3, #1
 801cb12:	3402      	adds	r4, #2
 801cb14:	e7f0      	b.n	801caf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801cb16:	d00f      	beq.n	801cb38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cb18:	1e5e      	subs	r6, r3, #1
 801cb1a:	fb0e 0706 	mla	r7, lr, r6, r0
 801cb1e:	143f      	asrs	r7, r7, #16
 801cb20:	d541      	bpl.n	801cba6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801cb22:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801cb26:	4698      	mov	r8, r3
 801cb28:	9603      	str	r6, [sp, #12]
 801cb2a:	f1b8 0f00 	cmp.w	r8, #0
 801cb2e:	dc59      	bgt.n	801cbe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801cb30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cb34:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cb38:	9b00      	ldr	r3, [sp, #0]
 801cb3a:	2b00      	cmp	r3, #0
 801cb3c:	dd72      	ble.n	801cc24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801cb3e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cb42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cb46:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cb4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cb4c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cb50:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cb54:	eeb0 6a62 	vmov.f32	s12, s5
 801cb58:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cb5c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cb60:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cb64:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801cb68:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cb6c:	eeb0 6a43 	vmov.f32	s12, s6
 801cb70:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cb74:	ee12 2a90 	vmov	r2, s5
 801cb78:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cb7c:	fb92 fef3 	sdiv	lr, r2, r3
 801cb80:	ee13 2a10 	vmov	r2, s6
 801cb84:	fb92 fcf3 	sdiv	ip, r2, r3
 801cb88:	9b00      	ldr	r3, [sp, #0]
 801cb8a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cb8e:	3b01      	subs	r3, #1
 801cb90:	9300      	str	r3, [sp, #0]
 801cb92:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801cb96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cb98:	eeb0 3a67 	vmov.f32	s6, s15
 801cb9c:	bf08      	it	eq
 801cb9e:	465b      	moveq	r3, fp
 801cba0:	eef0 2a47 	vmov.f32	s5, s14
 801cba4:	e797      	b.n	801cad6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801cba6:	454f      	cmp	r7, r9
 801cba8:	dabb      	bge.n	801cb22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cbaa:	fb0c 2606 	mla	r6, ip, r6, r2
 801cbae:	1436      	asrs	r6, r6, #16
 801cbb0:	d4b7      	bmi.n	801cb22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cbb2:	4546      	cmp	r6, r8
 801cbb4:	dab5      	bge.n	801cb22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cbb6:	461e      	mov	r6, r3
 801cbb8:	46a0      	mov	r8, r4
 801cbba:	2e00      	cmp	r6, #0
 801cbbc:	ddb8      	ble.n	801cb30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cbbe:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801cbc2:	9901      	ldr	r1, [sp, #4]
 801cbc4:	1417      	asrs	r7, r2, #16
 801cbc6:	ea4f 4920 	mov.w	r9, r0, asr #16
 801cbca:	fb0a 1707 	mla	r7, sl, r7, r1
 801cbce:	9902      	ldr	r1, [sp, #8]
 801cbd0:	f817 7009 	ldrb.w	r7, [r7, r9]
 801cbd4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801cbd8:	f828 7b02 	strh.w	r7, [r8], #2
 801cbdc:	4470      	add	r0, lr
 801cbde:	4462      	add	r2, ip
 801cbe0:	3e01      	subs	r6, #1
 801cbe2:	e7ea      	b.n	801cbba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801cbe4:	ea5f 4920 	movs.w	r9, r0, asr #16
 801cbe8:	d417      	bmi.n	801cc1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cbea:	68ae      	ldr	r6, [r5, #8]
 801cbec:	454e      	cmp	r6, r9
 801cbee:	dd14      	ble.n	801cc1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cbf0:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801cbf4:	d411      	bmi.n	801cc1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cbf6:	68ef      	ldr	r7, [r5, #12]
 801cbf8:	4557      	cmp	r7, sl
 801cbfa:	dd0e      	ble.n	801cc1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cbfc:	9f01      	ldr	r7, [sp, #4]
 801cbfe:	b236      	sxth	r6, r6
 801cc00:	fb0a 7606 	mla	r6, sl, r6, r7
 801cc04:	9f02      	ldr	r7, [sp, #8]
 801cc06:	f816 6009 	ldrb.w	r6, [r6, r9]
 801cc0a:	f06f 0101 	mvn.w	r1, #1
 801cc0e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801cc12:	fb01 f608 	mul.w	r6, r1, r8
 801cc16:	9903      	ldr	r1, [sp, #12]
 801cc18:	538f      	strh	r7, [r1, r6]
 801cc1a:	4470      	add	r0, lr
 801cc1c:	4462      	add	r2, ip
 801cc1e:	f108 38ff 	add.w	r8, r8, #4294967295
 801cc22:	e782      	b.n	801cb2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cc24:	b005      	add	sp, #20
 801cc26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cc2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cc2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc2e:	b087      	sub	sp, #28
 801cc30:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801cc32:	9205      	str	r2, [sp, #20]
 801cc34:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cc38:	9203      	str	r2, [sp, #12]
 801cc3a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801cc3e:	9102      	str	r1, [sp, #8]
 801cc40:	6861      	ldr	r1, [r4, #4]
 801cc42:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801cc46:	fb01 2000 	mla	r0, r1, r0, r2
 801cc4a:	6822      	ldr	r2, [r4, #0]
 801cc4c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801cc50:	9200      	str	r2, [sp, #0]
 801cc52:	f8dc 2000 	ldr.w	r2, [ip]
 801cc56:	9204      	str	r2, [sp, #16]
 801cc58:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801cc5c:	3204      	adds	r2, #4
 801cc5e:	9201      	str	r2, [sp, #4]
 801cc60:	9a03      	ldr	r2, [sp, #12]
 801cc62:	43d5      	mvns	r5, r2
 801cc64:	b2ed      	uxtb	r5, r5
 801cc66:	9a02      	ldr	r2, [sp, #8]
 801cc68:	2a00      	cmp	r2, #0
 801cc6a:	dc03      	bgt.n	801cc74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cc6c:	9a05      	ldr	r2, [sp, #20]
 801cc6e:	2a00      	cmp	r2, #0
 801cc70:	f340 812c 	ble.w	801cecc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801cc74:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cc76:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801cc7a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801cc7e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801cc82:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cc84:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cc88:	2b00      	cmp	r3, #0
 801cc8a:	dd10      	ble.n	801ccae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cc8c:	140c      	asrs	r4, r1, #16
 801cc8e:	d405      	bmi.n	801cc9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cc90:	4574      	cmp	r4, lr
 801cc92:	da03      	bge.n	801cc9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cc94:	1414      	asrs	r4, r2, #16
 801cc96:	d401      	bmi.n	801cc9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cc98:	42bc      	cmp	r4, r7
 801cc9a:	db09      	blt.n	801ccb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801cc9c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801cc9e:	9800      	ldr	r0, [sp, #0]
 801cca0:	4421      	add	r1, r4
 801cca2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801cca4:	3002      	adds	r0, #2
 801cca6:	4422      	add	r2, r4
 801cca8:	3b01      	subs	r3, #1
 801ccaa:	9000      	str	r0, [sp, #0]
 801ccac:	e7ec      	b.n	801cc88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801ccae:	d071      	beq.n	801cd94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801ccb0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801ccb2:	1e5c      	subs	r4, r3, #1
 801ccb4:	fb06 1604 	mla	r6, r6, r4, r1
 801ccb8:	1436      	asrs	r6, r6, #16
 801ccba:	d45d      	bmi.n	801cd78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ccbc:	4576      	cmp	r6, lr
 801ccbe:	da5b      	bge.n	801cd78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ccc0:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801ccc2:	fb06 2404 	mla	r4, r6, r4, r2
 801ccc6:	1424      	asrs	r4, r4, #16
 801ccc8:	d456      	bmi.n	801cd78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ccca:	42bc      	cmp	r4, r7
 801cccc:	da54      	bge.n	801cd78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ccce:	f8dd 9000 	ldr.w	r9, [sp]
 801ccd2:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801ccd6:	4698      	mov	r8, r3
 801ccd8:	f1b8 0f00 	cmp.w	r8, #0
 801ccdc:	dd54      	ble.n	801cd88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801ccde:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801cce2:	9804      	ldr	r0, [sp, #16]
 801cce4:	1414      	asrs	r4, r2, #16
 801cce6:	fb07 0404 	mla	r4, r7, r4, r0
 801ccea:	140e      	asrs	r6, r1, #16
 801ccec:	9801      	ldr	r0, [sp, #4]
 801ccee:	f814 e006 	ldrb.w	lr, [r4, r6]
 801ccf2:	f8b9 4000 	ldrh.w	r4, [r9]
 801ccf6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801ccfa:	eb00 0b0e 	add.w	fp, r0, lr
 801ccfe:	1227      	asrs	r7, r4, #8
 801cd00:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801cd04:	f89b b001 	ldrb.w	fp, [fp, #1]
 801cd08:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801cd0c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cd0e:	fb16 f60a 	smulbb	r6, r6, sl
 801cd12:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cd16:	fb07 6705 	mla	r7, r7, r5, r6
 801cd1a:	10e6      	asrs	r6, r4, #3
 801cd1c:	00e4      	lsls	r4, r4, #3
 801cd1e:	b2e4      	uxtb	r4, r4
 801cd20:	fb1b fb0a 	smulbb	fp, fp, sl
 801cd24:	fb14 f405 	smulbb	r4, r4, r5
 801cd28:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cd2c:	b2bf      	uxth	r7, r7
 801cd2e:	fb06 b605 	mla	r6, r6, r5, fp
 801cd32:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801cd36:	b2b6      	uxth	r6, r6
 801cd38:	fa1f fe8e 	uxth.w	lr, lr
 801cd3c:	1c7c      	adds	r4, r7, #1
 801cd3e:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801cd42:	f106 0b01 	add.w	fp, r6, #1
 801cd46:	f10e 0401 	add.w	r4, lr, #1
 801cd4a:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801cd4e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801cd52:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cd56:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801cd5a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801cd5e:	4327      	orrs	r7, r4
 801cd60:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801cd64:	4401      	add	r1, r0
 801cd66:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cd68:	ea47 070b 	orr.w	r7, r7, fp
 801cd6c:	f829 7b02 	strh.w	r7, [r9], #2
 801cd70:	4402      	add	r2, r0
 801cd72:	f108 38ff 	add.w	r8, r8, #4294967295
 801cd76:	e7af      	b.n	801ccd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801cd78:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801cd7c:	f04f 0e00 	mov.w	lr, #0
 801cd80:	eb03 040e 	add.w	r4, r3, lr
 801cd84:	2c00      	cmp	r4, #0
 801cd86:	dc43      	bgt.n	801ce10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801cd88:	9a00      	ldr	r2, [sp, #0]
 801cd8a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cd8e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cd92:	9300      	str	r3, [sp, #0]
 801cd94:	9b02      	ldr	r3, [sp, #8]
 801cd96:	2b00      	cmp	r3, #0
 801cd98:	f340 8098 	ble.w	801cecc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801cd9c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cda0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cda4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cda8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cdaa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cdae:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cdb2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cdb6:	eef0 6a62 	vmov.f32	s13, s5
 801cdba:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cdbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cdc2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cdc6:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801cdca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cdce:	eef0 6a43 	vmov.f32	s13, s6
 801cdd2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cdd6:	ee12 2a90 	vmov	r2, s5
 801cdda:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cdde:	fb92 f3f3 	sdiv	r3, r2, r3
 801cde2:	ee13 2a10 	vmov	r2, s6
 801cde6:	9313      	str	r3, [sp, #76]	; 0x4c
 801cde8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cdea:	fb92 f3f3 	sdiv	r3, r2, r3
 801cdee:	9314      	str	r3, [sp, #80]	; 0x50
 801cdf0:	9b02      	ldr	r3, [sp, #8]
 801cdf2:	9a05      	ldr	r2, [sp, #20]
 801cdf4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cdf8:	3b01      	subs	r3, #1
 801cdfa:	9302      	str	r3, [sp, #8]
 801cdfc:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801ce00:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ce02:	eeb0 3a67 	vmov.f32	s6, s15
 801ce06:	bf08      	it	eq
 801ce08:	4613      	moveq	r3, r2
 801ce0a:	eef0 2a47 	vmov.f32	s5, s14
 801ce0e:	e72a      	b.n	801cc66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ce10:	140f      	asrs	r7, r1, #16
 801ce12:	d454      	bmi.n	801cebe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ce14:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801ce18:	42be      	cmp	r6, r7
 801ce1a:	dd50      	ble.n	801cebe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ce1c:	ea5f 4822 	movs.w	r8, r2, asr #16
 801ce20:	d44d      	bmi.n	801cebe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ce22:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801ce26:	4544      	cmp	r4, r8
 801ce28:	dd49      	ble.n	801cebe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ce2a:	9c04      	ldr	r4, [sp, #16]
 801ce2c:	b236      	sxth	r6, r6
 801ce2e:	fb08 4606 	mla	r6, r8, r6, r4
 801ce32:	f06f 0001 	mvn.w	r0, #1
 801ce36:	f816 8007 	ldrb.w	r8, [r6, r7]
 801ce3a:	9c01      	ldr	r4, [sp, #4]
 801ce3c:	fb00 fa0e 	mul.w	sl, r0, lr
 801ce40:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801ce44:	9800      	ldr	r0, [sp, #0]
 801ce46:	eb04 0b08 	add.w	fp, r4, r8
 801ce4a:	f830 400a 	ldrh.w	r4, [r0, sl]
 801ce4e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801ce52:	9801      	ldr	r0, [sp, #4]
 801ce54:	f89b b001 	ldrb.w	fp, [fp, #1]
 801ce58:	f810 8008 	ldrb.w	r8, [r0, r8]
 801ce5c:	9800      	ldr	r0, [sp, #0]
 801ce5e:	1227      	asrs	r7, r4, #8
 801ce60:	fb16 f609 	smulbb	r6, r6, r9
 801ce64:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ce68:	fb07 6705 	mla	r7, r7, r5, r6
 801ce6c:	10e6      	asrs	r6, r4, #3
 801ce6e:	00e4      	lsls	r4, r4, #3
 801ce70:	b2e4      	uxtb	r4, r4
 801ce72:	fb1b fb09 	smulbb	fp, fp, r9
 801ce76:	fb14 f405 	smulbb	r4, r4, r5
 801ce7a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ce7e:	b2bf      	uxth	r7, r7
 801ce80:	fb06 b605 	mla	r6, r6, r5, fp
 801ce84:	fb08 4809 	mla	r8, r8, r9, r4
 801ce88:	b2b6      	uxth	r6, r6
 801ce8a:	fa1f f888 	uxth.w	r8, r8
 801ce8e:	1c7c      	adds	r4, r7, #1
 801ce90:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801ce94:	f106 0b01 	add.w	fp, r6, #1
 801ce98:	f108 0401 	add.w	r4, r8, #1
 801ce9c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801cea0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801cea4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cea8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801ceac:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801ceb0:	4327      	orrs	r7, r4
 801ceb2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801ceb6:	ea47 070b 	orr.w	r7, r7, fp
 801ceba:	f820 700a 	strh.w	r7, [r0, sl]
 801cebe:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cec0:	4401      	add	r1, r0
 801cec2:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cec4:	f10e 3eff 	add.w	lr, lr, #4294967295
 801cec8:	4402      	add	r2, r0
 801ceca:	e759      	b.n	801cd80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801cecc:	b007      	add	sp, #28
 801cece:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801ced4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ced4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ced8:	b085      	sub	sp, #20
 801ceda:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cede:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801cee0:	9203      	str	r2, [sp, #12]
 801cee2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801cee6:	6870      	ldr	r0, [r6, #4]
 801cee8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ceea:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801ceee:	686f      	ldr	r7, [r5, #4]
 801cef0:	9101      	str	r1, [sp, #4]
 801cef2:	fb00 2404 	mla	r4, r0, r4, r2
 801cef6:	6832      	ldr	r2, [r6, #0]
 801cef8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cefc:	682a      	ldr	r2, [r5, #0]
 801cefe:	9202      	str	r2, [sp, #8]
 801cf00:	3704      	adds	r7, #4
 801cf02:	9a01      	ldr	r2, [sp, #4]
 801cf04:	2a00      	cmp	r2, #0
 801cf06:	dc03      	bgt.n	801cf10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cf08:	9a03      	ldr	r2, [sp, #12]
 801cf0a:	2a00      	cmp	r2, #0
 801cf0c:	f340 80cc 	ble.w	801d0a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801cf10:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cf12:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801cf16:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801cf1a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801cf1e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cf20:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cf24:	2b00      	cmp	r3, #0
 801cf26:	dd0d      	ble.n	801cf44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cf28:	1406      	asrs	r6, r0, #16
 801cf2a:	d405      	bmi.n	801cf38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801cf2c:	454e      	cmp	r6, r9
 801cf2e:	da03      	bge.n	801cf38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801cf30:	1416      	asrs	r6, r2, #16
 801cf32:	d401      	bmi.n	801cf38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801cf34:	4546      	cmp	r6, r8
 801cf36:	db06      	blt.n	801cf46 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cf38:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801cf3a:	4460      	add	r0, ip
 801cf3c:	4432      	add	r2, r6
 801cf3e:	3b01      	subs	r3, #1
 801cf40:	3402      	adds	r4, #2
 801cf42:	e7ef      	b.n	801cf24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801cf44:	d00f      	beq.n	801cf66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cf46:	1e5e      	subs	r6, r3, #1
 801cf48:	fb0c 0e06 	mla	lr, ip, r6, r0
 801cf4c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801cf50:	d543      	bpl.n	801cfda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801cf52:	4698      	mov	r8, r3
 801cf54:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801cf58:	f1b8 0f00 	cmp.w	r8, #0
 801cf5c:	dc71      	bgt.n	801d042 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801cf5e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cf62:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cf66:	9b01      	ldr	r3, [sp, #4]
 801cf68:	2b00      	cmp	r3, #0
 801cf6a:	f340 809d 	ble.w	801d0a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801cf6e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cf72:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cf76:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cf7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cf7c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cf80:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cf84:	eeb0 6a62 	vmov.f32	s12, s5
 801cf88:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cf8c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cf90:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cf94:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801cf98:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cf9c:	eeb0 6a43 	vmov.f32	s12, s6
 801cfa0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cfa4:	ee12 2a90 	vmov	r2, s5
 801cfa8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cfac:	fb92 fcf3 	sdiv	ip, r2, r3
 801cfb0:	ee13 2a10 	vmov	r2, s6
 801cfb4:	fb92 f3f3 	sdiv	r3, r2, r3
 801cfb8:	9312      	str	r3, [sp, #72]	; 0x48
 801cfba:	9b01      	ldr	r3, [sp, #4]
 801cfbc:	9a03      	ldr	r2, [sp, #12]
 801cfbe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cfc2:	3b01      	subs	r3, #1
 801cfc4:	9301      	str	r3, [sp, #4]
 801cfc6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801cfca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cfcc:	eeb0 3a67 	vmov.f32	s6, s15
 801cfd0:	bf08      	it	eq
 801cfd2:	4613      	moveq	r3, r2
 801cfd4:	eef0 2a47 	vmov.f32	s5, s14
 801cfd8:	e793      	b.n	801cf02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801cfda:	45ce      	cmp	lr, r9
 801cfdc:	dab9      	bge.n	801cf52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cfde:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cfe0:	fb01 2606 	mla	r6, r1, r6, r2
 801cfe4:	1436      	asrs	r6, r6, #16
 801cfe6:	d4b4      	bmi.n	801cf52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cfe8:	4546      	cmp	r6, r8
 801cfea:	dab2      	bge.n	801cf52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cfec:	4698      	mov	r8, r3
 801cfee:	46a2      	mov	sl, r4
 801cff0:	f1b8 0f00 	cmp.w	r8, #0
 801cff4:	ddb3      	ble.n	801cf5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cff6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801cffa:	9902      	ldr	r1, [sp, #8]
 801cffc:	1416      	asrs	r6, r2, #16
 801cffe:	fb09 1606 	mla	r6, r9, r6, r1
 801d002:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801d006:	492a      	ldr	r1, [pc, #168]	; (801d0b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801d008:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801d00c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d010:	eb07 0b0e 	add.w	fp, r7, lr
 801d014:	4460      	add	r0, ip
 801d016:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801d01a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801d01e:	00f6      	lsls	r6, r6, #3
 801d020:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801d024:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d028:	ea49 0606 	orr.w	r6, r9, r6
 801d02c:	f817 900e 	ldrb.w	r9, [r7, lr]
 801d030:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d032:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801d036:	f82a 6b02 	strh.w	r6, [sl], #2
 801d03a:	440a      	add	r2, r1
 801d03c:	f108 38ff 	add.w	r8, r8, #4294967295
 801d040:	e7d6      	b.n	801cff0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d042:	ea5f 4920 	movs.w	r9, r0, asr #16
 801d046:	d429      	bmi.n	801d09c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d048:	68ae      	ldr	r6, [r5, #8]
 801d04a:	454e      	cmp	r6, r9
 801d04c:	dd26      	ble.n	801d09c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d04e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801d052:	d423      	bmi.n	801d09c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d054:	68e9      	ldr	r1, [r5, #12]
 801d056:	4559      	cmp	r1, fp
 801d058:	dd20      	ble.n	801d09c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d05a:	9902      	ldr	r1, [sp, #8]
 801d05c:	fa0f fe86 	sxth.w	lr, r6
 801d060:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801d064:	f06f 0101 	mvn.w	r1, #1
 801d068:	f81e e009 	ldrb.w	lr, [lr, r9]
 801d06c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d070:	eb07 060e 	add.w	r6, r7, lr
 801d074:	fb01 f908 	mul.w	r9, r1, r8
 801d078:	f896 b002 	ldrb.w	fp, [r6, #2]
 801d07c:	7876      	ldrb	r6, [r6, #1]
 801d07e:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801d082:	00f6      	lsls	r6, r6, #3
 801d084:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801d088:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d08c:	ea4b 0606 	orr.w	r6, fp, r6
 801d090:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801d094:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801d098:	f82a 6009 	strh.w	r6, [sl, r9]
 801d09c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d09e:	4460      	add	r0, ip
 801d0a0:	440a      	add	r2, r1
 801d0a2:	f108 38ff 	add.w	r8, r8, #4294967295
 801d0a6:	e757      	b.n	801cf58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d0a8:	b005      	add	sp, #20
 801d0aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d0ae:	bf00      	nop
 801d0b0:	fffff800 	.word	0xfffff800

0801d0b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d0b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d0b8:	b087      	sub	sp, #28
 801d0ba:	468b      	mov	fp, r1
 801d0bc:	9815      	ldr	r0, [sp, #84]	; 0x54
 801d0be:	9204      	str	r2, [sp, #16]
 801d0c0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d0c4:	9205      	str	r2, [sp, #20]
 801d0c6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801d0ca:	6841      	ldr	r1, [r0, #4]
 801d0cc:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801d0d0:	fb01 2404 	mla	r4, r1, r4, r2
 801d0d4:	6802      	ldr	r2, [r0, #0]
 801d0d6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d0da:	f8dc 2000 	ldr.w	r2, [ip]
 801d0de:	9201      	str	r2, [sp, #4]
 801d0e0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801d0e4:	3204      	adds	r2, #4
 801d0e6:	9202      	str	r2, [sp, #8]
 801d0e8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d0ec:	f1bb 0f00 	cmp.w	fp, #0
 801d0f0:	dc03      	bgt.n	801d0fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801d0f2:	9a04      	ldr	r2, [sp, #16]
 801d0f4:	2a00      	cmp	r2, #0
 801d0f6:	f340 8138 	ble.w	801d36a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d0fa:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d0fc:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801d100:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801d104:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d108:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d10a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d10e:	2b00      	cmp	r3, #0
 801d110:	dd0e      	ble.n	801d130 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d112:	1402      	asrs	r2, r0, #16
 801d114:	d405      	bmi.n	801d122 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d116:	42ba      	cmp	r2, r7
 801d118:	da03      	bge.n	801d122 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d11a:	140a      	asrs	r2, r1, #16
 801d11c:	d401      	bmi.n	801d122 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d11e:	42b2      	cmp	r2, r6
 801d120:	db07      	blt.n	801d132 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d122:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d124:	4410      	add	r0, r2
 801d126:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d128:	3b01      	subs	r3, #1
 801d12a:	4411      	add	r1, r2
 801d12c:	3402      	adds	r4, #2
 801d12e:	e7ee      	b.n	801d10e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801d130:	d019      	beq.n	801d166 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d132:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d134:	1e5a      	subs	r2, r3, #1
 801d136:	fb05 0502 	mla	r5, r5, r2, r0
 801d13a:	142d      	asrs	r5, r5, #16
 801d13c:	d409      	bmi.n	801d152 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d13e:	42bd      	cmp	r5, r7
 801d140:	da07      	bge.n	801d152 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d142:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d144:	fb05 1202 	mla	r2, r5, r2, r1
 801d148:	1412      	asrs	r2, r2, #16
 801d14a:	d402      	bmi.n	801d152 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d14c:	42b2      	cmp	r2, r6
 801d14e:	f2c0 80ac 	blt.w	801d2aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801d152:	f04f 0e00 	mov.w	lr, #0
 801d156:	eb03 020e 	add.w	r2, r3, lr
 801d15a:	2a00      	cmp	r2, #0
 801d15c:	dc3e      	bgt.n	801d1dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801d15e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d162:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d166:	f1bb 0f00 	cmp.w	fp, #0
 801d16a:	f340 80fe 	ble.w	801d36a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d16e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d172:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d176:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d17a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d17c:	f1bb 0b01 	subs.w	fp, fp, #1
 801d180:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d184:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d188:	eeb0 6a62 	vmov.f32	s12, s5
 801d18c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d190:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d194:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d198:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d19c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d1a0:	eeb0 6a43 	vmov.f32	s12, s6
 801d1a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d1a8:	ee12 2a90 	vmov	r2, s5
 801d1ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d1b0:	fb92 f3f3 	sdiv	r3, r2, r3
 801d1b4:	ee13 2a10 	vmov	r2, s6
 801d1b8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d1bc:	9313      	str	r3, [sp, #76]	; 0x4c
 801d1be:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d1c0:	fb92 f3f3 	sdiv	r3, r2, r3
 801d1c4:	9a04      	ldr	r2, [sp, #16]
 801d1c6:	9314      	str	r3, [sp, #80]	; 0x50
 801d1c8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d1cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d1ce:	eeb0 3a67 	vmov.f32	s6, s15
 801d1d2:	bf08      	it	eq
 801d1d4:	4613      	moveq	r3, r2
 801d1d6:	eef0 2a47 	vmov.f32	s5, s14
 801d1da:	e787      	b.n	801d0ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d1dc:	1406      	asrs	r6, r0, #16
 801d1de:	d45d      	bmi.n	801d29c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d1e0:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801d1e4:	42b5      	cmp	r5, r6
 801d1e6:	dd59      	ble.n	801d29c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d1e8:	140f      	asrs	r7, r1, #16
 801d1ea:	d457      	bmi.n	801d29c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d1ec:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801d1f0:	42ba      	cmp	r2, r7
 801d1f2:	dd53      	ble.n	801d29c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d1f4:	9a01      	ldr	r2, [sp, #4]
 801d1f6:	b22d      	sxth	r5, r5
 801d1f8:	fb07 2505 	mla	r5, r7, r5, r2
 801d1fc:	5daa      	ldrb	r2, [r5, r6]
 801d1fe:	9d02      	ldr	r5, [sp, #8]
 801d200:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d204:	0e2e      	lsrs	r6, r5, #24
 801d206:	d049      	beq.n	801d29c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d208:	f06f 0201 	mvn.w	r2, #1
 801d20c:	fb02 f20e 	mul.w	r2, r2, lr
 801d210:	9203      	str	r2, [sp, #12]
 801d212:	f834 8002 	ldrh.w	r8, [r4, r2]
 801d216:	9a05      	ldr	r2, [sp, #20]
 801d218:	4356      	muls	r6, r2
 801d21a:	1c72      	adds	r2, r6, #1
 801d21c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d220:	1212      	asrs	r2, r2, #8
 801d222:	fa1f f982 	uxth.w	r9, r2
 801d226:	ea4f 2728 	mov.w	r7, r8, asr #8
 801d22a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d22e:	43d2      	mvns	r2, r2
 801d230:	b2d2      	uxtb	r2, r2
 801d232:	fb16 f609 	smulbb	r6, r6, r9
 801d236:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d23a:	fb07 6702 	mla	r7, r7, r2, r6
 801d23e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d242:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d246:	b2ed      	uxtb	r5, r5
 801d248:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d24c:	fa5f f888 	uxtb.w	r8, r8
 801d250:	fb15 f509 	smulbb	r5, r5, r9
 801d254:	fb08 5502 	mla	r5, r8, r2, r5
 801d258:	b2bf      	uxth	r7, r7
 801d25a:	fb1a fa09 	smulbb	sl, sl, r9
 801d25e:	b2ad      	uxth	r5, r5
 801d260:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d264:	fb06 a602 	mla	r6, r6, r2, sl
 801d268:	1c7a      	adds	r2, r7, #1
 801d26a:	f105 0a01 	add.w	sl, r5, #1
 801d26e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d272:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d276:	b2b6      	uxth	r6, r6
 801d278:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d27c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d280:	ea4a 0707 	orr.w	r7, sl, r7
 801d284:	f106 0a01 	add.w	sl, r6, #1
 801d288:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d28c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d290:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d294:	9a03      	ldr	r2, [sp, #12]
 801d296:	ea47 070a 	orr.w	r7, r7, sl
 801d29a:	52a7      	strh	r7, [r4, r2]
 801d29c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d29e:	4410      	add	r0, r2
 801d2a0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d2a2:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d2a6:	4411      	add	r1, r2
 801d2a8:	e755      	b.n	801d156 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d2aa:	f04f 0800 	mov.w	r8, #0
 801d2ae:	eba3 0208 	sub.w	r2, r3, r8
 801d2b2:	2a00      	cmp	r2, #0
 801d2b4:	f77f af53 	ble.w	801d15e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801d2b8:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801d2bc:	9f01      	ldr	r7, [sp, #4]
 801d2be:	140a      	asrs	r2, r1, #16
 801d2c0:	1405      	asrs	r5, r0, #16
 801d2c2:	fb06 7202 	mla	r2, r6, r2, r7
 801d2c6:	5d52      	ldrb	r2, [r2, r5]
 801d2c8:	9d02      	ldr	r5, [sp, #8]
 801d2ca:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d2ce:	0e2e      	lsrs	r6, r5, #24
 801d2d0:	d044      	beq.n	801d35c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801d2d2:	9a05      	ldr	r2, [sp, #20]
 801d2d4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801d2d8:	4356      	muls	r6, r2
 801d2da:	1c72      	adds	r2, r6, #1
 801d2dc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d2e0:	1212      	asrs	r2, r2, #8
 801d2e2:	fa1f f982 	uxth.w	r9, r2
 801d2e6:	ea4f 272e 	mov.w	r7, lr, asr #8
 801d2ea:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d2ee:	43d2      	mvns	r2, r2
 801d2f0:	b2d2      	uxtb	r2, r2
 801d2f2:	fb16 f609 	smulbb	r6, r6, r9
 801d2f6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d2fa:	fb07 6702 	mla	r7, r7, r2, r6
 801d2fe:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d302:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d306:	b2ed      	uxtb	r5, r5
 801d308:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d30c:	fa5f fe8e 	uxtb.w	lr, lr
 801d310:	fb15 f509 	smulbb	r5, r5, r9
 801d314:	fb0e 5502 	mla	r5, lr, r2, r5
 801d318:	b2bf      	uxth	r7, r7
 801d31a:	fb1a fa09 	smulbb	sl, sl, r9
 801d31e:	b2ad      	uxth	r5, r5
 801d320:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d324:	fb06 a602 	mla	r6, r6, r2, sl
 801d328:	1c7a      	adds	r2, r7, #1
 801d32a:	f105 0a01 	add.w	sl, r5, #1
 801d32e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d332:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d336:	b2b6      	uxth	r6, r6
 801d338:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d33c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d340:	ea4a 0707 	orr.w	r7, sl, r7
 801d344:	f106 0a01 	add.w	sl, r6, #1
 801d348:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d34c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d350:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d354:	ea47 070a 	orr.w	r7, r7, sl
 801d358:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d35c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d35e:	4410      	add	r0, r2
 801d360:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d362:	f108 0801 	add.w	r8, r8, #1
 801d366:	4411      	add	r1, r2
 801d368:	e7a1      	b.n	801d2ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801d36a:	b007      	add	sp, #28
 801d36c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d370 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d370:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d374:	b085      	sub	sp, #20
 801d376:	468b      	mov	fp, r1
 801d378:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d37a:	9203      	str	r2, [sp, #12]
 801d37c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d380:	6841      	ldr	r1, [r0, #4]
 801d382:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801d386:	fb01 2404 	mla	r4, r1, r4, r2
 801d38a:	6802      	ldr	r2, [r0, #0]
 801d38c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d390:	f8de 2000 	ldr.w	r2, [lr]
 801d394:	9200      	str	r2, [sp, #0]
 801d396:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d39a:	3204      	adds	r2, #4
 801d39c:	9201      	str	r2, [sp, #4]
 801d39e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d3a2:	f1bb 0f00 	cmp.w	fp, #0
 801d3a6:	dc03      	bgt.n	801d3b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801d3a8:	9a03      	ldr	r2, [sp, #12]
 801d3aa:	2a00      	cmp	r2, #0
 801d3ac:	f340 8153 	ble.w	801d656 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d3b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d3b2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d3b6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d3ba:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d3be:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d3c0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d3c4:	2b00      	cmp	r3, #0
 801d3c6:	dd0e      	ble.n	801d3e6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d3c8:	1408      	asrs	r0, r1, #16
 801d3ca:	d405      	bmi.n	801d3d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d3cc:	42b8      	cmp	r0, r7
 801d3ce:	da03      	bge.n	801d3d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d3d0:	1410      	asrs	r0, r2, #16
 801d3d2:	d401      	bmi.n	801d3d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d3d4:	42b0      	cmp	r0, r6
 801d3d6:	db07      	blt.n	801d3e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d3d8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d3da:	4401      	add	r1, r0
 801d3dc:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d3de:	3b01      	subs	r3, #1
 801d3e0:	4402      	add	r2, r0
 801d3e2:	3402      	adds	r4, #2
 801d3e4:	e7ee      	b.n	801d3c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801d3e6:	d017      	beq.n	801d418 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d3e8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d3ea:	1e58      	subs	r0, r3, #1
 801d3ec:	fb05 1500 	mla	r5, r5, r0, r1
 801d3f0:	142d      	asrs	r5, r5, #16
 801d3f2:	d409      	bmi.n	801d408 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d3f4:	42bd      	cmp	r5, r7
 801d3f6:	da07      	bge.n	801d408 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d3f8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d3fa:	fb05 2000 	mla	r0, r5, r0, r2
 801d3fe:	1400      	asrs	r0, r0, #16
 801d400:	d402      	bmi.n	801d408 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d402:	42b0      	cmp	r0, r6
 801d404:	f2c0 80bc 	blt.w	801d580 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801d408:	2600      	movs	r6, #0
 801d40a:	1998      	adds	r0, r3, r6
 801d40c:	2800      	cmp	r0, #0
 801d40e:	dc3e      	bgt.n	801d48e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801d410:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d414:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d418:	f1bb 0f00 	cmp.w	fp, #0
 801d41c:	f340 811b 	ble.w	801d656 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d420:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d424:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d428:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d42c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d42e:	f1bb 0b01 	subs.w	fp, fp, #1
 801d432:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d436:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d43a:	eeb0 6a62 	vmov.f32	s12, s5
 801d43e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d442:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d446:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d44a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d44e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d452:	eeb0 6a43 	vmov.f32	s12, s6
 801d456:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d45a:	ee12 2a90 	vmov	r2, s5
 801d45e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d462:	fb92 f3f3 	sdiv	r3, r2, r3
 801d466:	ee13 2a10 	vmov	r2, s6
 801d46a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d46e:	9311      	str	r3, [sp, #68]	; 0x44
 801d470:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d472:	fb92 f3f3 	sdiv	r3, r2, r3
 801d476:	9a03      	ldr	r2, [sp, #12]
 801d478:	9312      	str	r3, [sp, #72]	; 0x48
 801d47a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d47e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d480:	eeb0 3a67 	vmov.f32	s6, s15
 801d484:	bf08      	it	eq
 801d486:	4613      	moveq	r3, r2
 801d488:	eef0 2a47 	vmov.f32	s5, s14
 801d48c:	e789      	b.n	801d3a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801d48e:	140f      	asrs	r7, r1, #16
 801d490:	d426      	bmi.n	801d4e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d492:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d496:	42bd      	cmp	r5, r7
 801d498:	dd22      	ble.n	801d4e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d49a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d49e:	d41f      	bmi.n	801d4e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d4a0:	f8de 000c 	ldr.w	r0, [lr, #12]
 801d4a4:	4560      	cmp	r0, ip
 801d4a6:	dd1b      	ble.n	801d4e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d4a8:	9800      	ldr	r0, [sp, #0]
 801d4aa:	b22d      	sxth	r5, r5
 801d4ac:	fb0c 0505 	mla	r5, ip, r5, r0
 801d4b0:	5de8      	ldrb	r0, [r5, r7]
 801d4b2:	9d01      	ldr	r5, [sp, #4]
 801d4b4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801d4b8:	0e07      	lsrs	r7, r0, #24
 801d4ba:	2fff      	cmp	r7, #255	; 0xff
 801d4bc:	d116      	bne.n	801d4ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d4be:	f06f 0501 	mvn.w	r5, #1
 801d4c2:	fb05 f706 	mul.w	r7, r5, r6
 801d4c6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801d4ca:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801d4ce:	0945      	lsrs	r5, r0, #5
 801d4d0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d4d4:	ea4c 0505 	orr.w	r5, ip, r5
 801d4d8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d4dc:	4305      	orrs	r5, r0
 801d4de:	53e5      	strh	r5, [r4, r7]
 801d4e0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d4e2:	4401      	add	r1, r0
 801d4e4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d4e6:	3e01      	subs	r6, #1
 801d4e8:	4402      	add	r2, r0
 801d4ea:	e78e      	b.n	801d40a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d4ec:	b2fd      	uxtb	r5, r7
 801d4ee:	2f00      	cmp	r7, #0
 801d4f0:	d0f6      	beq.n	801d4e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d4f2:	f06f 0701 	mvn.w	r7, #1
 801d4f6:	4377      	muls	r7, r6
 801d4f8:	fa1f f985 	uxth.w	r9, r5
 801d4fc:	f834 8007 	ldrh.w	r8, [r4, r7]
 801d500:	9702      	str	r7, [sp, #8]
 801d502:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801d506:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801d50a:	43ed      	mvns	r5, r5
 801d50c:	b2ed      	uxtb	r5, r5
 801d50e:	fb17 f709 	smulbb	r7, r7, r9
 801d512:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d516:	fb0c 7c05 	mla	ip, ip, r5, r7
 801d51a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801d51e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801d522:	b2c0      	uxtb	r0, r0
 801d524:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d528:	fa5f f888 	uxtb.w	r8, r8
 801d52c:	fb10 f009 	smulbb	r0, r0, r9
 801d530:	fb08 0005 	mla	r0, r8, r5, r0
 801d534:	b280      	uxth	r0, r0
 801d536:	fa1f fc8c 	uxth.w	ip, ip
 801d53a:	fb1a fa09 	smulbb	sl, sl, r9
 801d53e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d542:	fb07 a705 	mla	r7, r7, r5, sl
 801d546:	f100 0a01 	add.w	sl, r0, #1
 801d54a:	f10c 0501 	add.w	r5, ip, #1
 801d54e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801d552:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801d556:	b2bf      	uxth	r7, r7
 801d558:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d55c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d560:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d564:	f107 0a01 	add.w	sl, r7, #1
 801d568:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801d56c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d570:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d574:	9802      	ldr	r0, [sp, #8]
 801d576:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d57a:	f824 c000 	strh.w	ip, [r4, r0]
 801d57e:	e7af      	b.n	801d4e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d580:	f04f 0800 	mov.w	r8, #0
 801d584:	eba3 0008 	sub.w	r0, r3, r8
 801d588:	2800      	cmp	r0, #0
 801d58a:	f77f af41 	ble.w	801d410 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d58e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801d592:	9f00      	ldr	r7, [sp, #0]
 801d594:	1410      	asrs	r0, r2, #16
 801d596:	140d      	asrs	r5, r1, #16
 801d598:	fb06 7000 	mla	r0, r6, r0, r7
 801d59c:	5d40      	ldrb	r0, [r0, r5]
 801d59e:	9d01      	ldr	r5, [sp, #4]
 801d5a0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801d5a4:	0e2e      	lsrs	r6, r5, #24
 801d5a6:	2eff      	cmp	r6, #255	; 0xff
 801d5a8:	d112      	bne.n	801d5d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801d5aa:	482c      	ldr	r0, [pc, #176]	; (801d65c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801d5ac:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801d5b0:	0968      	lsrs	r0, r5, #5
 801d5b2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d5b6:	4330      	orrs	r0, r6
 801d5b8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d5bc:	4328      	orrs	r0, r5
 801d5be:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801d5c2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d5c4:	4401      	add	r1, r0
 801d5c6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d5c8:	f108 0801 	add.w	r8, r8, #1
 801d5cc:	4402      	add	r2, r0
 801d5ce:	e7d9      	b.n	801d584 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d5d0:	b2f0      	uxtb	r0, r6
 801d5d2:	2e00      	cmp	r6, #0
 801d5d4:	d0f5      	beq.n	801d5c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d5d6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801d5da:	fa1f f980 	uxth.w	r9, r0
 801d5de:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d5e2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d5e6:	43c0      	mvns	r0, r0
 801d5e8:	b2c0      	uxtb	r0, r0
 801d5ea:	fb16 f609 	smulbb	r6, r6, r9
 801d5ee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d5f2:	fb07 6700 	mla	r7, r7, r0, r6
 801d5f6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d5fa:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d5fe:	b2ed      	uxtb	r5, r5
 801d600:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d604:	fa5f fc8c 	uxtb.w	ip, ip
 801d608:	fb15 f509 	smulbb	r5, r5, r9
 801d60c:	fb0c 5500 	mla	r5, ip, r0, r5
 801d610:	b2bf      	uxth	r7, r7
 801d612:	fb1a fa09 	smulbb	sl, sl, r9
 801d616:	b2ad      	uxth	r5, r5
 801d618:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d61c:	fb06 a600 	mla	r6, r6, r0, sl
 801d620:	1c78      	adds	r0, r7, #1
 801d622:	f105 0a01 	add.w	sl, r5, #1
 801d626:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801d62a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d62e:	b2b6      	uxth	r6, r6
 801d630:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d634:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d638:	ea4a 0707 	orr.w	r7, sl, r7
 801d63c:	f106 0a01 	add.w	sl, r6, #1
 801d640:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d644:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d648:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d64c:	ea47 070a 	orr.w	r7, r7, sl
 801d650:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d654:	e7b5      	b.n	801d5c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d656:	b005      	add	sp, #20
 801d658:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d65c:	fffff800 	.word	0xfffff800

0801d660 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d664:	b087      	sub	sp, #28
 801d666:	468b      	mov	fp, r1
 801d668:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d66a:	9204      	str	r2, [sp, #16]
 801d66c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d670:	9205      	str	r2, [sp, #20]
 801d672:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801d676:	6861      	ldr	r1, [r4, #4]
 801d678:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801d67c:	fb01 2000 	mla	r0, r1, r0, r2
 801d680:	6822      	ldr	r2, [r4, #0]
 801d682:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801d686:	f8de 2000 	ldr.w	r2, [lr]
 801d68a:	9201      	str	r2, [sp, #4]
 801d68c:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d690:	9202      	str	r2, [sp, #8]
 801d692:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d696:	f1bb 0f00 	cmp.w	fp, #0
 801d69a:	dc03      	bgt.n	801d6a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801d69c:	9a04      	ldr	r2, [sp, #16]
 801d69e:	2a00      	cmp	r2, #0
 801d6a0:	f340 8142 	ble.w	801d928 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801d6a4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d6a6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d6aa:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d6ae:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d6b2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d6b4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d6b8:	2b00      	cmp	r3, #0
 801d6ba:	dd0e      	ble.n	801d6da <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d6bc:	140c      	asrs	r4, r1, #16
 801d6be:	d405      	bmi.n	801d6cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d6c0:	42bc      	cmp	r4, r7
 801d6c2:	da03      	bge.n	801d6cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d6c4:	1414      	asrs	r4, r2, #16
 801d6c6:	d401      	bmi.n	801d6cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d6c8:	42b4      	cmp	r4, r6
 801d6ca:	db07      	blt.n	801d6dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d6cc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d6ce:	4421      	add	r1, r4
 801d6d0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d6d2:	3b01      	subs	r3, #1
 801d6d4:	4422      	add	r2, r4
 801d6d6:	3002      	adds	r0, #2
 801d6d8:	e7ee      	b.n	801d6b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d6da:	d019      	beq.n	801d710 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801d6dc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d6de:	1e5c      	subs	r4, r3, #1
 801d6e0:	fb05 1504 	mla	r5, r5, r4, r1
 801d6e4:	142d      	asrs	r5, r5, #16
 801d6e6:	d409      	bmi.n	801d6fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d6e8:	42bd      	cmp	r5, r7
 801d6ea:	da07      	bge.n	801d6fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d6ec:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d6ee:	fb05 2404 	mla	r4, r5, r4, r2
 801d6f2:	1424      	asrs	r4, r4, #16
 801d6f4:	d402      	bmi.n	801d6fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d6f6:	42b4      	cmp	r4, r6
 801d6f8:	f2c0 80b1 	blt.w	801d85e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801d6fc:	f04f 0800 	mov.w	r8, #0
 801d700:	eb03 0408 	add.w	r4, r3, r8
 801d704:	2c00      	cmp	r4, #0
 801d706:	dc3e      	bgt.n	801d786 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801d708:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d70c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d710:	f1bb 0f00 	cmp.w	fp, #0
 801d714:	f340 8108 	ble.w	801d928 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801d718:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d71c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d720:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d724:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d726:	f1bb 0b01 	subs.w	fp, fp, #1
 801d72a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d72e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d732:	eeb0 6a62 	vmov.f32	s12, s5
 801d736:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d73a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d73e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d742:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d746:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d74a:	eeb0 6a43 	vmov.f32	s12, s6
 801d74e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d752:	ee12 2a90 	vmov	r2, s5
 801d756:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d75a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d75e:	ee13 2a10 	vmov	r2, s6
 801d762:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d766:	9313      	str	r3, [sp, #76]	; 0x4c
 801d768:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d76a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d76e:	9a04      	ldr	r2, [sp, #16]
 801d770:	9314      	str	r3, [sp, #80]	; 0x50
 801d772:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d776:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d778:	eeb0 3a67 	vmov.f32	s6, s15
 801d77c:	bf08      	it	eq
 801d77e:	4613      	moveq	r3, r2
 801d780:	eef0 2a47 	vmov.f32	s5, s14
 801d784:	e787      	b.n	801d696 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801d786:	140e      	asrs	r6, r1, #16
 801d788:	d462      	bmi.n	801d850 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d78a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d78e:	42b5      	cmp	r5, r6
 801d790:	dd5e      	ble.n	801d850 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d792:	1417      	asrs	r7, r2, #16
 801d794:	d45c      	bmi.n	801d850 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d796:	f8de 400c 	ldr.w	r4, [lr, #12]
 801d79a:	42bc      	cmp	r4, r7
 801d79c:	dd58      	ble.n	801d850 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d79e:	b22d      	sxth	r5, r5
 801d7a0:	fb07 6505 	mla	r5, r7, r5, r6
 801d7a4:	9c02      	ldr	r4, [sp, #8]
 801d7a6:	5d66      	ldrb	r6, [r4, r5]
 801d7a8:	2e00      	cmp	r6, #0
 801d7aa:	d051      	beq.n	801d850 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d7ac:	9c01      	ldr	r4, [sp, #4]
 801d7ae:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801d7b2:	f06f 0401 	mvn.w	r4, #1
 801d7b6:	fb04 f408 	mul.w	r4, r4, r8
 801d7ba:	9403      	str	r4, [sp, #12]
 801d7bc:	5b05      	ldrh	r5, [r0, r4]
 801d7be:	9c05      	ldr	r4, [sp, #20]
 801d7c0:	4366      	muls	r6, r4
 801d7c2:	1c74      	adds	r4, r6, #1
 801d7c4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801d7c8:	1224      	asrs	r4, r4, #8
 801d7ca:	b2a7      	uxth	r7, r4
 801d7cc:	122e      	asrs	r6, r5, #8
 801d7ce:	43e4      	mvns	r4, r4
 801d7d0:	b2e4      	uxtb	r4, r4
 801d7d2:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801d7d6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d7da:	fb16 f604 	smulbb	r6, r6, r4
 801d7de:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d7e2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d7e6:	00ed      	lsls	r5, r5, #3
 801d7e8:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d7ec:	b2ed      	uxtb	r5, r5
 801d7ee:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801d7f2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801d7f6:	fb15 f504 	smulbb	r5, r5, r4
 801d7fa:	fa5f f989 	uxtb.w	r9, r9
 801d7fe:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d802:	fb09 5507 	mla	r5, r9, r7, r5
 801d806:	fb1a fa04 	smulbb	sl, sl, r4
 801d80a:	fa1f fc8c 	uxth.w	ip, ip
 801d80e:	b2ad      	uxth	r5, r5
 801d810:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d814:	fb06 a607 	mla	r6, r6, r7, sl
 801d818:	f10c 0401 	add.w	r4, ip, #1
 801d81c:	f105 0a01 	add.w	sl, r5, #1
 801d820:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801d824:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d828:	b2b6      	uxth	r6, r6
 801d82a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d82e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d832:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d836:	f106 0a01 	add.w	sl, r6, #1
 801d83a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d83e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d842:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d846:	9c03      	ldr	r4, [sp, #12]
 801d848:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d84c:	f820 c004 	strh.w	ip, [r0, r4]
 801d850:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d852:	4421      	add	r1, r4
 801d854:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d856:	f108 38ff 	add.w	r8, r8, #4294967295
 801d85a:	4422      	add	r2, r4
 801d85c:	e750      	b.n	801d700 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d85e:	f04f 0900 	mov.w	r9, #0
 801d862:	eba3 0409 	sub.w	r4, r3, r9
 801d866:	2c00      	cmp	r4, #0
 801d868:	f77f af4e 	ble.w	801d708 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d86c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801d870:	140d      	asrs	r5, r1, #16
 801d872:	1414      	asrs	r4, r2, #16
 801d874:	fb06 5404 	mla	r4, r6, r4, r5
 801d878:	9d02      	ldr	r5, [sp, #8]
 801d87a:	5d2e      	ldrb	r6, [r5, r4]
 801d87c:	2e00      	cmp	r6, #0
 801d87e:	d04c      	beq.n	801d91a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801d880:	9d01      	ldr	r5, [sp, #4]
 801d882:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801d886:	9c05      	ldr	r4, [sp, #20]
 801d888:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801d88c:	4366      	muls	r6, r4
 801d88e:	1c74      	adds	r4, r6, #1
 801d890:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801d894:	1224      	asrs	r4, r4, #8
 801d896:	b2a7      	uxth	r7, r4
 801d898:	122e      	asrs	r6, r5, #8
 801d89a:	43e4      	mvns	r4, r4
 801d89c:	b2e4      	uxtb	r4, r4
 801d89e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801d8a2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d8a6:	fb16 f604 	smulbb	r6, r6, r4
 801d8aa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d8ae:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d8b2:	00ed      	lsls	r5, r5, #3
 801d8b4:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d8b8:	b2ed      	uxtb	r5, r5
 801d8ba:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d8be:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d8c2:	fb15 f504 	smulbb	r5, r5, r4
 801d8c6:	fa5f f888 	uxtb.w	r8, r8
 801d8ca:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d8ce:	fb08 5507 	mla	r5, r8, r7, r5
 801d8d2:	fb1a fa04 	smulbb	sl, sl, r4
 801d8d6:	fa1f fc8c 	uxth.w	ip, ip
 801d8da:	b2ad      	uxth	r5, r5
 801d8dc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d8e0:	fb06 a607 	mla	r6, r6, r7, sl
 801d8e4:	f10c 0401 	add.w	r4, ip, #1
 801d8e8:	f105 0a01 	add.w	sl, r5, #1
 801d8ec:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801d8f0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d8f4:	b2b6      	uxth	r6, r6
 801d8f6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d8fa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d8fe:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d902:	f106 0a01 	add.w	sl, r6, #1
 801d906:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d90a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d90e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d912:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d916:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801d91a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d91c:	4421      	add	r1, r4
 801d91e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d920:	f109 0901 	add.w	r9, r9, #1
 801d924:	4422      	add	r2, r4
 801d926:	e79c      	b.n	801d862 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801d928:	b007      	add	sp, #28
 801d92a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d92e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d92e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d932:	b085      	sub	sp, #20
 801d934:	468b      	mov	fp, r1
 801d936:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d938:	9203      	str	r2, [sp, #12]
 801d93a:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801d93e:	6861      	ldr	r1, [r4, #4]
 801d940:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801d944:	fb01 2000 	mla	r0, r1, r0, r2
 801d948:	6822      	ldr	r2, [r4, #0]
 801d94a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801d94e:	f8d8 2000 	ldr.w	r2, [r8]
 801d952:	9200      	str	r2, [sp, #0]
 801d954:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801d958:	9201      	str	r2, [sp, #4]
 801d95a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d95e:	f1bb 0f00 	cmp.w	fp, #0
 801d962:	dc03      	bgt.n	801d96c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801d964:	9a03      	ldr	r2, [sp, #12]
 801d966:	2a00      	cmp	r2, #0
 801d968:	f340 8146 	ble.w	801dbf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801d96c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d96e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801d972:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801d976:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d97a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d97c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d980:	2b00      	cmp	r3, #0
 801d982:	dd0e      	ble.n	801d9a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801d984:	140c      	asrs	r4, r1, #16
 801d986:	d405      	bmi.n	801d994 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d988:	42bc      	cmp	r4, r7
 801d98a:	da03      	bge.n	801d994 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d98c:	1414      	asrs	r4, r2, #16
 801d98e:	d401      	bmi.n	801d994 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d990:	42b4      	cmp	r4, r6
 801d992:	db07      	blt.n	801d9a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d994:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d996:	4421      	add	r1, r4
 801d998:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d99a:	3b01      	subs	r3, #1
 801d99c:	4422      	add	r2, r4
 801d99e:	3002      	adds	r0, #2
 801d9a0:	e7ee      	b.n	801d980 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801d9a2:	d017      	beq.n	801d9d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801d9a4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d9a6:	1e5c      	subs	r4, r3, #1
 801d9a8:	fb05 1504 	mla	r5, r5, r4, r1
 801d9ac:	142d      	asrs	r5, r5, #16
 801d9ae:	d409      	bmi.n	801d9c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d9b0:	42bd      	cmp	r5, r7
 801d9b2:	da07      	bge.n	801d9c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d9b4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d9b6:	fb05 2404 	mla	r4, r5, r4, r2
 801d9ba:	1424      	asrs	r4, r4, #16
 801d9bc:	d402      	bmi.n	801d9c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d9be:	42b4      	cmp	r4, r6
 801d9c0:	f2c0 80b3 	blt.w	801db2a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801d9c4:	2600      	movs	r6, #0
 801d9c6:	199c      	adds	r4, r3, r6
 801d9c8:	2c00      	cmp	r4, #0
 801d9ca:	dc3e      	bgt.n	801da4a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d9cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d9d0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d9d4:	f1bb 0f00 	cmp.w	fp, #0
 801d9d8:	f340 810e 	ble.w	801dbf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801d9dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d9e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d9e4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d9e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d9ea:	f1bb 0b01 	subs.w	fp, fp, #1
 801d9ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d9f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d9f6:	eeb0 6a62 	vmov.f32	s12, s5
 801d9fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d9fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801da02:	ee77 2a62 	vsub.f32	s5, s14, s5
 801da06:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801da0a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801da0e:	eeb0 6a43 	vmov.f32	s12, s6
 801da12:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801da16:	ee12 2a90 	vmov	r2, s5
 801da1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801da1e:	fb92 f3f3 	sdiv	r3, r2, r3
 801da22:	ee13 2a10 	vmov	r2, s6
 801da26:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801da2a:	9311      	str	r3, [sp, #68]	; 0x44
 801da2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801da2e:	fb92 f3f3 	sdiv	r3, r2, r3
 801da32:	9a03      	ldr	r2, [sp, #12]
 801da34:	9312      	str	r3, [sp, #72]	; 0x48
 801da36:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801da3a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801da3c:	eeb0 3a67 	vmov.f32	s6, s15
 801da40:	bf08      	it	eq
 801da42:	4613      	moveq	r3, r2
 801da44:	eef0 2a47 	vmov.f32	s5, s14
 801da48:	e789      	b.n	801d95e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801da4a:	140f      	asrs	r7, r1, #16
 801da4c:	d418      	bmi.n	801da80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801da4e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801da52:	42bd      	cmp	r5, r7
 801da54:	dd14      	ble.n	801da80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801da56:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801da5a:	d411      	bmi.n	801da80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801da5c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801da60:	4564      	cmp	r4, ip
 801da62:	dd0d      	ble.n	801da80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801da64:	b22d      	sxth	r5, r5
 801da66:	fb0c 7505 	mla	r5, ip, r5, r7
 801da6a:	9c01      	ldr	r4, [sp, #4]
 801da6c:	5d64      	ldrb	r4, [r4, r5]
 801da6e:	2cff      	cmp	r4, #255	; 0xff
 801da70:	d10c      	bne.n	801da8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801da72:	9c00      	ldr	r4, [sp, #0]
 801da74:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801da78:	f06f 0401 	mvn.w	r4, #1
 801da7c:	4374      	muls	r4, r6
 801da7e:	5305      	strh	r5, [r0, r4]
 801da80:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801da82:	4421      	add	r1, r4
 801da84:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801da86:	3e01      	subs	r6, #1
 801da88:	4422      	add	r2, r4
 801da8a:	e79c      	b.n	801d9c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801da8c:	2c00      	cmp	r4, #0
 801da8e:	d0f7      	beq.n	801da80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801da90:	9f00      	ldr	r7, [sp, #0]
 801da92:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801da96:	f06f 0501 	mvn.w	r5, #1
 801da9a:	4375      	muls	r5, r6
 801da9c:	9502      	str	r5, [sp, #8]
 801da9e:	5b45      	ldrh	r5, [r0, r5]
 801daa0:	fa1f fc84 	uxth.w	ip, r4
 801daa4:	122f      	asrs	r7, r5, #8
 801daa6:	43e4      	mvns	r4, r4
 801daa8:	b2e4      	uxtb	r4, r4
 801daaa:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801daae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dab2:	fb17 f704 	smulbb	r7, r7, r4
 801dab6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801daba:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801dabe:	00ed      	lsls	r5, r5, #3
 801dac0:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801dac4:	b2ed      	uxtb	r5, r5
 801dac6:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801daca:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801dace:	fb15 f504 	smulbb	r5, r5, r4
 801dad2:	fa5f f989 	uxtb.w	r9, r9
 801dad6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801dada:	fb09 550c 	mla	r5, r9, ip, r5
 801dade:	fb1a fa04 	smulbb	sl, sl, r4
 801dae2:	fa1f fe8e 	uxth.w	lr, lr
 801dae6:	b2ad      	uxth	r5, r5
 801dae8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801daec:	fb07 a70c 	mla	r7, r7, ip, sl
 801daf0:	f10e 0401 	add.w	r4, lr, #1
 801daf4:	f105 0a01 	add.w	sl, r5, #1
 801daf8:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801dafc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801db00:	b2bf      	uxth	r7, r7
 801db02:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801db06:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801db0a:	ea4a 0e0e 	orr.w	lr, sl, lr
 801db0e:	f107 0a01 	add.w	sl, r7, #1
 801db12:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801db16:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801db1a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801db1e:	9c02      	ldr	r4, [sp, #8]
 801db20:	ea4e 0e0a 	orr.w	lr, lr, sl
 801db24:	f820 e004 	strh.w	lr, [r0, r4]
 801db28:	e7aa      	b.n	801da80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801db2a:	f04f 0900 	mov.w	r9, #0
 801db2e:	eba3 0409 	sub.w	r4, r3, r9
 801db32:	2c00      	cmp	r4, #0
 801db34:	f77f af4a 	ble.w	801d9cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801db38:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801db3c:	1414      	asrs	r4, r2, #16
 801db3e:	140d      	asrs	r5, r1, #16
 801db40:	fb06 5504 	mla	r5, r6, r4, r5
 801db44:	9c01      	ldr	r4, [sp, #4]
 801db46:	5d64      	ldrb	r4, [r4, r5]
 801db48:	2cff      	cmp	r4, #255	; 0xff
 801db4a:	d10b      	bne.n	801db64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801db4c:	9c00      	ldr	r4, [sp, #0]
 801db4e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801db52:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801db56:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801db58:	4421      	add	r1, r4
 801db5a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801db5c:	f109 0901 	add.w	r9, r9, #1
 801db60:	4422      	add	r2, r4
 801db62:	e7e4      	b.n	801db2e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801db64:	2c00      	cmp	r4, #0
 801db66:	d0f6      	beq.n	801db56 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801db68:	9e00      	ldr	r6, [sp, #0]
 801db6a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801db6e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801db72:	b2a7      	uxth	r7, r4
 801db74:	122e      	asrs	r6, r5, #8
 801db76:	43e4      	mvns	r4, r4
 801db78:	b2e4      	uxtb	r4, r4
 801db7a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801db7e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801db82:	fb16 f604 	smulbb	r6, r6, r4
 801db86:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801db8a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801db8e:	00ed      	lsls	r5, r5, #3
 801db90:	fb0c 6c07 	mla	ip, ip, r7, r6
 801db94:	b2ed      	uxtb	r5, r5
 801db96:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801db9a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801db9e:	fb15 f504 	smulbb	r5, r5, r4
 801dba2:	fa5f fe8e 	uxtb.w	lr, lr
 801dba6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801dbaa:	fb0e 5507 	mla	r5, lr, r7, r5
 801dbae:	fb1a fa04 	smulbb	sl, sl, r4
 801dbb2:	fa1f fc8c 	uxth.w	ip, ip
 801dbb6:	b2ad      	uxth	r5, r5
 801dbb8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801dbbc:	fb06 a607 	mla	r6, r6, r7, sl
 801dbc0:	f10c 0401 	add.w	r4, ip, #1
 801dbc4:	f105 0a01 	add.w	sl, r5, #1
 801dbc8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801dbcc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801dbd0:	b2b6      	uxth	r6, r6
 801dbd2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801dbd6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dbda:	ea4a 0c0c 	orr.w	ip, sl, ip
 801dbde:	f106 0a01 	add.w	sl, r6, #1
 801dbe2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801dbe6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dbea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dbee:	ea4c 0c0a 	orr.w	ip, ip, sl
 801dbf2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801dbf6:	e7ae      	b.n	801db56 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801dbf8:	b005      	add	sp, #20
 801dbfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dbfe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dbfe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc02:	b085      	sub	sp, #20
 801dc04:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801dc06:	9203      	str	r2, [sp, #12]
 801dc08:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801dc0c:	9201      	str	r2, [sp, #4]
 801dc0e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801dc12:	9100      	str	r1, [sp, #0]
 801dc14:	6841      	ldr	r1, [r0, #4]
 801dc16:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801dc1a:	fb01 2404 	mla	r4, r1, r4, r2
 801dc1e:	6802      	ldr	r2, [r0, #0]
 801dc20:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801dc24:	f8de 2000 	ldr.w	r2, [lr]
 801dc28:	9202      	str	r2, [sp, #8]
 801dc2a:	9a01      	ldr	r2, [sp, #4]
 801dc2c:	43d6      	mvns	r6, r2
 801dc2e:	b2f6      	uxtb	r6, r6
 801dc30:	9a00      	ldr	r2, [sp, #0]
 801dc32:	2a00      	cmp	r2, #0
 801dc34:	dc03      	bgt.n	801dc3e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801dc36:	9a03      	ldr	r2, [sp, #12]
 801dc38:	2a00      	cmp	r2, #0
 801dc3a:	f340 8124 	ble.w	801de86 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801dc3e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801dc40:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801dc44:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801dc48:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801dc4c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801dc4e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801dc52:	2b00      	cmp	r3, #0
 801dc54:	dd0e      	ble.n	801dc74 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dc56:	1408      	asrs	r0, r1, #16
 801dc58:	d405      	bmi.n	801dc66 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801dc5a:	4560      	cmp	r0, ip
 801dc5c:	da03      	bge.n	801dc66 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801dc5e:	1410      	asrs	r0, r2, #16
 801dc60:	d401      	bmi.n	801dc66 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801dc62:	42b8      	cmp	r0, r7
 801dc64:	db07      	blt.n	801dc76 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801dc66:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dc68:	4401      	add	r1, r0
 801dc6a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dc6c:	3b01      	subs	r3, #1
 801dc6e:	4402      	add	r2, r0
 801dc70:	3402      	adds	r4, #2
 801dc72:	e7ee      	b.n	801dc52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801dc74:	d06e      	beq.n	801dd54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801dc76:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dc78:	1e58      	subs	r0, r3, #1
 801dc7a:	fb05 1500 	mla	r5, r5, r0, r1
 801dc7e:	142d      	asrs	r5, r5, #16
 801dc80:	d45c      	bmi.n	801dd3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801dc82:	4565      	cmp	r5, ip
 801dc84:	da5a      	bge.n	801dd3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801dc86:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801dc88:	fb05 2000 	mla	r0, r5, r0, r2
 801dc8c:	1400      	asrs	r0, r0, #16
 801dc8e:	d455      	bmi.n	801dd3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801dc90:	42b8      	cmp	r0, r7
 801dc92:	da53      	bge.n	801dd3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801dc94:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801dc98:	4699      	mov	r9, r3
 801dc9a:	46a2      	mov	sl, r4
 801dc9c:	f1b9 0f00 	cmp.w	r9, #0
 801dca0:	dd54      	ble.n	801dd4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801dca2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801dca6:	140d      	asrs	r5, r1, #16
 801dca8:	1410      	asrs	r0, r2, #16
 801dcaa:	fb07 5000 	mla	r0, r7, r0, r5
 801dcae:	9d02      	ldr	r5, [sp, #8]
 801dcb0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801dcb4:	f8ba 5000 	ldrh.w	r5, [sl]
 801dcb8:	122f      	asrs	r7, r5, #8
 801dcba:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801dcbe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dcc2:	fb17 f706 	smulbb	r7, r7, r6
 801dcc6:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801dcca:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dcce:	00ed      	lsls	r5, r5, #3
 801dcd0:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801dcd4:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801dcd8:	10c7      	asrs	r7, r0, #3
 801dcda:	b2ed      	uxtb	r5, r5
 801dcdc:	00c0      	lsls	r0, r0, #3
 801dcde:	fb18 f806 	smulbb	r8, r8, r6
 801dce2:	fb15 f506 	smulbb	r5, r5, r6
 801dce6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801dcea:	b2c0      	uxtb	r0, r0
 801dcec:	fa1f fc8c 	uxth.w	ip, ip
 801dcf0:	fb07 870b 	mla	r7, r7, fp, r8
 801dcf4:	fb00 500b 	mla	r0, r0, fp, r5
 801dcf8:	b280      	uxth	r0, r0
 801dcfa:	b2bf      	uxth	r7, r7
 801dcfc:	f10c 0501 	add.w	r5, ip, #1
 801dd00:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801dd04:	f107 0801 	add.w	r8, r7, #1
 801dd08:	1c45      	adds	r5, r0, #1
 801dd0a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801dd0e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801dd12:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dd14:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dd18:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801dd1c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801dd20:	ea45 0c0c 	orr.w	ip, r5, ip
 801dd24:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801dd28:	4401      	add	r1, r0
 801dd2a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dd2c:	ea4c 0c08 	orr.w	ip, ip, r8
 801dd30:	f82a cb02 	strh.w	ip, [sl], #2
 801dd34:	4402      	add	r2, r0
 801dd36:	f109 39ff 	add.w	r9, r9, #4294967295
 801dd3a:	e7af      	b.n	801dc9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801dd3c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801dd40:	f04f 0800 	mov.w	r8, #0
 801dd44:	eb03 0008 	add.w	r0, r3, r8
 801dd48:	2800      	cmp	r0, #0
 801dd4a:	dc41      	bgt.n	801ddd0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801dd4c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dd50:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801dd54:	9b00      	ldr	r3, [sp, #0]
 801dd56:	2b00      	cmp	r3, #0
 801dd58:	f340 8095 	ble.w	801de86 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801dd5c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dd60:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801dd64:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dd68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dd6a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dd6e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dd72:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dd76:	eef0 6a62 	vmov.f32	s13, s5
 801dd7a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dd7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dd82:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dd86:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801dd8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dd8e:	eef0 6a43 	vmov.f32	s13, s6
 801dd92:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dd96:	ee12 2a90 	vmov	r2, s5
 801dd9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dd9e:	fb92 f3f3 	sdiv	r3, r2, r3
 801dda2:	ee13 2a10 	vmov	r2, s6
 801dda6:	9311      	str	r3, [sp, #68]	; 0x44
 801dda8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ddaa:	fb92 f3f3 	sdiv	r3, r2, r3
 801ddae:	9312      	str	r3, [sp, #72]	; 0x48
 801ddb0:	9b00      	ldr	r3, [sp, #0]
 801ddb2:	9a03      	ldr	r2, [sp, #12]
 801ddb4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ddb8:	3b01      	subs	r3, #1
 801ddba:	9300      	str	r3, [sp, #0]
 801ddbc:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801ddc0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ddc2:	eeb0 3a67 	vmov.f32	s6, s15
 801ddc6:	bf08      	it	eq
 801ddc8:	4613      	moveq	r3, r2
 801ddca:	eef0 2a47 	vmov.f32	s5, s14
 801ddce:	e72f      	b.n	801dc30 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801ddd0:	140f      	asrs	r7, r1, #16
 801ddd2:	d451      	bmi.n	801de78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801ddd4:	f8de 5008 	ldr.w	r5, [lr, #8]
 801ddd8:	42bd      	cmp	r5, r7
 801ddda:	dd4d      	ble.n	801de78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dddc:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801dde0:	d44a      	bmi.n	801de78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dde2:	f8de 000c 	ldr.w	r0, [lr, #12]
 801dde6:	4560      	cmp	r0, ip
 801dde8:	dd46      	ble.n	801de78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801ddea:	b22d      	sxth	r5, r5
 801ddec:	fb0c 7505 	mla	r5, ip, r5, r7
 801ddf0:	9802      	ldr	r0, [sp, #8]
 801ddf2:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801ddf6:	f06f 0501 	mvn.w	r5, #1
 801ddfa:	fb05 fb08 	mul.w	fp, r5, r8
 801ddfe:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801de02:	f834 500b 	ldrh.w	r5, [r4, fp]
 801de06:	122f      	asrs	r7, r5, #8
 801de08:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801de0c:	fb17 f706 	smulbb	r7, r7, r6
 801de10:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801de14:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801de18:	00ed      	lsls	r5, r5, #3
 801de1a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801de1e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801de22:	10c7      	asrs	r7, r0, #3
 801de24:	b2ed      	uxtb	r5, r5
 801de26:	00c0      	lsls	r0, r0, #3
 801de28:	fb19 f906 	smulbb	r9, r9, r6
 801de2c:	fb15 f506 	smulbb	r5, r5, r6
 801de30:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801de34:	b2c0      	uxtb	r0, r0
 801de36:	fa1f fc8c 	uxth.w	ip, ip
 801de3a:	fb07 970a 	mla	r7, r7, sl, r9
 801de3e:	fb00 500a 	mla	r0, r0, sl, r5
 801de42:	b2bf      	uxth	r7, r7
 801de44:	b280      	uxth	r0, r0
 801de46:	f10c 0501 	add.w	r5, ip, #1
 801de4a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801de4e:	f107 0901 	add.w	r9, r7, #1
 801de52:	1c45      	adds	r5, r0, #1
 801de54:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801de58:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801de5c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801de60:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801de64:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801de68:	ea45 0c0c 	orr.w	ip, r5, ip
 801de6c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801de70:	ea4c 0c09 	orr.w	ip, ip, r9
 801de74:	f824 c00b 	strh.w	ip, [r4, fp]
 801de78:	9811      	ldr	r0, [sp, #68]	; 0x44
 801de7a:	4401      	add	r1, r0
 801de7c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801de7e:	f108 38ff 	add.w	r8, r8, #4294967295
 801de82:	4402      	add	r2, r0
 801de84:	e75e      	b.n	801dd44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801de86:	b005      	add	sp, #20
 801de88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801de8c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801de8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de90:	b085      	sub	sp, #20
 801de92:	4693      	mov	fp, r2
 801de94:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801de96:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801de98:	6870      	ldr	r0, [r6, #4]
 801de9a:	9101      	str	r1, [sp, #4]
 801de9c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801dea0:	fb00 2404 	mla	r4, r0, r4, r2
 801dea4:	6832      	ldr	r2, [r6, #0]
 801dea6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801deaa:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801deae:	682a      	ldr	r2, [r5, #0]
 801deb0:	9202      	str	r2, [sp, #8]
 801deb2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801deb6:	9a01      	ldr	r2, [sp, #4]
 801deb8:	2a00      	cmp	r2, #0
 801deba:	dc03      	bgt.n	801dec4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801debc:	f1bb 0f00 	cmp.w	fp, #0
 801dec0:	f340 809a 	ble.w	801dff8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801dec4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801dec6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801deca:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801dece:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ded2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ded4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ded8:	2b00      	cmp	r3, #0
 801deda:	dd0c      	ble.n	801def6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801dedc:	1406      	asrs	r6, r0, #16
 801dede:	d405      	bmi.n	801deec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801dee0:	454e      	cmp	r6, r9
 801dee2:	da03      	bge.n	801deec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801dee4:	1416      	asrs	r6, r2, #16
 801dee6:	d401      	bmi.n	801deec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801dee8:	4546      	cmp	r6, r8
 801deea:	db05      	blt.n	801def8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801deec:	4470      	add	r0, lr
 801deee:	4462      	add	r2, ip
 801def0:	3b01      	subs	r3, #1
 801def2:	3402      	adds	r4, #2
 801def4:	e7f0      	b.n	801ded8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801def6:	d00f      	beq.n	801df18 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801def8:	1e5e      	subs	r6, r3, #1
 801defa:	fb0e 0706 	mla	r7, lr, r6, r0
 801defe:	143f      	asrs	r7, r7, #16
 801df00:	d541      	bpl.n	801df86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801df02:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801df06:	4698      	mov	r8, r3
 801df08:	9603      	str	r6, [sp, #12]
 801df0a:	f1b8 0f00 	cmp.w	r8, #0
 801df0e:	dc56      	bgt.n	801dfbe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801df10:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801df14:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801df18:	9b01      	ldr	r3, [sp, #4]
 801df1a:	2b00      	cmp	r3, #0
 801df1c:	dd6c      	ble.n	801dff8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801df1e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801df22:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801df26:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801df2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801df2c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801df30:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801df34:	eeb0 6a62 	vmov.f32	s12, s5
 801df38:	ee61 7a27 	vmul.f32	s15, s2, s15
 801df3c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801df40:	ee77 2a62 	vsub.f32	s5, s14, s5
 801df44:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801df48:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801df4c:	eeb0 6a43 	vmov.f32	s12, s6
 801df50:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801df54:	ee12 2a90 	vmov	r2, s5
 801df58:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801df5c:	fb92 fef3 	sdiv	lr, r2, r3
 801df60:	ee13 2a10 	vmov	r2, s6
 801df64:	fb92 fcf3 	sdiv	ip, r2, r3
 801df68:	9b01      	ldr	r3, [sp, #4]
 801df6a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801df6e:	3b01      	subs	r3, #1
 801df70:	9301      	str	r3, [sp, #4]
 801df72:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801df76:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801df78:	eeb0 3a67 	vmov.f32	s6, s15
 801df7c:	bf08      	it	eq
 801df7e:	465b      	moveq	r3, fp
 801df80:	eef0 2a47 	vmov.f32	s5, s14
 801df84:	e797      	b.n	801deb6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801df86:	454f      	cmp	r7, r9
 801df88:	dabb      	bge.n	801df02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801df8a:	fb0c 2606 	mla	r6, ip, r6, r2
 801df8e:	1436      	asrs	r6, r6, #16
 801df90:	d4b7      	bmi.n	801df02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801df92:	4546      	cmp	r6, r8
 801df94:	dab5      	bge.n	801df02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801df96:	461e      	mov	r6, r3
 801df98:	46a0      	mov	r8, r4
 801df9a:	2e00      	cmp	r6, #0
 801df9c:	ddb8      	ble.n	801df10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801df9e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801dfa2:	9902      	ldr	r1, [sp, #8]
 801dfa4:	1417      	asrs	r7, r2, #16
 801dfa6:	ea4f 4920 	mov.w	r9, r0, asr #16
 801dfaa:	fb0a 9707 	mla	r7, sl, r7, r9
 801dfae:	4470      	add	r0, lr
 801dfb0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801dfb4:	f828 7b02 	strh.w	r7, [r8], #2
 801dfb8:	4462      	add	r2, ip
 801dfba:	3e01      	subs	r6, #1
 801dfbc:	e7ed      	b.n	801df9a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801dfbe:	ea5f 4920 	movs.w	r9, r0, asr #16
 801dfc2:	d414      	bmi.n	801dfee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801dfc4:	68ae      	ldr	r6, [r5, #8]
 801dfc6:	454e      	cmp	r6, r9
 801dfc8:	dd11      	ble.n	801dfee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801dfca:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801dfce:	d40e      	bmi.n	801dfee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801dfd0:	68ef      	ldr	r7, [r5, #12]
 801dfd2:	4557      	cmp	r7, sl
 801dfd4:	dd0b      	ble.n	801dfee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801dfd6:	b236      	sxth	r6, r6
 801dfd8:	fb0a 9606 	mla	r6, sl, r6, r9
 801dfdc:	9f02      	ldr	r7, [sp, #8]
 801dfde:	f06f 0101 	mvn.w	r1, #1
 801dfe2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801dfe6:	fb01 f608 	mul.w	r6, r1, r8
 801dfea:	9903      	ldr	r1, [sp, #12]
 801dfec:	538f      	strh	r7, [r1, r6]
 801dfee:	4470      	add	r0, lr
 801dff0:	4462      	add	r2, ip
 801dff2:	f108 38ff 	add.w	r8, r8, #4294967295
 801dff6:	e788      	b.n	801df0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801dff8:	b005      	add	sp, #20
 801dffa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dffe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dffe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e002:	b087      	sub	sp, #28
 801e004:	468b      	mov	fp, r1
 801e006:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e008:	9203      	str	r2, [sp, #12]
 801e00a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e00e:	9204      	str	r2, [sp, #16]
 801e010:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801e014:	6841      	ldr	r1, [r0, #4]
 801e016:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801e01a:	fb01 2505 	mla	r5, r1, r5, r2
 801e01e:	6802      	ldr	r2, [r0, #0]
 801e020:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801e024:	f8d9 2000 	ldr.w	r2, [r9]
 801e028:	9201      	str	r2, [sp, #4]
 801e02a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e02e:	f1bb 0f00 	cmp.w	fp, #0
 801e032:	dc03      	bgt.n	801e03c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e034:	9a03      	ldr	r2, [sp, #12]
 801e036:	2a00      	cmp	r2, #0
 801e038:	f340 8159 	ble.w	801e2ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e03c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e03e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801e042:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801e046:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e04a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e04c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e050:	2b00      	cmp	r3, #0
 801e052:	dd0e      	ble.n	801e072 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e054:	1402      	asrs	r2, r0, #16
 801e056:	d405      	bmi.n	801e064 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e058:	42ba      	cmp	r2, r7
 801e05a:	da03      	bge.n	801e064 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e05c:	140a      	asrs	r2, r1, #16
 801e05e:	d401      	bmi.n	801e064 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e060:	42b2      	cmp	r2, r6
 801e062:	db07      	blt.n	801e074 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e064:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e066:	4410      	add	r0, r2
 801e068:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e06a:	3b01      	subs	r3, #1
 801e06c:	4411      	add	r1, r2
 801e06e:	3502      	adds	r5, #2
 801e070:	e7ee      	b.n	801e050 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801e072:	d017      	beq.n	801e0a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801e074:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e076:	1e5a      	subs	r2, r3, #1
 801e078:	fb04 0402 	mla	r4, r4, r2, r0
 801e07c:	1424      	asrs	r4, r4, #16
 801e07e:	d409      	bmi.n	801e094 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e080:	42bc      	cmp	r4, r7
 801e082:	da07      	bge.n	801e094 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e084:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e086:	fb04 1202 	mla	r2, r4, r2, r1
 801e08a:	1412      	asrs	r2, r2, #16
 801e08c:	d402      	bmi.n	801e094 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e08e:	42b2      	cmp	r2, r6
 801e090:	f2c0 80bf 	blt.w	801e212 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e094:	2700      	movs	r7, #0
 801e096:	19da      	adds	r2, r3, r7
 801e098:	2a00      	cmp	r2, #0
 801e09a:	dc3e      	bgt.n	801e11a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e09c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e0a0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801e0a4:	f1bb 0f00 	cmp.w	fp, #0
 801e0a8:	f340 8121 	ble.w	801e2ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e0ac:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e0b0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e0b4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e0b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e0ba:	f1bb 0b01 	subs.w	fp, fp, #1
 801e0be:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e0c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e0c6:	eeb0 6a62 	vmov.f32	s12, s5
 801e0ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e0ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e0d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e0d6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e0da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e0de:	eeb0 6a43 	vmov.f32	s12, s6
 801e0e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e0e6:	ee12 2a90 	vmov	r2, s5
 801e0ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e0ee:	fb92 f3f3 	sdiv	r3, r2, r3
 801e0f2:	ee13 2a10 	vmov	r2, s6
 801e0f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e0fa:	9313      	str	r3, [sp, #76]	; 0x4c
 801e0fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e0fe:	fb92 f3f3 	sdiv	r3, r2, r3
 801e102:	9a03      	ldr	r2, [sp, #12]
 801e104:	9314      	str	r3, [sp, #80]	; 0x50
 801e106:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e10a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e10c:	eeb0 3a67 	vmov.f32	s6, s15
 801e110:	bf08      	it	eq
 801e112:	4613      	moveq	r3, r2
 801e114:	eef0 2a47 	vmov.f32	s5, s14
 801e118:	e789      	b.n	801e02e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801e11a:	1406      	asrs	r6, r0, #16
 801e11c:	d42d      	bmi.n	801e17a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e11e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801e122:	42b4      	cmp	r4, r6
 801e124:	dd29      	ble.n	801e17a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e126:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801e12a:	d426      	bmi.n	801e17a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e12c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e130:	4562      	cmp	r2, ip
 801e132:	dd22      	ble.n	801e17a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e134:	b224      	sxth	r4, r4
 801e136:	9a01      	ldr	r2, [sp, #4]
 801e138:	fb0c 6404 	mla	r4, ip, r4, r6
 801e13c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801e140:	0e22      	lsrs	r2, r4, #24
 801e142:	d01a      	beq.n	801e17a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e144:	9e04      	ldr	r6, [sp, #16]
 801e146:	4372      	muls	r2, r6
 801e148:	1c56      	adds	r6, r2, #1
 801e14a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e14e:	1212      	asrs	r2, r2, #8
 801e150:	0a26      	lsrs	r6, r4, #8
 801e152:	2aff      	cmp	r2, #255	; 0xff
 801e154:	9605      	str	r6, [sp, #20]
 801e156:	d116      	bne.n	801e186 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801e158:	f06f 0201 	mvn.w	r2, #1
 801e15c:	fb02 fc07 	mul.w	ip, r2, r7
 801e160:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e164:	0962      	lsrs	r2, r4, #5
 801e166:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e16a:	f026 0607 	bic.w	r6, r6, #7
 801e16e:	4316      	orrs	r6, r2
 801e170:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e174:	4326      	orrs	r6, r4
 801e176:	f825 600c 	strh.w	r6, [r5, ip]
 801e17a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e17c:	4410      	add	r0, r2
 801e17e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e180:	3f01      	subs	r7, #1
 801e182:	4411      	add	r1, r2
 801e184:	e787      	b.n	801e096 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e186:	f06f 0601 	mvn.w	r6, #1
 801e18a:	437e      	muls	r6, r7
 801e18c:	fa1f fa82 	uxth.w	sl, r2
 801e190:	f835 8006 	ldrh.w	r8, [r5, r6]
 801e194:	9602      	str	r6, [sp, #8]
 801e196:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e19a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801e19e:	43d2      	mvns	r2, r2
 801e1a0:	b2d2      	uxtb	r2, r2
 801e1a2:	fb1c fc0a 	smulbb	ip, ip, sl
 801e1a6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e1aa:	fb0e ce02 	mla	lr, lr, r2, ip
 801e1ae:	b2e4      	uxtb	r4, r4
 801e1b0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e1b4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e1b8:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e1bc:	fa5f f888 	uxtb.w	r8, r8
 801e1c0:	fb14 f40a 	smulbb	r4, r4, sl
 801e1c4:	fb08 4402 	mla	r4, r8, r2, r4
 801e1c8:	fa1f fe8e 	uxth.w	lr, lr
 801e1cc:	fb16 f60a 	smulbb	r6, r6, sl
 801e1d0:	b2a4      	uxth	r4, r4
 801e1d2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e1d6:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e1da:	f10e 0201 	add.w	r2, lr, #1
 801e1de:	1c66      	adds	r6, r4, #1
 801e1e0:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e1e4:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e1e8:	fa1f fc8c 	uxth.w	ip, ip
 801e1ec:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e1f0:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e1f4:	ea46 0e0e 	orr.w	lr, r6, lr
 801e1f8:	f10c 0601 	add.w	r6, ip, #1
 801e1fc:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e200:	0976      	lsrs	r6, r6, #5
 801e202:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e206:	9a02      	ldr	r2, [sp, #8]
 801e208:	ea4e 0e06 	orr.w	lr, lr, r6
 801e20c:	f825 e002 	strh.w	lr, [r5, r2]
 801e210:	e7b3      	b.n	801e17a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e212:	f04f 0800 	mov.w	r8, #0
 801e216:	eba3 0208 	sub.w	r2, r3, r8
 801e21a:	2a00      	cmp	r2, #0
 801e21c:	f77f af3e 	ble.w	801e09c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e220:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801e224:	1404      	asrs	r4, r0, #16
 801e226:	140a      	asrs	r2, r1, #16
 801e228:	fb06 4202 	mla	r2, r6, r2, r4
 801e22c:	9c01      	ldr	r4, [sp, #4]
 801e22e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801e232:	0e22      	lsrs	r2, r4, #24
 801e234:	d016      	beq.n	801e264 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e236:	9e04      	ldr	r6, [sp, #16]
 801e238:	4372      	muls	r2, r6
 801e23a:	1c56      	adds	r6, r2, #1
 801e23c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e240:	1212      	asrs	r2, r2, #8
 801e242:	2aff      	cmp	r2, #255	; 0xff
 801e244:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801e248:	d113      	bne.n	801e272 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801e24a:	0962      	lsrs	r2, r4, #5
 801e24c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e250:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e254:	f026 0607 	bic.w	r6, r6, #7
 801e258:	4316      	orrs	r6, r2
 801e25a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e25e:	4326      	orrs	r6, r4
 801e260:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801e264:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e266:	4410      	add	r0, r2
 801e268:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e26a:	f108 0801 	add.w	r8, r8, #1
 801e26e:	4411      	add	r1, r2
 801e270:	e7d1      	b.n	801e216 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801e272:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801e276:	fa1f fa82 	uxth.w	sl, r2
 801e27a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e27e:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801e282:	43d2      	mvns	r2, r2
 801e284:	b2d2      	uxtb	r2, r2
 801e286:	fb17 f70a 	smulbb	r7, r7, sl
 801e28a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e28e:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e292:	b2e4      	uxtb	r4, r4
 801e294:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e298:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e29c:	fa5f fe8e 	uxtb.w	lr, lr
 801e2a0:	fb14 f40a 	smulbb	r4, r4, sl
 801e2a4:	fb0e 4402 	mla	r4, lr, r2, r4
 801e2a8:	b2f6      	uxtb	r6, r6
 801e2aa:	fa1f fc8c 	uxth.w	ip, ip
 801e2ae:	fb16 f60a 	smulbb	r6, r6, sl
 801e2b2:	b2a4      	uxth	r4, r4
 801e2b4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e2b8:	fb07 6702 	mla	r7, r7, r2, r6
 801e2bc:	f10c 0201 	add.w	r2, ip, #1
 801e2c0:	1c66      	adds	r6, r4, #1
 801e2c2:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e2c6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e2ca:	b2bf      	uxth	r7, r7
 801e2cc:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e2d0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e2d4:	ea46 0c0c 	orr.w	ip, r6, ip
 801e2d8:	1c7e      	adds	r6, r7, #1
 801e2da:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e2de:	0976      	lsrs	r6, r6, #5
 801e2e0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e2e4:	ea4c 0c06 	orr.w	ip, ip, r6
 801e2e8:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801e2ec:	e7ba      	b.n	801e264 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e2ee:	b007      	add	sp, #28
 801e2f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e2f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e2f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e2f8:	b085      	sub	sp, #20
 801e2fa:	468b      	mov	fp, r1
 801e2fc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e2fe:	9203      	str	r2, [sp, #12]
 801e300:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e304:	6841      	ldr	r1, [r0, #4]
 801e306:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801e30a:	fb01 2404 	mla	r4, r1, r4, r2
 801e30e:	6802      	ldr	r2, [r0, #0]
 801e310:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e314:	f8d8 2000 	ldr.w	r2, [r8]
 801e318:	9201      	str	r2, [sp, #4]
 801e31a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e31e:	f1bb 0f00 	cmp.w	fp, #0
 801e322:	dc03      	bgt.n	801e32c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e324:	9a03      	ldr	r2, [sp, #12]
 801e326:	2a00      	cmp	r2, #0
 801e328:	f340 814f 	ble.w	801e5ca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e32c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e32e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801e332:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801e336:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e33a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e33c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e340:	2b00      	cmp	r3, #0
 801e342:	dd0e      	ble.n	801e362 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e344:	1408      	asrs	r0, r1, #16
 801e346:	d405      	bmi.n	801e354 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e348:	42b8      	cmp	r0, r7
 801e34a:	da03      	bge.n	801e354 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e34c:	1410      	asrs	r0, r2, #16
 801e34e:	d401      	bmi.n	801e354 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e350:	42b0      	cmp	r0, r6
 801e352:	db07      	blt.n	801e364 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e354:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e356:	4401      	add	r1, r0
 801e358:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e35a:	3b01      	subs	r3, #1
 801e35c:	4402      	add	r2, r0
 801e35e:	3402      	adds	r4, #2
 801e360:	e7ee      	b.n	801e340 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e362:	d017      	beq.n	801e394 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e364:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e366:	1e58      	subs	r0, r3, #1
 801e368:	fb05 1500 	mla	r5, r5, r0, r1
 801e36c:	142d      	asrs	r5, r5, #16
 801e36e:	d409      	bmi.n	801e384 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e370:	42bd      	cmp	r5, r7
 801e372:	da07      	bge.n	801e384 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e374:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e376:	fb05 2000 	mla	r0, r5, r0, r2
 801e37a:	1400      	asrs	r0, r0, #16
 801e37c:	d402      	bmi.n	801e384 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e37e:	42b0      	cmp	r0, r6
 801e380:	f2c0 80ba 	blt.w	801e4f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e384:	2600      	movs	r6, #0
 801e386:	1998      	adds	r0, r3, r6
 801e388:	2800      	cmp	r0, #0
 801e38a:	dc3e      	bgt.n	801e40a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e38c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e390:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e394:	f1bb 0f00 	cmp.w	fp, #0
 801e398:	f340 8117 	ble.w	801e5ca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e39c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e3a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e3a4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e3a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e3aa:	f1bb 0b01 	subs.w	fp, fp, #1
 801e3ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e3b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e3b6:	eeb0 6a62 	vmov.f32	s12, s5
 801e3ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e3be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e3c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e3c6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801e3ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e3ce:	eeb0 6a43 	vmov.f32	s12, s6
 801e3d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e3d6:	ee12 2a90 	vmov	r2, s5
 801e3da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e3de:	fb92 f3f3 	sdiv	r3, r2, r3
 801e3e2:	ee13 2a10 	vmov	r2, s6
 801e3e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e3ea:	9311      	str	r3, [sp, #68]	; 0x44
 801e3ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e3ee:	fb92 f3f3 	sdiv	r3, r2, r3
 801e3f2:	9a03      	ldr	r2, [sp, #12]
 801e3f4:	9312      	str	r3, [sp, #72]	; 0x48
 801e3f6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801e3fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e3fc:	eeb0 3a67 	vmov.f32	s6, s15
 801e400:	bf08      	it	eq
 801e402:	4613      	moveq	r3, r2
 801e404:	eef0 2a47 	vmov.f32	s5, s14
 801e408:	e789      	b.n	801e31e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e40a:	140f      	asrs	r7, r1, #16
 801e40c:	d424      	bmi.n	801e458 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e40e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801e412:	42bd      	cmp	r5, r7
 801e414:	dd20      	ble.n	801e458 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e416:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801e41a:	d41d      	bmi.n	801e458 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e41c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801e420:	4560      	cmp	r0, ip
 801e422:	dd19      	ble.n	801e458 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e424:	b22d      	sxth	r5, r5
 801e426:	fb0c 7505 	mla	r5, ip, r5, r7
 801e42a:	9801      	ldr	r0, [sp, #4]
 801e42c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801e430:	0e07      	lsrs	r7, r0, #24
 801e432:	2fff      	cmp	r7, #255	; 0xff
 801e434:	d116      	bne.n	801e464 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801e436:	f06f 0501 	mvn.w	r5, #1
 801e43a:	fb05 f706 	mul.w	r7, r5, r6
 801e43e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801e442:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801e446:	0945      	lsrs	r5, r0, #5
 801e448:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e44c:	ea4c 0505 	orr.w	r5, ip, r5
 801e450:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801e454:	4305      	orrs	r5, r0
 801e456:	53e5      	strh	r5, [r4, r7]
 801e458:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e45a:	4401      	add	r1, r0
 801e45c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e45e:	3e01      	subs	r6, #1
 801e460:	4402      	add	r2, r0
 801e462:	e790      	b.n	801e386 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e464:	b2fd      	uxtb	r5, r7
 801e466:	2f00      	cmp	r7, #0
 801e468:	d0f6      	beq.n	801e458 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e46a:	f06f 0701 	mvn.w	r7, #1
 801e46e:	4377      	muls	r7, r6
 801e470:	fa1f f985 	uxth.w	r9, r5
 801e474:	f834 e007 	ldrh.w	lr, [r4, r7]
 801e478:	9702      	str	r7, [sp, #8]
 801e47a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e47e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801e482:	43ed      	mvns	r5, r5
 801e484:	b2ed      	uxtb	r5, r5
 801e486:	fb17 f709 	smulbb	r7, r7, r9
 801e48a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e48e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801e492:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801e496:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e49a:	b2c0      	uxtb	r0, r0
 801e49c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e4a0:	fa5f fe8e 	uxtb.w	lr, lr
 801e4a4:	fb10 f009 	smulbb	r0, r0, r9
 801e4a8:	fb0e 0005 	mla	r0, lr, r5, r0
 801e4ac:	b280      	uxth	r0, r0
 801e4ae:	fa1f fc8c 	uxth.w	ip, ip
 801e4b2:	fb1a fa09 	smulbb	sl, sl, r9
 801e4b6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e4ba:	fb07 a705 	mla	r7, r7, r5, sl
 801e4be:	f100 0a01 	add.w	sl, r0, #1
 801e4c2:	f10c 0501 	add.w	r5, ip, #1
 801e4c6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801e4ca:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e4ce:	b2bf      	uxth	r7, r7
 801e4d0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e4d4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e4d8:	ea4a 0c0c 	orr.w	ip, sl, ip
 801e4dc:	f107 0a01 	add.w	sl, r7, #1
 801e4e0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801e4e4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e4e8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e4ec:	9802      	ldr	r0, [sp, #8]
 801e4ee:	ea4c 0c0a 	orr.w	ip, ip, sl
 801e4f2:	f824 c000 	strh.w	ip, [r4, r0]
 801e4f6:	e7af      	b.n	801e458 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e4f8:	f04f 0e00 	mov.w	lr, #0
 801e4fc:	eba3 000e 	sub.w	r0, r3, lr
 801e500:	2800      	cmp	r0, #0
 801e502:	f77f af43 	ble.w	801e38c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e506:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801e50a:	140d      	asrs	r5, r1, #16
 801e50c:	1410      	asrs	r0, r2, #16
 801e50e:	fb06 5000 	mla	r0, r6, r0, r5
 801e512:	9d01      	ldr	r5, [sp, #4]
 801e514:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801e518:	0e2e      	lsrs	r6, r5, #24
 801e51a:	2eff      	cmp	r6, #255	; 0xff
 801e51c:	d112      	bne.n	801e544 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801e51e:	482c      	ldr	r0, [pc, #176]	; (801e5d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801e520:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801e524:	0968      	lsrs	r0, r5, #5
 801e526:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e52a:	4330      	orrs	r0, r6
 801e52c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e530:	4328      	orrs	r0, r5
 801e532:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801e536:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e538:	4401      	add	r1, r0
 801e53a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e53c:	f10e 0e01 	add.w	lr, lr, #1
 801e540:	4402      	add	r2, r0
 801e542:	e7db      	b.n	801e4fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801e544:	b2f0      	uxtb	r0, r6
 801e546:	2e00      	cmp	r6, #0
 801e548:	d0f5      	beq.n	801e536 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e54a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801e54e:	fa1f f980 	uxth.w	r9, r0
 801e552:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e556:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801e55a:	43c0      	mvns	r0, r0
 801e55c:	b2c0      	uxtb	r0, r0
 801e55e:	fb16 f609 	smulbb	r6, r6, r9
 801e562:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e566:	fb07 6700 	mla	r7, r7, r0, r6
 801e56a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801e56e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801e572:	b2ed      	uxtb	r5, r5
 801e574:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e578:	fa5f fc8c 	uxtb.w	ip, ip
 801e57c:	fb15 f509 	smulbb	r5, r5, r9
 801e580:	fb0c 5500 	mla	r5, ip, r0, r5
 801e584:	b2bf      	uxth	r7, r7
 801e586:	fb1a fa09 	smulbb	sl, sl, r9
 801e58a:	b2ad      	uxth	r5, r5
 801e58c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e590:	fb06 a600 	mla	r6, r6, r0, sl
 801e594:	1c78      	adds	r0, r7, #1
 801e596:	f105 0a01 	add.w	sl, r5, #1
 801e59a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801e59e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e5a2:	b2b6      	uxth	r6, r6
 801e5a4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e5a8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e5ac:	ea4a 0707 	orr.w	r7, sl, r7
 801e5b0:	f106 0a01 	add.w	sl, r6, #1
 801e5b4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801e5b8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e5bc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e5c0:	ea47 070a 	orr.w	r7, r7, sl
 801e5c4:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801e5c8:	e7b5      	b.n	801e536 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e5ca:	b005      	add	sp, #20
 801e5cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e5d0:	fffff800 	.word	0xfffff800

0801e5d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e5d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e5d8:	b087      	sub	sp, #28
 801e5da:	468b      	mov	fp, r1
 801e5dc:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e5de:	9203      	str	r2, [sp, #12]
 801e5e0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e5e4:	9204      	str	r2, [sp, #16]
 801e5e6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801e5ea:	6841      	ldr	r1, [r0, #4]
 801e5ec:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801e5f0:	fb01 2404 	mla	r4, r1, r4, r2
 801e5f4:	6802      	ldr	r2, [r0, #0]
 801e5f6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e5fa:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e5fe:	3201      	adds	r2, #1
 801e600:	f022 0201 	bic.w	r2, r2, #1
 801e604:	9200      	str	r2, [sp, #0]
 801e606:	f8d9 2000 	ldr.w	r2, [r9]
 801e60a:	9201      	str	r2, [sp, #4]
 801e60c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e610:	f1bb 0f00 	cmp.w	fp, #0
 801e614:	dc03      	bgt.n	801e61e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e616:	9a03      	ldr	r2, [sp, #12]
 801e618:	2a00      	cmp	r2, #0
 801e61a:	f340 8169 	ble.w	801e8f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e61e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e620:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801e624:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801e628:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e62c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e62e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e632:	2b00      	cmp	r3, #0
 801e634:	dd0e      	ble.n	801e654 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e636:	1402      	asrs	r2, r0, #16
 801e638:	d405      	bmi.n	801e646 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e63a:	42ba      	cmp	r2, r7
 801e63c:	da03      	bge.n	801e646 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e63e:	140a      	asrs	r2, r1, #16
 801e640:	d401      	bmi.n	801e646 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e642:	42b2      	cmp	r2, r6
 801e644:	db07      	blt.n	801e656 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e646:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e648:	4410      	add	r0, r2
 801e64a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e64c:	3b01      	subs	r3, #1
 801e64e:	4411      	add	r1, r2
 801e650:	3402      	adds	r4, #2
 801e652:	e7ee      	b.n	801e632 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801e654:	d017      	beq.n	801e686 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801e656:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e658:	1e5a      	subs	r2, r3, #1
 801e65a:	fb05 0502 	mla	r5, r5, r2, r0
 801e65e:	142d      	asrs	r5, r5, #16
 801e660:	d409      	bmi.n	801e676 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e662:	42bd      	cmp	r5, r7
 801e664:	da07      	bge.n	801e676 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e666:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e668:	fb05 1202 	mla	r2, r5, r2, r1
 801e66c:	1412      	asrs	r2, r2, #16
 801e66e:	d402      	bmi.n	801e676 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e670:	42b2      	cmp	r2, r6
 801e672:	f2c0 80c7 	blt.w	801e804 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801e676:	2700      	movs	r7, #0
 801e678:	19da      	adds	r2, r3, r7
 801e67a:	2a00      	cmp	r2, #0
 801e67c:	dc3e      	bgt.n	801e6fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801e67e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e682:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e686:	f1bb 0f00 	cmp.w	fp, #0
 801e68a:	f340 8131 	ble.w	801e8f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e68e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e692:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e696:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e69a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e69c:	f1bb 0b01 	subs.w	fp, fp, #1
 801e6a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e6a4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e6a8:	eeb0 6a62 	vmov.f32	s12, s5
 801e6ac:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e6b0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e6b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e6b8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e6bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e6c0:	eeb0 6a43 	vmov.f32	s12, s6
 801e6c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e6c8:	ee12 2a90 	vmov	r2, s5
 801e6cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e6d0:	fb92 f3f3 	sdiv	r3, r2, r3
 801e6d4:	ee13 2a10 	vmov	r2, s6
 801e6d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e6dc:	9313      	str	r3, [sp, #76]	; 0x4c
 801e6de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e6e0:	fb92 f3f3 	sdiv	r3, r2, r3
 801e6e4:	9a03      	ldr	r2, [sp, #12]
 801e6e6:	9314      	str	r3, [sp, #80]	; 0x50
 801e6e8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e6ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e6ee:	eeb0 3a67 	vmov.f32	s6, s15
 801e6f2:	bf08      	it	eq
 801e6f4:	4613      	moveq	r3, r2
 801e6f6:	eef0 2a47 	vmov.f32	s5, s14
 801e6fa:	e789      	b.n	801e610 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e6fc:	1405      	asrs	r5, r0, #16
 801e6fe:	d435      	bmi.n	801e76c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e700:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e704:	42aa      	cmp	r2, r5
 801e706:	dd31      	ble.n	801e76c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e708:	140e      	asrs	r6, r1, #16
 801e70a:	d42f      	bmi.n	801e76c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e70c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e710:	42b2      	cmp	r2, r6
 801e712:	dd2b      	ble.n	801e76c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e714:	9a00      	ldr	r2, [sp, #0]
 801e716:	fb06 5502 	mla	r5, r6, r2, r5
 801e71a:	086a      	lsrs	r2, r5, #1
 801e71c:	9e01      	ldr	r6, [sp, #4]
 801e71e:	5cb2      	ldrb	r2, [r6, r2]
 801e720:	07ee      	lsls	r6, r5, #31
 801e722:	bf54      	ite	pl
 801e724:	f002 020f 	andpl.w	r2, r2, #15
 801e728:	1112      	asrmi	r2, r2, #4
 801e72a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e72e:	b2d2      	uxtb	r2, r2
 801e730:	b1e2      	cbz	r2, 801e76c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e732:	9d04      	ldr	r5, [sp, #16]
 801e734:	436a      	muls	r2, r5
 801e736:	1c55      	adds	r5, r2, #1
 801e738:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801e73c:	4d6e      	ldr	r5, [pc, #440]	; (801e8f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801e73e:	682d      	ldr	r5, [r5, #0]
 801e740:	1212      	asrs	r2, r2, #8
 801e742:	0a2e      	lsrs	r6, r5, #8
 801e744:	2aff      	cmp	r2, #255	; 0xff
 801e746:	9605      	str	r6, [sp, #20]
 801e748:	d116      	bne.n	801e778 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801e74a:	f06f 0201 	mvn.w	r2, #1
 801e74e:	fb02 fc07 	mul.w	ip, r2, r7
 801e752:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e756:	096a      	lsrs	r2, r5, #5
 801e758:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e75c:	f026 0607 	bic.w	r6, r6, #7
 801e760:	4316      	orrs	r6, r2
 801e762:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e766:	432e      	orrs	r6, r5
 801e768:	f824 600c 	strh.w	r6, [r4, ip]
 801e76c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e76e:	4410      	add	r0, r2
 801e770:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e772:	3f01      	subs	r7, #1
 801e774:	4411      	add	r1, r2
 801e776:	e77f      	b.n	801e678 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801e778:	f06f 0601 	mvn.w	r6, #1
 801e77c:	437e      	muls	r6, r7
 801e77e:	fa1f fa82 	uxth.w	sl, r2
 801e782:	f834 8006 	ldrh.w	r8, [r4, r6]
 801e786:	9602      	str	r6, [sp, #8]
 801e788:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e78c:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801e790:	43d2      	mvns	r2, r2
 801e792:	b2d2      	uxtb	r2, r2
 801e794:	fb1c fc0a 	smulbb	ip, ip, sl
 801e798:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e79c:	fb0e ce02 	mla	lr, lr, r2, ip
 801e7a0:	b2ed      	uxtb	r5, r5
 801e7a2:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e7a6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e7aa:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e7ae:	fa5f f888 	uxtb.w	r8, r8
 801e7b2:	fb15 f50a 	smulbb	r5, r5, sl
 801e7b6:	fb08 5502 	mla	r5, r8, r2, r5
 801e7ba:	fa1f fe8e 	uxth.w	lr, lr
 801e7be:	fb16 f60a 	smulbb	r6, r6, sl
 801e7c2:	b2ad      	uxth	r5, r5
 801e7c4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e7c8:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e7cc:	f10e 0201 	add.w	r2, lr, #1
 801e7d0:	1c6e      	adds	r6, r5, #1
 801e7d2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e7d6:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801e7da:	fa1f fc8c 	uxth.w	ip, ip
 801e7de:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e7e2:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e7e6:	ea46 0e0e 	orr.w	lr, r6, lr
 801e7ea:	f10c 0601 	add.w	r6, ip, #1
 801e7ee:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e7f2:	0976      	lsrs	r6, r6, #5
 801e7f4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e7f8:	9a02      	ldr	r2, [sp, #8]
 801e7fa:	ea4e 0e06 	orr.w	lr, lr, r6
 801e7fe:	f824 e002 	strh.w	lr, [r4, r2]
 801e802:	e7b3      	b.n	801e76c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e804:	f04f 0800 	mov.w	r8, #0
 801e808:	eba3 0208 	sub.w	r2, r3, r8
 801e80c:	2a00      	cmp	r2, #0
 801e80e:	f77f af36 	ble.w	801e67e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801e812:	9e00      	ldr	r6, [sp, #0]
 801e814:	1402      	asrs	r2, r0, #16
 801e816:	140d      	asrs	r5, r1, #16
 801e818:	fb06 2505 	mla	r5, r6, r5, r2
 801e81c:	086a      	lsrs	r2, r5, #1
 801e81e:	9e01      	ldr	r6, [sp, #4]
 801e820:	5cb2      	ldrb	r2, [r6, r2]
 801e822:	07ed      	lsls	r5, r5, #31
 801e824:	bf54      	ite	pl
 801e826:	f002 020f 	andpl.w	r2, r2, #15
 801e82a:	1112      	asrmi	r2, r2, #4
 801e82c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e830:	b2d2      	uxtb	r2, r2
 801e832:	b1c2      	cbz	r2, 801e866 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801e834:	9d04      	ldr	r5, [sp, #16]
 801e836:	436a      	muls	r2, r5
 801e838:	1c55      	adds	r5, r2, #1
 801e83a:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801e83e:	4d2e      	ldr	r5, [pc, #184]	; (801e8f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801e840:	1212      	asrs	r2, r2, #8
 801e842:	682e      	ldr	r6, [r5, #0]
 801e844:	2aff      	cmp	r2, #255	; 0xff
 801e846:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801e84a:	d113      	bne.n	801e874 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801e84c:	0972      	lsrs	r2, r6, #5
 801e84e:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801e852:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e856:	f025 0507 	bic.w	r5, r5, #7
 801e85a:	4315      	orrs	r5, r2
 801e85c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801e860:	4335      	orrs	r5, r6
 801e862:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801e866:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e868:	4410      	add	r0, r2
 801e86a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e86c:	f108 0801 	add.w	r8, r8, #1
 801e870:	4411      	add	r1, r2
 801e872:	e7c9      	b.n	801e808 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e874:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801e878:	fa1f fa82 	uxth.w	sl, r2
 801e87c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e880:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801e884:	43d2      	mvns	r2, r2
 801e886:	b2d2      	uxtb	r2, r2
 801e888:	fb17 f70a 	smulbb	r7, r7, sl
 801e88c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e890:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e894:	b2f6      	uxtb	r6, r6
 801e896:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e89a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e89e:	fa5f fe8e 	uxtb.w	lr, lr
 801e8a2:	fb16 f60a 	smulbb	r6, r6, sl
 801e8a6:	fb0e 6602 	mla	r6, lr, r2, r6
 801e8aa:	b2ed      	uxtb	r5, r5
 801e8ac:	fa1f fc8c 	uxth.w	ip, ip
 801e8b0:	fb15 f50a 	smulbb	r5, r5, sl
 801e8b4:	b2b6      	uxth	r6, r6
 801e8b6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e8ba:	fb07 5702 	mla	r7, r7, r2, r5
 801e8be:	f10c 0201 	add.w	r2, ip, #1
 801e8c2:	1c75      	adds	r5, r6, #1
 801e8c4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e8c8:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801e8cc:	b2bf      	uxth	r7, r7
 801e8ce:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e8d2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e8d6:	ea45 0c0c 	orr.w	ip, r5, ip
 801e8da:	1c7d      	adds	r5, r7, #1
 801e8dc:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801e8e0:	096d      	lsrs	r5, r5, #5
 801e8e2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e8e6:	ea4c 0c05 	orr.w	ip, ip, r5
 801e8ea:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801e8ee:	e7ba      	b.n	801e866 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801e8f0:	b007      	add	sp, #28
 801e8f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e8f6:	bf00      	nop
 801e8f8:	20002338 	.word	0x20002338

0801e8fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e8fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e900:	b087      	sub	sp, #28
 801e902:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801ec10 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801e906:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e908:	9205      	str	r2, [sp, #20]
 801e90a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801e90e:	9101      	str	r1, [sp, #4]
 801e910:	6841      	ldr	r1, [r0, #4]
 801e912:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801e916:	fb01 2404 	mla	r4, r1, r4, r2
 801e91a:	6802      	ldr	r2, [r0, #0]
 801e91c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e920:	f8db 2008 	ldr.w	r2, [fp, #8]
 801e924:	3201      	adds	r2, #1
 801e926:	f022 0201 	bic.w	r2, r2, #1
 801e92a:	9202      	str	r2, [sp, #8]
 801e92c:	f8db 2000 	ldr.w	r2, [fp]
 801e930:	9203      	str	r2, [sp, #12]
 801e932:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e936:	9a01      	ldr	r2, [sp, #4]
 801e938:	2a00      	cmp	r2, #0
 801e93a:	dc03      	bgt.n	801e944 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e93c:	9a05      	ldr	r2, [sp, #20]
 801e93e:	2a00      	cmp	r2, #0
 801e940:	f340 8162 	ble.w	801ec08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e944:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e946:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801e94a:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801e94e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e952:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e954:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e958:	2b00      	cmp	r3, #0
 801e95a:	dd0e      	ble.n	801e97a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801e95c:	1402      	asrs	r2, r0, #16
 801e95e:	d405      	bmi.n	801e96c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e960:	42ba      	cmp	r2, r7
 801e962:	da03      	bge.n	801e96c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e964:	140a      	asrs	r2, r1, #16
 801e966:	d401      	bmi.n	801e96c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e968:	42b2      	cmp	r2, r6
 801e96a:	db07      	blt.n	801e97c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e96c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e96e:	4410      	add	r0, r2
 801e970:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e972:	3b01      	subs	r3, #1
 801e974:	4411      	add	r1, r2
 801e976:	3402      	adds	r4, #2
 801e978:	e7ee      	b.n	801e958 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801e97a:	d017      	beq.n	801e9ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801e97c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e97e:	1e5a      	subs	r2, r3, #1
 801e980:	fb05 0502 	mla	r5, r5, r2, r0
 801e984:	142d      	asrs	r5, r5, #16
 801e986:	d409      	bmi.n	801e99c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e988:	42bd      	cmp	r5, r7
 801e98a:	da07      	bge.n	801e99c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e98c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e98e:	fb05 1202 	mla	r2, r5, r2, r1
 801e992:	1412      	asrs	r2, r2, #16
 801e994:	d402      	bmi.n	801e99c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e996:	42b2      	cmp	r2, r6
 801e998:	f2c0 80c3 	blt.w	801eb22 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801e99c:	2500      	movs	r5, #0
 801e99e:	195a      	adds	r2, r3, r5
 801e9a0:	2a00      	cmp	r2, #0
 801e9a2:	dc3f      	bgt.n	801ea24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801e9a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e9a8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e9ac:	9b01      	ldr	r3, [sp, #4]
 801e9ae:	2b00      	cmp	r3, #0
 801e9b0:	f340 812a 	ble.w	801ec08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e9b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e9b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e9bc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e9c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e9c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e9c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e9ca:	eeb0 6a62 	vmov.f32	s12, s5
 801e9ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e9d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e9d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e9da:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e9de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e9e2:	eeb0 6a43 	vmov.f32	s12, s6
 801e9e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e9ea:	ee12 2a90 	vmov	r2, s5
 801e9ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e9f2:	fb92 f3f3 	sdiv	r3, r2, r3
 801e9f6:	ee13 2a10 	vmov	r2, s6
 801e9fa:	9313      	str	r3, [sp, #76]	; 0x4c
 801e9fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e9fe:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea02:	9314      	str	r3, [sp, #80]	; 0x50
 801ea04:	9b01      	ldr	r3, [sp, #4]
 801ea06:	9a05      	ldr	r2, [sp, #20]
 801ea08:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ea0c:	3b01      	subs	r3, #1
 801ea0e:	9301      	str	r3, [sp, #4]
 801ea10:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ea14:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ea16:	eeb0 3a67 	vmov.f32	s6, s15
 801ea1a:	bf08      	it	eq
 801ea1c:	4613      	moveq	r3, r2
 801ea1e:	eef0 2a47 	vmov.f32	s5, s14
 801ea22:	e788      	b.n	801e936 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ea24:	1406      	asrs	r6, r0, #16
 801ea26:	d42c      	bmi.n	801ea82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ea28:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ea2c:	42b2      	cmp	r2, r6
 801ea2e:	dd28      	ble.n	801ea82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ea30:	140f      	asrs	r7, r1, #16
 801ea32:	d426      	bmi.n	801ea82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ea34:	f8db 200c 	ldr.w	r2, [fp, #12]
 801ea38:	42ba      	cmp	r2, r7
 801ea3a:	dd22      	ble.n	801ea82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ea3c:	9a02      	ldr	r2, [sp, #8]
 801ea3e:	fb07 6602 	mla	r6, r7, r2, r6
 801ea42:	0872      	lsrs	r2, r6, #1
 801ea44:	9f03      	ldr	r7, [sp, #12]
 801ea46:	5cba      	ldrb	r2, [r7, r2]
 801ea48:	07f6      	lsls	r6, r6, #31
 801ea4a:	bf54      	ite	pl
 801ea4c:	f002 020f 	andpl.w	r2, r2, #15
 801ea50:	1112      	asrmi	r2, r2, #4
 801ea52:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ea56:	b2d2      	uxtb	r2, r2
 801ea58:	2aff      	cmp	r2, #255	; 0xff
 801ea5a:	d118      	bne.n	801ea8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801ea5c:	f8d8 2000 	ldr.w	r2, [r8]
 801ea60:	f06f 0601 	mvn.w	r6, #1
 801ea64:	fb06 f705 	mul.w	r7, r6, r5
 801ea68:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801ea6c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801ea70:	0956      	lsrs	r6, r2, #5
 801ea72:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ea76:	ea4c 0606 	orr.w	r6, ip, r6
 801ea7a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ea7e:	4316      	orrs	r6, r2
 801ea80:	53e6      	strh	r6, [r4, r7]
 801ea82:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ea84:	4410      	add	r0, r2
 801ea86:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ea88:	3d01      	subs	r5, #1
 801ea8a:	4411      	add	r1, r2
 801ea8c:	e787      	b.n	801e99e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ea8e:	2a00      	cmp	r2, #0
 801ea90:	d0f7      	beq.n	801ea82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ea92:	f06f 0601 	mvn.w	r6, #1
 801ea96:	436e      	muls	r6, r5
 801ea98:	f8d8 c000 	ldr.w	ip, [r8]
 801ea9c:	f834 e006 	ldrh.w	lr, [r4, r6]
 801eaa0:	9604      	str	r6, [sp, #16]
 801eaa2:	fa1f f982 	uxth.w	r9, r2
 801eaa6:	ea4f 272e 	mov.w	r7, lr, asr #8
 801eaaa:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801eaae:	43d2      	mvns	r2, r2
 801eab0:	b2d2      	uxtb	r2, r2
 801eab2:	fb16 f609 	smulbb	r6, r6, r9
 801eab6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801eaba:	fb07 6702 	mla	r7, r7, r2, r6
 801eabe:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801eac2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801eac6:	fa5f fc8c 	uxtb.w	ip, ip
 801eaca:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801eace:	fa5f fe8e 	uxtb.w	lr, lr
 801ead2:	fb1c fc09 	smulbb	ip, ip, r9
 801ead6:	fb0e cc02 	mla	ip, lr, r2, ip
 801eada:	b2bf      	uxth	r7, r7
 801eadc:	fb1a fa09 	smulbb	sl, sl, r9
 801eae0:	fa1f fc8c 	uxth.w	ip, ip
 801eae4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801eae8:	fb06 a602 	mla	r6, r6, r2, sl
 801eaec:	1c7a      	adds	r2, r7, #1
 801eaee:	f10c 0a01 	add.w	sl, ip, #1
 801eaf2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801eaf6:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801eafa:	b2b6      	uxth	r6, r6
 801eafc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801eb00:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801eb04:	ea4a 0707 	orr.w	r7, sl, r7
 801eb08:	f106 0a01 	add.w	sl, r6, #1
 801eb0c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801eb10:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801eb14:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801eb18:	9a04      	ldr	r2, [sp, #16]
 801eb1a:	ea47 070a 	orr.w	r7, r7, sl
 801eb1e:	52a7      	strh	r7, [r4, r2]
 801eb20:	e7af      	b.n	801ea82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801eb22:	f04f 0e00 	mov.w	lr, #0
 801eb26:	eba3 020e 	sub.w	r2, r3, lr
 801eb2a:	2a00      	cmp	r2, #0
 801eb2c:	f77f af3a 	ble.w	801e9a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801eb30:	9e02      	ldr	r6, [sp, #8]
 801eb32:	1402      	asrs	r2, r0, #16
 801eb34:	140d      	asrs	r5, r1, #16
 801eb36:	fb06 2505 	mla	r5, r6, r5, r2
 801eb3a:	086a      	lsrs	r2, r5, #1
 801eb3c:	9e03      	ldr	r6, [sp, #12]
 801eb3e:	5cb2      	ldrb	r2, [r6, r2]
 801eb40:	07ed      	lsls	r5, r5, #31
 801eb42:	bf54      	ite	pl
 801eb44:	f002 020f 	andpl.w	r2, r2, #15
 801eb48:	1112      	asrmi	r2, r2, #4
 801eb4a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801eb4e:	b2d2      	uxtb	r2, r2
 801eb50:	2aff      	cmp	r2, #255	; 0xff
 801eb52:	d115      	bne.n	801eb80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801eb54:	f8d8 5000 	ldr.w	r5, [r8]
 801eb58:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801eb5c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801eb60:	096a      	lsrs	r2, r5, #5
 801eb62:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eb66:	4332      	orrs	r2, r6
 801eb68:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801eb6c:	432a      	orrs	r2, r5
 801eb6e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801eb72:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801eb74:	4410      	add	r0, r2
 801eb76:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801eb78:	f10e 0e01 	add.w	lr, lr, #1
 801eb7c:	4411      	add	r1, r2
 801eb7e:	e7d2      	b.n	801eb26 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801eb80:	2a00      	cmp	r2, #0
 801eb82:	d0f6      	beq.n	801eb72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801eb84:	f8d8 7000 	ldr.w	r7, [r8]
 801eb88:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801eb8c:	fa1f f982 	uxth.w	r9, r2
 801eb90:	ea4f 262c 	mov.w	r6, ip, asr #8
 801eb94:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801eb98:	43d2      	mvns	r2, r2
 801eb9a:	b2d2      	uxtb	r2, r2
 801eb9c:	fb15 f509 	smulbb	r5, r5, r9
 801eba0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801eba4:	fb06 5602 	mla	r6, r6, r2, r5
 801eba8:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801ebac:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801ebb0:	b2ff      	uxtb	r7, r7
 801ebb2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ebb6:	fa5f fc8c 	uxtb.w	ip, ip
 801ebba:	fb17 f709 	smulbb	r7, r7, r9
 801ebbe:	fb0c 7702 	mla	r7, ip, r2, r7
 801ebc2:	b2b6      	uxth	r6, r6
 801ebc4:	fb1a fa09 	smulbb	sl, sl, r9
 801ebc8:	b2bf      	uxth	r7, r7
 801ebca:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ebce:	fb05 a502 	mla	r5, r5, r2, sl
 801ebd2:	1c72      	adds	r2, r6, #1
 801ebd4:	f107 0a01 	add.w	sl, r7, #1
 801ebd8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801ebdc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ebe0:	b2ad      	uxth	r5, r5
 801ebe2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ebe6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ebea:	ea4a 0606 	orr.w	r6, sl, r6
 801ebee:	f105 0a01 	add.w	sl, r5, #1
 801ebf2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ebf6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ebfa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ebfe:	ea46 060a 	orr.w	r6, r6, sl
 801ec02:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801ec06:	e7b4      	b.n	801eb72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ec08:	b007      	add	sp, #28
 801ec0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ec0e:	bf00      	nop
 801ec10:	20002338 	.word	0x20002338

0801ec14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801ec14:	4770      	bx	lr

0801ec16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801ec16:	4770      	bx	lr

0801ec18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801ec18:	4770      	bx	lr

0801ec1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801ec1a:	4770      	bx	lr

0801ec1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801ec1c:	4770      	bx	lr

0801ec1e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801ec1e:	4770      	bx	lr

0801ec20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801ec20:	4770      	bx	lr

0801ec22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ec22:	4770      	bx	lr

0801ec24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ec24:	4770      	bx	lr

0801ec26 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ec26:	4770      	bx	lr

0801ec28 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ec28:	4770      	bx	lr

0801ec2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ec2a:	4770      	bx	lr

0801ec2c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ec2c:	4770      	bx	lr

0801ec2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ec2e:	4770      	bx	lr

0801ec30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ec30:	4770      	bx	lr

0801ec32 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ec32:	4770      	bx	lr

0801ec34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ec34:	4770      	bx	lr

0801ec36 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ec36:	4770      	bx	lr

0801ec38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ec38:	4770      	bx	lr

0801ec3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ec3a:	4770      	bx	lr

0801ec3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ec3c:	4770      	bx	lr

0801ec3e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ec3e:	4770      	bx	lr

0801ec40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ec40:	4770      	bx	lr

0801ec42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ec42:	4770      	bx	lr

0801ec44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801ec44:	4770      	bx	lr

0801ec46 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ec46:	4770      	bx	lr

0801ec48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801ec48:	4770      	bx	lr

0801ec4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ec4a:	4770      	bx	lr

0801ec4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ec4c:	4770      	bx	lr

0801ec4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ec4e:	4770      	bx	lr

0801ec50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ec50:	4770      	bx	lr

0801ec52 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801ec52:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ec56:	b088      	sub	sp, #32
 801ec58:	ac08      	add	r4, sp, #32
 801ec5a:	4606      	mov	r6, r0
 801ec5c:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801ec60:	4620      	mov	r0, r4
 801ec62:	4688      	mov	r8, r1
 801ec64:	4691      	mov	r9, r2
 801ec66:	f7fd fc63 	bl	801c530 <_ZNK8touchgfx6Bitmap7getDataEv>
 801ec6a:	6833      	ldr	r3, [r6, #0]
 801ec6c:	4605      	mov	r5, r0
 801ec6e:	4620      	mov	r0, r4
 801ec70:	699f      	ldr	r7, [r3, #24]
 801ec72:	f7fd fb71 	bl	801c358 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ec76:	4682      	mov	sl, r0
 801ec78:	4620      	mov	r0, r4
 801ec7a:	f7fd fba1 	bl	801c3c0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801ec7e:	9500      	str	r5, [sp, #0]
 801ec80:	e9cd a001 	strd	sl, r0, [sp, #4]
 801ec84:	464b      	mov	r3, r9
 801ec86:	a806      	add	r0, sp, #24
 801ec88:	4642      	mov	r2, r8
 801ec8a:	4631      	mov	r1, r6
 801ec8c:	47b8      	blx	r7
 801ec8e:	4628      	mov	r0, r5
 801ec90:	b008      	add	sp, #32
 801ec92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0801ec98 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801ec98:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801ec9c:	2300      	movs	r3, #0
 801ec9e:	9300      	str	r3, [sp, #0]
 801eca0:	4b3d      	ldr	r3, [pc, #244]	; (801ed98 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801eca2:	781b      	ldrb	r3, [r3, #0]
 801eca4:	2b00      	cmp	r3, #0
 801eca6:	d137      	bne.n	801ed18 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801eca8:	4a3c      	ldr	r2, [pc, #240]	; (801ed9c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ecaa:	f9b2 2000 	ldrsh.w	r2, [r2]
 801ecae:	f8ad 2004 	strh.w	r2, [sp, #4]
 801ecb2:	2b00      	cmp	r3, #0
 801ecb4:	d132      	bne.n	801ed1c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801ecb6:	4b3a      	ldr	r3, [pc, #232]	; (801eda0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ecb8:	f9b3 3000 	ldrsh.w	r3, [r3]
 801ecbc:	6808      	ldr	r0, [r1, #0]
 801ecbe:	6849      	ldr	r1, [r1, #4]
 801ecc0:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ecc4:	ac02      	add	r4, sp, #8
 801ecc6:	ab02      	add	r3, sp, #8
 801ecc8:	c303      	stmia	r3!, {r0, r1}
 801ecca:	4669      	mov	r1, sp
 801eccc:	4620      	mov	r0, r4
 801ecce:	f7f9 fedb 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ecd2:	4668      	mov	r0, sp
 801ecd4:	f7f9 fe94 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ecd8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801ecdc:	f8bd 2000 	ldrh.w	r2, [sp]
 801ece0:	4d30      	ldr	r5, [pc, #192]	; (801eda4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801ece2:	4413      	add	r3, r2
 801ece4:	f8ad 3008 	strh.w	r3, [sp, #8]
 801ece8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ecec:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801ecf0:	6828      	ldr	r0, [r5, #0]
 801ecf2:	4413      	add	r3, r2
 801ecf4:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ecf8:	6803      	ldr	r3, [r0, #0]
 801ecfa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ecfc:	4798      	blx	r3
 801ecfe:	f010 0f01 	tst.w	r0, #1
 801ed02:	462f      	mov	r7, r5
 801ed04:	d00c      	beq.n	801ed20 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801ed06:	6828      	ldr	r0, [r5, #0]
 801ed08:	6803      	ldr	r3, [r0, #0]
 801ed0a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801ed0e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801ed10:	4798      	blx	r3
 801ed12:	b004      	add	sp, #16
 801ed14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ed18:	4a21      	ldr	r2, [pc, #132]	; (801eda0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ed1a:	e7c6      	b.n	801ecaa <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801ed1c:	4b1f      	ldr	r3, [pc, #124]	; (801ed9c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ed1e:	e7cb      	b.n	801ecb8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801ed20:	6838      	ldr	r0, [r7, #0]
 801ed22:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801ed26:	6803      	ldr	r3, [r0, #0]
 801ed28:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801ed2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ed2e:	4798      	blx	r3
 801ed30:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801ed34:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ed38:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801ed3c:	fb16 3602 	smlabb	r6, r6, r2, r3
 801ed40:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801ed44:	6838      	ldr	r0, [r7, #0]
 801ed46:	6803      	ldr	r3, [r0, #0]
 801ed48:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ed4a:	4798      	blx	r3
 801ed4c:	4a13      	ldr	r2, [pc, #76]	; (801ed9c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ed4e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801ed52:	8813      	ldrh	r3, [r2, #0]
 801ed54:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ed58:	fb03 1404 	mla	r4, r3, r4, r1
 801ed5c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ed60:	435d      	muls	r5, r3
 801ed62:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ed66:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801ed6a:	4691      	mov	r9, r2
 801ed6c:	6838      	ldr	r0, [r7, #0]
 801ed6e:	42ac      	cmp	r4, r5
 801ed70:	6803      	ldr	r3, [r0, #0]
 801ed72:	d20e      	bcs.n	801ed92 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801ed74:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801ed78:	4632      	mov	r2, r6
 801ed7a:	4643      	mov	r3, r8
 801ed7c:	4621      	mov	r1, r4
 801ed7e:	47d0      	blx	sl
 801ed80:	f8b9 3000 	ldrh.w	r3, [r9]
 801ed84:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ed88:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801ed8c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ed90:	e7ec      	b.n	801ed6c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801ed92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ed94:	4798      	blx	r3
 801ed96:	e7bc      	b.n	801ed12 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801ed98:	20002320 	.word	0x20002320
 801ed9c:	20002322 	.word	0x20002322
 801eda0:	20002324 	.word	0x20002324
 801eda4:	20002328 	.word	0x20002328

0801eda8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801eda8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801edac:	b08b      	sub	sp, #44	; 0x2c
 801edae:	460f      	mov	r7, r1
 801edb0:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801edb4:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801edb8:	4616      	mov	r6, r2
 801edba:	f1bb 0f00 	cmp.w	fp, #0
 801edbe:	d04a      	beq.n	801ee56 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801edc0:	6810      	ldr	r0, [r2, #0]
 801edc2:	6851      	ldr	r1, [r2, #4]
 801edc4:	ad06      	add	r5, sp, #24
 801edc6:	c503      	stmia	r5!, {r0, r1}
 801edc8:	6818      	ldr	r0, [r3, #0]
 801edca:	6859      	ldr	r1, [r3, #4]
 801edcc:	ad08      	add	r5, sp, #32
 801edce:	c503      	stmia	r5!, {r0, r1}
 801edd0:	a806      	add	r0, sp, #24
 801edd2:	f7f9 fe15 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801edd6:	4631      	mov	r1, r6
 801edd8:	a808      	add	r0, sp, #32
 801edda:	f7f9 fe55 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801edde:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801ede2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801ede6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801edea:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801edee:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801edf2:	fb16 2103 	smlabb	r1, r6, r3, r2
 801edf6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801edfa:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801edfe:	4f5f      	ldr	r7, [pc, #380]	; (801ef7c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ee00:	440a      	add	r2, r1
 801ee02:	f8ad 2020 	strh.w	r2, [sp, #32]
 801ee06:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801ee0a:	6838      	ldr	r0, [r7, #0]
 801ee0c:	4413      	add	r3, r2
 801ee0e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801ee12:	6803      	ldr	r3, [r0, #0]
 801ee14:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ee16:	4798      	blx	r3
 801ee18:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ee1c:	46b9      	mov	r9, r7
 801ee1e:	d11d      	bne.n	801ee5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801ee20:	b9fc      	cbnz	r4, 801ee62 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ee22:	f010 0f01 	tst.w	r0, #1
 801ee26:	d01c      	beq.n	801ee62 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ee28:	f8d9 0000 	ldr.w	r0, [r9]
 801ee2c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801ee30:	6801      	ldr	r1, [r0, #0]
 801ee32:	f8cd b00c 	str.w	fp, [sp, #12]
 801ee36:	2700      	movs	r7, #0
 801ee38:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801ee3c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801ee40:	9402      	str	r4, [sp, #8]
 801ee42:	b2ad      	uxth	r5, r5
 801ee44:	fa1f f488 	uxth.w	r4, r8
 801ee48:	9501      	str	r5, [sp, #4]
 801ee4a:	9400      	str	r4, [sp, #0]
 801ee4c:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801ee4e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801ee52:	4631      	mov	r1, r6
 801ee54:	47a0      	blx	r4
 801ee56:	b00b      	add	sp, #44	; 0x2c
 801ee58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee5c:	f010 0f04 	tst.w	r0, #4
 801ee60:	e7e1      	b.n	801ee26 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801ee62:	f8d9 0000 	ldr.w	r0, [r9]
 801ee66:	6803      	ldr	r3, [r0, #0]
 801ee68:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ee6a:	4798      	blx	r3
 801ee6c:	4b44      	ldr	r3, [pc, #272]	; (801ef80 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801ee6e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801ee72:	881a      	ldrh	r2, [r3, #0]
 801ee74:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801ee78:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ee7c:	fb02 1404 	mla	r4, r2, r4, r1
 801ee80:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ee84:	469a      	mov	sl, r3
 801ee86:	fb05 f502 	mul.w	r5, r5, r2
 801ee8a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801ee8e:	d059      	beq.n	801ef44 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801ee90:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801ee94:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ee98:	fa1f f28b 	uxth.w	r2, fp
 801ee9c:	fa1f f989 	uxth.w	r9, r9
 801eea0:	469e      	mov	lr, r3
 801eea2:	42ac      	cmp	r4, r5
 801eea4:	d264      	bcs.n	801ef70 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801eea6:	eb04 0a07 	add.w	sl, r4, r7
 801eeaa:	4554      	cmp	r4, sl
 801eeac:	d23d      	bcs.n	801ef2a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801eeae:	8821      	ldrh	r1, [r4, #0]
 801eeb0:	f836 3b02 	ldrh.w	r3, [r6], #2
 801eeb4:	1208      	asrs	r0, r1, #8
 801eeb6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801eeba:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801eebe:	fb10 f009 	smulbb	r0, r0, r9
 801eec2:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801eec6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801eeca:	00c9      	lsls	r1, r1, #3
 801eecc:	fb0c 0c02 	mla	ip, ip, r2, r0
 801eed0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801eed4:	10d8      	asrs	r0, r3, #3
 801eed6:	b2c9      	uxtb	r1, r1
 801eed8:	00db      	lsls	r3, r3, #3
 801eeda:	fa1f fc8c 	uxth.w	ip, ip
 801eede:	fb1b fb09 	smulbb	fp, fp, r9
 801eee2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801eee6:	b2db      	uxtb	r3, r3
 801eee8:	fb11 f109 	smulbb	r1, r1, r9
 801eeec:	fb00 b002 	mla	r0, r0, r2, fp
 801eef0:	fb03 1302 	mla	r3, r3, r2, r1
 801eef4:	f10c 0b01 	add.w	fp, ip, #1
 801eef8:	b29b      	uxth	r3, r3
 801eefa:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801eefe:	b280      	uxth	r0, r0
 801ef00:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801ef04:	f103 0c01 	add.w	ip, r3, #1
 801ef08:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ef0c:	1c43      	adds	r3, r0, #1
 801ef0e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ef12:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ef16:	0940      	lsrs	r0, r0, #5
 801ef18:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ef1c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ef20:	ea4c 0c00 	orr.w	ip, ip, r0
 801ef24:	f824 cb02 	strh.w	ip, [r4], #2
 801ef28:	e7bf      	b.n	801eeaa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801ef2a:	f8be 3000 	ldrh.w	r3, [lr]
 801ef2e:	eba3 0308 	sub.w	r3, r3, r8
 801ef32:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ef36:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ef3a:	eba3 0308 	sub.w	r3, r3, r8
 801ef3e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ef42:	e7ae      	b.n	801eea2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801ef44:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ef48:	f8d9 0000 	ldr.w	r0, [r9]
 801ef4c:	42ac      	cmp	r4, r5
 801ef4e:	6803      	ldr	r3, [r0, #0]
 801ef50:	d20e      	bcs.n	801ef70 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ef52:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801ef56:	4632      	mov	r2, r6
 801ef58:	463b      	mov	r3, r7
 801ef5a:	4621      	mov	r1, r4
 801ef5c:	47c0      	blx	r8
 801ef5e:	f8ba 3000 	ldrh.w	r3, [sl]
 801ef62:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ef66:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ef6a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ef6e:	e7eb      	b.n	801ef48 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801ef70:	4b02      	ldr	r3, [pc, #8]	; (801ef7c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ef72:	6818      	ldr	r0, [r3, #0]
 801ef74:	6803      	ldr	r3, [r0, #0]
 801ef76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ef78:	4798      	blx	r3
 801ef7a:	e76c      	b.n	801ee56 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ef7c:	20002328 	.word	0x20002328
 801ef80:	20002322 	.word	0x20002322

0801ef84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801ef84:	b510      	push	{r4, lr}
 801ef86:	2104      	movs	r1, #4
 801ef88:	4604      	mov	r4, r0
 801ef8a:	f00b f940 	bl	802a20e <_ZdlPvj>
 801ef8e:	4620      	mov	r0, r4
 801ef90:	bd10      	pop	{r4, pc}

0801ef92 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801ef92:	b510      	push	{r4, lr}
 801ef94:	2104      	movs	r1, #4
 801ef96:	4604      	mov	r4, r0
 801ef98:	f00b f939 	bl	802a20e <_ZdlPvj>
 801ef9c:	4620      	mov	r0, r4
 801ef9e:	bd10      	pop	{r4, pc}

0801efa0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801efa0:	b510      	push	{r4, lr}
 801efa2:	f640 0144 	movw	r1, #2116	; 0x844
 801efa6:	4604      	mov	r4, r0
 801efa8:	f00b f931 	bl	802a20e <_ZdlPvj>
 801efac:	4620      	mov	r0, r4
 801efae:	bd10      	pop	{r4, pc}

0801efb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801efb0:	b510      	push	{r4, lr}
 801efb2:	2104      	movs	r1, #4
 801efb4:	4604      	mov	r4, r0
 801efb6:	f00b f92a 	bl	802a20e <_ZdlPvj>
 801efba:	4620      	mov	r0, r4
 801efbc:	bd10      	pop	{r4, pc}

0801efbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801efbe:	b510      	push	{r4, lr}
 801efc0:	2104      	movs	r1, #4
 801efc2:	4604      	mov	r4, r0
 801efc4:	f00b f923 	bl	802a20e <_ZdlPvj>
 801efc8:	4620      	mov	r0, r4
 801efca:	bd10      	pop	{r4, pc}

0801efcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801efcc:	b510      	push	{r4, lr}
 801efce:	2104      	movs	r1, #4
 801efd0:	4604      	mov	r4, r0
 801efd2:	f00b f91c 	bl	802a20e <_ZdlPvj>
 801efd6:	4620      	mov	r0, r4
 801efd8:	bd10      	pop	{r4, pc}

0801efda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801efda:	b510      	push	{r4, lr}
 801efdc:	2104      	movs	r1, #4
 801efde:	4604      	mov	r4, r0
 801efe0:	f00b f915 	bl	802a20e <_ZdlPvj>
 801efe4:	4620      	mov	r0, r4
 801efe6:	bd10      	pop	{r4, pc}

0801efe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801efe8:	b510      	push	{r4, lr}
 801efea:	2104      	movs	r1, #4
 801efec:	4604      	mov	r4, r0
 801efee:	f00b f90e 	bl	802a20e <_ZdlPvj>
 801eff2:	4620      	mov	r0, r4
 801eff4:	bd10      	pop	{r4, pc}

0801eff6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801eff6:	b510      	push	{r4, lr}
 801eff8:	2104      	movs	r1, #4
 801effa:	4604      	mov	r4, r0
 801effc:	f00b f907 	bl	802a20e <_ZdlPvj>
 801f000:	4620      	mov	r0, r4
 801f002:	bd10      	pop	{r4, pc}

0801f004 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f004:	b510      	push	{r4, lr}
 801f006:	2104      	movs	r1, #4
 801f008:	4604      	mov	r4, r0
 801f00a:	f00b f900 	bl	802a20e <_ZdlPvj>
 801f00e:	4620      	mov	r0, r4
 801f010:	bd10      	pop	{r4, pc}

0801f012 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801f012:	b510      	push	{r4, lr}
 801f014:	2104      	movs	r1, #4
 801f016:	4604      	mov	r4, r0
 801f018:	f00b f8f9 	bl	802a20e <_ZdlPvj>
 801f01c:	4620      	mov	r0, r4
 801f01e:	bd10      	pop	{r4, pc}

0801f020 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f020:	b510      	push	{r4, lr}
 801f022:	2104      	movs	r1, #4
 801f024:	4604      	mov	r4, r0
 801f026:	f00b f8f2 	bl	802a20e <_ZdlPvj>
 801f02a:	4620      	mov	r0, r4
 801f02c:	bd10      	pop	{r4, pc}

0801f02e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f02e:	b510      	push	{r4, lr}
 801f030:	2104      	movs	r1, #4
 801f032:	4604      	mov	r4, r0
 801f034:	f00b f8eb 	bl	802a20e <_ZdlPvj>
 801f038:	4620      	mov	r0, r4
 801f03a:	bd10      	pop	{r4, pc}

0801f03c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f03c:	b510      	push	{r4, lr}
 801f03e:	2104      	movs	r1, #4
 801f040:	4604      	mov	r4, r0
 801f042:	f00b f8e4 	bl	802a20e <_ZdlPvj>
 801f046:	4620      	mov	r0, r4
 801f048:	bd10      	pop	{r4, pc}

0801f04a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f04a:	b510      	push	{r4, lr}
 801f04c:	2104      	movs	r1, #4
 801f04e:	4604      	mov	r4, r0
 801f050:	f00b f8dd 	bl	802a20e <_ZdlPvj>
 801f054:	4620      	mov	r0, r4
 801f056:	bd10      	pop	{r4, pc}

0801f058 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f058:	b510      	push	{r4, lr}
 801f05a:	2104      	movs	r1, #4
 801f05c:	4604      	mov	r4, r0
 801f05e:	f00b f8d6 	bl	802a20e <_ZdlPvj>
 801f062:	4620      	mov	r0, r4
 801f064:	bd10      	pop	{r4, pc}

0801f066 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801f066:	b510      	push	{r4, lr}
 801f068:	2104      	movs	r1, #4
 801f06a:	4604      	mov	r4, r0
 801f06c:	f00b f8cf 	bl	802a20e <_ZdlPvj>
 801f070:	4620      	mov	r0, r4
 801f072:	bd10      	pop	{r4, pc}

0801f074 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f074:	b510      	push	{r4, lr}
 801f076:	2104      	movs	r1, #4
 801f078:	4604      	mov	r4, r0
 801f07a:	f00b f8c8 	bl	802a20e <_ZdlPvj>
 801f07e:	4620      	mov	r0, r4
 801f080:	bd10      	pop	{r4, pc}

0801f082 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f082:	b510      	push	{r4, lr}
 801f084:	2104      	movs	r1, #4
 801f086:	4604      	mov	r4, r0
 801f088:	f00b f8c1 	bl	802a20e <_ZdlPvj>
 801f08c:	4620      	mov	r0, r4
 801f08e:	bd10      	pop	{r4, pc}

0801f090 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f090:	b510      	push	{r4, lr}
 801f092:	2104      	movs	r1, #4
 801f094:	4604      	mov	r4, r0
 801f096:	f00b f8ba 	bl	802a20e <_ZdlPvj>
 801f09a:	4620      	mov	r0, r4
 801f09c:	bd10      	pop	{r4, pc}

0801f09e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801f09e:	b510      	push	{r4, lr}
 801f0a0:	2104      	movs	r1, #4
 801f0a2:	4604      	mov	r4, r0
 801f0a4:	f00b f8b3 	bl	802a20e <_ZdlPvj>
 801f0a8:	4620      	mov	r0, r4
 801f0aa:	bd10      	pop	{r4, pc}

0801f0ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f0ac:	b510      	push	{r4, lr}
 801f0ae:	2104      	movs	r1, #4
 801f0b0:	4604      	mov	r4, r0
 801f0b2:	f00b f8ac 	bl	802a20e <_ZdlPvj>
 801f0b6:	4620      	mov	r0, r4
 801f0b8:	bd10      	pop	{r4, pc}

0801f0ba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f0ba:	b510      	push	{r4, lr}
 801f0bc:	2104      	movs	r1, #4
 801f0be:	4604      	mov	r4, r0
 801f0c0:	f00b f8a5 	bl	802a20e <_ZdlPvj>
 801f0c4:	4620      	mov	r0, r4
 801f0c6:	bd10      	pop	{r4, pc}

0801f0c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f0c8:	b510      	push	{r4, lr}
 801f0ca:	2104      	movs	r1, #4
 801f0cc:	4604      	mov	r4, r0
 801f0ce:	f00b f89e 	bl	802a20e <_ZdlPvj>
 801f0d2:	4620      	mov	r0, r4
 801f0d4:	bd10      	pop	{r4, pc}

0801f0d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f0d6:	b510      	push	{r4, lr}
 801f0d8:	2104      	movs	r1, #4
 801f0da:	4604      	mov	r4, r0
 801f0dc:	f00b f897 	bl	802a20e <_ZdlPvj>
 801f0e0:	4620      	mov	r0, r4
 801f0e2:	bd10      	pop	{r4, pc}

0801f0e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f0e4:	b510      	push	{r4, lr}
 801f0e6:	2104      	movs	r1, #4
 801f0e8:	4604      	mov	r4, r0
 801f0ea:	f00b f890 	bl	802a20e <_ZdlPvj>
 801f0ee:	4620      	mov	r0, r4
 801f0f0:	bd10      	pop	{r4, pc}

0801f0f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f0f2:	b510      	push	{r4, lr}
 801f0f4:	2104      	movs	r1, #4
 801f0f6:	4604      	mov	r4, r0
 801f0f8:	f00b f889 	bl	802a20e <_ZdlPvj>
 801f0fc:	4620      	mov	r0, r4
 801f0fe:	bd10      	pop	{r4, pc}

0801f100 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801f100:	b510      	push	{r4, lr}
 801f102:	2104      	movs	r1, #4
 801f104:	4604      	mov	r4, r0
 801f106:	f00b f882 	bl	802a20e <_ZdlPvj>
 801f10a:	4620      	mov	r0, r4
 801f10c:	bd10      	pop	{r4, pc}

0801f10e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801f10e:	b510      	push	{r4, lr}
 801f110:	2104      	movs	r1, #4
 801f112:	4604      	mov	r4, r0
 801f114:	f00b f87b 	bl	802a20e <_ZdlPvj>
 801f118:	4620      	mov	r0, r4
 801f11a:	bd10      	pop	{r4, pc}

0801f11c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801f11c:	b510      	push	{r4, lr}
 801f11e:	2104      	movs	r1, #4
 801f120:	4604      	mov	r4, r0
 801f122:	f00b f874 	bl	802a20e <_ZdlPvj>
 801f126:	4620      	mov	r0, r4
 801f128:	bd10      	pop	{r4, pc}

0801f12a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801f12a:	b510      	push	{r4, lr}
 801f12c:	2104      	movs	r1, #4
 801f12e:	4604      	mov	r4, r0
 801f130:	f00b f86d 	bl	802a20e <_ZdlPvj>
 801f134:	4620      	mov	r0, r4
 801f136:	bd10      	pop	{r4, pc}

0801f138 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f138:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f13c:	b08f      	sub	sp, #60	; 0x3c
 801f13e:	461c      	mov	r4, r3
 801f140:	9205      	str	r2, [sp, #20]
 801f142:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f146:	9100      	str	r1, [sp, #0]
 801f148:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f14a:	9201      	str	r2, [sp, #4]
 801f14c:	2a00      	cmp	r2, #0
 801f14e:	f000 8115 	beq.w	801f37c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801f152:	6820      	ldr	r0, [r4, #0]
 801f154:	6861      	ldr	r1, [r4, #4]
 801f156:	aa0a      	add	r2, sp, #40	; 0x28
 801f158:	c203      	stmia	r2!, {r0, r1}
 801f15a:	6818      	ldr	r0, [r3, #0]
 801f15c:	6859      	ldr	r1, [r3, #4]
 801f15e:	aa0c      	add	r2, sp, #48	; 0x30
 801f160:	c203      	stmia	r2!, {r0, r1}
 801f162:	a80a      	add	r0, sp, #40	; 0x28
 801f164:	f7f9 fc4c 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f168:	4621      	mov	r1, r4
 801f16a:	a80c      	add	r0, sp, #48	; 0x30
 801f16c:	f7f9 fc8c 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f170:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f174:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801f178:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801f17c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f180:	bfde      	ittt	le
 801f182:	b2b3      	uxthle	r3, r6
 801f184:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f188:	fb92 f3f3 	sdivle	r3, r2, r3
 801f18c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f190:	bfc8      	it	gt
 801f192:	2301      	movgt	r3, #1
 801f194:	fb92 f1f3 	sdiv	r1, r2, r3
 801f198:	fa1f fc81 	uxth.w	ip, r1
 801f19c:	fb0c 2413 	mls	r4, ip, r3, r2
 801f1a0:	fb14 f406 	smulbb	r4, r4, r6
 801f1a4:	441d      	add	r5, r3
 801f1a6:	4404      	add	r4, r0
 801f1a8:	4661      	mov	r1, ip
 801f1aa:	3d01      	subs	r5, #1
 801f1ac:	b2a4      	uxth	r4, r4
 801f1ae:	fb95 f5f3 	sdiv	r5, r5, r3
 801f1b2:	b131      	cbz	r1, 801f1c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801f1b4:	9b05      	ldr	r3, [sp, #20]
 801f1b6:	9900      	ldr	r1, [sp, #0]
 801f1b8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f1bc:	ba1b      	rev	r3, r3
 801f1be:	4419      	add	r1, r3
 801f1c0:	9100      	str	r1, [sp, #0]
 801f1c2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f1c6:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801f1ca:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f1ce:	4418      	add	r0, r3
 801f1d0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f1d4:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801f1d8:	441a      	add	r2, r3
 801f1da:	4b6a      	ldr	r3, [pc, #424]	; (801f384 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f1dc:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801f1e0:	6818      	ldr	r0, [r3, #0]
 801f1e2:	6803      	ldr	r3, [r0, #0]
 801f1e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f1e6:	4798      	blx	r3
 801f1e8:	4967      	ldr	r1, [pc, #412]	; (801f388 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801f1ea:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f1ee:	880b      	ldrh	r3, [r1, #0]
 801f1f0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801f1f4:	9109      	str	r1, [sp, #36]	; 0x24
 801f1f6:	fb03 c202 	mla	r2, r3, r2, ip
 801f1fa:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f1fe:	4373      	muls	r3, r6
 801f200:	b2ad      	uxth	r5, r5
 801f202:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f206:	00ad      	lsls	r5, r5, #2
 801f208:	9306      	str	r3, [sp, #24]
 801f20a:	1d2b      	adds	r3, r5, #4
 801f20c:	9307      	str	r3, [sp, #28]
 801f20e:	9b01      	ldr	r3, [sp, #4]
 801f210:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801f214:	9103      	str	r1, [sp, #12]
 801f216:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801f21a:	2c00      	cmp	r4, #0
 801f21c:	bf0c      	ite	eq
 801f21e:	46c6      	moveq	lr, r8
 801f220:	f04f 0e00 	movne.w	lr, #0
 801f224:	2300      	movs	r3, #0
 801f226:	b292      	uxth	r2, r2
 801f228:	fa1f fe8e 	uxth.w	lr, lr
 801f22c:	9302      	str	r3, [sp, #8]
 801f22e:	9204      	str	r2, [sp, #16]
 801f230:	9a06      	ldr	r2, [sp, #24]
 801f232:	4282      	cmp	r2, r0
 801f234:	f240 809d 	bls.w	801f372 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801f238:	b963      	cbnz	r3, 801f254 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f23a:	9b00      	ldr	r3, [sp, #0]
 801f23c:	781a      	ldrb	r2, [r3, #0]
 801f23e:	0993      	lsrs	r3, r2, #6
 801f240:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f244:	9202      	str	r2, [sp, #8]
 801f246:	1e5a      	subs	r2, r3, #1
 801f248:	2a02      	cmp	r2, #2
 801f24a:	d815      	bhi.n	801f278 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801f24c:	9a00      	ldr	r2, [sp, #0]
 801f24e:	3201      	adds	r2, #1
 801f250:	9200      	str	r2, [sp, #0]
 801f252:	b29b      	uxth	r3, r3
 801f254:	b1b4      	cbz	r4, 801f284 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801f256:	429c      	cmp	r4, r3
 801f258:	bf95      	itete	ls
 801f25a:	1b1c      	subls	r4, r3, r4
 801f25c:	1ae4      	subhi	r4, r4, r3
 801f25e:	fa1f fa84 	uxthls.w	sl, r4
 801f262:	b2a4      	uxthhi	r4, r4
 801f264:	bf87      	ittee	hi
 801f266:	4671      	movhi	r1, lr
 801f268:	f04f 0a00 	movhi.w	sl, #0
 801f26c:	fa1f f188 	uxthls.w	r1, r8
 801f270:	2400      	movls	r4, #0
 801f272:	4653      	mov	r3, sl
 801f274:	468e      	mov	lr, r1
 801f276:	e7db      	b.n	801f230 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801f278:	9a00      	ldr	r2, [sp, #0]
 801f27a:	9b00      	ldr	r3, [sp, #0]
 801f27c:	3202      	adds	r2, #2
 801f27e:	785b      	ldrb	r3, [r3, #1]
 801f280:	9200      	str	r2, [sp, #0]
 801f282:	e7e7      	b.n	801f254 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f284:	2202      	movs	r2, #2
 801f286:	4615      	mov	r5, r2
 801f288:	9907      	ldr	r1, [sp, #28]
 801f28a:	9a02      	ldr	r2, [sp, #8]
 801f28c:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f290:	9905      	ldr	r1, [sp, #20]
 801f292:	4573      	cmp	r3, lr
 801f294:	f831 c002 	ldrh.w	ip, [r1, r2]
 801f298:	9a01      	ldr	r2, [sp, #4]
 801f29a:	bf2b      	itete	cs
 801f29c:	eba3 0a0e 	subcs.w	sl, r3, lr
 801f2a0:	ebae 0103 	subcc.w	r1, lr, r3
 801f2a4:	46f1      	movcs	r9, lr
 801f2a6:	4699      	movcc	r9, r3
 801f2a8:	bf27      	ittee	cs
 801f2aa:	fa1f fa8a 	uxthcs.w	sl, sl
 801f2ae:	4621      	movcs	r1, r4
 801f2b0:	b289      	uxthcc	r1, r1
 801f2b2:	46a2      	movcc	sl, r4
 801f2b4:	2aff      	cmp	r2, #255	; 0xff
 801f2b6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f2ba:	d105      	bne.n	801f2c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f2bc:	4481      	add	r9, r0
 801f2be:	4581      	cmp	r9, r0
 801f2c0:	d045      	beq.n	801f34e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f2c2:	f820 cb02 	strh.w	ip, [r0], #2
 801f2c6:	e7fa      	b.n	801f2be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801f2c8:	9d03      	ldr	r5, [sp, #12]
 801f2ca:	ea4f 222c 	mov.w	r2, ip, asr #8
 801f2ce:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f2d2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f2d6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f2da:	436a      	muls	r2, r5
 801f2dc:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f2e0:	fa5f fc8c 	uxtb.w	ip, ip
 801f2e4:	9208      	str	r2, [sp, #32]
 801f2e6:	fb0b fb05 	mul.w	fp, fp, r5
 801f2ea:	fb0c fc05 	mul.w	ip, ip, r5
 801f2ee:	4481      	add	r9, r0
 801f2f0:	4581      	cmp	r9, r0
 801f2f2:	d02c      	beq.n	801f34e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f2f4:	8802      	ldrh	r2, [r0, #0]
 801f2f6:	9d04      	ldr	r5, [sp, #16]
 801f2f8:	9f04      	ldr	r7, [sp, #16]
 801f2fa:	1216      	asrs	r6, r2, #8
 801f2fc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f300:	fb16 f605 	smulbb	r6, r6, r5
 801f304:	9d08      	ldr	r5, [sp, #32]
 801f306:	442e      	add	r6, r5
 801f308:	10d5      	asrs	r5, r2, #3
 801f30a:	00d2      	lsls	r2, r2, #3
 801f30c:	b2d2      	uxtb	r2, r2
 801f30e:	fb12 f207 	smulbb	r2, r2, r7
 801f312:	b2b6      	uxth	r6, r6
 801f314:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f318:	4462      	add	r2, ip
 801f31a:	fb15 f507 	smulbb	r5, r5, r7
 801f31e:	b292      	uxth	r2, r2
 801f320:	1c77      	adds	r7, r6, #1
 801f322:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801f326:	1c57      	adds	r7, r2, #1
 801f328:	445d      	add	r5, fp
 801f32a:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801f32e:	b2ad      	uxth	r5, r5
 801f330:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f334:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f338:	4316      	orrs	r6, r2
 801f33a:	1c6a      	adds	r2, r5, #1
 801f33c:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f340:	096d      	lsrs	r5, r5, #5
 801f342:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f346:	432e      	orrs	r6, r5
 801f348:	f820 6b02 	strh.w	r6, [r0], #2
 801f34c:	e7d0      	b.n	801f2f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801f34e:	4573      	cmp	r3, lr
 801f350:	d38f      	bcc.n	801f272 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f352:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801f356:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f358:	fa1f f188 	uxth.w	r1, r8
 801f35c:	1a64      	subs	r4, r4, r1
 801f35e:	881b      	ldrh	r3, [r3, #0]
 801f360:	b2a4      	uxth	r4, r4
 801f362:	2c00      	cmp	r4, #0
 801f364:	eba3 0308 	sub.w	r3, r3, r8
 801f368:	bf18      	it	ne
 801f36a:	2100      	movne	r1, #0
 801f36c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f370:	e77f      	b.n	801f272 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f372:	4b04      	ldr	r3, [pc, #16]	; (801f384 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f374:	6818      	ldr	r0, [r3, #0]
 801f376:	6803      	ldr	r3, [r0, #0]
 801f378:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f37a:	4798      	blx	r3
 801f37c:	b00f      	add	sp, #60	; 0x3c
 801f37e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f382:	bf00      	nop
 801f384:	20002328 	.word	0x20002328
 801f388:	20002322 	.word	0x20002322

0801f38c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f38c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f390:	b09f      	sub	sp, #124	; 0x7c
 801f392:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801f396:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801f39a:	9209      	str	r2, [sp, #36]	; 0x24
 801f39c:	461d      	mov	r5, r3
 801f39e:	4604      	mov	r4, r0
 801f3a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f3a2:	2a00      	cmp	r2, #0
 801f3a4:	f000 81eb 	beq.w	801f77e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801f3a8:	6828      	ldr	r0, [r5, #0]
 801f3aa:	6869      	ldr	r1, [r5, #4]
 801f3ac:	aa1a      	add	r2, sp, #104	; 0x68
 801f3ae:	c203      	stmia	r2!, {r0, r1}
 801f3b0:	6818      	ldr	r0, [r3, #0]
 801f3b2:	6859      	ldr	r1, [r3, #4]
 801f3b4:	aa1c      	add	r2, sp, #112	; 0x70
 801f3b6:	c203      	stmia	r2!, {r0, r1}
 801f3b8:	a81a      	add	r0, sp, #104	; 0x68
 801f3ba:	f7f9 fb21 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f3be:	4629      	mov	r1, r5
 801f3c0:	a81c      	add	r0, sp, #112	; 0x70
 801f3c2:	f7f9 fb61 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f3c6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801f3ca:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801f3ce:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801f3d2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801f3d6:	bfd7      	itett	le
 801f3d8:	b29a      	uxthle	r2, r3
 801f3da:	2201      	movgt	r2, #1
 801f3dc:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801f3e0:	fb91 f2f2 	sdivle	r2, r1, r2
 801f3e4:	9202      	str	r2, [sp, #8]
 801f3e6:	9802      	ldr	r0, [sp, #8]
 801f3e8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801f3ec:	fb92 f0f0 	sdiv	r0, r2, r0
 801f3f0:	b280      	uxth	r0, r0
 801f3f2:	9010      	str	r0, [sp, #64]	; 0x40
 801f3f4:	9902      	ldr	r1, [sp, #8]
 801f3f6:	9802      	ldr	r0, [sp, #8]
 801f3f8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f3fa:	4488      	add	r8, r1
 801f3fc:	fb05 2510 	mls	r5, r5, r0, r2
 801f400:	fb15 f503 	smulbb	r5, r5, r3
 801f404:	f108 38ff 	add.w	r8, r8, #4294967295
 801f408:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801f40c:	fb98 f8f1 	sdiv	r8, r8, r1
 801f410:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801f414:	440d      	add	r5, r1
 801f416:	4419      	add	r1, r3
 801f418:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801f41c:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801f420:	441a      	add	r2, r3
 801f422:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801f426:	9304      	str	r3, [sp, #16]
 801f428:	4b95      	ldr	r3, [pc, #596]	; (801f680 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801f42a:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801f42e:	6818      	ldr	r0, [r3, #0]
 801f430:	6803      	ldr	r3, [r0, #0]
 801f432:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f434:	4798      	blx	r3
 801f436:	4b93      	ldr	r3, [pc, #588]	; (801f684 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801f438:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801f43c:	881a      	ldrh	r2, [r3, #0]
 801f43e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801f442:	9318      	str	r3, [sp, #96]	; 0x60
 801f444:	fb02 7101 	mla	r1, r2, r1, r7
 801f448:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f44c:	4356      	muls	r6, r2
 801f44e:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801f452:	f108 0801 	add.w	r8, r8, #1
 801f456:	920a      	str	r2, [sp, #40]	; 0x28
 801f458:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f45a:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801f45e:	930f      	str	r3, [sp, #60]	; 0x3c
 801f460:	fa1f f888 	uxth.w	r8, r8
 801f464:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801f468:	f108 0204 	add.w	r2, r8, #4
 801f46c:	9211      	str	r2, [sp, #68]	; 0x44
 801f46e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f470:	4b85      	ldr	r3, [pc, #532]	; (801f688 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801f472:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801f476:	b2ad      	uxth	r5, r5
 801f478:	9215      	str	r2, [sp, #84]	; 0x54
 801f47a:	2d00      	cmp	r5, #0
 801f47c:	9a04      	ldr	r2, [sp, #16]
 801f47e:	f04f 0100 	mov.w	r1, #0
 801f482:	bf18      	it	ne
 801f484:	2200      	movne	r2, #0
 801f486:	1b1b      	subs	r3, r3, r4
 801f488:	b292      	uxth	r2, r2
 801f48a:	910d      	str	r1, [sp, #52]	; 0x34
 801f48c:	9319      	str	r3, [sp, #100]	; 0x64
 801f48e:	9910      	ldr	r1, [sp, #64]	; 0x40
 801f490:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f492:	fa11 f383 	uxtah	r3, r1, r3
 801f496:	9914      	ldr	r1, [sp, #80]	; 0x50
 801f498:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801f49c:	3304      	adds	r3, #4
 801f49e:	9306      	str	r3, [sp, #24]
 801f4a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f4a2:	4283      	cmp	r3, r0
 801f4a4:	f240 8166 	bls.w	801f774 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801f4a8:	9902      	ldr	r1, [sp, #8]
 801f4aa:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801f4ae:	fbb5 f3f3 	udiv	r3, r5, r3
 801f4b2:	1acb      	subs	r3, r1, r3
 801f4b4:	b29b      	uxth	r3, r3
 801f4b6:	9316      	str	r3, [sp, #88]	; 0x58
 801f4b8:	9b06      	ldr	r3, [sp, #24]
 801f4ba:	9e06      	ldr	r6, [sp, #24]
 801f4bc:	7859      	ldrb	r1, [r3, #1]
 801f4be:	789b      	ldrb	r3, [r3, #2]
 801f4c0:	7836      	ldrb	r6, [r6, #0]
 801f4c2:	9612      	str	r6, [sp, #72]	; 0x48
 801f4c4:	021b      	lsls	r3, r3, #8
 801f4c6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801f4ca:	9906      	ldr	r1, [sp, #24]
 801f4cc:	78c9      	ldrb	r1, [r1, #3]
 801f4ce:	430b      	orrs	r3, r1
 801f4d0:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801f4d2:	3601      	adds	r6, #1
 801f4d4:	4419      	add	r1, r3
 801f4d6:	9605      	str	r6, [sp, #20]
 801f4d8:	1c4e      	adds	r6, r1, #1
 801f4da:	9603      	str	r6, [sp, #12]
 801f4dc:	7849      	ldrb	r1, [r1, #1]
 801f4de:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801f4e0:	0209      	lsls	r1, r1, #8
 801f4e2:	5cf3      	ldrb	r3, [r6, r3]
 801f4e4:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801f4e8:	4319      	orrs	r1, r3
 801f4ea:	b28b      	uxth	r3, r1
 801f4ec:	930c      	str	r3, [sp, #48]	; 0x30
 801f4ee:	2300      	movs	r3, #0
 801f4f0:	f04f 0a01 	mov.w	sl, #1
 801f4f4:	9307      	str	r3, [sp, #28]
 801f4f6:	469c      	mov	ip, r3
 801f4f8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801f4fc:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801f500:	46d3      	mov	fp, sl
 801f502:	4657      	mov	r7, sl
 801f504:	930e      	str	r3, [sp, #56]	; 0x38
 801f506:	2d00      	cmp	r5, #0
 801f508:	d07e      	beq.n	801f608 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801f50a:	42af      	cmp	r7, r5
 801f50c:	d26e      	bcs.n	801f5ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801f50e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f510:	9201      	str	r2, [sp, #4]
 801f512:	1bed      	subs	r5, r5, r7
 801f514:	4283      	cmp	r3, r0
 801f516:	b2ad      	uxth	r5, r5
 801f518:	d802      	bhi.n	801f520 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801f51a:	e073      	b.n	801f604 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801f51c:	2b00      	cmp	r3, #0
 801f51e:	d15f      	bne.n	801f5e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801f520:	9b03      	ldr	r3, [sp, #12]
 801f522:	785b      	ldrb	r3, [r3, #1]
 801f524:	f1cb 0207 	rsb	r2, fp, #7
 801f528:	4093      	lsls	r3, r2
 801f52a:	005b      	lsls	r3, r3, #1
 801f52c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801f530:	9b03      	ldr	r3, [sp, #12]
 801f532:	781b      	ldrb	r3, [r3, #0]
 801f534:	fa43 f30b 	asr.w	r3, r3, fp
 801f538:	b2db      	uxtb	r3, r3
 801f53a:	4313      	orrs	r3, r2
 801f53c:	f10b 0201 	add.w	r2, fp, #1
 801f540:	fa5f fb82 	uxtb.w	fp, r2
 801f544:	9a03      	ldr	r2, [sp, #12]
 801f546:	f1bb 0f08 	cmp.w	fp, #8
 801f54a:	bf15      	itete	ne
 801f54c:	3201      	addne	r2, #1
 801f54e:	3202      	addeq	r2, #2
 801f550:	9203      	strne	r2, [sp, #12]
 801f552:	9203      	streq	r2, [sp, #12]
 801f554:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f556:	b29f      	uxth	r7, r3
 801f558:	bf08      	it	eq
 801f55a:	f04f 0b00 	moveq.w	fp, #0
 801f55e:	42ba      	cmp	r2, r7
 801f560:	d309      	bcc.n	801f576 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801f562:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801f566:	2301      	movs	r3, #1
 801f568:	9a05      	ldr	r2, [sp, #20]
 801f56a:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801f56e:	d30e      	bcc.n	801f58e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801f570:	469a      	mov	sl, r3
 801f572:	2600      	movs	r6, #0
 801f574:	e035      	b.n	801f5e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801f576:	9b05      	ldr	r3, [sp, #20]
 801f578:	429f      	cmp	r7, r3
 801f57a:	d318      	bcc.n	801f5ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801f57c:	eb04 030a 	add.w	r3, r4, sl
 801f580:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801f584:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801f588:	f10a 0301 	add.w	r3, sl, #1
 801f58c:	b29b      	uxth	r3, r3
 801f58e:	9a05      	ldr	r2, [sp, #20]
 801f590:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801f594:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f596:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801f59a:	7116      	strb	r6, [r2, #4]
 801f59c:	f10a 0601 	add.w	r6, sl, #1
 801f5a0:	80d1      	strh	r1, [r2, #6]
 801f5a2:	7156      	strb	r6, [r2, #5]
 801f5a4:	9a05      	ldr	r2, [sp, #20]
 801f5a6:	3201      	adds	r2, #1
 801f5a8:	b292      	uxth	r2, r2
 801f5aa:	9205      	str	r2, [sp, #20]
 801f5ac:	e7e0      	b.n	801f570 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801f5ae:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801f5b2:	463a      	mov	r2, r7
 801f5b4:	795b      	ldrb	r3, [r3, #5]
 801f5b6:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801f5ba:	4426      	add	r6, r4
 801f5bc:	9919      	ldr	r1, [sp, #100]	; 0x64
 801f5be:	eb01 0c06 	add.w	ip, r1, r6
 801f5c2:	f1bc 0f00 	cmp.w	ip, #0
 801f5c6:	dd07      	ble.n	801f5d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801f5c8:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801f5cc:	f892 c004 	ldrb.w	ip, [r2, #4]
 801f5d0:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801f5d4:	88d2      	ldrh	r2, [r2, #6]
 801f5d6:	e7f1      	b.n	801f5bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801f5d8:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801f5dc:	b29b      	uxth	r3, r3
 801f5de:	e7c3      	b.n	801f568 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801f5e0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801f5e2:	970c      	str	r7, [sp, #48]	; 0x30
 801f5e4:	9a01      	ldr	r2, [sp, #4]
 801f5e6:	46b4      	mov	ip, r6
 801f5e8:	461f      	mov	r7, r3
 801f5ea:	e78c      	b.n	801f506 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801f5ec:	1b7b      	subs	r3, r7, r5
 801f5ee:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f5f2:	9201      	str	r2, [sp, #4]
 801f5f4:	eb0c 0605 	add.w	r6, ip, r5
 801f5f8:	b29b      	uxth	r3, r3
 801f5fa:	b2b6      	uxth	r6, r6
 801f5fc:	2500      	movs	r5, #0
 801f5fe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f600:	4282      	cmp	r2, r0
 801f602:	d88b      	bhi.n	801f51c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f604:	9a01      	ldr	r2, [sp, #4]
 801f606:	e74b      	b.n	801f4a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801f608:	4297      	cmp	r7, r2
 801f60a:	d332      	bcc.n	801f672 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801f60c:	1abb      	subs	r3, r7, r2
 801f60e:	b29b      	uxth	r3, r3
 801f610:	9208      	str	r2, [sp, #32]
 801f612:	9501      	str	r5, [sp, #4]
 801f614:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f616:	29ff      	cmp	r1, #255	; 0xff
 801f618:	9908      	ldr	r1, [sp, #32]
 801f61a:	eb0c 0601 	add.w	r6, ip, r1
 801f61e:	d135      	bne.n	801f68c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801f620:	f1a0 0e02 	sub.w	lr, r0, #2
 801f624:	b2b6      	uxth	r6, r6
 801f626:	45b4      	cmp	ip, r6
 801f628:	f040 808c 	bne.w	801f744 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801f62c:	9908      	ldr	r1, [sp, #32]
 801f62e:	4297      	cmp	r7, r2
 801f630:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f634:	d3e2      	bcc.n	801f5fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801f636:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801f638:	9904      	ldr	r1, [sp, #16]
 801f63a:	8812      	ldrh	r2, [r2, #0]
 801f63c:	1a52      	subs	r2, r2, r1
 801f63e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f642:	9a07      	ldr	r2, [sp, #28]
 801f644:	9916      	ldr	r1, [sp, #88]	; 0x58
 801f646:	3201      	adds	r2, #1
 801f648:	428a      	cmp	r2, r1
 801f64a:	9207      	str	r2, [sp, #28]
 801f64c:	f040 8087 	bne.w	801f75e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801f650:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801f654:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801f658:	9b04      	ldr	r3, [sp, #16]
 801f65a:	1bed      	subs	r5, r5, r7
 801f65c:	b2ad      	uxth	r5, r5
 801f65e:	2d00      	cmp	r5, #0
 801f660:	bf08      	it	eq
 801f662:	461a      	moveq	r2, r3
 801f664:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f666:	bf18      	it	ne
 801f668:	2200      	movne	r2, #0
 801f66a:	3301      	adds	r3, #1
 801f66c:	930d      	str	r3, [sp, #52]	; 0x34
 801f66e:	b292      	uxth	r2, r2
 801f670:	e70d      	b.n	801f48e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801f672:	1bd1      	subs	r1, r2, r7
 801f674:	b28b      	uxth	r3, r1
 801f676:	9301      	str	r3, [sp, #4]
 801f678:	9708      	str	r7, [sp, #32]
 801f67a:	462b      	mov	r3, r5
 801f67c:	e7ca      	b.n	801f614 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801f67e:	bf00      	nop
 801f680:	20002328 	.word	0x20002328
 801f684:	20002322 	.word	0x20002322
 801f688:	fffff7fb 	.word	0xfffff7fb
 801f68c:	b2b6      	uxth	r6, r6
 801f68e:	900b      	str	r0, [sp, #44]	; 0x2c
 801f690:	45b4      	cmp	ip, r6
 801f692:	d0cb      	beq.n	801f62c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801f694:	f10c 0101 	add.w	r1, ip, #1
 801f698:	44a4      	add	ip, r4
 801f69a:	9117      	str	r1, [sp, #92]	; 0x5c
 801f69c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801f6a0:	9911      	ldr	r1, [sp, #68]	; 0x44
 801f6a2:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801f6a6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f6a8:	f8b1 c000 	ldrh.w	ip, [r1]
 801f6ac:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f6ae:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801f6b2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801f6b6:	fb1e fe01 	smulbb	lr, lr, r1
 801f6ba:	ea4f 2825 	mov.w	r8, r5, asr #8
 801f6be:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f6c0:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801f6c4:	fb08 e801 	mla	r8, r8, r1, lr
 801f6c8:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801f6cc:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f6ce:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801f6d2:	fb19 f901 	smulbb	r9, r9, r1
 801f6d6:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801f6da:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f6dc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f6e0:	fb0e 9e01 	mla	lr, lr, r1, r9
 801f6e4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f6e8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f6ea:	fa5f fc8c 	uxtb.w	ip, ip
 801f6ee:	fb1c fc01 	smulbb	ip, ip, r1
 801f6f2:	00ed      	lsls	r5, r5, #3
 801f6f4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f6f6:	b2ed      	uxtb	r5, r5
 801f6f8:	fb05 c501 	mla	r5, r5, r1, ip
 801f6fc:	fa1f f888 	uxth.w	r8, r8
 801f700:	fa1f fe8e 	uxth.w	lr, lr
 801f704:	b2ad      	uxth	r5, r5
 801f706:	f108 0c01 	add.w	ip, r8, #1
 801f70a:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801f70e:	f10e 0901 	add.w	r9, lr, #1
 801f712:	f105 0c01 	add.w	ip, r5, #1
 801f716:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801f71a:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801f71e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f722:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801f726:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f72a:	ea4c 0808 	orr.w	r8, ip, r8
 801f72e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f730:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801f734:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f738:	ea48 0809 	orr.w	r8, r8, r9
 801f73c:	f821 8b02 	strh.w	r8, [r1], #2
 801f740:	910b      	str	r1, [sp, #44]	; 0x2c
 801f742:	e7a5      	b.n	801f690 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801f744:	f10c 0801 	add.w	r8, ip, #1
 801f748:	44a4      	add	ip, r4
 801f74a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801f74c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801f750:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801f754:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801f758:	fa1f fc88 	uxth.w	ip, r8
 801f75c:	e763      	b.n	801f626 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801f75e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f762:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801f766:	1aad      	subs	r5, r5, r2
 801f768:	b2ad      	uxth	r5, r5
 801f76a:	2d00      	cmp	r5, #0
 801f76c:	bf18      	it	ne
 801f76e:	2200      	movne	r2, #0
 801f770:	9201      	str	r2, [sp, #4]
 801f772:	e744      	b.n	801f5fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801f774:	4b03      	ldr	r3, [pc, #12]	; (801f784 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801f776:	6818      	ldr	r0, [r3, #0]
 801f778:	6803      	ldr	r3, [r0, #0]
 801f77a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f77c:	4798      	blx	r3
 801f77e:	b01f      	add	sp, #124	; 0x7c
 801f780:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f784:	20002328 	.word	0x20002328

0801f788 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801f788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f78c:	b08f      	sub	sp, #60	; 0x3c
 801f78e:	461c      	mov	r4, r3
 801f790:	9203      	str	r2, [sp, #12]
 801f792:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f796:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f798:	9202      	str	r2, [sp, #8]
 801f79a:	460f      	mov	r7, r1
 801f79c:	2a00      	cmp	r2, #0
 801f79e:	f000 8128 	beq.w	801f9f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801f7a2:	6820      	ldr	r0, [r4, #0]
 801f7a4:	6861      	ldr	r1, [r4, #4]
 801f7a6:	aa0a      	add	r2, sp, #40	; 0x28
 801f7a8:	c203      	stmia	r2!, {r0, r1}
 801f7aa:	6818      	ldr	r0, [r3, #0]
 801f7ac:	6859      	ldr	r1, [r3, #4]
 801f7ae:	aa0c      	add	r2, sp, #48	; 0x30
 801f7b0:	c203      	stmia	r2!, {r0, r1}
 801f7b2:	a80a      	add	r0, sp, #40	; 0x28
 801f7b4:	f7f9 f924 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f7b8:	4621      	mov	r1, r4
 801f7ba:	a80c      	add	r0, sp, #48	; 0x30
 801f7bc:	f7f9 f964 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f7c0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f7c4:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801f7c8:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801f7cc:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f7d0:	bfde      	ittt	le
 801f7d2:	b2b3      	uxthle	r3, r6
 801f7d4:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f7d8:	fb92 f3f3 	sdivle	r3, r2, r3
 801f7dc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f7e0:	bfc8      	it	gt
 801f7e2:	2301      	movgt	r3, #1
 801f7e4:	fb92 f1f3 	sdiv	r1, r2, r3
 801f7e8:	fa1f fc81 	uxth.w	ip, r1
 801f7ec:	fb0c 2413 	mls	r4, ip, r3, r2
 801f7f0:	fb14 f406 	smulbb	r4, r4, r6
 801f7f4:	441d      	add	r5, r3
 801f7f6:	4404      	add	r4, r0
 801f7f8:	4661      	mov	r1, ip
 801f7fa:	3d01      	subs	r5, #1
 801f7fc:	b2a4      	uxth	r4, r4
 801f7fe:	fb95 f5f3 	sdiv	r5, r5, r3
 801f802:	b121      	cbz	r1, 801f80e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801f804:	9b03      	ldr	r3, [sp, #12]
 801f806:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f80a:	ba1b      	rev	r3, r3
 801f80c:	441f      	add	r7, r3
 801f80e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f812:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801f816:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f81a:	4418      	add	r0, r3
 801f81c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f820:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801f824:	441a      	add	r2, r3
 801f826:	4b74      	ldr	r3, [pc, #464]	; (801f9f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801f828:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801f82c:	6818      	ldr	r0, [r3, #0]
 801f82e:	6803      	ldr	r3, [r0, #0]
 801f830:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f832:	4798      	blx	r3
 801f834:	4a71      	ldr	r2, [pc, #452]	; (801f9fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801f836:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801f83a:	8813      	ldrh	r3, [r2, #0]
 801f83c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801f840:	9209      	str	r2, [sp, #36]	; 0x24
 801f842:	fb03 c101 	mla	r1, r3, r1, ip
 801f846:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f84a:	4373      	muls	r3, r6
 801f84c:	b2ad      	uxth	r5, r5
 801f84e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f852:	00ad      	lsls	r5, r5, #2
 801f854:	2c00      	cmp	r4, #0
 801f856:	9304      	str	r3, [sp, #16]
 801f858:	f105 0304 	add.w	r3, r5, #4
 801f85c:	9305      	str	r3, [sp, #20]
 801f85e:	bf0c      	ite	eq
 801f860:	46c8      	moveq	r8, r9
 801f862:	f04f 0800 	movne.w	r8, #0
 801f866:	2300      	movs	r3, #0
 801f868:	fa1f f888 	uxth.w	r8, r8
 801f86c:	9301      	str	r3, [sp, #4]
 801f86e:	9a04      	ldr	r2, [sp, #16]
 801f870:	4282      	cmp	r2, r0
 801f872:	f240 80b9 	bls.w	801f9e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801f876:	b95b      	cbnz	r3, 801f890 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801f878:	783a      	ldrb	r2, [r7, #0]
 801f87a:	0993      	lsrs	r3, r2, #6
 801f87c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f880:	9201      	str	r2, [sp, #4]
 801f882:	1e5a      	subs	r2, r3, #1
 801f884:	2a02      	cmp	r2, #2
 801f886:	bf8d      	iteet	hi
 801f888:	787b      	ldrbhi	r3, [r7, #1]
 801f88a:	3701      	addls	r7, #1
 801f88c:	b29b      	uxthls	r3, r3
 801f88e:	3702      	addhi	r7, #2
 801f890:	b184      	cbz	r4, 801f8b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801f892:	429c      	cmp	r4, r3
 801f894:	bf95      	itete	ls
 801f896:	1b1c      	subls	r4, r3, r4
 801f898:	1ae4      	subhi	r4, r4, r3
 801f89a:	fa1f fa84 	uxthls.w	sl, r4
 801f89e:	b2a4      	uxthhi	r4, r4
 801f8a0:	bf87      	ittee	hi
 801f8a2:	46c4      	movhi	ip, r8
 801f8a4:	f04f 0a00 	movhi.w	sl, #0
 801f8a8:	fa1f fc89 	uxthls.w	ip, r9
 801f8ac:	2400      	movls	r4, #0
 801f8ae:	4653      	mov	r3, sl
 801f8b0:	46e0      	mov	r8, ip
 801f8b2:	e7dc      	b.n	801f86e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801f8b4:	2204      	movs	r2, #4
 801f8b6:	4615      	mov	r5, r2
 801f8b8:	9905      	ldr	r1, [sp, #20]
 801f8ba:	9a01      	ldr	r2, [sp, #4]
 801f8bc:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f8c0:	9903      	ldr	r1, [sp, #12]
 801f8c2:	588a      	ldr	r2, [r1, r2]
 801f8c4:	4543      	cmp	r3, r8
 801f8c6:	bf27      	ittee	cs
 801f8c8:	eba3 0a08 	subcs.w	sl, r3, r8
 801f8cc:	46c6      	movcs	lr, r8
 801f8ce:	eba8 0c03 	subcc.w	ip, r8, r3
 801f8d2:	469e      	movcc	lr, r3
 801f8d4:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801f8d8:	bf27      	ittee	cs
 801f8da:	fa1f fa8a 	uxthcs.w	sl, sl
 801f8de:	46a4      	movcs	ip, r4
 801f8e0:	fa1f fc8c 	uxthcc.w	ip, ip
 801f8e4:	46a2      	movcc	sl, r4
 801f8e6:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801f8ea:	2900      	cmp	r1, #0
 801f8ec:	d066      	beq.n	801f9bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801f8ee:	29ff      	cmp	r1, #255	; 0xff
 801f8f0:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f8f4:	d114      	bne.n	801f920 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801f8f6:	9d02      	ldr	r5, [sp, #8]
 801f8f8:	2dff      	cmp	r5, #255	; 0xff
 801f8fa:	d111      	bne.n	801f920 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801f8fc:	0951      	lsrs	r1, r2, #5
 801f8fe:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801f902:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f906:	f026 0607 	bic.w	r6, r6, #7
 801f90a:	430e      	orrs	r6, r1
 801f90c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f910:	4316      	orrs	r6, r2
 801f912:	b2b6      	uxth	r6, r6
 801f914:	4486      	add	lr, r0
 801f916:	4586      	cmp	lr, r0
 801f918:	d051      	beq.n	801f9be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801f91a:	f820 6b02 	strh.w	r6, [r0], #2
 801f91e:	e7fa      	b.n	801f916 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801f920:	9d02      	ldr	r5, [sp, #8]
 801f922:	4369      	muls	r1, r5
 801f924:	1c4d      	adds	r5, r1, #1
 801f926:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801f92a:	122d      	asrs	r5, r5, #8
 801f92c:	ea6f 0b05 	mvn.w	fp, r5
 801f930:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f934:	b2ad      	uxth	r5, r5
 801f936:	b2f6      	uxtb	r6, r6
 801f938:	b2d2      	uxtb	r2, r2
 801f93a:	fb11 f105 	smulbb	r1, r1, r5
 801f93e:	fb16 f605 	smulbb	r6, r6, r5
 801f942:	fb12 f205 	smulbb	r2, r2, r5
 801f946:	b289      	uxth	r1, r1
 801f948:	b2b6      	uxth	r6, r6
 801f94a:	b292      	uxth	r2, r2
 801f94c:	9106      	str	r1, [sp, #24]
 801f94e:	9607      	str	r6, [sp, #28]
 801f950:	9208      	str	r2, [sp, #32]
 801f952:	4486      	add	lr, r0
 801f954:	fa5f fb8b 	uxtb.w	fp, fp
 801f958:	4586      	cmp	lr, r0
 801f95a:	d030      	beq.n	801f9be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801f95c:	8802      	ldrh	r2, [r0, #0]
 801f95e:	9906      	ldr	r1, [sp, #24]
 801f960:	1216      	asrs	r6, r2, #8
 801f962:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f966:	10d5      	asrs	r5, r2, #3
 801f968:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801f96c:	fb06 160b 	mla	r6, r6, fp, r1
 801f970:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f974:	9907      	ldr	r1, [sp, #28]
 801f976:	00d2      	lsls	r2, r2, #3
 801f978:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801f97c:	fb05 150b 	mla	r5, r5, fp, r1
 801f980:	b2d2      	uxtb	r2, r2
 801f982:	9908      	ldr	r1, [sp, #32]
 801f984:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f988:	b2b6      	uxth	r6, r6
 801f98a:	fb02 120b 	mla	r2, r2, fp, r1
 801f98e:	b292      	uxth	r2, r2
 801f990:	1c71      	adds	r1, r6, #1
 801f992:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801f996:	1c51      	adds	r1, r2, #1
 801f998:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f99c:	b2ad      	uxth	r5, r5
 801f99e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f9a2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f9a6:	4316      	orrs	r6, r2
 801f9a8:	1c6a      	adds	r2, r5, #1
 801f9aa:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f9ae:	096d      	lsrs	r5, r5, #5
 801f9b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f9b4:	432e      	orrs	r6, r5
 801f9b6:	f820 6b02 	strh.w	r6, [r0], #2
 801f9ba:	e7cd      	b.n	801f958 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801f9bc:	4470      	add	r0, lr
 801f9be:	4543      	cmp	r3, r8
 801f9c0:	f4ff af75 	bcc.w	801f8ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801f9c4:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801f9c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f9ca:	fa1f fc89 	uxth.w	ip, r9
 801f9ce:	eba4 040c 	sub.w	r4, r4, ip
 801f9d2:	881b      	ldrh	r3, [r3, #0]
 801f9d4:	b2a4      	uxth	r4, r4
 801f9d6:	2c00      	cmp	r4, #0
 801f9d8:	eba3 0309 	sub.w	r3, r3, r9
 801f9dc:	bf18      	it	ne
 801f9de:	f04f 0c00 	movne.w	ip, #0
 801f9e2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f9e6:	e762      	b.n	801f8ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801f9e8:	4b03      	ldr	r3, [pc, #12]	; (801f9f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801f9ea:	6818      	ldr	r0, [r3, #0]
 801f9ec:	6803      	ldr	r3, [r0, #0]
 801f9ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f9f0:	4798      	blx	r3
 801f9f2:	b00f      	add	sp, #60	; 0x3c
 801f9f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f9f8:	20002328 	.word	0x20002328
 801f9fc:	20002322 	.word	0x20002322

0801fa00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801fa00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa04:	b093      	sub	sp, #76	; 0x4c
 801fa06:	461c      	mov	r4, r3
 801fa08:	9205      	str	r2, [sp, #20]
 801fa0a:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801fa0e:	9101      	str	r1, [sp, #4]
 801fa10:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fa12:	9202      	str	r2, [sp, #8]
 801fa14:	2a00      	cmp	r2, #0
 801fa16:	f000 812c 	beq.w	801fc72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801fa1a:	6820      	ldr	r0, [r4, #0]
 801fa1c:	6861      	ldr	r1, [r4, #4]
 801fa1e:	aa0e      	add	r2, sp, #56	; 0x38
 801fa20:	c203      	stmia	r2!, {r0, r1}
 801fa22:	6818      	ldr	r0, [r3, #0]
 801fa24:	6859      	ldr	r1, [r3, #4]
 801fa26:	aa10      	add	r2, sp, #64	; 0x40
 801fa28:	c203      	stmia	r2!, {r0, r1}
 801fa2a:	a80e      	add	r0, sp, #56	; 0x38
 801fa2c:	f7f8 ffe8 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fa30:	4621      	mov	r1, r4
 801fa32:	a810      	add	r0, sp, #64	; 0x40
 801fa34:	f7f9 f828 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fa38:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801fa3c:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801fa40:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801fa44:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801fa48:	bfde      	ittt	le
 801fa4a:	b2b3      	uxthle	r3, r6
 801fa4c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801fa50:	fb92 f3f3 	sdivle	r3, r2, r3
 801fa54:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801fa58:	bfc8      	it	gt
 801fa5a:	2301      	movgt	r3, #1
 801fa5c:	fb92 f1f3 	sdiv	r1, r2, r3
 801fa60:	fa1f fc81 	uxth.w	ip, r1
 801fa64:	fb0c 2413 	mls	r4, ip, r3, r2
 801fa68:	fb14 f406 	smulbb	r4, r4, r6
 801fa6c:	441d      	add	r5, r3
 801fa6e:	4404      	add	r4, r0
 801fa70:	4661      	mov	r1, ip
 801fa72:	3d01      	subs	r5, #1
 801fa74:	b2a4      	uxth	r4, r4
 801fa76:	fb95 f5f3 	sdiv	r5, r5, r3
 801fa7a:	b131      	cbz	r1, 801fa8a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801fa7c:	9b05      	ldr	r3, [sp, #20]
 801fa7e:	9901      	ldr	r1, [sp, #4]
 801fa80:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801fa84:	ba1b      	rev	r3, r3
 801fa86:	4419      	add	r1, r3
 801fa88:	9101      	str	r1, [sp, #4]
 801fa8a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801fa8e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801fa92:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801fa96:	4418      	add	r0, r3
 801fa98:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801fa9c:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801faa0:	441a      	add	r2, r3
 801faa2:	4b75      	ldr	r3, [pc, #468]	; (801fc78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801faa4:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801faa8:	6818      	ldr	r0, [r3, #0]
 801faaa:	6803      	ldr	r3, [r0, #0]
 801faac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801faae:	4798      	blx	r3
 801fab0:	4972      	ldr	r1, [pc, #456]	; (801fc7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801fab2:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801fab6:	880b      	ldrh	r3, [r1, #0]
 801fab8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801fabc:	910d      	str	r1, [sp, #52]	; 0x34
 801fabe:	fb03 c202 	mla	r2, r3, r2, ip
 801fac2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fac6:	4373      	muls	r3, r6
 801fac8:	b2ad      	uxth	r5, r5
 801faca:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801face:	00ad      	lsls	r5, r5, #2
 801fad0:	9308      	str	r3, [sp, #32]
 801fad2:	1d2b      	adds	r3, r5, #4
 801fad4:	9309      	str	r3, [sp, #36]	; 0x24
 801fad6:	9b02      	ldr	r3, [sp, #8]
 801fad8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801fadc:	9106      	str	r1, [sp, #24]
 801fade:	43da      	mvns	r2, r3
 801fae0:	2c00      	cmp	r4, #0
 801fae2:	bf0c      	ite	eq
 801fae4:	46dc      	moveq	ip, fp
 801fae6:	f04f 0c00 	movne.w	ip, #0
 801faea:	2300      	movs	r3, #0
 801faec:	b2d2      	uxtb	r2, r2
 801faee:	fa1f fc8c 	uxth.w	ip, ip
 801faf2:	9303      	str	r3, [sp, #12]
 801faf4:	9207      	str	r2, [sp, #28]
 801faf6:	9a08      	ldr	r2, [sp, #32]
 801faf8:	4282      	cmp	r2, r0
 801fafa:	f240 80b5 	bls.w	801fc68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801fafe:	b963      	cbnz	r3, 801fb1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801fb00:	9b01      	ldr	r3, [sp, #4]
 801fb02:	781a      	ldrb	r2, [r3, #0]
 801fb04:	0993      	lsrs	r3, r2, #6
 801fb06:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801fb0a:	9203      	str	r2, [sp, #12]
 801fb0c:	1e5a      	subs	r2, r3, #1
 801fb0e:	2a02      	cmp	r2, #2
 801fb10:	d815      	bhi.n	801fb3e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801fb12:	9a01      	ldr	r2, [sp, #4]
 801fb14:	3201      	adds	r2, #1
 801fb16:	9201      	str	r2, [sp, #4]
 801fb18:	b29b      	uxth	r3, r3
 801fb1a:	b1b4      	cbz	r4, 801fb4a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801fb1c:	429c      	cmp	r4, r3
 801fb1e:	bf95      	itete	ls
 801fb20:	1b1c      	subls	r4, r3, r4
 801fb22:	1ae4      	subhi	r4, r4, r3
 801fb24:	fa1f f884 	uxthls.w	r8, r4
 801fb28:	b2a4      	uxthhi	r4, r4
 801fb2a:	bf87      	ittee	hi
 801fb2c:	4666      	movhi	r6, ip
 801fb2e:	f04f 0800 	movhi.w	r8, #0
 801fb32:	fa1f f68b 	uxthls.w	r6, fp
 801fb36:	2400      	movls	r4, #0
 801fb38:	4643      	mov	r3, r8
 801fb3a:	46b4      	mov	ip, r6
 801fb3c:	e7db      	b.n	801faf6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801fb3e:	9a01      	ldr	r2, [sp, #4]
 801fb40:	9b01      	ldr	r3, [sp, #4]
 801fb42:	3202      	adds	r2, #2
 801fb44:	785b      	ldrb	r3, [r3, #1]
 801fb46:	9201      	str	r2, [sp, #4]
 801fb48:	e7e7      	b.n	801fb1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801fb4a:	2203      	movs	r2, #3
 801fb4c:	4615      	mov	r5, r2
 801fb4e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fb50:	9a03      	ldr	r2, [sp, #12]
 801fb52:	fb15 1202 	smlabb	r2, r5, r2, r1
 801fb56:	9905      	ldr	r1, [sp, #20]
 801fb58:	4563      	cmp	r3, ip
 801fb5a:	eb01 0502 	add.w	r5, r1, r2
 801fb5e:	9902      	ldr	r1, [sp, #8]
 801fb60:	bf29      	itett	cs
 801fb62:	eba3 080c 	subcs.w	r8, r3, ip
 801fb66:	ebac 0603 	subcc.w	r6, ip, r3
 801fb6a:	fa1f f888 	uxthcs.w	r8, r8
 801fb6e:	46e1      	movcs	r9, ip
 801fb70:	bf2f      	iteee	cs
 801fb72:	4626      	movcs	r6, r4
 801fb74:	b2b6      	uxthcc	r6, r6
 801fb76:	4699      	movcc	r9, r3
 801fb78:	46a0      	movcc	r8, r4
 801fb7a:	29ff      	cmp	r1, #255	; 0xff
 801fb7c:	d04a      	beq.n	801fc14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801fb7e:	9f06      	ldr	r7, [sp, #24]
 801fb80:	78a9      	ldrb	r1, [r5, #2]
 801fb82:	9004      	str	r0, [sp, #16]
 801fb84:	4379      	muls	r1, r7
 801fb86:	910a      	str	r1, [sp, #40]	; 0x28
 801fb88:	7869      	ldrb	r1, [r5, #1]
 801fb8a:	4379      	muls	r1, r7
 801fb8c:	910b      	str	r1, [sp, #44]	; 0x2c
 801fb8e:	9905      	ldr	r1, [sp, #20]
 801fb90:	5c8a      	ldrb	r2, [r1, r2]
 801fb92:	437a      	muls	r2, r7
 801fb94:	920c      	str	r2, [sp, #48]	; 0x30
 801fb96:	46ca      	mov	sl, r9
 801fb98:	f1ba 0f00 	cmp.w	sl, #0
 801fb9c:	d03d      	beq.n	801fc1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801fb9e:	9a04      	ldr	r2, [sp, #16]
 801fba0:	9f07      	ldr	r7, [sp, #28]
 801fba2:	8812      	ldrh	r2, [r2, #0]
 801fba4:	1215      	asrs	r5, r2, #8
 801fba6:	46be      	mov	lr, r7
 801fba8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801fbac:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801fbae:	10d1      	asrs	r1, r2, #3
 801fbb0:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801fbb4:	fb05 750e 	mla	r5, r5, lr, r7
 801fbb8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fbbc:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801fbbe:	00d2      	lsls	r2, r2, #3
 801fbc0:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801fbc4:	fb01 710e 	mla	r1, r1, lr, r7
 801fbc8:	b2d2      	uxtb	r2, r2
 801fbca:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801fbcc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801fbd0:	b2ad      	uxth	r5, r5
 801fbd2:	fb02 720e 	mla	r2, r2, lr, r7
 801fbd6:	b292      	uxth	r2, r2
 801fbd8:	f105 0e01 	add.w	lr, r5, #1
 801fbdc:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801fbe0:	f102 0e01 	add.w	lr, r2, #1
 801fbe4:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801fbe8:	b289      	uxth	r1, r1
 801fbea:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fbee:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801fbf2:	4315      	orrs	r5, r2
 801fbf4:	1c4a      	adds	r2, r1, #1
 801fbf6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fbfa:	0949      	lsrs	r1, r1, #5
 801fbfc:	9a04      	ldr	r2, [sp, #16]
 801fbfe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fc02:	430d      	orrs	r5, r1
 801fc04:	f822 5b02 	strh.w	r5, [r2], #2
 801fc08:	f10a 3aff 	add.w	sl, sl, #4294967295
 801fc0c:	9204      	str	r2, [sp, #16]
 801fc0e:	fa1f fa8a 	uxth.w	sl, sl
 801fc12:	e7c1      	b.n	801fb98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801fc14:	4649      	mov	r1, r9
 801fc16:	4686      	mov	lr, r0
 801fc18:	b999      	cbnz	r1, 801fc42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801fc1a:	4563      	cmp	r3, ip
 801fc1c:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801fc20:	d38a      	bcc.n	801fb38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801fc22:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801fc26:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fc28:	fa1f f68b 	uxth.w	r6, fp
 801fc2c:	1ba4      	subs	r4, r4, r6
 801fc2e:	881b      	ldrh	r3, [r3, #0]
 801fc30:	b2a4      	uxth	r4, r4
 801fc32:	2c00      	cmp	r4, #0
 801fc34:	eba3 030b 	sub.w	r3, r3, fp
 801fc38:	bf18      	it	ne
 801fc3a:	2600      	movne	r6, #0
 801fc3c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fc40:	e77a      	b.n	801fb38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801fc42:	78aa      	ldrb	r2, [r5, #2]
 801fc44:	4f0e      	ldr	r7, [pc, #56]	; (801fc80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801fc46:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801fc4a:	786a      	ldrb	r2, [r5, #1]
 801fc4c:	00d2      	lsls	r2, r2, #3
 801fc4e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fc52:	ea4a 0202 	orr.w	r2, sl, r2
 801fc56:	f895 a000 	ldrb.w	sl, [r5]
 801fc5a:	3901      	subs	r1, #1
 801fc5c:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801fc60:	f82e 2b02 	strh.w	r2, [lr], #2
 801fc64:	b289      	uxth	r1, r1
 801fc66:	e7d7      	b.n	801fc18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801fc68:	4b03      	ldr	r3, [pc, #12]	; (801fc78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801fc6a:	6818      	ldr	r0, [r3, #0]
 801fc6c:	6803      	ldr	r3, [r0, #0]
 801fc6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fc70:	4798      	blx	r3
 801fc72:	b013      	add	sp, #76	; 0x4c
 801fc74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fc78:	20002328 	.word	0x20002328
 801fc7c:	20002322 	.word	0x20002322
 801fc80:	fffff800 	.word	0xfffff800

0801fc84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801fc84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc88:	b09d      	sub	sp, #116	; 0x74
 801fc8a:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801fc8e:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801fc92:	920e      	str	r2, [sp, #56]	; 0x38
 801fc94:	461c      	mov	r4, r3
 801fc96:	4683      	mov	fp, r0
 801fc98:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fc9a:	2a00      	cmp	r2, #0
 801fc9c:	f000 81e0 	beq.w	8020060 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801fca0:	6820      	ldr	r0, [r4, #0]
 801fca2:	6861      	ldr	r1, [r4, #4]
 801fca4:	aa18      	add	r2, sp, #96	; 0x60
 801fca6:	c203      	stmia	r2!, {r0, r1}
 801fca8:	6818      	ldr	r0, [r3, #0]
 801fcaa:	6859      	ldr	r1, [r3, #4]
 801fcac:	aa1a      	add	r2, sp, #104	; 0x68
 801fcae:	c203      	stmia	r2!, {r0, r1}
 801fcb0:	a818      	add	r0, sp, #96	; 0x60
 801fcb2:	f7f8 fea5 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fcb6:	4621      	mov	r1, r4
 801fcb8:	a81a      	add	r0, sp, #104	; 0x68
 801fcba:	f7f8 fee5 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fcbe:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801fcc2:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801fcc6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801fcca:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801fcce:	bfd7      	itett	le
 801fcd0:	b29a      	uxthle	r2, r3
 801fcd2:	2201      	movgt	r2, #1
 801fcd4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801fcd8:	fb91 f2f2 	sdivle	r2, r1, r2
 801fcdc:	9202      	str	r2, [sp, #8]
 801fcde:	9802      	ldr	r0, [sp, #8]
 801fce0:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801fce4:	fb92 f0f0 	sdiv	r0, r2, r0
 801fce8:	b280      	uxth	r0, r0
 801fcea:	900f      	str	r0, [sp, #60]	; 0x3c
 801fcec:	9902      	ldr	r1, [sp, #8]
 801fcee:	9802      	ldr	r0, [sp, #8]
 801fcf0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801fcf2:	440c      	add	r4, r1
 801fcf4:	fb05 2510 	mls	r5, r5, r0, r2
 801fcf8:	fb15 f503 	smulbb	r5, r5, r3
 801fcfc:	3c01      	subs	r4, #1
 801fcfe:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801fd02:	fb94 f4f1 	sdiv	r4, r4, r1
 801fd06:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801fd0a:	440d      	add	r5, r1
 801fd0c:	4419      	add	r1, r3
 801fd0e:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801fd12:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801fd16:	441a      	add	r2, r3
 801fd18:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801fd1c:	9306      	str	r3, [sp, #24]
 801fd1e:	4bb3      	ldr	r3, [pc, #716]	; (801ffec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801fd20:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801fd24:	6818      	ldr	r0, [r3, #0]
 801fd26:	6803      	ldr	r3, [r0, #0]
 801fd28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fd2a:	4798      	blx	r3
 801fd2c:	4bb0      	ldr	r3, [pc, #704]	; (801fff0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801fd2e:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801fd32:	881a      	ldrh	r2, [r3, #0]
 801fd34:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801fd38:	9316      	str	r3, [sp, #88]	; 0x58
 801fd3a:	fb02 7101 	mla	r1, r2, r1, r7
 801fd3e:	3401      	adds	r4, #1
 801fd40:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801fd44:	b2a4      	uxth	r4, r4
 801fd46:	4356      	muls	r6, r2
 801fd48:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801fd4c:	00a4      	lsls	r4, r4, #2
 801fd4e:	920a      	str	r2, [sp, #40]	; 0x28
 801fd50:	1d22      	adds	r2, r4, #4
 801fd52:	b2ad      	uxth	r5, r5
 801fd54:	9213      	str	r2, [sp, #76]	; 0x4c
 801fd56:	4ba7      	ldr	r3, [pc, #668]	; (801fff4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801fd58:	9a06      	ldr	r2, [sp, #24]
 801fd5a:	2d00      	cmp	r5, #0
 801fd5c:	bf0c      	ite	eq
 801fd5e:	4611      	moveq	r1, r2
 801fd60:	2100      	movne	r1, #0
 801fd62:	2200      	movs	r2, #0
 801fd64:	eba3 030b 	sub.w	r3, r3, fp
 801fd68:	b289      	uxth	r1, r1
 801fd6a:	920d      	str	r2, [sp, #52]	; 0x34
 801fd6c:	9317      	str	r3, [sp, #92]	; 0x5c
 801fd6e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fd70:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fd72:	fa12 f383 	uxtah	r3, r2, r3
 801fd76:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801fd78:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801fd7c:	3304      	adds	r3, #4
 801fd7e:	9308      	str	r3, [sp, #32]
 801fd80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fd82:	4543      	cmp	r3, r8
 801fd84:	f240 8167 	bls.w	8020056 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801fd88:	9a02      	ldr	r2, [sp, #8]
 801fd8a:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801fd8e:	fbb5 f3f3 	udiv	r3, r5, r3
 801fd92:	1ad3      	subs	r3, r2, r3
 801fd94:	b29b      	uxth	r3, r3
 801fd96:	9314      	str	r3, [sp, #80]	; 0x50
 801fd98:	9b08      	ldr	r3, [sp, #32]
 801fd9a:	9808      	ldr	r0, [sp, #32]
 801fd9c:	785a      	ldrb	r2, [r3, #1]
 801fd9e:	789b      	ldrb	r3, [r3, #2]
 801fda0:	7800      	ldrb	r0, [r0, #0]
 801fda2:	9010      	str	r0, [sp, #64]	; 0x40
 801fda4:	021b      	lsls	r3, r3, #8
 801fda6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801fdaa:	9a08      	ldr	r2, [sp, #32]
 801fdac:	78d2      	ldrb	r2, [r2, #3]
 801fdae:	4313      	orrs	r3, r2
 801fdb0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801fdb2:	3001      	adds	r0, #1
 801fdb4:	441a      	add	r2, r3
 801fdb6:	9007      	str	r0, [sp, #28]
 801fdb8:	1c50      	adds	r0, r2, #1
 801fdba:	9005      	str	r0, [sp, #20]
 801fdbc:	7852      	ldrb	r2, [r2, #1]
 801fdbe:	9811      	ldr	r0, [sp, #68]	; 0x44
 801fdc0:	0212      	lsls	r2, r2, #8
 801fdc2:	5cc3      	ldrb	r3, [r0, r3]
 801fdc4:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801fdc8:	431a      	orrs	r2, r3
 801fdca:	b293      	uxth	r3, r2
 801fdcc:	930b      	str	r3, [sp, #44]	; 0x2c
 801fdce:	2300      	movs	r3, #0
 801fdd0:	9309      	str	r3, [sp, #36]	; 0x24
 801fdd2:	2301      	movs	r3, #1
 801fdd4:	9301      	str	r3, [sp, #4]
 801fdd6:	9304      	str	r3, [sp, #16]
 801fdd8:	2300      	movs	r3, #0
 801fdda:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801fdde:	9303      	str	r3, [sp, #12]
 801fde0:	f04f 0e01 	mov.w	lr, #1
 801fde4:	2d00      	cmp	r5, #0
 801fde6:	d07c      	beq.n	801fee2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801fde8:	45ae      	cmp	lr, r5
 801fdea:	d26b      	bcs.n	801fec4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801fdec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fdee:	eba5 050e 	sub.w	r5, r5, lr
 801fdf2:	4543      	cmp	r3, r8
 801fdf4:	b2ad      	uxth	r5, r5
 801fdf6:	460c      	mov	r4, r1
 801fdf8:	d802      	bhi.n	801fe00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801fdfa:	e070      	b.n	801fede <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801fdfc:	2b00      	cmp	r3, #0
 801fdfe:	d15c      	bne.n	801feba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801fe00:	9b05      	ldr	r3, [sp, #20]
 801fe02:	9a04      	ldr	r2, [sp, #16]
 801fe04:	785b      	ldrb	r3, [r3, #1]
 801fe06:	9904      	ldr	r1, [sp, #16]
 801fe08:	f1c2 0207 	rsb	r2, r2, #7
 801fe0c:	4093      	lsls	r3, r2
 801fe0e:	005b      	lsls	r3, r3, #1
 801fe10:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801fe14:	9b05      	ldr	r3, [sp, #20]
 801fe16:	781b      	ldrb	r3, [r3, #0]
 801fe18:	410b      	asrs	r3, r1
 801fe1a:	3101      	adds	r1, #1
 801fe1c:	b2c9      	uxtb	r1, r1
 801fe1e:	2908      	cmp	r1, #8
 801fe20:	9104      	str	r1, [sp, #16]
 801fe22:	9905      	ldr	r1, [sp, #20]
 801fe24:	bf0a      	itet	eq
 801fe26:	3102      	addeq	r1, #2
 801fe28:	3101      	addne	r1, #1
 801fe2a:	9105      	streq	r1, [sp, #20]
 801fe2c:	b2db      	uxtb	r3, r3
 801fe2e:	bf0a      	itet	eq
 801fe30:	2100      	moveq	r1, #0
 801fe32:	9105      	strne	r1, [sp, #20]
 801fe34:	9104      	streq	r1, [sp, #16]
 801fe36:	4313      	orrs	r3, r2
 801fe38:	9910      	ldr	r1, [sp, #64]	; 0x40
 801fe3a:	b29a      	uxth	r2, r3
 801fe3c:	4291      	cmp	r1, r2
 801fe3e:	d30a      	bcc.n	801fe56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801fe40:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801fe44:	2301      	movs	r3, #1
 801fe46:	9907      	ldr	r1, [sp, #28]
 801fe48:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801fe4c:	d30f      	bcc.n	801fe6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801fe4e:	2100      	movs	r1, #0
 801fe50:	9301      	str	r3, [sp, #4]
 801fe52:	9103      	str	r1, [sp, #12]
 801fe54:	e032      	b.n	801febc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801fe56:	9b07      	ldr	r3, [sp, #28]
 801fe58:	429a      	cmp	r2, r3
 801fe5a:	d318      	bcc.n	801fe8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801fe5c:	9b01      	ldr	r3, [sp, #4]
 801fe5e:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801fe62:	445b      	add	r3, fp
 801fe64:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801fe68:	9b01      	ldr	r3, [sp, #4]
 801fe6a:	3301      	adds	r3, #1
 801fe6c:	b29b      	uxth	r3, r3
 801fe6e:	9907      	ldr	r1, [sp, #28]
 801fe70:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801fe74:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801fe78:	7108      	strb	r0, [r1, #4]
 801fe7a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801fe7c:	80c8      	strh	r0, [r1, #6]
 801fe7e:	9801      	ldr	r0, [sp, #4]
 801fe80:	3001      	adds	r0, #1
 801fe82:	7148      	strb	r0, [r1, #5]
 801fe84:	9907      	ldr	r1, [sp, #28]
 801fe86:	3101      	adds	r1, #1
 801fe88:	b289      	uxth	r1, r1
 801fe8a:	9107      	str	r1, [sp, #28]
 801fe8c:	e7df      	b.n	801fe4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801fe8e:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801fe92:	4611      	mov	r1, r2
 801fe94:	795b      	ldrb	r3, [r3, #5]
 801fe96:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801fe9a:	4458      	add	r0, fp
 801fe9c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801fe9e:	4406      	add	r6, r0
 801fea0:	2e00      	cmp	r6, #0
 801fea2:	dd06      	ble.n	801feb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801fea4:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801fea8:	790e      	ldrb	r6, [r1, #4]
 801feaa:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801feae:	88c9      	ldrh	r1, [r1, #6]
 801feb0:	e7f4      	b.n	801fe9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801feb2:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801feb6:	b29b      	uxth	r3, r3
 801feb8:	e7c5      	b.n	801fe46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801feba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801febc:	920b      	str	r2, [sp, #44]	; 0x2c
 801febe:	4621      	mov	r1, r4
 801fec0:	469e      	mov	lr, r3
 801fec2:	e78f      	b.n	801fde4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801fec4:	9a03      	ldr	r2, [sp, #12]
 801fec6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801feca:	442a      	add	r2, r5
 801fecc:	ebae 0305 	sub.w	r3, lr, r5
 801fed0:	b292      	uxth	r2, r2
 801fed2:	b29b      	uxth	r3, r3
 801fed4:	9203      	str	r2, [sp, #12]
 801fed6:	2500      	movs	r5, #0
 801fed8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801feda:	4542      	cmp	r2, r8
 801fedc:	d88e      	bhi.n	801fdfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801fede:	4621      	mov	r1, r4
 801fee0:	e74e      	b.n	801fd80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801fee2:	458e      	cmp	lr, r1
 801fee4:	bf29      	itett	cs
 801fee6:	ebae 0301 	subcs.w	r3, lr, r1
 801feea:	eba1 040e 	subcc.w	r4, r1, lr
 801feee:	b29b      	uxthcs	r3, r3
 801fef0:	910c      	strcs	r1, [sp, #48]	; 0x30
 801fef2:	bf2f      	iteee	cs
 801fef4:	462c      	movcs	r4, r5
 801fef6:	b2a4      	uxthcc	r4, r4
 801fef8:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801fefc:	462b      	movcc	r3, r5
 801fefe:	f04f 0900 	mov.w	r9, #0
 801ff02:	9a03      	ldr	r2, [sp, #12]
 801ff04:	980c      	ldr	r0, [sp, #48]	; 0x30
 801ff06:	444a      	add	r2, r9
 801ff08:	4548      	cmp	r0, r9
 801ff0a:	b292      	uxth	r2, r2
 801ff0c:	d074      	beq.n	801fff8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801ff0e:	445a      	add	r2, fp
 801ff10:	2004      	movs	r0, #4
 801ff12:	4605      	mov	r5, r0
 801ff14:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801ff18:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ff1a:	fb15 0202 	smlabb	r2, r5, r2, r0
 801ff1e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ff20:	5880      	ldr	r0, [r0, r2]
 801ff22:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801ff26:	d014      	beq.n	801ff52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801ff28:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801ff2c:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801ff30:	d112      	bne.n	801ff58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801ff32:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ff34:	2aff      	cmp	r2, #255	; 0xff
 801ff36:	d10f      	bne.n	801ff58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801ff38:	0942      	lsrs	r2, r0, #5
 801ff3a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801ff3e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ff42:	f025 0507 	bic.w	r5, r5, #7
 801ff46:	4315      	orrs	r5, r2
 801ff48:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801ff4c:	4305      	orrs	r5, r0
 801ff4e:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801ff52:	f109 0901 	add.w	r9, r9, #1
 801ff56:	e7d4      	b.n	801ff02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801ff58:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801ff5c:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801ff60:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801ff64:	9215      	str	r2, [sp, #84]	; 0x54
 801ff66:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ff68:	fb02 fa0a 	mul.w	sl, r2, sl
 801ff6c:	f10a 0201 	add.w	r2, sl, #1
 801ff70:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801ff74:	ea4f 272c 	mov.w	r7, ip, asr #8
 801ff78:	1212      	asrs	r2, r2, #8
 801ff7a:	fa1f fa82 	uxth.w	sl, r2
 801ff7e:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801ff82:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ff86:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ff8a:	43d2      	mvns	r2, r2
 801ff8c:	b2d2      	uxtb	r2, r2
 801ff8e:	fb16 f60a 	smulbb	r6, r6, sl
 801ff92:	fa5f fc8c 	uxtb.w	ip, ip
 801ff96:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801ff9a:	b2c0      	uxtb	r0, r0
 801ff9c:	fb07 6702 	mla	r7, r7, r2, r6
 801ffa0:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801ffa4:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801ffa6:	fb10 f00a 	smulbb	r0, r0, sl
 801ffaa:	fb0c 0002 	mla	r0, ip, r2, r0
 801ffae:	b2ed      	uxtb	r5, r5
 801ffb0:	b2bf      	uxth	r7, r7
 801ffb2:	fb15 f50a 	smulbb	r5, r5, sl
 801ffb6:	b280      	uxth	r0, r0
 801ffb8:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801ffbc:	fb06 5602 	mla	r6, r6, r2, r5
 801ffc0:	1c7a      	adds	r2, r7, #1
 801ffc2:	1c45      	adds	r5, r0, #1
 801ffc4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ffc8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ffcc:	b2b6      	uxth	r6, r6
 801ffce:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ffd2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ffd6:	432f      	orrs	r7, r5
 801ffd8:	1c75      	adds	r5, r6, #1
 801ffda:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801ffde:	096d      	lsrs	r5, r5, #5
 801ffe0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ffe4:	432f      	orrs	r7, r5
 801ffe6:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801ffea:	e7b2      	b.n	801ff52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801ffec:	20002328 	.word	0x20002328
 801fff0:	20002322 	.word	0x20002322
 801fff4:	fffff7fb 	.word	0xfffff7fb
 801fff8:	9203      	str	r2, [sp, #12]
 801fffa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fffc:	458e      	cmp	lr, r1
 801fffe:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8020002:	f4ff af68 	bcc.w	801fed6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8020006:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8020008:	9906      	ldr	r1, [sp, #24]
 802000a:	8812      	ldrh	r2, [r2, #0]
 802000c:	1a52      	subs	r2, r2, r1
 802000e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8020012:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020014:	9914      	ldr	r1, [sp, #80]	; 0x50
 8020016:	3201      	adds	r2, #1
 8020018:	428a      	cmp	r2, r1
 802001a:	9209      	str	r2, [sp, #36]	; 0x24
 802001c:	d111      	bne.n	8020042 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 802001e:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 8020022:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8020026:	9b06      	ldr	r3, [sp, #24]
 8020028:	eba5 0509 	sub.w	r5, r5, r9
 802002c:	b2ad      	uxth	r5, r5
 802002e:	2d00      	cmp	r5, #0
 8020030:	bf08      	it	eq
 8020032:	4619      	moveq	r1, r3
 8020034:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020036:	bf18      	it	ne
 8020038:	2100      	movne	r1, #0
 802003a:	3301      	adds	r3, #1
 802003c:	930d      	str	r3, [sp, #52]	; 0x34
 802003e:	b289      	uxth	r1, r1
 8020040:	e695      	b.n	801fd6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8020042:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8020046:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 802004a:	1b2d      	subs	r5, r5, r4
 802004c:	b2ad      	uxth	r5, r5
 802004e:	2d00      	cmp	r5, #0
 8020050:	bf18      	it	ne
 8020052:	2400      	movne	r4, #0
 8020054:	e740      	b.n	801fed8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8020056:	4b04      	ldr	r3, [pc, #16]	; (8020068 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8020058:	6818      	ldr	r0, [r3, #0]
 802005a:	6803      	ldr	r3, [r0, #0]
 802005c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802005e:	4798      	blx	r3
 8020060:	b01d      	add	sp, #116	; 0x74
 8020062:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020066:	bf00      	nop
 8020068:	20002328 	.word	0x20002328

0802006c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 802006c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020070:	b09f      	sub	sp, #124	; 0x7c
 8020072:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8020076:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 802007a:	920a      	str	r2, [sp, #40]	; 0x28
 802007c:	461d      	mov	r5, r3
 802007e:	4604      	mov	r4, r0
 8020080:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020082:	2a00      	cmp	r2, #0
 8020084:	f000 81fa 	beq.w	802047c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8020088:	6828      	ldr	r0, [r5, #0]
 802008a:	6869      	ldr	r1, [r5, #4]
 802008c:	aa1a      	add	r2, sp, #104	; 0x68
 802008e:	c203      	stmia	r2!, {r0, r1}
 8020090:	6818      	ldr	r0, [r3, #0]
 8020092:	6859      	ldr	r1, [r3, #4]
 8020094:	aa1c      	add	r2, sp, #112	; 0x70
 8020096:	c203      	stmia	r2!, {r0, r1}
 8020098:	a81a      	add	r0, sp, #104	; 0x68
 802009a:	f7f8 fcb1 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802009e:	4629      	mov	r1, r5
 80200a0:	a81c      	add	r0, sp, #112	; 0x70
 80200a2:	f7f8 fcf1 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80200a6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 80200aa:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 80200ae:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 80200b2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80200b6:	bfd7      	itett	le
 80200b8:	b29a      	uxthle	r2, r3
 80200ba:	2201      	movgt	r2, #1
 80200bc:	f44f 6180 	movle.w	r1, #1024	; 0x400
 80200c0:	fb91 f2f2 	sdivle	r2, r1, r2
 80200c4:	9201      	str	r2, [sp, #4]
 80200c6:	9801      	ldr	r0, [sp, #4]
 80200c8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 80200cc:	fb92 f0f0 	sdiv	r0, r2, r0
 80200d0:	b280      	uxth	r0, r0
 80200d2:	9010      	str	r0, [sp, #64]	; 0x40
 80200d4:	9901      	ldr	r1, [sp, #4]
 80200d6:	9801      	ldr	r0, [sp, #4]
 80200d8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80200da:	440e      	add	r6, r1
 80200dc:	fb05 2510 	mls	r5, r5, r0, r2
 80200e0:	fb15 f503 	smulbb	r5, r5, r3
 80200e4:	3e01      	subs	r6, #1
 80200e6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80200ea:	fb96 f6f1 	sdiv	r6, r6, r1
 80200ee:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 80200f2:	440d      	add	r5, r1
 80200f4:	4419      	add	r1, r3
 80200f6:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 80200fa:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 80200fe:	441a      	add	r2, r3
 8020100:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8020104:	9304      	str	r3, [sp, #16]
 8020106:	4b96      	ldr	r3, [pc, #600]	; (8020360 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8020108:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 802010c:	6818      	ldr	r0, [r3, #0]
 802010e:	6803      	ldr	r3, [r0, #0]
 8020110:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020112:	4798      	blx	r3
 8020114:	4b93      	ldr	r3, [pc, #588]	; (8020364 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8020116:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 802011a:	881a      	ldrh	r2, [r3, #0]
 802011c:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 8020120:	9318      	str	r3, [sp, #96]	; 0x60
 8020122:	fb02 c101 	mla	r1, r2, r1, ip
 8020126:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 802012a:	4357      	muls	r7, r2
 802012c:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8020130:	3601      	adds	r6, #1
 8020132:	920b      	str	r2, [sp, #44]	; 0x2c
 8020134:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020136:	4b8c      	ldr	r3, [pc, #560]	; (8020368 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8020138:	b2b6      	uxth	r6, r6
 802013a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 802013e:	1d32      	adds	r2, r6, #4
 8020140:	9206      	str	r2, [sp, #24]
 8020142:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020144:	43d2      	mvns	r2, r2
 8020146:	b2d2      	uxtb	r2, r2
 8020148:	b2ad      	uxth	r5, r5
 802014a:	9215      	str	r2, [sp, #84]	; 0x54
 802014c:	9a04      	ldr	r2, [sp, #16]
 802014e:	2d00      	cmp	r5, #0
 8020150:	bf0c      	ite	eq
 8020152:	4611      	moveq	r1, r2
 8020154:	2100      	movne	r1, #0
 8020156:	2200      	movs	r2, #0
 8020158:	1b1b      	subs	r3, r3, r4
 802015a:	b289      	uxth	r1, r1
 802015c:	920d      	str	r2, [sp, #52]	; 0x34
 802015e:	9319      	str	r3, [sp, #100]	; 0x64
 8020160:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8020162:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020164:	fa12 f383 	uxtah	r3, r2, r3
 8020168:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802016a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802016e:	3304      	adds	r3, #4
 8020170:	9307      	str	r3, [sp, #28]
 8020172:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020174:	455b      	cmp	r3, fp
 8020176:	f240 817c 	bls.w	8020472 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 802017a:	9a01      	ldr	r2, [sp, #4]
 802017c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8020180:	fbb5 f3f3 	udiv	r3, r5, r3
 8020184:	1ad3      	subs	r3, r2, r3
 8020186:	b29b      	uxth	r3, r3
 8020188:	9316      	str	r3, [sp, #88]	; 0x58
 802018a:	9b07      	ldr	r3, [sp, #28]
 802018c:	9807      	ldr	r0, [sp, #28]
 802018e:	785a      	ldrb	r2, [r3, #1]
 8020190:	789b      	ldrb	r3, [r3, #2]
 8020192:	7800      	ldrb	r0, [r0, #0]
 8020194:	9011      	str	r0, [sp, #68]	; 0x44
 8020196:	021b      	lsls	r3, r3, #8
 8020198:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802019c:	9a07      	ldr	r2, [sp, #28]
 802019e:	78d2      	ldrb	r2, [r2, #3]
 80201a0:	4313      	orrs	r3, r2
 80201a2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80201a4:	3001      	adds	r0, #1
 80201a6:	441a      	add	r2, r3
 80201a8:	9005      	str	r0, [sp, #20]
 80201aa:	1c50      	adds	r0, r2, #1
 80201ac:	9003      	str	r0, [sp, #12]
 80201ae:	7852      	ldrb	r2, [r2, #1]
 80201b0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80201b2:	0212      	lsls	r2, r2, #8
 80201b4:	5cc3      	ldrb	r3, [r0, r3]
 80201b6:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 80201ba:	431a      	orrs	r2, r3
 80201bc:	b293      	uxth	r3, r2
 80201be:	930c      	str	r3, [sp, #48]	; 0x30
 80201c0:	2300      	movs	r3, #0
 80201c2:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 80201c6:	9308      	str	r3, [sp, #32]
 80201c8:	461a      	mov	r2, r3
 80201ca:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80201ce:	930e      	str	r3, [sp, #56]	; 0x38
 80201d0:	f04f 0801 	mov.w	r8, #1
 80201d4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80201d8:	f8cd 8008 	str.w	r8, [sp, #8]
 80201dc:	46c4      	mov	ip, r8
 80201de:	930f      	str	r3, [sp, #60]	; 0x3c
 80201e0:	2d00      	cmp	r5, #0
 80201e2:	d07c      	beq.n	80202de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80201e4:	45ac      	cmp	ip, r5
 80201e6:	d26c      	bcs.n	80202c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 80201e8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80201ea:	eba5 050c 	sub.w	r5, r5, ip
 80201ee:	455b      	cmp	r3, fp
 80201f0:	b2ad      	uxth	r5, r5
 80201f2:	4608      	mov	r0, r1
 80201f4:	d802      	bhi.n	80201fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80201f6:	e070      	b.n	80202da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 80201f8:	2b00      	cmp	r3, #0
 80201fa:	d15c      	bne.n	80202b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80201fc:	9b03      	ldr	r3, [sp, #12]
 80201fe:	9a02      	ldr	r2, [sp, #8]
 8020200:	785b      	ldrb	r3, [r3, #1]
 8020202:	9902      	ldr	r1, [sp, #8]
 8020204:	f1c2 0207 	rsb	r2, r2, #7
 8020208:	4093      	lsls	r3, r2
 802020a:	005b      	lsls	r3, r3, #1
 802020c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8020210:	9b03      	ldr	r3, [sp, #12]
 8020212:	781b      	ldrb	r3, [r3, #0]
 8020214:	410b      	asrs	r3, r1
 8020216:	3101      	adds	r1, #1
 8020218:	b2c9      	uxtb	r1, r1
 802021a:	2908      	cmp	r1, #8
 802021c:	9102      	str	r1, [sp, #8]
 802021e:	9903      	ldr	r1, [sp, #12]
 8020220:	bf0a      	itet	eq
 8020222:	3102      	addeq	r1, #2
 8020224:	3101      	addne	r1, #1
 8020226:	9103      	streq	r1, [sp, #12]
 8020228:	b2db      	uxtb	r3, r3
 802022a:	bf0a      	itet	eq
 802022c:	2100      	moveq	r1, #0
 802022e:	9103      	strne	r1, [sp, #12]
 8020230:	9102      	streq	r1, [sp, #8]
 8020232:	4313      	orrs	r3, r2
 8020234:	9911      	ldr	r1, [sp, #68]	; 0x44
 8020236:	b29a      	uxth	r2, r3
 8020238:	4291      	cmp	r1, r2
 802023a:	d30a      	bcc.n	8020252 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 802023c:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8020240:	2301      	movs	r3, #1
 8020242:	9905      	ldr	r1, [sp, #20]
 8020244:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8020248:	d30f      	bcc.n	802026a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 802024a:	2100      	movs	r1, #0
 802024c:	4698      	mov	r8, r3
 802024e:	9100      	str	r1, [sp, #0]
 8020250:	e032      	b.n	80202b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 8020252:	9b05      	ldr	r3, [sp, #20]
 8020254:	429a      	cmp	r2, r3
 8020256:	d318      	bcc.n	802028a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8020258:	eb04 0308 	add.w	r3, r4, r8
 802025c:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 8020260:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8020264:	f108 0301 	add.w	r3, r8, #1
 8020268:	b29b      	uxth	r3, r3
 802026a:	9905      	ldr	r1, [sp, #20]
 802026c:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8020270:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8020274:	710e      	strb	r6, [r1, #4]
 8020276:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020278:	80ce      	strh	r6, [r1, #6]
 802027a:	f108 0601 	add.w	r6, r8, #1
 802027e:	714e      	strb	r6, [r1, #5]
 8020280:	9905      	ldr	r1, [sp, #20]
 8020282:	3101      	adds	r1, #1
 8020284:	b289      	uxth	r1, r1
 8020286:	9105      	str	r1, [sp, #20]
 8020288:	e7df      	b.n	802024a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 802028a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 802028e:	4611      	mov	r1, r2
 8020290:	795b      	ldrb	r3, [r3, #5]
 8020292:	f603 0604 	addw	r6, r3, #2052	; 0x804
 8020296:	4426      	add	r6, r4
 8020298:	9f19      	ldr	r7, [sp, #100]	; 0x64
 802029a:	4437      	add	r7, r6
 802029c:	2f00      	cmp	r7, #0
 802029e:	dd06      	ble.n	80202ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 80202a0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80202a4:	790f      	ldrb	r7, [r1, #4]
 80202a6:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80202aa:	88c9      	ldrh	r1, [r1, #6]
 80202ac:	e7f4      	b.n	8020298 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 80202ae:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 80202b2:	b29b      	uxth	r3, r3
 80202b4:	e7c5      	b.n	8020242 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80202b6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80202b8:	920c      	str	r2, [sp, #48]	; 0x30
 80202ba:	4601      	mov	r1, r0
 80202bc:	9a00      	ldr	r2, [sp, #0]
 80202be:	469c      	mov	ip, r3
 80202c0:	e78e      	b.n	80201e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 80202c2:	1957      	adds	r7, r2, r5
 80202c4:	ebac 0305 	sub.w	r3, ip, r5
 80202c8:	b2ba      	uxth	r2, r7
 80202ca:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80202ce:	9200      	str	r2, [sp, #0]
 80202d0:	b29b      	uxth	r3, r3
 80202d2:	2500      	movs	r5, #0
 80202d4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80202d6:	455a      	cmp	r2, fp
 80202d8:	d88e      	bhi.n	80201f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 80202da:	4601      	mov	r1, r0
 80202dc:	e749      	b.n	8020172 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 80202de:	458c      	cmp	ip, r1
 80202e0:	bf2c      	ite	cs
 80202e2:	4628      	movcs	r0, r5
 80202e4:	462b      	movcc	r3, r5
 80202e6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80202e8:	bf27      	ittee	cs
 80202ea:	9109      	strcs	r1, [sp, #36]	; 0x24
 80202ec:	ebac 0301 	subcs.w	r3, ip, r1
 80202f0:	eba1 000c 	subcc.w	r0, r1, ip
 80202f4:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 80202f8:	bf2c      	ite	cs
 80202fa:	b29b      	uxthcs	r3, r3
 80202fc:	b280      	uxthcc	r0, r0
 80202fe:	2dff      	cmp	r5, #255	; 0xff
 8020300:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8020302:	eb02 0705 	add.w	r7, r2, r5
 8020306:	b2bd      	uxth	r5, r7
 8020308:	9500      	str	r5, [sp, #0]
 802030a:	d12f      	bne.n	802036c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 802030c:	465e      	mov	r6, fp
 802030e:	9d00      	ldr	r5, [sp, #0]
 8020310:	42aa      	cmp	r2, r5
 8020312:	f040 8084 	bne.w	802041e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 8020316:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020318:	458c      	cmp	ip, r1
 802031a:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 802031e:	d3d8      	bcc.n	80202d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8020320:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8020322:	9904      	ldr	r1, [sp, #16]
 8020324:	8812      	ldrh	r2, [r2, #0]
 8020326:	1a52      	subs	r2, r2, r1
 8020328:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 802032c:	9a08      	ldr	r2, [sp, #32]
 802032e:	9916      	ldr	r1, [sp, #88]	; 0x58
 8020330:	3201      	adds	r2, #1
 8020332:	428a      	cmp	r2, r1
 8020334:	9208      	str	r2, [sp, #32]
 8020336:	f040 8092 	bne.w	802045e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 802033a:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 802033e:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 8020342:	9b04      	ldr	r3, [sp, #16]
 8020344:	eba5 050c 	sub.w	r5, r5, ip
 8020348:	b2ad      	uxth	r5, r5
 802034a:	2d00      	cmp	r5, #0
 802034c:	bf08      	it	eq
 802034e:	4619      	moveq	r1, r3
 8020350:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020352:	bf18      	it	ne
 8020354:	2100      	movne	r1, #0
 8020356:	3301      	adds	r3, #1
 8020358:	930d      	str	r3, [sp, #52]	; 0x34
 802035a:	b289      	uxth	r1, r1
 802035c:	e700      	b.n	8020160 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802035e:	bf00      	nop
 8020360:	20002328 	.word	0x20002328
 8020364:	20002322 	.word	0x20002322
 8020368:	fffff7fb 	.word	0xfffff7fb
 802036c:	46d9      	mov	r9, fp
 802036e:	9d00      	ldr	r5, [sp, #0]
 8020370:	42aa      	cmp	r2, r5
 8020372:	d0d0      	beq.n	8020316 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 8020374:	1c55      	adds	r5, r2, #1
 8020376:	4422      	add	r2, r4
 8020378:	9517      	str	r5, [sp, #92]	; 0x5c
 802037a:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 802037e:	9a06      	ldr	r2, [sp, #24]
 8020380:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8020384:	4472      	add	r2, lr
 8020386:	9212      	str	r2, [sp, #72]	; 0x48
 8020388:	9f12      	ldr	r7, [sp, #72]	; 0x48
 802038a:	f8b9 2000 	ldrh.w	r2, [r9]
 802038e:	f897 a002 	ldrb.w	sl, [r7, #2]
 8020392:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8020394:	1216      	asrs	r6, r2, #8
 8020396:	fb1a fa07 	smulbb	sl, sl, r7
 802039a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 802039e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80203a0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80203a4:	fb06 a607 	mla	r6, r6, r7, sl
 80203a8:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80203aa:	f897 a001 	ldrb.w	sl, [r7, #1]
 80203ae:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80203b0:	10d5      	asrs	r5, r2, #3
 80203b2:	fb1a fa07 	smulbb	sl, sl, r7
 80203b6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80203ba:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80203bc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80203c0:	fb05 a507 	mla	r5, r5, r7, sl
 80203c4:	9f06      	ldr	r7, [sp, #24]
 80203c6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80203ca:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80203cc:	00d2      	lsls	r2, r2, #3
 80203ce:	fb1e fe07 	smulbb	lr, lr, r7
 80203d2:	b2d2      	uxtb	r2, r2
 80203d4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80203d6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80203da:	b2b6      	uxth	r6, r6
 80203dc:	fb02 e207 	mla	r2, r2, r7, lr
 80203e0:	b292      	uxth	r2, r2
 80203e2:	b2ad      	uxth	r5, r5
 80203e4:	f106 0a01 	add.w	sl, r6, #1
 80203e8:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80203ec:	f102 0e01 	add.w	lr, r2, #1
 80203f0:	f105 0a01 	add.w	sl, r5, #1
 80203f4:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 80203f8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80203fc:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8020400:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020404:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020408:	ea4e 0606 	orr.w	r6, lr, r6
 802040c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020410:	ea46 060a 	orr.w	r6, r6, sl
 8020414:	f829 6b02 	strh.w	r6, [r9], #2
 8020418:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 802041c:	e7a7      	b.n	802036e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 802041e:	f102 0e01 	add.w	lr, r2, #1
 8020422:	4422      	add	r2, r4
 8020424:	9f06      	ldr	r7, [sp, #24]
 8020426:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 802042a:	9a06      	ldr	r2, [sp, #24]
 802042c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020430:	eb02 0a05 	add.w	sl, r2, r5
 8020434:	4a13      	ldr	r2, [pc, #76]	; (8020484 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 8020436:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802043a:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 802043e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020442:	00d2      	lsls	r2, r2, #3
 8020444:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020448:	ea49 0202 	orr.w	r2, r9, r2
 802044c:	f817 9005 	ldrb.w	r9, [r7, r5]
 8020450:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020454:	f826 2b02 	strh.w	r2, [r6], #2
 8020458:	fa1f f28e 	uxth.w	r2, lr
 802045c:	e757      	b.n	802030e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 802045e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8020462:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 8020466:	1a2d      	subs	r5, r5, r0
 8020468:	b2ad      	uxth	r5, r5
 802046a:	2d00      	cmp	r5, #0
 802046c:	bf18      	it	ne
 802046e:	2000      	movne	r0, #0
 8020470:	e730      	b.n	80202d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8020472:	4b05      	ldr	r3, [pc, #20]	; (8020488 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 8020474:	6818      	ldr	r0, [r3, #0]
 8020476:	6803      	ldr	r3, [r0, #0]
 8020478:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802047a:	4798      	blx	r3
 802047c:	b01f      	add	sp, #124	; 0x7c
 802047e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020482:	bf00      	nop
 8020484:	fffff800 	.word	0xfffff800
 8020488:	20002328 	.word	0x20002328

0802048c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 802048c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020490:	b091      	sub	sp, #68	; 0x44
 8020492:	469b      	mov	fp, r3
 8020494:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8020498:	4616      	mov	r6, r2
 802049a:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 802049e:	f9b3 2000 	ldrsh.w	r2, [r3]
 80204a2:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 80204a6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80204aa:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80204ae:	4604      	mov	r4, r0
 80204b0:	460d      	mov	r5, r1
 80204b2:	4640      	mov	r0, r8
 80204b4:	4659      	mov	r1, fp
 80204b6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80204ba:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80204be:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 80204c2:	f7f2 fc4d 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 80204c6:	4631      	mov	r1, r6
 80204c8:	4640      	mov	r0, r8
 80204ca:	f7f2 fc49 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 80204ce:	4b74      	ldr	r3, [pc, #464]	; (80206a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80204d0:	8818      	ldrh	r0, [r3, #0]
 80204d2:	4b74      	ldr	r3, [pc, #464]	; (80206a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80204d4:	8819      	ldrh	r1, [r3, #0]
 80204d6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80204da:	2b00      	cmp	r3, #0
 80204dc:	b202      	sxth	r2, r0
 80204de:	b20e      	sxth	r6, r1
 80204e0:	da07      	bge.n	80204f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80204e2:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80204e6:	4463      	add	r3, ip
 80204e8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80204ec:	2300      	movs	r3, #0
 80204ee:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80204f2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80204f6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80204fa:	1ad2      	subs	r2, r2, r3
 80204fc:	4594      	cmp	ip, r2
 80204fe:	bfc4      	itt	gt
 8020500:	1ac2      	subgt	r2, r0, r3
 8020502:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 8020506:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 802050a:	2a00      	cmp	r2, #0
 802050c:	da07      	bge.n	802051e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 802050e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8020512:	4462      	add	r2, ip
 8020514:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8020518:	2200      	movs	r2, #0
 802051a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 802051e:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8020522:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8020526:	eba6 060a 	sub.w	r6, r6, sl
 802052a:	42b2      	cmp	r2, r6
 802052c:	bfc4      	itt	gt
 802052e:	eba1 020a 	subgt.w	r2, r1, sl
 8020532:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 8020536:	4a5c      	ldr	r2, [pc, #368]	; (80206a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8020538:	7812      	ldrb	r2, [r2, #0]
 802053a:	b9a2      	cbnz	r2, 8020566 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 802053c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8020540:	4286      	cmp	r6, r0
 8020542:	4640      	mov	r0, r8
 8020544:	9303      	str	r3, [sp, #12]
 8020546:	bf14      	ite	ne
 8020548:	2600      	movne	r6, #0
 802054a:	2601      	moveq	r6, #1
 802054c:	f7f2 fc4b 	bl	8012de6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8020550:	9b03      	ldr	r3, [sp, #12]
 8020552:	b160      	cbz	r0, 802056e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8020554:	2300      	movs	r3, #0
 8020556:	8023      	strh	r3, [r4, #0]
 8020558:	8063      	strh	r3, [r4, #2]
 802055a:	80a3      	strh	r3, [r4, #4]
 802055c:	4620      	mov	r0, r4
 802055e:	80e3      	strh	r3, [r4, #6]
 8020560:	b011      	add	sp, #68	; 0x44
 8020562:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020566:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 802056a:	428e      	cmp	r6, r1
 802056c:	e7e9      	b.n	8020542 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 802056e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8020572:	9205      	str	r2, [sp, #20]
 8020574:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8020578:	9206      	str	r2, [sp, #24]
 802057a:	f8bb 2000 	ldrh.w	r2, [fp]
 802057e:	900e      	str	r0, [sp, #56]	; 0x38
 8020580:	1a9b      	subs	r3, r3, r2
 8020582:	b21b      	sxth	r3, r3
 8020584:	9303      	str	r3, [sp, #12]
 8020586:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802058a:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 802058e:	ebaa 0a03 	sub.w	sl, sl, r3
 8020592:	fa0f f38a 	sxth.w	r3, sl
 8020596:	9304      	str	r3, [sp, #16]
 8020598:	9b03      	ldr	r3, [sp, #12]
 802059a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 802059e:	9b04      	ldr	r3, [sp, #16]
 80205a0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80205a4:	9b05      	ldr	r3, [sp, #20]
 80205a6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80205aa:	a90e      	add	r1, sp, #56	; 0x38
 80205ac:	9b06      	ldr	r3, [sp, #24]
 80205ae:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80205b2:	a80c      	add	r0, sp, #48	; 0x30
 80205b4:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 80205b8:	f7f8 fa66 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80205bc:	4640      	mov	r0, r8
 80205be:	f7f8 fa1f 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80205c2:	a80e      	add	r0, sp, #56	; 0x38
 80205c4:	f7f8 fa1c 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80205c8:	4b38      	ldr	r3, [pc, #224]	; (80206ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80205ca:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 80205ce:	881b      	ldrh	r3, [r3, #0]
 80205d0:	9307      	str	r3, [sp, #28]
 80205d2:	682b      	ldr	r3, [r5, #0]
 80205d4:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 80206b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80205d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80205da:	4628      	mov	r0, r5
 80205dc:	4798      	blx	r3
 80205de:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 80205e2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80205e6:	4681      	mov	r9, r0
 80205e8:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80205ec:	f8db 0000 	ldr.w	r0, [fp]
 80205f0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80205f2:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80205f6:	6803      	ldr	r3, [r0, #0]
 80205f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80205fa:	4798      	blx	r3
 80205fc:	4607      	mov	r7, r0
 80205fe:	f8db 0000 	ldr.w	r0, [fp]
 8020602:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8020606:	6803      	ldr	r3, [r0, #0]
 8020608:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 802060c:	9109      	str	r1, [sp, #36]	; 0x24
 802060e:	9208      	str	r2, [sp, #32]
 8020610:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020612:	4798      	blx	r3
 8020614:	f010 0f01 	tst.w	r0, #1
 8020618:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 802061c:	d012      	beq.n	8020644 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 802061e:	f8db 0000 	ldr.w	r0, [fp]
 8020622:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8020626:	6803      	ldr	r3, [r0, #0]
 8020628:	9200      	str	r2, [sp, #0]
 802062a:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 802062c:	e898 0006 	ldmia.w	r8, {r1, r2}
 8020630:	462b      	mov	r3, r5
 8020632:	47b0      	blx	r6
 8020634:	9b03      	ldr	r3, [sp, #12]
 8020636:	8023      	strh	r3, [r4, #0]
 8020638:	9b04      	ldr	r3, [sp, #16]
 802063a:	8063      	strh	r3, [r4, #2]
 802063c:	9b05      	ldr	r3, [sp, #20]
 802063e:	80a3      	strh	r3, [r4, #4]
 8020640:	9b06      	ldr	r3, [sp, #24]
 8020642:	e78b      	b.n	802055c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8020644:	fb09 f202 	mul.w	r2, r9, r2
 8020648:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 802064c:	440f      	add	r7, r1
 802064e:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8020652:	b166      	cbz	r6, 802066e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8020654:	9a07      	ldr	r2, [sp, #28]
 8020656:	4592      	cmp	sl, r2
 8020658:	d109      	bne.n	802066e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 802065a:	f8db 0000 	ldr.w	r0, [fp]
 802065e:	6802      	ldr	r2, [r0, #0]
 8020660:	fb09 f303 	mul.w	r3, r9, r3
 8020664:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8020666:	4629      	mov	r1, r5
 8020668:	463a      	mov	r2, r7
 802066a:	47b0      	blx	r6
 802066c:	e7e2      	b.n	8020634 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 802066e:	fb0a f303 	mul.w	r3, sl, r3
 8020672:	f8df b03c 	ldr.w	fp, [pc, #60]	; 80206b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8020676:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 802067a:	ea4f 064a 	mov.w	r6, sl, lsl #1
 802067e:	4545      	cmp	r5, r8
 8020680:	d2d8      	bcs.n	8020634 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8020682:	f8db 0000 	ldr.w	r0, [fp]
 8020686:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802068a:	6802      	ldr	r2, [r0, #0]
 802068c:	4629      	mov	r1, r5
 802068e:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8020692:	005b      	lsls	r3, r3, #1
 8020694:	463a      	mov	r2, r7
 8020696:	47d0      	blx	sl
 8020698:	444f      	add	r7, r9
 802069a:	4435      	add	r5, r6
 802069c:	e7ef      	b.n	802067e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 802069e:	bf00      	nop
 80206a0:	2000231c 	.word	0x2000231c
 80206a4:	2000231e 	.word	0x2000231e
 80206a8:	20002320 	.word	0x20002320
 80206ac:	20002322 	.word	0x20002322
 80206b0:	20002328 	.word	0x20002328

080206b4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80206b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80206b6:	4606      	mov	r6, r0
 80206b8:	b087      	sub	sp, #28
 80206ba:	460c      	mov	r4, r1
 80206bc:	4617      	mov	r7, r2
 80206be:	461d      	mov	r5, r3
 80206c0:	b333      	cbz	r3, 8020710 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80206c2:	4608      	mov	r0, r1
 80206c4:	f7f2 fb8f 	bl	8012de6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80206c8:	bb10      	cbnz	r0, 8020710 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80206ca:	6820      	ldr	r0, [r4, #0]
 80206cc:	6861      	ldr	r1, [r4, #4]
 80206ce:	4c1c      	ldr	r4, [pc, #112]	; (8020740 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80206d0:	ab04      	add	r3, sp, #16
 80206d2:	c303      	stmia	r3!, {r0, r1}
 80206d4:	a804      	add	r0, sp, #16
 80206d6:	f7f8 f993 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80206da:	6820      	ldr	r0, [r4, #0]
 80206dc:	6803      	ldr	r3, [r0, #0]
 80206de:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80206e0:	4798      	blx	r3
 80206e2:	2dff      	cmp	r5, #255	; 0xff
 80206e4:	d016      	beq.n	8020714 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80206e6:	f010 0f08 	tst.w	r0, #8
 80206ea:	6820      	ldr	r0, [r4, #0]
 80206ec:	d015      	beq.n	802071a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80206ee:	2400      	movs	r4, #0
 80206f0:	6801      	ldr	r1, [r0, #0]
 80206f2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80206f6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80206fa:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80206fe:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8020702:	9401      	str	r4, [sp, #4]
 8020704:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8020708:	9400      	str	r4, [sp, #0]
 802070a:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 802070c:	4639      	mov	r1, r7
 802070e:	47a0      	blx	r4
 8020710:	b007      	add	sp, #28
 8020712:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020714:	f010 0f02 	tst.w	r0, #2
 8020718:	e7e7      	b.n	80206ea <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 802071a:	6803      	ldr	r3, [r0, #0]
 802071c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802071e:	4798      	blx	r3
 8020720:	4b08      	ldr	r3, [pc, #32]	; (8020744 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8020722:	881a      	ldrh	r2, [r3, #0]
 8020724:	6833      	ldr	r3, [r6, #0]
 8020726:	e9cd 7500 	strd	r7, r5, [sp]
 802072a:	4601      	mov	r1, r0
 802072c:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 802072e:	4630      	mov	r0, r6
 8020730:	ab04      	add	r3, sp, #16
 8020732:	47a8      	blx	r5
 8020734:	6820      	ldr	r0, [r4, #0]
 8020736:	6803      	ldr	r3, [r0, #0]
 8020738:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802073a:	4798      	blx	r3
 802073c:	e7e8      	b.n	8020710 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 802073e:	bf00      	nop
 8020740:	20002328 	.word	0x20002328
 8020744:	20002322 	.word	0x20002322

08020748 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8020748:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802074c:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8020750:	9e08      	ldr	r6, [sp, #32]
 8020752:	4688      	mov	r8, r1
 8020754:	4614      	mov	r4, r2
 8020756:	461d      	mov	r5, r3
 8020758:	2f00      	cmp	r7, #0
 802075a:	f000 80a9 	beq.w	80208b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 802075e:	4618      	mov	r0, r3
 8020760:	f7f2 fb41 	bl	8012de6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8020764:	2800      	cmp	r0, #0
 8020766:	f040 80a3 	bne.w	80208b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 802076a:	f9b5 1000 	ldrsh.w	r1, [r5]
 802076e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8020772:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8020776:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 802077a:	fb04 1303 	mla	r3, r4, r3, r1
 802077e:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8020782:	4365      	muls	r5, r4
 8020784:	2fff      	cmp	r7, #255	; 0xff
 8020786:	eba4 0200 	sub.w	r2, r4, r0
 802078a:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 802078e:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8020792:	d04a      	beq.n	802082a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8020794:	b2bc      	uxth	r4, r7
 8020796:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 802079a:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 802079e:	fa5f f788 	uxtb.w	r7, r8
 80207a2:	b2f3      	uxtb	r3, r6
 80207a4:	0040      	lsls	r0, r0, #1
 80207a6:	fb0e fe04 	mul.w	lr, lr, r4
 80207aa:	4367      	muls	r7, r4
 80207ac:	4363      	muls	r3, r4
 80207ae:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80207b2:	fa1f fc8c 	uxth.w	ip, ip
 80207b6:	42a9      	cmp	r1, r5
 80207b8:	d27a      	bcs.n	80208b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80207ba:	eb01 0900 	add.w	r9, r1, r0
 80207be:	4549      	cmp	r1, r9
 80207c0:	d231      	bcs.n	8020826 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 80207c2:	880a      	ldrh	r2, [r1, #0]
 80207c4:	1214      	asrs	r4, r2, #8
 80207c6:	10d6      	asrs	r6, r2, #3
 80207c8:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80207cc:	00d2      	lsls	r2, r2, #3
 80207ce:	b2d2      	uxtb	r2, r2
 80207d0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80207d4:	fb14 f40c 	smulbb	r4, r4, ip
 80207d8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80207dc:	4474      	add	r4, lr
 80207de:	fb12 f20c 	smulbb	r2, r2, ip
 80207e2:	b2a4      	uxth	r4, r4
 80207e4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80207e8:	441a      	add	r2, r3
 80207ea:	b292      	uxth	r2, r2
 80207ec:	f104 0a01 	add.w	sl, r4, #1
 80207f0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80207f4:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80207f8:	fb16 f60c 	smulbb	r6, r6, ip
 80207fc:	f102 0a01 	add.w	sl, r2, #1
 8020800:	443e      	add	r6, r7
 8020802:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8020806:	b2b6      	uxth	r6, r6
 8020808:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802080c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020810:	4322      	orrs	r2, r4
 8020812:	1c74      	adds	r4, r6, #1
 8020814:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8020818:	0976      	lsrs	r6, r6, #5
 802081a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 802081e:	4332      	orrs	r2, r6
 8020820:	f821 2b02 	strh.w	r2, [r1], #2
 8020824:	e7cb      	b.n	80207be <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8020826:	4441      	add	r1, r8
 8020828:	e7c5      	b.n	80207b6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 802082a:	4f22      	ldr	r7, [pc, #136]	; (80208b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 802082c:	0973      	lsrs	r3, r6, #5
 802082e:	ea08 0707 	and.w	r7, r8, r7
 8020832:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020836:	433b      	orrs	r3, r7
 8020838:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 802083c:	4333      	orrs	r3, r6
 802083e:	07e7      	lsls	r7, r4, #31
 8020840:	b29b      	uxth	r3, r3
 8020842:	d50b      	bpl.n	802085c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8020844:	0040      	lsls	r0, r0, #1
 8020846:	0052      	lsls	r2, r2, #1
 8020848:	42a9      	cmp	r1, r5
 802084a:	d231      	bcs.n	80208b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 802084c:	180c      	adds	r4, r1, r0
 802084e:	42a1      	cmp	r1, r4
 8020850:	d202      	bcs.n	8020858 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8020852:	f821 3b02 	strh.w	r3, [r1], #2
 8020856:	e7fa      	b.n	802084e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8020858:	4411      	add	r1, r2
 802085a:	e7f5      	b.n	8020848 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 802085c:	078e      	lsls	r6, r1, #30
 802085e:	d008      	beq.n	8020872 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8020860:	0066      	lsls	r6, r4, #1
 8020862:	460a      	mov	r2, r1
 8020864:	42aa      	cmp	r2, r5
 8020866:	d202      	bcs.n	802086e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8020868:	8013      	strh	r3, [r2, #0]
 802086a:	4432      	add	r2, r6
 802086c:	e7fa      	b.n	8020864 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 802086e:	3102      	adds	r1, #2
 8020870:	3801      	subs	r0, #1
 8020872:	07c2      	lsls	r2, r0, #31
 8020874:	d50b      	bpl.n	802088e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8020876:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 802087a:	3a01      	subs	r2, #1
 802087c:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8020880:	0066      	lsls	r6, r4, #1
 8020882:	42aa      	cmp	r2, r5
 8020884:	d202      	bcs.n	802088c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8020886:	8013      	strh	r3, [r2, #0]
 8020888:	4432      	add	r2, r6
 802088a:	e7fa      	b.n	8020882 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 802088c:	3801      	subs	r0, #1
 802088e:	b178      	cbz	r0, 80208b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020890:	1040      	asrs	r0, r0, #1
 8020892:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8020896:	0080      	lsls	r0, r0, #2
 8020898:	0064      	lsls	r4, r4, #1
 802089a:	42a9      	cmp	r1, r5
 802089c:	d208      	bcs.n	80208b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 802089e:	180e      	adds	r6, r1, r0
 80208a0:	460a      	mov	r2, r1
 80208a2:	42b2      	cmp	r2, r6
 80208a4:	d202      	bcs.n	80208ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 80208a6:	f842 3b04 	str.w	r3, [r2], #4
 80208aa:	e7fa      	b.n	80208a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 80208ac:	4421      	add	r1, r4
 80208ae:	e7f4      	b.n	802089a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 80208b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80208b4:	00fff800 	.word	0x00fff800

080208b8 <_ZN8touchgfx8LCD16bppC1Ev>:
 80208b8:	2200      	movs	r2, #0
 80208ba:	4912      	ldr	r1, [pc, #72]	; (8020904 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 80208bc:	6042      	str	r2, [r0, #4]
 80208be:	6001      	str	r1, [r0, #0]
 80208c0:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80208c4:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80208c8:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80208cc:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80208d0:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80208d4:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80208d8:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80208dc:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80208e0:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80208e4:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80208e8:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80208ec:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80208f0:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80208f4:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80208f8:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 80208fc:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8020900:	4770      	bx	lr
 8020902:	bf00      	nop
 8020904:	0802fc14 	.word	0x0802fc14

08020908 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8020908:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802090c:	460d      	mov	r5, r1
 802090e:	b08d      	sub	sp, #52	; 0x34
 8020910:	4604      	mov	r4, r0
 8020912:	6808      	ldr	r0, [r1, #0]
 8020914:	6849      	ldr	r1, [r1, #4]
 8020916:	4699      	mov	r9, r3
 8020918:	ab08      	add	r3, sp, #32
 802091a:	c303      	stmia	r3!, {r0, r1}
 802091c:	6810      	ldr	r0, [r2, #0]
 802091e:	6851      	ldr	r1, [r2, #4]
 8020920:	ab0a      	add	r3, sp, #40	; 0x28
 8020922:	c303      	stmia	r3!, {r0, r1}
 8020924:	a808      	add	r0, sp, #32
 8020926:	f7f8 f86b 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802092a:	4629      	mov	r1, r5
 802092c:	a80a      	add	r0, sp, #40	; 0x28
 802092e:	f7f8 f8ab 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020932:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8020936:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 802093a:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 802093e:	4d63      	ldr	r5, [pc, #396]	; (8020acc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8020940:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8020944:	6828      	ldr	r0, [r5, #0]
 8020946:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 802094a:	fb11 2103 	smlabb	r1, r1, r3, r2
 802094e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8020952:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8020956:	440a      	add	r2, r1
 8020958:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802095c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8020960:	4413      	add	r3, r2
 8020962:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8020966:	6803      	ldr	r3, [r0, #0]
 8020968:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 802096a:	4798      	blx	r3
 802096c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020970:	d119      	bne.n	80209a6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8020972:	f010 0f20 	tst.w	r0, #32
 8020976:	6828      	ldr	r0, [r5, #0]
 8020978:	d018      	beq.n	80209ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 802097a:	2500      	movs	r5, #0
 802097c:	6801      	ldr	r1, [r0, #0]
 802097e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8020982:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8020986:	e9cd 9503 	strd	r9, r5, [sp, #12]
 802098a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 802098e:	9502      	str	r5, [sp, #8]
 8020990:	b2b6      	uxth	r6, r6
 8020992:	fa1f f588 	uxth.w	r5, r8
 8020996:	9601      	str	r6, [sp, #4]
 8020998:	9500      	str	r5, [sp, #0]
 802099a:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 802099c:	4621      	mov	r1, r4
 802099e:	47a8      	blx	r5
 80209a0:	b00d      	add	sp, #52	; 0x34
 80209a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80209a6:	f010 0f40 	tst.w	r0, #64	; 0x40
 80209aa:	e7e4      	b.n	8020976 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80209ac:	6803      	ldr	r3, [r0, #0]
 80209ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80209b0:	4798      	blx	r3
 80209b2:	4947      	ldr	r1, [pc, #284]	; (8020ad0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80209b4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80209b8:	880b      	ldrh	r3, [r1, #0]
 80209ba:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80209be:	fb03 5202 	mla	r2, r3, r2, r5
 80209c2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80209c6:	4373      	muls	r3, r6
 80209c8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80209cc:	9307      	str	r3, [sp, #28]
 80209ce:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80209d2:	9306      	str	r3, [sp, #24]
 80209d4:	468a      	mov	sl, r1
 80209d6:	9b07      	ldr	r3, [sp, #28]
 80209d8:	4298      	cmp	r0, r3
 80209da:	d270      	bcs.n	8020abe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80209dc:	9b06      	ldr	r3, [sp, #24]
 80209de:	4621      	mov	r1, r4
 80209e0:	eb00 0b03 	add.w	fp, r0, r3
 80209e4:	4558      	cmp	r0, fp
 80209e6:	d25d      	bcs.n	8020aa4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80209e8:	f851 4b04 	ldr.w	r4, [r1], #4
 80209ec:	0e23      	lsrs	r3, r4, #24
 80209ee:	d014      	beq.n	8020a1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80209f0:	2bff      	cmp	r3, #255	; 0xff
 80209f2:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80209f6:	d112      	bne.n	8020a1e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80209f8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80209fc:	d10f      	bne.n	8020a1e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80209fe:	0963      	lsrs	r3, r4, #5
 8020a00:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8020a04:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020a08:	f02c 0c07 	bic.w	ip, ip, #7
 8020a0c:	ea43 0c0c 	orr.w	ip, r3, ip
 8020a10:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8020a14:	ea4c 0404 	orr.w	r4, ip, r4
 8020a18:	8004      	strh	r4, [r0, #0]
 8020a1a:	3002      	adds	r0, #2
 8020a1c:	e7e2      	b.n	80209e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8020a1e:	fb09 f303 	mul.w	r3, r9, r3
 8020a22:	8807      	ldrh	r7, [r0, #0]
 8020a24:	1c5a      	adds	r2, r3, #1
 8020a26:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8020a2a:	1212      	asrs	r2, r2, #8
 8020a2c:	123e      	asrs	r6, r7, #8
 8020a2e:	b293      	uxth	r3, r2
 8020a30:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8020a34:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020a38:	43d2      	mvns	r2, r2
 8020a3a:	b2d2      	uxtb	r2, r2
 8020a3c:	10fd      	asrs	r5, r7, #3
 8020a3e:	fb1e fe03 	smulbb	lr, lr, r3
 8020a42:	00ff      	lsls	r7, r7, #3
 8020a44:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8020a48:	fb06 e602 	mla	r6, r6, r2, lr
 8020a4c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020a50:	b2ff      	uxtb	r7, r7
 8020a52:	fa5f fc8c 	uxtb.w	ip, ip
 8020a56:	b2e4      	uxtb	r4, r4
 8020a58:	b2b6      	uxth	r6, r6
 8020a5a:	fb1c fc03 	smulbb	ip, ip, r3
 8020a5e:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020a62:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8020a66:	fb14 f403 	smulbb	r4, r4, r3
 8020a6a:	fb05 c502 	mla	r5, r5, r2, ip
 8020a6e:	f106 0e01 	add.w	lr, r6, #1
 8020a72:	fb07 4702 	mla	r7, r7, r2, r4
 8020a76:	b2ad      	uxth	r5, r5
 8020a78:	b2bf      	uxth	r7, r7
 8020a7a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8020a7e:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8020a82:	f105 0c01 	add.w	ip, r5, #1
 8020a86:	1c7e      	adds	r6, r7, #1
 8020a88:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8020a8c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020a90:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8020a94:	096d      	lsrs	r5, r5, #5
 8020a96:	ea46 060e 	orr.w	r6, r6, lr
 8020a9a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020a9e:	432e      	orrs	r6, r5
 8020aa0:	8006      	strh	r6, [r0, #0]
 8020aa2:	e7ba      	b.n	8020a1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8020aa4:	f8ba 3000 	ldrh.w	r3, [sl]
 8020aa8:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8020aac:	eba3 0308 	sub.w	r3, r3, r8
 8020ab0:	eba4 0408 	sub.w	r4, r4, r8
 8020ab4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020ab8:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8020abc:	e78b      	b.n	80209d6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8020abe:	4b03      	ldr	r3, [pc, #12]	; (8020acc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8020ac0:	6818      	ldr	r0, [r3, #0]
 8020ac2:	6803      	ldr	r3, [r0, #0]
 8020ac4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020ac6:	4798      	blx	r3
 8020ac8:	e76a      	b.n	80209a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8020aca:	bf00      	nop
 8020acc:	20002328 	.word	0x20002328
 8020ad0:	20002322 	.word	0x20002322

08020ad4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8020ad4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8020ad8:	460c      	mov	r4, r1
 8020ada:	b085      	sub	sp, #20
 8020adc:	6810      	ldr	r0, [r2, #0]
 8020ade:	6851      	ldr	r1, [r2, #4]
 8020ae0:	466d      	mov	r5, sp
 8020ae2:	c503      	stmia	r5!, {r0, r1}
 8020ae4:	6818      	ldr	r0, [r3, #0]
 8020ae6:	6859      	ldr	r1, [r3, #4]
 8020ae8:	4616      	mov	r6, r2
 8020aea:	c503      	stmia	r5!, {r0, r1}
 8020aec:	4668      	mov	r0, sp
 8020aee:	f7f7 ff87 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020af2:	4631      	mov	r1, r6
 8020af4:	a802      	add	r0, sp, #8
 8020af6:	f7f7 ffc7 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020afa:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8020afe:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8020b02:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8020b06:	4d28      	ldr	r5, [pc, #160]	; (8020ba8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8020b08:	4e28      	ldr	r6, [pc, #160]	; (8020bac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8020b0a:	6828      	ldr	r0, [r5, #0]
 8020b0c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8020b10:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8020b14:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020b18:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8020b1c:	f8bd 1000 	ldrh.w	r1, [sp]
 8020b20:	440a      	add	r2, r1
 8020b22:	f8ad 2008 	strh.w	r2, [sp, #8]
 8020b26:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8020b2a:	4413      	add	r3, r2
 8020b2c:	f8ad 300a 	strh.w	r3, [sp, #10]
 8020b30:	6803      	ldr	r3, [r0, #0]
 8020b32:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020b34:	4798      	blx	r3
 8020b36:	8833      	ldrh	r3, [r6, #0]
 8020b38:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8020b3c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8020b40:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8020bb0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8020b44:	fb03 1202 	mla	r2, r3, r2, r1
 8020b48:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020b4c:	fb08 f303 	mul.w	r3, r8, r3
 8020b50:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020b54:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8020b58:	4298      	cmp	r0, r3
 8020b5a:	d21d      	bcs.n	8020b98 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8020b5c:	eb00 080c 	add.w	r8, r0, ip
 8020b60:	4540      	cmp	r0, r8
 8020b62:	d20f      	bcs.n	8020b84 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8020b64:	f854 1b04 	ldr.w	r1, [r4], #4
 8020b68:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8020b6c:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8020b70:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020b74:	ea42 0209 	orr.w	r2, r2, r9
 8020b78:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020b7c:	430a      	orrs	r2, r1
 8020b7e:	f820 2b02 	strh.w	r2, [r0], #2
 8020b82:	e7ed      	b.n	8020b60 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8020b84:	8832      	ldrh	r2, [r6, #0]
 8020b86:	1bd2      	subs	r2, r2, r7
 8020b88:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020b8c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8020b90:	1bd2      	subs	r2, r2, r7
 8020b92:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8020b96:	e7df      	b.n	8020b58 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8020b98:	6828      	ldr	r0, [r5, #0]
 8020b9a:	6803      	ldr	r3, [r0, #0]
 8020b9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020b9e:	4798      	blx	r3
 8020ba0:	b005      	add	sp, #20
 8020ba2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8020ba6:	bf00      	nop
 8020ba8:	20002328 	.word	0x20002328
 8020bac:	20002322 	.word	0x20002322
 8020bb0:	fffff800 	.word	0xfffff800

08020bb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8020bb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020bb8:	460e      	mov	r6, r1
 8020bba:	b08e      	sub	sp, #56	; 0x38
 8020bbc:	4604      	mov	r4, r0
 8020bbe:	6808      	ldr	r0, [r1, #0]
 8020bc0:	6849      	ldr	r1, [r1, #4]
 8020bc2:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8020d9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8020bc6:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8020da0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8020bca:	461d      	mov	r5, r3
 8020bcc:	ab0a      	add	r3, sp, #40	; 0x28
 8020bce:	c303      	stmia	r3!, {r0, r1}
 8020bd0:	6810      	ldr	r0, [r2, #0]
 8020bd2:	6851      	ldr	r1, [r2, #4]
 8020bd4:	ab0c      	add	r3, sp, #48	; 0x30
 8020bd6:	c303      	stmia	r3!, {r0, r1}
 8020bd8:	a80a      	add	r0, sp, #40	; 0x28
 8020bda:	f7f7 ff11 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020bde:	4631      	mov	r1, r6
 8020be0:	a80c      	add	r0, sp, #48	; 0x30
 8020be2:	f7f7 ff51 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020be6:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8020bea:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8020bee:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8020bf2:	f8d8 0000 	ldr.w	r0, [r8]
 8020bf6:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8020bfa:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8020bfe:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020c02:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020c06:	440c      	add	r4, r1
 8020c08:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8020c0c:	440a      	add	r2, r1
 8020c0e:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8020c12:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8020c16:	4413      	add	r3, r2
 8020c18:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8020c1c:	6803      	ldr	r3, [r0, #0]
 8020c1e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020c20:	4798      	blx	r3
 8020c22:	2dff      	cmp	r5, #255	; 0xff
 8020c24:	d124      	bne.n	8020c70 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8020c26:	f010 0f01 	tst.w	r0, #1
 8020c2a:	f8d8 0000 	ldr.w	r0, [r8]
 8020c2e:	d022      	beq.n	8020c76 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8020c30:	2100      	movs	r1, #0
 8020c32:	f8d0 c000 	ldr.w	ip, [r0]
 8020c36:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8020c3a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8020c3e:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8020c42:	f04f 0e01 	mov.w	lr, #1
 8020c46:	f8cd e018 	str.w	lr, [sp, #24]
 8020c4a:	f8b9 e000 	ldrh.w	lr, [r9]
 8020c4e:	9503      	str	r5, [sp, #12]
 8020c50:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8020c54:	b2b6      	uxth	r6, r6
 8020c56:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8020c5a:	9102      	str	r1, [sp, #8]
 8020c5c:	b2bf      	uxth	r7, r7
 8020c5e:	9601      	str	r6, [sp, #4]
 8020c60:	9700      	str	r7, [sp, #0]
 8020c62:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8020c66:	4621      	mov	r1, r4
 8020c68:	47a8      	blx	r5
 8020c6a:	b00e      	add	sp, #56	; 0x38
 8020c6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020c70:	f010 0f04 	tst.w	r0, #4
 8020c74:	e7d9      	b.n	8020c2a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8020c76:	6803      	ldr	r3, [r0, #0]
 8020c78:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020c7a:	4798      	blx	r3
 8020c7c:	f8b9 3000 	ldrh.w	r3, [r9]
 8020c80:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8020c84:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8020c88:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8020c8c:	fb03 1202 	mla	r2, r3, r2, r1
 8020c90:	ebac 0c07 	sub.w	ip, ip, r7
 8020c94:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020c98:	435e      	muls	r6, r3
 8020c9a:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8020c9e:	2dff      	cmp	r5, #255	; 0xff
 8020ca0:	eba3 0707 	sub.w	r7, r3, r7
 8020ca4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8020ca8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8020cac:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8020cb0:	d049      	beq.n	8020d46 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8020cb2:	43eb      	mvns	r3, r5
 8020cb4:	fa1f f985 	uxth.w	r9, r5
 8020cb8:	b2db      	uxtb	r3, r3
 8020cba:	42b0      	cmp	r0, r6
 8020cbc:	d266      	bcs.n	8020d8c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8020cbe:	eb00 0a0e 	add.w	sl, r0, lr
 8020cc2:	4550      	cmp	r0, sl
 8020cc4:	4621      	mov	r1, r4
 8020cc6:	f104 0403 	add.w	r4, r4, #3
 8020cca:	d25b      	bcs.n	8020d84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8020ccc:	8802      	ldrh	r2, [r0, #0]
 8020cce:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8020cd2:	ea4f 2822 	mov.w	r8, r2, asr #8
 8020cd6:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8020cda:	fb11 f109 	smulbb	r1, r1, r9
 8020cde:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8020ce2:	10d5      	asrs	r5, r2, #3
 8020ce4:	fb08 1803 	mla	r8, r8, r3, r1
 8020ce8:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8020cec:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020cf0:	fb11 f109 	smulbb	r1, r1, r9
 8020cf4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020cf8:	fb05 1503 	mla	r5, r5, r3, r1
 8020cfc:	00d2      	lsls	r2, r2, #3
 8020cfe:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8020d02:	b2d2      	uxtb	r2, r2
 8020d04:	fb11 f109 	smulbb	r1, r1, r9
 8020d08:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020d0c:	fa1f f888 	uxth.w	r8, r8
 8020d10:	fb02 1203 	mla	r2, r2, r3, r1
 8020d14:	b292      	uxth	r2, r2
 8020d16:	f108 0101 	add.w	r1, r8, #1
 8020d1a:	b2ad      	uxth	r5, r5
 8020d1c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8020d20:	1c51      	adds	r1, r2, #1
 8020d22:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020d26:	1c69      	adds	r1, r5, #1
 8020d28:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8020d2c:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8020d30:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020d34:	096d      	lsrs	r5, r5, #5
 8020d36:	ea42 0208 	orr.w	r2, r2, r8
 8020d3a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020d3e:	432a      	orrs	r2, r5
 8020d40:	f820 2b02 	strh.w	r2, [r0], #2
 8020d44:	e7bd      	b.n	8020cc2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8020d46:	4a14      	ldr	r2, [pc, #80]	; (8020d98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8020d48:	42b0      	cmp	r0, r6
 8020d4a:	d21f      	bcs.n	8020d8c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8020d4c:	eb00 050e 	add.w	r5, r0, lr
 8020d50:	42a8      	cmp	r0, r5
 8020d52:	4621      	mov	r1, r4
 8020d54:	f104 0403 	add.w	r4, r4, #3
 8020d58:	d210      	bcs.n	8020d7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8020d5a:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8020d5e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8020d62:	00db      	lsls	r3, r3, #3
 8020d64:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8020d68:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020d6c:	430b      	orrs	r3, r1
 8020d6e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8020d72:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8020d76:	f820 3b02 	strh.w	r3, [r0], #2
 8020d7a:	e7e9      	b.n	8020d50 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8020d7c:	4438      	add	r0, r7
 8020d7e:	eb01 040c 	add.w	r4, r1, ip
 8020d82:	e7e1      	b.n	8020d48 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8020d84:	4438      	add	r0, r7
 8020d86:	eb01 040c 	add.w	r4, r1, ip
 8020d8a:	e796      	b.n	8020cba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8020d8c:	4b03      	ldr	r3, [pc, #12]	; (8020d9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8020d8e:	6818      	ldr	r0, [r3, #0]
 8020d90:	6803      	ldr	r3, [r0, #0]
 8020d92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020d94:	4798      	blx	r3
 8020d96:	e768      	b.n	8020c6a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8020d98:	fffff800 	.word	0xfffff800
 8020d9c:	20002328 	.word	0x20002328
 8020da0:	20002322 	.word	0x20002322

08020da4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8020da4:	b4f0      	push	{r4, r5, r6, r7}
 8020da6:	4616      	mov	r6, r2
 8020da8:	2e01      	cmp	r6, #1
 8020daa:	461c      	mov	r4, r3
 8020dac:	460d      	mov	r5, r1
 8020dae:	9a04      	ldr	r2, [sp, #16]
 8020db0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8020db4:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8020db8:	d012      	beq.n	8020de0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8020dba:	d303      	bcc.n	8020dc4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8020dbc:	2e02      	cmp	r6, #2
 8020dbe:	d00a      	beq.n	8020dd6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8020dc0:	bcf0      	pop	{r4, r5, r6, r7}
 8020dc2:	4770      	bx	lr
 8020dc4:	6805      	ldr	r5, [r0, #0]
 8020dc6:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8020dca:	68ed      	ldr	r5, [r5, #12]
 8020dcc:	4613      	mov	r3, r2
 8020dce:	46ac      	mov	ip, r5
 8020dd0:	4622      	mov	r2, r4
 8020dd2:	bcf0      	pop	{r4, r5, r6, r7}
 8020dd4:	4760      	bx	ip
 8020dd6:	4621      	mov	r1, r4
 8020dd8:	4628      	mov	r0, r5
 8020dda:	bcf0      	pop	{r4, r5, r6, r7}
 8020ddc:	f7ff bd94 	b.w	8020908 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020de0:	4621      	mov	r1, r4
 8020de2:	4628      	mov	r0, r5
 8020de4:	bcf0      	pop	{r4, r5, r6, r7}
 8020de6:	f7ff bee5 	b.w	8020bb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08020dec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8020dec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020df0:	4681      	mov	r9, r0
 8020df2:	b093      	sub	sp, #76	; 0x4c
 8020df4:	6810      	ldr	r0, [r2, #0]
 8020df6:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8020dfa:	4f6d      	ldr	r7, [pc, #436]	; (8020fb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8020dfc:	4688      	mov	r8, r1
 8020dfe:	6851      	ldr	r1, [r2, #4]
 8020e00:	ac0e      	add	r4, sp, #56	; 0x38
 8020e02:	c403      	stmia	r4!, {r0, r1}
 8020e04:	6818      	ldr	r0, [r3, #0]
 8020e06:	6859      	ldr	r1, [r3, #4]
 8020e08:	ac10      	add	r4, sp, #64	; 0x40
 8020e0a:	4616      	mov	r6, r2
 8020e0c:	c403      	stmia	r4!, {r0, r1}
 8020e0e:	a80e      	add	r0, sp, #56	; 0x38
 8020e10:	f7f7 fdf6 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020e14:	4631      	mov	r1, r6
 8020e16:	a810      	add	r0, sp, #64	; 0x40
 8020e18:	f7f7 fe36 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020e1c:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8020e20:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8020e24:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8020e28:	4e62      	ldr	r6, [pc, #392]	; (8020fb4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8020e2a:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8020e2e:	6830      	ldr	r0, [r6, #0]
 8020e30:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8020e34:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020e38:	4489      	add	r9, r1
 8020e3a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8020e3e:	440a      	add	r2, r1
 8020e40:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8020e44:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8020e48:	4413      	add	r3, r2
 8020e4a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8020e4e:	6803      	ldr	r3, [r0, #0]
 8020e50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020e52:	4798      	blx	r3
 8020e54:	f010 0f80 	tst.w	r0, #128	; 0x80
 8020e58:	6830      	ldr	r0, [r6, #0]
 8020e5a:	d01d      	beq.n	8020e98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8020e5c:	2200      	movs	r2, #0
 8020e5e:	6801      	ldr	r1, [r0, #0]
 8020e60:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8020e64:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8020e68:	220b      	movs	r2, #11
 8020e6a:	9207      	str	r2, [sp, #28]
 8020e6c:	883a      	ldrh	r2, [r7, #0]
 8020e6e:	9206      	str	r2, [sp, #24]
 8020e70:	2201      	movs	r2, #1
 8020e72:	e9cd a204 	strd	sl, r2, [sp, #16]
 8020e76:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8020e7a:	9203      	str	r2, [sp, #12]
 8020e7c:	b2a4      	uxth	r4, r4
 8020e7e:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8020e82:	9200      	str	r2, [sp, #0]
 8020e84:	b2ad      	uxth	r5, r5
 8020e86:	9502      	str	r5, [sp, #8]
 8020e88:	9401      	str	r4, [sp, #4]
 8020e8a:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8020e8c:	4642      	mov	r2, r8
 8020e8e:	4649      	mov	r1, r9
 8020e90:	47a0      	blx	r4
 8020e92:	b013      	add	sp, #76	; 0x4c
 8020e94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020e98:	6803      	ldr	r3, [r0, #0]
 8020e9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020e9c:	4798      	blx	r3
 8020e9e:	883b      	ldrh	r3, [r7, #0]
 8020ea0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8020ea4:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8020ea8:	fb03 1202 	mla	r2, r3, r2, r1
 8020eac:	435d      	muls	r5, r3
 8020eae:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020eb2:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8020eb6:	920c      	str	r2, [sp, #48]	; 0x30
 8020eb8:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8020ebc:	1b12      	subs	r2, r2, r4
 8020ebe:	920d      	str	r2, [sp, #52]	; 0x34
 8020ec0:	0062      	lsls	r2, r4, #1
 8020ec2:	1b1c      	subs	r4, r3, r4
 8020ec4:	0063      	lsls	r3, r4, #1
 8020ec6:	920a      	str	r2, [sp, #40]	; 0x28
 8020ec8:	930b      	str	r3, [sp, #44]	; 0x2c
 8020eca:	f04f 0e04 	mov.w	lr, #4
 8020ece:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020ed0:	4298      	cmp	r0, r3
 8020ed2:	d266      	bcs.n	8020fa2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8020ed4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020ed6:	eb00 0b03 	add.w	fp, r0, r3
 8020eda:	4558      	cmp	r0, fp
 8020edc:	d25c      	bcs.n	8020f98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8020ede:	f819 3b01 	ldrb.w	r3, [r9], #1
 8020ee2:	fb1e e303 	smlabb	r3, lr, r3, lr
 8020ee6:	f858 2003 	ldr.w	r2, [r8, r3]
 8020eea:	0e11      	lsrs	r1, r2, #24
 8020eec:	d012      	beq.n	8020f14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8020eee:	29ff      	cmp	r1, #255	; 0xff
 8020ef0:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8020ef4:	d110      	bne.n	8020f18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8020ef6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8020efa:	d10d      	bne.n	8020f18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8020efc:	0953      	lsrs	r3, r2, #5
 8020efe:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8020f02:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020f06:	f027 0707 	bic.w	r7, r7, #7
 8020f0a:	431f      	orrs	r7, r3
 8020f0c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020f10:	433a      	orrs	r2, r7
 8020f12:	8002      	strh	r2, [r0, #0]
 8020f14:	3002      	adds	r0, #2
 8020f16:	e7e0      	b.n	8020eda <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8020f18:	fb0a f101 	mul.w	r1, sl, r1
 8020f1c:	8806      	ldrh	r6, [r0, #0]
 8020f1e:	1c4b      	adds	r3, r1, #1
 8020f20:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8020f24:	1235      	asrs	r5, r6, #8
 8020f26:	10f4      	asrs	r4, r6, #3
 8020f28:	121b      	asrs	r3, r3, #8
 8020f2a:	00f6      	lsls	r6, r6, #3
 8020f2c:	b299      	uxth	r1, r3
 8020f2e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8020f32:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020f36:	b2f6      	uxtb	r6, r6
 8020f38:	43db      	mvns	r3, r3
 8020f3a:	b2d2      	uxtb	r2, r2
 8020f3c:	b2db      	uxtb	r3, r3
 8020f3e:	fb1c fc01 	smulbb	ip, ip, r1
 8020f42:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8020f46:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8020f4a:	fb12 f201 	smulbb	r2, r2, r1
 8020f4e:	fb05 c503 	mla	r5, r5, r3, ip
 8020f52:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8020f56:	b2ff      	uxtb	r7, r7
 8020f58:	fb06 2203 	mla	r2, r6, r3, r2
 8020f5c:	b2ad      	uxth	r5, r5
 8020f5e:	fb17 f701 	smulbb	r7, r7, r1
 8020f62:	b292      	uxth	r2, r2
 8020f64:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8020f68:	fb04 7403 	mla	r4, r4, r3, r7
 8020f6c:	f105 0c01 	add.w	ip, r5, #1
 8020f70:	1c57      	adds	r7, r2, #1
 8020f72:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020f76:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8020f7a:	b2a4      	uxth	r4, r4
 8020f7c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020f80:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020f84:	433d      	orrs	r5, r7
 8020f86:	1c67      	adds	r7, r4, #1
 8020f88:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8020f8c:	0964      	lsrs	r4, r4, #5
 8020f8e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020f92:	4325      	orrs	r5, r4
 8020f94:	8005      	strh	r5, [r0, #0]
 8020f96:	e7bd      	b.n	8020f14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8020f98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020f9a:	4418      	add	r0, r3
 8020f9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020f9e:	4499      	add	r9, r3
 8020fa0:	e795      	b.n	8020ece <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8020fa2:	4b04      	ldr	r3, [pc, #16]	; (8020fb4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8020fa4:	6818      	ldr	r0, [r3, #0]
 8020fa6:	6803      	ldr	r3, [r0, #0]
 8020fa8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020faa:	4798      	blx	r3
 8020fac:	e771      	b.n	8020e92 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8020fae:	bf00      	nop
 8020fb0:	20002322 	.word	0x20002322
 8020fb4:	20002328 	.word	0x20002328

08020fb8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8020fb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020fbc:	b087      	sub	sp, #28
 8020fbe:	4680      	mov	r8, r0
 8020fc0:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8020fc4:	460d      	mov	r5, r1
 8020fc6:	4614      	mov	r4, r2
 8020fc8:	2e00      	cmp	r6, #0
 8020fca:	f000 80b9 	beq.w	8021140 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8020fce:	6810      	ldr	r0, [r2, #0]
 8020fd0:	6851      	ldr	r1, [r2, #4]
 8020fd2:	af02      	add	r7, sp, #8
 8020fd4:	c703      	stmia	r7!, {r0, r1}
 8020fd6:	6818      	ldr	r0, [r3, #0]
 8020fd8:	6859      	ldr	r1, [r3, #4]
 8020fda:	af04      	add	r7, sp, #16
 8020fdc:	c703      	stmia	r7!, {r0, r1}
 8020fde:	a802      	add	r0, sp, #8
 8020fe0:	f7f7 fd0e 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020fe4:	4621      	mov	r1, r4
 8020fe6:	a804      	add	r0, sp, #16
 8020fe8:	f7f7 fd4e 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020fec:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8020ff0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8020ff4:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8020ff8:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8020ffc:	fb14 2103 	smlabb	r1, r4, r3, r2
 8021000:	eb08 0401 	add.w	r4, r8, r1
 8021004:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8021008:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 802100c:	440a      	add	r2, r1
 802100e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8021012:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8021016:	4413      	add	r3, r2
 8021018:	f8ad 3012 	strh.w	r3, [sp, #18]
 802101c:	4b4a      	ldr	r3, [pc, #296]	; (8021148 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 802101e:	6818      	ldr	r0, [r3, #0]
 8021020:	6803      	ldr	r3, [r0, #0]
 8021022:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021024:	4798      	blx	r3
 8021026:	4b49      	ldr	r3, [pc, #292]	; (802114c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8021028:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 802102c:	881a      	ldrh	r2, [r3, #0]
 802102e:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8021032:	2eff      	cmp	r6, #255	; 0xff
 8021034:	fb02 c101 	mla	r1, r2, r1, ip
 8021038:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 802103c:	fb02 f207 	mul.w	r2, r2, r7
 8021040:	f105 0104 	add.w	r1, r5, #4
 8021044:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8021048:	461d      	mov	r5, r3
 802104a:	d05a      	beq.n	8021102 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 802104c:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8021050:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8021054:	b2b6      	uxth	r6, r6
 8021056:	fa1f fe8e 	uxth.w	lr, lr
 802105a:	9301      	str	r3, [sp, #4]
 802105c:	4282      	cmp	r2, r0
 802105e:	d96a      	bls.n	8021136 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8021060:	eb00 0b0a 	add.w	fp, r0, sl
 8021064:	4583      	cmp	fp, r0
 8021066:	d940      	bls.n	80210ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8021068:	f814 3b01 	ldrb.w	r3, [r4], #1
 802106c:	8805      	ldrh	r5, [r0, #0]
 802106e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8021072:	122f      	asrs	r7, r5, #8
 8021074:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8021078:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 802107c:	fb17 f70e 	smulbb	r7, r7, lr
 8021080:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8021084:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8021088:	00ed      	lsls	r5, r5, #3
 802108a:	fb0c 7c06 	mla	ip, ip, r6, r7
 802108e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8021092:	10df      	asrs	r7, r3, #3
 8021094:	b2ed      	uxtb	r5, r5
 8021096:	00db      	lsls	r3, r3, #3
 8021098:	fa1f fc8c 	uxth.w	ip, ip
 802109c:	fb19 f90e 	smulbb	r9, r9, lr
 80210a0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80210a4:	b2db      	uxtb	r3, r3
 80210a6:	fb15 f50e 	smulbb	r5, r5, lr
 80210aa:	fb07 9706 	mla	r7, r7, r6, r9
 80210ae:	fb03 5306 	mla	r3, r3, r6, r5
 80210b2:	f10c 0901 	add.w	r9, ip, #1
 80210b6:	b29b      	uxth	r3, r3
 80210b8:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80210bc:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 80210c0:	f103 0c01 	add.w	ip, r3, #1
 80210c4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80210c8:	b2bf      	uxth	r7, r7
 80210ca:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80210ce:	ea4c 0c09 	orr.w	ip, ip, r9
 80210d2:	f107 0901 	add.w	r9, r7, #1
 80210d6:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80210da:	097f      	lsrs	r7, r7, #5
 80210dc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80210e0:	ea4c 0c07 	orr.w	ip, ip, r7
 80210e4:	f820 cb02 	strh.w	ip, [r0], #2
 80210e8:	e7bc      	b.n	8021064 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 80210ea:	9b01      	ldr	r3, [sp, #4]
 80210ec:	881b      	ldrh	r3, [r3, #0]
 80210ee:	eba3 0308 	sub.w	r3, r3, r8
 80210f2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80210f6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80210fa:	eba3 0308 	sub.w	r3, r3, r8
 80210fe:	441c      	add	r4, r3
 8021100:	e7ac      	b.n	802105c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8021102:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8021106:	4282      	cmp	r2, r0
 8021108:	d915      	bls.n	8021136 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 802110a:	eb00 060a 	add.w	r6, r0, sl
 802110e:	4286      	cmp	r6, r0
 8021110:	d906      	bls.n	8021120 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8021112:	f814 3b01 	ldrb.w	r3, [r4], #1
 8021116:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 802111a:	f820 3b02 	strh.w	r3, [r0], #2
 802111e:	e7f6      	b.n	802110e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8021120:	882b      	ldrh	r3, [r5, #0]
 8021122:	eba3 0308 	sub.w	r3, r3, r8
 8021126:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802112a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 802112e:	eba3 0308 	sub.w	r3, r3, r8
 8021132:	441c      	add	r4, r3
 8021134:	e7e7      	b.n	8021106 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8021136:	4b04      	ldr	r3, [pc, #16]	; (8021148 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8021138:	6818      	ldr	r0, [r3, #0]
 802113a:	6803      	ldr	r3, [r0, #0]
 802113c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802113e:	4798      	blx	r3
 8021140:	b007      	add	sp, #28
 8021142:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021146:	bf00      	nop
 8021148:	20002328 	.word	0x20002328
 802114c:	20002322 	.word	0x20002322

08021150 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8021150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021154:	b091      	sub	sp, #68	; 0x44
 8021156:	4680      	mov	r8, r0
 8021158:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 802115c:	460f      	mov	r7, r1
 802115e:	4614      	mov	r4, r2
 8021160:	2d00      	cmp	r5, #0
 8021162:	d051      	beq.n	8021208 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8021164:	6810      	ldr	r0, [r2, #0]
 8021166:	6851      	ldr	r1, [r2, #4]
 8021168:	f8df 9200 	ldr.w	r9, [pc, #512]	; 802136c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 802116c:	ae0c      	add	r6, sp, #48	; 0x30
 802116e:	c603      	stmia	r6!, {r0, r1}
 8021170:	6818      	ldr	r0, [r3, #0]
 8021172:	6859      	ldr	r1, [r3, #4]
 8021174:	ae0e      	add	r6, sp, #56	; 0x38
 8021176:	c603      	stmia	r6!, {r0, r1}
 8021178:	a80c      	add	r0, sp, #48	; 0x30
 802117a:	f7f7 fc41 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802117e:	4621      	mov	r1, r4
 8021180:	a80e      	add	r0, sp, #56	; 0x38
 8021182:	f7f7 fc81 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021186:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 802118a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 802118e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8021192:	f8d9 0000 	ldr.w	r0, [r9]
 8021196:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 802119a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 802119e:	fb11 2103 	smlabb	r1, r1, r3, r2
 80211a2:	eb08 0401 	add.w	r4, r8, r1
 80211a6:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 80211aa:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8021370 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 80211ae:	440a      	add	r2, r1
 80211b0:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80211b4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80211b8:	4413      	add	r3, r2
 80211ba:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80211be:	6803      	ldr	r3, [r0, #0]
 80211c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80211c2:	4798      	blx	r3
 80211c4:	f010 0f80 	tst.w	r0, #128	; 0x80
 80211c8:	f8d9 0000 	ldr.w	r0, [r9]
 80211cc:	d01f      	beq.n	802120e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 80211ce:	2200      	movs	r2, #0
 80211d0:	6801      	ldr	r1, [r0, #0]
 80211d2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80211d6:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80211da:	220b      	movs	r2, #11
 80211dc:	9207      	str	r2, [sp, #28]
 80211de:	f8b8 2000 	ldrh.w	r2, [r8]
 80211e2:	9206      	str	r2, [sp, #24]
 80211e4:	2201      	movs	r2, #1
 80211e6:	e9cd 5204 	strd	r5, r2, [sp, #16]
 80211ea:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80211ee:	9203      	str	r2, [sp, #12]
 80211f0:	fa1f f28a 	uxth.w	r2, sl
 80211f4:	9202      	str	r2, [sp, #8]
 80211f6:	b2b6      	uxth	r6, r6
 80211f8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80211fc:	9200      	str	r2, [sp, #0]
 80211fe:	9601      	str	r6, [sp, #4]
 8021200:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8021202:	463a      	mov	r2, r7
 8021204:	4621      	mov	r1, r4
 8021206:	47a8      	blx	r5
 8021208:	b011      	add	sp, #68	; 0x44
 802120a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802120e:	6803      	ldr	r3, [r0, #0]
 8021210:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021212:	4798      	blx	r3
 8021214:	f8b8 2000 	ldrh.w	r2, [r8]
 8021218:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 802121c:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8021220:	2dff      	cmp	r5, #255	; 0xff
 8021222:	fb02 1303 	mla	r3, r2, r3, r1
 8021226:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802122a:	ea4f 0946 	mov.w	r9, r6, lsl #1
 802122e:	fb0a fa02 	mul.w	sl, sl, r2
 8021232:	d062      	beq.n	80212fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8021234:	ea6f 0c05 	mvn.w	ip, r5
 8021238:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 802123c:	930a      	str	r3, [sp, #40]	; 0x28
 802123e:	b2ad      	uxth	r5, r5
 8021240:	fa5f fc8c 	uxtb.w	ip, ip
 8021244:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8021248:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802124a:	4298      	cmp	r0, r3
 802124c:	f080 8085 	bcs.w	802135a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8021250:	eb00 0b09 	add.w	fp, r0, r9
 8021254:	4558      	cmp	r0, fp
 8021256:	d246      	bcs.n	80212e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8021258:	f814 eb01 	ldrb.w	lr, [r4], #1
 802125c:	2303      	movs	r3, #3
 802125e:	2204      	movs	r2, #4
 8021260:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8021264:	eb07 0a0e 	add.w	sl, r7, lr
 8021268:	8803      	ldrh	r3, [r0, #0]
 802126a:	f89a 8002 	ldrb.w	r8, [sl, #2]
 802126e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8021272:	1219      	asrs	r1, r3, #8
 8021274:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021278:	fb18 f805 	smulbb	r8, r8, r5
 802127c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8021280:	10da      	asrs	r2, r3, #3
 8021282:	fb01 810c 	mla	r1, r1, ip, r8
 8021286:	00db      	lsls	r3, r3, #3
 8021288:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802128c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021290:	b2db      	uxtb	r3, r3
 8021292:	fb18 f805 	smulbb	r8, r8, r5
 8021296:	fb1e fe05 	smulbb	lr, lr, r5
 802129a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 802129e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80212a2:	b289      	uxth	r1, r1
 80212a4:	fb02 820c 	mla	r2, r2, ip, r8
 80212a8:	fb03 e30c 	mla	r3, r3, ip, lr
 80212ac:	b292      	uxth	r2, r2
 80212ae:	b29b      	uxth	r3, r3
 80212b0:	f101 0801 	add.w	r8, r1, #1
 80212b4:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80212b8:	f103 0e01 	add.w	lr, r3, #1
 80212bc:	f102 0801 	add.w	r8, r2, #1
 80212c0:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80212c4:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80212c8:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80212cc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80212d0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80212d4:	ea4e 0101 	orr.w	r1, lr, r1
 80212d8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80212dc:	ea41 0108 	orr.w	r1, r1, r8
 80212e0:	f820 1b02 	strh.w	r1, [r0], #2
 80212e4:	e7b6      	b.n	8021254 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80212e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80212e8:	881b      	ldrh	r3, [r3, #0]
 80212ea:	1b9b      	subs	r3, r3, r6
 80212ec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80212f0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80212f4:	1b9b      	subs	r3, r3, r6
 80212f6:	441c      	add	r4, r3
 80212f8:	e7a6      	b.n	8021248 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80212fa:	491b      	ldr	r1, [pc, #108]	; (8021368 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 80212fc:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8021300:	2203      	movs	r2, #3
 8021302:	2504      	movs	r5, #4
 8021304:	4550      	cmp	r0, sl
 8021306:	d228      	bcs.n	802135a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8021308:	eb00 0c09 	add.w	ip, r0, r9
 802130c:	4560      	cmp	r0, ip
 802130e:	4623      	mov	r3, r4
 8021310:	d219      	bcs.n	8021346 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8021312:	f893 e000 	ldrb.w	lr, [r3]
 8021316:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 802131a:	eb07 0b0e 	add.w	fp, r7, lr
 802131e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8021322:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8021326:	f89b b001 	ldrb.w	fp, [fp, #1]
 802132a:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 802132e:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8021332:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8021336:	ea43 030b 	orr.w	r3, r3, fp
 802133a:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 802133e:	3401      	adds	r4, #1
 8021340:	f820 3b02 	strh.w	r3, [r0], #2
 8021344:	e7e2      	b.n	802130c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8021346:	f8b8 3000 	ldrh.w	r3, [r8]
 802134a:	1b9b      	subs	r3, r3, r6
 802134c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021350:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8021354:	1b9b      	subs	r3, r3, r6
 8021356:	441c      	add	r4, r3
 8021358:	e7d4      	b.n	8021304 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 802135a:	4b04      	ldr	r3, [pc, #16]	; (802136c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 802135c:	6818      	ldr	r0, [r3, #0]
 802135e:	6803      	ldr	r3, [r0, #0]
 8021360:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021362:	4798      	blx	r3
 8021364:	e750      	b.n	8021208 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8021366:	bf00      	nop
 8021368:	fffff800 	.word	0xfffff800
 802136c:	20002328 	.word	0x20002328
 8021370:	20002322 	.word	0x20002322

08021374 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8021374:	b4f0      	push	{r4, r5, r6, r7}
 8021376:	460c      	mov	r4, r1
 8021378:	4611      	mov	r1, r2
 802137a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 802137e:	780f      	ldrb	r7, [r1, #0]
 8021380:	784e      	ldrb	r6, [r1, #1]
 8021382:	2f01      	cmp	r7, #1
 8021384:	461a      	mov	r2, r3
 8021386:	9b04      	ldr	r3, [sp, #16]
 8021388:	d036      	beq.n	80213f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 802138a:	d31e      	bcc.n	80213ca <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 802138c:	2f02      	cmp	r7, #2
 802138e:	d14a      	bne.n	8021426 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021390:	2e03      	cmp	r6, #3
 8021392:	d848      	bhi.n	8021426 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021394:	e8df f006 	tbb	[pc, r6]
 8021398:	16140702 	.word	0x16140702
 802139c:	9504      	str	r5, [sp, #16]
 802139e:	4620      	mov	r0, r4
 80213a0:	bcf0      	pop	{r4, r5, r6, r7}
 80213a2:	f7ff be09 	b.w	8020fb8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80213a6:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80213a8:	2800      	cmp	r0, #0
 80213aa:	d03c      	beq.n	8021426 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80213ac:	6806      	ldr	r6, [r0, #0]
 80213ae:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80213b2:	68b5      	ldr	r5, [r6, #8]
 80213b4:	4613      	mov	r3, r2
 80213b6:	46ac      	mov	ip, r5
 80213b8:	460a      	mov	r2, r1
 80213ba:	4621      	mov	r1, r4
 80213bc:	bcf0      	pop	{r4, r5, r6, r7}
 80213be:	4760      	bx	ip
 80213c0:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 80213c2:	e7f1      	b.n	80213a8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80213c4:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 80213c8:	e7ee      	b.n	80213a8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80213ca:	2e03      	cmp	r6, #3
 80213cc:	d82b      	bhi.n	8021426 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80213ce:	e8df f006 	tbb	[pc, r6]
 80213d2:	0702      	.short	0x0702
 80213d4:	100e      	.short	0x100e
 80213d6:	9504      	str	r5, [sp, #16]
 80213d8:	4620      	mov	r0, r4
 80213da:	bcf0      	pop	{r4, r5, r6, r7}
 80213dc:	f7ff bd06 	b.w	8020dec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80213e0:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80213e2:	b300      	cbz	r0, 8021426 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80213e4:	6806      	ldr	r6, [r0, #0]
 80213e6:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80213ea:	68f5      	ldr	r5, [r6, #12]
 80213ec:	e7e2      	b.n	80213b4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80213ee:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 80213f0:	e7f7      	b.n	80213e2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 80213f2:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 80213f6:	e7f4      	b.n	80213e2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 80213f8:	2e03      	cmp	r6, #3
 80213fa:	d814      	bhi.n	8021426 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80213fc:	e8df f006 	tbb	[pc, r6]
 8021400:	100e0702 	.word	0x100e0702
 8021404:	9504      	str	r5, [sp, #16]
 8021406:	4620      	mov	r0, r4
 8021408:	bcf0      	pop	{r4, r5, r6, r7}
 802140a:	f7ff bea1 	b.w	8021150 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 802140e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8021410:	b148      	cbz	r0, 8021426 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021412:	6806      	ldr	r6, [r0, #0]
 8021414:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8021418:	6935      	ldr	r5, [r6, #16]
 802141a:	e7cb      	b.n	80213b4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 802141c:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 802141e:	e7f7      	b.n	8021410 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 8021420:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8021424:	e7f4      	b.n	8021410 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 8021426:	bcf0      	pop	{r4, r5, r6, r7}
 8021428:	4770      	bx	lr
	...

0802142c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 802142c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021430:	4604      	mov	r4, r0
 8021432:	b087      	sub	sp, #28
 8021434:	6810      	ldr	r0, [r2, #0]
 8021436:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 802143a:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8021674 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 802143e:	460e      	mov	r6, r1
 8021440:	6851      	ldr	r1, [r2, #4]
 8021442:	ad02      	add	r5, sp, #8
 8021444:	c503      	stmia	r5!, {r0, r1}
 8021446:	6818      	ldr	r0, [r3, #0]
 8021448:	6859      	ldr	r1, [r3, #4]
 802144a:	ad04      	add	r5, sp, #16
 802144c:	4617      	mov	r7, r2
 802144e:	c503      	stmia	r5!, {r0, r1}
 8021450:	a802      	add	r0, sp, #8
 8021452:	f7f7 fad5 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021456:	4639      	mov	r1, r7
 8021458:	a804      	add	r0, sp, #16
 802145a:	f7f7 fb15 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802145e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8021462:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8021466:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 802146a:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 802146e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8021472:	fb11 2103 	smlabb	r1, r1, r3, r2
 8021476:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 802147a:	440e      	add	r6, r1
 802147c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8021480:	440a      	add	r2, r1
 8021482:	f8ad 2010 	strh.w	r2, [sp, #16]
 8021486:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 802148a:	4413      	add	r3, r2
 802148c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8021490:	4b77      	ldr	r3, [pc, #476]	; (8021670 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8021492:	6818      	ldr	r0, [r3, #0]
 8021494:	6803      	ldr	r3, [r0, #0]
 8021496:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021498:	4798      	blx	r3
 802149a:	f8b9 b000 	ldrh.w	fp, [r9]
 802149e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80214a2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80214a6:	fb0b 2303 	mla	r3, fp, r3, r2
 80214aa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80214ae:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80214b2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80214b6:	fb05 f50b 	mul.w	r5, r5, fp
 80214ba:	9300      	str	r3, [sp, #0]
 80214bc:	d069      	beq.n	8021592 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80214be:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80214c2:	4558      	cmp	r0, fp
 80214c4:	f080 80cc 	bcs.w	8021660 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80214c8:	9b00      	ldr	r3, [sp, #0]
 80214ca:	18c3      	adds	r3, r0, r3
 80214cc:	9301      	str	r3, [sp, #4]
 80214ce:	4631      	mov	r1, r6
 80214d0:	9b01      	ldr	r3, [sp, #4]
 80214d2:	4298      	cmp	r0, r3
 80214d4:	d24f      	bcs.n	8021576 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80214d6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80214da:	2a00      	cmp	r2, #0
 80214dc:	d048      	beq.n	8021570 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80214de:	fb0a f202 	mul.w	r2, sl, r2
 80214e2:	1c53      	adds	r3, r2, #1
 80214e4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80214e8:	121b      	asrs	r3, r3, #8
 80214ea:	d041      	beq.n	8021570 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80214ec:	8802      	ldrh	r2, [r0, #0]
 80214ee:	f8b4 c000 	ldrh.w	ip, [r4]
 80214f2:	b29e      	uxth	r6, r3
 80214f4:	1215      	asrs	r5, r2, #8
 80214f6:	43db      	mvns	r3, r3
 80214f8:	b2db      	uxtb	r3, r3
 80214fa:	ea4f 272c 	mov.w	r7, ip, asr #8
 80214fe:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021502:	fb15 f503 	smulbb	r5, r5, r3
 8021506:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 802150a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 802150e:	00d2      	lsls	r2, r2, #3
 8021510:	fb07 5706 	mla	r7, r7, r6, r5
 8021514:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8021518:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802151c:	b2d2      	uxtb	r2, r2
 802151e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021522:	b2bf      	uxth	r7, r7
 8021524:	fb1e fe03 	smulbb	lr, lr, r3
 8021528:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802152c:	fa5f fc8c 	uxtb.w	ip, ip
 8021530:	fb12 f203 	smulbb	r2, r2, r3
 8021534:	fb05 e506 	mla	r5, r5, r6, lr
 8021538:	fb0c 2c06 	mla	ip, ip, r6, r2
 802153c:	f107 0e01 	add.w	lr, r7, #1
 8021540:	fa1f fc8c 	uxth.w	ip, ip
 8021544:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8021548:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 802154c:	f10c 0701 	add.w	r7, ip, #1
 8021550:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021554:	b2ad      	uxth	r5, r5
 8021556:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802155a:	ea47 070e 	orr.w	r7, r7, lr
 802155e:	f105 0e01 	add.w	lr, r5, #1
 8021562:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8021566:	096d      	lsrs	r5, r5, #5
 8021568:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802156c:	432f      	orrs	r7, r5
 802156e:	8007      	strh	r7, [r0, #0]
 8021570:	3002      	adds	r0, #2
 8021572:	3402      	adds	r4, #2
 8021574:	e7ac      	b.n	80214d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8021576:	f8b9 3000 	ldrh.w	r3, [r9]
 802157a:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 802157e:	eba3 0308 	sub.w	r3, r3, r8
 8021582:	eba6 0608 	sub.w	r6, r6, r8
 8021586:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 802158a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802158e:	440e      	add	r6, r1
 8021590:	e797      	b.n	80214c2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8021592:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8021596:	42a8      	cmp	r0, r5
 8021598:	d262      	bcs.n	8021660 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 802159a:	9b00      	ldr	r3, [sp, #0]
 802159c:	4631      	mov	r1, r6
 802159e:	eb00 0b03 	add.w	fp, r0, r3
 80215a2:	4558      	cmp	r0, fp
 80215a4:	d24e      	bcs.n	8021644 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80215a6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80215aa:	b12b      	cbz	r3, 80215b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80215ac:	2bff      	cmp	r3, #255	; 0xff
 80215ae:	f8b4 e000 	ldrh.w	lr, [r4]
 80215b2:	d104      	bne.n	80215be <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80215b4:	f8a0 e000 	strh.w	lr, [r0]
 80215b8:	3002      	adds	r0, #2
 80215ba:	3402      	adds	r4, #2
 80215bc:	e7f1      	b.n	80215a2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80215be:	8802      	ldrh	r2, [r0, #0]
 80215c0:	b29f      	uxth	r7, r3
 80215c2:	1216      	asrs	r6, r2, #8
 80215c4:	43db      	mvns	r3, r3
 80215c6:	b2db      	uxtb	r3, r3
 80215c8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80215cc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80215d0:	fb16 f603 	smulbb	r6, r6, r3
 80215d4:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80215d8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80215dc:	00d2      	lsls	r2, r2, #3
 80215de:	fb0c 6c07 	mla	ip, ip, r7, r6
 80215e2:	b2d2      	uxtb	r2, r2
 80215e4:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80215e8:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80215ec:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80215f0:	fb1a fa03 	smulbb	sl, sl, r3
 80215f4:	fa1f fc8c 	uxth.w	ip, ip
 80215f8:	fb12 f303 	smulbb	r3, r2, r3
 80215fc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8021600:	fa5f fe8e 	uxtb.w	lr, lr
 8021604:	fb06 a607 	mla	r6, r6, r7, sl
 8021608:	f10c 0201 	add.w	r2, ip, #1
 802160c:	fb0e 3307 	mla	r3, lr, r7, r3
 8021610:	b2b6      	uxth	r6, r6
 8021612:	b29b      	uxth	r3, r3
 8021614:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8021618:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 802161c:	f106 0a01 	add.w	sl, r6, #1
 8021620:	f103 0c01 	add.w	ip, r3, #1
 8021624:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8021628:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 802162c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021630:	0976      	lsrs	r6, r6, #5
 8021632:	ea4c 0c02 	orr.w	ip, ip, r2
 8021636:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 802163a:	ea4c 0c06 	orr.w	ip, ip, r6
 802163e:	f8a0 c000 	strh.w	ip, [r0]
 8021642:	e7b9      	b.n	80215b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8021644:	f8b9 3000 	ldrh.w	r3, [r9]
 8021648:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 802164c:	eba3 0308 	sub.w	r3, r3, r8
 8021650:	eba6 0608 	sub.w	r6, r6, r8
 8021654:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8021658:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802165c:	440e      	add	r6, r1
 802165e:	e79a      	b.n	8021596 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8021660:	4b03      	ldr	r3, [pc, #12]	; (8021670 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8021662:	6818      	ldr	r0, [r3, #0]
 8021664:	6803      	ldr	r3, [r0, #0]
 8021666:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021668:	4798      	blx	r3
 802166a:	b007      	add	sp, #28
 802166c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021670:	20002328 	.word	0x20002328
 8021674:	20002322 	.word	0x20002322

08021678 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8021678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802167c:	b089      	sub	sp, #36	; 0x24
 802167e:	4682      	mov	sl, r0
 8021680:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8021684:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021686:	460f      	mov	r7, r1
 8021688:	4691      	mov	r9, r2
 802168a:	4698      	mov	r8, r3
 802168c:	2e00      	cmp	r6, #0
 802168e:	d03d      	beq.n	802170c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021690:	4608      	mov	r0, r1
 8021692:	f7fa fe61 	bl	801c358 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8021696:	4605      	mov	r5, r0
 8021698:	4638      	mov	r0, r7
 802169a:	f7fa fe91 	bl	801c3c0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802169e:	f8ad 000e 	strh.w	r0, [sp, #14]
 80216a2:	4638      	mov	r0, r7
 80216a4:	f8ad 9008 	strh.w	r9, [sp, #8]
 80216a8:	f8ad 500c 	strh.w	r5, [sp, #12]
 80216ac:	f8ad 800a 	strh.w	r8, [sp, #10]
 80216b0:	f7fa ff3e 	bl	801c530 <_ZNK8touchgfx6Bitmap7getDataEv>
 80216b4:	4605      	mov	r5, r0
 80216b6:	4638      	mov	r0, r7
 80216b8:	f7fa ff6a 	bl	801c590 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80216bc:	4681      	mov	r9, r0
 80216be:	4638      	mov	r0, r7
 80216c0:	f7fa ffba 	bl	801c638 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80216c4:	280b      	cmp	r0, #11
 80216c6:	d821      	bhi.n	802170c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80216c8:	e8df f000 	tbb	[pc, r0]
 80216cc:	2006aebe 	.word	0x2006aebe
 80216d0:	20202020 	.word	0x20202020
 80216d4:	b5202020 	.word	0xb5202020
 80216d8:	4bb0      	ldr	r3, [pc, #704]	; (802199c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 80216da:	6818      	ldr	r0, [r3, #0]
 80216dc:	6803      	ldr	r3, [r0, #0]
 80216de:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80216e0:	4798      	blx	r3
 80216e2:	2eff      	cmp	r6, #255	; 0xff
 80216e4:	d101      	bne.n	80216ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80216e6:	0683      	lsls	r3, r0, #26
 80216e8:	d506      	bpl.n	80216f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 80216ea:	4633      	mov	r3, r6
 80216ec:	4622      	mov	r2, r4
 80216ee:	a902      	add	r1, sp, #8
 80216f0:	4628      	mov	r0, r5
 80216f2:	f7ff f909 	bl	8020908 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80216f6:	e009      	b.n	802170c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80216f8:	4638      	mov	r0, r7
 80216fa:	f7fa fee1 	bl	801c4c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80216fe:	b940      	cbnz	r0, 8021712 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8021700:	4623      	mov	r3, r4
 8021702:	aa02      	add	r2, sp, #8
 8021704:	4629      	mov	r1, r5
 8021706:	4650      	mov	r0, sl
 8021708:	f7ff f9e4 	bl	8020ad4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 802170c:	b009      	add	sp, #36	; 0x24
 802170e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021712:	f10d 0818 	add.w	r8, sp, #24
 8021716:	4639      	mov	r1, r7
 8021718:	4640      	mov	r0, r8
 802171a:	f7fa fe85 	bl	801c428 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 802171e:	e898 0003 	ldmia.w	r8, {r0, r1}
 8021722:	af04      	add	r7, sp, #16
 8021724:	e887 0003 	stmia.w	r7, {r0, r1}
 8021728:	4638      	mov	r0, r7
 802172a:	4621      	mov	r1, r4
 802172c:	f7f1 fb18 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 8021730:	4638      	mov	r0, r7
 8021732:	f7f1 fb58 	bl	8012de6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8021736:	2800      	cmp	r0, #0
 8021738:	d1d7      	bne.n	80216ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 802173a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802173e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8021742:	4293      	cmp	r3, r2
 8021744:	dd12      	ble.n	802176c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 8021746:	1a9b      	subs	r3, r3, r2
 8021748:	f9b4 0000 	ldrsh.w	r0, [r4]
 802174c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021750:	f8ad 0018 	strh.w	r0, [sp, #24]
 8021754:	f8ad 201a 	strh.w	r2, [sp, #26]
 8021758:	f8ad 101c 	strh.w	r1, [sp, #28]
 802175c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021760:	4642      	mov	r2, r8
 8021762:	4633      	mov	r3, r6
 8021764:	a902      	add	r1, sp, #8
 8021766:	4628      	mov	r0, r5
 8021768:	f7ff f8ce 	bl	8020908 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 802176c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8021770:	f9b4 2000 	ldrsh.w	r2, [r4]
 8021774:	4293      	cmp	r3, r2
 8021776:	dd12      	ble.n	802179e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8021778:	1a9b      	subs	r3, r3, r2
 802177a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 802177e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8021782:	f8ad 2018 	strh.w	r2, [sp, #24]
 8021786:	f8ad 001a 	strh.w	r0, [sp, #26]
 802178a:	f8ad 301c 	strh.w	r3, [sp, #28]
 802178e:	f8ad 101e 	strh.w	r1, [sp, #30]
 8021792:	23ff      	movs	r3, #255	; 0xff
 8021794:	4642      	mov	r2, r8
 8021796:	a902      	add	r1, sp, #8
 8021798:	4628      	mov	r0, r5
 802179a:	f7ff f8b5 	bl	8020908 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 802179e:	463b      	mov	r3, r7
 80217a0:	aa02      	add	r2, sp, #8
 80217a2:	4629      	mov	r1, r5
 80217a4:	4650      	mov	r0, sl
 80217a6:	f7ff f995 	bl	8020ad4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80217aa:	88a2      	ldrh	r2, [r4, #4]
 80217ac:	8823      	ldrh	r3, [r4, #0]
 80217ae:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80217b2:	4413      	add	r3, r2
 80217b4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80217b8:	440a      	add	r2, r1
 80217ba:	b29b      	uxth	r3, r3
 80217bc:	b292      	uxth	r2, r2
 80217be:	b211      	sxth	r1, r2
 80217c0:	b218      	sxth	r0, r3
 80217c2:	4288      	cmp	r0, r1
 80217c4:	dd12      	ble.n	80217ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 80217c6:	1a9b      	subs	r3, r3, r2
 80217c8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80217cc:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 80217d0:	f8ad 1018 	strh.w	r1, [sp, #24]
 80217d4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80217d8:	f8ad 001e 	strh.w	r0, [sp, #30]
 80217dc:	23ff      	movs	r3, #255	; 0xff
 80217de:	4642      	mov	r2, r8
 80217e0:	a902      	add	r1, sp, #8
 80217e2:	4628      	mov	r0, r5
 80217e4:	f8ad 601a 	strh.w	r6, [sp, #26]
 80217e8:	f7ff f88e 	bl	8020908 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80217ec:	88e2      	ldrh	r2, [r4, #6]
 80217ee:	8863      	ldrh	r3, [r4, #2]
 80217f0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80217f4:	4413      	add	r3, r2
 80217f6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80217fa:	440a      	add	r2, r1
 80217fc:	b29b      	uxth	r3, r3
 80217fe:	b292      	uxth	r2, r2
 8021800:	b211      	sxth	r1, r2
 8021802:	b218      	sxth	r0, r3
 8021804:	4288      	cmp	r0, r1
 8021806:	dd81      	ble.n	802170c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021808:	1a9b      	subs	r3, r3, r2
 802180a:	f9b4 6000 	ldrsh.w	r6, [r4]
 802180e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8021812:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021816:	f8ad 6018 	strh.w	r6, [sp, #24]
 802181a:	f8ad 101a 	strh.w	r1, [sp, #26]
 802181e:	f8ad 001c 	strh.w	r0, [sp, #28]
 8021822:	23ff      	movs	r3, #255	; 0xff
 8021824:	4642      	mov	r2, r8
 8021826:	e762      	b.n	80216ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 8021828:	4633      	mov	r3, r6
 802182a:	4622      	mov	r2, r4
 802182c:	a902      	add	r1, sp, #8
 802182e:	4628      	mov	r0, r5
 8021830:	f7ff f9c0 	bl	8020bb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8021834:	e76a      	b.n	802170c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021836:	e9cd 4600 	strd	r4, r6, [sp]
 802183a:	ab02      	add	r3, sp, #8
 802183c:	464a      	mov	r2, r9
 802183e:	4629      	mov	r1, r5
 8021840:	4650      	mov	r0, sl
 8021842:	f7ff fd97 	bl	8021374 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8021846:	e761      	b.n	802170c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021848:	4638      	mov	r0, r7
 802184a:	f7fa fe39 	bl	801c4c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 802184e:	b950      	cbnz	r0, 8021866 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 8021850:	e9cd 6000 	strd	r6, r0, [sp]
 8021854:	f8da 3000 	ldr.w	r3, [sl]
 8021858:	aa02      	add	r2, sp, #8
 802185a:	68de      	ldr	r6, [r3, #12]
 802185c:	4629      	mov	r1, r5
 802185e:	4623      	mov	r3, r4
 8021860:	4650      	mov	r0, sl
 8021862:	47b0      	blx	r6
 8021864:	e752      	b.n	802170c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021866:	f10d 0818 	add.w	r8, sp, #24
 802186a:	4639      	mov	r1, r7
 802186c:	4640      	mov	r0, r8
 802186e:	f7fa fddb 	bl	801c428 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8021872:	e898 0003 	ldmia.w	r8, {r0, r1}
 8021876:	af04      	add	r7, sp, #16
 8021878:	e887 0003 	stmia.w	r7, {r0, r1}
 802187c:	4638      	mov	r0, r7
 802187e:	4621      	mov	r1, r4
 8021880:	f7f1 fa6e 	bl	8012d60 <_ZN8touchgfx4RectaNERKS0_>
 8021884:	4638      	mov	r0, r7
 8021886:	f7f1 faae 	bl	8012de6 <_ZNK8touchgfx4Rect7isEmptyEv>
 802188a:	b138      	cbz	r0, 802189c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 802188c:	9600      	str	r6, [sp, #0]
 802188e:	4623      	mov	r3, r4
 8021890:	aa02      	add	r2, sp, #8
 8021892:	4649      	mov	r1, r9
 8021894:	4628      	mov	r0, r5
 8021896:	f7ff fdc9 	bl	802142c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 802189a:	e737      	b.n	802170c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 802189c:	e9cd 6000 	strd	r6, r0, [sp]
 80218a0:	f8da 3000 	ldr.w	r3, [sl]
 80218a4:	aa02      	add	r2, sp, #8
 80218a6:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80218aa:	4629      	mov	r1, r5
 80218ac:	463b      	mov	r3, r7
 80218ae:	4650      	mov	r0, sl
 80218b0:	47d8      	blx	fp
 80218b2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80218b6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80218ba:	4293      	cmp	r3, r2
 80218bc:	dd13      	ble.n	80218e6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 80218be:	f9b4 0000 	ldrsh.w	r0, [r4]
 80218c2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80218c6:	f8ad 0018 	strh.w	r0, [sp, #24]
 80218ca:	1a9b      	subs	r3, r3, r2
 80218cc:	f8ad 201a 	strh.w	r2, [sp, #26]
 80218d0:	f8ad 101c 	strh.w	r1, [sp, #28]
 80218d4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80218d8:	9600      	str	r6, [sp, #0]
 80218da:	4643      	mov	r3, r8
 80218dc:	aa02      	add	r2, sp, #8
 80218de:	4649      	mov	r1, r9
 80218e0:	4628      	mov	r0, r5
 80218e2:	f7ff fda3 	bl	802142c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80218e6:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80218ea:	f9b4 2000 	ldrsh.w	r2, [r4]
 80218ee:	4293      	cmp	r3, r2
 80218f0:	dd13      	ble.n	802191a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 80218f2:	1a9b      	subs	r3, r3, r2
 80218f4:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80218f8:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80218fc:	f8ad 2018 	strh.w	r2, [sp, #24]
 8021900:	f8ad 001a 	strh.w	r0, [sp, #26]
 8021904:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021908:	f8ad 101e 	strh.w	r1, [sp, #30]
 802190c:	9600      	str	r6, [sp, #0]
 802190e:	4643      	mov	r3, r8
 8021910:	aa02      	add	r2, sp, #8
 8021912:	4649      	mov	r1, r9
 8021914:	4628      	mov	r0, r5
 8021916:	f7ff fd89 	bl	802142c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 802191a:	88a2      	ldrh	r2, [r4, #4]
 802191c:	8823      	ldrh	r3, [r4, #0]
 802191e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8021922:	4413      	add	r3, r2
 8021924:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8021928:	440a      	add	r2, r1
 802192a:	b29b      	uxth	r3, r3
 802192c:	b292      	uxth	r2, r2
 802192e:	b211      	sxth	r1, r2
 8021930:	b218      	sxth	r0, r3
 8021932:	4288      	cmp	r0, r1
 8021934:	dd13      	ble.n	802195e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 8021936:	1a9b      	subs	r3, r3, r2
 8021938:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 802193c:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8021940:	f8ad 1018 	strh.w	r1, [sp, #24]
 8021944:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021948:	f8ad 001e 	strh.w	r0, [sp, #30]
 802194c:	9600      	str	r6, [sp, #0]
 802194e:	4643      	mov	r3, r8
 8021950:	aa02      	add	r2, sp, #8
 8021952:	4649      	mov	r1, r9
 8021954:	4628      	mov	r0, r5
 8021956:	f8ad 701a 	strh.w	r7, [sp, #26]
 802195a:	f7ff fd67 	bl	802142c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 802195e:	88e2      	ldrh	r2, [r4, #6]
 8021960:	8863      	ldrh	r3, [r4, #2]
 8021962:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8021966:	4413      	add	r3, r2
 8021968:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 802196c:	440a      	add	r2, r1
 802196e:	b29b      	uxth	r3, r3
 8021970:	b292      	uxth	r2, r2
 8021972:	b211      	sxth	r1, r2
 8021974:	b218      	sxth	r0, r3
 8021976:	4288      	cmp	r0, r1
 8021978:	f77f aec8 	ble.w	802170c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 802197c:	f9b4 7000 	ldrsh.w	r7, [r4]
 8021980:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8021984:	f8ad 7018 	strh.w	r7, [sp, #24]
 8021988:	1a9b      	subs	r3, r3, r2
 802198a:	f8ad 301e 	strh.w	r3, [sp, #30]
 802198e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8021992:	f8ad 001c 	strh.w	r0, [sp, #28]
 8021996:	9600      	str	r6, [sp, #0]
 8021998:	4643      	mov	r3, r8
 802199a:	e779      	b.n	8021890 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 802199c:	20002328 	.word	0x20002328

080219a0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80219a0:	b180      	cbz	r0, 80219c4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 80219a2:	2903      	cmp	r1, #3
 80219a4:	d81c      	bhi.n	80219e0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80219a6:	e8df f001 	tbb	[pc, r1]
 80219aa:	1d02      	.short	0x1d02
 80219ac:	1f08      	.short	0x1f08
 80219ae:	4b10      	ldr	r3, [pc, #64]	; (80219f0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80219b0:	8818      	ldrh	r0, [r3, #0]
 80219b2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80219b6:	4240      	negs	r0, r0
 80219b8:	4770      	bx	lr
 80219ba:	4b0d      	ldr	r3, [pc, #52]	; (80219f0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80219bc:	8818      	ldrh	r0, [r3, #0]
 80219be:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80219c2:	4770      	bx	lr
 80219c4:	2903      	cmp	r1, #3
 80219c6:	d80b      	bhi.n	80219e0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80219c8:	a301      	add	r3, pc, #4	; (adr r3, 80219d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80219ca:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80219ce:	bf00      	nop
 80219d0:	080219e5 	.word	0x080219e5
 80219d4:	080219bb 	.word	0x080219bb
 80219d8:	080219e9 	.word	0x080219e9
 80219dc:	080219af 	.word	0x080219af
 80219e0:	2000      	movs	r0, #0
 80219e2:	4770      	bx	lr
 80219e4:	2001      	movs	r0, #1
 80219e6:	4770      	bx	lr
 80219e8:	f04f 30ff 	mov.w	r0, #4294967295
 80219ec:	4770      	bx	lr
 80219ee:	bf00      	nop
 80219f0:	20002322 	.word	0x20002322

080219f4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80219f4:	b180      	cbz	r0, 8021a18 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 80219f6:	2903      	cmp	r1, #3
 80219f8:	d81c      	bhi.n	8021a34 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80219fa:	e8df f001 	tbb	[pc, r1]
 80219fe:	021d      	.short	0x021d
 8021a00:	071f      	.short	0x071f
 8021a02:	4b10      	ldr	r3, [pc, #64]	; (8021a44 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8021a04:	8818      	ldrh	r0, [r3, #0]
 8021a06:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021a0a:	4770      	bx	lr
 8021a0c:	4b0d      	ldr	r3, [pc, #52]	; (8021a44 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8021a0e:	8818      	ldrh	r0, [r3, #0]
 8021a10:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021a14:	4240      	negs	r0, r0
 8021a16:	4770      	bx	lr
 8021a18:	2903      	cmp	r1, #3
 8021a1a:	d80b      	bhi.n	8021a34 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8021a1c:	a301      	add	r3, pc, #4	; (adr r3, 8021a24 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8021a1e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8021a22:	bf00      	nop
 8021a24:	08021a03 	.word	0x08021a03
 8021a28:	08021a3d 	.word	0x08021a3d
 8021a2c:	08021a0d 	.word	0x08021a0d
 8021a30:	08021a39 	.word	0x08021a39
 8021a34:	2000      	movs	r0, #0
 8021a36:	4770      	bx	lr
 8021a38:	2001      	movs	r0, #1
 8021a3a:	4770      	bx	lr
 8021a3c:	f04f 30ff 	mov.w	r0, #4294967295
 8021a40:	4770      	bx	lr
 8021a42:	bf00      	nop
 8021a44:	20002322 	.word	0x20002322

08021a48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8021a48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a4c:	b099      	sub	sp, #100	; 0x64
 8021a4e:	910b      	str	r1, [sp, #44]	; 0x2c
 8021a50:	a914      	add	r1, sp, #80	; 0x50
 8021a52:	e881 000c 	stmia.w	r1, {r2, r3}
 8021a56:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8021a5a:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8021a5e:	f891 900d 	ldrb.w	r9, [r1, #13]
 8021a62:	9309      	str	r3, [sp, #36]	; 0x24
 8021a64:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021a68:	9310      	str	r3, [sp, #64]	; 0x40
 8021a6a:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8021a6e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8021a72:	930c      	str	r3, [sp, #48]	; 0x30
 8021a74:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8021a78:	798f      	ldrb	r7, [r1, #6]
 8021a7a:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8021a7e:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8021a82:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 8021a86:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8021a8a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8021a8e:	431f      	orrs	r7, r3
 8021a90:	f000 8195 	beq.w	8021dbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021a94:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8021a98:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8021a9c:	f891 9007 	ldrb.w	r9, [r1, #7]
 8021aa0:	ea59 0903 	orrs.w	r9, r9, r3
 8021aa4:	f000 818b 	beq.w	8021dbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021aa8:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8021aac:	b29b      	uxth	r3, r3
 8021aae:	2d00      	cmp	r5, #0
 8021ab0:	f000 812e 	beq.w	8021d10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8021ab4:	1aed      	subs	r5, r5, r3
 8021ab6:	b2ad      	uxth	r5, r5
 8021ab8:	042b      	lsls	r3, r5, #16
 8021aba:	d502      	bpl.n	8021ac2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8021abc:	1b64      	subs	r4, r4, r5
 8021abe:	b224      	sxth	r4, r4
 8021ac0:	2500      	movs	r5, #0
 8021ac2:	f9b2 1000 	ldrsh.w	r1, [r2]
 8021ac6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8021aca:	428c      	cmp	r4, r1
 8021acc:	b28b      	uxth	r3, r1
 8021ace:	bfbf      	itttt	lt
 8021ad0:	18ed      	addlt	r5, r5, r3
 8021ad2:	1b2c      	sublt	r4, r5, r4
 8021ad4:	b2a5      	uxthlt	r5, r4
 8021ad6:	460c      	movlt	r4, r1
 8021ad8:	8891      	ldrh	r1, [r2, #4]
 8021ada:	440b      	add	r3, r1
 8021adc:	b21b      	sxth	r3, r3
 8021ade:	930f      	str	r3, [sp, #60]	; 0x3c
 8021ae0:	88d3      	ldrh	r3, [r2, #6]
 8021ae2:	8852      	ldrh	r2, [r2, #2]
 8021ae4:	4413      	add	r3, r2
 8021ae6:	b21b      	sxth	r3, r3
 8021ae8:	930d      	str	r3, [sp, #52]	; 0x34
 8021aea:	4bbe      	ldr	r3, [pc, #760]	; (8021de4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8021aec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021aee:	f893 b000 	ldrb.w	fp, [r3]
 8021af2:	f10b 3cff 	add.w	ip, fp, #4294967295
 8021af6:	f1dc 0300 	rsbs	r3, ip, #0
 8021afa:	eb43 030c 	adc.w	r3, r3, ip
 8021afe:	930e      	str	r3, [sp, #56]	; 0x38
 8021b00:	4621      	mov	r1, r4
 8021b02:	4653      	mov	r3, sl
 8021b04:	a814      	add	r0, sp, #80	; 0x50
 8021b06:	f7f6 fdf0 	bl	80186ea <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8021b0a:	4621      	mov	r1, r4
 8021b0c:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8021b10:	4653      	mov	r3, sl
 8021b12:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021b14:	a814      	add	r0, sp, #80	; 0x50
 8021b16:	f7f6 fe05 	bl	8018724 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8021b1a:	a918      	add	r1, sp, #96	; 0x60
 8021b1c:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8021b20:	a817      	add	r0, sp, #92	; 0x5c
 8021b22:	f7f6 ff2b 	bl	801897c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8021b26:	f1ba 0f00 	cmp.w	sl, #0
 8021b2a:	f040 80f4 	bne.w	8021d16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8021b2e:	f1bb 0f01 	cmp.w	fp, #1
 8021b32:	f040 80f8 	bne.w	8021d26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8021b36:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021b38:	2b00      	cmp	r3, #0
 8021b3a:	f040 8145 	bne.w	8021dc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8021b3e:	b2ba      	uxth	r2, r7
 8021b40:	b905      	cbnz	r5, 8021b44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8021b42:	b16e      	cbz	r6, 8021b60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8021b44:	fb06 5302 	mla	r3, r6, r2, r5
 8021b48:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8021b4a:	fb08 f303 	mul.w	r3, r8, r3
 8021b4e:	4631      	mov	r1, r6
 8021b50:	f003 0607 	and.w	r6, r3, #7
 8021b54:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8021b58:	9328      	str	r3, [sp, #160]	; 0xa0
 8021b5a:	eba9 0301 	sub.w	r3, r9, r1
 8021b5e:	930a      	str	r3, [sp, #40]	; 0x28
 8021b60:	4651      	mov	r1, sl
 8021b62:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021b64:	f7ff ff1c 	bl	80219a0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8021b68:	4681      	mov	r9, r0
 8021b6a:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021b6c:	f7ff ff42 	bl	80219f4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8021b70:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021b72:	9909      	ldr	r1, [sp, #36]	; 0x24
 8021b74:	eba3 0a01 	sub.w	sl, r3, r1
 8021b78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021b7a:	459a      	cmp	sl, r3
 8021b7c:	bfa8      	it	ge
 8021b7e:	469a      	movge	sl, r3
 8021b80:	f1ba 0f00 	cmp.w	sl, #0
 8021b84:	4683      	mov	fp, r0
 8021b86:	f340 811a 	ble.w	8021dbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021b8a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021b8c:	1b64      	subs	r4, r4, r5
 8021b8e:	1b1c      	subs	r4, r3, r4
 8021b90:	42bc      	cmp	r4, r7
 8021b92:	bfd4      	ite	le
 8021b94:	ebc5 0504 	rsble	r5, r5, r4
 8021b98:	ebc5 0507 	rsbgt	r5, r5, r7
 8021b9c:	2d00      	cmp	r5, #0
 8021b9e:	f340 810e 	ble.w	8021dbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021ba2:	1b52      	subs	r2, r2, r5
 8021ba4:	fb08 f302 	mul.w	r3, r8, r2
 8021ba8:	930f      	str	r3, [sp, #60]	; 0x3c
 8021baa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021bac:	2b00      	cmp	r3, #0
 8021bae:	f040 8116 	bne.w	8021dde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8021bb2:	4b8d      	ldr	r3, [pc, #564]	; (8021de8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8021bb4:	6818      	ldr	r0, [r3, #0]
 8021bb6:	6803      	ldr	r3, [r0, #0]
 8021bb8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021bba:	4798      	blx	r3
 8021bbc:	2301      	movs	r3, #1
 8021bbe:	fa03 f308 	lsl.w	r3, r3, r8
 8021bc2:	4a8a      	ldr	r2, [pc, #552]	; (8021dec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8021bc4:	3b01      	subs	r3, #1
 8021bc6:	b2db      	uxtb	r3, r3
 8021bc8:	8811      	ldrh	r1, [r2, #0]
 8021bca:	930e      	str	r3, [sp, #56]	; 0x38
 8021bcc:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8021bd0:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8021bd4:	fb01 2303 	mla	r3, r1, r3, r2
 8021bd8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8021bdc:	930a      	str	r3, [sp, #40]	; 0x28
 8021bde:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021be0:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8021be4:	9313      	str	r3, [sp, #76]	; 0x4c
 8021be6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021be8:	0a19      	lsrs	r1, r3, #8
 8021bea:	b2cb      	uxtb	r3, r1
 8021bec:	9312      	str	r3, [sp, #72]	; 0x48
 8021bee:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021bf0:	b2db      	uxtb	r3, r3
 8021bf2:	9311      	str	r3, [sp, #68]	; 0x44
 8021bf4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021bf6:	095a      	lsrs	r2, r3, #5
 8021bf8:	4b7d      	ldr	r3, [pc, #500]	; (8021df0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8021bfa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021bfe:	400b      	ands	r3, r1
 8021c00:	4313      	orrs	r3, r2
 8021c02:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8021c04:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021c08:	4313      	orrs	r3, r2
 8021c0a:	b29b      	uxth	r3, r3
 8021c0c:	9310      	str	r3, [sp, #64]	; 0x40
 8021c0e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021c10:	781a      	ldrb	r2, [r3, #0]
 8021c12:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8021c16:	4132      	asrs	r2, r6
 8021c18:	fb05 b919 	mls	r9, r5, r9, fp
 8021c1c:	fb03 fb05 	mul.w	fp, r3, r5
 8021c20:	b2d2      	uxtb	r2, r2
 8021c22:	930d      	str	r3, [sp, #52]	; 0x34
 8021c24:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8021c28:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8021c2c:	f0c0 80f5 	bcc.w	8021e1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8021c30:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8021c34:	46ae      	mov	lr, r5
 8021c36:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8021c3a:	f0c0 80dd 	bcc.w	8021df8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8021c3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021c40:	4013      	ands	r3, r2
 8021c42:	d055      	beq.n	8021cf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8021c44:	20ff      	movs	r0, #255	; 0xff
 8021c46:	990e      	ldr	r1, [sp, #56]	; 0x38
 8021c48:	fb90 f1f1 	sdiv	r1, r0, r1
 8021c4c:	434b      	muls	r3, r1
 8021c4e:	2bfe      	cmp	r3, #254	; 0xfe
 8021c50:	dd03      	ble.n	8021c5a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8021c52:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021c54:	4281      	cmp	r1, r0
 8021c56:	f000 80cd 	beq.w	8021df4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8021c5a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021c5c:	f8bc 4000 	ldrh.w	r4, [ip]
 8021c60:	fb11 f303 	smulbb	r3, r1, r3
 8021c64:	b29b      	uxth	r3, r3
 8021c66:	1c59      	adds	r1, r3, #1
 8021c68:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8021c6c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021c70:	b29f      	uxth	r7, r3
 8021c72:	43db      	mvns	r3, r3
 8021c74:	b2db      	uxtb	r3, r3
 8021c76:	9309      	str	r3, [sp, #36]	; 0x24
 8021c78:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021c7a:	1220      	asrs	r0, r4, #8
 8021c7c:	fb13 f907 	smulbb	r9, r3, r7
 8021c80:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021c84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021c86:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8021c8a:	fb00 9003 	mla	r0, r0, r3, r9
 8021c8e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8021c90:	10e1      	asrs	r1, r4, #3
 8021c92:	fb13 f907 	smulbb	r9, r3, r7
 8021c96:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021c9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021c9c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8021ca0:	fb01 9103 	mla	r1, r1, r3, r9
 8021ca4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021ca6:	00e4      	lsls	r4, r4, #3
 8021ca8:	fb13 f707 	smulbb	r7, r3, r7
 8021cac:	b2e4      	uxtb	r4, r4
 8021cae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021cb0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8021cb4:	fb04 7403 	mla	r4, r4, r3, r7
 8021cb8:	b280      	uxth	r0, r0
 8021cba:	b2a4      	uxth	r4, r4
 8021cbc:	1c43      	adds	r3, r0, #1
 8021cbe:	f104 0901 	add.w	r9, r4, #1
 8021cc2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021cc6:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8021cca:	b289      	uxth	r1, r1
 8021ccc:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8021cd0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8021cd4:	ea49 0000 	orr.w	r0, r9, r0
 8021cd8:	f101 0901 	add.w	r9, r1, #1
 8021cdc:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8021ce0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021ce4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021ce8:	ea40 0009 	orr.w	r0, r0, r9
 8021cec:	f8ac 0000 	strh.w	r0, [ip]
 8021cf0:	4446      	add	r6, r8
 8021cf2:	b2b6      	uxth	r6, r6
 8021cf4:	2e07      	cmp	r6, #7
 8021cf6:	bf81      	itttt	hi
 8021cf8:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8021cfa:	785a      	ldrbhi	r2, [r3, #1]
 8021cfc:	3301      	addhi	r3, #1
 8021cfe:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8021d00:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021d02:	bf9a      	itte	ls
 8021d04:	fa42 f208 	asrls.w	r2, r2, r8
 8021d08:	b2d2      	uxtbls	r2, r2
 8021d0a:	2600      	movhi	r6, #0
 8021d0c:	449c      	add	ip, r3
 8021d0e:	e792      	b.n	8021c36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8021d10:	441c      	add	r4, r3
 8021d12:	b224      	sxth	r4, r4
 8021d14:	e6d5      	b.n	8021ac2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8021d16:	f1ba 0f01 	cmp.w	sl, #1
 8021d1a:	f47f af0c 	bne.w	8021b36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021d1e:	f1bb 0f01 	cmp.w	fp, #1
 8021d22:	f47f af08 	bne.w	8021b36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021d26:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8021de8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8021d2a:	f8db 0000 	ldr.w	r0, [fp]
 8021d2e:	6803      	ldr	r3, [r0, #0]
 8021d30:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021d32:	4798      	blx	r3
 8021d34:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8021d38:	465a      	mov	r2, fp
 8021d3a:	d006      	beq.n	8021d4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021d3c:	f1b8 0f04 	cmp.w	r8, #4
 8021d40:	d140      	bne.n	8021dc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8021d42:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021d44:	3300      	adds	r3, #0
 8021d46:	bf18      	it	ne
 8021d48:	2301      	movne	r3, #1
 8021d4a:	0580      	lsls	r0, r0, #22
 8021d4c:	d56e      	bpl.n	8021e2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8021d4e:	f1b8 0f08 	cmp.w	r8, #8
 8021d52:	d16b      	bne.n	8021e2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8021d54:	2b00      	cmp	r3, #0
 8021d56:	bf0c      	ite	eq
 8021d58:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8021d5c:	f44f 7180 	movne.w	r1, #256	; 0x100
 8021d60:	2d00      	cmp	r5, #0
 8021d62:	f47f aee8 	bne.w	8021b36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021d66:	2e00      	cmp	r6, #0
 8021d68:	f47f aee5 	bne.w	8021b36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021d6c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021d6e:	19e3      	adds	r3, r4, r7
 8021d70:	4283      	cmp	r3, r0
 8021d72:	f73f aee0 	bgt.w	8021b36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021d76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021d78:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021d7a:	444b      	add	r3, r9
 8021d7c:	4283      	cmp	r3, r0
 8021d7e:	f73f aeda 	bgt.w	8021b36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021d82:	6810      	ldr	r0, [r2, #0]
 8021d84:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8021d88:	6804      	ldr	r4, [r0, #0]
 8021d8a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8021d8e:	b2bf      	uxth	r7, r7
 8021d90:	f1b8 0f08 	cmp.w	r8, #8
 8021d94:	f04f 0500 	mov.w	r5, #0
 8021d98:	bf18      	it	ne
 8021d9a:	3701      	addne	r7, #1
 8021d9c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8021da0:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021da2:	9104      	str	r1, [sp, #16]
 8021da4:	bf18      	it	ne
 8021da6:	f027 0701 	bicne.w	r7, r7, #1
 8021daa:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8021dac:	bf18      	it	ne
 8021dae:	b2bf      	uxthne	r7, r7
 8021db0:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8021db4:	e9cd 7900 	strd	r7, r9, [sp]
 8021db8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021dba:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8021dbc:	47a0      	blx	r4
 8021dbe:	b019      	add	sp, #100	; 0x64
 8021dc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021dc4:	2300      	movs	r3, #0
 8021dc6:	e7c0      	b.n	8021d4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021dc8:	2208      	movs	r2, #8
 8021dca:	fb92 f3f8 	sdiv	r3, r2, r8
 8021dce:	1e5a      	subs	r2, r3, #1
 8021dd0:	443a      	add	r2, r7
 8021dd2:	fb92 f2f3 	sdiv	r2, r2, r3
 8021dd6:	fb12 f203 	smulbb	r2, r2, r3
 8021dda:	b292      	uxth	r2, r2
 8021ddc:	e6b0      	b.n	8021b40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8021dde:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021de0:	e6ec      	b.n	8021bbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8021de2:	bf00      	nop
 8021de4:	20002320 	.word	0x20002320
 8021de8:	20002328 	.word	0x20002328
 8021dec:	20002322 	.word	0x20002322
 8021df0:	00fff800 	.word	0x00fff800
 8021df4:	9810      	ldr	r0, [sp, #64]	; 0x40
 8021df6:	e779      	b.n	8021cec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8021df8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021dfa:	b153      	cbz	r3, 8021e12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8021dfc:	441e      	add	r6, r3
 8021dfe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021e00:	b2b6      	uxth	r6, r6
 8021e02:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8021e06:	f006 0607 	and.w	r6, r6, #7
 8021e0a:	781a      	ldrb	r2, [r3, #0]
 8021e0c:	9328      	str	r3, [sp, #160]	; 0xa0
 8021e0e:	4132      	asrs	r2, r6
 8021e10:	b2d2      	uxtb	r2, r2
 8021e12:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021e14:	445b      	add	r3, fp
 8021e16:	930a      	str	r3, [sp, #40]	; 0x28
 8021e18:	e706      	b.n	8021c28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8021e1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021e1c:	2b00      	cmp	r3, #0
 8021e1e:	d1ce      	bne.n	8021dbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021e20:	4b05      	ldr	r3, [pc, #20]	; (8021e38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8021e22:	6818      	ldr	r0, [r3, #0]
 8021e24:	6803      	ldr	r3, [r0, #0]
 8021e26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021e28:	4798      	blx	r3
 8021e2a:	e7c8      	b.n	8021dbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021e2c:	2b00      	cmp	r3, #0
 8021e2e:	f43f ae82 	beq.w	8021b36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021e32:	f44f 7180 	mov.w	r1, #256	; 0x100
 8021e36:	e793      	b.n	8021d60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8021e38:	20002328 	.word	0x20002328

08021e3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8021e3c:	b538      	push	{r3, r4, r5, lr}
 8021e3e:	4c15      	ldr	r4, [pc, #84]	; (8021e94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8021e40:	7823      	ldrb	r3, [r4, #0]
 8021e42:	f3bf 8f5b 	dmb	ish
 8021e46:	07da      	lsls	r2, r3, #31
 8021e48:	4605      	mov	r5, r0
 8021e4a:	d40b      	bmi.n	8021e64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8021e4c:	4620      	mov	r0, r4
 8021e4e:	f008 f9e0 	bl	802a212 <__cxa_guard_acquire>
 8021e52:	b138      	cbz	r0, 8021e64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8021e54:	4620      	mov	r0, r4
 8021e56:	f008 f9e8 	bl	802a22a <__cxa_guard_release>
 8021e5a:	4a0f      	ldr	r2, [pc, #60]	; (8021e98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8021e5c:	490f      	ldr	r1, [pc, #60]	; (8021e9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8021e5e:	4810      	ldr	r0, [pc, #64]	; (8021ea0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8021e60:	f008 f9d0 	bl	802a204 <__aeabi_atexit>
 8021e64:	4c0f      	ldr	r4, [pc, #60]	; (8021ea4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8021e66:	7823      	ldrb	r3, [r4, #0]
 8021e68:	f3bf 8f5b 	dmb	ish
 8021e6c:	07db      	lsls	r3, r3, #31
 8021e6e:	d40b      	bmi.n	8021e88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8021e70:	4620      	mov	r0, r4
 8021e72:	f008 f9ce 	bl	802a212 <__cxa_guard_acquire>
 8021e76:	b138      	cbz	r0, 8021e88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8021e78:	4620      	mov	r0, r4
 8021e7a:	f008 f9d6 	bl	802a22a <__cxa_guard_release>
 8021e7e:	4a06      	ldr	r2, [pc, #24]	; (8021e98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8021e80:	4909      	ldr	r1, [pc, #36]	; (8021ea8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8021e82:	480a      	ldr	r0, [pc, #40]	; (8021eac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8021e84:	f008 f9be 	bl	802a204 <__aeabi_atexit>
 8021e88:	4b05      	ldr	r3, [pc, #20]	; (8021ea0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8021e8a:	612b      	str	r3, [r5, #16]
 8021e8c:	4b07      	ldr	r3, [pc, #28]	; (8021eac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8021e8e:	616b      	str	r3, [r5, #20]
 8021e90:	bd38      	pop	{r3, r4, r5, pc}
 8021e92:	bf00      	nop
 8021e94:	20002408 	.word	0x20002408
 8021e98:	20000000 	.word	0x20000000
 8021e9c:	0801ec4d 	.word	0x0801ec4d
 8021ea0:	20000068 	.word	0x20000068
 8021ea4:	2000240c 	.word	0x2000240c
 8021ea8:	0801ec4b 	.word	0x0801ec4b
 8021eac:	2000006c 	.word	0x2000006c

08021eb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8021eb0:	b538      	push	{r3, r4, r5, lr}
 8021eb2:	4c15      	ldr	r4, [pc, #84]	; (8021f08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8021eb4:	7823      	ldrb	r3, [r4, #0]
 8021eb6:	f3bf 8f5b 	dmb	ish
 8021eba:	07da      	lsls	r2, r3, #31
 8021ebc:	4605      	mov	r5, r0
 8021ebe:	d40b      	bmi.n	8021ed8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8021ec0:	4620      	mov	r0, r4
 8021ec2:	f008 f9a6 	bl	802a212 <__cxa_guard_acquire>
 8021ec6:	b138      	cbz	r0, 8021ed8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8021ec8:	4620      	mov	r0, r4
 8021eca:	f008 f9ae 	bl	802a22a <__cxa_guard_release>
 8021ece:	4a0f      	ldr	r2, [pc, #60]	; (8021f0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8021ed0:	490f      	ldr	r1, [pc, #60]	; (8021f10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8021ed2:	4810      	ldr	r0, [pc, #64]	; (8021f14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8021ed4:	f008 f996 	bl	802a204 <__aeabi_atexit>
 8021ed8:	4c0f      	ldr	r4, [pc, #60]	; (8021f18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8021eda:	7823      	ldrb	r3, [r4, #0]
 8021edc:	f3bf 8f5b 	dmb	ish
 8021ee0:	07db      	lsls	r3, r3, #31
 8021ee2:	d40b      	bmi.n	8021efc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021ee4:	4620      	mov	r0, r4
 8021ee6:	f008 f994 	bl	802a212 <__cxa_guard_acquire>
 8021eea:	b138      	cbz	r0, 8021efc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021eec:	4620      	mov	r0, r4
 8021eee:	f008 f99c 	bl	802a22a <__cxa_guard_release>
 8021ef2:	4a06      	ldr	r2, [pc, #24]	; (8021f0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8021ef4:	4909      	ldr	r1, [pc, #36]	; (8021f1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8021ef6:	480a      	ldr	r0, [pc, #40]	; (8021f20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8021ef8:	f008 f984 	bl	802a204 <__aeabi_atexit>
 8021efc:	4b05      	ldr	r3, [pc, #20]	; (8021f14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8021efe:	60ab      	str	r3, [r5, #8]
 8021f00:	4b07      	ldr	r3, [pc, #28]	; (8021f20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8021f02:	60eb      	str	r3, [r5, #12]
 8021f04:	bd38      	pop	{r3, r4, r5, pc}
 8021f06:	bf00      	nop
 8021f08:	200023e0 	.word	0x200023e0
 8021f0c:	20000000 	.word	0x20000000
 8021f10:	0801ec51 	.word	0x0801ec51
 8021f14:	20000040 	.word	0x20000040
 8021f18:	200023e4 	.word	0x200023e4
 8021f1c:	0801ec4f 	.word	0x0801ec4f
 8021f20:	20000044 	.word	0x20000044

08021f24 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8021f24:	b510      	push	{r4, lr}
 8021f26:	4604      	mov	r4, r0
 8021f28:	f7ff ff88 	bl	8021e3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8021f2c:	4620      	mov	r0, r4
 8021f2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021f32:	f7ff bfbd 	b.w	8021eb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08021f38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8021f38:	b538      	push	{r3, r4, r5, lr}
 8021f3a:	4c15      	ldr	r4, [pc, #84]	; (8021f90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8021f3c:	7823      	ldrb	r3, [r4, #0]
 8021f3e:	f3bf 8f5b 	dmb	ish
 8021f42:	07da      	lsls	r2, r3, #31
 8021f44:	4605      	mov	r5, r0
 8021f46:	d40b      	bmi.n	8021f60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8021f48:	4620      	mov	r0, r4
 8021f4a:	f008 f962 	bl	802a212 <__cxa_guard_acquire>
 8021f4e:	b138      	cbz	r0, 8021f60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8021f50:	4620      	mov	r0, r4
 8021f52:	f008 f96a 	bl	802a22a <__cxa_guard_release>
 8021f56:	4a0f      	ldr	r2, [pc, #60]	; (8021f94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8021f58:	490f      	ldr	r1, [pc, #60]	; (8021f98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8021f5a:	4810      	ldr	r0, [pc, #64]	; (8021f9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8021f5c:	f008 f952 	bl	802a204 <__aeabi_atexit>
 8021f60:	4c0f      	ldr	r4, [pc, #60]	; (8021fa0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8021f62:	7823      	ldrb	r3, [r4, #0]
 8021f64:	f3bf 8f5b 	dmb	ish
 8021f68:	07db      	lsls	r3, r3, #31
 8021f6a:	d40b      	bmi.n	8021f84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021f6c:	4620      	mov	r0, r4
 8021f6e:	f008 f950 	bl	802a212 <__cxa_guard_acquire>
 8021f72:	b138      	cbz	r0, 8021f84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021f74:	4620      	mov	r0, r4
 8021f76:	f008 f958 	bl	802a22a <__cxa_guard_release>
 8021f7a:	4a06      	ldr	r2, [pc, #24]	; (8021f94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8021f7c:	4909      	ldr	r1, [pc, #36]	; (8021fa4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8021f7e:	480a      	ldr	r0, [pc, #40]	; (8021fa8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8021f80:	f008 f940 	bl	802a204 <__aeabi_atexit>
 8021f84:	4b05      	ldr	r3, [pc, #20]	; (8021f9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8021f86:	622b      	str	r3, [r5, #32]
 8021f88:	4b07      	ldr	r3, [pc, #28]	; (8021fa8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8021f8a:	626b      	str	r3, [r5, #36]	; 0x24
 8021f8c:	bd38      	pop	{r3, r4, r5, pc}
 8021f8e:	bf00      	nop
 8021f90:	20002410 	.word	0x20002410
 8021f94:	20000000 	.word	0x20000000
 8021f98:	0801ec45 	.word	0x0801ec45
 8021f9c:	20000070 	.word	0x20000070
 8021fa0:	20002414 	.word	0x20002414
 8021fa4:	0801ec43 	.word	0x0801ec43
 8021fa8:	20000074 	.word	0x20000074

08021fac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8021fac:	b538      	push	{r3, r4, r5, lr}
 8021fae:	4c15      	ldr	r4, [pc, #84]	; (8022004 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8021fb0:	7823      	ldrb	r3, [r4, #0]
 8021fb2:	f3bf 8f5b 	dmb	ish
 8021fb6:	07da      	lsls	r2, r3, #31
 8021fb8:	4605      	mov	r5, r0
 8021fba:	d40b      	bmi.n	8021fd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021fbc:	4620      	mov	r0, r4
 8021fbe:	f008 f928 	bl	802a212 <__cxa_guard_acquire>
 8021fc2:	b138      	cbz	r0, 8021fd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021fc4:	4620      	mov	r0, r4
 8021fc6:	f008 f930 	bl	802a22a <__cxa_guard_release>
 8021fca:	4a0f      	ldr	r2, [pc, #60]	; (8022008 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8021fcc:	490f      	ldr	r1, [pc, #60]	; (802200c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8021fce:	4810      	ldr	r0, [pc, #64]	; (8022010 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8021fd0:	f008 f918 	bl	802a204 <__aeabi_atexit>
 8021fd4:	4c0f      	ldr	r4, [pc, #60]	; (8022014 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8021fd6:	7823      	ldrb	r3, [r4, #0]
 8021fd8:	f3bf 8f5b 	dmb	ish
 8021fdc:	07db      	lsls	r3, r3, #31
 8021fde:	d40b      	bmi.n	8021ff8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8021fe0:	4620      	mov	r0, r4
 8021fe2:	f008 f916 	bl	802a212 <__cxa_guard_acquire>
 8021fe6:	b138      	cbz	r0, 8021ff8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8021fe8:	4620      	mov	r0, r4
 8021fea:	f008 f91e 	bl	802a22a <__cxa_guard_release>
 8021fee:	4a06      	ldr	r2, [pc, #24]	; (8022008 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8021ff0:	4909      	ldr	r1, [pc, #36]	; (8022018 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8021ff2:	480a      	ldr	r0, [pc, #40]	; (802201c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8021ff4:	f008 f906 	bl	802a204 <__aeabi_atexit>
 8021ff8:	4b05      	ldr	r3, [pc, #20]	; (8022010 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8021ffa:	61ab      	str	r3, [r5, #24]
 8021ffc:	4b07      	ldr	r3, [pc, #28]	; (802201c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8021ffe:	61eb      	str	r3, [r5, #28]
 8022000:	bd38      	pop	{r3, r4, r5, pc}
 8022002:	bf00      	nop
 8022004:	200023e8 	.word	0x200023e8
 8022008:	20000000 	.word	0x20000000
 802200c:	0801ec49 	.word	0x0801ec49
 8022010:	20000048 	.word	0x20000048
 8022014:	200023ec 	.word	0x200023ec
 8022018:	0801ec47 	.word	0x0801ec47
 802201c:	2000004c 	.word	0x2000004c

08022020 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8022020:	b510      	push	{r4, lr}
 8022022:	4604      	mov	r4, r0
 8022024:	f7ff ff88 	bl	8021f38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8022028:	4620      	mov	r0, r4
 802202a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802202e:	f7ff bfbd 	b.w	8021fac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08022034 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8022034:	b538      	push	{r3, r4, r5, lr}
 8022036:	4c15      	ldr	r4, [pc, #84]	; (802208c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8022038:	7823      	ldrb	r3, [r4, #0]
 802203a:	f3bf 8f5b 	dmb	ish
 802203e:	07da      	lsls	r2, r3, #31
 8022040:	4605      	mov	r5, r0
 8022042:	d40b      	bmi.n	802205c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8022044:	4620      	mov	r0, r4
 8022046:	f008 f8e4 	bl	802a212 <__cxa_guard_acquire>
 802204a:	b138      	cbz	r0, 802205c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 802204c:	4620      	mov	r0, r4
 802204e:	f008 f8ec 	bl	802a22a <__cxa_guard_release>
 8022052:	4a0f      	ldr	r2, [pc, #60]	; (8022090 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8022054:	490f      	ldr	r1, [pc, #60]	; (8022094 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8022056:	4810      	ldr	r0, [pc, #64]	; (8022098 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8022058:	f008 f8d4 	bl	802a204 <__aeabi_atexit>
 802205c:	4c0f      	ldr	r4, [pc, #60]	; (802209c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 802205e:	7823      	ldrb	r3, [r4, #0]
 8022060:	f3bf 8f5b 	dmb	ish
 8022064:	07db      	lsls	r3, r3, #31
 8022066:	d40b      	bmi.n	8022080 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8022068:	4620      	mov	r0, r4
 802206a:	f008 f8d2 	bl	802a212 <__cxa_guard_acquire>
 802206e:	b138      	cbz	r0, 8022080 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8022070:	4620      	mov	r0, r4
 8022072:	f008 f8da 	bl	802a22a <__cxa_guard_release>
 8022076:	4a06      	ldr	r2, [pc, #24]	; (8022090 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8022078:	4909      	ldr	r1, [pc, #36]	; (80220a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 802207a:	480a      	ldr	r0, [pc, #40]	; (80220a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 802207c:	f008 f8c2 	bl	802a204 <__aeabi_atexit>
 8022080:	4b05      	ldr	r3, [pc, #20]	; (8022098 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8022082:	632b      	str	r3, [r5, #48]	; 0x30
 8022084:	4b07      	ldr	r3, [pc, #28]	; (80220a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8022086:	636b      	str	r3, [r5, #52]	; 0x34
 8022088:	bd38      	pop	{r3, r4, r5, pc}
 802208a:	bf00      	nop
 802208c:	20002420 	.word	0x20002420
 8022090:	20000000 	.word	0x20000000
 8022094:	0801ec3d 	.word	0x0801ec3d
 8022098:	20000080 	.word	0x20000080
 802209c:	20002424 	.word	0x20002424
 80220a0:	0801ec3b 	.word	0x0801ec3b
 80220a4:	20000084 	.word	0x20000084

080220a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80220a8:	b538      	push	{r3, r4, r5, lr}
 80220aa:	4c15      	ldr	r4, [pc, #84]	; (8022100 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80220ac:	7823      	ldrb	r3, [r4, #0]
 80220ae:	f3bf 8f5b 	dmb	ish
 80220b2:	07da      	lsls	r2, r3, #31
 80220b4:	4605      	mov	r5, r0
 80220b6:	d40b      	bmi.n	80220d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80220b8:	4620      	mov	r0, r4
 80220ba:	f008 f8aa 	bl	802a212 <__cxa_guard_acquire>
 80220be:	b138      	cbz	r0, 80220d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80220c0:	4620      	mov	r0, r4
 80220c2:	f008 f8b2 	bl	802a22a <__cxa_guard_release>
 80220c6:	4a0f      	ldr	r2, [pc, #60]	; (8022104 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80220c8:	490f      	ldr	r1, [pc, #60]	; (8022108 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80220ca:	4810      	ldr	r0, [pc, #64]	; (802210c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80220cc:	f008 f89a 	bl	802a204 <__aeabi_atexit>
 80220d0:	4c0f      	ldr	r4, [pc, #60]	; (8022110 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80220d2:	7823      	ldrb	r3, [r4, #0]
 80220d4:	f3bf 8f5b 	dmb	ish
 80220d8:	07db      	lsls	r3, r3, #31
 80220da:	d40b      	bmi.n	80220f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80220dc:	4620      	mov	r0, r4
 80220de:	f008 f898 	bl	802a212 <__cxa_guard_acquire>
 80220e2:	b138      	cbz	r0, 80220f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80220e4:	4620      	mov	r0, r4
 80220e6:	f008 f8a0 	bl	802a22a <__cxa_guard_release>
 80220ea:	4a06      	ldr	r2, [pc, #24]	; (8022104 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80220ec:	4909      	ldr	r1, [pc, #36]	; (8022114 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80220ee:	480a      	ldr	r0, [pc, #40]	; (8022118 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80220f0:	f008 f888 	bl	802a204 <__aeabi_atexit>
 80220f4:	4b05      	ldr	r3, [pc, #20]	; (802210c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80220f6:	62ab      	str	r3, [r5, #40]	; 0x28
 80220f8:	4b07      	ldr	r3, [pc, #28]	; (8022118 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80220fa:	62eb      	str	r3, [r5, #44]	; 0x2c
 80220fc:	bd38      	pop	{r3, r4, r5, pc}
 80220fe:	bf00      	nop
 8022100:	200023f0 	.word	0x200023f0
 8022104:	20000000 	.word	0x20000000
 8022108:	0801ec41 	.word	0x0801ec41
 802210c:	20000050 	.word	0x20000050
 8022110:	200023f4 	.word	0x200023f4
 8022114:	0801ec3f 	.word	0x0801ec3f
 8022118:	20000054 	.word	0x20000054

0802211c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 802211c:	b510      	push	{r4, lr}
 802211e:	4604      	mov	r4, r0
 8022120:	f7ff ff88 	bl	8022034 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8022124:	4620      	mov	r0, r4
 8022126:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802212a:	f7ff bfbd 	b.w	80220a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08022130 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8022130:	b538      	push	{r3, r4, r5, lr}
 8022132:	4c15      	ldr	r4, [pc, #84]	; (8022188 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8022134:	7823      	ldrb	r3, [r4, #0]
 8022136:	f3bf 8f5b 	dmb	ish
 802213a:	07da      	lsls	r2, r3, #31
 802213c:	4605      	mov	r5, r0
 802213e:	d40b      	bmi.n	8022158 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8022140:	4620      	mov	r0, r4
 8022142:	f008 f866 	bl	802a212 <__cxa_guard_acquire>
 8022146:	b138      	cbz	r0, 8022158 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8022148:	4620      	mov	r0, r4
 802214a:	f008 f86e 	bl	802a22a <__cxa_guard_release>
 802214e:	4a0f      	ldr	r2, [pc, #60]	; (802218c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8022150:	490f      	ldr	r1, [pc, #60]	; (8022190 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8022152:	4810      	ldr	r0, [pc, #64]	; (8022194 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8022154:	f008 f856 	bl	802a204 <__aeabi_atexit>
 8022158:	4c0f      	ldr	r4, [pc, #60]	; (8022198 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 802215a:	7823      	ldrb	r3, [r4, #0]
 802215c:	f3bf 8f5b 	dmb	ish
 8022160:	07db      	lsls	r3, r3, #31
 8022162:	d40b      	bmi.n	802217c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8022164:	4620      	mov	r0, r4
 8022166:	f008 f854 	bl	802a212 <__cxa_guard_acquire>
 802216a:	b138      	cbz	r0, 802217c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 802216c:	4620      	mov	r0, r4
 802216e:	f008 f85c 	bl	802a22a <__cxa_guard_release>
 8022172:	4a06      	ldr	r2, [pc, #24]	; (802218c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8022174:	4909      	ldr	r1, [pc, #36]	; (802219c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8022176:	480a      	ldr	r0, [pc, #40]	; (80221a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8022178:	f008 f844 	bl	802a204 <__aeabi_atexit>
 802217c:	4b05      	ldr	r3, [pc, #20]	; (8022194 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 802217e:	652b      	str	r3, [r5, #80]	; 0x50
 8022180:	4b07      	ldr	r3, [pc, #28]	; (80221a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8022182:	656b      	str	r3, [r5, #84]	; 0x54
 8022184:	bd38      	pop	{r3, r4, r5, pc}
 8022186:	bf00      	nop
 8022188:	20002428 	.word	0x20002428
 802218c:	20000000 	.word	0x20000000
 8022190:	0801ec2d 	.word	0x0801ec2d
 8022194:	20000088 	.word	0x20000088
 8022198:	2000242c 	.word	0x2000242c
 802219c:	0801ec2b 	.word	0x0801ec2b
 80221a0:	2000008c 	.word	0x2000008c

080221a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80221a4:	b538      	push	{r3, r4, r5, lr}
 80221a6:	4c15      	ldr	r4, [pc, #84]	; (80221fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80221a8:	7823      	ldrb	r3, [r4, #0]
 80221aa:	f3bf 8f5b 	dmb	ish
 80221ae:	07da      	lsls	r2, r3, #31
 80221b0:	4605      	mov	r5, r0
 80221b2:	d40b      	bmi.n	80221cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80221b4:	4620      	mov	r0, r4
 80221b6:	f008 f82c 	bl	802a212 <__cxa_guard_acquire>
 80221ba:	b138      	cbz	r0, 80221cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80221bc:	4620      	mov	r0, r4
 80221be:	f008 f834 	bl	802a22a <__cxa_guard_release>
 80221c2:	4a0f      	ldr	r2, [pc, #60]	; (8022200 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80221c4:	490f      	ldr	r1, [pc, #60]	; (8022204 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80221c6:	4810      	ldr	r0, [pc, #64]	; (8022208 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80221c8:	f008 f81c 	bl	802a204 <__aeabi_atexit>
 80221cc:	4c0f      	ldr	r4, [pc, #60]	; (802220c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80221ce:	7823      	ldrb	r3, [r4, #0]
 80221d0:	f3bf 8f5b 	dmb	ish
 80221d4:	07db      	lsls	r3, r3, #31
 80221d6:	d40b      	bmi.n	80221f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80221d8:	4620      	mov	r0, r4
 80221da:	f008 f81a 	bl	802a212 <__cxa_guard_acquire>
 80221de:	b138      	cbz	r0, 80221f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80221e0:	4620      	mov	r0, r4
 80221e2:	f008 f822 	bl	802a22a <__cxa_guard_release>
 80221e6:	4a06      	ldr	r2, [pc, #24]	; (8022200 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80221e8:	4909      	ldr	r1, [pc, #36]	; (8022210 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80221ea:	480a      	ldr	r0, [pc, #40]	; (8022214 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80221ec:	f008 f80a 	bl	802a204 <__aeabi_atexit>
 80221f0:	4b05      	ldr	r3, [pc, #20]	; (8022208 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80221f2:	64ab      	str	r3, [r5, #72]	; 0x48
 80221f4:	4b07      	ldr	r3, [pc, #28]	; (8022214 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80221f6:	64eb      	str	r3, [r5, #76]	; 0x4c
 80221f8:	bd38      	pop	{r3, r4, r5, pc}
 80221fa:	bf00      	nop
 80221fc:	20002430 	.word	0x20002430
 8022200:	20000000 	.word	0x20000000
 8022204:	0801ec31 	.word	0x0801ec31
 8022208:	20000090 	.word	0x20000090
 802220c:	20002434 	.word	0x20002434
 8022210:	0801ec2f 	.word	0x0801ec2f
 8022214:	20000094 	.word	0x20000094

08022218 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8022218:	b538      	push	{r3, r4, r5, lr}
 802221a:	4c15      	ldr	r4, [pc, #84]	; (8022270 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 802221c:	7823      	ldrb	r3, [r4, #0]
 802221e:	f3bf 8f5b 	dmb	ish
 8022222:	07da      	lsls	r2, r3, #31
 8022224:	4605      	mov	r5, r0
 8022226:	d40b      	bmi.n	8022240 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8022228:	4620      	mov	r0, r4
 802222a:	f007 fff2 	bl	802a212 <__cxa_guard_acquire>
 802222e:	b138      	cbz	r0, 8022240 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8022230:	4620      	mov	r0, r4
 8022232:	f007 fffa 	bl	802a22a <__cxa_guard_release>
 8022236:	4a0f      	ldr	r2, [pc, #60]	; (8022274 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8022238:	490f      	ldr	r1, [pc, #60]	; (8022278 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 802223a:	4810      	ldr	r0, [pc, #64]	; (802227c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 802223c:	f007 ffe2 	bl	802a204 <__aeabi_atexit>
 8022240:	4c0f      	ldr	r4, [pc, #60]	; (8022280 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8022242:	7823      	ldrb	r3, [r4, #0]
 8022244:	f3bf 8f5b 	dmb	ish
 8022248:	07db      	lsls	r3, r3, #31
 802224a:	d40b      	bmi.n	8022264 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 802224c:	4620      	mov	r0, r4
 802224e:	f007 ffe0 	bl	802a212 <__cxa_guard_acquire>
 8022252:	b138      	cbz	r0, 8022264 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8022254:	4620      	mov	r0, r4
 8022256:	f007 ffe8 	bl	802a22a <__cxa_guard_release>
 802225a:	4a06      	ldr	r2, [pc, #24]	; (8022274 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 802225c:	4909      	ldr	r1, [pc, #36]	; (8022284 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 802225e:	480a      	ldr	r0, [pc, #40]	; (8022288 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8022260:	f007 ffd0 	bl	802a204 <__aeabi_atexit>
 8022264:	4b05      	ldr	r3, [pc, #20]	; (802227c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8022266:	642b      	str	r3, [r5, #64]	; 0x40
 8022268:	4b07      	ldr	r3, [pc, #28]	; (8022288 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 802226a:	646b      	str	r3, [r5, #68]	; 0x44
 802226c:	bd38      	pop	{r3, r4, r5, pc}
 802226e:	bf00      	nop
 8022270:	200023f8 	.word	0x200023f8
 8022274:	20000000 	.word	0x20000000
 8022278:	0801ec35 	.word	0x0801ec35
 802227c:	20000058 	.word	0x20000058
 8022280:	200023fc 	.word	0x200023fc
 8022284:	0801ec33 	.word	0x0801ec33
 8022288:	2000005c 	.word	0x2000005c

0802228c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 802228c:	b538      	push	{r3, r4, r5, lr}
 802228e:	4c15      	ldr	r4, [pc, #84]	; (80222e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8022290:	7823      	ldrb	r3, [r4, #0]
 8022292:	f3bf 8f5b 	dmb	ish
 8022296:	07da      	lsls	r2, r3, #31
 8022298:	4605      	mov	r5, r0
 802229a:	d40b      	bmi.n	80222b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 802229c:	4620      	mov	r0, r4
 802229e:	f007 ffb8 	bl	802a212 <__cxa_guard_acquire>
 80222a2:	b138      	cbz	r0, 80222b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80222a4:	4620      	mov	r0, r4
 80222a6:	f007 ffc0 	bl	802a22a <__cxa_guard_release>
 80222aa:	4a0f      	ldr	r2, [pc, #60]	; (80222e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80222ac:	490f      	ldr	r1, [pc, #60]	; (80222ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80222ae:	4810      	ldr	r0, [pc, #64]	; (80222f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80222b0:	f007 ffa8 	bl	802a204 <__aeabi_atexit>
 80222b4:	4c0f      	ldr	r4, [pc, #60]	; (80222f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80222b6:	7823      	ldrb	r3, [r4, #0]
 80222b8:	f3bf 8f5b 	dmb	ish
 80222bc:	07db      	lsls	r3, r3, #31
 80222be:	d40b      	bmi.n	80222d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80222c0:	4620      	mov	r0, r4
 80222c2:	f007 ffa6 	bl	802a212 <__cxa_guard_acquire>
 80222c6:	b138      	cbz	r0, 80222d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80222c8:	4620      	mov	r0, r4
 80222ca:	f007 ffae 	bl	802a22a <__cxa_guard_release>
 80222ce:	4a06      	ldr	r2, [pc, #24]	; (80222e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80222d0:	4909      	ldr	r1, [pc, #36]	; (80222f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80222d2:	480a      	ldr	r0, [pc, #40]	; (80222fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80222d4:	f007 ff96 	bl	802a204 <__aeabi_atexit>
 80222d8:	4b05      	ldr	r3, [pc, #20]	; (80222f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80222da:	63ab      	str	r3, [r5, #56]	; 0x38
 80222dc:	4b07      	ldr	r3, [pc, #28]	; (80222fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80222de:	63eb      	str	r3, [r5, #60]	; 0x3c
 80222e0:	bd38      	pop	{r3, r4, r5, pc}
 80222e2:	bf00      	nop
 80222e4:	20002418 	.word	0x20002418
 80222e8:	20000000 	.word	0x20000000
 80222ec:	0801ec39 	.word	0x0801ec39
 80222f0:	20000078 	.word	0x20000078
 80222f4:	2000241c 	.word	0x2000241c
 80222f8:	0801ec37 	.word	0x0801ec37
 80222fc:	2000007c 	.word	0x2000007c

08022300 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8022300:	b510      	push	{r4, lr}
 8022302:	4604      	mov	r4, r0
 8022304:	f7ff ff14 	bl	8022130 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8022308:	4620      	mov	r0, r4
 802230a:	f7ff ff85 	bl	8022218 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 802230e:	4620      	mov	r0, r4
 8022310:	f7ff ff48 	bl	80221a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8022314:	4620      	mov	r0, r4
 8022316:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802231a:	f7ff bfb7 	b.w	802228c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08022320 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8022320:	b538      	push	{r3, r4, r5, lr}
 8022322:	4c15      	ldr	r4, [pc, #84]	; (8022378 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8022324:	7823      	ldrb	r3, [r4, #0]
 8022326:	f3bf 8f5b 	dmb	ish
 802232a:	07da      	lsls	r2, r3, #31
 802232c:	4605      	mov	r5, r0
 802232e:	d40b      	bmi.n	8022348 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8022330:	4620      	mov	r0, r4
 8022332:	f007 ff6e 	bl	802a212 <__cxa_guard_acquire>
 8022336:	b138      	cbz	r0, 8022348 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8022338:	4620      	mov	r0, r4
 802233a:	f007 ff76 	bl	802a22a <__cxa_guard_release>
 802233e:	4a0f      	ldr	r2, [pc, #60]	; (802237c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8022340:	490f      	ldr	r1, [pc, #60]	; (8022380 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8022342:	4810      	ldr	r0, [pc, #64]	; (8022384 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8022344:	f007 ff5e 	bl	802a204 <__aeabi_atexit>
 8022348:	4c0f      	ldr	r4, [pc, #60]	; (8022388 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 802234a:	7823      	ldrb	r3, [r4, #0]
 802234c:	f3bf 8f5b 	dmb	ish
 8022350:	07db      	lsls	r3, r3, #31
 8022352:	d40b      	bmi.n	802236c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8022354:	4620      	mov	r0, r4
 8022356:	f007 ff5c 	bl	802a212 <__cxa_guard_acquire>
 802235a:	b138      	cbz	r0, 802236c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 802235c:	4620      	mov	r0, r4
 802235e:	f007 ff64 	bl	802a22a <__cxa_guard_release>
 8022362:	4a06      	ldr	r2, [pc, #24]	; (802237c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8022364:	4909      	ldr	r1, [pc, #36]	; (802238c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8022366:	480a      	ldr	r0, [pc, #40]	; (8022390 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8022368:	f007 ff4c 	bl	802a204 <__aeabi_atexit>
 802236c:	4b05      	ldr	r3, [pc, #20]	; (8022384 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802236e:	662b      	str	r3, [r5, #96]	; 0x60
 8022370:	4b07      	ldr	r3, [pc, #28]	; (8022390 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8022372:	666b      	str	r3, [r5, #100]	; 0x64
 8022374:	bd38      	pop	{r3, r4, r5, pc}
 8022376:	bf00      	nop
 8022378:	20002400 	.word	0x20002400
 802237c:	20000000 	.word	0x20000000
 8022380:	0801ec25 	.word	0x0801ec25
 8022384:	20000060 	.word	0x20000060
 8022388:	20002404 	.word	0x20002404
 802238c:	0801ec23 	.word	0x0801ec23
 8022390:	20000064 	.word	0x20000064

08022394 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8022394:	b538      	push	{r3, r4, r5, lr}
 8022396:	4c15      	ldr	r4, [pc, #84]	; (80223ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8022398:	7823      	ldrb	r3, [r4, #0]
 802239a:	f3bf 8f5b 	dmb	ish
 802239e:	07da      	lsls	r2, r3, #31
 80223a0:	4605      	mov	r5, r0
 80223a2:	d40b      	bmi.n	80223bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80223a4:	4620      	mov	r0, r4
 80223a6:	f007 ff34 	bl	802a212 <__cxa_guard_acquire>
 80223aa:	b138      	cbz	r0, 80223bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80223ac:	4620      	mov	r0, r4
 80223ae:	f007 ff3c 	bl	802a22a <__cxa_guard_release>
 80223b2:	4a0f      	ldr	r2, [pc, #60]	; (80223f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80223b4:	490f      	ldr	r1, [pc, #60]	; (80223f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80223b6:	4810      	ldr	r0, [pc, #64]	; (80223f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80223b8:	f007 ff24 	bl	802a204 <__aeabi_atexit>
 80223bc:	4c0f      	ldr	r4, [pc, #60]	; (80223fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80223be:	7823      	ldrb	r3, [r4, #0]
 80223c0:	f3bf 8f5b 	dmb	ish
 80223c4:	07db      	lsls	r3, r3, #31
 80223c6:	d40b      	bmi.n	80223e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80223c8:	4620      	mov	r0, r4
 80223ca:	f007 ff22 	bl	802a212 <__cxa_guard_acquire>
 80223ce:	b138      	cbz	r0, 80223e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80223d0:	4620      	mov	r0, r4
 80223d2:	f007 ff2a 	bl	802a22a <__cxa_guard_release>
 80223d6:	4a06      	ldr	r2, [pc, #24]	; (80223f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80223d8:	4909      	ldr	r1, [pc, #36]	; (8022400 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80223da:	480a      	ldr	r0, [pc, #40]	; (8022404 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80223dc:	f007 ff12 	bl	802a204 <__aeabi_atexit>
 80223e0:	4b05      	ldr	r3, [pc, #20]	; (80223f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80223e2:	65ab      	str	r3, [r5, #88]	; 0x58
 80223e4:	4b07      	ldr	r3, [pc, #28]	; (8022404 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80223e6:	65eb      	str	r3, [r5, #92]	; 0x5c
 80223e8:	bd38      	pop	{r3, r4, r5, pc}
 80223ea:	bf00      	nop
 80223ec:	200023d8 	.word	0x200023d8
 80223f0:	20000000 	.word	0x20000000
 80223f4:	0801ec29 	.word	0x0801ec29
 80223f8:	20000038 	.word	0x20000038
 80223fc:	200023dc 	.word	0x200023dc
 8022400:	0801ec27 	.word	0x0801ec27
 8022404:	2000003c 	.word	0x2000003c

08022408 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8022408:	b510      	push	{r4, lr}
 802240a:	4604      	mov	r4, r0
 802240c:	f7ff ff88 	bl	8022320 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8022410:	4620      	mov	r0, r4
 8022412:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022416:	f7ff bfbd 	b.w	8022394 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0802241c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 802241c:	b538      	push	{r3, r4, r5, lr}
 802241e:	4c15      	ldr	r4, [pc, #84]	; (8022474 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8022420:	7823      	ldrb	r3, [r4, #0]
 8022422:	f3bf 8f5b 	dmb	ish
 8022426:	07da      	lsls	r2, r3, #31
 8022428:	4605      	mov	r5, r0
 802242a:	d40b      	bmi.n	8022444 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 802242c:	4620      	mov	r0, r4
 802242e:	f007 fef0 	bl	802a212 <__cxa_guard_acquire>
 8022432:	b138      	cbz	r0, 8022444 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8022434:	4620      	mov	r0, r4
 8022436:	f007 fef8 	bl	802a22a <__cxa_guard_release>
 802243a:	4a0f      	ldr	r2, [pc, #60]	; (8022478 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 802243c:	490f      	ldr	r1, [pc, #60]	; (802247c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 802243e:	4810      	ldr	r0, [pc, #64]	; (8022480 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8022440:	f007 fee0 	bl	802a204 <__aeabi_atexit>
 8022444:	4c0f      	ldr	r4, [pc, #60]	; (8022484 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8022446:	7823      	ldrb	r3, [r4, #0]
 8022448:	f3bf 8f5b 	dmb	ish
 802244c:	07db      	lsls	r3, r3, #31
 802244e:	d40b      	bmi.n	8022468 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8022450:	4620      	mov	r0, r4
 8022452:	f007 fede 	bl	802a212 <__cxa_guard_acquire>
 8022456:	b138      	cbz	r0, 8022468 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8022458:	4620      	mov	r0, r4
 802245a:	f007 fee6 	bl	802a22a <__cxa_guard_release>
 802245e:	4a06      	ldr	r2, [pc, #24]	; (8022478 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8022460:	4909      	ldr	r1, [pc, #36]	; (8022488 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8022462:	480a      	ldr	r0, [pc, #40]	; (802248c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8022464:	f007 fece 	bl	802a204 <__aeabi_atexit>
 8022468:	4b05      	ldr	r3, [pc, #20]	; (8022480 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 802246a:	672b      	str	r3, [r5, #112]	; 0x70
 802246c:	4b07      	ldr	r3, [pc, #28]	; (802248c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 802246e:	676b      	str	r3, [r5, #116]	; 0x74
 8022470:	bd38      	pop	{r3, r4, r5, pc}
 8022472:	bf00      	nop
 8022474:	200023d0 	.word	0x200023d0
 8022478:	20000000 	.word	0x20000000
 802247c:	0801ec1d 	.word	0x0801ec1d
 8022480:	20000030 	.word	0x20000030
 8022484:	200023d4 	.word	0x200023d4
 8022488:	0801ec1b 	.word	0x0801ec1b
 802248c:	20000034 	.word	0x20000034

08022490 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8022490:	b538      	push	{r3, r4, r5, lr}
 8022492:	4c15      	ldr	r4, [pc, #84]	; (80224e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8022494:	7823      	ldrb	r3, [r4, #0]
 8022496:	f3bf 8f5b 	dmb	ish
 802249a:	07da      	lsls	r2, r3, #31
 802249c:	4605      	mov	r5, r0
 802249e:	d40b      	bmi.n	80224b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80224a0:	4620      	mov	r0, r4
 80224a2:	f007 feb6 	bl	802a212 <__cxa_guard_acquire>
 80224a6:	b138      	cbz	r0, 80224b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80224a8:	4620      	mov	r0, r4
 80224aa:	f007 febe 	bl	802a22a <__cxa_guard_release>
 80224ae:	4a0f      	ldr	r2, [pc, #60]	; (80224ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80224b0:	490f      	ldr	r1, [pc, #60]	; (80224f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80224b2:	4810      	ldr	r0, [pc, #64]	; (80224f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80224b4:	f007 fea6 	bl	802a204 <__aeabi_atexit>
 80224b8:	4c0f      	ldr	r4, [pc, #60]	; (80224f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80224ba:	7823      	ldrb	r3, [r4, #0]
 80224bc:	f3bf 8f5b 	dmb	ish
 80224c0:	07db      	lsls	r3, r3, #31
 80224c2:	d40b      	bmi.n	80224dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80224c4:	4620      	mov	r0, r4
 80224c6:	f007 fea4 	bl	802a212 <__cxa_guard_acquire>
 80224ca:	b138      	cbz	r0, 80224dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80224cc:	4620      	mov	r0, r4
 80224ce:	f007 feac 	bl	802a22a <__cxa_guard_release>
 80224d2:	4a06      	ldr	r2, [pc, #24]	; (80224ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80224d4:	4909      	ldr	r1, [pc, #36]	; (80224fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80224d6:	480a      	ldr	r0, [pc, #40]	; (8022500 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80224d8:	f007 fe94 	bl	802a204 <__aeabi_atexit>
 80224dc:	4b05      	ldr	r3, [pc, #20]	; (80224f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80224de:	66ab      	str	r3, [r5, #104]	; 0x68
 80224e0:	4b07      	ldr	r3, [pc, #28]	; (8022500 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80224e2:	66eb      	str	r3, [r5, #108]	; 0x6c
 80224e4:	bd38      	pop	{r3, r4, r5, pc}
 80224e6:	bf00      	nop
 80224e8:	200023c8 	.word	0x200023c8
 80224ec:	20000000 	.word	0x20000000
 80224f0:	0801ec21 	.word	0x0801ec21
 80224f4:	20000028 	.word	0x20000028
 80224f8:	200023cc 	.word	0x200023cc
 80224fc:	0801ec1f 	.word	0x0801ec1f
 8022500:	2000002c 	.word	0x2000002c

08022504 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8022504:	b510      	push	{r4, lr}
 8022506:	4604      	mov	r4, r0
 8022508:	f7ff ff88 	bl	802241c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 802250c:	4620      	mov	r0, r4
 802250e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022512:	f7ff bfbd 	b.w	8022490 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08022516 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8022516:	b510      	push	{r4, lr}
 8022518:	4604      	mov	r4, r0
 802251a:	f7ff fff3 	bl	8022504 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 802251e:	4620      	mov	r0, r4
 8022520:	f7ff ff72 	bl	8022408 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8022524:	4620      	mov	r0, r4
 8022526:	f7ff fdf9 	bl	802211c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 802252a:	4620      	mov	r0, r4
 802252c:	f7ff fcfa 	bl	8021f24 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8022530:	4620      	mov	r0, r4
 8022532:	f7ff fd75 	bl	8022020 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8022536:	4620      	mov	r0, r4
 8022538:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802253c:	f7ff bee0 	b.w	8022300 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08022540 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8022540:	b538      	push	{r3, r4, r5, lr}
 8022542:	4c0b      	ldr	r4, [pc, #44]	; (8022570 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8022544:	7823      	ldrb	r3, [r4, #0]
 8022546:	f3bf 8f5b 	dmb	ish
 802254a:	07db      	lsls	r3, r3, #31
 802254c:	4605      	mov	r5, r0
 802254e:	d40b      	bmi.n	8022568 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8022550:	4620      	mov	r0, r4
 8022552:	f007 fe5e 	bl	802a212 <__cxa_guard_acquire>
 8022556:	b138      	cbz	r0, 8022568 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8022558:	4620      	mov	r0, r4
 802255a:	f007 fe66 	bl	802a22a <__cxa_guard_release>
 802255e:	4a05      	ldr	r2, [pc, #20]	; (8022574 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8022560:	4905      	ldr	r1, [pc, #20]	; (8022578 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8022562:	4806      	ldr	r0, [pc, #24]	; (802257c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8022564:	f007 fe4e 	bl	802a204 <__aeabi_atexit>
 8022568:	4b04      	ldr	r3, [pc, #16]	; (802257c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 802256a:	67ab      	str	r3, [r5, #120]	; 0x78
 802256c:	bd38      	pop	{r3, r4, r5, pc}
 802256e:	bf00      	nop
 8022570:	200023bc 	.word	0x200023bc
 8022574:	20000000 	.word	0x20000000
 8022578:	0801ec19 	.word	0x0801ec19
 802257c:	20000020 	.word	0x20000020

08022580 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8022580:	b538      	push	{r3, r4, r5, lr}
 8022582:	4c0b      	ldr	r4, [pc, #44]	; (80225b0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8022584:	7823      	ldrb	r3, [r4, #0]
 8022586:	f3bf 8f5b 	dmb	ish
 802258a:	07db      	lsls	r3, r3, #31
 802258c:	4605      	mov	r5, r0
 802258e:	d40b      	bmi.n	80225a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8022590:	4620      	mov	r0, r4
 8022592:	f007 fe3e 	bl	802a212 <__cxa_guard_acquire>
 8022596:	b138      	cbz	r0, 80225a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8022598:	4620      	mov	r0, r4
 802259a:	f007 fe46 	bl	802a22a <__cxa_guard_release>
 802259e:	4a05      	ldr	r2, [pc, #20]	; (80225b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 80225a0:	4905      	ldr	r1, [pc, #20]	; (80225b8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 80225a2:	4806      	ldr	r0, [pc, #24]	; (80225bc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80225a4:	f007 fe2e 	bl	802a204 <__aeabi_atexit>
 80225a8:	4b04      	ldr	r3, [pc, #16]	; (80225bc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80225aa:	67eb      	str	r3, [r5, #124]	; 0x7c
 80225ac:	bd38      	pop	{r3, r4, r5, pc}
 80225ae:	bf00      	nop
 80225b0:	200023c0 	.word	0x200023c0
 80225b4:	20000000 	.word	0x20000000
 80225b8:	0801ec17 	.word	0x0801ec17
 80225bc:	20000024 	.word	0x20000024

080225c0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80225c0:	b570      	push	{r4, r5, r6, lr}
 80225c2:	4d0d      	ldr	r5, [pc, #52]	; (80225f8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80225c4:	4c0d      	ldr	r4, [pc, #52]	; (80225fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80225c6:	782b      	ldrb	r3, [r5, #0]
 80225c8:	f3bf 8f5b 	dmb	ish
 80225cc:	f013 0f01 	tst.w	r3, #1
 80225d0:	4606      	mov	r6, r0
 80225d2:	d10d      	bne.n	80225f0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80225d4:	4628      	mov	r0, r5
 80225d6:	f007 fe1c 	bl	802a212 <__cxa_guard_acquire>
 80225da:	b148      	cbz	r0, 80225f0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80225dc:	4b08      	ldr	r3, [pc, #32]	; (8022600 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80225de:	6023      	str	r3, [r4, #0]
 80225e0:	4628      	mov	r0, r5
 80225e2:	f007 fe22 	bl	802a22a <__cxa_guard_release>
 80225e6:	4a07      	ldr	r2, [pc, #28]	; (8022604 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80225e8:	4907      	ldr	r1, [pc, #28]	; (8022608 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 80225ea:	4620      	mov	r0, r4
 80225ec:	f007 fe0a 	bl	802a204 <__aeabi_atexit>
 80225f0:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 80225f4:	bd70      	pop	{r4, r5, r6, pc}
 80225f6:	bf00      	nop
 80225f8:	200023c4 	.word	0x200023c4
 80225fc:	20002438 	.word	0x20002438
 8022600:	0802f9c8 	.word	0x0802f9c8
 8022604:	20000000 	.word	0x20000000
 8022608:	0801ec15 	.word	0x0801ec15

0802260c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 802260c:	b510      	push	{r4, lr}
 802260e:	4604      	mov	r4, r0
 8022610:	f7ff ff96 	bl	8022540 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8022614:	4620      	mov	r0, r4
 8022616:	f7ff ffb3 	bl	8022580 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 802261a:	4620      	mov	r0, r4
 802261c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022620:	f7ff bfce 	b.w	80225c0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

08022624 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8022624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022628:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 802262c:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8022630:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 8022634:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8022638:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 802263c:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8022640:	8808      	ldrh	r0, [r1, #0]
 8022642:	fb05 4c0e 	mla	ip, r5, lr, r4
 8022646:	2d00      	cmp	r5, #0
 8022648:	eb02 0a0c 	add.w	sl, r2, ip
 802264c:	f2c0 80b0 	blt.w	80227b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8022650:	45ab      	cmp	fp, r5
 8022652:	f340 80ad 	ble.w	80227b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8022656:	2c00      	cmp	r4, #0
 8022658:	f2c0 80a8 	blt.w	80227ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 802265c:	45a6      	cmp	lr, r4
 802265e:	f340 80a5 	ble.w	80227ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8022662:	f812 200c 	ldrb.w	r2, [r2, ip]
 8022666:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 802266a:	1c62      	adds	r2, r4, #1
 802266c:	f100 80a3 	bmi.w	80227b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022670:	4596      	cmp	lr, r2
 8022672:	f340 80a0 	ble.w	80227b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022676:	f1b9 0f00 	cmp.w	r9, #0
 802267a:	f000 809c 	beq.w	80227b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 802267e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8022682:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8022686:	3501      	adds	r5, #1
 8022688:	f100 8099 	bmi.w	80227be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 802268c:	45ab      	cmp	fp, r5
 802268e:	f340 8096 	ble.w	80227be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8022692:	2f00      	cmp	r7, #0
 8022694:	f000 8093 	beq.w	80227be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8022698:	2c00      	cmp	r4, #0
 802269a:	f2c0 808e 	blt.w	80227ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 802269e:	45a6      	cmp	lr, r4
 80226a0:	f340 808b 	ble.w	80227ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80226a4:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80226a8:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80226ac:	3401      	adds	r4, #1
 80226ae:	f100 8089 	bmi.w	80227c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80226b2:	45a6      	cmp	lr, r4
 80226b4:	f340 8086 	ble.w	80227c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80226b8:	f1b9 0f00 	cmp.w	r9, #0
 80226bc:	f000 8082 	beq.w	80227c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80226c0:	44d6      	add	lr, sl
 80226c2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80226c6:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80226ca:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80226ce:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80226d2:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80226d6:	fb19 fe07 	smulbb	lr, r9, r7
 80226da:	ea44 0808 	orr.w	r8, r4, r8
 80226de:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80226e2:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80226e6:	f1c7 0210 	rsb	r2, r7, #16
 80226ea:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80226ee:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80226f2:	ea44 0c0c 	orr.w	ip, r4, ip
 80226f6:	eba2 0209 	sub.w	r2, r2, r9
 80226fa:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80226fe:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8022702:	fb04 f40c 	mul.w	r4, r4, ip
 8022706:	fb02 4808 	mla	r8, r2, r8, r4
 802270a:	041a      	lsls	r2, r3, #16
 802270c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022710:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022714:	4313      	orrs	r3, r2
 8022716:	042a      	lsls	r2, r5, #16
 8022718:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802271c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022720:	fb0e 8303 	mla	r3, lr, r3, r8
 8022724:	432a      	orrs	r2, r5
 8022726:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802272a:	fb07 3202 	mla	r2, r7, r2, r3
 802272e:	0d53      	lsrs	r3, r2, #21
 8022730:	0952      	lsrs	r2, r2, #5
 8022732:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022736:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802273a:	431a      	orrs	r2, r3
 802273c:	b293      	uxth	r3, r2
 802273e:	b2b4      	uxth	r4, r6
 8022740:	1202      	asrs	r2, r0, #8
 8022742:	43f6      	mvns	r6, r6
 8022744:	b2f6      	uxtb	r6, r6
 8022746:	121d      	asrs	r5, r3, #8
 8022748:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802274c:	fb12 f206 	smulbb	r2, r2, r6
 8022750:	10c7      	asrs	r7, r0, #3
 8022752:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022756:	00c0      	lsls	r0, r0, #3
 8022758:	fb05 2504 	mla	r5, r5, r4, r2
 802275c:	b2c0      	uxtb	r0, r0
 802275e:	10da      	asrs	r2, r3, #3
 8022760:	00db      	lsls	r3, r3, #3
 8022762:	b2db      	uxtb	r3, r3
 8022764:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022768:	fb10 f006 	smulbb	r0, r0, r6
 802276c:	b2ad      	uxth	r5, r5
 802276e:	fb03 0004 	mla	r0, r3, r4, r0
 8022772:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022776:	fb17 f706 	smulbb	r7, r7, r6
 802277a:	b280      	uxth	r0, r0
 802277c:	1c6b      	adds	r3, r5, #1
 802277e:	fb02 7204 	mla	r2, r2, r4, r7
 8022782:	b292      	uxth	r2, r2
 8022784:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022788:	1c43      	adds	r3, r0, #1
 802278a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802278e:	1c50      	adds	r0, r2, #1
 8022790:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8022794:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022798:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802279c:	0952      	lsrs	r2, r2, #5
 802279e:	432b      	orrs	r3, r5
 80227a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80227a4:	4313      	orrs	r3, r2
 80227a6:	800b      	strh	r3, [r1, #0]
 80227a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80227ac:	4680      	mov	r8, r0
 80227ae:	e75c      	b.n	802266a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80227b0:	4684      	mov	ip, r0
 80227b2:	4680      	mov	r8, r0
 80227b4:	e767      	b.n	8022686 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80227b6:	4684      	mov	ip, r0
 80227b8:	e765      	b.n	8022686 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80227ba:	4605      	mov	r5, r0
 80227bc:	e776      	b.n	80226ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 80227be:	4603      	mov	r3, r0
 80227c0:	4605      	mov	r5, r0
 80227c2:	e782      	b.n	80226ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80227c4:	4603      	mov	r3, r0
 80227c6:	e780      	b.n	80226ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080227c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80227c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80227cc:	b099      	sub	sp, #100	; 0x64
 80227ce:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 80227d2:	9215      	str	r2, [sp, #84]	; 0x54
 80227d4:	9309      	str	r3, [sp, #36]	; 0x24
 80227d6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80227d8:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 80227dc:	930d      	str	r3, [sp, #52]	; 0x34
 80227de:	910c      	str	r1, [sp, #48]	; 0x30
 80227e0:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 80227e4:	9016      	str	r0, [sp, #88]	; 0x58
 80227e6:	6850      	ldr	r0, [r2, #4]
 80227e8:	6812      	ldr	r2, [r2, #0]
 80227ea:	fb00 1303 	mla	r3, r0, r3, r1
 80227ee:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80227f2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80227f4:	681b      	ldr	r3, [r3, #0]
 80227f6:	930b      	str	r3, [sp, #44]	; 0x2c
 80227f8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80227fa:	685e      	ldr	r6, [r3, #4]
 80227fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80227fe:	43db      	mvns	r3, r3
 8022800:	b2db      	uxtb	r3, r3
 8022802:	3604      	adds	r6, #4
 8022804:	930a      	str	r3, [sp, #40]	; 0x28
 8022806:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022808:	2b00      	cmp	r3, #0
 802280a:	dc03      	bgt.n	8022814 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 802280c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 802280e:	2b00      	cmp	r3, #0
 8022810:	f340 8225 	ble.w	8022c5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8022814:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022816:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802281a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802281e:	1e48      	subs	r0, r1, #1
 8022820:	1e57      	subs	r7, r2, #1
 8022822:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022824:	2b00      	cmp	r3, #0
 8022826:	f340 80e3 	ble.w	80229f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 802282a:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 802282e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022832:	d406      	bmi.n	8022842 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022834:	4584      	cmp	ip, r0
 8022836:	da04      	bge.n	8022842 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022838:	2b00      	cmp	r3, #0
 802283a:	db02      	blt.n	8022842 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802283c:	42bb      	cmp	r3, r7
 802283e:	f2c0 80d8 	blt.w	80229f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8022842:	f11c 0c01 	adds.w	ip, ip, #1
 8022846:	f100 80c9 	bmi.w	80229dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802284a:	4561      	cmp	r1, ip
 802284c:	f2c0 80c6 	blt.w	80229dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022850:	3301      	adds	r3, #1
 8022852:	f100 80c3 	bmi.w	80229dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022856:	429a      	cmp	r2, r3
 8022858:	f2c0 80c0 	blt.w	80229dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802285c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8022860:	4647      	mov	r7, r8
 8022862:	f1bb 0f00 	cmp.w	fp, #0
 8022866:	f340 80e3 	ble.w	8022a30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 802286a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 802286c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802286e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022872:	689b      	ldr	r3, [r3, #8]
 8022874:	ea5f 422a 	movs.w	r2, sl, asr #16
 8022878:	ea4f 4c25 	mov.w	ip, r5, asr #16
 802287c:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8022880:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8022884:	f100 8121 	bmi.w	8022aca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022888:	f103 39ff 	add.w	r9, r3, #4294967295
 802288c:	454a      	cmp	r2, r9
 802288e:	f280 811c 	bge.w	8022aca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022892:	f1bc 0f00 	cmp.w	ip, #0
 8022896:	f2c0 8118 	blt.w	8022aca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802289a:	f10e 39ff 	add.w	r9, lr, #4294967295
 802289e:	45cc      	cmp	ip, r9
 80228a0:	f280 8113 	bge.w	8022aca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80228a4:	b21b      	sxth	r3, r3
 80228a6:	fb0c 2203 	mla	r2, ip, r3, r2
 80228aa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80228ac:	eb04 0902 	add.w	r9, r4, r2
 80228b0:	5ca2      	ldrb	r2, [r4, r2]
 80228b2:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 80228b6:	2800      	cmp	r0, #0
 80228b8:	f000 80fe 	beq.w	8022ab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80228bc:	f899 2001 	ldrb.w	r2, [r9, #1]
 80228c0:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80228c4:	9211      	str	r2, [sp, #68]	; 0x44
 80228c6:	b151      	cbz	r1, 80228de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80228c8:	eb09 0203 	add.w	r2, r9, r3
 80228cc:	f819 3003 	ldrb.w	r3, [r9, r3]
 80228d0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80228d4:	930f      	str	r3, [sp, #60]	; 0x3c
 80228d6:	7853      	ldrb	r3, [r2, #1]
 80228d8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80228dc:	9312      	str	r3, [sp, #72]	; 0x48
 80228de:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80228e0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80228e2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80228e6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80228ea:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80228ee:	ea4c 0c03 	orr.w	ip, ip, r3
 80228f2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80228f4:	041b      	lsls	r3, r3, #16
 80228f6:	fb10 f201 	smulbb	r2, r0, r1
 80228fa:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80228fe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022902:	10d2      	asrs	r2, r2, #3
 8022904:	4323      	orrs	r3, r4
 8022906:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 802290a:	4353      	muls	r3, r2
 802290c:	fb09 330c 	mla	r3, r9, ip, r3
 8022910:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8022914:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022918:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802291c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8022920:	f1c1 0c10 	rsb	ip, r1, #16
 8022924:	ebac 0c00 	sub.w	ip, ip, r0
 8022928:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 802292c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8022930:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022932:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022934:	0418      	lsls	r0, r3, #16
 8022936:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802293a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802293e:	4318      	orrs	r0, r3
 8022940:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8022944:	fb02 c200 	mla	r2, r2, r0, ip
 8022948:	0d53      	lsrs	r3, r2, #21
 802294a:	0952      	lsrs	r2, r2, #5
 802294c:	8838      	ldrh	r0, [r7, #0]
 802294e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022952:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022956:	431a      	orrs	r2, r3
 8022958:	b292      	uxth	r2, r2
 802295a:	1201      	asrs	r1, r0, #8
 802295c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8022960:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8022964:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022968:	fb11 f104 	smulbb	r1, r1, r4
 802296c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022970:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8022974:	00c0      	lsls	r0, r0, #3
 8022976:	fb0c 1c03 	mla	ip, ip, r3, r1
 802297a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 802297e:	10d1      	asrs	r1, r2, #3
 8022980:	b2c0      	uxtb	r0, r0
 8022982:	00d2      	lsls	r2, r2, #3
 8022984:	b2d2      	uxtb	r2, r2
 8022986:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802298a:	fb1e fe04 	smulbb	lr, lr, r4
 802298e:	fb10 f004 	smulbb	r0, r0, r4
 8022992:	fa1f fc8c 	uxth.w	ip, ip
 8022996:	fb01 e103 	mla	r1, r1, r3, lr
 802299a:	fb02 0303 	mla	r3, r2, r3, r0
 802299e:	b29a      	uxth	r2, r3
 80229a0:	f10c 0301 	add.w	r3, ip, #1
 80229a4:	b289      	uxth	r1, r1
 80229a6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80229aa:	1c53      	adds	r3, r2, #1
 80229ac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80229b0:	1c4a      	adds	r2, r1, #1
 80229b2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80229b6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80229ba:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80229be:	0949      	lsrs	r1, r1, #5
 80229c0:	ea43 030c 	orr.w	r3, r3, ip
 80229c4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80229c8:	430b      	orrs	r3, r1
 80229ca:	803b      	strh	r3, [r7, #0]
 80229cc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80229ce:	449a      	add	sl, r3
 80229d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80229d2:	3702      	adds	r7, #2
 80229d4:	441d      	add	r5, r3
 80229d6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80229da:	e742      	b.n	8022862 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80229dc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80229de:	449a      	add	sl, r3
 80229e0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80229e2:	441d      	add	r5, r3
 80229e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80229e6:	3b01      	subs	r3, #1
 80229e8:	9309      	str	r3, [sp, #36]	; 0x24
 80229ea:	f108 0802 	add.w	r8, r8, #2
 80229ee:	e718      	b.n	8022822 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80229f0:	d023      	beq.n	8022a3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80229f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80229f4:	9825      	ldr	r0, [sp, #148]	; 0x94
 80229f6:	3b01      	subs	r3, #1
 80229f8:	fb00 a003 	mla	r0, r0, r3, sl
 80229fc:	1400      	asrs	r0, r0, #16
 80229fe:	f53f af2d 	bmi.w	802285c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022a02:	3901      	subs	r1, #1
 8022a04:	4288      	cmp	r0, r1
 8022a06:	f6bf af29 	bge.w	802285c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022a0a:	9926      	ldr	r1, [sp, #152]	; 0x98
 8022a0c:	fb01 5303 	mla	r3, r1, r3, r5
 8022a10:	141b      	asrs	r3, r3, #16
 8022a12:	f53f af23 	bmi.w	802285c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022a16:	3a01      	subs	r2, #1
 8022a18:	4293      	cmp	r3, r2
 8022a1a:	f6bf af1f 	bge.w	802285c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022a1e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8022a22:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8022a26:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8022a2a:	f1be 0f00 	cmp.w	lr, #0
 8022a2e:	dc6c      	bgt.n	8022b0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8022a30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022a32:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022a36:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8022a3a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022a3c:	2b00      	cmp	r3, #0
 8022a3e:	f340 810e 	ble.w	8022c5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8022a42:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022a46:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022a4a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022a4e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022a50:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022a54:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022a58:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022a5c:	eef0 6a62 	vmov.f32	s13, s5
 8022a60:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022a64:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022a68:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022a6c:	ee16 aa90 	vmov	sl, s13
 8022a70:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022a74:	eef0 6a43 	vmov.f32	s13, s6
 8022a78:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022a7c:	ee12 2a90 	vmov	r2, s5
 8022a80:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022a84:	fb92 f3f3 	sdiv	r3, r2, r3
 8022a88:	ee13 2a10 	vmov	r2, s6
 8022a8c:	9325      	str	r3, [sp, #148]	; 0x94
 8022a8e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022a90:	fb92 f3f3 	sdiv	r3, r2, r3
 8022a94:	9326      	str	r3, [sp, #152]	; 0x98
 8022a96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022a98:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8022a9a:	3b01      	subs	r3, #1
 8022a9c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022aa0:	930c      	str	r3, [sp, #48]	; 0x30
 8022aa2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022aa4:	bf08      	it	eq
 8022aa6:	4613      	moveq	r3, r2
 8022aa8:	ee16 5a90 	vmov	r5, s13
 8022aac:	9309      	str	r3, [sp, #36]	; 0x24
 8022aae:	eeb0 3a67 	vmov.f32	s6, s15
 8022ab2:	eef0 2a47 	vmov.f32	s5, s14
 8022ab6:	e6a6      	b.n	8022806 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8022ab8:	2900      	cmp	r1, #0
 8022aba:	f43f af10 	beq.w	80228de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022abe:	f819 3003 	ldrb.w	r3, [r9, r3]
 8022ac2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022ac6:	930f      	str	r3, [sp, #60]	; 0x3c
 8022ac8:	e709      	b.n	80228de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022aca:	f112 0901 	adds.w	r9, r2, #1
 8022ace:	f53f af7d 	bmi.w	80229cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022ad2:	454b      	cmp	r3, r9
 8022ad4:	f6ff af7a 	blt.w	80229cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022ad8:	f11c 0901 	adds.w	r9, ip, #1
 8022adc:	f53f af76 	bmi.w	80229cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022ae0:	45ce      	cmp	lr, r9
 8022ae2:	f6ff af73 	blt.w	80229cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022ae6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022ae8:	9202      	str	r2, [sp, #8]
 8022aea:	b21b      	sxth	r3, r3
 8022aec:	fa0f f28e 	sxth.w	r2, lr
 8022af0:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8022af4:	e9cd c003 	strd	ip, r0, [sp, #12]
 8022af8:	9201      	str	r2, [sp, #4]
 8022afa:	9300      	str	r3, [sp, #0]
 8022afc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022afe:	9816      	ldr	r0, [sp, #88]	; 0x58
 8022b00:	4633      	mov	r3, r6
 8022b02:	4639      	mov	r1, r7
 8022b04:	f7ff fd8e 	bl	8022624 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8022b08:	e760      	b.n	80229cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022b0a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022b0c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022b0e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022b12:	ea4f 422a 	mov.w	r2, sl, asr #16
 8022b16:	1429      	asrs	r1, r5, #16
 8022b18:	fb03 2101 	mla	r1, r3, r1, r2
 8022b1c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022b1e:	440a      	add	r2, r1
 8022b20:	5c61      	ldrb	r1, [r4, r1]
 8022b22:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8022b26:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022b2a:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8022b2e:	f1bc 0f00 	cmp.w	ip, #0
 8022b32:	f000 808c 	beq.w	8022c4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8022b36:	7857      	ldrb	r7, [r2, #1]
 8022b38:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8022b3c:	9413      	str	r4, [sp, #76]	; 0x4c
 8022b3e:	b140      	cbz	r0, 8022b52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022b40:	18d7      	adds	r7, r2, r3
 8022b42:	5cd3      	ldrb	r3, [r2, r3]
 8022b44:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022b48:	9310      	str	r3, [sp, #64]	; 0x40
 8022b4a:	787b      	ldrb	r3, [r7, #1]
 8022b4c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022b50:	9314      	str	r3, [sp, #80]	; 0x50
 8022b52:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022b54:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022b56:	fb1c f200 	smulbb	r2, ip, r0
 8022b5a:	041f      	lsls	r7, r3, #16
 8022b5c:	10d2      	asrs	r2, r2, #3
 8022b5e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022b62:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8022b66:	431f      	orrs	r7, r3
 8022b68:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8022b6c:	9317      	str	r3, [sp, #92]	; 0x5c
 8022b6e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8022b70:	041b      	lsls	r3, r3, #16
 8022b72:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8022b76:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022b7a:	ea43 030b 	orr.w	r3, r3, fp
 8022b7e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022b80:	4353      	muls	r3, r2
 8022b82:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022b86:	fb04 3707 	mla	r7, r4, r7, r3
 8022b8a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022b8e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8022b92:	ea43 0b01 	orr.w	fp, r3, r1
 8022b96:	f1c0 0110 	rsb	r1, r0, #16
 8022b9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022b9c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022b9e:	eba1 0c0c 	sub.w	ip, r1, ip
 8022ba2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022ba6:	fb0c 770b 	mla	r7, ip, fp, r7
 8022baa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022bae:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8022bb2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022bb6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8022bba:	ea4c 0c0b 	orr.w	ip, ip, fp
 8022bbe:	fb02 770c 	mla	r7, r2, ip, r7
 8022bc2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022bc4:	0d79      	lsrs	r1, r7, #21
 8022bc6:	097f      	lsrs	r7, r7, #5
 8022bc8:	8812      	ldrh	r2, [r2, #0]
 8022bca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022bce:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022bd2:	430f      	orrs	r7, r1
 8022bd4:	b2bb      	uxth	r3, r7
 8022bd6:	1211      	asrs	r1, r2, #8
 8022bd8:	1218      	asrs	r0, r3, #8
 8022bda:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022bde:	fb11 f104 	smulbb	r1, r1, r4
 8022be2:	10d7      	asrs	r7, r2, #3
 8022be4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022be8:	00d2      	lsls	r2, r2, #3
 8022bea:	fb00 1009 	mla	r0, r0, r9, r1
 8022bee:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022bf2:	10d9      	asrs	r1, r3, #3
 8022bf4:	b2d2      	uxtb	r2, r2
 8022bf6:	00db      	lsls	r3, r3, #3
 8022bf8:	fb17 f704 	smulbb	r7, r7, r4
 8022bfc:	fb12 f204 	smulbb	r2, r2, r4
 8022c00:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022c04:	b2db      	uxtb	r3, r3
 8022c06:	b280      	uxth	r0, r0
 8022c08:	fb01 7109 	mla	r1, r1, r9, r7
 8022c0c:	fb03 2309 	mla	r3, r3, r9, r2
 8022c10:	b29b      	uxth	r3, r3
 8022c12:	b289      	uxth	r1, r1
 8022c14:	1c42      	adds	r2, r0, #1
 8022c16:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022c1a:	1c4f      	adds	r7, r1, #1
 8022c1c:	1c5a      	adds	r2, r3, #1
 8022c1e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022c22:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8022c26:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022c2a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022c2e:	0949      	lsrs	r1, r1, #5
 8022c30:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022c32:	4310      	orrs	r0, r2
 8022c34:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022c38:	4308      	orrs	r0, r1
 8022c3a:	f823 0b02 	strh.w	r0, [r3], #2
 8022c3e:	930e      	str	r3, [sp, #56]	; 0x38
 8022c40:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022c42:	449a      	add	sl, r3
 8022c44:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022c46:	f10e 3eff 	add.w	lr, lr, #4294967295
 8022c4a:	441d      	add	r5, r3
 8022c4c:	e6ed      	b.n	8022a2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8022c4e:	2800      	cmp	r0, #0
 8022c50:	f43f af7f 	beq.w	8022b52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022c54:	5cd3      	ldrb	r3, [r2, r3]
 8022c56:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022c5a:	9310      	str	r3, [sp, #64]	; 0x40
 8022c5c:	e779      	b.n	8022b52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022c5e:	b019      	add	sp, #100	; 0x64
 8022c60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022c64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022c64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022c68:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8022c6c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8022c70:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8022c74:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8022c78:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022c7c:	8808      	ldrh	r0, [r1, #0]
 8022c7e:	fb08 470e 	mla	r7, r8, lr, r4
 8022c82:	f1b8 0f00 	cmp.w	r8, #0
 8022c86:	eb02 0907 	add.w	r9, r2, r7
 8022c8a:	db67      	blt.n	8022d5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8022c8c:	45c2      	cmp	sl, r8
 8022c8e:	dd65      	ble.n	8022d5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8022c90:	2c00      	cmp	r4, #0
 8022c92:	db61      	blt.n	8022d58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8022c94:	45a6      	cmp	lr, r4
 8022c96:	dd5f      	ble.n	8022d58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8022c98:	5dd2      	ldrb	r2, [r2, r7]
 8022c9a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8022c9e:	1c62      	adds	r2, r4, #1
 8022ca0:	d45f      	bmi.n	8022d62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022ca2:	4596      	cmp	lr, r2
 8022ca4:	dd5d      	ble.n	8022d62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022ca6:	2d00      	cmp	r5, #0
 8022ca8:	d05b      	beq.n	8022d62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022caa:	f899 2001 	ldrb.w	r2, [r9, #1]
 8022cae:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8022cb2:	f118 0801 	adds.w	r8, r8, #1
 8022cb6:	d458      	bmi.n	8022d6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022cb8:	45c2      	cmp	sl, r8
 8022cba:	dd56      	ble.n	8022d6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022cbc:	2e00      	cmp	r6, #0
 8022cbe:	d054      	beq.n	8022d6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022cc0:	2c00      	cmp	r4, #0
 8022cc2:	db50      	blt.n	8022d66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8022cc4:	45a6      	cmp	lr, r4
 8022cc6:	dd4e      	ble.n	8022d66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8022cc8:	f819 200e 	ldrb.w	r2, [r9, lr]
 8022ccc:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8022cd0:	3401      	adds	r4, #1
 8022cd2:	d407      	bmi.n	8022ce4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022cd4:	45a6      	cmp	lr, r4
 8022cd6:	dd05      	ble.n	8022ce4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022cd8:	b125      	cbz	r5, 8022ce4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022cda:	44ce      	add	lr, r9
 8022cdc:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8022ce0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8022ce4:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022ce8:	fb15 f406 	smulbb	r4, r5, r6
 8022cec:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022cf0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022cf4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022cf8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022cfc:	ea43 0c0c 	orr.w	ip, r3, ip
 8022d00:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022d04:	f1c6 0310 	rsb	r3, r6, #16
 8022d08:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022d0c:	1b5b      	subs	r3, r3, r5
 8022d0e:	ea4e 0707 	orr.w	r7, lr, r7
 8022d12:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8022d16:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022d1a:	437d      	muls	r5, r7
 8022d1c:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022d20:	0403      	lsls	r3, r0, #16
 8022d22:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022d26:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022d2a:	4318      	orrs	r0, r3
 8022d2c:	0413      	lsls	r3, r2, #16
 8022d2e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022d32:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022d36:	4313      	orrs	r3, r2
 8022d38:	fb04 c000 	mla	r0, r4, r0, ip
 8022d3c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022d40:	fb06 0003 	mla	r0, r6, r3, r0
 8022d44:	0d43      	lsrs	r3, r0, #21
 8022d46:	0940      	lsrs	r0, r0, #5
 8022d48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022d4c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022d50:	4318      	orrs	r0, r3
 8022d52:	8008      	strh	r0, [r1, #0]
 8022d54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022d58:	4684      	mov	ip, r0
 8022d5a:	e7a0      	b.n	8022c9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8022d5c:	4607      	mov	r7, r0
 8022d5e:	4684      	mov	ip, r0
 8022d60:	e7a7      	b.n	8022cb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8022d62:	4607      	mov	r7, r0
 8022d64:	e7a5      	b.n	8022cb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8022d66:	4602      	mov	r2, r0
 8022d68:	e7b2      	b.n	8022cd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8022d6a:	4602      	mov	r2, r0
 8022d6c:	e7ba      	b.n	8022ce4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08022d6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022d6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022d72:	b093      	sub	sp, #76	; 0x4c
 8022d74:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8022d78:	920f      	str	r2, [sp, #60]	; 0x3c
 8022d7a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8022d7c:	9108      	str	r1, [sp, #32]
 8022d7e:	9306      	str	r3, [sp, #24]
 8022d80:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8022d84:	9010      	str	r0, [sp, #64]	; 0x40
 8022d86:	6850      	ldr	r0, [r2, #4]
 8022d88:	6812      	ldr	r2, [r2, #0]
 8022d8a:	fb00 1303 	mla	r3, r0, r3, r1
 8022d8e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8022d92:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022d94:	681b      	ldr	r3, [r3, #0]
 8022d96:	9307      	str	r3, [sp, #28]
 8022d98:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022d9a:	685f      	ldr	r7, [r3, #4]
 8022d9c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8022da0:	3704      	adds	r7, #4
 8022da2:	9b08      	ldr	r3, [sp, #32]
 8022da4:	2b00      	cmp	r3, #0
 8022da6:	dc03      	bgt.n	8022db0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8022da8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022daa:	2b00      	cmp	r3, #0
 8022dac:	f340 81b2 	ble.w	8023114 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022db0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022db2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022db6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022dba:	1e48      	subs	r0, r1, #1
 8022dbc:	f102 3cff 	add.w	ip, r2, #4294967295
 8022dc0:	9b06      	ldr	r3, [sp, #24]
 8022dc2:	2b00      	cmp	r3, #0
 8022dc4:	f340 80a9 	ble.w	8022f1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8022dc8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022dcc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022dd0:	d406      	bmi.n	8022de0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022dd2:	4586      	cmp	lr, r0
 8022dd4:	da04      	bge.n	8022de0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022dd6:	2b00      	cmp	r3, #0
 8022dd8:	db02      	blt.n	8022de0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022dda:	4563      	cmp	r3, ip
 8022ddc:	f2c0 809e 	blt.w	8022f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8022de0:	f11e 0e01 	adds.w	lr, lr, #1
 8022de4:	f100 808f 	bmi.w	8022f06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022de8:	4571      	cmp	r1, lr
 8022dea:	f2c0 808c 	blt.w	8022f06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022dee:	3301      	adds	r3, #1
 8022df0:	f100 8089 	bmi.w	8022f06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022df4:	429a      	cmp	r2, r3
 8022df6:	f2c0 8086 	blt.w	8022f06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022dfa:	f8dd b018 	ldr.w	fp, [sp, #24]
 8022dfe:	46c8      	mov	r8, r9
 8022e00:	f1bb 0f00 	cmp.w	fp, #0
 8022e04:	f340 80a6 	ble.w	8022f54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8022e08:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8022e0a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022e0c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022e10:	689b      	ldr	r3, [r3, #8]
 8022e12:	1422      	asrs	r2, r4, #16
 8022e14:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022e18:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8022e1c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022e20:	f100 80e3 	bmi.w	8022fea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022e24:	f103 3aff 	add.w	sl, r3, #4294967295
 8022e28:	4552      	cmp	r2, sl
 8022e2a:	f280 80de 	bge.w	8022fea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022e2e:	f1bc 0f00 	cmp.w	ip, #0
 8022e32:	f2c0 80da 	blt.w	8022fea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022e36:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022e3a:	45d4      	cmp	ip, sl
 8022e3c:	f280 80d5 	bge.w	8022fea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022e40:	b21b      	sxth	r3, r3
 8022e42:	fb0c 2203 	mla	r2, ip, r3, r2
 8022e46:	9d07      	ldr	r5, [sp, #28]
 8022e48:	eb05 0a02 	add.w	sl, r5, r2
 8022e4c:	5caa      	ldrb	r2, [r5, r2]
 8022e4e:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8022e52:	2800      	cmp	r0, #0
 8022e54:	f000 80c0 	beq.w	8022fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8022e58:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8022e5c:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8022e60:	920b      	str	r2, [sp, #44]	; 0x2c
 8022e62:	b151      	cbz	r1, 8022e7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022e64:	eb0a 0203 	add.w	r2, sl, r3
 8022e68:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8022e6c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022e70:	9309      	str	r3, [sp, #36]	; 0x24
 8022e72:	7853      	ldrb	r3, [r2, #1]
 8022e74:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022e78:	930c      	str	r3, [sp, #48]	; 0x30
 8022e7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022e7c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022e7e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022e82:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022e86:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022e8a:	ea4c 0c03 	orr.w	ip, ip, r3
 8022e8e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022e90:	041b      	lsls	r3, r3, #16
 8022e92:	fb10 f201 	smulbb	r2, r0, r1
 8022e96:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022e9a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022e9e:	10d2      	asrs	r2, r2, #3
 8022ea0:	432b      	orrs	r3, r5
 8022ea2:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8022ea6:	4353      	muls	r3, r2
 8022ea8:	fb0a 330c 	mla	r3, sl, ip, r3
 8022eac:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8022eb0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022eb4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022eb8:	ea4c 0e0e 	orr.w	lr, ip, lr
 8022ebc:	f1c1 0c10 	rsb	ip, r1, #16
 8022ec0:	ebac 0c00 	sub.w	ip, ip, r0
 8022ec4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022ec8:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8022ecc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022ece:	0418      	lsls	r0, r3, #16
 8022ed0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022ed4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022ed8:	4318      	orrs	r0, r3
 8022eda:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8022ede:	fb02 c200 	mla	r2, r2, r0, ip
 8022ee2:	0d53      	lsrs	r3, r2, #21
 8022ee4:	0952      	lsrs	r2, r2, #5
 8022ee6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022eea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022eee:	431a      	orrs	r2, r3
 8022ef0:	f8a8 2000 	strh.w	r2, [r8]
 8022ef4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022ef6:	441c      	add	r4, r3
 8022ef8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022efa:	f108 0802 	add.w	r8, r8, #2
 8022efe:	441e      	add	r6, r3
 8022f00:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022f04:	e77c      	b.n	8022e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022f06:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022f08:	441c      	add	r4, r3
 8022f0a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022f0c:	441e      	add	r6, r3
 8022f0e:	9b06      	ldr	r3, [sp, #24]
 8022f10:	3b01      	subs	r3, #1
 8022f12:	9306      	str	r3, [sp, #24]
 8022f14:	f109 0902 	add.w	r9, r9, #2
 8022f18:	e752      	b.n	8022dc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8022f1a:	d020      	beq.n	8022f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8022f1c:	9b06      	ldr	r3, [sp, #24]
 8022f1e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022f20:	3b01      	subs	r3, #1
 8022f22:	fb00 4003 	mla	r0, r0, r3, r4
 8022f26:	1400      	asrs	r0, r0, #16
 8022f28:	f53f af67 	bmi.w	8022dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022f2c:	3901      	subs	r1, #1
 8022f2e:	4288      	cmp	r0, r1
 8022f30:	f6bf af63 	bge.w	8022dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022f34:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022f36:	fb01 6303 	mla	r3, r1, r3, r6
 8022f3a:	141b      	asrs	r3, r3, #16
 8022f3c:	f53f af5d 	bmi.w	8022dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022f40:	3a01      	subs	r2, #1
 8022f42:	4293      	cmp	r3, r2
 8022f44:	f6bf af59 	bge.w	8022dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022f48:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8022f4c:	46ca      	mov	sl, r9
 8022f4e:	f1b8 0f00 	cmp.w	r8, #0
 8022f52:	dc67      	bgt.n	8023024 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8022f54:	9b06      	ldr	r3, [sp, #24]
 8022f56:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022f5a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022f5e:	9b08      	ldr	r3, [sp, #32]
 8022f60:	2b00      	cmp	r3, #0
 8022f62:	f340 80d7 	ble.w	8023114 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022f66:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022f6a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022f6e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8022f72:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022f74:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022f78:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022f7c:	eeb0 6a62 	vmov.f32	s12, s5
 8022f80:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022f84:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022f88:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022f8c:	ee16 4a10 	vmov	r4, s12
 8022f90:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022f94:	eeb0 6a43 	vmov.f32	s12, s6
 8022f98:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022f9c:	ee12 2a90 	vmov	r2, s5
 8022fa0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022fa4:	fb92 f3f3 	sdiv	r3, r2, r3
 8022fa8:	ee13 2a10 	vmov	r2, s6
 8022fac:	931f      	str	r3, [sp, #124]	; 0x7c
 8022fae:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022fb0:	fb92 f3f3 	sdiv	r3, r2, r3
 8022fb4:	9320      	str	r3, [sp, #128]	; 0x80
 8022fb6:	9b08      	ldr	r3, [sp, #32]
 8022fb8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022fba:	3b01      	subs	r3, #1
 8022fbc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022fc0:	9308      	str	r3, [sp, #32]
 8022fc2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022fc4:	bf08      	it	eq
 8022fc6:	4613      	moveq	r3, r2
 8022fc8:	ee16 6a10 	vmov	r6, s12
 8022fcc:	9306      	str	r3, [sp, #24]
 8022fce:	eeb0 3a67 	vmov.f32	s6, s15
 8022fd2:	eef0 2a47 	vmov.f32	s5, s14
 8022fd6:	e6e4      	b.n	8022da2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8022fd8:	2900      	cmp	r1, #0
 8022fda:	f43f af4e 	beq.w	8022e7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022fde:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8022fe2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022fe6:	9309      	str	r3, [sp, #36]	; 0x24
 8022fe8:	e747      	b.n	8022e7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022fea:	f112 0a01 	adds.w	sl, r2, #1
 8022fee:	d481      	bmi.n	8022ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022ff0:	4553      	cmp	r3, sl
 8022ff2:	f6ff af7f 	blt.w	8022ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022ff6:	f11c 0a01 	adds.w	sl, ip, #1
 8022ffa:	f53f af7b 	bmi.w	8022ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022ffe:	45d6      	cmp	lr, sl
 8023000:	f6ff af78 	blt.w	8022ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023004:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8023008:	b21b      	sxth	r3, r3
 802300a:	fa0f f28e 	sxth.w	r2, lr
 802300e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8023012:	9201      	str	r2, [sp, #4]
 8023014:	9300      	str	r3, [sp, #0]
 8023016:	9a07      	ldr	r2, [sp, #28]
 8023018:	9810      	ldr	r0, [sp, #64]	; 0x40
 802301a:	463b      	mov	r3, r7
 802301c:	4641      	mov	r1, r8
 802301e:	f7ff fe21 	bl	8022c64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8023022:	e767      	b.n	8022ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023024:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023026:	9d07      	ldr	r5, [sp, #28]
 8023028:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802302c:	1422      	asrs	r2, r4, #16
 802302e:	1431      	asrs	r1, r6, #16
 8023030:	fb03 2101 	mla	r1, r3, r1, r2
 8023034:	9a07      	ldr	r2, [sp, #28]
 8023036:	440a      	add	r2, r1
 8023038:	5c69      	ldrb	r1, [r5, r1]
 802303a:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 802303e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023042:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8023046:	f1be 0f00 	cmp.w	lr, #0
 802304a:	d05c      	beq.n	8023106 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802304c:	f892 c001 	ldrb.w	ip, [r2, #1]
 8023050:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8023054:	950d      	str	r5, [sp, #52]	; 0x34
 8023056:	b150      	cbz	r0, 802306e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8023058:	eb02 0c03 	add.w	ip, r2, r3
 802305c:	5cd3      	ldrb	r3, [r2, r3]
 802305e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8023062:	930a      	str	r3, [sp, #40]	; 0x28
 8023064:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8023068:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802306c:	930e      	str	r3, [sp, #56]	; 0x38
 802306e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023070:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023072:	fb1e f200 	smulbb	r2, lr, r0
 8023076:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802307a:	10d2      	asrs	r2, r2, #3
 802307c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023080:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023084:	ea4c 0c03 	orr.w	ip, ip, r3
 8023088:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 802308c:	9311      	str	r3, [sp, #68]	; 0x44
 802308e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023090:	041b      	lsls	r3, r3, #16
 8023092:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8023096:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802309a:	ea43 030b 	orr.w	r3, r3, fp
 802309e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80230a0:	4353      	muls	r3, r2
 80230a2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80230a6:	fb05 3c0c 	mla	ip, r5, ip, r3
 80230aa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80230ae:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80230b2:	ea43 0b01 	orr.w	fp, r3, r1
 80230b6:	f1c0 0110 	rsb	r1, r0, #16
 80230ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80230bc:	eba1 0e0e 	sub.w	lr, r1, lr
 80230c0:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80230c4:	fb0e cc0b 	mla	ip, lr, fp, ip
 80230c8:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80230cc:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80230d0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80230d4:	ea4b 0e0e 	orr.w	lr, fp, lr
 80230d8:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80230dc:	fb02 cc0e 	mla	ip, r2, lr, ip
 80230e0:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80230e4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80230e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80230ec:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80230f0:	ea43 0c0c 	orr.w	ip, r3, ip
 80230f4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80230f6:	f82a cb02 	strh.w	ip, [sl], #2
 80230fa:	441c      	add	r4, r3
 80230fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80230fe:	f108 38ff 	add.w	r8, r8, #4294967295
 8023102:	441e      	add	r6, r3
 8023104:	e723      	b.n	8022f4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8023106:	2800      	cmp	r0, #0
 8023108:	d0b1      	beq.n	802306e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802310a:	5cd3      	ldrb	r3, [r2, r3]
 802310c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8023110:	930a      	str	r3, [sp, #40]	; 0x28
 8023112:	e7ac      	b.n	802306e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8023114:	b013      	add	sp, #76	; 0x4c
 8023116:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802311a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 802311a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802311e:	880d      	ldrh	r5, [r1, #0]
 8023120:	b087      	sub	sp, #28
 8023122:	10ef      	asrs	r7, r5, #3
 8023124:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8023128:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802312c:	00ed      	lsls	r5, r5, #3
 802312e:	9701      	str	r7, [sp, #4]
 8023130:	b2ed      	uxtb	r5, r5
 8023132:	9502      	str	r5, [sp, #8]
 8023134:	9d01      	ldr	r5, [sp, #4]
 8023136:	9103      	str	r1, [sp, #12]
 8023138:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 802313c:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8023140:	9902      	ldr	r1, [sp, #8]
 8023142:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8023146:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 802314a:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 802314e:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8023152:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8023156:	022d      	lsls	r5, r5, #8
 8023158:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 802315c:	fb06 0709 	mla	r7, r6, r9, r0
 8023160:	430d      	orrs	r5, r1
 8023162:	2e00      	cmp	r6, #0
 8023164:	eb02 0c07 	add.w	ip, r2, r7
 8023168:	9505      	str	r5, [sp, #20]
 802316a:	f2c0 80b6 	blt.w	80232da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802316e:	45b3      	cmp	fp, r6
 8023170:	f340 80b3 	ble.w	80232da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8023174:	2800      	cmp	r0, #0
 8023176:	f2c0 80ae 	blt.w	80232d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 802317a:	4581      	cmp	r9, r0
 802317c:	f340 80ab 	ble.w	80232d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8023180:	5dd7      	ldrb	r7, [r2, r7]
 8023182:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8023186:	441f      	add	r7, r3
 8023188:	1c42      	adds	r2, r0, #1
 802318a:	f100 80a9 	bmi.w	80232e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802318e:	4591      	cmp	r9, r2
 8023190:	f340 80a6 	ble.w	80232e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8023194:	2c00      	cmp	r4, #0
 8023196:	f000 80a3 	beq.w	80232e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802319a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 802319e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80231a2:	441d      	add	r5, r3
 80231a4:	3601      	adds	r6, #1
 80231a6:	f100 809f 	bmi.w	80232e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80231aa:	45b3      	cmp	fp, r6
 80231ac:	f340 809c 	ble.w	80232e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80231b0:	f1be 0f00 	cmp.w	lr, #0
 80231b4:	f000 8098 	beq.w	80232e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80231b8:	2800      	cmp	r0, #0
 80231ba:	f2c0 8093 	blt.w	80232e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80231be:	4581      	cmp	r9, r0
 80231c0:	f340 8090 	ble.w	80232e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80231c4:	f81c 6009 	ldrb.w	r6, [ip, r9]
 80231c8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80231cc:	441e      	add	r6, r3
 80231ce:	3001      	adds	r0, #1
 80231d0:	f100 808d 	bmi.w	80232ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80231d4:	4581      	cmp	r9, r0
 80231d6:	f340 808a 	ble.w	80232ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80231da:	2c00      	cmp	r4, #0
 80231dc:	f000 8087 	beq.w	80232ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80231e0:	44e1      	add	r9, ip
 80231e2:	f899 2001 	ldrb.w	r2, [r9, #1]
 80231e6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80231ea:	4413      	add	r3, r2
 80231ec:	b2a4      	uxth	r4, r4
 80231ee:	fa1f fe8e 	uxth.w	lr, lr
 80231f2:	fb04 fb0e 	mul.w	fp, r4, lr
 80231f6:	0124      	lsls	r4, r4, #4
 80231f8:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 80231fc:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8023200:	eba4 040b 	sub.w	r4, r4, fp
 8023204:	fa1f f08e 	uxth.w	r0, lr
 8023208:	b2a2      	uxth	r2, r4
 802320a:	78ac      	ldrb	r4, [r5, #2]
 802320c:	f897 c002 	ldrb.w	ip, [r7, #2]
 8023210:	9901      	ldr	r1, [sp, #4]
 8023212:	eba9 0900 	sub.w	r9, r9, r0
 8023216:	fa1f f989 	uxth.w	r9, r9
 802321a:	4354      	muls	r4, r2
 802321c:	fb09 440c 	mla	r4, r9, ip, r4
 8023220:	f896 c002 	ldrb.w	ip, [r6, #2]
 8023224:	fb00 440c 	mla	r4, r0, ip, r4
 8023228:	f893 c002 	ldrb.w	ip, [r3, #2]
 802322c:	fa1f fe88 	uxth.w	lr, r8
 8023230:	ea6f 0808 	mvn.w	r8, r8
 8023234:	fa5f f888 	uxtb.w	r8, r8
 8023238:	fb0b 4c0c 	mla	ip, fp, ip, r4
 802323c:	fb1a fa08 	smulbb	sl, sl, r8
 8023240:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8023244:	fb0c ac0e 	mla	ip, ip, lr, sl
 8023248:	f895 a001 	ldrb.w	sl, [r5, #1]
 802324c:	787c      	ldrb	r4, [r7, #1]
 802324e:	782d      	ldrb	r5, [r5, #0]
 8023250:	783f      	ldrb	r7, [r7, #0]
 8023252:	fb02 fa0a 	mul.w	sl, r2, sl
 8023256:	fb09 aa04 	mla	sl, r9, r4, sl
 802325a:	7874      	ldrb	r4, [r6, #1]
 802325c:	436a      	muls	r2, r5
 802325e:	7835      	ldrb	r5, [r6, #0]
 8023260:	fb00 aa04 	mla	sl, r0, r4, sl
 8023264:	fb09 2207 	mla	r2, r9, r7, r2
 8023268:	785c      	ldrb	r4, [r3, #1]
 802326a:	781b      	ldrb	r3, [r3, #0]
 802326c:	fb00 2005 	mla	r0, r0, r5, r2
 8023270:	fb0b a404 	mla	r4, fp, r4, sl
 8023274:	fb0b 0b03 	mla	fp, fp, r3, r0
 8023278:	9b02      	ldr	r3, [sp, #8]
 802327a:	fb11 fa08 	smulbb	sl, r1, r8
 802327e:	fa1f fc8c 	uxth.w	ip, ip
 8023282:	fb13 f808 	smulbb	r8, r3, r8
 8023286:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 802328a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 802328e:	fb04 a40e 	mla	r4, r4, lr, sl
 8023292:	f10c 0301 	add.w	r3, ip, #1
 8023296:	fb0b 8e0e 	mla	lr, fp, lr, r8
 802329a:	fa1f fe8e 	uxth.w	lr, lr
 802329e:	b2a4      	uxth	r4, r4
 80232a0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80232a4:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 80232a8:	f104 0a01 	add.w	sl, r4, #1
 80232ac:	f10e 0c01 	add.w	ip, lr, #1
 80232b0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80232b4:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80232b8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80232bc:	0964      	lsrs	r4, r4, #5
 80232be:	ea4c 0c03 	orr.w	ip, ip, r3
 80232c2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80232c6:	9b03      	ldr	r3, [sp, #12]
 80232c8:	ea4c 0c04 	orr.w	ip, ip, r4
 80232cc:	f8a3 c000 	strh.w	ip, [r3]
 80232d0:	b007      	add	sp, #28
 80232d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80232d6:	af05      	add	r7, sp, #20
 80232d8:	e756      	b.n	8023188 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80232da:	ad05      	add	r5, sp, #20
 80232dc:	462f      	mov	r7, r5
 80232de:	e761      	b.n	80231a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80232e0:	ad05      	add	r5, sp, #20
 80232e2:	e75f      	b.n	80231a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80232e4:	ae05      	add	r6, sp, #20
 80232e6:	e772      	b.n	80231ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 80232e8:	ab05      	add	r3, sp, #20
 80232ea:	461e      	mov	r6, r3
 80232ec:	e77e      	b.n	80231ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 80232ee:	ab05      	add	r3, sp, #20
 80232f0:	e77c      	b.n	80231ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

080232f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80232f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80232f6:	b095      	sub	sp, #84	; 0x54
 80232f8:	9212      	str	r2, [sp, #72]	; 0x48
 80232fa:	9309      	str	r3, [sp, #36]	; 0x24
 80232fc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80232fe:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8023302:	930f      	str	r3, [sp, #60]	; 0x3c
 8023304:	910e      	str	r1, [sp, #56]	; 0x38
 8023306:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 802330a:	9013      	str	r0, [sp, #76]	; 0x4c
 802330c:	6850      	ldr	r0, [r2, #4]
 802330e:	6812      	ldr	r2, [r2, #0]
 8023310:	fb00 1303 	mla	r3, r0, r3, r1
 8023314:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023318:	930a      	str	r3, [sp, #40]	; 0x28
 802331a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802331c:	681b      	ldr	r3, [r3, #0]
 802331e:	930d      	str	r3, [sp, #52]	; 0x34
 8023320:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023322:	685c      	ldr	r4, [r3, #4]
 8023324:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023326:	43db      	mvns	r3, r3
 8023328:	b2db      	uxtb	r3, r3
 802332a:	3404      	adds	r4, #4
 802332c:	930b      	str	r3, [sp, #44]	; 0x2c
 802332e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023330:	2b00      	cmp	r3, #0
 8023332:	dc03      	bgt.n	802333c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023334:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8023336:	2b00      	cmp	r3, #0
 8023338:	f340 8255 	ble.w	80237e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 802333c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802333e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023342:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023346:	1e48      	subs	r0, r1, #1
 8023348:	1e55      	subs	r5, r2, #1
 802334a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802334c:	2b00      	cmp	r3, #0
 802334e:	f340 80f9 	ble.w	8023544 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8023352:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8023354:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023356:	1436      	asrs	r6, r6, #16
 8023358:	ea4f 4323 	mov.w	r3, r3, asr #16
 802335c:	d406      	bmi.n	802336c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802335e:	4286      	cmp	r6, r0
 8023360:	da04      	bge.n	802336c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023362:	2b00      	cmp	r3, #0
 8023364:	db02      	blt.n	802336c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023366:	42ab      	cmp	r3, r5
 8023368:	f2c0 80ed 	blt.w	8023546 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 802336c:	3601      	adds	r6, #1
 802336e:	f100 80da 	bmi.w	8023526 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023372:	42b1      	cmp	r1, r6
 8023374:	f2c0 80d7 	blt.w	8023526 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023378:	3301      	adds	r3, #1
 802337a:	f100 80d4 	bmi.w	8023526 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802337e:	429a      	cmp	r2, r3
 8023380:	f2c0 80d1 	blt.w	8023526 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023384:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023386:	9311      	str	r3, [sp, #68]	; 0x44
 8023388:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802338a:	930c      	str	r3, [sp, #48]	; 0x30
 802338c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802338e:	2b00      	cmp	r3, #0
 8023390:	f340 80fa 	ble.w	8023588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8023394:	9826      	ldr	r0, [sp, #152]	; 0x98
 8023396:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023398:	9a20      	ldr	r2, [sp, #128]	; 0x80
 802339a:	68c6      	ldr	r6, [r0, #12]
 802339c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802339e:	141d      	asrs	r5, r3, #16
 80233a0:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80233a4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80233a6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80233a8:	1400      	asrs	r0, r0, #16
 80233aa:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80233ae:	6892      	ldr	r2, [r2, #8]
 80233b0:	f100 813e 	bmi.w	8023630 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80233b4:	1e57      	subs	r7, r2, #1
 80233b6:	42b8      	cmp	r0, r7
 80233b8:	f280 813a 	bge.w	8023630 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80233bc:	2d00      	cmp	r5, #0
 80233be:	f2c0 8137 	blt.w	8023630 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80233c2:	1e77      	subs	r7, r6, #1
 80233c4:	42bd      	cmp	r5, r7
 80233c6:	f280 8133 	bge.w	8023630 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80233ca:	b212      	sxth	r2, r2
 80233cc:	fb05 0002 	mla	r0, r5, r2, r0
 80233d0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80233d2:	f815 a000 	ldrb.w	sl, [r5, r0]
 80233d6:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80233da:	182e      	adds	r6, r5, r0
 80233dc:	eb04 050a 	add.w	r5, r4, sl
 80233e0:	2b00      	cmp	r3, #0
 80233e2:	f000 8117 	beq.w	8023614 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80233e6:	f896 c001 	ldrb.w	ip, [r6, #1]
 80233ea:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80233ee:	44a4      	add	ip, r4
 80233f0:	2900      	cmp	r1, #0
 80233f2:	f000 8117 	beq.w	8023624 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 80233f6:	18b0      	adds	r0, r6, r2
 80233f8:	5cb2      	ldrb	r2, [r6, r2]
 80233fa:	7840      	ldrb	r0, [r0, #1]
 80233fc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023400:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023404:	4422      	add	r2, r4
 8023406:	4420      	add	r0, r4
 8023408:	b29b      	uxth	r3, r3
 802340a:	b289      	uxth	r1, r1
 802340c:	fb03 f901 	mul.w	r9, r3, r1
 8023410:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023414:	011b      	lsls	r3, r3, #4
 8023416:	b289      	uxth	r1, r1
 8023418:	f89c 7002 	ldrb.w	r7, [ip, #2]
 802341c:	f895 b002 	ldrb.w	fp, [r5, #2]
 8023420:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8023422:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8023426:	f8b6 e000 	ldrh.w	lr, [r6]
 802342a:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 802342e:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8023432:	eba3 0309 	sub.w	r3, r3, r9
 8023436:	b29b      	uxth	r3, r3
 8023438:	eba8 0801 	sub.w	r8, r8, r1
 802343c:	fa1f f888 	uxth.w	r8, r8
 8023440:	435f      	muls	r7, r3
 8023442:	fb08 770b 	mla	r7, r8, fp, r7
 8023446:	f892 b002 	ldrb.w	fp, [r2, #2]
 802344a:	9310      	str	r3, [sp, #64]	; 0x40
 802344c:	fb01 770b 	mla	r7, r1, fp, r7
 8023450:	f890 b002 	ldrb.w	fp, [r0, #2]
 8023454:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023456:	fb09 770b 	mla	r7, r9, fp, r7
 802345a:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 802345e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8023462:	fb1b fb03 	smulbb	fp, fp, r3
 8023466:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802346a:	fb07 b706 	mla	r7, r7, r6, fp
 802346e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023470:	f895 b001 	ldrb.w	fp, [r5, #1]
 8023474:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8023478:	f89c c000 	ldrb.w	ip, [ip]
 802347c:	435d      	muls	r5, r3
 802347e:	fb08 550b 	mla	r5, r8, fp, r5
 8023482:	f892 b001 	ldrb.w	fp, [r2, #1]
 8023486:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023488:	fb01 550b 	mla	r5, r1, fp, r5
 802348c:	f890 b001 	ldrb.w	fp, [r0, #1]
 8023490:	fb09 550b 	mla	r5, r9, fp, r5
 8023494:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8023498:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 802349c:	fb1b fb03 	smulbb	fp, fp, r3
 80234a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80234a2:	fb03 f30c 	mul.w	r3, r3, ip
 80234a6:	f892 c000 	ldrb.w	ip, [r2]
 80234aa:	fb08 330a 	mla	r3, r8, sl, r3
 80234ae:	fb01 330c 	mla	r3, r1, ip, r3
 80234b2:	f890 c000 	ldrb.w	ip, [r0]
 80234b6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80234ba:	fb09 3c0c 	mla	ip, r9, ip, r3
 80234be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80234c0:	fa5f fe8e 	uxtb.w	lr, lr
 80234c4:	b2bf      	uxth	r7, r7
 80234c6:	fb1e fe03 	smulbb	lr, lr, r3
 80234ca:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80234ce:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80234d2:	fb05 b506 	mla	r5, r5, r6, fp
 80234d6:	1c7b      	adds	r3, r7, #1
 80234d8:	fb0c e606 	mla	r6, ip, r6, lr
 80234dc:	b2ad      	uxth	r5, r5
 80234de:	b2b6      	uxth	r6, r6
 80234e0:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80234e4:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 80234e8:	f105 0b01 	add.w	fp, r5, #1
 80234ec:	1c77      	adds	r7, r6, #1
 80234ee:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80234f2:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80234f6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80234fa:	096d      	lsrs	r5, r5, #5
 80234fc:	431f      	orrs	r7, r3
 80234fe:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023502:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023504:	433d      	orrs	r5, r7
 8023506:	801d      	strh	r5, [r3, #0]
 8023508:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802350a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802350c:	3302      	adds	r3, #2
 802350e:	930c      	str	r3, [sp, #48]	; 0x30
 8023510:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023512:	4413      	add	r3, r2
 8023514:	931f      	str	r3, [sp, #124]	; 0x7c
 8023516:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023518:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802351a:	4413      	add	r3, r2
 802351c:	9320      	str	r3, [sp, #128]	; 0x80
 802351e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023520:	3b01      	subs	r3, #1
 8023522:	9311      	str	r3, [sp, #68]	; 0x44
 8023524:	e732      	b.n	802338c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8023526:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023528:	9e21      	ldr	r6, [sp, #132]	; 0x84
 802352a:	4433      	add	r3, r6
 802352c:	931f      	str	r3, [sp, #124]	; 0x7c
 802352e:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8023530:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023532:	4433      	add	r3, r6
 8023534:	9320      	str	r3, [sp, #128]	; 0x80
 8023536:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023538:	3b01      	subs	r3, #1
 802353a:	9309      	str	r3, [sp, #36]	; 0x24
 802353c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802353e:	3302      	adds	r3, #2
 8023540:	930a      	str	r3, [sp, #40]	; 0x28
 8023542:	e702      	b.n	802334a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023544:	d027      	beq.n	8023596 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8023546:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023548:	9821      	ldr	r0, [sp, #132]	; 0x84
 802354a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 802354c:	3b01      	subs	r3, #1
 802354e:	fb00 5003 	mla	r0, r0, r3, r5
 8023552:	1400      	asrs	r0, r0, #16
 8023554:	f53f af16 	bmi.w	8023384 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023558:	3901      	subs	r1, #1
 802355a:	4288      	cmp	r0, r1
 802355c:	f6bf af12 	bge.w	8023384 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023560:	9922      	ldr	r1, [sp, #136]	; 0x88
 8023562:	9820      	ldr	r0, [sp, #128]	; 0x80
 8023564:	fb01 0303 	mla	r3, r1, r3, r0
 8023568:	141b      	asrs	r3, r3, #16
 802356a:	f53f af0b 	bmi.w	8023384 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802356e:	3a01      	subs	r2, #1
 8023570:	4293      	cmp	r3, r2
 8023572:	f6bf af07 	bge.w	8023384 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023576:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023578:	9311      	str	r3, [sp, #68]	; 0x44
 802357a:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 802357e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023580:	930c      	str	r3, [sp, #48]	; 0x30
 8023582:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023584:	2b00      	cmp	r3, #0
 8023586:	dc70      	bgt.n	802366a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023588:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802358a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802358c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023590:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023594:	930a      	str	r3, [sp, #40]	; 0x28
 8023596:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023598:	2b00      	cmp	r3, #0
 802359a:	f340 8124 	ble.w	80237e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 802359e:	ee30 0a04 	vadd.f32	s0, s0, s8
 80235a2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80235a6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80235aa:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80235ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80235b0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80235b4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80235b8:	eef0 6a62 	vmov.f32	s13, s5
 80235bc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80235c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80235c4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80235c8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80235cc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80235d0:	eef0 6a43 	vmov.f32	s13, s6
 80235d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80235d8:	ee12 2a90 	vmov	r2, s5
 80235dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80235e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80235e4:	ee13 2a10 	vmov	r2, s6
 80235e8:	9321      	str	r3, [sp, #132]	; 0x84
 80235ea:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80235ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80235f0:	9322      	str	r3, [sp, #136]	; 0x88
 80235f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80235f4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80235f6:	3b01      	subs	r3, #1
 80235f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80235fc:	930e      	str	r3, [sp, #56]	; 0x38
 80235fe:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023600:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8023604:	bf08      	it	eq
 8023606:	4613      	moveq	r3, r2
 8023608:	9309      	str	r3, [sp, #36]	; 0x24
 802360a:	eeb0 3a67 	vmov.f32	s6, s15
 802360e:	eef0 2a47 	vmov.f32	s5, s14
 8023612:	e68c      	b.n	802332e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8023614:	b149      	cbz	r1, 802362a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8023616:	5cb2      	ldrb	r2, [r6, r2]
 8023618:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802361c:	4422      	add	r2, r4
 802361e:	4628      	mov	r0, r5
 8023620:	46ac      	mov	ip, r5
 8023622:	e6f1      	b.n	8023408 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8023624:	4628      	mov	r0, r5
 8023626:	462a      	mov	r2, r5
 8023628:	e6ee      	b.n	8023408 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802362a:	4628      	mov	r0, r5
 802362c:	462a      	mov	r2, r5
 802362e:	e7f7      	b.n	8023620 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8023630:	1c47      	adds	r7, r0, #1
 8023632:	f53f af69 	bmi.w	8023508 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023636:	42ba      	cmp	r2, r7
 8023638:	f6ff af66 	blt.w	8023508 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802363c:	1c6f      	adds	r7, r5, #1
 802363e:	f53f af63 	bmi.w	8023508 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023642:	42be      	cmp	r6, r7
 8023644:	f6ff af60 	blt.w	8023508 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023648:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 802364a:	9002      	str	r0, [sp, #8]
 802364c:	b236      	sxth	r6, r6
 802364e:	b212      	sxth	r2, r2
 8023650:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8023654:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8023658:	9200      	str	r2, [sp, #0]
 802365a:	9601      	str	r6, [sp, #4]
 802365c:	4623      	mov	r3, r4
 802365e:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8023662:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8023664:	f7ff fd59 	bl	802311a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8023668:	e74e      	b.n	8023508 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802366a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 802366c:	9820      	ldr	r0, [sp, #128]	; 0x80
 802366e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8023670:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023672:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8023676:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8023678:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 802367c:	142d      	asrs	r5, r5, #16
 802367e:	1400      	asrs	r0, r0, #16
 8023680:	fb02 5000 	mla	r0, r2, r0, r5
 8023684:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023686:	f815 9000 	ldrb.w	r9, [r5, r0]
 802368a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 802368e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8023692:	182e      	adds	r6, r5, r0
 8023694:	eb04 0509 	add.w	r5, r4, r9
 8023698:	2b00      	cmp	r3, #0
 802369a:	f000 8096 	beq.w	80237ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 802369e:	7877      	ldrb	r7, [r6, #1]
 80236a0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80236a4:	4427      	add	r7, r4
 80236a6:	2900      	cmp	r1, #0
 80236a8:	f000 8097 	beq.w	80237da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 80236ac:	18b0      	adds	r0, r6, r2
 80236ae:	5cb2      	ldrb	r2, [r6, r2]
 80236b0:	7840      	ldrb	r0, [r0, #1]
 80236b2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80236b6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80236ba:	4422      	add	r2, r4
 80236bc:	4420      	add	r0, r4
 80236be:	b29b      	uxth	r3, r3
 80236c0:	b289      	uxth	r1, r1
 80236c2:	fb03 f801 	mul.w	r8, r3, r1
 80236c6:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80236c8:	f895 b002 	ldrb.w	fp, [r5, #2]
 80236cc:	f8b6 c000 	ldrh.w	ip, [r6]
 80236d0:	78be      	ldrb	r6, [r7, #2]
 80236d2:	f814 9009 	ldrb.w	r9, [r4, r9]
 80236d6:	011b      	lsls	r3, r3, #4
 80236d8:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80236dc:	b289      	uxth	r1, r1
 80236de:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80236e2:	eba3 0308 	sub.w	r3, r3, r8
 80236e6:	b29b      	uxth	r3, r3
 80236e8:	ebae 0e01 	sub.w	lr, lr, r1
 80236ec:	fa1f fe8e 	uxth.w	lr, lr
 80236f0:	435e      	muls	r6, r3
 80236f2:	fb0e 660b 	mla	r6, lr, fp, r6
 80236f6:	f892 b002 	ldrb.w	fp, [r2, #2]
 80236fa:	9310      	str	r3, [sp, #64]	; 0x40
 80236fc:	fb01 660b 	mla	r6, r1, fp, r6
 8023700:	f890 b002 	ldrb.w	fp, [r0, #2]
 8023704:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023706:	fb08 660b 	mla	r6, r8, fp, r6
 802370a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 802370e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8023712:	fb1b fb03 	smulbb	fp, fp, r3
 8023716:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802371a:	fb06 b60a 	mla	r6, r6, sl, fp
 802371e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023720:	f895 b001 	ldrb.w	fp, [r5, #1]
 8023724:	787d      	ldrb	r5, [r7, #1]
 8023726:	783f      	ldrb	r7, [r7, #0]
 8023728:	435d      	muls	r5, r3
 802372a:	fb0e 550b 	mla	r5, lr, fp, r5
 802372e:	f892 b001 	ldrb.w	fp, [r2, #1]
 8023732:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023734:	fb01 550b 	mla	r5, r1, fp, r5
 8023738:	f890 b001 	ldrb.w	fp, [r0, #1]
 802373c:	fb08 550b 	mla	r5, r8, fp, r5
 8023740:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8023744:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8023748:	fb1b fb03 	smulbb	fp, fp, r3
 802374c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802374e:	437b      	muls	r3, r7
 8023750:	7817      	ldrb	r7, [r2, #0]
 8023752:	fb0e 3309 	mla	r3, lr, r9, r3
 8023756:	fb01 3307 	mla	r3, r1, r7, r3
 802375a:	7807      	ldrb	r7, [r0, #0]
 802375c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023760:	fb08 3707 	mla	r7, r8, r7, r3
 8023764:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023766:	fa5f fc8c 	uxtb.w	ip, ip
 802376a:	fb1c fc03 	smulbb	ip, ip, r3
 802376e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8023772:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8023776:	fb05 b50a 	mla	r5, r5, sl, fp
 802377a:	fb07 c70a 	mla	r7, r7, sl, ip
 802377e:	b2b6      	uxth	r6, r6
 8023780:	b2ad      	uxth	r5, r5
 8023782:	b2bf      	uxth	r7, r7
 8023784:	1c73      	adds	r3, r6, #1
 8023786:	1c7a      	adds	r2, r7, #1
 8023788:	f105 0b01 	add.w	fp, r5, #1
 802378c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8023790:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8023794:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8023798:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802379c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80237a0:	096d      	lsrs	r5, r5, #5
 80237a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80237a4:	4316      	orrs	r6, r2
 80237a6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80237aa:	432e      	orrs	r6, r5
 80237ac:	f823 6b02 	strh.w	r6, [r3], #2
 80237b0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80237b2:	930c      	str	r3, [sp, #48]	; 0x30
 80237b4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80237b6:	4413      	add	r3, r2
 80237b8:	931f      	str	r3, [sp, #124]	; 0x7c
 80237ba:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80237bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80237be:	4413      	add	r3, r2
 80237c0:	9320      	str	r3, [sp, #128]	; 0x80
 80237c2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80237c4:	3b01      	subs	r3, #1
 80237c6:	9311      	str	r3, [sp, #68]	; 0x44
 80237c8:	e6db      	b.n	8023582 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80237ca:	b149      	cbz	r1, 80237e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80237cc:	5cb2      	ldrb	r2, [r6, r2]
 80237ce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80237d2:	4422      	add	r2, r4
 80237d4:	4628      	mov	r0, r5
 80237d6:	462f      	mov	r7, r5
 80237d8:	e771      	b.n	80236be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80237da:	4628      	mov	r0, r5
 80237dc:	462a      	mov	r2, r5
 80237de:	e76e      	b.n	80236be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80237e0:	4628      	mov	r0, r5
 80237e2:	462a      	mov	r2, r5
 80237e4:	e7f7      	b.n	80237d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80237e6:	b015      	add	sp, #84	; 0x54
 80237e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080237ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80237ec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80237f0:	880f      	ldrh	r7, [r1, #0]
 80237f2:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 80237f6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80237fa:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 80237fe:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8023802:	023c      	lsls	r4, r7, #8
 8023804:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8023808:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 802380c:	017c      	lsls	r4, r7, #5
 802380e:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8023812:	00ff      	lsls	r7, r7, #3
 8023814:	ea4b 0404 	orr.w	r4, fp, r4
 8023818:	b2ff      	uxtb	r7, r7
 802381a:	fb05 ca0e 	mla	sl, r5, lr, ip
 802381e:	4327      	orrs	r7, r4
 8023820:	2d00      	cmp	r5, #0
 8023822:	eb02 080a 	add.w	r8, r2, sl
 8023826:	9701      	str	r7, [sp, #4]
 8023828:	db7e      	blt.n	8023928 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 802382a:	45a9      	cmp	r9, r5
 802382c:	dd7c      	ble.n	8023928 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 802382e:	f1bc 0f00 	cmp.w	ip, #0
 8023832:	db77      	blt.n	8023924 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8023834:	45e6      	cmp	lr, ip
 8023836:	dd75      	ble.n	8023924 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8023838:	f812 700a 	ldrb.w	r7, [r2, sl]
 802383c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8023840:	441f      	add	r7, r3
 8023842:	f11c 0201 	adds.w	r2, ip, #1
 8023846:	d472      	bmi.n	802392e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023848:	4596      	cmp	lr, r2
 802384a:	dd70      	ble.n	802392e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 802384c:	2800      	cmp	r0, #0
 802384e:	d06e      	beq.n	802392e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023850:	f898 4001 	ldrb.w	r4, [r8, #1]
 8023854:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8023858:	441c      	add	r4, r3
 802385a:	3501      	adds	r5, #1
 802385c:	d46b      	bmi.n	8023936 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802385e:	45a9      	cmp	r9, r5
 8023860:	dd69      	ble.n	8023936 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8023862:	2e00      	cmp	r6, #0
 8023864:	d067      	beq.n	8023936 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8023866:	f1bc 0f00 	cmp.w	ip, #0
 802386a:	db62      	blt.n	8023932 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 802386c:	45e6      	cmp	lr, ip
 802386e:	dd60      	ble.n	8023932 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8023870:	f818 500e 	ldrb.w	r5, [r8, lr]
 8023874:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8023878:	441d      	add	r5, r3
 802387a:	f11c 0201 	adds.w	r2, ip, #1
 802387e:	d45d      	bmi.n	802393c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023880:	4596      	cmp	lr, r2
 8023882:	dd5b      	ble.n	802393c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023884:	2800      	cmp	r0, #0
 8023886:	d059      	beq.n	802393c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023888:	44c6      	add	lr, r8
 802388a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802388e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023892:	4413      	add	r3, r2
 8023894:	b280      	uxth	r0, r0
 8023896:	b2b2      	uxth	r2, r6
 8023898:	fb00 f602 	mul.w	r6, r0, r2
 802389c:	0100      	lsls	r0, r0, #4
 802389e:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80238a2:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 80238a6:	1b80      	subs	r0, r0, r6
 80238a8:	fa1f fc82 	uxth.w	ip, r2
 80238ac:	b282      	uxth	r2, r0
 80238ae:	78a0      	ldrb	r0, [r4, #2]
 80238b0:	f897 e002 	ldrb.w	lr, [r7, #2]
 80238b4:	f897 9000 	ldrb.w	r9, [r7]
 80238b8:	787f      	ldrb	r7, [r7, #1]
 80238ba:	eba8 080c 	sub.w	r8, r8, ip
 80238be:	fa1f f888 	uxth.w	r8, r8
 80238c2:	4350      	muls	r0, r2
 80238c4:	fb08 0e0e 	mla	lr, r8, lr, r0
 80238c8:	78a8      	ldrb	r0, [r5, #2]
 80238ca:	fb0c e000 	mla	r0, ip, r0, lr
 80238ce:	f893 e002 	ldrb.w	lr, [r3, #2]
 80238d2:	fb06 0e0e 	mla	lr, r6, lr, r0
 80238d6:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 80238da:	f894 e000 	ldrb.w	lr, [r4]
 80238de:	fb02 fe0e 	mul.w	lr, r2, lr
 80238e2:	fb08 e909 	mla	r9, r8, r9, lr
 80238e6:	f895 e000 	ldrb.w	lr, [r5]
 80238ea:	fb0c 990e 	mla	r9, ip, lr, r9
 80238ee:	f893 e000 	ldrb.w	lr, [r3]
 80238f2:	785b      	ldrb	r3, [r3, #1]
 80238f4:	fb06 9e0e 	mla	lr, r6, lr, r9
 80238f8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80238fc:	ea4e 0e00 	orr.w	lr, lr, r0
 8023900:	7860      	ldrb	r0, [r4, #1]
 8023902:	4350      	muls	r0, r2
 8023904:	786a      	ldrb	r2, [r5, #1]
 8023906:	fb08 0007 	mla	r0, r8, r7, r0
 802390a:	fb0c 0202 	mla	r2, ip, r2, r0
 802390e:	fb06 2303 	mla	r3, r6, r3, r2
 8023912:	095b      	lsrs	r3, r3, #5
 8023914:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023918:	ea4e 0303 	orr.w	r3, lr, r3
 802391c:	800b      	strh	r3, [r1, #0]
 802391e:	b003      	add	sp, #12
 8023920:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023924:	af01      	add	r7, sp, #4
 8023926:	e78c      	b.n	8023842 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8023928:	ac01      	add	r4, sp, #4
 802392a:	4627      	mov	r7, r4
 802392c:	e795      	b.n	802385a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802392e:	ac01      	add	r4, sp, #4
 8023930:	e793      	b.n	802385a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8023932:	ad01      	add	r5, sp, #4
 8023934:	e7a1      	b.n	802387a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8023936:	ab01      	add	r3, sp, #4
 8023938:	461d      	mov	r5, r3
 802393a:	e7ab      	b.n	8023894 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 802393c:	ab01      	add	r3, sp, #4
 802393e:	e7a9      	b.n	8023894 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08023940 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023944:	b08f      	sub	sp, #60	; 0x3c
 8023946:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 802394a:	920c      	str	r2, [sp, #48]	; 0x30
 802394c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 802394e:	910a      	str	r1, [sp, #40]	; 0x28
 8023950:	9306      	str	r3, [sp, #24]
 8023952:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8023956:	900d      	str	r0, [sp, #52]	; 0x34
 8023958:	6850      	ldr	r0, [r2, #4]
 802395a:	6812      	ldr	r2, [r2, #0]
 802395c:	fb00 1303 	mla	r3, r0, r3, r1
 8023960:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023964:	9307      	str	r3, [sp, #28]
 8023966:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023968:	681b      	ldr	r3, [r3, #0]
 802396a:	9308      	str	r3, [sp, #32]
 802396c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802396e:	685c      	ldr	r4, [r3, #4]
 8023970:	3404      	adds	r4, #4
 8023972:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023974:	2b00      	cmp	r3, #0
 8023976:	dc03      	bgt.n	8023980 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8023978:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802397a:	2b00      	cmp	r3, #0
 802397c:	f340 81d6 	ble.w	8023d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8023980:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023982:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023986:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802398a:	1e48      	subs	r0, r1, #1
 802398c:	1e56      	subs	r6, r2, #1
 802398e:	9b06      	ldr	r3, [sp, #24]
 8023990:	2b00      	cmp	r3, #0
 8023992:	f340 80b7 	ble.w	8023b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8023996:	ea5f 472b 	movs.w	r7, fp, asr #16
 802399a:	ea4f 4325 	mov.w	r3, r5, asr #16
 802399e:	d406      	bmi.n	80239ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80239a0:	4287      	cmp	r7, r0
 80239a2:	da04      	bge.n	80239ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80239a4:	2b00      	cmp	r3, #0
 80239a6:	db02      	blt.n	80239ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80239a8:	42b3      	cmp	r3, r6
 80239aa:	f2c0 80ac 	blt.w	8023b06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80239ae:	3701      	adds	r7, #1
 80239b0:	f100 809d 	bmi.w	8023aee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80239b4:	42b9      	cmp	r1, r7
 80239b6:	f2c0 809a 	blt.w	8023aee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80239ba:	3301      	adds	r3, #1
 80239bc:	f100 8097 	bmi.w	8023aee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80239c0:	429a      	cmp	r2, r3
 80239c2:	f2c0 8094 	blt.w	8023aee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80239c6:	9b06      	ldr	r3, [sp, #24]
 80239c8:	930b      	str	r3, [sp, #44]	; 0x2c
 80239ca:	9b07      	ldr	r3, [sp, #28]
 80239cc:	9309      	str	r3, [sp, #36]	; 0x24
 80239ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80239d0:	2b00      	cmp	r3, #0
 80239d2:	f340 80b5 	ble.w	8023b40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80239d6:	9820      	ldr	r0, [sp, #128]	; 0x80
 80239d8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80239da:	68c7      	ldr	r7, [r0, #12]
 80239dc:	6892      	ldr	r2, [r2, #8]
 80239de:	ea5f 402b 	movs.w	r0, fp, asr #16
 80239e2:	ea4f 4625 	mov.w	r6, r5, asr #16
 80239e6:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80239ea:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80239ee:	f100 80fb 	bmi.w	8023be8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80239f2:	f102 3cff 	add.w	ip, r2, #4294967295
 80239f6:	4560      	cmp	r0, ip
 80239f8:	f280 80f6 	bge.w	8023be8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80239fc:	2e00      	cmp	r6, #0
 80239fe:	f2c0 80f3 	blt.w	8023be8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023a02:	f107 3cff 	add.w	ip, r7, #4294967295
 8023a06:	4566      	cmp	r6, ip
 8023a08:	f280 80ee 	bge.w	8023be8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023a0c:	b212      	sxth	r2, r2
 8023a0e:	fb06 0002 	mla	r0, r6, r2, r0
 8023a12:	9e08      	ldr	r6, [sp, #32]
 8023a14:	1837      	adds	r7, r6, r0
 8023a16:	5c30      	ldrb	r0, [r6, r0]
 8023a18:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8023a1c:	eb04 0c08 	add.w	ip, r4, r8
 8023a20:	2b00      	cmp	r3, #0
 8023a22:	f000 80d3 	beq.w	8023bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8023a26:	787e      	ldrb	r6, [r7, #1]
 8023a28:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023a2c:	4426      	add	r6, r4
 8023a2e:	2900      	cmp	r1, #0
 8023a30:	f000 80d4 	beq.w	8023bdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8023a34:	18b8      	adds	r0, r7, r2
 8023a36:	5cba      	ldrb	r2, [r7, r2]
 8023a38:	7840      	ldrb	r0, [r0, #1]
 8023a3a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023a3e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023a42:	4422      	add	r2, r4
 8023a44:	4420      	add	r0, r4
 8023a46:	b29b      	uxth	r3, r3
 8023a48:	b289      	uxth	r1, r1
 8023a4a:	fb03 f901 	mul.w	r9, r3, r1
 8023a4e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023a52:	011b      	lsls	r3, r3, #4
 8023a54:	b289      	uxth	r1, r1
 8023a56:	78b7      	ldrb	r7, [r6, #2]
 8023a58:	f89c a002 	ldrb.w	sl, [ip, #2]
 8023a5c:	f89c c001 	ldrb.w	ip, [ip, #1]
 8023a60:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8023a64:	eba3 0309 	sub.w	r3, r3, r9
 8023a68:	b29b      	uxth	r3, r3
 8023a6a:	ebae 0e01 	sub.w	lr, lr, r1
 8023a6e:	fa1f fe8e 	uxth.w	lr, lr
 8023a72:	435f      	muls	r7, r3
 8023a74:	fb0e 770a 	mla	r7, lr, sl, r7
 8023a78:	f892 a002 	ldrb.w	sl, [r2, #2]
 8023a7c:	fb01 770a 	mla	r7, r1, sl, r7
 8023a80:	f890 a002 	ldrb.w	sl, [r0, #2]
 8023a84:	fb09 7a0a 	mla	sl, r9, sl, r7
 8023a88:	f814 7008 	ldrb.w	r7, [r4, r8]
 8023a8c:	f896 8000 	ldrb.w	r8, [r6]
 8023a90:	7876      	ldrb	r6, [r6, #1]
 8023a92:	fb03 f808 	mul.w	r8, r3, r8
 8023a96:	fb0e 8807 	mla	r8, lr, r7, r8
 8023a9a:	7817      	ldrb	r7, [r2, #0]
 8023a9c:	fb01 8807 	mla	r8, r1, r7, r8
 8023aa0:	7807      	ldrb	r7, [r0, #0]
 8023aa2:	fb09 8707 	mla	r7, r9, r7, r8
 8023aa6:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8023aaa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023aae:	ea47 070a 	orr.w	r7, r7, sl
 8023ab2:	4373      	muls	r3, r6
 8023ab4:	f892 a001 	ldrb.w	sl, [r2, #1]
 8023ab8:	fb0e 330c 	mla	r3, lr, ip, r3
 8023abc:	fb01 310a 	mla	r1, r1, sl, r3
 8023ac0:	f890 a001 	ldrb.w	sl, [r0, #1]
 8023ac4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023ac6:	fb09 1a0a 	mla	sl, r9, sl, r1
 8023aca:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8023ace:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8023ad2:	ea47 070a 	orr.w	r7, r7, sl
 8023ad6:	801f      	strh	r7, [r3, #0]
 8023ad8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023ada:	3302      	adds	r3, #2
 8023adc:	9309      	str	r3, [sp, #36]	; 0x24
 8023ade:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023ae0:	449b      	add	fp, r3
 8023ae2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023ae4:	441d      	add	r5, r3
 8023ae6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023ae8:	3b01      	subs	r3, #1
 8023aea:	930b      	str	r3, [sp, #44]	; 0x2c
 8023aec:	e76f      	b.n	80239ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023aee:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023af0:	449b      	add	fp, r3
 8023af2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023af4:	441d      	add	r5, r3
 8023af6:	9b06      	ldr	r3, [sp, #24]
 8023af8:	3b01      	subs	r3, #1
 8023afa:	9306      	str	r3, [sp, #24]
 8023afc:	9b07      	ldr	r3, [sp, #28]
 8023afe:	3302      	adds	r3, #2
 8023b00:	9307      	str	r3, [sp, #28]
 8023b02:	e744      	b.n	802398e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8023b04:	d023      	beq.n	8023b4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8023b06:	9b06      	ldr	r3, [sp, #24]
 8023b08:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023b0a:	3b01      	subs	r3, #1
 8023b0c:	fb00 b003 	mla	r0, r0, r3, fp
 8023b10:	1400      	asrs	r0, r0, #16
 8023b12:	f53f af58 	bmi.w	80239c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023b16:	3901      	subs	r1, #1
 8023b18:	4288      	cmp	r0, r1
 8023b1a:	f6bf af54 	bge.w	80239c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023b1e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8023b20:	fb01 5303 	mla	r3, r1, r3, r5
 8023b24:	141b      	asrs	r3, r3, #16
 8023b26:	f53f af4e 	bmi.w	80239c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023b2a:	3a01      	subs	r2, #1
 8023b2c:	4293      	cmp	r3, r2
 8023b2e:	f6bf af4a 	bge.w	80239c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023b32:	9b06      	ldr	r3, [sp, #24]
 8023b34:	9309      	str	r3, [sp, #36]	; 0x24
 8023b36:	9b07      	ldr	r3, [sp, #28]
 8023b38:	930b      	str	r3, [sp, #44]	; 0x2c
 8023b3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023b3c:	2b00      	cmp	r3, #0
 8023b3e:	dc70      	bgt.n	8023c22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8023b40:	9b06      	ldr	r3, [sp, #24]
 8023b42:	9a07      	ldr	r2, [sp, #28]
 8023b44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023b48:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023b4c:	9307      	str	r3, [sp, #28]
 8023b4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023b50:	2b00      	cmp	r3, #0
 8023b52:	f340 80eb 	ble.w	8023d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8023b56:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023b5a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023b5e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023b62:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023b64:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023b68:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023b6c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023b70:	eef0 6a62 	vmov.f32	s13, s5
 8023b74:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023b78:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023b7c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023b80:	ee16 ba90 	vmov	fp, s13
 8023b84:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023b88:	eef0 6a43 	vmov.f32	s13, s6
 8023b8c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023b90:	ee12 2a90 	vmov	r2, s5
 8023b94:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023b98:	fb92 f3f3 	sdiv	r3, r2, r3
 8023b9c:	ee13 2a10 	vmov	r2, s6
 8023ba0:	931b      	str	r3, [sp, #108]	; 0x6c
 8023ba2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023ba4:	fb92 f3f3 	sdiv	r3, r2, r3
 8023ba8:	931c      	str	r3, [sp, #112]	; 0x70
 8023baa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023bac:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023bae:	3b01      	subs	r3, #1
 8023bb0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023bb4:	930a      	str	r3, [sp, #40]	; 0x28
 8023bb6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023bb8:	bf08      	it	eq
 8023bba:	4613      	moveq	r3, r2
 8023bbc:	ee16 5a90 	vmov	r5, s13
 8023bc0:	9306      	str	r3, [sp, #24]
 8023bc2:	eeb0 3a67 	vmov.f32	s6, s15
 8023bc6:	eef0 2a47 	vmov.f32	s5, s14
 8023bca:	e6d2      	b.n	8023972 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8023bcc:	b149      	cbz	r1, 8023be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8023bce:	5cba      	ldrb	r2, [r7, r2]
 8023bd0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023bd4:	4422      	add	r2, r4
 8023bd6:	4660      	mov	r0, ip
 8023bd8:	4666      	mov	r6, ip
 8023bda:	e734      	b.n	8023a46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8023bdc:	4660      	mov	r0, ip
 8023bde:	4662      	mov	r2, ip
 8023be0:	e731      	b.n	8023a46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8023be2:	4660      	mov	r0, ip
 8023be4:	4662      	mov	r2, ip
 8023be6:	e7f7      	b.n	8023bd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8023be8:	f110 0c01 	adds.w	ip, r0, #1
 8023bec:	f53f af74 	bmi.w	8023ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023bf0:	4562      	cmp	r2, ip
 8023bf2:	f6ff af71 	blt.w	8023ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023bf6:	f116 0c01 	adds.w	ip, r6, #1
 8023bfa:	f53f af6d 	bmi.w	8023ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023bfe:	4567      	cmp	r7, ip
 8023c00:	f6ff af6a 	blt.w	8023ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023c04:	b23f      	sxth	r7, r7
 8023c06:	b212      	sxth	r2, r2
 8023c08:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8023c0c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8023c10:	9200      	str	r2, [sp, #0]
 8023c12:	9701      	str	r7, [sp, #4]
 8023c14:	4623      	mov	r3, r4
 8023c16:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8023c1a:	980d      	ldr	r0, [sp, #52]	; 0x34
 8023c1c:	f7ff fde6 	bl	80237ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8023c20:	e75a      	b.n	8023ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023c22:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023c24:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8023c28:	ea4f 462b 	mov.w	r6, fp, asr #16
 8023c2c:	1428      	asrs	r0, r5, #16
 8023c2e:	fb02 6000 	mla	r0, r2, r0, r6
 8023c32:	9e08      	ldr	r6, [sp, #32]
 8023c34:	f816 8000 	ldrb.w	r8, [r6, r0]
 8023c38:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8023c3c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8023c40:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023c44:	1837      	adds	r7, r6, r0
 8023c46:	eb04 0c08 	add.w	ip, r4, r8
 8023c4a:	2b00      	cmp	r3, #0
 8023c4c:	d060      	beq.n	8023d10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8023c4e:	787e      	ldrb	r6, [r7, #1]
 8023c50:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023c54:	4426      	add	r6, r4
 8023c56:	2900      	cmp	r1, #0
 8023c58:	d062      	beq.n	8023d20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8023c5a:	18b8      	adds	r0, r7, r2
 8023c5c:	5cba      	ldrb	r2, [r7, r2]
 8023c5e:	7840      	ldrb	r0, [r0, #1]
 8023c60:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023c64:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023c68:	4422      	add	r2, r4
 8023c6a:	4420      	add	r0, r4
 8023c6c:	b29b      	uxth	r3, r3
 8023c6e:	b289      	uxth	r1, r1
 8023c70:	fb03 f901 	mul.w	r9, r3, r1
 8023c74:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023c78:	011b      	lsls	r3, r3, #4
 8023c7a:	b289      	uxth	r1, r1
 8023c7c:	78b7      	ldrb	r7, [r6, #2]
 8023c7e:	f89c a002 	ldrb.w	sl, [ip, #2]
 8023c82:	f89c c001 	ldrb.w	ip, [ip, #1]
 8023c86:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8023c8a:	eba3 0309 	sub.w	r3, r3, r9
 8023c8e:	b29b      	uxth	r3, r3
 8023c90:	ebae 0e01 	sub.w	lr, lr, r1
 8023c94:	fa1f fe8e 	uxth.w	lr, lr
 8023c98:	435f      	muls	r7, r3
 8023c9a:	fb0e 770a 	mla	r7, lr, sl, r7
 8023c9e:	f892 a002 	ldrb.w	sl, [r2, #2]
 8023ca2:	fb01 770a 	mla	r7, r1, sl, r7
 8023ca6:	f890 a002 	ldrb.w	sl, [r0, #2]
 8023caa:	fb09 7a0a 	mla	sl, r9, sl, r7
 8023cae:	f814 7008 	ldrb.w	r7, [r4, r8]
 8023cb2:	f896 8000 	ldrb.w	r8, [r6]
 8023cb6:	7876      	ldrb	r6, [r6, #1]
 8023cb8:	fb03 f808 	mul.w	r8, r3, r8
 8023cbc:	fb0e 8807 	mla	r8, lr, r7, r8
 8023cc0:	7817      	ldrb	r7, [r2, #0]
 8023cc2:	fb01 8807 	mla	r8, r1, r7, r8
 8023cc6:	7807      	ldrb	r7, [r0, #0]
 8023cc8:	fb09 8707 	mla	r7, r9, r7, r8
 8023ccc:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8023cd0:	4373      	muls	r3, r6
 8023cd2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023cd6:	7856      	ldrb	r6, [r2, #1]
 8023cd8:	ea47 070a 	orr.w	r7, r7, sl
 8023cdc:	fb0e 330c 	mla	r3, lr, ip, r3
 8023ce0:	f890 a001 	ldrb.w	sl, [r0, #1]
 8023ce4:	fb01 3306 	mla	r3, r1, r6, r3
 8023ce8:	fb09 3a0a 	mla	sl, r9, sl, r3
 8023cec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8023cf0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023cf2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8023cf6:	ea47 070a 	orr.w	r7, r7, sl
 8023cfa:	f823 7b02 	strh.w	r7, [r3], #2
 8023cfe:	930b      	str	r3, [sp, #44]	; 0x2c
 8023d00:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023d02:	449b      	add	fp, r3
 8023d04:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023d06:	441d      	add	r5, r3
 8023d08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023d0a:	3b01      	subs	r3, #1
 8023d0c:	9309      	str	r3, [sp, #36]	; 0x24
 8023d0e:	e714      	b.n	8023b3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8023d10:	b149      	cbz	r1, 8023d26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023d12:	5cba      	ldrb	r2, [r7, r2]
 8023d14:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023d18:	4422      	add	r2, r4
 8023d1a:	4660      	mov	r0, ip
 8023d1c:	4666      	mov	r6, ip
 8023d1e:	e7a5      	b.n	8023c6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8023d20:	4660      	mov	r0, ip
 8023d22:	4662      	mov	r2, ip
 8023d24:	e7a2      	b.n	8023c6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8023d26:	4660      	mov	r0, ip
 8023d28:	4662      	mov	r2, ip
 8023d2a:	e7f7      	b.n	8023d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8023d2c:	b00f      	add	sp, #60	; 0x3c
 8023d2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023d32 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8023d32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023d36:	b085      	sub	sp, #20
 8023d38:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8023d3c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8023d40:	9102      	str	r1, [sp, #8]
 8023d42:	2c00      	cmp	r4, #0
 8023d44:	fb04 710c 	mla	r1, r4, ip, r7
 8023d48:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8023d4c:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8023d50:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8023d54:	eb02 0e01 	add.w	lr, r2, r1
 8023d58:	f2c0 8122 	blt.w	8023fa0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8023d5c:	45a0      	cmp	r8, r4
 8023d5e:	f340 811f 	ble.w	8023fa0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8023d62:	2f00      	cmp	r7, #0
 8023d64:	f2c0 811a 	blt.w	8023f9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023d68:	45bc      	cmp	ip, r7
 8023d6a:	f340 8117 	ble.w	8023f9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023d6e:	5c52      	ldrb	r2, [r2, r1]
 8023d70:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8023d74:	1c7a      	adds	r2, r7, #1
 8023d76:	f100 8116 	bmi.w	8023fa6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023d7a:	4594      	cmp	ip, r2
 8023d7c:	f340 8113 	ble.w	8023fa6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023d80:	2e00      	cmp	r6, #0
 8023d82:	f000 8112 	beq.w	8023faa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8023d86:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023d8a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8023d8e:	3401      	adds	r4, #1
 8023d90:	f100 810f 	bmi.w	8023fb2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8023d94:	45a0      	cmp	r8, r4
 8023d96:	f340 810c 	ble.w	8023fb2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8023d9a:	2800      	cmp	r0, #0
 8023d9c:	f000 810c 	beq.w	8023fb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8023da0:	2f00      	cmp	r7, #0
 8023da2:	f2c0 8104 	blt.w	8023fae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8023da6:	45bc      	cmp	ip, r7
 8023da8:	f340 8101 	ble.w	8023fae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8023dac:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8023db0:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8023db4:	3701      	adds	r7, #1
 8023db6:	f100 8102 	bmi.w	8023fbe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8023dba:	45bc      	cmp	ip, r7
 8023dbc:	f340 80ff 	ble.w	8023fbe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8023dc0:	2e00      	cmp	r6, #0
 8023dc2:	f000 80fe 	beq.w	8023fc2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8023dc6:	44f4      	add	ip, lr
 8023dc8:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8023dcc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8023dd0:	b2b6      	uxth	r6, r6
 8023dd2:	b280      	uxth	r0, r0
 8023dd4:	fb00 fe06 	mul.w	lr, r0, r6
 8023dd8:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023ddc:	0136      	lsls	r6, r6, #4
 8023dde:	eba6 070e 	sub.w	r7, r6, lr
 8023de2:	b280      	uxth	r0, r0
 8023de4:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023de8:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023dec:	b2bf      	uxth	r7, r7
 8023dee:	1a1b      	subs	r3, r3, r0
 8023df0:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023df4:	b29b      	uxth	r3, r3
 8023df6:	fb0a f607 	mul.w	r6, sl, r7
 8023dfa:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023dfe:	fb0b 6603 	mla	r6, fp, r3, r6
 8023e02:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023e06:	fb00 6609 	mla	r6, r0, r9, r6
 8023e0a:	fb0e 6608 	mla	r6, lr, r8, r6
 8023e0e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023e12:	9600      	str	r6, [sp, #0]
 8023e14:	2e00      	cmp	r6, #0
 8023e16:	f000 80be 	beq.w	8023f96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8023e1a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023e1e:	fb0b fc0c 	mul.w	ip, fp, ip
 8023e22:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023e26:	fb0b f505 	mul.w	r5, fp, r5
 8023e2a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023e2e:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023e32:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023e36:	44dc      	add	ip, fp
 8023e38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023e3c:	9501      	str	r5, [sp, #4]
 8023e3e:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023e42:	9503      	str	r5, [sp, #12]
 8023e44:	9d01      	ldr	r5, [sp, #4]
 8023e46:	9e02      	ldr	r6, [sp, #8]
 8023e48:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023e4c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023e50:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023e54:	fb0a fc0c 	mul.w	ip, sl, ip
 8023e58:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023e5c:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023e60:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023e64:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023e68:	4465      	add	r5, ip
 8023e6a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023e6e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023e72:	fb09 fc0c 	mul.w	ip, r9, ip
 8023e76:	fb09 f904 	mul.w	r9, r9, r4
 8023e7a:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023e7e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023e82:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023e86:	fb08 f404 	mul.w	r4, r8, r4
 8023e8a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023e8e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023e92:	fb08 f802 	mul.w	r8, r8, r2
 8023e96:	fb0a fa01 	mul.w	sl, sl, r1
 8023e9a:	0a22      	lsrs	r2, r4, #8
 8023e9c:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023ea0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023ea4:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023ea8:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023eac:	4414      	add	r4, r2
 8023eae:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023eb2:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023eb6:	0a2d      	lsrs	r5, r5, #8
 8023eb8:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023ebc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023ec0:	9a03      	ldr	r2, [sp, #12]
 8023ec2:	8836      	ldrh	r6, [r6, #0]
 8023ec4:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023ec8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023ecc:	437d      	muls	r5, r7
 8023ece:	4461      	add	r1, ip
 8023ed0:	0a24      	lsrs	r4, r4, #8
 8023ed2:	fb02 5503 	mla	r5, r2, r3, r5
 8023ed6:	0a09      	lsrs	r1, r1, #8
 8023ed8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023edc:	fb04 540e 	mla	r4, r4, lr, r5
 8023ee0:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023ee4:	fb01 4100 	mla	r1, r1, r0, r4
 8023ee8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023eec:	0a09      	lsrs	r1, r1, #8
 8023eee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023ef2:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023ef6:	fb07 f70a 	mul.w	r7, r7, sl
 8023efa:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023efe:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023f02:	fb03 7101 	mla	r1, r3, r1, r7
 8023f06:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023f0a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023f0e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023f12:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023f16:	fb00 e101 	mla	r1, r0, r1, lr
 8023f1a:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8023f1e:	9a00      	ldr	r2, [sp, #0]
 8023f20:	b287      	uxth	r7, r0
 8023f22:	437a      	muls	r2, r7
 8023f24:	0a09      	lsrs	r1, r1, #8
 8023f26:	1c53      	adds	r3, r2, #1
 8023f28:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023f2c:	4321      	orrs	r1, r4
 8023f2e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023f32:	1235      	asrs	r5, r6, #8
 8023f34:	0c0a      	lsrs	r2, r1, #16
 8023f36:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8023f3a:	b2db      	uxtb	r3, r3
 8023f3c:	fb12 f207 	smulbb	r2, r2, r7
 8023f40:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023f44:	fb05 2503 	mla	r5, r5, r3, r2
 8023f48:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8023f4c:	10f2      	asrs	r2, r6, #3
 8023f4e:	b2c8      	uxtb	r0, r1
 8023f50:	00f6      	lsls	r6, r6, #3
 8023f52:	fb14 f407 	smulbb	r4, r4, r7
 8023f56:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023f5a:	b2f6      	uxtb	r6, r6
 8023f5c:	fb10 f007 	smulbb	r0, r0, r7
 8023f60:	fb02 4203 	mla	r2, r2, r3, r4
 8023f64:	b2ad      	uxth	r5, r5
 8023f66:	fb06 0303 	mla	r3, r6, r3, r0
 8023f6a:	b299      	uxth	r1, r3
 8023f6c:	b294      	uxth	r4, r2
 8023f6e:	1c6b      	adds	r3, r5, #1
 8023f70:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023f74:	1c62      	adds	r2, r4, #1
 8023f76:	1c4b      	adds	r3, r1, #1
 8023f78:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023f7c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8023f80:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023f84:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023f88:	0952      	lsrs	r2, r2, #5
 8023f8a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023f8e:	432b      	orrs	r3, r5
 8023f90:	4313      	orrs	r3, r2
 8023f92:	9a02      	ldr	r2, [sp, #8]
 8023f94:	8013      	strh	r3, [r2, #0]
 8023f96:	b005      	add	sp, #20
 8023f98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023f9c:	2500      	movs	r5, #0
 8023f9e:	e6e9      	b.n	8023d74 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8023fa0:	2100      	movs	r1, #0
 8023fa2:	460d      	mov	r5, r1
 8023fa4:	e6f3      	b.n	8023d8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023fa6:	2100      	movs	r1, #0
 8023fa8:	e6f1      	b.n	8023d8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023faa:	4631      	mov	r1, r6
 8023fac:	e6ef      	b.n	8023d8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023fae:	2400      	movs	r4, #0
 8023fb0:	e700      	b.n	8023db4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8023fb2:	2200      	movs	r2, #0
 8023fb4:	4614      	mov	r4, r2
 8023fb6:	e70b      	b.n	8023dd0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023fb8:	4602      	mov	r2, r0
 8023fba:	4604      	mov	r4, r0
 8023fbc:	e708      	b.n	8023dd0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023fbe:	2200      	movs	r2, #0
 8023fc0:	e706      	b.n	8023dd0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023fc2:	4632      	mov	r2, r6
 8023fc4:	e704      	b.n	8023dd0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08023fc6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023fc6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023fca:	b09f      	sub	sp, #124	; 0x7c
 8023fcc:	921b      	str	r2, [sp, #108]	; 0x6c
 8023fce:	9309      	str	r3, [sp, #36]	; 0x24
 8023fd0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8023fd2:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8023fd6:	931c      	str	r3, [sp, #112]	; 0x70
 8023fd8:	9119      	str	r1, [sp, #100]	; 0x64
 8023fda:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8023fde:	901d      	str	r0, [sp, #116]	; 0x74
 8023fe0:	6850      	ldr	r0, [r2, #4]
 8023fe2:	6812      	ldr	r2, [r2, #0]
 8023fe4:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8023fe6:	fb00 1303 	mla	r3, r0, r3, r1
 8023fea:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023fee:	930c      	str	r3, [sp, #48]	; 0x30
 8023ff0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023ff2:	681b      	ldr	r3, [r3, #0]
 8023ff4:	9312      	str	r3, [sp, #72]	; 0x48
 8023ff6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023ff8:	685e      	ldr	r6, [r3, #4]
 8023ffa:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8023ffe:	930d      	str	r3, [sp, #52]	; 0x34
 8024000:	3604      	adds	r6, #4
 8024002:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024004:	2b00      	cmp	r3, #0
 8024006:	dc03      	bgt.n	8024010 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8024008:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802400a:	2b00      	cmp	r3, #0
 802400c:	f340 8388 	ble.w	8024720 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8024010:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024012:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024016:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802401a:	1e48      	subs	r0, r1, #1
 802401c:	1e57      	subs	r7, r2, #1
 802401e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024020:	2b00      	cmp	r3, #0
 8024022:	f340 8195 	ble.w	8024350 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8024026:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8024028:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802402c:	ea4f 4325 	mov.w	r3, r5, asr #16
 8024030:	d406      	bmi.n	8024040 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8024032:	4584      	cmp	ip, r0
 8024034:	da04      	bge.n	8024040 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8024036:	2b00      	cmp	r3, #0
 8024038:	db02      	blt.n	8024040 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802403a:	42bb      	cmp	r3, r7
 802403c:	f2c0 8189 	blt.w	8024352 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8024040:	f11c 0c01 	adds.w	ip, ip, #1
 8024044:	f100 8177 	bmi.w	8024336 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024048:	4561      	cmp	r1, ip
 802404a:	f2c0 8174 	blt.w	8024336 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802404e:	3301      	adds	r3, #1
 8024050:	f100 8171 	bmi.w	8024336 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024054:	429a      	cmp	r2, r3
 8024056:	f2c0 816e 	blt.w	8024336 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802405a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802405c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 802405e:	931a      	str	r3, [sp, #104]	; 0x68
 8024060:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8024062:	2b00      	cmp	r3, #0
 8024064:	f340 8193 	ble.w	802438e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8024068:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802406a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802406e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024070:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8024074:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024076:	141b      	asrs	r3, r3, #16
 8024078:	ea4f 4c25 	mov.w	ip, r5, asr #16
 802407c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8024080:	f100 81d6 	bmi.w	8024430 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8024084:	f100 38ff 	add.w	r8, r0, #4294967295
 8024088:	4543      	cmp	r3, r8
 802408a:	f280 81d1 	bge.w	8024430 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802408e:	f1bc 0f00 	cmp.w	ip, #0
 8024092:	f2c0 81cd 	blt.w	8024430 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8024096:	f10e 38ff 	add.w	r8, lr, #4294967295
 802409a:	45c4      	cmp	ip, r8
 802409c:	f280 81c8 	bge.w	8024430 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80240a0:	b200      	sxth	r0, r0
 80240a2:	fb0c 3300 	mla	r3, ip, r0, r3
 80240a6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80240a8:	eb04 0803 	add.w	r8, r4, r3
 80240ac:	5ce3      	ldrb	r3, [r4, r3]
 80240ae:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80240b2:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80240b6:	2a00      	cmp	r2, #0
 80240b8:	f000 81af 	beq.w	802441a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80240bc:	f898 c001 	ldrb.w	ip, [r8, #1]
 80240c0:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80240c4:	940e      	str	r4, [sp, #56]	; 0x38
 80240c6:	0e24      	lsrs	r4, r4, #24
 80240c8:	9415      	str	r4, [sp, #84]	; 0x54
 80240ca:	b179      	cbz	r1, 80240ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80240cc:	eb08 0c00 	add.w	ip, r8, r0
 80240d0:	f818 0000 	ldrb.w	r0, [r8, r0]
 80240d4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80240d8:	900a      	str	r0, [sp, #40]	; 0x28
 80240da:	0e00      	lsrs	r0, r0, #24
 80240dc:	9013      	str	r0, [sp, #76]	; 0x4c
 80240de:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80240e2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80240e6:	900f      	str	r0, [sp, #60]	; 0x3c
 80240e8:	0e00      	lsrs	r0, r0, #24
 80240ea:	9016      	str	r0, [sp, #88]	; 0x58
 80240ec:	b292      	uxth	r2, r2
 80240ee:	b289      	uxth	r1, r1
 80240f0:	fb02 f901 	mul.w	r9, r2, r1
 80240f4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80240f8:	0112      	lsls	r2, r2, #4
 80240fa:	eba2 0809 	sub.w	r8, r2, r9
 80240fe:	b289      	uxth	r1, r1
 8024100:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024104:	9815      	ldr	r0, [sp, #84]	; 0x54
 8024106:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024108:	fa1f f888 	uxth.w	r8, r8
 802410c:	1a52      	subs	r2, r2, r1
 802410e:	b292      	uxth	r2, r2
 8024110:	fb08 f000 	mul.w	r0, r8, r0
 8024114:	fb02 000e 	mla	r0, r2, lr, r0
 8024118:	fb01 0004 	mla	r0, r1, r4, r0
 802411c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802411e:	fb09 0004 	mla	r0, r9, r4, r0
 8024122:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8024126:	2800      	cmp	r0, #0
 8024128:	f000 80fa 	beq.w	8024320 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802412c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024130:	d01b      	beq.n	802416a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024132:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024136:	fb0e fa0a 	mul.w	sl, lr, sl
 802413a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802413e:	fb0e fe03 	mul.w	lr, lr, r3
 8024142:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024146:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802414a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802414e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024152:	4453      	add	r3, sl
 8024154:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024158:	0a1b      	lsrs	r3, r3, #8
 802415a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802415e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024162:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024166:	ea43 030c 	orr.w	r3, r3, ip
 802416a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802416c:	2cff      	cmp	r4, #255	; 0xff
 802416e:	d021      	beq.n	80241b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024170:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024172:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024176:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024178:	fb04 fb0b 	mul.w	fp, r4, fp
 802417c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802417e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024182:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024184:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024188:	fb04 fa0a 	mul.w	sl, r4, sl
 802418c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024190:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024194:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024198:	44de      	add	lr, fp
 802419a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802419e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80241a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80241a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80241aa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80241ae:	ea4e 040a 	orr.w	r4, lr, sl
 80241b2:	940e      	str	r4, [sp, #56]	; 0x38
 80241b4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80241b6:	2cff      	cmp	r4, #255	; 0xff
 80241b8:	d021      	beq.n	80241fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80241ba:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80241bc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80241c0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80241c2:	fb04 fb0b 	mul.w	fp, r4, fp
 80241c6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80241c8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80241cc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80241ce:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80241d2:	fb04 fa0a 	mul.w	sl, r4, sl
 80241d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80241da:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80241de:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80241e2:	44de      	add	lr, fp
 80241e4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80241e8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80241ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80241f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80241f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80241f8:	ea4e 040a 	orr.w	r4, lr, sl
 80241fc:	940a      	str	r4, [sp, #40]	; 0x28
 80241fe:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024200:	2cff      	cmp	r4, #255	; 0xff
 8024202:	d021      	beq.n	8024248 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8024204:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024206:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802420a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802420c:	fb04 fb0b 	mul.w	fp, r4, fp
 8024210:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024212:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024216:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024218:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802421c:	fb04 fa0a 	mul.w	sl, r4, sl
 8024220:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024224:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024228:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802422c:	44de      	add	lr, fp
 802422e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024232:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024236:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802423a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802423e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024242:	ea4e 040a 	orr.w	r4, lr, sl
 8024246:	940f      	str	r4, [sp, #60]	; 0x3c
 8024248:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802424a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802424e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024250:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8024254:	fb08 fc0c 	mul.w	ip, r8, ip
 8024258:	fb02 cc0e 	mla	ip, r2, lr, ip
 802425c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024260:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024262:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024266:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802426a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802426c:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024270:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8024274:	fb08 f80e 	mul.w	r8, r8, lr
 8024278:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802427c:	fb02 8303 	mla	r3, r2, r3, r8
 8024280:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024282:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024284:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024288:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802428a:	fb01 330a 	mla	r3, r1, sl, r3
 802428e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8024292:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8024294:	fb09 3901 	mla	r9, r9, r1, r3
 8024298:	4342      	muls	r2, r0
 802429a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802429e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80242a2:	883b      	ldrh	r3, [r7, #0]
 80242a4:	1c50      	adds	r0, r2, #1
 80242a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80242aa:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80242ae:	ea4c 0c09 	orr.w	ip, ip, r9
 80242b2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80242b6:	1219      	asrs	r1, r3, #8
 80242b8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80242bc:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80242c0:	b2c0      	uxtb	r0, r0
 80242c2:	fb12 f204 	smulbb	r2, r2, r4
 80242c6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80242ca:	fb01 2100 	mla	r1, r1, r0, r2
 80242ce:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80242d2:	10da      	asrs	r2, r3, #3
 80242d4:	fa5f fc8c 	uxtb.w	ip, ip
 80242d8:	00db      	lsls	r3, r3, #3
 80242da:	fb1c fc04 	smulbb	ip, ip, r4
 80242de:	b2db      	uxtb	r3, r3
 80242e0:	b289      	uxth	r1, r1
 80242e2:	fb03 c300 	mla	r3, r3, r0, ip
 80242e6:	fa1f fc83 	uxth.w	ip, r3
 80242ea:	1c4b      	adds	r3, r1, #1
 80242ec:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80242f0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80242f4:	fb1e fe04 	smulbb	lr, lr, r4
 80242f8:	f10c 0301 	add.w	r3, ip, #1
 80242fc:	fb02 e200 	mla	r2, r2, r0, lr
 8024300:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8024304:	b292      	uxth	r2, r2
 8024306:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802430a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802430e:	430b      	orrs	r3, r1
 8024310:	1c51      	adds	r1, r2, #1
 8024312:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024316:	0952      	lsrs	r2, r2, #5
 8024318:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802431c:	4313      	orrs	r3, r2
 802431e:	803b      	strh	r3, [r7, #0]
 8024320:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024322:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024324:	441a      	add	r2, r3
 8024326:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024328:	9229      	str	r2, [sp, #164]	; 0xa4
 802432a:	441d      	add	r5, r3
 802432c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802432e:	3b01      	subs	r3, #1
 8024330:	3702      	adds	r7, #2
 8024332:	931a      	str	r3, [sp, #104]	; 0x68
 8024334:	e694      	b.n	8024060 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8024336:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024338:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802433a:	441c      	add	r4, r3
 802433c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802433e:	9429      	str	r4, [sp, #164]	; 0xa4
 8024340:	441d      	add	r5, r3
 8024342:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024344:	3b01      	subs	r3, #1
 8024346:	9309      	str	r3, [sp, #36]	; 0x24
 8024348:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802434a:	3302      	adds	r3, #2
 802434c:	930c      	str	r3, [sp, #48]	; 0x30
 802434e:	e666      	b.n	802401e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024350:	d024      	beq.n	802439c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8024352:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024354:	982b      	ldr	r0, [sp, #172]	; 0xac
 8024356:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8024358:	3b01      	subs	r3, #1
 802435a:	fb00 4003 	mla	r0, r0, r3, r4
 802435e:	1400      	asrs	r0, r0, #16
 8024360:	f53f ae7b 	bmi.w	802405a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024364:	3901      	subs	r1, #1
 8024366:	4288      	cmp	r0, r1
 8024368:	f6bf ae77 	bge.w	802405a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802436c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 802436e:	fb01 5303 	mla	r3, r1, r3, r5
 8024372:	141b      	asrs	r3, r3, #16
 8024374:	f53f ae71 	bmi.w	802405a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024378:	3a01      	subs	r2, #1
 802437a:	4293      	cmp	r3, r2
 802437c:	f6bf ae6d 	bge.w	802405a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024380:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8024384:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8024388:	f1bb 0f00 	cmp.w	fp, #0
 802438c:	dc70      	bgt.n	8024470 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 802438e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024390:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024394:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024396:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802439a:	930c      	str	r3, [sp, #48]	; 0x30
 802439c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802439e:	2b00      	cmp	r3, #0
 80243a0:	f340 81be 	ble.w	8024720 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80243a4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80243a8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80243ac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80243b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80243b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80243b6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80243ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80243be:	eef0 6a62 	vmov.f32	s13, s5
 80243c2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80243c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80243ca:	ee77 2a62 	vsub.f32	s5, s14, s5
 80243ce:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80243d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80243d6:	eef0 6a43 	vmov.f32	s13, s6
 80243da:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80243de:	ee12 2a90 	vmov	r2, s5
 80243e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80243e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80243ea:	ee13 2a10 	vmov	r2, s6
 80243ee:	932b      	str	r3, [sp, #172]	; 0xac
 80243f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80243f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80243f6:	932c      	str	r3, [sp, #176]	; 0xb0
 80243f8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80243fa:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80243fc:	3b01      	subs	r3, #1
 80243fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024402:	9319      	str	r3, [sp, #100]	; 0x64
 8024404:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024406:	bf08      	it	eq
 8024408:	4613      	moveq	r3, r2
 802440a:	ee16 5a90 	vmov	r5, s13
 802440e:	9309      	str	r3, [sp, #36]	; 0x24
 8024410:	eeb0 3a67 	vmov.f32	s6, s15
 8024414:	eef0 2a47 	vmov.f32	s5, s14
 8024418:	e5f3      	b.n	8024002 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802441a:	2900      	cmp	r1, #0
 802441c:	f43f ae66 	beq.w	80240ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8024420:	f818 0000 	ldrb.w	r0, [r8, r0]
 8024424:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8024428:	900a      	str	r0, [sp, #40]	; 0x28
 802442a:	0e00      	lsrs	r0, r0, #24
 802442c:	9013      	str	r0, [sp, #76]	; 0x4c
 802442e:	e65d      	b.n	80240ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8024430:	f113 0801 	adds.w	r8, r3, #1
 8024434:	f53f af74 	bmi.w	8024320 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024438:	4540      	cmp	r0, r8
 802443a:	f6ff af71 	blt.w	8024320 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802443e:	f11c 0801 	adds.w	r8, ip, #1
 8024442:	f53f af6d 	bmi.w	8024320 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024446:	45c6      	cmp	lr, r8
 8024448:	f6ff af6a 	blt.w	8024320 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802444c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 802444e:	9302      	str	r3, [sp, #8]
 8024450:	b200      	sxth	r0, r0
 8024452:	fa0f f38e 	sxth.w	r3, lr
 8024456:	e9cd 1405 	strd	r1, r4, [sp, #20]
 802445a:	e9cd c203 	strd	ip, r2, [sp, #12]
 802445e:	9301      	str	r3, [sp, #4]
 8024460:	9000      	str	r0, [sp, #0]
 8024462:	4633      	mov	r3, r6
 8024464:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8024466:	981d      	ldr	r0, [sp, #116]	; 0x74
 8024468:	4639      	mov	r1, r7
 802446a:	f7ff fc62 	bl	8023d32 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 802446e:	e757      	b.n	8024320 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024470:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024472:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8024474:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024478:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802447a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802447e:	1427      	asrs	r7, r4, #16
 8024480:	142b      	asrs	r3, r5, #16
 8024482:	fb01 7303 	mla	r3, r1, r3, r7
 8024486:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024488:	18e7      	adds	r7, r4, r3
 802448a:	5ce3      	ldrb	r3, [r4, r3]
 802448c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024490:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8024494:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024498:	2a00      	cmp	r2, #0
 802449a:	f000 8137 	beq.w	802470c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802449e:	f897 e001 	ldrb.w	lr, [r7, #1]
 80244a2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80244a6:	9410      	str	r4, [sp, #64]	; 0x40
 80244a8:	0e24      	lsrs	r4, r4, #24
 80244aa:	9417      	str	r4, [sp, #92]	; 0x5c
 80244ac:	b170      	cbz	r0, 80244cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80244ae:	eb07 0e01 	add.w	lr, r7, r1
 80244b2:	5c79      	ldrb	r1, [r7, r1]
 80244b4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80244b8:	910b      	str	r1, [sp, #44]	; 0x2c
 80244ba:	0e09      	lsrs	r1, r1, #24
 80244bc:	9114      	str	r1, [sp, #80]	; 0x50
 80244be:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80244c2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80244c6:	9111      	str	r1, [sp, #68]	; 0x44
 80244c8:	0e09      	lsrs	r1, r1, #24
 80244ca:	9118      	str	r1, [sp, #96]	; 0x60
 80244cc:	b292      	uxth	r2, r2
 80244ce:	b280      	uxth	r0, r0
 80244d0:	fb02 f800 	mul.w	r8, r2, r0
 80244d4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80244d8:	0112      	lsls	r2, r2, #4
 80244da:	eba2 0e08 	sub.w	lr, r2, r8
 80244de:	b280      	uxth	r0, r0
 80244e0:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80244e4:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80244e6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80244e8:	fa1f fe8e 	uxth.w	lr, lr
 80244ec:	1a12      	subs	r2, r2, r0
 80244ee:	b292      	uxth	r2, r2
 80244f0:	fb0e f101 	mul.w	r1, lr, r1
 80244f4:	fb02 110c 	mla	r1, r2, ip, r1
 80244f8:	fb00 1104 	mla	r1, r0, r4, r1
 80244fc:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80244fe:	fb08 1104 	mla	r1, r8, r4, r1
 8024502:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024506:	2900      	cmp	r1, #0
 8024508:	f000 80f5 	beq.w	80246f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802450c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024510:	d019      	beq.n	8024546 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8024512:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024516:	fb0c fa0a 	mul.w	sl, ip, sl
 802451a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802451e:	fb0c fc03 	mul.w	ip, ip, r3
 8024522:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024526:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802452a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802452e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024532:	4453      	add	r3, sl
 8024534:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024538:	0a1b      	lsrs	r3, r3, #8
 802453a:	0a3f      	lsrs	r7, r7, #8
 802453c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024540:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024544:	433b      	orrs	r3, r7
 8024546:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024548:	2cff      	cmp	r4, #255	; 0xff
 802454a:	d020      	beq.n	802458e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 802454c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802454e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024552:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024554:	4367      	muls	r7, r4
 8024556:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024558:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802455c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802455e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024562:	fb04 fa0a 	mul.w	sl, r4, sl
 8024566:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802456a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802456e:	44bc      	add	ip, r7
 8024570:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024574:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024578:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802457c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024580:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024584:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024588:	ea4c 040a 	orr.w	r4, ip, sl
 802458c:	9410      	str	r4, [sp, #64]	; 0x40
 802458e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024590:	2cff      	cmp	r4, #255	; 0xff
 8024592:	d020      	beq.n	80245d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8024594:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024596:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802459a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802459c:	4367      	muls	r7, r4
 802459e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80245a0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80245a4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80245a6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80245aa:	fb04 fa0a 	mul.w	sl, r4, sl
 80245ae:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80245b2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80245b6:	44bc      	add	ip, r7
 80245b8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80245bc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80245c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80245c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80245c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80245cc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80245d0:	ea4c 040a 	orr.w	r4, ip, sl
 80245d4:	940b      	str	r4, [sp, #44]	; 0x2c
 80245d6:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80245d8:	2cff      	cmp	r4, #255	; 0xff
 80245da:	d020      	beq.n	802461e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80245dc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80245de:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80245e2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80245e4:	4367      	muls	r7, r4
 80245e6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80245e8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80245ec:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80245ee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80245f2:	fb04 fa0a 	mul.w	sl, r4, sl
 80245f6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80245fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80245fe:	44bc      	add	ip, r7
 8024600:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024604:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024608:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802460c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024610:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024614:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024618:	ea4c 040a 	orr.w	r4, ip, sl
 802461c:	9411      	str	r4, [sp, #68]	; 0x44
 802461e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024620:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024624:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024626:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802462a:	fb0e f707 	mul.w	r7, lr, r7
 802462e:	fb02 770c 	mla	r7, r2, ip, r7
 8024632:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024636:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024638:	fb00 770c 	mla	r7, r0, ip, r7
 802463c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024640:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024642:	fb08 770c 	mla	r7, r8, ip, r7
 8024646:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802464a:	fb0e fe0c 	mul.w	lr, lr, ip
 802464e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024652:	fb02 e303 	mla	r3, r2, r3, lr
 8024656:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024658:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802465a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802465e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024660:	fb00 330a 	mla	r3, r0, sl, r3
 8024664:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8024668:	fb08 3c0c 	mla	ip, r8, ip, r3
 802466c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802466e:	f8b9 0000 	ldrh.w	r0, [r9]
 8024672:	434b      	muls	r3, r1
 8024674:	0a3f      	lsrs	r7, r7, #8
 8024676:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802467a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802467e:	1c59      	adds	r1, r3, #1
 8024680:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024684:	ea47 070c 	orr.w	r7, r7, ip
 8024688:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802468c:	1202      	asrs	r2, r0, #8
 802468e:	0c3b      	lsrs	r3, r7, #16
 8024690:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8024694:	b2c9      	uxtb	r1, r1
 8024696:	fb13 f304 	smulbb	r3, r3, r4
 802469a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802469e:	fb02 3201 	mla	r2, r2, r1, r3
 80246a2:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80246a6:	10c3      	asrs	r3, r0, #3
 80246a8:	b2ff      	uxtb	r7, r7
 80246aa:	00c0      	lsls	r0, r0, #3
 80246ac:	b292      	uxth	r2, r2
 80246ae:	fb1c fc04 	smulbb	ip, ip, r4
 80246b2:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80246b6:	b2c0      	uxtb	r0, r0
 80246b8:	fb17 f704 	smulbb	r7, r7, r4
 80246bc:	fb03 c301 	mla	r3, r3, r1, ip
 80246c0:	fb00 7001 	mla	r0, r0, r1, r7
 80246c4:	f102 0c01 	add.w	ip, r2, #1
 80246c8:	b280      	uxth	r0, r0
 80246ca:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80246ce:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80246d2:	1c42      	adds	r2, r0, #1
 80246d4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80246d8:	b29b      	uxth	r3, r3
 80246da:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80246de:	ea42 020c 	orr.w	r2, r2, ip
 80246e2:	f103 0c01 	add.w	ip, r3, #1
 80246e6:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80246ea:	095b      	lsrs	r3, r3, #5
 80246ec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80246f0:	431a      	orrs	r2, r3
 80246f2:	f8a9 2000 	strh.w	r2, [r9]
 80246f6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80246f8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80246fa:	441a      	add	r2, r3
 80246fc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80246fe:	9229      	str	r2, [sp, #164]	; 0xa4
 8024700:	f109 0902 	add.w	r9, r9, #2
 8024704:	441d      	add	r5, r3
 8024706:	f10b 3bff 	add.w	fp, fp, #4294967295
 802470a:	e63d      	b.n	8024388 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802470c:	2800      	cmp	r0, #0
 802470e:	f43f aedd 	beq.w	80244cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8024712:	5c79      	ldrb	r1, [r7, r1]
 8024714:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024718:	910b      	str	r1, [sp, #44]	; 0x2c
 802471a:	0e09      	lsrs	r1, r1, #24
 802471c:	9114      	str	r1, [sp, #80]	; 0x50
 802471e:	e6d5      	b.n	80244cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8024720:	b01f      	add	sp, #124	; 0x7c
 8024722:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024726 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8024726:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802472a:	b089      	sub	sp, #36	; 0x24
 802472c:	9101      	str	r1, [sp, #4]
 802472e:	9801      	ldr	r0, [sp, #4]
 8024730:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8024734:	8800      	ldrh	r0, [r0, #0]
 8024736:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 802473a:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 802473e:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8024742:	1206      	asrs	r6, r0, #8
 8024744:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8024748:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 802474c:	9602      	str	r6, [sp, #8]
 802474e:	10c6      	asrs	r6, r0, #3
 8024750:	00c0      	lsls	r0, r0, #3
 8024752:	b2c0      	uxtb	r0, r0
 8024754:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8024758:	9004      	str	r0, [sp, #16]
 802475a:	2f00      	cmp	r7, #0
 802475c:	fb07 100c 	mla	r0, r7, ip, r1
 8024760:	9603      	str	r6, [sp, #12]
 8024762:	eb02 0e00 	add.w	lr, r2, r0
 8024766:	f2c0 810a 	blt.w	802497e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 802476a:	45b8      	cmp	r8, r7
 802476c:	f340 8107 	ble.w	802497e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8024770:	2900      	cmp	r1, #0
 8024772:	f2c0 8102 	blt.w	802497a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8024776:	458c      	cmp	ip, r1
 8024778:	f340 80ff 	ble.w	802497a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802477c:	5c12      	ldrb	r2, [r2, r0]
 802477e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8024782:	1c4a      	adds	r2, r1, #1
 8024784:	f100 80fe 	bmi.w	8024984 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8024788:	4594      	cmp	ip, r2
 802478a:	f340 80fb 	ble.w	8024984 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 802478e:	2d00      	cmp	r5, #0
 8024790:	f000 80fa 	beq.w	8024988 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8024794:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8024798:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 802479c:	3701      	adds	r7, #1
 802479e:	f100 80f7 	bmi.w	8024990 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80247a2:	45b8      	cmp	r8, r7
 80247a4:	f340 80f4 	ble.w	8024990 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80247a8:	2c00      	cmp	r4, #0
 80247aa:	f000 80f4 	beq.w	8024996 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80247ae:	2900      	cmp	r1, #0
 80247b0:	eb0e 020c 	add.w	r2, lr, ip
 80247b4:	f2c0 80ea 	blt.w	802498c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80247b8:	458c      	cmp	ip, r1
 80247ba:	f340 80e7 	ble.w	802498c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80247be:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80247c2:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80247c6:	3101      	adds	r1, #1
 80247c8:	f100 80e8 	bmi.w	802499c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80247cc:	458c      	cmp	ip, r1
 80247ce:	f340 80e5 	ble.w	802499c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80247d2:	2d00      	cmp	r5, #0
 80247d4:	f000 80e4 	beq.w	80249a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80247d8:	7852      	ldrb	r2, [r2, #1]
 80247da:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80247de:	0e0b      	lsrs	r3, r1, #24
 80247e0:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80247e4:	9300      	str	r3, [sp, #0]
 80247e6:	b2a4      	uxth	r4, r4
 80247e8:	b2ab      	uxth	r3, r5
 80247ea:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 80247ee:	fb03 f904 	mul.w	r9, r3, r4
 80247f2:	fb0a f505 	mul.w	r5, sl, r5
 80247f6:	011b      	lsls	r3, r3, #4
 80247f8:	eba3 0e09 	sub.w	lr, r3, r9
 80247fc:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8024800:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8024804:	0a28      	lsrs	r0, r5, #8
 8024806:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802480a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 802480e:	4405      	add	r5, r0
 8024810:	0a2d      	lsrs	r5, r5, #8
 8024812:	fb0a f303 	mul.w	r3, sl, r3
 8024816:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 802481a:	9005      	str	r0, [sp, #20]
 802481c:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8024820:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8024824:	0a1b      	lsrs	r3, r3, #8
 8024826:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 802482a:	9306      	str	r3, [sp, #24]
 802482c:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8024830:	fb0b f303 	mul.w	r3, fp, r3
 8024834:	0a1d      	lsrs	r5, r3, #8
 8024836:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 802483a:	ea4f 6817 	mov.w	r8, r7, lsr #24
 802483e:	fb0b f606 	mul.w	r6, fp, r6
 8024842:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8024846:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 802484a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802484e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024852:	fb08 f707 	mul.w	r7, r8, r7
 8024856:	441d      	add	r5, r3
 8024858:	f506 7380 	add.w	r3, r6, #256	; 0x100
 802485c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8024860:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8024864:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8024868:	fb08 fc0c 	mul.w	ip, r8, ip
 802486c:	0a1b      	lsrs	r3, r3, #8
 802486e:	9307      	str	r3, [sp, #28]
 8024870:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8024874:	0e0b      	lsrs	r3, r1, #24
 8024876:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 802487a:	435f      	muls	r7, r3
 802487c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024880:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8024884:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8024888:	4460      	add	r0, ip
 802488a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802488e:	b2a4      	uxth	r4, r4
 8024890:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024894:	0a2d      	lsrs	r5, r5, #8
 8024896:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802489a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802489e:	fa1f fe8e 	uxth.w	lr, lr
 80248a2:	4359      	muls	r1, r3
 80248a4:	1b12      	subs	r2, r2, r4
 80248a6:	9b05      	ldr	r3, [sp, #20]
 80248a8:	44bc      	add	ip, r7
 80248aa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80248ae:	b292      	uxth	r2, r2
 80248b0:	fb05 f50e 	mul.w	r5, r5, lr
 80248b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80248b8:	fb03 5502 	mla	r5, r3, r2, r5
 80248bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80248c0:	9b06      	ldr	r3, [sp, #24]
 80248c2:	f501 7780 	add.w	r7, r1, #256	; 0x100
 80248c6:	0a36      	lsrs	r6, r6, #8
 80248c8:	0a00      	lsrs	r0, r0, #8
 80248ca:	fb0c 5509 	mla	r5, ip, r9, r5
 80248ce:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80248d2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80248d6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80248da:	fb00 5504 	mla	r5, r0, r4, r5
 80248de:	fb0e f606 	mul.w	r6, lr, r6
 80248e2:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80248e6:	0a09      	lsrs	r1, r1, #8
 80248e8:	9b07      	ldr	r3, [sp, #28]
 80248ea:	fb02 6000 	mla	r0, r2, r0, r6
 80248ee:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80248f2:	fb09 0001 	mla	r0, r9, r1, r0
 80248f6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80248fa:	fb0e fe0b 	mul.w	lr, lr, fp
 80248fe:	fb04 0003 	mla	r0, r4, r3, r0
 8024902:	fb02 e20a 	mla	r2, r2, sl, lr
 8024906:	9b00      	ldr	r3, [sp, #0]
 8024908:	fb04 2408 	mla	r4, r4, r8, r2
 802490c:	fb09 4903 	mla	r9, r9, r3, r4
 8024910:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8024914:	9b02      	ldr	r3, [sp, #8]
 8024916:	9a04      	ldr	r2, [sp, #16]
 8024918:	fa5f f989 	uxtb.w	r9, r9
 802491c:	fb03 f109 	mul.w	r1, r3, r9
 8024920:	9b03      	ldr	r3, [sp, #12]
 8024922:	0a2d      	lsrs	r5, r5, #8
 8024924:	0a00      	lsrs	r0, r0, #8
 8024926:	fb03 f309 	mul.w	r3, r3, r9
 802492a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 802492e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024932:	4305      	orrs	r5, r0
 8024934:	fb02 f909 	mul.w	r9, r2, r9
 8024938:	1c58      	adds	r0, r3, #1
 802493a:	1c4a      	adds	r2, r1, #1
 802493c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024940:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024944:	0a2b      	lsrs	r3, r5, #8
 8024946:	0c2a      	lsrs	r2, r5, #16
 8024948:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802494c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8024950:	00db      	lsls	r3, r3, #3
 8024952:	0212      	lsls	r2, r2, #8
 8024954:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024958:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802495c:	4313      	orrs	r3, r2
 802495e:	f109 0201 	add.w	r2, r9, #1
 8024962:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8024966:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 802496a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 802496e:	431d      	orrs	r5, r3
 8024970:	9b01      	ldr	r3, [sp, #4]
 8024972:	801d      	strh	r5, [r3, #0]
 8024974:	b009      	add	sp, #36	; 0x24
 8024976:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802497a:	2000      	movs	r0, #0
 802497c:	e701      	b.n	8024782 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 802497e:	2600      	movs	r6, #0
 8024980:	4630      	mov	r0, r6
 8024982:	e70b      	b.n	802479c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024984:	2600      	movs	r6, #0
 8024986:	e709      	b.n	802479c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024988:	462e      	mov	r6, r5
 802498a:	e707      	b.n	802479c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 802498c:	2700      	movs	r7, #0
 802498e:	e71a      	b.n	80247c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8024990:	2100      	movs	r1, #0
 8024992:	460f      	mov	r7, r1
 8024994:	e723      	b.n	80247de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8024996:	4621      	mov	r1, r4
 8024998:	4627      	mov	r7, r4
 802499a:	e720      	b.n	80247de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802499c:	2100      	movs	r1, #0
 802499e:	e71e      	b.n	80247de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80249a0:	4629      	mov	r1, r5
 80249a2:	e71c      	b.n	80247de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

080249a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80249a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80249a8:	b09b      	sub	sp, #108	; 0x6c
 80249aa:	9218      	str	r2, [sp, #96]	; 0x60
 80249ac:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80249ae:	9116      	str	r1, [sp, #88]	; 0x58
 80249b0:	9307      	str	r3, [sp, #28]
 80249b2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80249b6:	9019      	str	r0, [sp, #100]	; 0x64
 80249b8:	6850      	ldr	r0, [r2, #4]
 80249ba:	6812      	ldr	r2, [r2, #0]
 80249bc:	9d26      	ldr	r5, [sp, #152]	; 0x98
 80249be:	fb00 1303 	mla	r3, r0, r3, r1
 80249c2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80249c6:	930a      	str	r3, [sp, #40]	; 0x28
 80249c8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80249ca:	681b      	ldr	r3, [r3, #0]
 80249cc:	930f      	str	r3, [sp, #60]	; 0x3c
 80249ce:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80249d0:	685e      	ldr	r6, [r3, #4]
 80249d2:	3604      	adds	r6, #4
 80249d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80249d6:	2b00      	cmp	r3, #0
 80249d8:	dc03      	bgt.n	80249e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80249da:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80249dc:	2b00      	cmp	r3, #0
 80249de:	f340 8373 	ble.w	80250c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80249e2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80249e4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80249e8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80249ec:	1e48      	subs	r0, r1, #1
 80249ee:	1e57      	subs	r7, r2, #1
 80249f0:	9b07      	ldr	r3, [sp, #28]
 80249f2:	2b00      	cmp	r3, #0
 80249f4:	f340 8190 	ble.w	8024d18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80249f8:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80249fa:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80249fe:	ea4f 4325 	mov.w	r3, r5, asr #16
 8024a02:	d406      	bmi.n	8024a12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024a04:	4584      	cmp	ip, r0
 8024a06:	da04      	bge.n	8024a12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024a08:	2b00      	cmp	r3, #0
 8024a0a:	db02      	blt.n	8024a12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024a0c:	42bb      	cmp	r3, r7
 8024a0e:	f2c0 8184 	blt.w	8024d1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8024a12:	f11c 0c01 	adds.w	ip, ip, #1
 8024a16:	f100 8172 	bmi.w	8024cfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024a1a:	4561      	cmp	r1, ip
 8024a1c:	f2c0 816f 	blt.w	8024cfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024a20:	3301      	adds	r3, #1
 8024a22:	f100 816c 	bmi.w	8024cfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024a26:	429a      	cmp	r2, r3
 8024a28:	f2c0 8169 	blt.w	8024cfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024a2c:	9b07      	ldr	r3, [sp, #28]
 8024a2e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024a30:	9317      	str	r3, [sp, #92]	; 0x5c
 8024a32:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024a34:	2b00      	cmp	r3, #0
 8024a36:	f340 818e 	ble.w	8024d56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8024a3a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024a3c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024a40:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024a42:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8024a46:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024a48:	141b      	asrs	r3, r3, #16
 8024a4a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8024a4e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8024a52:	f100 81d1 	bmi.w	8024df8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024a56:	f101 38ff 	add.w	r8, r1, #4294967295
 8024a5a:	4543      	cmp	r3, r8
 8024a5c:	f280 81cc 	bge.w	8024df8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024a60:	f1bc 0f00 	cmp.w	ip, #0
 8024a64:	f2c0 81c8 	blt.w	8024df8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024a68:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024a6c:	45c4      	cmp	ip, r8
 8024a6e:	f280 81c3 	bge.w	8024df8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024a72:	b209      	sxth	r1, r1
 8024a74:	fb0c 3301 	mla	r3, ip, r1, r3
 8024a78:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024a7a:	eb04 0803 	add.w	r8, r4, r3
 8024a7e:	5ce3      	ldrb	r3, [r4, r3]
 8024a80:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024a84:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8024a88:	2a00      	cmp	r2, #0
 8024a8a:	f000 81aa 	beq.w	8024de2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8024a8e:	f898 c001 	ldrb.w	ip, [r8, #1]
 8024a92:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8024a96:	940b      	str	r4, [sp, #44]	; 0x2c
 8024a98:	0e24      	lsrs	r4, r4, #24
 8024a9a:	9412      	str	r4, [sp, #72]	; 0x48
 8024a9c:	b178      	cbz	r0, 8024abe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024a9e:	eb08 0c01 	add.w	ip, r8, r1
 8024aa2:	f818 1001 	ldrb.w	r1, [r8, r1]
 8024aa6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024aaa:	9108      	str	r1, [sp, #32]
 8024aac:	0e09      	lsrs	r1, r1, #24
 8024aae:	9110      	str	r1, [sp, #64]	; 0x40
 8024ab0:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8024ab4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024ab8:	910c      	str	r1, [sp, #48]	; 0x30
 8024aba:	0e09      	lsrs	r1, r1, #24
 8024abc:	9113      	str	r1, [sp, #76]	; 0x4c
 8024abe:	b292      	uxth	r2, r2
 8024ac0:	b280      	uxth	r0, r0
 8024ac2:	fb02 f900 	mul.w	r9, r2, r0
 8024ac6:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024aca:	0112      	lsls	r2, r2, #4
 8024acc:	eba2 0809 	sub.w	r8, r2, r9
 8024ad0:	b280      	uxth	r0, r0
 8024ad2:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024ad6:	9912      	ldr	r1, [sp, #72]	; 0x48
 8024ad8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024ada:	fa1f f888 	uxth.w	r8, r8
 8024ade:	1a12      	subs	r2, r2, r0
 8024ae0:	b292      	uxth	r2, r2
 8024ae2:	fb08 f101 	mul.w	r1, r8, r1
 8024ae6:	fb02 110e 	mla	r1, r2, lr, r1
 8024aea:	fb00 1104 	mla	r1, r0, r4, r1
 8024aee:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024af0:	fb09 1104 	mla	r1, r9, r4, r1
 8024af4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024af8:	2900      	cmp	r1, #0
 8024afa:	f000 80f5 	beq.w	8024ce8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024afe:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024b02:	d01b      	beq.n	8024b3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8024b04:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024b08:	fb0e fa0a 	mul.w	sl, lr, sl
 8024b0c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024b10:	fb0e fe03 	mul.w	lr, lr, r3
 8024b14:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024b18:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024b1c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024b20:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024b24:	4453      	add	r3, sl
 8024b26:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024b2a:	0a1b      	lsrs	r3, r3, #8
 8024b2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b30:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024b34:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024b38:	ea43 030c 	orr.w	r3, r3, ip
 8024b3c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024b3e:	2cff      	cmp	r4, #255	; 0xff
 8024b40:	d021      	beq.n	8024b86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8024b42:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024b44:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024b48:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024b4a:	fb04 fb0b 	mul.w	fp, r4, fp
 8024b4e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024b50:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024b54:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024b56:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024b5a:	fb04 fa0a 	mul.w	sl, r4, sl
 8024b5e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024b62:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024b66:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024b6a:	44de      	add	lr, fp
 8024b6c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024b70:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024b74:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b78:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024b7c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024b80:	ea4e 040a 	orr.w	r4, lr, sl
 8024b84:	940b      	str	r4, [sp, #44]	; 0x2c
 8024b86:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024b88:	2cff      	cmp	r4, #255	; 0xff
 8024b8a:	d021      	beq.n	8024bd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8024b8c:	9c08      	ldr	r4, [sp, #32]
 8024b8e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024b92:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024b94:	fb04 fb0b 	mul.w	fp, r4, fp
 8024b98:	9c08      	ldr	r4, [sp, #32]
 8024b9a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024b9e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024ba0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024ba4:	fb04 fa0a 	mul.w	sl, r4, sl
 8024ba8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024bac:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024bb0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024bb4:	44de      	add	lr, fp
 8024bb6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024bba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024bbe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024bc2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024bc6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024bca:	ea4e 040a 	orr.w	r4, lr, sl
 8024bce:	9408      	str	r4, [sp, #32]
 8024bd0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024bd2:	2cff      	cmp	r4, #255	; 0xff
 8024bd4:	d021      	beq.n	8024c1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8024bd6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024bd8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024bdc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024bde:	fb04 fb0b 	mul.w	fp, r4, fp
 8024be2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024be4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024be8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024bea:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024bee:	fb04 fa0a 	mul.w	sl, r4, sl
 8024bf2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024bf6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024bfa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024bfe:	44de      	add	lr, fp
 8024c00:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024c04:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024c08:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024c0c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024c10:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024c14:	ea4e 040a 	orr.w	r4, lr, sl
 8024c18:	940c      	str	r4, [sp, #48]	; 0x30
 8024c1a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024c1c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024c20:	9c08      	ldr	r4, [sp, #32]
 8024c22:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8024c26:	fb08 fc0c 	mul.w	ip, r8, ip
 8024c2a:	fb02 cc0e 	mla	ip, r2, lr, ip
 8024c2e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024c32:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024c34:	fb00 cc0e 	mla	ip, r0, lr, ip
 8024c38:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024c3c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024c3e:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024c42:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8024c46:	fb08 f80e 	mul.w	r8, r8, lr
 8024c4a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024c4e:	fb02 8303 	mla	r3, r2, r3, r8
 8024c52:	9a08      	ldr	r2, [sp, #32]
 8024c54:	f8b7 8000 	ldrh.w	r8, [r7]
 8024c58:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024c5c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024c5e:	fb00 330a 	mla	r3, r0, sl, r3
 8024c62:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8024c66:	fb09 3900 	mla	r9, r9, r0, r3
 8024c6a:	43c9      	mvns	r1, r1
 8024c6c:	ea4f 2228 	mov.w	r2, r8, asr #8
 8024c70:	fa5f fe81 	uxtb.w	lr, r1
 8024c74:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024c78:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024c7c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024c80:	fb02 f20e 	mul.w	r2, r2, lr
 8024c84:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024c88:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024c8c:	ea4c 0c09 	orr.w	ip, ip, r9
 8024c90:	1c53      	adds	r3, r2, #1
 8024c92:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8024c96:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8024c9a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8024c9e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024ca2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024ca6:	4a63      	ldr	r2, [pc, #396]	; (8024e34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8024ca8:	fb00 f00e 	mul.w	r0, r0, lr
 8024cac:	b2db      	uxtb	r3, r3
 8024cae:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8024cb2:	1c43      	adds	r3, r0, #1
 8024cb4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024cb8:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8024cbc:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8024cc0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024cc4:	b2c9      	uxtb	r1, r1
 8024cc6:	00db      	lsls	r3, r3, #3
 8024cc8:	fb01 f10e 	mul.w	r1, r1, lr
 8024ccc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024cd0:	4313      	orrs	r3, r2
 8024cd2:	1c4a      	adds	r2, r1, #1
 8024cd4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024cd8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8024cdc:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8024ce0:	ea4c 0c03 	orr.w	ip, ip, r3
 8024ce4:	f8a7 c000 	strh.w	ip, [r7]
 8024ce8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024cea:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024cec:	441a      	add	r2, r3
 8024cee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024cf0:	9225      	str	r2, [sp, #148]	; 0x94
 8024cf2:	441d      	add	r5, r3
 8024cf4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024cf6:	3b01      	subs	r3, #1
 8024cf8:	3702      	adds	r7, #2
 8024cfa:	9317      	str	r3, [sp, #92]	; 0x5c
 8024cfc:	e699      	b.n	8024a32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024cfe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024d00:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024d02:	441c      	add	r4, r3
 8024d04:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024d06:	9425      	str	r4, [sp, #148]	; 0x94
 8024d08:	441d      	add	r5, r3
 8024d0a:	9b07      	ldr	r3, [sp, #28]
 8024d0c:	3b01      	subs	r3, #1
 8024d0e:	9307      	str	r3, [sp, #28]
 8024d10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024d12:	3302      	adds	r3, #2
 8024d14:	930a      	str	r3, [sp, #40]	; 0x28
 8024d16:	e66b      	b.n	80249f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8024d18:	d024      	beq.n	8024d64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8024d1a:	9b07      	ldr	r3, [sp, #28]
 8024d1c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8024d1e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024d20:	3b01      	subs	r3, #1
 8024d22:	fb00 4003 	mla	r0, r0, r3, r4
 8024d26:	1400      	asrs	r0, r0, #16
 8024d28:	f53f ae80 	bmi.w	8024a2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024d2c:	3901      	subs	r1, #1
 8024d2e:	4288      	cmp	r0, r1
 8024d30:	f6bf ae7c 	bge.w	8024a2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024d34:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024d36:	fb01 5303 	mla	r3, r1, r3, r5
 8024d3a:	141b      	asrs	r3, r3, #16
 8024d3c:	f53f ae76 	bmi.w	8024a2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024d40:	3a01      	subs	r2, #1
 8024d42:	4293      	cmp	r3, r2
 8024d44:	f6bf ae72 	bge.w	8024a2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024d48:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024d4c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8024d50:	f1bb 0f00 	cmp.w	fp, #0
 8024d54:	dc70      	bgt.n	8024e38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8024d56:	9b07      	ldr	r3, [sp, #28]
 8024d58:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024d5c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024d5e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024d62:	930a      	str	r3, [sp, #40]	; 0x28
 8024d64:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024d66:	2b00      	cmp	r3, #0
 8024d68:	f340 81ae 	ble.w	80250c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8024d6c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024d70:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024d74:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024d78:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024d7a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024d7e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024d82:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024d86:	eef0 6a62 	vmov.f32	s13, s5
 8024d8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024d8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024d92:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024d96:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8024d9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024d9e:	eef0 6a43 	vmov.f32	s13, s6
 8024da2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024da6:	ee12 2a90 	vmov	r2, s5
 8024daa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024dae:	fb92 f3f3 	sdiv	r3, r2, r3
 8024db2:	ee13 2a10 	vmov	r2, s6
 8024db6:	9327      	str	r3, [sp, #156]	; 0x9c
 8024db8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024dba:	fb92 f3f3 	sdiv	r3, r2, r3
 8024dbe:	9328      	str	r3, [sp, #160]	; 0xa0
 8024dc0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024dc2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024dc4:	3b01      	subs	r3, #1
 8024dc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024dca:	9316      	str	r3, [sp, #88]	; 0x58
 8024dcc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024dce:	bf08      	it	eq
 8024dd0:	4613      	moveq	r3, r2
 8024dd2:	ee16 5a90 	vmov	r5, s13
 8024dd6:	9307      	str	r3, [sp, #28]
 8024dd8:	eeb0 3a67 	vmov.f32	s6, s15
 8024ddc:	eef0 2a47 	vmov.f32	s5, s14
 8024de0:	e5f8      	b.n	80249d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8024de2:	2800      	cmp	r0, #0
 8024de4:	f43f ae6b 	beq.w	8024abe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024de8:	f818 1001 	ldrb.w	r1, [r8, r1]
 8024dec:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024df0:	9108      	str	r1, [sp, #32]
 8024df2:	0e09      	lsrs	r1, r1, #24
 8024df4:	9110      	str	r1, [sp, #64]	; 0x40
 8024df6:	e662      	b.n	8024abe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024df8:	f113 0801 	adds.w	r8, r3, #1
 8024dfc:	f53f af74 	bmi.w	8024ce8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024e00:	4541      	cmp	r1, r8
 8024e02:	f6ff af71 	blt.w	8024ce8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024e06:	f11c 0801 	adds.w	r8, ip, #1
 8024e0a:	f53f af6d 	bmi.w	8024ce8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024e0e:	45c6      	cmp	lr, r8
 8024e10:	f6ff af6a 	blt.w	8024ce8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024e14:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8024e18:	b209      	sxth	r1, r1
 8024e1a:	fa0f f38e 	sxth.w	r3, lr
 8024e1e:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8024e22:	9301      	str	r3, [sp, #4]
 8024e24:	9100      	str	r1, [sp, #0]
 8024e26:	4633      	mov	r3, r6
 8024e28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024e2a:	9819      	ldr	r0, [sp, #100]	; 0x64
 8024e2c:	4639      	mov	r1, r7
 8024e2e:	f7ff fc7a 	bl	8024726 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8024e32:	e759      	b.n	8024ce8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024e34:	fffff800 	.word	0xfffff800
 8024e38:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024e3a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024e3c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024e40:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024e42:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024e46:	1427      	asrs	r7, r4, #16
 8024e48:	142b      	asrs	r3, r5, #16
 8024e4a:	fb01 7303 	mla	r3, r1, r3, r7
 8024e4e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024e50:	18e7      	adds	r7, r4, r3
 8024e52:	5ce3      	ldrb	r3, [r4, r3]
 8024e54:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024e58:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8024e5c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024e60:	2a00      	cmp	r2, #0
 8024e62:	f000 8127 	beq.w	80250b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8024e66:	f897 e001 	ldrb.w	lr, [r7, #1]
 8024e6a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8024e6e:	940d      	str	r4, [sp, #52]	; 0x34
 8024e70:	0e24      	lsrs	r4, r4, #24
 8024e72:	9414      	str	r4, [sp, #80]	; 0x50
 8024e74:	b170      	cbz	r0, 8024e94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024e76:	eb07 0e01 	add.w	lr, r7, r1
 8024e7a:	5c79      	ldrb	r1, [r7, r1]
 8024e7c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024e80:	9109      	str	r1, [sp, #36]	; 0x24
 8024e82:	0e09      	lsrs	r1, r1, #24
 8024e84:	9111      	str	r1, [sp, #68]	; 0x44
 8024e86:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8024e8a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024e8e:	910e      	str	r1, [sp, #56]	; 0x38
 8024e90:	0e09      	lsrs	r1, r1, #24
 8024e92:	9115      	str	r1, [sp, #84]	; 0x54
 8024e94:	b292      	uxth	r2, r2
 8024e96:	b280      	uxth	r0, r0
 8024e98:	fb02 f800 	mul.w	r8, r2, r0
 8024e9c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8024ea0:	0112      	lsls	r2, r2, #4
 8024ea2:	eba2 0e08 	sub.w	lr, r2, r8
 8024ea6:	b280      	uxth	r0, r0
 8024ea8:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8024eac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024eae:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024eb0:	fa1f fe8e 	uxth.w	lr, lr
 8024eb4:	1a09      	subs	r1, r1, r0
 8024eb6:	b289      	uxth	r1, r1
 8024eb8:	fb0e f202 	mul.w	r2, lr, r2
 8024ebc:	fb01 220c 	mla	r2, r1, ip, r2
 8024ec0:	fb00 2204 	mla	r2, r0, r4, r2
 8024ec4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024ec6:	fb08 2204 	mla	r2, r8, r4, r2
 8024eca:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8024ece:	2a00      	cmp	r2, #0
 8024ed0:	f000 80e5 	beq.w	802509e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8024ed4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024ed8:	d019      	beq.n	8024f0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8024eda:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024ede:	fb0c fa0a 	mul.w	sl, ip, sl
 8024ee2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024ee6:	fb0c fc03 	mul.w	ip, ip, r3
 8024eea:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024eee:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024ef2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024ef6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024efa:	4453      	add	r3, sl
 8024efc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024f00:	0a1b      	lsrs	r3, r3, #8
 8024f02:	0a3f      	lsrs	r7, r7, #8
 8024f04:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024f08:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024f0c:	433b      	orrs	r3, r7
 8024f0e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024f10:	2cff      	cmp	r4, #255	; 0xff
 8024f12:	d020      	beq.n	8024f56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8024f14:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024f16:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024f1a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024f1c:	4367      	muls	r7, r4
 8024f1e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024f20:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024f24:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024f26:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024f2a:	fb04 fa0a 	mul.w	sl, r4, sl
 8024f2e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024f32:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024f36:	44bc      	add	ip, r7
 8024f38:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024f3c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024f40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024f44:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024f48:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024f4c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024f50:	ea4c 040a 	orr.w	r4, ip, sl
 8024f54:	940d      	str	r4, [sp, #52]	; 0x34
 8024f56:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024f58:	2cff      	cmp	r4, #255	; 0xff
 8024f5a:	d020      	beq.n	8024f9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8024f5c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024f5e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024f62:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024f64:	4367      	muls	r7, r4
 8024f66:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024f68:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024f6c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024f6e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024f72:	fb04 fa0a 	mul.w	sl, r4, sl
 8024f76:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024f7a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024f7e:	44bc      	add	ip, r7
 8024f80:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024f84:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024f88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024f8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024f90:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024f94:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024f98:	ea4c 040a 	orr.w	r4, ip, sl
 8024f9c:	9409      	str	r4, [sp, #36]	; 0x24
 8024f9e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024fa0:	2cff      	cmp	r4, #255	; 0xff
 8024fa2:	d020      	beq.n	8024fe6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8024fa4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024fa6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024faa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024fac:	4367      	muls	r7, r4
 8024fae:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024fb0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024fb4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024fb6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024fba:	fb04 fa0a 	mul.w	sl, r4, sl
 8024fbe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024fc2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024fc6:	44bc      	add	ip, r7
 8024fc8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024fcc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024fd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024fd4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024fd8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024fdc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024fe0:	ea4c 040a 	orr.w	r4, ip, sl
 8024fe4:	940e      	str	r4, [sp, #56]	; 0x38
 8024fe6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024fe8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024fec:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024fee:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024ff2:	fb0e f707 	mul.w	r7, lr, r7
 8024ff6:	fb01 770c 	mla	r7, r1, ip, r7
 8024ffa:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024ffe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025000:	fb00 770c 	mla	r7, r0, ip, r7
 8025004:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8025008:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802500a:	fb08 770c 	mla	r7, r8, ip, r7
 802500e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8025012:	fb0e fe0c 	mul.w	lr, lr, ip
 8025016:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802501a:	fb01 e303 	mla	r3, r1, r3, lr
 802501e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025020:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8025024:	990e      	ldr	r1, [sp, #56]	; 0x38
 8025026:	fb00 330a 	mla	r3, r0, sl, r3
 802502a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802502e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8025032:	f8b9 3000 	ldrh.w	r3, [r9]
 8025036:	43d2      	mvns	r2, r2
 8025038:	1218      	asrs	r0, r3, #8
 802503a:	b2d2      	uxtb	r2, r2
 802503c:	10d9      	asrs	r1, r3, #3
 802503e:	0a3f      	lsrs	r7, r7, #8
 8025040:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025044:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025048:	00db      	lsls	r3, r3, #3
 802504a:	4350      	muls	r0, r2
 802504c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025050:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025054:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025058:	b2db      	uxtb	r3, r3
 802505a:	ea47 070c 	orr.w	r7, r7, ip
 802505e:	4351      	muls	r1, r2
 8025060:	4353      	muls	r3, r2
 8025062:	1c42      	adds	r2, r0, #1
 8025064:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025068:	0c3a      	lsrs	r2, r7, #16
 802506a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802506e:	4a18      	ldr	r2, [pc, #96]	; (80250d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8025070:	b2c0      	uxtb	r0, r0
 8025072:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8025076:	1c4a      	adds	r2, r1, #1
 8025078:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802507c:	0a3a      	lsrs	r2, r7, #8
 802507e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025082:	00c9      	lsls	r1, r1, #3
 8025084:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025088:	4301      	orrs	r1, r0
 802508a:	1c58      	adds	r0, r3, #1
 802508c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025090:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8025094:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8025098:	4308      	orrs	r0, r1
 802509a:	f8a9 0000 	strh.w	r0, [r9]
 802509e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80250a0:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80250a2:	441a      	add	r2, r3
 80250a4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80250a6:	9225      	str	r2, [sp, #148]	; 0x94
 80250a8:	f109 0902 	add.w	r9, r9, #2
 80250ac:	441d      	add	r5, r3
 80250ae:	f10b 3bff 	add.w	fp, fp, #4294967295
 80250b2:	e64d      	b.n	8024d50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80250b4:	2800      	cmp	r0, #0
 80250b6:	f43f aeed 	beq.w	8024e94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80250ba:	5c79      	ldrb	r1, [r7, r1]
 80250bc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80250c0:	9109      	str	r1, [sp, #36]	; 0x24
 80250c2:	0e09      	lsrs	r1, r1, #24
 80250c4:	9111      	str	r1, [sp, #68]	; 0x44
 80250c6:	e6e5      	b.n	8024e94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80250c8:	b01b      	add	sp, #108	; 0x6c
 80250ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80250ce:	bf00      	nop
 80250d0:	fffff800 	.word	0xfffff800

080250d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80250d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80250d8:	b085      	sub	sp, #20
 80250da:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80250de:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80250e2:	9103      	str	r1, [sp, #12]
 80250e4:	fb00 7406 	mla	r4, r0, r6, r7
 80250e8:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 80250ec:	2800      	cmp	r0, #0
 80250ee:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80250f2:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80250f6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80250fa:	9501      	str	r5, [sp, #4]
 80250fc:	eb03 0904 	add.w	r9, r3, r4
 8025100:	f2c0 8150 	blt.w	80253a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8025104:	4583      	cmp	fp, r0
 8025106:	f340 814d 	ble.w	80253a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802510a:	2f00      	cmp	r7, #0
 802510c:	f2c0 8146 	blt.w	802539c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8025110:	42be      	cmp	r6, r7
 8025112:	f340 8143 	ble.w	802539c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8025116:	f813 c004 	ldrb.w	ip, [r3, r4]
 802511a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 802511e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025122:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8025126:	4355      	muls	r5, r2
 8025128:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802512c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8025130:	fb0c f203 	mul.w	r2, ip, r3
 8025134:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8025138:	f605 0501 	addw	r5, r5, #2049	; 0x801
 802513c:	441d      	add	r5, r3
 802513e:	f102 0320 	add.w	r3, r2, #32
 8025142:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025146:	0a1b      	lsrs	r3, r3, #8
 8025148:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 802514c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025150:	431c      	orrs	r4, r3
 8025152:	1c7b      	adds	r3, r7, #1
 8025154:	f100 812b 	bmi.w	80253ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8025158:	429e      	cmp	r6, r3
 802515a:	f340 8128 	ble.w	80253ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 802515e:	2900      	cmp	r1, #0
 8025160:	f000 8128 	beq.w	80253b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8025164:	9a01      	ldr	r2, [sp, #4]
 8025166:	f899 3001 	ldrb.w	r3, [r9, #1]
 802516a:	8855      	ldrh	r5, [r2, #2]
 802516c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8025170:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8025174:	fb08 f802 	mul.w	r8, r8, r2
 8025178:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802517c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8025180:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8025184:	435d      	muls	r5, r3
 8025186:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802518a:	44d0      	add	r8, sl
 802518c:	f105 0a20 	add.w	sl, r5, #32
 8025190:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8025194:	0a2d      	lsrs	r5, r5, #8
 8025196:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802519a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802519e:	432a      	orrs	r2, r5
 80251a0:	3001      	adds	r0, #1
 80251a2:	f100 810d 	bmi.w	80253c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80251a6:	4583      	cmp	fp, r0
 80251a8:	f340 810a 	ble.w	80253c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80251ac:	f1be 0f00 	cmp.w	lr, #0
 80251b0:	f000 810b 	beq.w	80253ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80251b4:	2f00      	cmp	r7, #0
 80251b6:	f2c0 8100 	blt.w	80253ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80251ba:	42be      	cmp	r6, r7
 80251bc:	f340 80fd 	ble.w	80253ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80251c0:	9801      	ldr	r0, [sp, #4]
 80251c2:	f819 5006 	ldrb.w	r5, [r9, r6]
 80251c6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80251ca:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80251ce:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80251d2:	fb0a fa00 	mul.w	sl, sl, r0
 80251d6:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80251da:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80251de:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80251e2:	fb05 f808 	mul.w	r8, r5, r8
 80251e6:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80251ea:	4482      	add	sl, r0
 80251ec:	f108 0020 	add.w	r0, r8, #32
 80251f0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80251f4:	0a00      	lsrs	r0, r0, #8
 80251f6:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80251fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80251fe:	ea4b 0b00 	orr.w	fp, fp, r0
 8025202:	3701      	adds	r7, #1
 8025204:	f100 80e6 	bmi.w	80253d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8025208:	42be      	cmp	r6, r7
 802520a:	f340 80e3 	ble.w	80253d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802520e:	2900      	cmp	r1, #0
 8025210:	f000 80e3 	beq.w	80253da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8025214:	3601      	adds	r6, #1
 8025216:	9801      	ldr	r0, [sp, #4]
 8025218:	f819 7006 	ldrb.w	r7, [r9, r6]
 802521c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8025220:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8025224:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8025228:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802522c:	fb09 f906 	mul.w	r9, r9, r6
 8025230:	fb07 f800 	mul.w	r8, r7, r0
 8025234:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8025238:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 802523c:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8025240:	44d1      	add	r9, sl
 8025242:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8025246:	f108 0020 	add.w	r0, r8, #32
 802524a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802524e:	0a00      	lsrs	r0, r0, #8
 8025250:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025254:	4330      	orrs	r0, r6
 8025256:	b28e      	uxth	r6, r1
 8025258:	fa1f f98e 	uxth.w	r9, lr
 802525c:	fb06 f809 	mul.w	r8, r6, r9
 8025260:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8025264:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8025268:	0136      	lsls	r6, r6, #4
 802526a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802526e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8025272:	9601      	str	r6, [sp, #4]
 8025274:	ea4a 0404 	orr.w	r4, sl, r4
 8025278:	fa1f f689 	uxth.w	r6, r9
 802527c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025280:	fb11 f90e 	smulbb	r9, r1, lr
 8025284:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8025288:	9602      	str	r6, [sp, #8]
 802528a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802528e:	4626      	mov	r6, r4
 8025290:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025294:	f1ce 0410 	rsb	r4, lr, #16
 8025298:	1a64      	subs	r4, r4, r1
 802529a:	ea4a 0202 	orr.w	r2, sl, r2
 802529e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80252a2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80252a6:	434a      	muls	r2, r1
 80252a8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80252ac:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80252b0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80252b4:	fb04 2406 	mla	r4, r4, r6, r2
 80252b8:	ea4a 0000 	orr.w	r0, sl, r0
 80252bc:	fb09 4200 	mla	r2, r9, r0, r4
 80252c0:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80252c4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80252c8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80252cc:	ea44 0b0b 	orr.w	fp, r4, fp
 80252d0:	9c01      	ldr	r4, [sp, #4]
 80252d2:	9e02      	ldr	r6, [sp, #8]
 80252d4:	9903      	ldr	r1, [sp, #12]
 80252d6:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80252da:	1ba4      	subs	r4, r4, r6
 80252dc:	9e01      	ldr	r6, [sp, #4]
 80252de:	8808      	ldrh	r0, [r1, #0]
 80252e0:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80252e4:	eba6 0608 	sub.w	r6, r6, r8
 80252e8:	b2b6      	uxth	r6, r6
 80252ea:	b2a4      	uxth	r4, r4
 80252ec:	4373      	muls	r3, r6
 80252ee:	fb0c 3304 	mla	r3, ip, r4, r3
 80252f2:	9c02      	ldr	r4, [sp, #8]
 80252f4:	fb04 3505 	mla	r5, r4, r5, r3
 80252f8:	fb08 5707 	mla	r7, r8, r7, r5
 80252fc:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8025300:	b289      	uxth	r1, r1
 8025302:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8025306:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802530a:	434f      	muls	r7, r1
 802530c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025310:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8025314:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025318:	1c7b      	adds	r3, r7, #1
 802531a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802531e:	ea42 0e0e 	orr.w	lr, r2, lr
 8025322:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8025326:	fa1f f28e 	uxth.w	r2, lr
 802532a:	1203      	asrs	r3, r0, #8
 802532c:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8025330:	b2ff      	uxtb	r7, r7
 8025332:	1215      	asrs	r5, r2, #8
 8025334:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025338:	fb13 f307 	smulbb	r3, r3, r7
 802533c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025340:	fb05 3501 	mla	r5, r5, r1, r3
 8025344:	10c3      	asrs	r3, r0, #3
 8025346:	10d4      	asrs	r4, r2, #3
 8025348:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802534c:	fb13 f307 	smulbb	r3, r3, r7
 8025350:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8025354:	fb04 3401 	mla	r4, r4, r1, r3
 8025358:	00c3      	lsls	r3, r0, #3
 802535a:	00d2      	lsls	r2, r2, #3
 802535c:	b2db      	uxtb	r3, r3
 802535e:	fb13 f307 	smulbb	r3, r3, r7
 8025362:	b2d2      	uxtb	r2, r2
 8025364:	fb02 3101 	mla	r1, r2, r1, r3
 8025368:	b2ad      	uxth	r5, r5
 802536a:	b289      	uxth	r1, r1
 802536c:	b2a4      	uxth	r4, r4
 802536e:	1c6b      	adds	r3, r5, #1
 8025370:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025374:	1c62      	adds	r2, r4, #1
 8025376:	1c4b      	adds	r3, r1, #1
 8025378:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802537c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025380:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025384:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025388:	0964      	lsrs	r4, r4, #5
 802538a:	432b      	orrs	r3, r5
 802538c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025390:	9a03      	ldr	r2, [sp, #12]
 8025392:	4323      	orrs	r3, r4
 8025394:	8013      	strh	r3, [r2, #0]
 8025396:	b005      	add	sp, #20
 8025398:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802539c:	f04f 0c00 	mov.w	ip, #0
 80253a0:	4664      	mov	r4, ip
 80253a2:	e6d6      	b.n	8025152 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80253a4:	2300      	movs	r3, #0
 80253a6:	469c      	mov	ip, r3
 80253a8:	461a      	mov	r2, r3
 80253aa:	461c      	mov	r4, r3
 80253ac:	e6f8      	b.n	80251a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80253ae:	2300      	movs	r3, #0
 80253b0:	461a      	mov	r2, r3
 80253b2:	e6f5      	b.n	80251a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80253b4:	460b      	mov	r3, r1
 80253b6:	460a      	mov	r2, r1
 80253b8:	e6f2      	b.n	80251a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80253ba:	2500      	movs	r5, #0
 80253bc:	46ab      	mov	fp, r5
 80253be:	e720      	b.n	8025202 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80253c0:	2700      	movs	r7, #0
 80253c2:	463d      	mov	r5, r7
 80253c4:	4638      	mov	r0, r7
 80253c6:	46bb      	mov	fp, r7
 80253c8:	e745      	b.n	8025256 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80253ca:	4677      	mov	r7, lr
 80253cc:	4675      	mov	r5, lr
 80253ce:	4670      	mov	r0, lr
 80253d0:	46f3      	mov	fp, lr
 80253d2:	e740      	b.n	8025256 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80253d4:	2700      	movs	r7, #0
 80253d6:	4638      	mov	r0, r7
 80253d8:	e73d      	b.n	8025256 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80253da:	460f      	mov	r7, r1
 80253dc:	4608      	mov	r0, r1
 80253de:	e73a      	b.n	8025256 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080253e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80253e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80253e4:	b097      	sub	sp, #92	; 0x5c
 80253e6:	9214      	str	r2, [sp, #80]	; 0x50
 80253e8:	9308      	str	r3, [sp, #32]
 80253ea:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80253ec:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80253f0:	9312      	str	r3, [sp, #72]	; 0x48
 80253f2:	9111      	str	r1, [sp, #68]	; 0x44
 80253f4:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80253f8:	9015      	str	r0, [sp, #84]	; 0x54
 80253fa:	6850      	ldr	r0, [r2, #4]
 80253fc:	6812      	ldr	r2, [r2, #0]
 80253fe:	fb00 1303 	mla	r3, r0, r3, r1
 8025402:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025406:	9309      	str	r3, [sp, #36]	; 0x24
 8025408:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802540a:	681b      	ldr	r3, [r3, #0]
 802540c:	930b      	str	r3, [sp, #44]	; 0x2c
 802540e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025410:	685b      	ldr	r3, [r3, #4]
 8025412:	930c      	str	r3, [sp, #48]	; 0x30
 8025414:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8025418:	930a      	str	r3, [sp, #40]	; 0x28
 802541a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802541c:	2b00      	cmp	r3, #0
 802541e:	dc03      	bgt.n	8025428 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025420:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8025422:	2b00      	cmp	r3, #0
 8025424:	f340 83cb 	ble.w	8025bbe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8025428:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802542a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802542e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025432:	1e48      	subs	r0, r1, #1
 8025434:	1e55      	subs	r5, r2, #1
 8025436:	9b08      	ldr	r3, [sp, #32]
 8025438:	2b00      	cmp	r3, #0
 802543a:	f340 81a3 	ble.w	8025784 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 802543e:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8025440:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025442:	1436      	asrs	r6, r6, #16
 8025444:	ea4f 4323 	mov.w	r3, r3, asr #16
 8025448:	d406      	bmi.n	8025458 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802544a:	4286      	cmp	r6, r0
 802544c:	da04      	bge.n	8025458 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802544e:	2b00      	cmp	r3, #0
 8025450:	db02      	blt.n	8025458 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025452:	42ab      	cmp	r3, r5
 8025454:	f2c0 8197 	blt.w	8025786 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8025458:	3601      	adds	r6, #1
 802545a:	f100 8184 	bmi.w	8025766 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802545e:	42b1      	cmp	r1, r6
 8025460:	f2c0 8181 	blt.w	8025766 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025464:	3301      	adds	r3, #1
 8025466:	f100 817e 	bmi.w	8025766 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802546a:	429a      	cmp	r2, r3
 802546c:	f2c0 817b 	blt.w	8025766 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025470:	9b08      	ldr	r3, [sp, #32]
 8025472:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8025474:	9313      	str	r3, [sp, #76]	; 0x4c
 8025476:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802547a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802547c:	2b00      	cmp	r3, #0
 802547e:	f340 81a4 	ble.w	80257ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8025482:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025484:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8025486:	1418      	asrs	r0, r3, #16
 8025488:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802548a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802548e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025490:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8025494:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025496:	142d      	asrs	r5, r5, #16
 8025498:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 802549c:	f100 81f8 	bmi.w	8025890 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80254a0:	f102 3eff 	add.w	lr, r2, #4294967295
 80254a4:	4575      	cmp	r5, lr
 80254a6:	f280 81f3 	bge.w	8025890 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80254aa:	2800      	cmp	r0, #0
 80254ac:	f2c0 81f0 	blt.w	8025890 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80254b0:	f103 3eff 	add.w	lr, r3, #4294967295
 80254b4:	4570      	cmp	r0, lr
 80254b6:	f280 81eb 	bge.w	8025890 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80254ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80254bc:	b212      	sxth	r2, r2
 80254be:	fb00 5002 	mla	r0, r0, r2, r5
 80254c2:	fa1f fe81 	uxth.w	lr, r1
 80254c6:	eb03 0a00 	add.w	sl, r3, r0
 80254ca:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80254ce:	f813 9000 	ldrb.w	r9, [r3, r0]
 80254d2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80254d6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80254da:	b29b      	uxth	r3, r3
 80254dc:	f1bc 0f00 	cmp.w	ip, #0
 80254e0:	f000 81b9 	beq.w	8025856 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80254e4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80254e8:	940d      	str	r4, [sp, #52]	; 0x34
 80254ea:	eb0a 0b02 	add.w	fp, sl, r2
 80254ee:	fa1f fa8c 	uxth.w	sl, ip
 80254f2:	fb0a fe0e 	mul.w	lr, sl, lr
 80254f6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80254fa:	fa1f fa8a 	uxth.w	sl, sl
 80254fe:	eba5 050e 	sub.w	r5, r5, lr
 8025502:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8025506:	940e      	str	r4, [sp, #56]	; 0x38
 8025508:	eba3 030a 	sub.w	r3, r3, sl
 802550c:	b2ad      	uxth	r5, r5
 802550e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8025510:	b29b      	uxth	r3, r3
 8025512:	fb08 f505 	mul.w	r5, r8, r5
 8025516:	fb09 5303 	mla	r3, r9, r3, r5
 802551a:	fb0a 3304 	mla	r3, sl, r4, r3
 802551e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025520:	fb0e 3304 	mla	r3, lr, r4, r3
 8025524:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025528:	2b00      	cmp	r3, #0
 802552a:	f000 810f 	beq.w	802574c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802552e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025530:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025534:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8025538:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 802553c:	f000 8190 	beq.w	8025860 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8025540:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8025544:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025548:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802554c:	fb09 f000 	mul.w	r0, r9, r0
 8025550:	fb0a fe0e 	mul.w	lr, sl, lr
 8025554:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8025558:	f100 0b20 	add.w	fp, r0, #32
 802555c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025560:	44ce      	add	lr, r9
 8025562:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8025566:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802556a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802556e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8025572:	ea4e 0909 	orr.w	r9, lr, r9
 8025576:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802557a:	8868      	ldrh	r0, [r5, #2]
 802557c:	d019      	beq.n	80255b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 802557e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8025582:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025586:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802558a:	fb08 f800 	mul.w	r8, r8, r0
 802558e:	fb0a fe0e 	mul.w	lr, sl, lr
 8025592:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8025596:	f108 0b20 	add.w	fp, r8, #32
 802559a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802559e:	4486      	add	lr, r0
 80255a0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80255a4:	0a00      	lsrs	r0, r0, #8
 80255a6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80255aa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80255ae:	ea4e 0000 	orr.w	r0, lr, r0
 80255b2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80255b6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80255ba:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80255be:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80255c2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80255c6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80255ca:	ea4e 0909 	orr.w	r9, lr, r9
 80255ce:	ea4a 0000 	orr.w	r0, sl, r0
 80255d2:	f1bc 0f00 	cmp.w	ip, #0
 80255d6:	f000 8145 	beq.w	8025864 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80255da:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80255de:	3a01      	subs	r2, #1
 80255e0:	0052      	lsls	r2, r2, #1
 80255e2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80255e4:	3202      	adds	r2, #2
 80255e6:	2cff      	cmp	r4, #255	; 0xff
 80255e8:	eb05 0e02 	add.w	lr, r5, r2
 80255ec:	5aaa      	ldrh	r2, [r5, r2]
 80255ee:	d018      	beq.n	8025622 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80255f0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80255f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80255f8:	fb04 fa02 	mul.w	sl, r4, r2
 80255fc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025600:	fb08 f805 	mul.w	r8, r8, r5
 8025604:	f10a 0520 	add.w	r5, sl, #32
 8025608:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 802560c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8025610:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025614:	4442      	add	r2, r8
 8025616:	0a2d      	lsrs	r5, r5, #8
 8025618:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 802561c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025620:	432a      	orrs	r2, r5
 8025622:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025624:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8025628:	2cff      	cmp	r4, #255	; 0xff
 802562a:	d01a      	beq.n	8025662 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802562c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8025630:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025634:	fb04 fa05 	mul.w	sl, r4, r5
 8025638:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802563c:	fb08 f80e 	mul.w	r8, r8, lr
 8025640:	f10a 0e20 	add.w	lr, sl, #32
 8025644:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8025648:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802564c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025650:	4445      	add	r5, r8
 8025652:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025656:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802565a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802565e:	ea45 050e 	orr.w	r5, r5, lr
 8025662:	fb1c fe01 	smulbb	lr, ip, r1
 8025666:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802566a:	f1cc 0810 	rsb	r8, ip, #16
 802566e:	eba8 0801 	sub.w	r8, r8, r1
 8025672:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025676:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802567a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802567e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8025682:	4341      	muls	r1, r0
 8025684:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025688:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802568c:	ea4a 0202 	orr.w	r2, sl, r2
 8025690:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8025694:	fb09 1108 	mla	r1, r9, r8, r1
 8025698:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802569c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80256a0:	fb0c 1102 	mla	r1, ip, r2, r1
 80256a4:	ea4b 0505 	orr.w	r5, fp, r5
 80256a8:	fb0e 1e05 	mla	lr, lr, r5, r1
 80256ac:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80256b0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80256b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80256b8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80256bc:	ea42 0e0e 	orr.w	lr, r2, lr
 80256c0:	fa1f f28e 	uxth.w	r2, lr
 80256c4:	2bff      	cmp	r3, #255	; 0xff
 80256c6:	d103      	bne.n	80256d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80256c8:	9912      	ldr	r1, [sp, #72]	; 0x48
 80256ca:	29ff      	cmp	r1, #255	; 0xff
 80256cc:	f000 80de 	beq.w	802588c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80256d0:	990a      	ldr	r1, [sp, #40]	; 0x28
 80256d2:	8838      	ldrh	r0, [r7, #0]
 80256d4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80256d6:	434b      	muls	r3, r1
 80256d8:	f103 0c01 	add.w	ip, r3, #1
 80256dc:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80256e0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80256e4:	fa5f fc83 	uxtb.w	ip, r3
 80256e8:	1203      	asrs	r3, r0, #8
 80256ea:	1215      	asrs	r5, r2, #8
 80256ec:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80256f0:	fb13 f30c 	smulbb	r3, r3, ip
 80256f4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80256f8:	fb05 3501 	mla	r5, r5, r1, r3
 80256fc:	10c3      	asrs	r3, r0, #3
 80256fe:	10d1      	asrs	r1, r2, #3
 8025700:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025704:	fb13 f30c 	smulbb	r3, r3, ip
 8025708:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802570c:	fb01 3104 	mla	r1, r1, r4, r3
 8025710:	00c3      	lsls	r3, r0, #3
 8025712:	00d2      	lsls	r2, r2, #3
 8025714:	b2db      	uxtb	r3, r3
 8025716:	b2d2      	uxtb	r2, r2
 8025718:	fb13 f30c 	smulbb	r3, r3, ip
 802571c:	b2ad      	uxth	r5, r5
 802571e:	fb02 3304 	mla	r3, r2, r4, r3
 8025722:	b29a      	uxth	r2, r3
 8025724:	1c6b      	adds	r3, r5, #1
 8025726:	b289      	uxth	r1, r1
 8025728:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802572c:	1c53      	adds	r3, r2, #1
 802572e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025732:	1c4a      	adds	r2, r1, #1
 8025734:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025738:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802573c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025740:	0949      	lsrs	r1, r1, #5
 8025742:	432b      	orrs	r3, r5
 8025744:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025748:	430b      	orrs	r3, r1
 802574a:	803b      	strh	r3, [r7, #0]
 802574c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802574e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8025750:	4413      	add	r3, r2
 8025752:	9321      	str	r3, [sp, #132]	; 0x84
 8025754:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8025756:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025758:	441a      	add	r2, r3
 802575a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802575c:	9222      	str	r2, [sp, #136]	; 0x88
 802575e:	3b01      	subs	r3, #1
 8025760:	3702      	adds	r7, #2
 8025762:	9313      	str	r3, [sp, #76]	; 0x4c
 8025764:	e689      	b.n	802547a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8025766:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025768:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 802576a:	9c22      	ldr	r4, [sp, #136]	; 0x88
 802576c:	4433      	add	r3, r6
 802576e:	9321      	str	r3, [sp, #132]	; 0x84
 8025770:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025772:	441c      	add	r4, r3
 8025774:	9b08      	ldr	r3, [sp, #32]
 8025776:	9422      	str	r4, [sp, #136]	; 0x88
 8025778:	3b01      	subs	r3, #1
 802577a:	9308      	str	r3, [sp, #32]
 802577c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802577e:	3302      	adds	r3, #2
 8025780:	9309      	str	r3, [sp, #36]	; 0x24
 8025782:	e658      	b.n	8025436 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8025784:	d028      	beq.n	80257d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8025786:	9b08      	ldr	r3, [sp, #32]
 8025788:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802578a:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802578c:	3b01      	subs	r3, #1
 802578e:	fb00 5003 	mla	r0, r0, r3, r5
 8025792:	1400      	asrs	r0, r0, #16
 8025794:	f53f ae6c 	bmi.w	8025470 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025798:	3901      	subs	r1, #1
 802579a:	4288      	cmp	r0, r1
 802579c:	f6bf ae68 	bge.w	8025470 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80257a0:	9924      	ldr	r1, [sp, #144]	; 0x90
 80257a2:	9822      	ldr	r0, [sp, #136]	; 0x88
 80257a4:	fb01 0303 	mla	r3, r1, r3, r0
 80257a8:	141b      	asrs	r3, r3, #16
 80257aa:	f53f ae61 	bmi.w	8025470 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80257ae:	3a01      	subs	r2, #1
 80257b0:	4293      	cmp	r3, r2
 80257b2:	f6bf ae5d 	bge.w	8025470 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80257b6:	9b08      	ldr	r3, [sp, #32]
 80257b8:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80257bc:	9313      	str	r3, [sp, #76]	; 0x4c
 80257be:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80257c2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80257c4:	2b00      	cmp	r3, #0
 80257c6:	f300 8082 	bgt.w	80258ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80257ca:	9b08      	ldr	r3, [sp, #32]
 80257cc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80257d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80257d2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80257d6:	9309      	str	r3, [sp, #36]	; 0x24
 80257d8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80257da:	2b00      	cmp	r3, #0
 80257dc:	f340 81ef 	ble.w	8025bbe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80257e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80257e4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80257e8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80257ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80257ee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80257f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80257f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80257fa:	eef0 6a62 	vmov.f32	s13, s5
 80257fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025802:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025806:	ee77 2a62 	vsub.f32	s5, s14, s5
 802580a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 802580e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025812:	eef0 6a43 	vmov.f32	s13, s6
 8025816:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802581a:	ee12 2a90 	vmov	r2, s5
 802581e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025822:	fb92 f3f3 	sdiv	r3, r2, r3
 8025826:	ee13 2a10 	vmov	r2, s6
 802582a:	9323      	str	r3, [sp, #140]	; 0x8c
 802582c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802582e:	fb92 f3f3 	sdiv	r3, r2, r3
 8025832:	9324      	str	r3, [sp, #144]	; 0x90
 8025834:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8025836:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025838:	3b01      	subs	r3, #1
 802583a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802583e:	9311      	str	r3, [sp, #68]	; 0x44
 8025840:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025842:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8025846:	bf08      	it	eq
 8025848:	4613      	moveq	r3, r2
 802584a:	9308      	str	r3, [sp, #32]
 802584c:	eeb0 3a67 	vmov.f32	s6, s15
 8025850:	eef0 2a47 	vmov.f32	s5, s14
 8025854:	e5e1      	b.n	802541a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025856:	fb08 f505 	mul.w	r5, r8, r5
 802585a:	fb09 5303 	mla	r3, r9, r3, r5
 802585e:	e661      	b.n	8025524 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8025860:	4681      	mov	r9, r0
 8025862:	e688      	b.n	8025576 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8025864:	f1c1 0210 	rsb	r2, r1, #16
 8025868:	4341      	muls	r1, r0
 802586a:	fb09 1902 	mla	r9, r9, r2, r1
 802586e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8025872:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8025876:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802587a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802587e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025882:	ea42 0909 	orr.w	r9, r2, r9
 8025886:	fa1f f289 	uxth.w	r2, r9
 802588a:	e71b      	b.n	80256c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 802588c:	803a      	strh	r2, [r7, #0]
 802588e:	e75d      	b.n	802574c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025890:	f115 0e01 	adds.w	lr, r5, #1
 8025894:	f53f af5a 	bmi.w	802574c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025898:	4572      	cmp	r2, lr
 802589a:	f6ff af57 	blt.w	802574c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802589e:	f110 0e01 	adds.w	lr, r0, #1
 80258a2:	f53f af53 	bmi.w	802574c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80258a6:	4573      	cmp	r3, lr
 80258a8:	f6ff af50 	blt.w	802574c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80258ac:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80258ae:	9502      	str	r5, [sp, #8]
 80258b0:	b21b      	sxth	r3, r3
 80258b2:	b212      	sxth	r2, r2
 80258b4:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80258b8:	9301      	str	r3, [sp, #4]
 80258ba:	9200      	str	r2, [sp, #0]
 80258bc:	e9cd c405 	strd	ip, r4, [sp, #20]
 80258c0:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 80258c4:	4639      	mov	r1, r7
 80258c6:	9815      	ldr	r0, [sp, #84]	; 0x54
 80258c8:	f7ff fc04 	bl	80250d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80258cc:	e73e      	b.n	802574c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80258ce:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80258d0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80258d4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80258d6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80258da:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80258dc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80258e0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80258e2:	141f      	asrs	r7, r3, #16
 80258e4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80258e6:	141b      	asrs	r3, r3, #16
 80258e8:	fb01 3707 	mla	r7, r1, r7, r3
 80258ec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80258ee:	fa1f fc82 	uxth.w	ip, r2
 80258f2:	eb03 0a07 	add.w	sl, r3, r7
 80258f6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80258fa:	f813 9007 	ldrb.w	r9, [r3, r7]
 80258fe:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8025902:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8025906:	b29b      	uxth	r3, r3
 8025908:	2d00      	cmp	r5, #0
 802590a:	f000 813d 	beq.w	8025b88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 802590e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8025912:	940f      	str	r4, [sp, #60]	; 0x3c
 8025914:	eb0a 0b01 	add.w	fp, sl, r1
 8025918:	fa1f fa85 	uxth.w	sl, r5
 802591c:	fb0a fc0c 	mul.w	ip, sl, ip
 8025920:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8025924:	fa1f fa8a 	uxth.w	sl, sl
 8025928:	eba0 000c 	sub.w	r0, r0, ip
 802592c:	eba3 030a 	sub.w	r3, r3, sl
 8025930:	b280      	uxth	r0, r0
 8025932:	fb08 f000 	mul.w	r0, r8, r0
 8025936:	b29b      	uxth	r3, r3
 8025938:	fb09 0303 	mla	r3, r9, r3, r0
 802593c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 802593e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8025942:	9410      	str	r4, [sp, #64]	; 0x40
 8025944:	fb0a 3300 	mla	r3, sl, r0, r3
 8025948:	fb0c 3304 	mla	r3, ip, r4, r3
 802594c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025950:	2b00      	cmp	r3, #0
 8025952:	f000 810b 	beq.w	8025b6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8025956:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8025958:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802595a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802595e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8025962:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8025966:	f000 8114 	beq.w	8025b92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 802596a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802596e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025972:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025976:	fb09 f707 	mul.w	r7, r9, r7
 802597a:	fb0a fc0c 	mul.w	ip, sl, ip
 802597e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8025982:	f107 0b20 	add.w	fp, r7, #32
 8025986:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802598a:	44cc      	add	ip, r9
 802598c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8025990:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025994:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8025998:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802599c:	ea4c 0909 	orr.w	r9, ip, r9
 80259a0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80259a4:	8847      	ldrh	r7, [r0, #2]
 80259a6:	d019      	beq.n	80259dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 80259a8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80259ac:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80259b0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80259b4:	fb08 f807 	mul.w	r8, r8, r7
 80259b8:	fb0a fc0c 	mul.w	ip, sl, ip
 80259bc:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80259c0:	f108 0b20 	add.w	fp, r8, #32
 80259c4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80259c8:	44bc      	add	ip, r7
 80259ca:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80259ce:	0a3f      	lsrs	r7, r7, #8
 80259d0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80259d4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80259d8:	ea4c 0707 	orr.w	r7, ip, r7
 80259dc:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80259e0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80259e4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80259e8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80259ec:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80259f0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80259f4:	ea4c 0909 	orr.w	r9, ip, r9
 80259f8:	ea4a 0707 	orr.w	r7, sl, r7
 80259fc:	2d00      	cmp	r5, #0
 80259fe:	f000 80ca 	beq.w	8025b96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8025a02:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8025a06:	3901      	subs	r1, #1
 8025a08:	0049      	lsls	r1, r1, #1
 8025a0a:	3102      	adds	r1, #2
 8025a0c:	eb00 0c01 	add.w	ip, r0, r1
 8025a10:	5a41      	ldrh	r1, [r0, r1]
 8025a12:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8025a14:	28ff      	cmp	r0, #255	; 0xff
 8025a16:	d019      	beq.n	8025a4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8025a18:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8025a1a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8025a1e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025a22:	fb04 fa01 	mul.w	sl, r4, r1
 8025a26:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025a2a:	fb08 f800 	mul.w	r8, r8, r0
 8025a2e:	f10a 0020 	add.w	r0, sl, #32
 8025a32:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8025a36:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8025a3a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025a3e:	4441      	add	r1, r8
 8025a40:	0a00      	lsrs	r0, r0, #8
 8025a42:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8025a46:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025a4a:	4301      	orrs	r1, r0
 8025a4c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8025a4e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8025a52:	2cff      	cmp	r4, #255	; 0xff
 8025a54:	d01a      	beq.n	8025a8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8025a56:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8025a5a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025a5e:	fb04 fa00 	mul.w	sl, r4, r0
 8025a62:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025a66:	fb08 f80c 	mul.w	r8, r8, ip
 8025a6a:	f10a 0c20 	add.w	ip, sl, #32
 8025a6e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8025a72:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8025a76:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025a7a:	4440      	add	r0, r8
 8025a7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025a80:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8025a84:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025a88:	ea40 000c 	orr.w	r0, r0, ip
 8025a8c:	fb15 fc02 	smulbb	ip, r5, r2
 8025a90:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8025a94:	f1c5 0810 	rsb	r8, r5, #16
 8025a98:	eba8 0802 	sub.w	r8, r8, r2
 8025a9c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8025aa0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8025aa4:	437a      	muls	r2, r7
 8025aa6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8025aaa:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8025aae:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025ab2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8025ab6:	fb09 2208 	mla	r2, r9, r8, r2
 8025aba:	ea4a 0101 	orr.w	r1, sl, r1
 8025abe:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8025ac2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025ac6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025aca:	fb05 2201 	mla	r2, r5, r1, r2
 8025ace:	ea4b 0000 	orr.w	r0, fp, r0
 8025ad2:	fb0c 2200 	mla	r2, ip, r0, r2
 8025ad6:	0d57      	lsrs	r7, r2, #21
 8025ad8:	0952      	lsrs	r2, r2, #5
 8025ada:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025ade:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025ae2:	433a      	orrs	r2, r7
 8025ae4:	2bff      	cmp	r3, #255	; 0xff
 8025ae6:	b292      	uxth	r2, r2
 8025ae8:	d102      	bne.n	8025af0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8025aea:	9912      	ldr	r1, [sp, #72]	; 0x48
 8025aec:	29ff      	cmp	r1, #255	; 0xff
 8025aee:	d063      	beq.n	8025bb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8025af0:	980a      	ldr	r0, [sp, #40]	; 0x28
 8025af2:	f8be 1000 	ldrh.w	r1, [lr]
 8025af6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025af8:	4343      	muls	r3, r0
 8025afa:	1c58      	adds	r0, r3, #1
 8025afc:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8025b00:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8025b04:	1208      	asrs	r0, r1, #8
 8025b06:	b2db      	uxtb	r3, r3
 8025b08:	1215      	asrs	r5, r2, #8
 8025b0a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025b0e:	fb10 f003 	smulbb	r0, r0, r3
 8025b12:	10cf      	asrs	r7, r1, #3
 8025b14:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025b18:	00c9      	lsls	r1, r1, #3
 8025b1a:	fb05 0504 	mla	r5, r5, r4, r0
 8025b1e:	b2c9      	uxtb	r1, r1
 8025b20:	10d0      	asrs	r0, r2, #3
 8025b22:	00d2      	lsls	r2, r2, #3
 8025b24:	fb11 f103 	smulbb	r1, r1, r3
 8025b28:	b2d2      	uxtb	r2, r2
 8025b2a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8025b2e:	fb02 1204 	mla	r2, r2, r4, r1
 8025b32:	fb17 f703 	smulbb	r7, r7, r3
 8025b36:	b2ad      	uxth	r5, r5
 8025b38:	b292      	uxth	r2, r2
 8025b3a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025b3e:	fb00 7004 	mla	r0, r0, r4, r7
 8025b42:	1c6b      	adds	r3, r5, #1
 8025b44:	1c57      	adds	r7, r2, #1
 8025b46:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025b4a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8025b4e:	b280      	uxth	r0, r0
 8025b50:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8025b54:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025b58:	433d      	orrs	r5, r7
 8025b5a:	1c47      	adds	r7, r0, #1
 8025b5c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8025b60:	097f      	lsrs	r7, r7, #5
 8025b62:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025b66:	433d      	orrs	r5, r7
 8025b68:	f8ae 5000 	strh.w	r5, [lr]
 8025b6c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025b6e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8025b70:	4413      	add	r3, r2
 8025b72:	9321      	str	r3, [sp, #132]	; 0x84
 8025b74:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8025b76:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025b78:	441a      	add	r2, r3
 8025b7a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025b7c:	9222      	str	r2, [sp, #136]	; 0x88
 8025b7e:	3b01      	subs	r3, #1
 8025b80:	f10e 0e02 	add.w	lr, lr, #2
 8025b84:	9313      	str	r3, [sp, #76]	; 0x4c
 8025b86:	e61c      	b.n	80257c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8025b88:	fb08 f000 	mul.w	r0, r8, r0
 8025b8c:	fb09 0303 	mla	r3, r9, r3, r0
 8025b90:	e6dc      	b.n	802594c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8025b92:	46b9      	mov	r9, r7
 8025b94:	e704      	b.n	80259a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8025b96:	f1c2 0110 	rsb	r1, r2, #16
 8025b9a:	437a      	muls	r2, r7
 8025b9c:	fb09 2901 	mla	r9, r9, r1, r2
 8025ba0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8025ba4:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8025ba8:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8025bac:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025bb0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025bb4:	4302      	orrs	r2, r0
 8025bb6:	e795      	b.n	8025ae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8025bb8:	f8ae 2000 	strh.w	r2, [lr]
 8025bbc:	e7d6      	b.n	8025b6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8025bbe:	b017      	add	sp, #92	; 0x5c
 8025bc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025bc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8025bc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025bc8:	b085      	sub	sp, #20
 8025bca:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8025bce:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8025bd2:	9103      	str	r1, [sp, #12]
 8025bd4:	fb00 7406 	mla	r4, r0, r6, r7
 8025bd8:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8025bdc:	2800      	cmp	r0, #0
 8025bde:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8025be2:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8025be6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8025bea:	9501      	str	r5, [sp, #4]
 8025bec:	eb02 0904 	add.w	r9, r2, r4
 8025bf0:	f2c0 8141 	blt.w	8025e76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8025bf4:	4583      	cmp	fp, r0
 8025bf6:	f340 813e 	ble.w	8025e76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8025bfa:	2f00      	cmp	r7, #0
 8025bfc:	f2c0 8137 	blt.w	8025e6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8025c00:	42be      	cmp	r6, r7
 8025c02:	f340 8134 	ble.w	8025e6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8025c06:	f812 c004 	ldrb.w	ip, [r2, r4]
 8025c0a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8025c0e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025c12:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8025c16:	4355      	muls	r5, r2
 8025c18:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025c1c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8025c20:	fb0c f203 	mul.w	r2, ip, r3
 8025c24:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8025c28:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8025c2c:	441d      	add	r5, r3
 8025c2e:	f102 0320 	add.w	r3, r2, #32
 8025c32:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025c36:	0a1b      	lsrs	r3, r3, #8
 8025c38:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8025c3c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025c40:	431c      	orrs	r4, r3
 8025c42:	1c7b      	adds	r3, r7, #1
 8025c44:	f100 811c 	bmi.w	8025e80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8025c48:	429e      	cmp	r6, r3
 8025c4a:	f340 8119 	ble.w	8025e80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8025c4e:	2900      	cmp	r1, #0
 8025c50:	f000 8119 	beq.w	8025e86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8025c54:	9a01      	ldr	r2, [sp, #4]
 8025c56:	f899 3001 	ldrb.w	r3, [r9, #1]
 8025c5a:	8855      	ldrh	r5, [r2, #2]
 8025c5c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8025c60:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8025c64:	fb08 f802 	mul.w	r8, r8, r2
 8025c68:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025c6c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8025c70:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8025c74:	435d      	muls	r5, r3
 8025c76:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025c7a:	44d0      	add	r8, sl
 8025c7c:	f105 0a20 	add.w	sl, r5, #32
 8025c80:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8025c84:	0a2d      	lsrs	r5, r5, #8
 8025c86:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8025c8a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025c8e:	432a      	orrs	r2, r5
 8025c90:	3001      	adds	r0, #1
 8025c92:	f100 80fe 	bmi.w	8025e92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8025c96:	4583      	cmp	fp, r0
 8025c98:	f340 80fb 	ble.w	8025e92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8025c9c:	f1be 0f00 	cmp.w	lr, #0
 8025ca0:	f000 80fc 	beq.w	8025e9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8025ca4:	2f00      	cmp	r7, #0
 8025ca6:	f2c0 80f1 	blt.w	8025e8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8025caa:	42be      	cmp	r6, r7
 8025cac:	f340 80ee 	ble.w	8025e8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8025cb0:	9801      	ldr	r0, [sp, #4]
 8025cb2:	f819 5006 	ldrb.w	r5, [r9, r6]
 8025cb6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8025cba:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8025cbe:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8025cc2:	fb0a fa00 	mul.w	sl, sl, r0
 8025cc6:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8025cca:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8025cce:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8025cd2:	fb05 f808 	mul.w	r8, r5, r8
 8025cd6:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8025cda:	4482      	add	sl, r0
 8025cdc:	f108 0020 	add.w	r0, r8, #32
 8025ce0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025ce4:	0a00      	lsrs	r0, r0, #8
 8025ce6:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8025cea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025cee:	ea4b 0b00 	orr.w	fp, fp, r0
 8025cf2:	3701      	adds	r7, #1
 8025cf4:	f100 80d7 	bmi.w	8025ea6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025cf8:	42be      	cmp	r6, r7
 8025cfa:	f340 80d4 	ble.w	8025ea6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025cfe:	2900      	cmp	r1, #0
 8025d00:	f000 80d4 	beq.w	8025eac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8025d04:	3601      	adds	r6, #1
 8025d06:	9801      	ldr	r0, [sp, #4]
 8025d08:	f819 7006 	ldrb.w	r7, [r9, r6]
 8025d0c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8025d10:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8025d14:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8025d18:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025d1c:	fb09 f906 	mul.w	r9, r9, r6
 8025d20:	fb07 f800 	mul.w	r8, r7, r0
 8025d24:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8025d28:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8025d2c:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8025d30:	44d1      	add	r9, sl
 8025d32:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8025d36:	f108 0020 	add.w	r0, r8, #32
 8025d3a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025d3e:	0a00      	lsrs	r0, r0, #8
 8025d40:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025d44:	4330      	orrs	r0, r6
 8025d46:	b28e      	uxth	r6, r1
 8025d48:	fa1f f98e 	uxth.w	r9, lr
 8025d4c:	fb06 f809 	mul.w	r8, r6, r9
 8025d50:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8025d54:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8025d58:	0136      	lsls	r6, r6, #4
 8025d5a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025d5e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8025d62:	9601      	str	r6, [sp, #4]
 8025d64:	ea4a 0404 	orr.w	r4, sl, r4
 8025d68:	fa1f f689 	uxth.w	r6, r9
 8025d6c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025d70:	fb11 f90e 	smulbb	r9, r1, lr
 8025d74:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8025d78:	9602      	str	r6, [sp, #8]
 8025d7a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025d7e:	4626      	mov	r6, r4
 8025d80:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025d84:	f1ce 0410 	rsb	r4, lr, #16
 8025d88:	1a64      	subs	r4, r4, r1
 8025d8a:	ea4a 0202 	orr.w	r2, sl, r2
 8025d8e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8025d92:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025d96:	434a      	muls	r2, r1
 8025d98:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025d9c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025da0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025da4:	fb04 2406 	mla	r4, r4, r6, r2
 8025da8:	ea4a 0000 	orr.w	r0, sl, r0
 8025dac:	fb09 4200 	mla	r2, r9, r0, r4
 8025db0:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8025db4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8025db8:	9801      	ldr	r0, [sp, #4]
 8025dba:	9903      	ldr	r1, [sp, #12]
 8025dbc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8025dc0:	ea44 0b0b 	orr.w	fp, r4, fp
 8025dc4:	9c02      	ldr	r4, [sp, #8]
 8025dc6:	8809      	ldrh	r1, [r1, #0]
 8025dc8:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8025dcc:	1b00      	subs	r0, r0, r4
 8025dce:	9c01      	ldr	r4, [sp, #4]
 8025dd0:	eba4 0608 	sub.w	r6, r4, r8
 8025dd4:	b2b6      	uxth	r6, r6
 8025dd6:	b280      	uxth	r0, r0
 8025dd8:	4373      	muls	r3, r6
 8025dda:	fb0c 3300 	mla	r3, ip, r0, r3
 8025dde:	9802      	ldr	r0, [sp, #8]
 8025de0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8025de4:	fb00 3505 	mla	r5, r0, r5, r3
 8025de8:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8025dec:	fb08 5707 	mla	r7, r8, r7, r5
 8025df0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025df4:	120b      	asrs	r3, r1, #8
 8025df6:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8025dfa:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8025dfe:	b2ff      	uxtb	r7, r7
 8025e00:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025e04:	10c8      	asrs	r0, r1, #3
 8025e06:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025e0a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025e0e:	00c9      	lsls	r1, r1, #3
 8025e10:	437b      	muls	r3, r7
 8025e12:	ea42 0e0e 	orr.w	lr, r2, lr
 8025e16:	b2c9      	uxtb	r1, r1
 8025e18:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025e1c:	fa1f f28e 	uxth.w	r2, lr
 8025e20:	4378      	muls	r0, r7
 8025e22:	434f      	muls	r7, r1
 8025e24:	1c59      	adds	r1, r3, #1
 8025e26:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025e2a:	1213      	asrs	r3, r2, #8
 8025e2c:	f023 0307 	bic.w	r3, r3, #7
 8025e30:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8025e34:	1c41      	adds	r1, r0, #1
 8025e36:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025e3a:	10d1      	asrs	r1, r2, #3
 8025e3c:	f021 0103 	bic.w	r1, r1, #3
 8025e40:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025e44:	021b      	lsls	r3, r3, #8
 8025e46:	00c9      	lsls	r1, r1, #3
 8025e48:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025e4c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8025e50:	430b      	orrs	r3, r1
 8025e52:	1c79      	adds	r1, r7, #1
 8025e54:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8025e58:	00d2      	lsls	r2, r2, #3
 8025e5a:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8025e5e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025e62:	431a      	orrs	r2, r3
 8025e64:	9b03      	ldr	r3, [sp, #12]
 8025e66:	801a      	strh	r2, [r3, #0]
 8025e68:	b005      	add	sp, #20
 8025e6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025e6e:	f04f 0c00 	mov.w	ip, #0
 8025e72:	4664      	mov	r4, ip
 8025e74:	e6e5      	b.n	8025c42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8025e76:	2300      	movs	r3, #0
 8025e78:	469c      	mov	ip, r3
 8025e7a:	461a      	mov	r2, r3
 8025e7c:	461c      	mov	r4, r3
 8025e7e:	e707      	b.n	8025c90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025e80:	2300      	movs	r3, #0
 8025e82:	461a      	mov	r2, r3
 8025e84:	e704      	b.n	8025c90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025e86:	460b      	mov	r3, r1
 8025e88:	460a      	mov	r2, r1
 8025e8a:	e701      	b.n	8025c90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025e8c:	2500      	movs	r5, #0
 8025e8e:	46ab      	mov	fp, r5
 8025e90:	e72f      	b.n	8025cf2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8025e92:	2700      	movs	r7, #0
 8025e94:	463d      	mov	r5, r7
 8025e96:	4638      	mov	r0, r7
 8025e98:	46bb      	mov	fp, r7
 8025e9a:	e754      	b.n	8025d46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025e9c:	4677      	mov	r7, lr
 8025e9e:	4675      	mov	r5, lr
 8025ea0:	4670      	mov	r0, lr
 8025ea2:	46f3      	mov	fp, lr
 8025ea4:	e74f      	b.n	8025d46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025ea6:	2700      	movs	r7, #0
 8025ea8:	4638      	mov	r0, r7
 8025eaa:	e74c      	b.n	8025d46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025eac:	460f      	mov	r7, r1
 8025eae:	4608      	mov	r0, r1
 8025eb0:	e749      	b.n	8025d46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08025eb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025eb8:	b093      	sub	sp, #76	; 0x4c
 8025eba:	9210      	str	r2, [sp, #64]	; 0x40
 8025ebc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8025ebe:	910e      	str	r1, [sp, #56]	; 0x38
 8025ec0:	9306      	str	r3, [sp, #24]
 8025ec2:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025ec6:	9011      	str	r0, [sp, #68]	; 0x44
 8025ec8:	6850      	ldr	r0, [r2, #4]
 8025eca:	6812      	ldr	r2, [r2, #0]
 8025ecc:	fb00 1303 	mla	r3, r0, r3, r1
 8025ed0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025ed4:	9307      	str	r3, [sp, #28]
 8025ed6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025ed8:	681b      	ldr	r3, [r3, #0]
 8025eda:	9308      	str	r3, [sp, #32]
 8025edc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025ede:	685b      	ldr	r3, [r3, #4]
 8025ee0:	9309      	str	r3, [sp, #36]	; 0x24
 8025ee2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025ee4:	2b00      	cmp	r3, #0
 8025ee6:	dc03      	bgt.n	8025ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8025ee8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8025eea:	2b00      	cmp	r3, #0
 8025eec:	f340 83b4 	ble.w	8026658 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8025ef0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025ef2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025ef6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025efa:	1e48      	subs	r0, r1, #1
 8025efc:	1e55      	subs	r5, r2, #1
 8025efe:	9b06      	ldr	r3, [sp, #24]
 8025f00:	2b00      	cmp	r3, #0
 8025f02:	f340 8163 	ble.w	80261cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8025f06:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8025f08:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025f0a:	1436      	asrs	r6, r6, #16
 8025f0c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8025f10:	d406      	bmi.n	8025f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025f12:	4286      	cmp	r6, r0
 8025f14:	da04      	bge.n	8025f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025f16:	2b00      	cmp	r3, #0
 8025f18:	db02      	blt.n	8025f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025f1a:	42ab      	cmp	r3, r5
 8025f1c:	f2c0 8157 	blt.w	80261ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8025f20:	3601      	adds	r6, #1
 8025f22:	f100 8144 	bmi.w	80261ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025f26:	42b1      	cmp	r1, r6
 8025f28:	f2c0 8141 	blt.w	80261ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025f2c:	3301      	adds	r3, #1
 8025f2e:	f100 813e 	bmi.w	80261ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025f32:	429a      	cmp	r2, r3
 8025f34:	f2c0 813b 	blt.w	80261ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025f38:	9b06      	ldr	r3, [sp, #24]
 8025f3a:	9f07      	ldr	r7, [sp, #28]
 8025f3c:	930f      	str	r3, [sp, #60]	; 0x3c
 8025f3e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025f42:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8025f44:	2b00      	cmp	r3, #0
 8025f46:	f340 8164 	ble.w	8026212 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8025f4a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025f4c:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8025f4e:	1418      	asrs	r0, r3, #16
 8025f50:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025f52:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8025f56:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025f58:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8025f5c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025f5e:	142d      	asrs	r5, r5, #16
 8025f60:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8025f64:	f100 81ee 	bmi.w	8026344 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025f68:	f102 3eff 	add.w	lr, r2, #4294967295
 8025f6c:	4575      	cmp	r5, lr
 8025f6e:	f280 81e9 	bge.w	8026344 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025f72:	2800      	cmp	r0, #0
 8025f74:	f2c0 81e6 	blt.w	8026344 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025f78:	f103 3eff 	add.w	lr, r3, #4294967295
 8025f7c:	4570      	cmp	r0, lr
 8025f7e:	f280 81e1 	bge.w	8026344 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025f82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025f84:	b212      	sxth	r2, r2
 8025f86:	fb00 5002 	mla	r0, r0, r2, r5
 8025f8a:	fa1f fe81 	uxth.w	lr, r1
 8025f8e:	eb03 0a00 	add.w	sl, r3, r0
 8025f92:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8025f96:	f813 9000 	ldrb.w	r9, [r3, r0]
 8025f9a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8025f9e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8025fa2:	b29b      	uxth	r3, r3
 8025fa4:	f1bc 0f00 	cmp.w	ip, #0
 8025fa8:	f000 8179 	beq.w	802629e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8025fac:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8025fb0:	940a      	str	r4, [sp, #40]	; 0x28
 8025fb2:	eb0a 0b02 	add.w	fp, sl, r2
 8025fb6:	fa1f fa8c 	uxth.w	sl, ip
 8025fba:	fb0a fe0e 	mul.w	lr, sl, lr
 8025fbe:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8025fc2:	fa1f fa8a 	uxth.w	sl, sl
 8025fc6:	eba5 050e 	sub.w	r5, r5, lr
 8025fca:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8025fce:	940b      	str	r4, [sp, #44]	; 0x2c
 8025fd0:	eba3 030a 	sub.w	r3, r3, sl
 8025fd4:	b2ad      	uxth	r5, r5
 8025fd6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025fd8:	b29b      	uxth	r3, r3
 8025fda:	fb08 f505 	mul.w	r5, r8, r5
 8025fde:	fb09 5303 	mla	r3, r9, r3, r5
 8025fe2:	fb0a 3304 	mla	r3, sl, r4, r3
 8025fe6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025fe8:	fb0e 3304 	mla	r3, lr, r4, r3
 8025fec:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025ff0:	2b00      	cmp	r3, #0
 8025ff2:	f000 80cf 	beq.w	8026194 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8025ff6:	9c08      	ldr	r4, [sp, #32]
 8025ff8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025ffc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8026000:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8026004:	f000 8150 	beq.w	80262a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8026008:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802600c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8026010:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026014:	fb09 f000 	mul.w	r0, r9, r0
 8026018:	fb0a fe0e 	mul.w	lr, sl, lr
 802601c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8026020:	f100 0b20 	add.w	fp, r0, #32
 8026024:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8026028:	44ce      	add	lr, r9
 802602a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802602e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026032:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8026036:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802603a:	ea4e 0909 	orr.w	r9, lr, r9
 802603e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8026042:	8868      	ldrh	r0, [r5, #2]
 8026044:	d019      	beq.n	802607a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8026046:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802604a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802604e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026052:	fb08 f800 	mul.w	r8, r8, r0
 8026056:	fb0a fe0e 	mul.w	lr, sl, lr
 802605a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802605e:	f108 0b20 	add.w	fp, r8, #32
 8026062:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8026066:	4486      	add	lr, r0
 8026068:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 802606c:	0a00      	lsrs	r0, r0, #8
 802606e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8026072:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026076:	ea4e 0000 	orr.w	r0, lr, r0
 802607a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802607e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8026082:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8026086:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802608a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802608e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026092:	ea4e 0909 	orr.w	r9, lr, r9
 8026096:	ea4a 0000 	orr.w	r0, sl, r0
 802609a:	f1bc 0f00 	cmp.w	ip, #0
 802609e:	f000 8105 	beq.w	80262ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80260a2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80260a6:	3a01      	subs	r2, #1
 80260a8:	0052      	lsls	r2, r2, #1
 80260aa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80260ac:	3202      	adds	r2, #2
 80260ae:	2cff      	cmp	r4, #255	; 0xff
 80260b0:	eb05 0e02 	add.w	lr, r5, r2
 80260b4:	5aaa      	ldrh	r2, [r5, r2]
 80260b6:	d018      	beq.n	80260ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80260b8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80260bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80260c0:	fb04 fa02 	mul.w	sl, r4, r2
 80260c4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80260c8:	fb08 f805 	mul.w	r8, r8, r5
 80260cc:	f10a 0520 	add.w	r5, sl, #32
 80260d0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80260d4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80260d8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80260dc:	4442      	add	r2, r8
 80260de:	0a2d      	lsrs	r5, r5, #8
 80260e0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80260e4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80260e8:	432a      	orrs	r2, r5
 80260ea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80260ec:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80260f0:	2cff      	cmp	r4, #255	; 0xff
 80260f2:	d01a      	beq.n	802612a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80260f4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80260f8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80260fc:	fb04 fa05 	mul.w	sl, r4, r5
 8026100:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8026104:	fb08 f80e 	mul.w	r8, r8, lr
 8026108:	f10a 0e20 	add.w	lr, sl, #32
 802610c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8026110:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8026114:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026118:	4445      	add	r5, r8
 802611a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802611e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8026122:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8026126:	ea45 050e 	orr.w	r5, r5, lr
 802612a:	fb1c fe01 	smulbb	lr, ip, r1
 802612e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8026132:	f1cc 0810 	rsb	r8, ip, #16
 8026136:	eba8 0801 	sub.w	r8, r8, r1
 802613a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802613e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8026142:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8026146:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802614a:	4341      	muls	r1, r0
 802614c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026150:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026154:	ea4a 0202 	orr.w	r2, sl, r2
 8026158:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802615c:	fb09 1108 	mla	r1, r9, r8, r1
 8026160:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026164:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8026168:	fb0c 1102 	mla	r1, ip, r2, r1
 802616c:	ea4b 0505 	orr.w	r5, fp, r5
 8026170:	fb0e 1e05 	mla	lr, lr, r5, r1
 8026174:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8026178:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802617c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026180:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8026184:	ea42 0e0e 	orr.w	lr, r2, lr
 8026188:	fa1f f28e 	uxth.w	r2, lr
 802618c:	2bff      	cmp	r3, #255	; 0xff
 802618e:	f040 80a1 	bne.w	80262d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8026192:	803a      	strh	r2, [r7, #0]
 8026194:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026196:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8026198:	4413      	add	r3, r2
 802619a:	931d      	str	r3, [sp, #116]	; 0x74
 802619c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802619e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80261a0:	441a      	add	r2, r3
 80261a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80261a4:	921e      	str	r2, [sp, #120]	; 0x78
 80261a6:	3b01      	subs	r3, #1
 80261a8:	3702      	adds	r7, #2
 80261aa:	930f      	str	r3, [sp, #60]	; 0x3c
 80261ac:	e6c9      	b.n	8025f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80261ae:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80261b0:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80261b2:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80261b4:	4433      	add	r3, r6
 80261b6:	931d      	str	r3, [sp, #116]	; 0x74
 80261b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80261ba:	441c      	add	r4, r3
 80261bc:	9b06      	ldr	r3, [sp, #24]
 80261be:	941e      	str	r4, [sp, #120]	; 0x78
 80261c0:	3b01      	subs	r3, #1
 80261c2:	9306      	str	r3, [sp, #24]
 80261c4:	9b07      	ldr	r3, [sp, #28]
 80261c6:	3302      	adds	r3, #2
 80261c8:	9307      	str	r3, [sp, #28]
 80261ca:	e698      	b.n	8025efe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80261cc:	d028      	beq.n	8026220 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80261ce:	9b06      	ldr	r3, [sp, #24]
 80261d0:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80261d2:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80261d4:	3b01      	subs	r3, #1
 80261d6:	fb00 5003 	mla	r0, r0, r3, r5
 80261da:	1400      	asrs	r0, r0, #16
 80261dc:	f53f aeac 	bmi.w	8025f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80261e0:	3901      	subs	r1, #1
 80261e2:	4288      	cmp	r0, r1
 80261e4:	f6bf aea8 	bge.w	8025f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80261e8:	9920      	ldr	r1, [sp, #128]	; 0x80
 80261ea:	981e      	ldr	r0, [sp, #120]	; 0x78
 80261ec:	fb01 0303 	mla	r3, r1, r3, r0
 80261f0:	141b      	asrs	r3, r3, #16
 80261f2:	f53f aea1 	bmi.w	8025f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80261f6:	3a01      	subs	r2, #1
 80261f8:	4293      	cmp	r3, r2
 80261fa:	f6bf ae9d 	bge.w	8025f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80261fe:	9b06      	ldr	r3, [sp, #24]
 8026200:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8026204:	930f      	str	r3, [sp, #60]	; 0x3c
 8026206:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802620a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802620c:	2b00      	cmp	r3, #0
 802620e:	f300 80b6 	bgt.w	802637e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8026212:	9b06      	ldr	r3, [sp, #24]
 8026214:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8026218:	9b07      	ldr	r3, [sp, #28]
 802621a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802621e:	9307      	str	r3, [sp, #28]
 8026220:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026222:	2b00      	cmp	r3, #0
 8026224:	f340 8218 	ble.w	8026658 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8026228:	ee30 0a04 	vadd.f32	s0, s0, s8
 802622c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026230:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026234:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026236:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802623a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802623e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026242:	eef0 6a62 	vmov.f32	s13, s5
 8026246:	ee61 7a27 	vmul.f32	s15, s2, s15
 802624a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802624e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026252:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8026256:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802625a:	eef0 6a43 	vmov.f32	s13, s6
 802625e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026262:	ee12 2a90 	vmov	r2, s5
 8026266:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802626a:	fb92 f3f3 	sdiv	r3, r2, r3
 802626e:	ee13 2a10 	vmov	r2, s6
 8026272:	931f      	str	r3, [sp, #124]	; 0x7c
 8026274:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026276:	fb92 f3f3 	sdiv	r3, r2, r3
 802627a:	9320      	str	r3, [sp, #128]	; 0x80
 802627c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802627e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026280:	3b01      	subs	r3, #1
 8026282:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026286:	930e      	str	r3, [sp, #56]	; 0x38
 8026288:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802628a:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 802628e:	bf08      	it	eq
 8026290:	4613      	moveq	r3, r2
 8026292:	9306      	str	r3, [sp, #24]
 8026294:	eeb0 3a67 	vmov.f32	s6, s15
 8026298:	eef0 2a47 	vmov.f32	s5, s14
 802629c:	e621      	b.n	8025ee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 802629e:	fb08 f505 	mul.w	r5, r8, r5
 80262a2:	fb09 5303 	mla	r3, r9, r3, r5
 80262a6:	e6a1      	b.n	8025fec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80262a8:	4681      	mov	r9, r0
 80262aa:	e6c8      	b.n	802603e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80262ac:	f1c1 0210 	rsb	r2, r1, #16
 80262b0:	4341      	muls	r1, r0
 80262b2:	fb09 1902 	mla	r9, r9, r2, r1
 80262b6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80262ba:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80262be:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80262c2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80262c6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80262ca:	ea42 0909 	orr.w	r9, r2, r9
 80262ce:	fa1f f289 	uxth.w	r2, r9
 80262d2:	e75b      	b.n	802618c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80262d4:	f8b7 c000 	ldrh.w	ip, [r7]
 80262d8:	43db      	mvns	r3, r3
 80262da:	ea4f 202c 	mov.w	r0, ip, asr #8
 80262de:	fa5f fe83 	uxtb.w	lr, r3
 80262e2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80262e6:	fb00 f00e 	mul.w	r0, r0, lr
 80262ea:	1c41      	adds	r1, r0, #1
 80262ec:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80262f0:	1211      	asrs	r1, r2, #8
 80262f2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80262f6:	f021 0107 	bic.w	r1, r1, #7
 80262fa:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80262fe:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8026302:	48d7      	ldr	r0, [pc, #860]	; (8026660 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8026304:	fb05 f50e 	mul.w	r5, r5, lr
 8026308:	b2c9      	uxtb	r1, r1
 802630a:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 802630e:	1c69      	adds	r1, r5, #1
 8026310:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8026314:	10d1      	asrs	r1, r2, #3
 8026316:	f021 0103 	bic.w	r1, r1, #3
 802631a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802631e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8026322:	b2db      	uxtb	r3, r3
 8026324:	00c9      	lsls	r1, r1, #3
 8026326:	fb03 f30e 	mul.w	r3, r3, lr
 802632a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802632e:	4301      	orrs	r1, r0
 8026330:	1c58      	adds	r0, r3, #1
 8026332:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8026336:	00d2      	lsls	r2, r2, #3
 8026338:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802633c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026340:	430a      	orrs	r2, r1
 8026342:	e726      	b.n	8026192 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8026344:	f115 0e01 	adds.w	lr, r5, #1
 8026348:	f53f af24 	bmi.w	8026194 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802634c:	4572      	cmp	r2, lr
 802634e:	f6ff af21 	blt.w	8026194 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026352:	f110 0e01 	adds.w	lr, r0, #1
 8026356:	f53f af1d 	bmi.w	8026194 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802635a:	4573      	cmp	r3, lr
 802635c:	f6ff af1a 	blt.w	8026194 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026360:	b21b      	sxth	r3, r3
 8026362:	b212      	sxth	r2, r2
 8026364:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8026368:	e9cd 5002 	strd	r5, r0, [sp, #8]
 802636c:	9301      	str	r3, [sp, #4]
 802636e:	9200      	str	r2, [sp, #0]
 8026370:	4639      	mov	r1, r7
 8026372:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8026376:	9811      	ldr	r0, [sp, #68]	; 0x44
 8026378:	f7ff fc24 	bl	8025bc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802637c:	e70a      	b.n	8026194 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802637e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026380:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8026384:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8026386:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802638a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802638c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026390:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8026392:	141f      	asrs	r7, r3, #16
 8026394:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026396:	141b      	asrs	r3, r3, #16
 8026398:	fb01 3707 	mla	r7, r1, r7, r3
 802639c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802639e:	fa1f fc82 	uxth.w	ip, r2
 80263a2:	eb03 0a07 	add.w	sl, r3, r7
 80263a6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80263aa:	f813 9007 	ldrb.w	r9, [r3, r7]
 80263ae:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80263b2:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80263b6:	b29b      	uxth	r3, r3
 80263b8:	2d00      	cmp	r5, #0
 80263ba:	f000 80fe 	beq.w	80265ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80263be:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80263c2:	940c      	str	r4, [sp, #48]	; 0x30
 80263c4:	eb0a 0b01 	add.w	fp, sl, r1
 80263c8:	fa1f fa85 	uxth.w	sl, r5
 80263cc:	fb0a fc0c 	mul.w	ip, sl, ip
 80263d0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80263d4:	fa1f fa8a 	uxth.w	sl, sl
 80263d8:	eba0 000c 	sub.w	r0, r0, ip
 80263dc:	eba3 030a 	sub.w	r3, r3, sl
 80263e0:	b280      	uxth	r0, r0
 80263e2:	fb08 f000 	mul.w	r0, r8, r0
 80263e6:	b29b      	uxth	r3, r3
 80263e8:	fb09 0303 	mla	r3, r9, r3, r0
 80263ec:	980c      	ldr	r0, [sp, #48]	; 0x30
 80263ee:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80263f2:	940d      	str	r4, [sp, #52]	; 0x34
 80263f4:	fb0a 3300 	mla	r3, sl, r0, r3
 80263f8:	fb0c 3304 	mla	r3, ip, r4, r3
 80263fc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026400:	2b00      	cmp	r3, #0
 8026402:	f000 80cc 	beq.w	802659e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8026406:	9808      	ldr	r0, [sp, #32]
 8026408:	9c08      	ldr	r4, [sp, #32]
 802640a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802640e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8026412:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8026416:	f000 80d5 	beq.w	80265c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802641a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802641e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8026422:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026426:	fb09 f707 	mul.w	r7, r9, r7
 802642a:	fb0a fc0c 	mul.w	ip, sl, ip
 802642e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8026432:	f107 0b20 	add.w	fp, r7, #32
 8026436:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802643a:	44cc      	add	ip, r9
 802643c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8026440:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026444:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8026448:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802644c:	ea4c 0909 	orr.w	r9, ip, r9
 8026450:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8026454:	8847      	ldrh	r7, [r0, #2]
 8026456:	d019      	beq.n	802648c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8026458:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802645c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8026460:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026464:	fb08 f807 	mul.w	r8, r8, r7
 8026468:	fb0a fc0c 	mul.w	ip, sl, ip
 802646c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8026470:	f108 0b20 	add.w	fp, r8, #32
 8026474:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8026478:	44bc      	add	ip, r7
 802647a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 802647e:	0a3f      	lsrs	r7, r7, #8
 8026480:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8026484:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026488:	ea4c 0707 	orr.w	r7, ip, r7
 802648c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8026490:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8026494:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8026498:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802649c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80264a0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80264a4:	ea4c 0909 	orr.w	r9, ip, r9
 80264a8:	ea4a 0707 	orr.w	r7, sl, r7
 80264ac:	2d00      	cmp	r5, #0
 80264ae:	f000 808b 	beq.w	80265c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80264b2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80264b6:	3901      	subs	r1, #1
 80264b8:	0049      	lsls	r1, r1, #1
 80264ba:	3102      	adds	r1, #2
 80264bc:	eb00 0c01 	add.w	ip, r0, r1
 80264c0:	5a41      	ldrh	r1, [r0, r1]
 80264c2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80264c4:	28ff      	cmp	r0, #255	; 0xff
 80264c6:	d019      	beq.n	80264fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80264c8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80264ca:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80264ce:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80264d2:	fb04 fa01 	mul.w	sl, r4, r1
 80264d6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80264da:	fb08 f800 	mul.w	r8, r8, r0
 80264de:	f10a 0020 	add.w	r0, sl, #32
 80264e2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80264e6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80264ea:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80264ee:	4441      	add	r1, r8
 80264f0:	0a00      	lsrs	r0, r0, #8
 80264f2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80264f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80264fa:	4301      	orrs	r1, r0
 80264fc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80264fe:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8026502:	2cff      	cmp	r4, #255	; 0xff
 8026504:	d01a      	beq.n	802653c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8026506:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802650a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802650e:	fb04 fa00 	mul.w	sl, r4, r0
 8026512:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8026516:	fb08 f80c 	mul.w	r8, r8, ip
 802651a:	f10a 0c20 	add.w	ip, sl, #32
 802651e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8026522:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8026526:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802652a:	4440      	add	r0, r8
 802652c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026530:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8026534:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026538:	ea40 000c 	orr.w	r0, r0, ip
 802653c:	fb15 fc02 	smulbb	ip, r5, r2
 8026540:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8026544:	f1c5 0810 	rsb	r8, r5, #16
 8026548:	eba8 0802 	sub.w	r8, r8, r2
 802654c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8026550:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8026554:	437a      	muls	r2, r7
 8026556:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802655a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802655e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026562:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026566:	fb09 2208 	mla	r2, r9, r8, r2
 802656a:	ea4a 0101 	orr.w	r1, sl, r1
 802656e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8026572:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026576:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802657a:	fb05 2201 	mla	r2, r5, r1, r2
 802657e:	ea4b 0000 	orr.w	r0, fp, r0
 8026582:	fb0c 2200 	mla	r2, ip, r0, r2
 8026586:	0d57      	lsrs	r7, r2, #21
 8026588:	0952      	lsrs	r2, r2, #5
 802658a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802658e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026592:	433a      	orrs	r2, r7
 8026594:	2bff      	cmp	r3, #255	; 0xff
 8026596:	b292      	uxth	r2, r2
 8026598:	d127      	bne.n	80265ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 802659a:	f8ae 2000 	strh.w	r2, [lr]
 802659e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80265a0:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80265a2:	4413      	add	r3, r2
 80265a4:	931d      	str	r3, [sp, #116]	; 0x74
 80265a6:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80265a8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80265aa:	441a      	add	r2, r3
 80265ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80265ae:	921e      	str	r2, [sp, #120]	; 0x78
 80265b0:	3b01      	subs	r3, #1
 80265b2:	f10e 0e02 	add.w	lr, lr, #2
 80265b6:	930f      	str	r3, [sp, #60]	; 0x3c
 80265b8:	e627      	b.n	802620a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80265ba:	fb08 f000 	mul.w	r0, r8, r0
 80265be:	fb09 0303 	mla	r3, r9, r3, r0
 80265c2:	e71b      	b.n	80263fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80265c4:	46b9      	mov	r9, r7
 80265c6:	e743      	b.n	8026450 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80265c8:	f1c2 0110 	rsb	r1, r2, #16
 80265cc:	437a      	muls	r2, r7
 80265ce:	fb09 2901 	mla	r9, r9, r1, r2
 80265d2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80265d6:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80265da:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80265de:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80265e2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80265e6:	4302      	orrs	r2, r0
 80265e8:	e7d4      	b.n	8026594 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80265ea:	f8be 7000 	ldrh.w	r7, [lr]
 80265ee:	4c1c      	ldr	r4, [pc, #112]	; (8026660 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80265f0:	43db      	mvns	r3, r3
 80265f2:	1238      	asrs	r0, r7, #8
 80265f4:	fa5f fc83 	uxtb.w	ip, r3
 80265f8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80265fc:	10fd      	asrs	r5, r7, #3
 80265fe:	fb00 f00c 	mul.w	r0, r0, ip
 8026602:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8026606:	fb05 f10c 	mul.w	r1, r5, ip
 802660a:	1c45      	adds	r5, r0, #1
 802660c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8026610:	1215      	asrs	r5, r2, #8
 8026612:	f025 0507 	bic.w	r5, r5, #7
 8026616:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802661a:	1c4d      	adds	r5, r1, #1
 802661c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8026620:	10d1      	asrs	r1, r2, #3
 8026622:	f021 0103 	bic.w	r1, r1, #3
 8026626:	00fb      	lsls	r3, r7, #3
 8026628:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802662c:	b2db      	uxtb	r3, r3
 802662e:	b2c0      	uxtb	r0, r0
 8026630:	00c9      	lsls	r1, r1, #3
 8026632:	fb03 f30c 	mul.w	r3, r3, ip
 8026636:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802663a:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 802663e:	4308      	orrs	r0, r1
 8026640:	1c59      	adds	r1, r3, #1
 8026642:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8026646:	00d2      	lsls	r2, r2, #3
 8026648:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802664c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8026650:	4318      	orrs	r0, r3
 8026652:	f8ae 0000 	strh.w	r0, [lr]
 8026656:	e7a2      	b.n	802659e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8026658:	b013      	add	sp, #76	; 0x4c
 802665a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802665e:	bf00      	nop
 8026660:	fffff800 	.word	0xfffff800

08026664 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8026664:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026668:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 802666c:	fb05 4c03 	mla	ip, r5, r3, r4
 8026670:	2d00      	cmp	r5, #0
 8026672:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8026676:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 802667a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802667e:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8026682:	8808      	ldrh	r0, [r1, #0]
 8026684:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8026688:	f2c0 80a7 	blt.w	80267da <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802668c:	45aa      	cmp	sl, r5
 802668e:	f340 80a4 	ble.w	80267da <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8026692:	2c00      	cmp	r4, #0
 8026694:	f2c0 809f 	blt.w	80267d6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8026698:	42a3      	cmp	r3, r4
 802669a:	f340 809c 	ble.w	80267d6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 802669e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80266a2:	1c62      	adds	r2, r4, #1
 80266a4:	f100 809c 	bmi.w	80267e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80266a8:	4293      	cmp	r3, r2
 80266aa:	f340 8099 	ble.w	80267e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80266ae:	f1b9 0f00 	cmp.w	r9, #0
 80266b2:	f000 8095 	beq.w	80267e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80266b6:	f8be c002 	ldrh.w	ip, [lr, #2]
 80266ba:	3501      	adds	r5, #1
 80266bc:	f100 8094 	bmi.w	80267e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80266c0:	45aa      	cmp	sl, r5
 80266c2:	f340 8091 	ble.w	80267e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80266c6:	2f00      	cmp	r7, #0
 80266c8:	f000 808e 	beq.w	80267e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80266cc:	2c00      	cmp	r4, #0
 80266ce:	f2c0 8089 	blt.w	80267e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80266d2:	42a3      	cmp	r3, r4
 80266d4:	f340 8086 	ble.w	80267e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80266d8:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80266dc:	3401      	adds	r4, #1
 80266de:	f100 8086 	bmi.w	80267ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80266e2:	42a3      	cmp	r3, r4
 80266e4:	f340 8083 	ble.w	80267ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80266e8:	f1b9 0f00 	cmp.w	r9, #0
 80266ec:	d07f      	beq.n	80267ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80266ee:	3301      	adds	r3, #1
 80266f0:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80266f4:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80266f8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80266fc:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8026700:	fb19 fe07 	smulbb	lr, r9, r7
 8026704:	ea44 0808 	orr.w	r8, r4, r8
 8026708:	ea4f 440c 	mov.w	r4, ip, lsl #16
 802670c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8026710:	f1c7 0210 	rsb	r2, r7, #16
 8026714:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8026718:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802671c:	ea44 0c0c 	orr.w	ip, r4, ip
 8026720:	eba2 0209 	sub.w	r2, r2, r9
 8026724:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8026728:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 802672c:	fb04 f40c 	mul.w	r4, r4, ip
 8026730:	fb02 4808 	mla	r8, r2, r8, r4
 8026734:	041a      	lsls	r2, r3, #16
 8026736:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802673a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802673e:	4313      	orrs	r3, r2
 8026740:	042a      	lsls	r2, r5, #16
 8026742:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026746:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802674a:	fb0e 8303 	mla	r3, lr, r3, r8
 802674e:	432a      	orrs	r2, r5
 8026750:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8026754:	fb07 3202 	mla	r2, r7, r2, r3
 8026758:	0d53      	lsrs	r3, r2, #21
 802675a:	0952      	lsrs	r2, r2, #5
 802675c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026760:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026764:	431a      	orrs	r2, r3
 8026766:	b293      	uxth	r3, r2
 8026768:	b2b4      	uxth	r4, r6
 802676a:	1202      	asrs	r2, r0, #8
 802676c:	43f6      	mvns	r6, r6
 802676e:	b2f6      	uxtb	r6, r6
 8026770:	121d      	asrs	r5, r3, #8
 8026772:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8026776:	fb12 f206 	smulbb	r2, r2, r6
 802677a:	10c7      	asrs	r7, r0, #3
 802677c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8026780:	00c0      	lsls	r0, r0, #3
 8026782:	fb05 2504 	mla	r5, r5, r4, r2
 8026786:	b2c0      	uxtb	r0, r0
 8026788:	10da      	asrs	r2, r3, #3
 802678a:	00db      	lsls	r3, r3, #3
 802678c:	b2db      	uxtb	r3, r3
 802678e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8026792:	fb10 f006 	smulbb	r0, r0, r6
 8026796:	b2ad      	uxth	r5, r5
 8026798:	fb03 0004 	mla	r0, r3, r4, r0
 802679c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80267a0:	fb17 f706 	smulbb	r7, r7, r6
 80267a4:	b280      	uxth	r0, r0
 80267a6:	1c6b      	adds	r3, r5, #1
 80267a8:	fb02 7204 	mla	r2, r2, r4, r7
 80267ac:	b292      	uxth	r2, r2
 80267ae:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80267b2:	1c43      	adds	r3, r0, #1
 80267b4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80267b8:	1c50      	adds	r0, r2, #1
 80267ba:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80267be:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80267c2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80267c6:	0952      	lsrs	r2, r2, #5
 80267c8:	432b      	orrs	r3, r5
 80267ca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80267ce:	4313      	orrs	r3, r2
 80267d0:	800b      	strh	r3, [r1, #0]
 80267d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80267d6:	4680      	mov	r8, r0
 80267d8:	e763      	b.n	80266a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80267da:	4684      	mov	ip, r0
 80267dc:	4680      	mov	r8, r0
 80267de:	e76c      	b.n	80266ba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80267e0:	4684      	mov	ip, r0
 80267e2:	e76a      	b.n	80266ba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80267e4:	4605      	mov	r5, r0
 80267e6:	e779      	b.n	80266dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80267e8:	4603      	mov	r3, r0
 80267ea:	4605      	mov	r5, r0
 80267ec:	e782      	b.n	80266f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80267ee:	4603      	mov	r3, r0
 80267f0:	e780      	b.n	80266f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080267f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80267f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80267f6:	b093      	sub	sp, #76	; 0x4c
 80267f8:	461d      	mov	r5, r3
 80267fa:	9210      	str	r2, [sp, #64]	; 0x40
 80267fc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80267fe:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8026802:	920b      	str	r2, [sp, #44]	; 0x2c
 8026804:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8026808:	910a      	str	r1, [sp, #40]	; 0x28
 802680a:	6859      	ldr	r1, [r3, #4]
 802680c:	681b      	ldr	r3, [r3, #0]
 802680e:	9011      	str	r0, [sp, #68]	; 0x44
 8026810:	fb01 2707 	mla	r7, r1, r7, r2
 8026814:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8026818:	9307      	str	r3, [sp, #28]
 802681a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802681c:	681b      	ldr	r3, [r3, #0]
 802681e:	9309      	str	r3, [sp, #36]	; 0x24
 8026820:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8026822:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8026826:	43db      	mvns	r3, r3
 8026828:	b2db      	uxtb	r3, r3
 802682a:	9308      	str	r3, [sp, #32]
 802682c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802682e:	2b00      	cmp	r3, #0
 8026830:	dc03      	bgt.n	802683a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026832:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8026834:	2b00      	cmp	r3, #0
 8026836:	f340 8203 	ble.w	8026c40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802683a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802683c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026840:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026844:	1e48      	subs	r0, r1, #1
 8026846:	f102 3cff 	add.w	ip, r2, #4294967295
 802684a:	2d00      	cmp	r5, #0
 802684c:	f340 80da 	ble.w	8026a04 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8026850:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026854:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026858:	d406      	bmi.n	8026868 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802685a:	4586      	cmp	lr, r0
 802685c:	da04      	bge.n	8026868 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802685e:	2b00      	cmp	r3, #0
 8026860:	db02      	blt.n	8026868 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026862:	4563      	cmp	r3, ip
 8026864:	f2c0 80cf 	blt.w	8026a06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8026868:	f11e 0e01 	adds.w	lr, lr, #1
 802686c:	f100 80c1 	bmi.w	80269f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026870:	4571      	cmp	r1, lr
 8026872:	f2c0 80be 	blt.w	80269f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026876:	3301      	adds	r3, #1
 8026878:	f100 80bb 	bmi.w	80269f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802687c:	429a      	cmp	r2, r3
 802687e:	f2c0 80b8 	blt.w	80269f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026882:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8026886:	46a9      	mov	r9, r5
 8026888:	f1b9 0f00 	cmp.w	r9, #0
 802688c:	f340 80d8 	ble.w	8026a40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8026890:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026892:	1421      	asrs	r1, r4, #16
 8026894:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026898:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802689c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80268a0:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80268a4:	f100 8111 	bmi.w	8026aca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80268a8:	f10e 3aff 	add.w	sl, lr, #4294967295
 80268ac:	4551      	cmp	r1, sl
 80268ae:	f280 810c 	bge.w	8026aca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80268b2:	2800      	cmp	r0, #0
 80268b4:	f2c0 8109 	blt.w	8026aca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80268b8:	f103 3aff 	add.w	sl, r3, #4294967295
 80268bc:	4550      	cmp	r0, sl
 80268be:	f280 8104 	bge.w	8026aca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80268c2:	fa0f f38e 	sxth.w	r3, lr
 80268c6:	fb00 1103 	mla	r1, r0, r3, r1
 80268ca:	9809      	ldr	r0, [sp, #36]	; 0x24
 80268cc:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80268d0:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80268d4:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80268d8:	f1bc 0f00 	cmp.w	ip, #0
 80268dc:	d007      	beq.n	80268ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80268de:	005b      	lsls	r3, r3, #1
 80268e0:	eb0a 0003 	add.w	r0, sl, r3
 80268e4:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80268e8:	930c      	str	r3, [sp, #48]	; 0x30
 80268ea:	8843      	ldrh	r3, [r0, #2]
 80268ec:	930d      	str	r3, [sp, #52]	; 0x34
 80268ee:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80268f2:	fb12 f30c 	smulbb	r3, r2, ip
 80268f6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80268fa:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80268fe:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026902:	10db      	asrs	r3, r3, #3
 8026904:	ea40 000e 	orr.w	r0, r0, lr
 8026908:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802690c:	f1cc 0e10 	rsb	lr, ip, #16
 8026910:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026914:	ebae 0e02 	sub.w	lr, lr, r2
 8026918:	ea4a 0101 	orr.w	r1, sl, r1
 802691c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026920:	4351      	muls	r1, r2
 8026922:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8026924:	9f08      	ldr	r7, [sp, #32]
 8026926:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802692a:	fb0e 1e00 	mla	lr, lr, r0, r1
 802692e:	0410      	lsls	r0, r2, #16
 8026930:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026934:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026938:	4310      	orrs	r0, r2
 802693a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802693c:	990c      	ldr	r1, [sp, #48]	; 0x30
 802693e:	0412      	lsls	r2, r2, #16
 8026940:	fb03 e000 	mla	r0, r3, r0, lr
 8026944:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026948:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 802694c:	ea42 020e 	orr.w	r2, r2, lr
 8026950:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8026954:	fb03 0302 	mla	r3, r3, r2, r0
 8026958:	0d5a      	lsrs	r2, r3, #21
 802695a:	095b      	lsrs	r3, r3, #5
 802695c:	f8b8 0000 	ldrh.w	r0, [r8]
 8026960:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026964:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026968:	4313      	orrs	r3, r2
 802696a:	b29b      	uxth	r3, r3
 802696c:	1201      	asrs	r1, r0, #8
 802696e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8026972:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8026976:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802697a:	fb11 f107 	smulbb	r1, r1, r7
 802697e:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8026982:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8026986:	00c0      	lsls	r0, r0, #3
 8026988:	fb0c 1c02 	mla	ip, ip, r2, r1
 802698c:	b2c0      	uxtb	r0, r0
 802698e:	10d9      	asrs	r1, r3, #3
 8026990:	00db      	lsls	r3, r3, #3
 8026992:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8026996:	b2db      	uxtb	r3, r3
 8026998:	fb10 f007 	smulbb	r0, r0, r7
 802699c:	fa1f fc8c 	uxth.w	ip, ip
 80269a0:	fb03 0302 	mla	r3, r3, r2, r0
 80269a4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80269a8:	fb1e fe07 	smulbb	lr, lr, r7
 80269ac:	fb01 e102 	mla	r1, r1, r2, lr
 80269b0:	b29a      	uxth	r2, r3
 80269b2:	f10c 0301 	add.w	r3, ip, #1
 80269b6:	b289      	uxth	r1, r1
 80269b8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80269bc:	1c53      	adds	r3, r2, #1
 80269be:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80269c2:	1c4a      	adds	r2, r1, #1
 80269c4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80269c8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80269cc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80269d0:	0949      	lsrs	r1, r1, #5
 80269d2:	ea43 030c 	orr.w	r3, r3, ip
 80269d6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80269da:	430b      	orrs	r3, r1
 80269dc:	f8a8 3000 	strh.w	r3, [r8]
 80269e0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80269e2:	441c      	add	r4, r3
 80269e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80269e6:	f108 0802 	add.w	r8, r8, #2
 80269ea:	441e      	add	r6, r3
 80269ec:	f109 39ff 	add.w	r9, r9, #4294967295
 80269f0:	e74a      	b.n	8026888 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80269f2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80269f4:	441c      	add	r4, r3
 80269f6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80269f8:	441e      	add	r6, r3
 80269fa:	9b07      	ldr	r3, [sp, #28]
 80269fc:	3302      	adds	r3, #2
 80269fe:	3d01      	subs	r5, #1
 8026a00:	9307      	str	r3, [sp, #28]
 8026a02:	e722      	b.n	802684a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8026a04:	d022      	beq.n	8026a4c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8026a06:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8026a08:	1e6b      	subs	r3, r5, #1
 8026a0a:	fb00 4003 	mla	r0, r0, r3, r4
 8026a0e:	1400      	asrs	r0, r0, #16
 8026a10:	f53f af37 	bmi.w	8026882 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026a14:	3901      	subs	r1, #1
 8026a16:	4288      	cmp	r0, r1
 8026a18:	f6bf af33 	bge.w	8026882 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026a1c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8026a1e:	fb01 6303 	mla	r3, r1, r3, r6
 8026a22:	141b      	asrs	r3, r3, #16
 8026a24:	f53f af2d 	bmi.w	8026882 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026a28:	3a01      	subs	r2, #1
 8026a2a:	4293      	cmp	r3, r2
 8026a2c:	f6bf af29 	bge.w	8026882 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026a30:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8026a34:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8026a38:	46a8      	mov	r8, r5
 8026a3a:	f1b8 0f00 	cmp.w	r8, #0
 8026a3e:	dc5e      	bgt.n	8026afe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8026a40:	9b07      	ldr	r3, [sp, #28]
 8026a42:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026a46:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8026a4a:	9307      	str	r3, [sp, #28]
 8026a4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026a4e:	2b00      	cmp	r3, #0
 8026a50:	f340 80f6 	ble.w	8026c40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026a54:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026a58:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026a5c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026a60:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026a62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026a66:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026a6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026a6e:	eef0 6a62 	vmov.f32	s13, s5
 8026a72:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026a76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026a7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026a7e:	ee16 4a90 	vmov	r4, s13
 8026a82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026a86:	eef0 6a43 	vmov.f32	s13, s6
 8026a8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026a8e:	ee12 2a90 	vmov	r2, s5
 8026a92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026a96:	fb92 f3f3 	sdiv	r3, r2, r3
 8026a9a:	ee13 2a10 	vmov	r2, s6
 8026a9e:	931f      	str	r3, [sp, #124]	; 0x7c
 8026aa0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026aa2:	fb92 f3f3 	sdiv	r3, r2, r3
 8026aa6:	9320      	str	r3, [sp, #128]	; 0x80
 8026aa8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026aaa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026aac:	3b01      	subs	r3, #1
 8026aae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026ab2:	930a      	str	r3, [sp, #40]	; 0x28
 8026ab4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026ab6:	ee16 6a90 	vmov	r6, s13
 8026aba:	bf14      	ite	ne
 8026abc:	461d      	movne	r5, r3
 8026abe:	4615      	moveq	r5, r2
 8026ac0:	eeb0 3a67 	vmov.f32	s6, s15
 8026ac4:	eef0 2a47 	vmov.f32	s5, s14
 8026ac8:	e6b0      	b.n	802682c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026aca:	f111 0a01 	adds.w	sl, r1, #1
 8026ace:	d487      	bmi.n	80269e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026ad0:	45d6      	cmp	lr, sl
 8026ad2:	db85      	blt.n	80269e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026ad4:	f110 0a01 	adds.w	sl, r0, #1
 8026ad8:	d482      	bmi.n	80269e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026ada:	4553      	cmp	r3, sl
 8026adc:	db80      	blt.n	80269e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026ade:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8026ae0:	9101      	str	r1, [sp, #4]
 8026ae2:	b21b      	sxth	r3, r3
 8026ae4:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8026ae8:	9300      	str	r3, [sp, #0]
 8026aea:	e9cd c704 	strd	ip, r7, [sp, #16]
 8026aee:	fa0f f38e 	sxth.w	r3, lr
 8026af2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026af4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8026af6:	4641      	mov	r1, r8
 8026af8:	f7ff fdb4 	bl	8026664 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8026afc:	e770      	b.n	80269e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026afe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026b00:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8026b02:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026b06:	1430      	asrs	r0, r6, #16
 8026b08:	1423      	asrs	r3, r4, #16
 8026b0a:	fb01 3000 	mla	r0, r1, r0, r3
 8026b0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026b10:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8026b14:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8026b18:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8026b1c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026b20:	8858      	ldrh	r0, [r3, #2]
 8026b22:	f1be 0f00 	cmp.w	lr, #0
 8026b26:	d00b      	beq.n	8026b40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8026b28:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8026b2c:	3901      	subs	r1, #1
 8026b2e:	0049      	lsls	r1, r1, #1
 8026b30:	3102      	adds	r1, #2
 8026b32:	eb03 0b01 	add.w	fp, r3, r1
 8026b36:	5a5b      	ldrh	r3, [r3, r1]
 8026b38:	930e      	str	r3, [sp, #56]	; 0x38
 8026b3a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8026b3e:	930f      	str	r3, [sp, #60]	; 0x3c
 8026b40:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8026b44:	fb12 f30e 	smulbb	r3, r2, lr
 8026b48:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026b4c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8026b50:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8026b54:	10db      	asrs	r3, r3, #3
 8026b56:	ea41 010c 	orr.w	r1, r1, ip
 8026b5a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026b5e:	f1ce 0c10 	rsb	ip, lr, #16
 8026b62:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026b66:	ebac 0c02 	sub.w	ip, ip, r2
 8026b6a:	ea4b 0000 	orr.w	r0, fp, r0
 8026b6e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026b72:	4350      	muls	r0, r2
 8026b74:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026b76:	9f08      	ldr	r7, [sp, #32]
 8026b78:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8026b7c:	fb0c 0c01 	mla	ip, ip, r1, r0
 8026b80:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8026b84:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8026b88:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8026b8a:	980e      	ldr	r0, [sp, #56]	; 0x38
 8026b8c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026b90:	0412      	lsls	r2, r2, #16
 8026b92:	ea4b 0101 	orr.w	r1, fp, r1
 8026b96:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026b9a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026b9e:	fb03 c101 	mla	r1, r3, r1, ip
 8026ba2:	4302      	orrs	r2, r0
 8026ba4:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8026ba8:	fb03 1202 	mla	r2, r3, r2, r1
 8026bac:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8026bb0:	0952      	lsrs	r2, r2, #5
 8026bb2:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8026bb6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8026bba:	f8b9 2000 	ldrh.w	r2, [r9]
 8026bbe:	ea4b 0303 	orr.w	r3, fp, r3
 8026bc2:	b29b      	uxth	r3, r3
 8026bc4:	1211      	asrs	r1, r2, #8
 8026bc6:	1218      	asrs	r0, r3, #8
 8026bc8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026bcc:	fb11 f107 	smulbb	r1, r1, r7
 8026bd0:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8026bd4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026bd8:	00d2      	lsls	r2, r2, #3
 8026bda:	fb00 100a 	mla	r0, r0, sl, r1
 8026bde:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8026be2:	10d9      	asrs	r1, r3, #3
 8026be4:	b2d2      	uxtb	r2, r2
 8026be6:	00db      	lsls	r3, r3, #3
 8026be8:	fb1c fc07 	smulbb	ip, ip, r7
 8026bec:	fb12 f207 	smulbb	r2, r2, r7
 8026bf0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026bf4:	b2db      	uxtb	r3, r3
 8026bf6:	b280      	uxth	r0, r0
 8026bf8:	fb01 c10a 	mla	r1, r1, sl, ip
 8026bfc:	fb03 230a 	mla	r3, r3, sl, r2
 8026c00:	b29b      	uxth	r3, r3
 8026c02:	b289      	uxth	r1, r1
 8026c04:	1c42      	adds	r2, r0, #1
 8026c06:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026c0a:	f101 0c01 	add.w	ip, r1, #1
 8026c0e:	1c5a      	adds	r2, r3, #1
 8026c10:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8026c14:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8026c18:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026c1a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8026c1e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8026c22:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026c26:	4310      	orrs	r0, r2
 8026c28:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026c2c:	441c      	add	r4, r3
 8026c2e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026c30:	ea40 000c 	orr.w	r0, r0, ip
 8026c34:	f829 0b02 	strh.w	r0, [r9], #2
 8026c38:	441e      	add	r6, r3
 8026c3a:	f108 38ff 	add.w	r8, r8, #4294967295
 8026c3e:	e6fc      	b.n	8026a3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8026c40:	b013      	add	sp, #76	; 0x4c
 8026c42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026c46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8026c46:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8026c4a:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8026c4e:	fb0e 4703 	mla	r7, lr, r3, r4
 8026c52:	f1be 0f00 	cmp.w	lr, #0
 8026c56:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8026c5a:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8026c5e:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8026c62:	8808      	ldrh	r0, [r1, #0]
 8026c64:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8026c68:	db60      	blt.n	8026d2c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8026c6a:	45f1      	cmp	r9, lr
 8026c6c:	dd5e      	ble.n	8026d2c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8026c6e:	2c00      	cmp	r4, #0
 8026c70:	db5a      	blt.n	8026d28 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8026c72:	42a3      	cmp	r3, r4
 8026c74:	dd58      	ble.n	8026d28 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8026c76:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8026c7a:	1c62      	adds	r2, r4, #1
 8026c7c:	d459      	bmi.n	8026d32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026c7e:	4293      	cmp	r3, r2
 8026c80:	dd57      	ble.n	8026d32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026c82:	2d00      	cmp	r5, #0
 8026c84:	d055      	beq.n	8026d32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026c86:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8026c8a:	f11e 0e01 	adds.w	lr, lr, #1
 8026c8e:	d454      	bmi.n	8026d3a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026c90:	45f1      	cmp	r9, lr
 8026c92:	dd52      	ble.n	8026d3a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026c94:	2e00      	cmp	r6, #0
 8026c96:	d050      	beq.n	8026d3a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026c98:	2c00      	cmp	r4, #0
 8026c9a:	db4c      	blt.n	8026d36 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8026c9c:	42a3      	cmp	r3, r4
 8026c9e:	dd4a      	ble.n	8026d36 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8026ca0:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8026ca4:	3401      	adds	r4, #1
 8026ca6:	d405      	bmi.n	8026cb4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026ca8:	42a3      	cmp	r3, r4
 8026caa:	dd03      	ble.n	8026cb4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026cac:	b115      	cbz	r5, 8026cb4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026cae:	3301      	adds	r3, #1
 8026cb0:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8026cb4:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8026cb8:	fb15 f406 	smulbb	r4, r5, r6
 8026cbc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026cc0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8026cc4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026cc8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8026ccc:	ea43 0c0c 	orr.w	ip, r3, ip
 8026cd0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8026cd4:	f1c6 0310 	rsb	r3, r6, #16
 8026cd8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8026cdc:	1b5b      	subs	r3, r3, r5
 8026cde:	ea4e 0707 	orr.w	r7, lr, r7
 8026ce2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8026ce6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026cea:	437d      	muls	r5, r7
 8026cec:	fb03 5c0c 	mla	ip, r3, ip, r5
 8026cf0:	0403      	lsls	r3, r0, #16
 8026cf2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026cf6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026cfa:	4318      	orrs	r0, r3
 8026cfc:	0413      	lsls	r3, r2, #16
 8026cfe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026d02:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026d06:	4313      	orrs	r3, r2
 8026d08:	fb04 c000 	mla	r0, r4, r0, ip
 8026d0c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8026d10:	fb06 0003 	mla	r0, r6, r3, r0
 8026d14:	0d43      	lsrs	r3, r0, #21
 8026d16:	0940      	lsrs	r0, r0, #5
 8026d18:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026d1c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026d20:	4318      	orrs	r0, r3
 8026d22:	8008      	strh	r0, [r1, #0]
 8026d24:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8026d28:	4684      	mov	ip, r0
 8026d2a:	e7a6      	b.n	8026c7a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8026d2c:	4607      	mov	r7, r0
 8026d2e:	4684      	mov	ip, r0
 8026d30:	e7ab      	b.n	8026c8a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8026d32:	4607      	mov	r7, r0
 8026d34:	e7a9      	b.n	8026c8a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8026d36:	4602      	mov	r2, r0
 8026d38:	e7b4      	b.n	8026ca4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8026d3a:	4602      	mov	r2, r0
 8026d3c:	e7ba      	b.n	8026cb4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08026d3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026d3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026d42:	b08f      	sub	sp, #60	; 0x3c
 8026d44:	461d      	mov	r5, r3
 8026d46:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026d48:	920c      	str	r2, [sp, #48]	; 0x30
 8026d4a:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8026d4e:	9107      	str	r1, [sp, #28]
 8026d50:	6859      	ldr	r1, [r3, #4]
 8026d52:	681b      	ldr	r3, [r3, #0]
 8026d54:	900d      	str	r0, [sp, #52]	; 0x34
 8026d56:	fb01 2707 	mla	r7, r1, r7, r2
 8026d5a:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8026d5e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026d60:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8026d64:	f8d3 8000 	ldr.w	r8, [r3]
 8026d68:	9b07      	ldr	r3, [sp, #28]
 8026d6a:	2b00      	cmp	r3, #0
 8026d6c:	dc03      	bgt.n	8026d76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8026d6e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026d70:	2b00      	cmp	r3, #0
 8026d72:	f340 8181 	ble.w	8027078 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8026d76:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026d78:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026d7c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026d80:	1e48      	subs	r0, r1, #1
 8026d82:	f102 3cff 	add.w	ip, r2, #4294967295
 8026d86:	2d00      	cmp	r5, #0
 8026d88:	f340 809b 	ble.w	8026ec2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8026d8c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026d90:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026d94:	d406      	bmi.n	8026da4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026d96:	4586      	cmp	lr, r0
 8026d98:	da04      	bge.n	8026da4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026d9a:	2b00      	cmp	r3, #0
 8026d9c:	db02      	blt.n	8026da4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026d9e:	4563      	cmp	r3, ip
 8026da0:	f2c0 8090 	blt.w	8026ec4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8026da4:	f11e 0e01 	adds.w	lr, lr, #1
 8026da8:	f100 8084 	bmi.w	8026eb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026dac:	4571      	cmp	r1, lr
 8026dae:	f2c0 8081 	blt.w	8026eb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026db2:	3301      	adds	r3, #1
 8026db4:	d47e      	bmi.n	8026eb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026db6:	429a      	cmp	r2, r3
 8026db8:	db7c      	blt.n	8026eb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026dba:	46aa      	mov	sl, r5
 8026dbc:	46b9      	mov	r9, r7
 8026dbe:	f1ba 0f00 	cmp.w	sl, #0
 8026dc2:	f340 8099 	ble.w	8026ef8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8026dc6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026dc8:	1421      	asrs	r1, r4, #16
 8026dca:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026dce:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026dd2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026dd6:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8026dda:	f100 80d0 	bmi.w	8026f7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026dde:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026de2:	4559      	cmp	r1, fp
 8026de4:	f280 80cb 	bge.w	8026f7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026de8:	2800      	cmp	r0, #0
 8026dea:	f2c0 80c8 	blt.w	8026f7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026dee:	f103 3bff 	add.w	fp, r3, #4294967295
 8026df2:	4558      	cmp	r0, fp
 8026df4:	f280 80c3 	bge.w	8026f7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026df8:	fa0f fe8e 	sxth.w	lr, lr
 8026dfc:	fb00 110e 	mla	r1, r0, lr, r1
 8026e00:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8026e04:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8026e08:	8841      	ldrh	r1, [r0, #2]
 8026e0a:	f1bc 0f00 	cmp.w	ip, #0
 8026e0e:	d00b      	beq.n	8026e28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8026e10:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8026e14:	3b01      	subs	r3, #1
 8026e16:	005b      	lsls	r3, r3, #1
 8026e18:	3302      	adds	r3, #2
 8026e1a:	eb00 0e03 	add.w	lr, r0, r3
 8026e1e:	5ac3      	ldrh	r3, [r0, r3]
 8026e20:	9308      	str	r3, [sp, #32]
 8026e22:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8026e26:	9309      	str	r3, [sp, #36]	; 0x24
 8026e28:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8026e2c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026e30:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8026e34:	ea40 000b 	orr.w	r0, r0, fp
 8026e38:	fb12 f30c 	smulbb	r3, r2, ip
 8026e3c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026e40:	10db      	asrs	r3, r3, #3
 8026e42:	f1cc 0e10 	rsb	lr, ip, #16
 8026e46:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026e4a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026e4e:	ebae 0e02 	sub.w	lr, lr, r2
 8026e52:	ea4b 0101 	orr.w	r1, fp, r1
 8026e56:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026e5a:	4351      	muls	r1, r2
 8026e5c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026e5e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8026e62:	fb0e 1e00 	mla	lr, lr, r0, r1
 8026e66:	0410      	lsls	r0, r2, #16
 8026e68:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026e6c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026e70:	4310      	orrs	r0, r2
 8026e72:	9a08      	ldr	r2, [sp, #32]
 8026e74:	9908      	ldr	r1, [sp, #32]
 8026e76:	0412      	lsls	r2, r2, #16
 8026e78:	fb03 e000 	mla	r0, r3, r0, lr
 8026e7c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026e80:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8026e84:	ea42 020e 	orr.w	r2, r2, lr
 8026e88:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8026e8c:	fb03 0302 	mla	r3, r3, r2, r0
 8026e90:	0d5a      	lsrs	r2, r3, #21
 8026e92:	095b      	lsrs	r3, r3, #5
 8026e94:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026e98:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026e9c:	4313      	orrs	r3, r2
 8026e9e:	f8a9 3000 	strh.w	r3, [r9]
 8026ea2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026ea4:	441c      	add	r4, r3
 8026ea6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026ea8:	f109 0902 	add.w	r9, r9, #2
 8026eac:	441e      	add	r6, r3
 8026eae:	f10a 3aff 	add.w	sl, sl, #4294967295
 8026eb2:	e784      	b.n	8026dbe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8026eb4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026eb6:	441c      	add	r4, r3
 8026eb8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026eba:	3d01      	subs	r5, #1
 8026ebc:	441e      	add	r6, r3
 8026ebe:	3702      	adds	r7, #2
 8026ec0:	e761      	b.n	8026d86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026ec2:	d01d      	beq.n	8026f00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8026ec4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8026ec6:	1e6b      	subs	r3, r5, #1
 8026ec8:	fb00 4003 	mla	r0, r0, r3, r4
 8026ecc:	1400      	asrs	r0, r0, #16
 8026ece:	f53f af74 	bmi.w	8026dba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026ed2:	3901      	subs	r1, #1
 8026ed4:	4288      	cmp	r0, r1
 8026ed6:	f6bf af70 	bge.w	8026dba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026eda:	991c      	ldr	r1, [sp, #112]	; 0x70
 8026edc:	fb01 6303 	mla	r3, r1, r3, r6
 8026ee0:	141b      	asrs	r3, r3, #16
 8026ee2:	f53f af6a 	bmi.w	8026dba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026ee6:	3a01      	subs	r2, #1
 8026ee8:	4293      	cmp	r3, r2
 8026eea:	f6bf af66 	bge.w	8026dba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026eee:	46a9      	mov	r9, r5
 8026ef0:	46ba      	mov	sl, r7
 8026ef2:	f1b9 0f00 	cmp.w	r9, #0
 8026ef6:	dc5a      	bgt.n	8026fae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8026ef8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026efc:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8026f00:	9b07      	ldr	r3, [sp, #28]
 8026f02:	2b00      	cmp	r3, #0
 8026f04:	f340 80b8 	ble.w	8027078 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8026f08:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026f0c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026f10:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026f14:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026f16:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026f1a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026f1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026f22:	eef0 6a62 	vmov.f32	s13, s5
 8026f26:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026f2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026f2e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026f32:	ee16 4a90 	vmov	r4, s13
 8026f36:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026f3a:	eef0 6a43 	vmov.f32	s13, s6
 8026f3e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026f42:	ee12 2a90 	vmov	r2, s5
 8026f46:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026f4a:	fb92 f3f3 	sdiv	r3, r2, r3
 8026f4e:	ee13 2a10 	vmov	r2, s6
 8026f52:	931b      	str	r3, [sp, #108]	; 0x6c
 8026f54:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026f56:	fb92 f3f3 	sdiv	r3, r2, r3
 8026f5a:	931c      	str	r3, [sp, #112]	; 0x70
 8026f5c:	9b07      	ldr	r3, [sp, #28]
 8026f5e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026f60:	3b01      	subs	r3, #1
 8026f62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026f66:	9307      	str	r3, [sp, #28]
 8026f68:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026f6a:	ee16 6a90 	vmov	r6, s13
 8026f6e:	bf14      	ite	ne
 8026f70:	461d      	movne	r5, r3
 8026f72:	4615      	moveq	r5, r2
 8026f74:	eeb0 3a67 	vmov.f32	s6, s15
 8026f78:	eef0 2a47 	vmov.f32	s5, s14
 8026f7c:	e6f4      	b.n	8026d68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8026f7e:	f111 0b01 	adds.w	fp, r1, #1
 8026f82:	d48e      	bmi.n	8026ea2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026f84:	45de      	cmp	lr, fp
 8026f86:	db8c      	blt.n	8026ea2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026f88:	f110 0b01 	adds.w	fp, r0, #1
 8026f8c:	d489      	bmi.n	8026ea2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026f8e:	455b      	cmp	r3, fp
 8026f90:	db87      	blt.n	8026ea2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026f92:	b21b      	sxth	r3, r3
 8026f94:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8026f98:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8026f9c:	9300      	str	r3, [sp, #0]
 8026f9e:	4642      	mov	r2, r8
 8026fa0:	fa0f f38e 	sxth.w	r3, lr
 8026fa4:	4649      	mov	r1, r9
 8026fa6:	980d      	ldr	r0, [sp, #52]	; 0x34
 8026fa8:	f7ff fe4d 	bl	8026c46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8026fac:	e779      	b.n	8026ea2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026fae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026fb0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8026fb4:	1420      	asrs	r0, r4, #16
 8026fb6:	1431      	asrs	r1, r6, #16
 8026fb8:	fb03 0101 	mla	r1, r3, r1, r0
 8026fbc:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8026fc0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8026fc4:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8026fc8:	8841      	ldrh	r1, [r0, #2]
 8026fca:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026fce:	f1be 0f00 	cmp.w	lr, #0
 8026fd2:	d00b      	beq.n	8026fec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8026fd4:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8026fd8:	3b01      	subs	r3, #1
 8026fda:	005b      	lsls	r3, r3, #1
 8026fdc:	3302      	adds	r3, #2
 8026fde:	eb00 0b03 	add.w	fp, r0, r3
 8026fe2:	5ac3      	ldrh	r3, [r0, r3]
 8026fe4:	930a      	str	r3, [sp, #40]	; 0x28
 8026fe6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8026fea:	930b      	str	r3, [sp, #44]	; 0x2c
 8026fec:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8026ff0:	fb12 f30e 	smulbb	r3, r2, lr
 8026ff4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026ff8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026ffc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8027000:	10db      	asrs	r3, r3, #3
 8027002:	ea40 000c 	orr.w	r0, r0, ip
 8027006:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802700a:	f1ce 0c10 	rsb	ip, lr, #16
 802700e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8027012:	ebac 0c02 	sub.w	ip, ip, r2
 8027016:	ea4b 0101 	orr.w	r1, fp, r1
 802701a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802701e:	4351      	muls	r1, r2
 8027020:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8027022:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8027026:	fb0c 1c00 	mla	ip, ip, r0, r1
 802702a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802702e:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8027032:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027034:	990a      	ldr	r1, [sp, #40]	; 0x28
 8027036:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802703a:	0412      	lsls	r2, r2, #16
 802703c:	ea4b 0000 	orr.w	r0, fp, r0
 8027040:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8027044:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8027048:	fb03 c000 	mla	r0, r3, r0, ip
 802704c:	ea42 0b0b 	orr.w	fp, r2, fp
 8027050:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8027054:	fb03 000b 	mla	r0, r3, fp, r0
 8027058:	0d43      	lsrs	r3, r0, #21
 802705a:	0940      	lsrs	r0, r0, #5
 802705c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027060:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8027064:	4318      	orrs	r0, r3
 8027066:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8027068:	f82a 0b02 	strh.w	r0, [sl], #2
 802706c:	441c      	add	r4, r3
 802706e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027070:	f109 39ff 	add.w	r9, r9, #4294967295
 8027074:	441e      	add	r6, r3
 8027076:	e73c      	b.n	8026ef2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8027078:	b00f      	add	sp, #60	; 0x3c
 802707a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802707e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 802707e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027082:	b085      	sub	sp, #20
 8027084:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8027088:	9102      	str	r1, [sp, #8]
 802708a:	2c00      	cmp	r4, #0
 802708c:	fb04 7103 	mla	r1, r4, r3, r7
 8027090:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8027094:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8027098:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802709c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80270a0:	f2c0 811b 	blt.w	80272da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80270a4:	45a6      	cmp	lr, r4
 80270a6:	f340 8118 	ble.w	80272da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80270aa:	2f00      	cmp	r7, #0
 80270ac:	f2c0 8113 	blt.w	80272d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80270b0:	42bb      	cmp	r3, r7
 80270b2:	f340 8110 	ble.w	80272d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80270b6:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80270ba:	1c7a      	adds	r2, r7, #1
 80270bc:	f100 8110 	bmi.w	80272e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80270c0:	4293      	cmp	r3, r2
 80270c2:	f340 810d 	ble.w	80272e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80270c6:	2e00      	cmp	r6, #0
 80270c8:	f000 810c 	beq.w	80272e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 80270cc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80270d0:	3401      	adds	r4, #1
 80270d2:	f100 810b 	bmi.w	80272ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80270d6:	45a6      	cmp	lr, r4
 80270d8:	f340 8108 	ble.w	80272ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80270dc:	2800      	cmp	r0, #0
 80270de:	f000 8108 	beq.w	80272f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80270e2:	2f00      	cmp	r7, #0
 80270e4:	f2c0 8100 	blt.w	80272e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80270e8:	42bb      	cmp	r3, r7
 80270ea:	f340 80fd 	ble.w	80272e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80270ee:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80270f2:	3701      	adds	r7, #1
 80270f4:	f100 8100 	bmi.w	80272f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80270f8:	42bb      	cmp	r3, r7
 80270fa:	f340 80fd 	ble.w	80272f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80270fe:	2e00      	cmp	r6, #0
 8027100:	f000 80fc 	beq.w	80272fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8027104:	3301      	adds	r3, #1
 8027106:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 802710a:	b2b6      	uxth	r6, r6
 802710c:	b280      	uxth	r0, r0
 802710e:	fb00 fe06 	mul.w	lr, r0, r6
 8027112:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8027116:	0136      	lsls	r6, r6, #4
 8027118:	eba6 070e 	sub.w	r7, r6, lr
 802711c:	b280      	uxth	r0, r0
 802711e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8027122:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8027126:	b2bf      	uxth	r7, r7
 8027128:	1a1b      	subs	r3, r3, r0
 802712a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802712e:	b29b      	uxth	r3, r3
 8027130:	fb0a f607 	mul.w	r6, sl, r7
 8027134:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8027138:	fb0b 6603 	mla	r6, fp, r3, r6
 802713c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8027140:	fb00 6609 	mla	r6, r0, r9, r6
 8027144:	fb0e 6608 	mla	r6, lr, r8, r6
 8027148:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802714c:	9600      	str	r6, [sp, #0]
 802714e:	2e00      	cmp	r6, #0
 8027150:	f000 80be 	beq.w	80272d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8027154:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027158:	fb0b fc0c 	mul.w	ip, fp, ip
 802715c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8027160:	fb0b f505 	mul.w	r5, fp, r5
 8027164:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8027168:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802716c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027170:	44dc      	add	ip, fp
 8027172:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027176:	9501      	str	r5, [sp, #4]
 8027178:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802717c:	9503      	str	r5, [sp, #12]
 802717e:	9d01      	ldr	r5, [sp, #4]
 8027180:	9e02      	ldr	r6, [sp, #8]
 8027182:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8027186:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802718a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802718e:	fb0a fc0c 	mul.w	ip, sl, ip
 8027192:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8027196:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802719a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802719e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80271a2:	4465      	add	r5, ip
 80271a4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80271a8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80271ac:	fb09 fc0c 	mul.w	ip, r9, ip
 80271b0:	fb09 f904 	mul.w	r9, r9, r4
 80271b4:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80271b8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80271bc:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80271c0:	fb08 f404 	mul.w	r4, r8, r4
 80271c4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80271c8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80271cc:	fb08 f802 	mul.w	r8, r8, r2
 80271d0:	fb0a fa01 	mul.w	sl, sl, r1
 80271d4:	0a22      	lsrs	r2, r4, #8
 80271d6:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80271da:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80271de:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80271e2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80271e6:	4414      	add	r4, r2
 80271e8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80271ec:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80271f0:	0a2d      	lsrs	r5, r5, #8
 80271f2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80271f6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80271fa:	9a03      	ldr	r2, [sp, #12]
 80271fc:	8836      	ldrh	r6, [r6, #0]
 80271fe:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027202:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027206:	437d      	muls	r5, r7
 8027208:	4461      	add	r1, ip
 802720a:	0a24      	lsrs	r4, r4, #8
 802720c:	fb02 5503 	mla	r5, r2, r3, r5
 8027210:	0a09      	lsrs	r1, r1, #8
 8027212:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8027216:	fb04 540e 	mla	r4, r4, lr, r5
 802721a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802721e:	fb01 4100 	mla	r1, r1, r0, r4
 8027222:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027226:	0a09      	lsrs	r1, r1, #8
 8027228:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802722c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8027230:	fb07 f70a 	mul.w	r7, r7, sl
 8027234:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027238:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802723c:	fb03 7101 	mla	r1, r3, r1, r7
 8027240:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027244:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8027248:	fb0e 1e08 	mla	lr, lr, r8, r1
 802724c:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8027250:	fb00 e101 	mla	r1, r0, r1, lr
 8027254:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8027258:	9a00      	ldr	r2, [sp, #0]
 802725a:	b287      	uxth	r7, r0
 802725c:	437a      	muls	r2, r7
 802725e:	0a09      	lsrs	r1, r1, #8
 8027260:	1c53      	adds	r3, r2, #1
 8027262:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027266:	4321      	orrs	r1, r4
 8027268:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802726c:	1235      	asrs	r5, r6, #8
 802726e:	0c0a      	lsrs	r2, r1, #16
 8027270:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8027274:	b2db      	uxtb	r3, r3
 8027276:	fb12 f207 	smulbb	r2, r2, r7
 802727a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802727e:	fb05 2503 	mla	r5, r5, r3, r2
 8027282:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8027286:	10f2      	asrs	r2, r6, #3
 8027288:	b2c8      	uxtb	r0, r1
 802728a:	00f6      	lsls	r6, r6, #3
 802728c:	fb14 f407 	smulbb	r4, r4, r7
 8027290:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8027294:	b2f6      	uxtb	r6, r6
 8027296:	fb10 f007 	smulbb	r0, r0, r7
 802729a:	fb02 4203 	mla	r2, r2, r3, r4
 802729e:	b2ad      	uxth	r5, r5
 80272a0:	fb06 0303 	mla	r3, r6, r3, r0
 80272a4:	b299      	uxth	r1, r3
 80272a6:	b294      	uxth	r4, r2
 80272a8:	1c6b      	adds	r3, r5, #1
 80272aa:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80272ae:	1c62      	adds	r2, r4, #1
 80272b0:	1c4b      	adds	r3, r1, #1
 80272b2:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80272b6:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80272ba:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80272be:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80272c2:	0952      	lsrs	r2, r2, #5
 80272c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80272c8:	432b      	orrs	r3, r5
 80272ca:	4313      	orrs	r3, r2
 80272cc:	9a02      	ldr	r2, [sp, #8]
 80272ce:	8013      	strh	r3, [r2, #0]
 80272d0:	b005      	add	sp, #20
 80272d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80272d6:	2500      	movs	r5, #0
 80272d8:	e6ef      	b.n	80270ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80272da:	2100      	movs	r1, #0
 80272dc:	460d      	mov	r5, r1
 80272de:	e6f7      	b.n	80270d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80272e0:	2100      	movs	r1, #0
 80272e2:	e6f5      	b.n	80270d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80272e4:	4631      	mov	r1, r6
 80272e6:	e6f3      	b.n	80270d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80272e8:	2400      	movs	r4, #0
 80272ea:	e702      	b.n	80270f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80272ec:	2200      	movs	r2, #0
 80272ee:	4614      	mov	r4, r2
 80272f0:	e70b      	b.n	802710a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80272f2:	4602      	mov	r2, r0
 80272f4:	4604      	mov	r4, r0
 80272f6:	e708      	b.n	802710a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80272f8:	2200      	movs	r2, #0
 80272fa:	e706      	b.n	802710a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80272fc:	4632      	mov	r2, r6
 80272fe:	e704      	b.n	802710a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08027300 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027304:	b09d      	sub	sp, #116	; 0x74
 8027306:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 802730a:	9219      	str	r2, [sp, #100]	; 0x64
 802730c:	9307      	str	r3, [sp, #28]
 802730e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8027310:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8027314:	931a      	str	r3, [sp, #104]	; 0x68
 8027316:	9117      	str	r1, [sp, #92]	; 0x5c
 8027318:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 802731c:	901b      	str	r0, [sp, #108]	; 0x6c
 802731e:	6850      	ldr	r0, [r2, #4]
 8027320:	6812      	ldr	r2, [r2, #0]
 8027322:	fb00 1303 	mla	r3, r0, r3, r1
 8027326:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802732a:	930a      	str	r3, [sp, #40]	; 0x28
 802732c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802732e:	681b      	ldr	r3, [r3, #0]
 8027330:	9310      	str	r3, [sp, #64]	; 0x40
 8027332:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8027336:	930b      	str	r3, [sp, #44]	; 0x2c
 8027338:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802733a:	2b00      	cmp	r3, #0
 802733c:	dc03      	bgt.n	8027346 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 802733e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8027340:	2b00      	cmp	r3, #0
 8027342:	f340 8375 	ble.w	8027a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8027346:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027348:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802734c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027350:	1e48      	subs	r0, r1, #1
 8027352:	1e57      	subs	r7, r2, #1
 8027354:	9b07      	ldr	r3, [sp, #28]
 8027356:	2b00      	cmp	r3, #0
 8027358:	f340 818e 	ble.w	8027678 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 802735c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027360:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027364:	d406      	bmi.n	8027374 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8027366:	4584      	cmp	ip, r0
 8027368:	da04      	bge.n	8027374 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802736a:	2b00      	cmp	r3, #0
 802736c:	db02      	blt.n	8027374 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802736e:	42bb      	cmp	r3, r7
 8027370:	f2c0 8183 	blt.w	802767a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8027374:	f11c 0c01 	adds.w	ip, ip, #1
 8027378:	f100 8173 	bmi.w	8027662 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802737c:	4561      	cmp	r1, ip
 802737e:	f2c0 8170 	blt.w	8027662 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027382:	3301      	adds	r3, #1
 8027384:	f100 816d 	bmi.w	8027662 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027388:	429a      	cmp	r2, r3
 802738a:	f2c0 816a 	blt.w	8027662 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802738e:	9b07      	ldr	r3, [sp, #28]
 8027390:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8027392:	9318      	str	r3, [sp, #96]	; 0x60
 8027394:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027396:	2b00      	cmp	r3, #0
 8027398:	f340 818c 	ble.w	80276b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 802739c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 802739e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80273a0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80273a4:	689b      	ldr	r3, [r3, #8]
 80273a6:	1422      	asrs	r2, r4, #16
 80273a8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80273ac:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80273b0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80273b4:	f100 81cd 	bmi.w	8027752 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80273b8:	f103 38ff 	add.w	r8, r3, #4294967295
 80273bc:	4542      	cmp	r2, r8
 80273be:	f280 81c8 	bge.w	8027752 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80273c2:	f1bc 0f00 	cmp.w	ip, #0
 80273c6:	f2c0 81c4 	blt.w	8027752 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80273ca:	f10e 38ff 	add.w	r8, lr, #4294967295
 80273ce:	45c4      	cmp	ip, r8
 80273d0:	f280 81bf 	bge.w	8027752 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80273d4:	b21b      	sxth	r3, r3
 80273d6:	fb0c 2203 	mla	r2, ip, r3, r2
 80273da:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80273dc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80273e0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80273e4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80273e8:	2800      	cmp	r0, #0
 80273ea:	f000 81a9 	beq.w	8027740 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80273ee:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80273f2:	950c      	str	r5, [sp, #48]	; 0x30
 80273f4:	0e2d      	lsrs	r5, r5, #24
 80273f6:	9513      	str	r5, [sp, #76]	; 0x4c
 80273f8:	b181      	cbz	r1, 802741c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80273fa:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80273fe:	3b01      	subs	r3, #1
 8027400:	009b      	lsls	r3, r3, #2
 8027402:	3304      	adds	r3, #4
 8027404:	eb08 0c03 	add.w	ip, r8, r3
 8027408:	f858 3003 	ldr.w	r3, [r8, r3]
 802740c:	9308      	str	r3, [sp, #32]
 802740e:	0e1b      	lsrs	r3, r3, #24
 8027410:	9311      	str	r3, [sp, #68]	; 0x44
 8027412:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8027416:	930d      	str	r3, [sp, #52]	; 0x34
 8027418:	0e1b      	lsrs	r3, r3, #24
 802741a:	9314      	str	r3, [sp, #80]	; 0x50
 802741c:	b280      	uxth	r0, r0
 802741e:	b289      	uxth	r1, r1
 8027420:	fb00 f901 	mul.w	r9, r0, r1
 8027424:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8027428:	0100      	lsls	r0, r0, #4
 802742a:	eba0 0809 	sub.w	r8, r0, r9
 802742e:	b289      	uxth	r1, r1
 8027430:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8027434:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8027436:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027438:	fa1f f888 	uxth.w	r8, r8
 802743c:	1a5b      	subs	r3, r3, r1
 802743e:	b29b      	uxth	r3, r3
 8027440:	fb08 f000 	mul.w	r0, r8, r0
 8027444:	fb03 000e 	mla	r0, r3, lr, r0
 8027448:	fb01 0005 	mla	r0, r1, r5, r0
 802744c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802744e:	fb09 0005 	mla	r0, r9, r5, r0
 8027452:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8027456:	2800      	cmp	r0, #0
 8027458:	f000 80fa 	beq.w	8027650 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802745c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8027460:	d01b      	beq.n	802749a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8027462:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8027466:	fb0e fa0a 	mul.w	sl, lr, sl
 802746a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802746e:	fb0e fe02 	mul.w	lr, lr, r2
 8027472:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8027476:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802747a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802747e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8027482:	4452      	add	r2, sl
 8027484:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027488:	0a12      	lsrs	r2, r2, #8
 802748a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802748e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027492:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8027496:	ea42 020c 	orr.w	r2, r2, ip
 802749a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802749c:	2dff      	cmp	r5, #255	; 0xff
 802749e:	d021      	beq.n	80274e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80274a0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80274a2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80274a6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80274a8:	fb05 fb0b 	mul.w	fp, r5, fp
 80274ac:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80274ae:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80274b2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80274b4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80274b8:	fb05 fa0a 	mul.w	sl, r5, sl
 80274bc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80274c0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80274c4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80274c8:	44de      	add	lr, fp
 80274ca:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80274ce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80274d2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80274d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80274da:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80274de:	ea4e 050a 	orr.w	r5, lr, sl
 80274e2:	950c      	str	r5, [sp, #48]	; 0x30
 80274e4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80274e6:	2dff      	cmp	r5, #255	; 0xff
 80274e8:	d021      	beq.n	802752e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80274ea:	9d08      	ldr	r5, [sp, #32]
 80274ec:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80274f0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80274f2:	fb05 fb0b 	mul.w	fp, r5, fp
 80274f6:	9d08      	ldr	r5, [sp, #32]
 80274f8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80274fc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80274fe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027502:	fb05 fa0a 	mul.w	sl, r5, sl
 8027506:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802750a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802750e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027512:	44de      	add	lr, fp
 8027514:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027518:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802751c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027520:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027524:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027528:	ea4e 050a 	orr.w	r5, lr, sl
 802752c:	9508      	str	r5, [sp, #32]
 802752e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027530:	2dff      	cmp	r5, #255	; 0xff
 8027532:	d021      	beq.n	8027578 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8027534:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8027536:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802753a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802753c:	fb05 fb0b 	mul.w	fp, r5, fp
 8027540:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8027542:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027546:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027548:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802754c:	fb05 fa0a 	mul.w	sl, r5, sl
 8027550:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027554:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027558:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802755c:	44de      	add	lr, fp
 802755e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027562:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027566:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802756a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802756e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027572:	ea4e 050a 	orr.w	r5, lr, sl
 8027576:	950d      	str	r5, [sp, #52]	; 0x34
 8027578:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802757a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802757e:	9d08      	ldr	r5, [sp, #32]
 8027580:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8027584:	fb08 fc0c 	mul.w	ip, r8, ip
 8027588:	fb03 cc0e 	mla	ip, r3, lr, ip
 802758c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027590:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8027592:	fb01 cc0e 	mla	ip, r1, lr, ip
 8027596:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802759a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802759c:	fb09 cc0e 	mla	ip, r9, lr, ip
 80275a0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80275a4:	fb08 f80e 	mul.w	r8, r8, lr
 80275a8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80275ac:	fb03 8202 	mla	r2, r3, r2, r8
 80275b0:	9b08      	ldr	r3, [sp, #32]
 80275b2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80275b4:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80275b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80275ba:	fb01 220a 	mla	r2, r1, sl, r2
 80275be:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80275c2:	fb09 2901 	mla	r9, r9, r1, r2
 80275c6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80275c8:	883b      	ldrh	r3, [r7, #0]
 80275ca:	4342      	muls	r2, r0
 80275cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80275d0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80275d4:	1c50      	adds	r0, r2, #1
 80275d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80275da:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80275de:	ea4c 0c09 	orr.w	ip, ip, r9
 80275e2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80275e6:	1219      	asrs	r1, r3, #8
 80275e8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80275ec:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80275f0:	b2c0      	uxtb	r0, r0
 80275f2:	fb12 f205 	smulbb	r2, r2, r5
 80275f6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80275fa:	fb01 2100 	mla	r1, r1, r0, r2
 80275fe:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8027602:	10da      	asrs	r2, r3, #3
 8027604:	fa5f fc8c 	uxtb.w	ip, ip
 8027608:	00db      	lsls	r3, r3, #3
 802760a:	fb1c fc05 	smulbb	ip, ip, r5
 802760e:	b2db      	uxtb	r3, r3
 8027610:	b289      	uxth	r1, r1
 8027612:	fb03 c300 	mla	r3, r3, r0, ip
 8027616:	fa1f fc83 	uxth.w	ip, r3
 802761a:	1c4b      	adds	r3, r1, #1
 802761c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8027620:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8027624:	fb1e fe05 	smulbb	lr, lr, r5
 8027628:	f10c 0301 	add.w	r3, ip, #1
 802762c:	fb02 e200 	mla	r2, r2, r0, lr
 8027630:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8027634:	b292      	uxth	r2, r2
 8027636:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802763a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802763e:	430b      	orrs	r3, r1
 8027640:	1c51      	adds	r1, r2, #1
 8027642:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8027646:	0952      	lsrs	r2, r2, #5
 8027648:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802764c:	4313      	orrs	r3, r2
 802764e:	803b      	strh	r3, [r7, #0]
 8027650:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8027652:	441c      	add	r4, r3
 8027654:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8027656:	441e      	add	r6, r3
 8027658:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802765a:	3b01      	subs	r3, #1
 802765c:	3702      	adds	r7, #2
 802765e:	9318      	str	r3, [sp, #96]	; 0x60
 8027660:	e698      	b.n	8027394 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8027662:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8027664:	441c      	add	r4, r3
 8027666:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8027668:	441e      	add	r6, r3
 802766a:	9b07      	ldr	r3, [sp, #28]
 802766c:	3b01      	subs	r3, #1
 802766e:	9307      	str	r3, [sp, #28]
 8027670:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027672:	3302      	adds	r3, #2
 8027674:	930a      	str	r3, [sp, #40]	; 0x28
 8027676:	e66d      	b.n	8027354 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8027678:	d023      	beq.n	80276c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802767a:	9b07      	ldr	r3, [sp, #28]
 802767c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 802767e:	3b01      	subs	r3, #1
 8027680:	fb00 4003 	mla	r0, r0, r3, r4
 8027684:	1400      	asrs	r0, r0, #16
 8027686:	f53f ae82 	bmi.w	802738e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802768a:	3901      	subs	r1, #1
 802768c:	4288      	cmp	r0, r1
 802768e:	f6bf ae7e 	bge.w	802738e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027692:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8027694:	fb01 6303 	mla	r3, r1, r3, r6
 8027698:	141b      	asrs	r3, r3, #16
 802769a:	f53f ae78 	bmi.w	802738e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802769e:	3a01      	subs	r2, #1
 80276a0:	4293      	cmp	r3, r2
 80276a2:	f6bf ae74 	bge.w	802738e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80276a6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80276aa:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80276ae:	f1bb 0f00 	cmp.w	fp, #0
 80276b2:	dc6c      	bgt.n	802778e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80276b4:	9b07      	ldr	r3, [sp, #28]
 80276b6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80276ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80276bc:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80276c0:	930a      	str	r3, [sp, #40]	; 0x28
 80276c2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80276c4:	2b00      	cmp	r3, #0
 80276c6:	f340 81b3 	ble.w	8027a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80276ca:	ee30 0a04 	vadd.f32	s0, s0, s8
 80276ce:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80276d2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80276d6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80276d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80276dc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80276e0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80276e4:	eef0 6a62 	vmov.f32	s13, s5
 80276e8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80276ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80276f0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80276f4:	ee16 4a90 	vmov	r4, s13
 80276f8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80276fc:	eef0 6a43 	vmov.f32	s13, s6
 8027700:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8027704:	ee12 2a90 	vmov	r2, s5
 8027708:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802770c:	fb92 f3f3 	sdiv	r3, r2, r3
 8027710:	ee13 2a10 	vmov	r2, s6
 8027714:	9329      	str	r3, [sp, #164]	; 0xa4
 8027716:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027718:	fb92 f3f3 	sdiv	r3, r2, r3
 802771c:	932a      	str	r3, [sp, #168]	; 0xa8
 802771e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027720:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8027722:	3b01      	subs	r3, #1
 8027724:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027728:	9317      	str	r3, [sp, #92]	; 0x5c
 802772a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802772c:	bf08      	it	eq
 802772e:	4613      	moveq	r3, r2
 8027730:	ee16 6a90 	vmov	r6, s13
 8027734:	9307      	str	r3, [sp, #28]
 8027736:	eeb0 3a67 	vmov.f32	s6, s15
 802773a:	eef0 2a47 	vmov.f32	s5, s14
 802773e:	e5fb      	b.n	8027338 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8027740:	2900      	cmp	r1, #0
 8027742:	f43f ae6b 	beq.w	802741c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8027746:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802774a:	9308      	str	r3, [sp, #32]
 802774c:	0e1b      	lsrs	r3, r3, #24
 802774e:	9311      	str	r3, [sp, #68]	; 0x44
 8027750:	e664      	b.n	802741c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8027752:	f112 0801 	adds.w	r8, r2, #1
 8027756:	f53f af7b 	bmi.w	8027650 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802775a:	4543      	cmp	r3, r8
 802775c:	f6ff af78 	blt.w	8027650 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027760:	f11c 0801 	adds.w	r8, ip, #1
 8027764:	f53f af74 	bmi.w	8027650 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027768:	45c6      	cmp	lr, r8
 802776a:	f6ff af71 	blt.w	8027650 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802776e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8027770:	9201      	str	r2, [sp, #4]
 8027772:	fa0f f28e 	sxth.w	r2, lr
 8027776:	e9cd 1504 	strd	r1, r5, [sp, #16]
 802777a:	e9cd c002 	strd	ip, r0, [sp, #8]
 802777e:	9200      	str	r2, [sp, #0]
 8027780:	b21b      	sxth	r3, r3
 8027782:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8027784:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8027786:	4639      	mov	r1, r7
 8027788:	f7ff fc79 	bl	802707e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 802778c:	e760      	b.n	8027650 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802778e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027790:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027792:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027796:	1427      	asrs	r7, r4, #16
 8027798:	1433      	asrs	r3, r6, #16
 802779a:	fb01 7303 	mla	r3, r1, r3, r7
 802779e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80277a2:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80277a6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80277aa:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80277ae:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80277b2:	2a00      	cmp	r2, #0
 80277b4:	f000 8133 	beq.w	8027a1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80277b8:	687d      	ldr	r5, [r7, #4]
 80277ba:	950e      	str	r5, [sp, #56]	; 0x38
 80277bc:	0e2d      	lsrs	r5, r5, #24
 80277be:	9515      	str	r5, [sp, #84]	; 0x54
 80277c0:	b178      	cbz	r0, 80277e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80277c2:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80277c6:	3901      	subs	r1, #1
 80277c8:	0089      	lsls	r1, r1, #2
 80277ca:	3104      	adds	r1, #4
 80277cc:	eb07 0e01 	add.w	lr, r7, r1
 80277d0:	5879      	ldr	r1, [r7, r1]
 80277d2:	9109      	str	r1, [sp, #36]	; 0x24
 80277d4:	0e09      	lsrs	r1, r1, #24
 80277d6:	9112      	str	r1, [sp, #72]	; 0x48
 80277d8:	f8de 1004 	ldr.w	r1, [lr, #4]
 80277dc:	910f      	str	r1, [sp, #60]	; 0x3c
 80277de:	0e09      	lsrs	r1, r1, #24
 80277e0:	9116      	str	r1, [sp, #88]	; 0x58
 80277e2:	b292      	uxth	r2, r2
 80277e4:	b280      	uxth	r0, r0
 80277e6:	fb02 f800 	mul.w	r8, r2, r0
 80277ea:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80277ee:	0112      	lsls	r2, r2, #4
 80277f0:	eba2 0e08 	sub.w	lr, r2, r8
 80277f4:	b280      	uxth	r0, r0
 80277f6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80277fa:	9915      	ldr	r1, [sp, #84]	; 0x54
 80277fc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80277fe:	fa1f fe8e 	uxth.w	lr, lr
 8027802:	1a12      	subs	r2, r2, r0
 8027804:	b292      	uxth	r2, r2
 8027806:	fb0e f101 	mul.w	r1, lr, r1
 802780a:	fb02 110c 	mla	r1, r2, ip, r1
 802780e:	fb00 1105 	mla	r1, r0, r5, r1
 8027812:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027814:	fb08 1105 	mla	r1, r8, r5, r1
 8027818:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802781c:	2900      	cmp	r1, #0
 802781e:	f000 80f5 	beq.w	8027a0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8027822:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8027826:	d019      	beq.n	802785c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8027828:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802782c:	fb0c fa0a 	mul.w	sl, ip, sl
 8027830:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8027834:	fb0c fc03 	mul.w	ip, ip, r3
 8027838:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802783c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027840:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027844:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8027848:	4453      	add	r3, sl
 802784a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802784e:	0a1b      	lsrs	r3, r3, #8
 8027850:	0a3f      	lsrs	r7, r7, #8
 8027852:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027856:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802785a:	433b      	orrs	r3, r7
 802785c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802785e:	2dff      	cmp	r5, #255	; 0xff
 8027860:	d020      	beq.n	80278a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8027862:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027864:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027868:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802786a:	436f      	muls	r7, r5
 802786c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802786e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027872:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027874:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027878:	fb05 fa0a 	mul.w	sl, r5, sl
 802787c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027880:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027884:	44bc      	add	ip, r7
 8027886:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802788a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802788e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027892:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027896:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802789a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802789e:	ea4c 050a 	orr.w	r5, ip, sl
 80278a2:	950e      	str	r5, [sp, #56]	; 0x38
 80278a4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80278a6:	2dff      	cmp	r5, #255	; 0xff
 80278a8:	d020      	beq.n	80278ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80278aa:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80278ac:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80278b0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80278b2:	436f      	muls	r7, r5
 80278b4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80278b6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80278ba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80278bc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80278c0:	fb05 fa0a 	mul.w	sl, r5, sl
 80278c4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80278c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80278cc:	44bc      	add	ip, r7
 80278ce:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80278d2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80278d6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80278da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80278de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80278e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80278e6:	ea4c 050a 	orr.w	r5, ip, sl
 80278ea:	9509      	str	r5, [sp, #36]	; 0x24
 80278ec:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80278ee:	2dff      	cmp	r5, #255	; 0xff
 80278f0:	d020      	beq.n	8027934 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80278f2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80278f4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80278f8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80278fa:	436f      	muls	r7, r5
 80278fc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80278fe:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027902:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027904:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027908:	fb05 fa0a 	mul.w	sl, r5, sl
 802790c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027910:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027914:	44bc      	add	ip, r7
 8027916:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802791a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802791e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027922:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027926:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802792a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802792e:	ea4c 050a 	orr.w	r5, ip, sl
 8027932:	950f      	str	r5, [sp, #60]	; 0x3c
 8027934:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027936:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802793a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802793c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8027940:	fb0e f707 	mul.w	r7, lr, r7
 8027944:	fb02 770c 	mla	r7, r2, ip, r7
 8027948:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802794c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802794e:	fb00 770c 	mla	r7, r0, ip, r7
 8027952:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027956:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027958:	fb08 770c 	mla	r7, r8, ip, r7
 802795c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8027960:	fb0e fe0c 	mul.w	lr, lr, ip
 8027964:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8027968:	fb02 e303 	mla	r3, r2, r3, lr
 802796c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802796e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027970:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8027974:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8027976:	fb00 330a 	mla	r3, r0, sl, r3
 802797a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 802797e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8027982:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8027984:	f8b9 0000 	ldrh.w	r0, [r9]
 8027988:	4359      	muls	r1, r3
 802798a:	0a3f      	lsrs	r7, r7, #8
 802798c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027990:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8027994:	1c4b      	adds	r3, r1, #1
 8027996:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802799a:	ea47 070c 	orr.w	r7, r7, ip
 802799e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80279a2:	1202      	asrs	r2, r0, #8
 80279a4:	0c3b      	lsrs	r3, r7, #16
 80279a6:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80279aa:	b2c9      	uxtb	r1, r1
 80279ac:	fb13 f305 	smulbb	r3, r3, r5
 80279b0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80279b4:	fb02 3201 	mla	r2, r2, r1, r3
 80279b8:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80279bc:	10c3      	asrs	r3, r0, #3
 80279be:	b2ff      	uxtb	r7, r7
 80279c0:	00c0      	lsls	r0, r0, #3
 80279c2:	b2c0      	uxtb	r0, r0
 80279c4:	fb17 f705 	smulbb	r7, r7, r5
 80279c8:	fb00 7001 	mla	r0, r0, r1, r7
 80279cc:	b292      	uxth	r2, r2
 80279ce:	fb1c fc05 	smulbb	ip, ip, r5
 80279d2:	b280      	uxth	r0, r0
 80279d4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80279d8:	fb03 c301 	mla	r3, r3, r1, ip
 80279dc:	1c51      	adds	r1, r2, #1
 80279de:	f100 0c01 	add.w	ip, r0, #1
 80279e2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80279e6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80279ea:	b29b      	uxth	r3, r3
 80279ec:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80279f0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80279f4:	ea4c 0202 	orr.w	r2, ip, r2
 80279f8:	f103 0c01 	add.w	ip, r3, #1
 80279fc:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8027a00:	095b      	lsrs	r3, r3, #5
 8027a02:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027a06:	431a      	orrs	r2, r3
 8027a08:	f8a9 2000 	strh.w	r2, [r9]
 8027a0c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8027a0e:	441c      	add	r4, r3
 8027a10:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8027a12:	f109 0902 	add.w	r9, r9, #2
 8027a16:	441e      	add	r6, r3
 8027a18:	f10b 3bff 	add.w	fp, fp, #4294967295
 8027a1c:	e647      	b.n	80276ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8027a1e:	2800      	cmp	r0, #0
 8027a20:	f43f aedf 	beq.w	80277e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8027a24:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8027a28:	9109      	str	r1, [sp, #36]	; 0x24
 8027a2a:	0e09      	lsrs	r1, r1, #24
 8027a2c:	9112      	str	r1, [sp, #72]	; 0x48
 8027a2e:	e6d8      	b.n	80277e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8027a30:	b01d      	add	sp, #116	; 0x74
 8027a32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08027a36 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8027a36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027a3a:	b085      	sub	sp, #20
 8027a3c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8027a40:	9102      	str	r1, [sp, #8]
 8027a42:	2c00      	cmp	r4, #0
 8027a44:	fb04 7103 	mla	r1, r4, r3, r7
 8027a48:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8027a4c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8027a50:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8027a54:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8027a58:	f2c0 810c 	blt.w	8027c74 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8027a5c:	45a6      	cmp	lr, r4
 8027a5e:	f340 8109 	ble.w	8027c74 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8027a62:	2f00      	cmp	r7, #0
 8027a64:	f2c0 8104 	blt.w	8027c70 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027a68:	42bb      	cmp	r3, r7
 8027a6a:	f340 8101 	ble.w	8027c70 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027a6e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8027a72:	1c7a      	adds	r2, r7, #1
 8027a74:	f100 8101 	bmi.w	8027c7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027a78:	4293      	cmp	r3, r2
 8027a7a:	f340 80fe 	ble.w	8027c7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027a7e:	2e00      	cmp	r6, #0
 8027a80:	f000 80fd 	beq.w	8027c7e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8027a84:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8027a88:	3401      	adds	r4, #1
 8027a8a:	f100 80fc 	bmi.w	8027c86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8027a8e:	45a6      	cmp	lr, r4
 8027a90:	f340 80f9 	ble.w	8027c86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8027a94:	2800      	cmp	r0, #0
 8027a96:	f000 80f9 	beq.w	8027c8c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8027a9a:	2f00      	cmp	r7, #0
 8027a9c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8027aa0:	f2c0 80ef 	blt.w	8027c82 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8027aa4:	42bb      	cmp	r3, r7
 8027aa6:	f340 80ec 	ble.w	8027c82 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8027aaa:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8027aae:	3701      	adds	r7, #1
 8027ab0:	f100 80ef 	bmi.w	8027c92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8027ab4:	42bb      	cmp	r3, r7
 8027ab6:	f340 80ec 	ble.w	8027c92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8027aba:	2e00      	cmp	r6, #0
 8027abc:	f000 80eb 	beq.w	8027c96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8027ac0:	6852      	ldr	r2, [r2, #4]
 8027ac2:	b2b6      	uxth	r6, r6
 8027ac4:	b280      	uxth	r0, r0
 8027ac6:	fb00 fe06 	mul.w	lr, r0, r6
 8027aca:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8027ace:	0136      	lsls	r6, r6, #4
 8027ad0:	eba6 070e 	sub.w	r7, r6, lr
 8027ad4:	b280      	uxth	r0, r0
 8027ad6:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8027ada:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8027ade:	b2bf      	uxth	r7, r7
 8027ae0:	1a1b      	subs	r3, r3, r0
 8027ae2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8027ae6:	b29b      	uxth	r3, r3
 8027ae8:	fb07 f60a 	mul.w	r6, r7, sl
 8027aec:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8027af0:	fb0b 6603 	mla	r6, fp, r3, r6
 8027af4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8027af8:	fb00 6609 	mla	r6, r0, r9, r6
 8027afc:	fb0e 6608 	mla	r6, lr, r8, r6
 8027b00:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8027b04:	9600      	str	r6, [sp, #0]
 8027b06:	2e00      	cmp	r6, #0
 8027b08:	f000 80af 	beq.w	8027c6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8027b0c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027b10:	fb0b fc0c 	mul.w	ip, fp, ip
 8027b14:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8027b18:	fb0b f505 	mul.w	r5, fp, r5
 8027b1c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8027b20:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8027b24:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027b28:	44dc      	add	ip, fp
 8027b2a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027b2e:	9501      	str	r5, [sp, #4]
 8027b30:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8027b34:	9503      	str	r5, [sp, #12]
 8027b36:	9d01      	ldr	r5, [sp, #4]
 8027b38:	9e02      	ldr	r6, [sp, #8]
 8027b3a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8027b3e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8027b42:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8027b46:	fb0a fc0c 	mul.w	ip, sl, ip
 8027b4a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8027b4e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8027b52:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027b56:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027b5a:	4465      	add	r5, ip
 8027b5c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8027b60:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8027b64:	fb09 fc0c 	mul.w	ip, r9, ip
 8027b68:	fb09 f904 	mul.w	r9, r9, r4
 8027b6c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8027b70:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8027b74:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8027b78:	fb08 f404 	mul.w	r4, r8, r4
 8027b7c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027b80:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027b84:	fb08 f802 	mul.w	r8, r8, r2
 8027b88:	fb0a fa01 	mul.w	sl, sl, r1
 8027b8c:	0a22      	lsrs	r2, r4, #8
 8027b8e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8027b92:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027b96:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8027b9a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8027b9e:	4414      	add	r4, r2
 8027ba0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8027ba4:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8027ba8:	0a2d      	lsrs	r5, r5, #8
 8027baa:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8027bae:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027bb2:	9a03      	ldr	r2, [sp, #12]
 8027bb4:	8836      	ldrh	r6, [r6, #0]
 8027bb6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027bba:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027bbe:	437d      	muls	r5, r7
 8027bc0:	4461      	add	r1, ip
 8027bc2:	0a24      	lsrs	r4, r4, #8
 8027bc4:	fb02 5503 	mla	r5, r2, r3, r5
 8027bc8:	0a09      	lsrs	r1, r1, #8
 8027bca:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8027bce:	fb04 540e 	mla	r4, r4, lr, r5
 8027bd2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027bd6:	fb01 4100 	mla	r1, r1, r0, r4
 8027bda:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027bde:	0a09      	lsrs	r1, r1, #8
 8027be0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027be4:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8027be8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027bec:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8027bf0:	fb07 f70a 	mul.w	r7, r7, sl
 8027bf4:	fb03 7101 	mla	r1, r3, r1, r7
 8027bf8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027bfc:	9b00      	ldr	r3, [sp, #0]
 8027bfe:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8027c02:	fb0e 1e08 	mla	lr, lr, r8, r1
 8027c06:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8027c0a:	fb00 e101 	mla	r1, r0, r1, lr
 8027c0e:	43da      	mvns	r2, r3
 8027c10:	1233      	asrs	r3, r6, #8
 8027c12:	b2d2      	uxtb	r2, r2
 8027c14:	10f0      	asrs	r0, r6, #3
 8027c16:	0a09      	lsrs	r1, r1, #8
 8027c18:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8027c1c:	00f6      	lsls	r6, r6, #3
 8027c1e:	4353      	muls	r3, r2
 8027c20:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027c24:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8027c28:	b2f6      	uxtb	r6, r6
 8027c2a:	4321      	orrs	r1, r4
 8027c2c:	4350      	muls	r0, r2
 8027c2e:	4356      	muls	r6, r2
 8027c30:	1c5a      	adds	r2, r3, #1
 8027c32:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8027c36:	0c0b      	lsrs	r3, r1, #16
 8027c38:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027c3c:	1c42      	adds	r2, r0, #1
 8027c3e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027c42:	0a0a      	lsrs	r2, r1, #8
 8027c44:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8027c48:	021b      	lsls	r3, r3, #8
 8027c4a:	00d2      	lsls	r2, r2, #3
 8027c4c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027c50:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8027c54:	4313      	orrs	r3, r2
 8027c56:	1c72      	adds	r2, r6, #1
 8027c58:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8027c5c:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8027c60:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8027c64:	4319      	orrs	r1, r3
 8027c66:	9b02      	ldr	r3, [sp, #8]
 8027c68:	8019      	strh	r1, [r3, #0]
 8027c6a:	b005      	add	sp, #20
 8027c6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027c70:	2500      	movs	r5, #0
 8027c72:	e6fe      	b.n	8027a72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8027c74:	2100      	movs	r1, #0
 8027c76:	460d      	mov	r5, r1
 8027c78:	e706      	b.n	8027a88 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027c7a:	2100      	movs	r1, #0
 8027c7c:	e704      	b.n	8027a88 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027c7e:	4631      	mov	r1, r6
 8027c80:	e702      	b.n	8027a88 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027c82:	2400      	movs	r4, #0
 8027c84:	e713      	b.n	8027aae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8027c86:	2200      	movs	r2, #0
 8027c88:	4614      	mov	r4, r2
 8027c8a:	e71a      	b.n	8027ac2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027c8c:	4602      	mov	r2, r0
 8027c8e:	4604      	mov	r4, r0
 8027c90:	e717      	b.n	8027ac2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027c92:	2200      	movs	r2, #0
 8027c94:	e715      	b.n	8027ac2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027c96:	4632      	mov	r2, r6
 8027c98:	e713      	b.n	8027ac2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08027c9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027c9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027ca0:	b09b      	sub	sp, #108	; 0x6c
 8027ca2:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8027ca6:	9218      	str	r2, [sp, #96]	; 0x60
 8027ca8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8027caa:	9116      	str	r1, [sp, #88]	; 0x58
 8027cac:	9307      	str	r3, [sp, #28]
 8027cae:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8027cb2:	9019      	str	r0, [sp, #100]	; 0x64
 8027cb4:	6850      	ldr	r0, [r2, #4]
 8027cb6:	6812      	ldr	r2, [r2, #0]
 8027cb8:	fb00 1303 	mla	r3, r0, r3, r1
 8027cbc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027cc0:	930a      	str	r3, [sp, #40]	; 0x28
 8027cc2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027cc4:	681b      	ldr	r3, [r3, #0]
 8027cc6:	930f      	str	r3, [sp, #60]	; 0x3c
 8027cc8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027cca:	2b00      	cmp	r3, #0
 8027ccc:	dc03      	bgt.n	8027cd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8027cce:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027cd0:	2b00      	cmp	r3, #0
 8027cd2:	f340 8386 	ble.w	80283e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8027cd6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027cd8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027cdc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027ce0:	1e48      	subs	r0, r1, #1
 8027ce2:	1e57      	subs	r7, r2, #1
 8027ce4:	9b07      	ldr	r3, [sp, #28]
 8027ce6:	2b00      	cmp	r3, #0
 8027ce8:	f340 8166 	ble.w	8027fb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8027cec:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027cf0:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027cf4:	d406      	bmi.n	8027d04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027cf6:	4584      	cmp	ip, r0
 8027cf8:	da04      	bge.n	8027d04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027cfa:	2b00      	cmp	r3, #0
 8027cfc:	db02      	blt.n	8027d04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027cfe:	42bb      	cmp	r3, r7
 8027d00:	f2c0 815b 	blt.w	8027fba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8027d04:	f11c 0c01 	adds.w	ip, ip, #1
 8027d08:	f100 814b 	bmi.w	8027fa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027d0c:	4561      	cmp	r1, ip
 8027d0e:	f2c0 8148 	blt.w	8027fa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027d12:	3301      	adds	r3, #1
 8027d14:	f100 8145 	bmi.w	8027fa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027d18:	429a      	cmp	r2, r3
 8027d1a:	f2c0 8142 	blt.w	8027fa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027d1e:	9b07      	ldr	r3, [sp, #28]
 8027d20:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8027d22:	9317      	str	r3, [sp, #92]	; 0x5c
 8027d24:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027d26:	2b00      	cmp	r3, #0
 8027d28:	f340 8165 	ble.w	8027ff6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027d2c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8027d2e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027d30:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8027d34:	689b      	ldr	r3, [r3, #8]
 8027d36:	1422      	asrs	r2, r4, #16
 8027d38:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8027d3c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8027d40:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027d44:	f100 81d5 	bmi.w	80280f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027d48:	f103 38ff 	add.w	r8, r3, #4294967295
 8027d4c:	4542      	cmp	r2, r8
 8027d4e:	f280 81d0 	bge.w	80280f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027d52:	f1bc 0f00 	cmp.w	ip, #0
 8027d56:	f2c0 81cc 	blt.w	80280f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027d5a:	f10e 38ff 	add.w	r8, lr, #4294967295
 8027d5e:	45c4      	cmp	ip, r8
 8027d60:	f280 81c7 	bge.w	80280f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027d64:	b21b      	sxth	r3, r3
 8027d66:	fb0c 2203 	mla	r2, ip, r3, r2
 8027d6a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027d6c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8027d70:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8027d74:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8027d78:	2900      	cmp	r1, #0
 8027d7a:	f000 8182 	beq.w	8028082 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8027d7e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8027d82:	950b      	str	r5, [sp, #44]	; 0x2c
 8027d84:	0e2d      	lsrs	r5, r5, #24
 8027d86:	9512      	str	r5, [sp, #72]	; 0x48
 8027d88:	b180      	cbz	r0, 8027dac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027d8a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8027d8e:	3b01      	subs	r3, #1
 8027d90:	009b      	lsls	r3, r3, #2
 8027d92:	3304      	adds	r3, #4
 8027d94:	eb08 0c03 	add.w	ip, r8, r3
 8027d98:	f858 3003 	ldr.w	r3, [r8, r3]
 8027d9c:	9308      	str	r3, [sp, #32]
 8027d9e:	0e1b      	lsrs	r3, r3, #24
 8027da0:	9310      	str	r3, [sp, #64]	; 0x40
 8027da2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8027da6:	930c      	str	r3, [sp, #48]	; 0x30
 8027da8:	0e1b      	lsrs	r3, r3, #24
 8027daa:	9313      	str	r3, [sp, #76]	; 0x4c
 8027dac:	b289      	uxth	r1, r1
 8027dae:	b280      	uxth	r0, r0
 8027db0:	fb01 f900 	mul.w	r9, r1, r0
 8027db4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8027db8:	0109      	lsls	r1, r1, #4
 8027dba:	eba1 0809 	sub.w	r8, r1, r9
 8027dbe:	b280      	uxth	r0, r0
 8027dc0:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8027dc4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8027dc6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027dc8:	fa1f f888 	uxth.w	r8, r8
 8027dcc:	1a09      	subs	r1, r1, r0
 8027dce:	b289      	uxth	r1, r1
 8027dd0:	fb08 f303 	mul.w	r3, r8, r3
 8027dd4:	fb01 330e 	mla	r3, r1, lr, r3
 8027dd8:	fb00 3305 	mla	r3, r0, r5, r3
 8027ddc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027dde:	fb09 3305 	mla	r3, r9, r5, r3
 8027de2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027de6:	2b00      	cmp	r3, #0
 8027de8:	f000 80d2 	beq.w	8027f90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027dec:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8027df0:	d01b      	beq.n	8027e2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8027df2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8027df6:	fb0e fa0a 	mul.w	sl, lr, sl
 8027dfa:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027dfe:	fb0e fe02 	mul.w	lr, lr, r2
 8027e02:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8027e06:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027e0a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027e0e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8027e12:	4452      	add	r2, sl
 8027e14:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027e18:	0a12      	lsrs	r2, r2, #8
 8027e1a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027e1e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027e22:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8027e26:	ea42 020c 	orr.w	r2, r2, ip
 8027e2a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027e2c:	2dff      	cmp	r5, #255	; 0xff
 8027e2e:	d021      	beq.n	8027e74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8027e30:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027e32:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027e36:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027e38:	fb05 fb0b 	mul.w	fp, r5, fp
 8027e3c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027e3e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027e42:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027e44:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027e48:	fb05 fa0a 	mul.w	sl, r5, sl
 8027e4c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027e50:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027e54:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027e58:	44de      	add	lr, fp
 8027e5a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027e5e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027e62:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027e66:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027e6a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027e6e:	ea4e 050a 	orr.w	r5, lr, sl
 8027e72:	950b      	str	r5, [sp, #44]	; 0x2c
 8027e74:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027e76:	2dff      	cmp	r5, #255	; 0xff
 8027e78:	d021      	beq.n	8027ebe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8027e7a:	9d08      	ldr	r5, [sp, #32]
 8027e7c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027e80:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027e82:	fb05 fb0b 	mul.w	fp, r5, fp
 8027e86:	9d08      	ldr	r5, [sp, #32]
 8027e88:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027e8c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027e8e:	fb05 fa0e 	mul.w	sl, r5, lr
 8027e92:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027e96:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027e9a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027e9e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027ea2:	44de      	add	lr, fp
 8027ea4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027ea8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027eac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027eb0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027eb4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027eb8:	ea4e 050a 	orr.w	r5, lr, sl
 8027ebc:	9508      	str	r5, [sp, #32]
 8027ebe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027ec0:	2dff      	cmp	r5, #255	; 0xff
 8027ec2:	d021      	beq.n	8027f08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8027ec4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027ec6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027eca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027ecc:	fb05 fb0b 	mul.w	fp, r5, fp
 8027ed0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027ed2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027ed6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027ed8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027edc:	fb05 fa0a 	mul.w	sl, r5, sl
 8027ee0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027ee4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027ee8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027eec:	44de      	add	lr, fp
 8027eee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027ef2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027ef6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027efa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027efe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027f02:	ea4e 050a 	orr.w	r5, lr, sl
 8027f06:	950c      	str	r5, [sp, #48]	; 0x30
 8027f08:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027f0a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027f0e:	9d08      	ldr	r5, [sp, #32]
 8027f10:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8027f14:	fb08 fc0c 	mul.w	ip, r8, ip
 8027f18:	fb01 cc0e 	mla	ip, r1, lr, ip
 8027f1c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027f20:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027f22:	fb00 cc0e 	mla	ip, r0, lr, ip
 8027f26:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027f2a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027f2c:	fb09 cc0e 	mla	ip, r9, lr, ip
 8027f30:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027f34:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027f38:	fb08 f80e 	mul.w	r8, r8, lr
 8027f3c:	fb01 8202 	mla	r2, r1, r2, r8
 8027f40:	9908      	ldr	r1, [sp, #32]
 8027f42:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8027f46:	990c      	ldr	r1, [sp, #48]	; 0x30
 8027f48:	fb00 220a 	mla	r2, r0, sl, r2
 8027f4c:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8027f50:	fb09 2900 	mla	r9, r9, r0, r2
 8027f54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027f58:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027f5c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027f60:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8027f64:	ea4c 0c09 	orr.w	ip, ip, r9
 8027f68:	2bff      	cmp	r3, #255	; 0xff
 8027f6a:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8027f6e:	f040 8091 	bne.w	8028094 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8027f72:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8027f76:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8027f7a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027f7e:	f022 0207 	bic.w	r2, r2, #7
 8027f82:	431a      	orrs	r2, r3
 8027f84:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8027f88:	ea4c 0c02 	orr.w	ip, ip, r2
 8027f8c:	f8a7 c000 	strh.w	ip, [r7]
 8027f90:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027f92:	441c      	add	r4, r3
 8027f94:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027f96:	441e      	add	r6, r3
 8027f98:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027f9a:	3b01      	subs	r3, #1
 8027f9c:	3702      	adds	r7, #2
 8027f9e:	9317      	str	r3, [sp, #92]	; 0x5c
 8027fa0:	e6c0      	b.n	8027d24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8027fa2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027fa4:	441c      	add	r4, r3
 8027fa6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027fa8:	441e      	add	r6, r3
 8027faa:	9b07      	ldr	r3, [sp, #28]
 8027fac:	3b01      	subs	r3, #1
 8027fae:	9307      	str	r3, [sp, #28]
 8027fb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027fb2:	3302      	adds	r3, #2
 8027fb4:	930a      	str	r3, [sp, #40]	; 0x28
 8027fb6:	e695      	b.n	8027ce4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8027fb8:	d024      	beq.n	8028004 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8027fba:	9b07      	ldr	r3, [sp, #28]
 8027fbc:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8027fbe:	3b01      	subs	r3, #1
 8027fc0:	fb00 4003 	mla	r0, r0, r3, r4
 8027fc4:	1400      	asrs	r0, r0, #16
 8027fc6:	f53f aeaa 	bmi.w	8027d1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027fca:	3901      	subs	r1, #1
 8027fcc:	4288      	cmp	r0, r1
 8027fce:	f6bf aea6 	bge.w	8027d1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027fd2:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8027fd4:	fb01 6303 	mla	r3, r1, r3, r6
 8027fd8:	141b      	asrs	r3, r3, #16
 8027fda:	f53f aea0 	bmi.w	8027d1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027fde:	3a01      	subs	r2, #1
 8027fe0:	4293      	cmp	r3, r2
 8027fe2:	f6bf ae9c 	bge.w	8027d1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027fe6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8027fea:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8027fee:	f1bb 0f00 	cmp.w	fp, #0
 8027ff2:	f300 809a 	bgt.w	802812a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8027ff6:	9b07      	ldr	r3, [sp, #28]
 8027ff8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027ffc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027ffe:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8028002:	930a      	str	r3, [sp, #40]	; 0x28
 8028004:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8028006:	2b00      	cmp	r3, #0
 8028008:	f340 81eb 	ble.w	80283e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802800c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028010:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028014:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8028018:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802801a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802801e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028022:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8028026:	eef0 6a62 	vmov.f32	s13, s5
 802802a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802802e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028032:	ee77 2a62 	vsub.f32	s5, s14, s5
 8028036:	ee16 4a90 	vmov	r4, s13
 802803a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802803e:	eef0 6a43 	vmov.f32	s13, s6
 8028042:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8028046:	ee12 2a90 	vmov	r2, s5
 802804a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802804e:	fb92 f3f3 	sdiv	r3, r2, r3
 8028052:	ee13 2a10 	vmov	r2, s6
 8028056:	9327      	str	r3, [sp, #156]	; 0x9c
 8028058:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802805a:	fb92 f3f3 	sdiv	r3, r2, r3
 802805e:	9328      	str	r3, [sp, #160]	; 0xa0
 8028060:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8028062:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8028064:	3b01      	subs	r3, #1
 8028066:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802806a:	9316      	str	r3, [sp, #88]	; 0x58
 802806c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802806e:	bf08      	it	eq
 8028070:	4613      	moveq	r3, r2
 8028072:	ee16 6a90 	vmov	r6, s13
 8028076:	9307      	str	r3, [sp, #28]
 8028078:	eeb0 3a67 	vmov.f32	s6, s15
 802807c:	eef0 2a47 	vmov.f32	s5, s14
 8028080:	e622      	b.n	8027cc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8028082:	2800      	cmp	r0, #0
 8028084:	f43f ae92 	beq.w	8027dac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8028088:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802808c:	9308      	str	r3, [sp, #32]
 802808e:	0e1b      	lsrs	r3, r3, #24
 8028090:	9310      	str	r3, [sp, #64]	; 0x40
 8028092:	e68b      	b.n	8027dac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8028094:	8839      	ldrh	r1, [r7, #0]
 8028096:	4dd4      	ldr	r5, [pc, #848]	; (80283e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8028098:	43db      	mvns	r3, r3
 802809a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 802809e:	fa5f f883 	uxtb.w	r8, r3
 80280a2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80280a6:	fb0e fe08 	mul.w	lr, lr, r8
 80280aa:	10c8      	asrs	r0, r1, #3
 80280ac:	00cb      	lsls	r3, r1, #3
 80280ae:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80280b2:	f10e 0101 	add.w	r1, lr, #1
 80280b6:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80280ba:	fb00 f008 	mul.w	r0, r0, r8
 80280be:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80280c2:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 80280c6:	f100 0e01 	add.w	lr, r0, #1
 80280ca:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80280ce:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80280d2:	b2db      	uxtb	r3, r3
 80280d4:	b2c9      	uxtb	r1, r1
 80280d6:	00d2      	lsls	r2, r2, #3
 80280d8:	fb03 f308 	mul.w	r3, r3, r8
 80280dc:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80280e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80280e4:	430a      	orrs	r2, r1
 80280e6:	1c59      	adds	r1, r3, #1
 80280e8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80280ec:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80280f0:	e748      	b.n	8027f84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 80280f2:	f112 0801 	adds.w	r8, r2, #1
 80280f6:	f53f af4b 	bmi.w	8027f90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80280fa:	4543      	cmp	r3, r8
 80280fc:	f6ff af48 	blt.w	8027f90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028100:	f11c 0801 	adds.w	r8, ip, #1
 8028104:	f53f af44 	bmi.w	8027f90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028108:	45c6      	cmp	lr, r8
 802810a:	f6ff af41 	blt.w	8027f90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802810e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8028112:	fa0f f28e 	sxth.w	r2, lr
 8028116:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802811a:	9200      	str	r2, [sp, #0]
 802811c:	b21b      	sxth	r3, r3
 802811e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028120:	9819      	ldr	r0, [sp, #100]	; 0x64
 8028122:	4639      	mov	r1, r7
 8028124:	f7ff fc87 	bl	8027a36 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8028128:	e732      	b.n	8027f90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802812a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802812c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802812e:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8028132:	1421      	asrs	r1, r4, #16
 8028134:	1433      	asrs	r3, r6, #16
 8028136:	fb07 1303 	mla	r3, r7, r3, r1
 802813a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802813c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8028140:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8028144:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8028148:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802814c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8028150:	2a00      	cmp	r2, #0
 8028152:	f000 8107 	beq.w	8028364 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8028156:	684d      	ldr	r5, [r1, #4]
 8028158:	950d      	str	r5, [sp, #52]	; 0x34
 802815a:	0e2d      	lsrs	r5, r5, #24
 802815c:	9514      	str	r5, [sp, #80]	; 0x50
 802815e:	b178      	cbz	r0, 8028180 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8028160:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8028164:	3f01      	subs	r7, #1
 8028166:	00bf      	lsls	r7, r7, #2
 8028168:	3704      	adds	r7, #4
 802816a:	eb01 0e07 	add.w	lr, r1, r7
 802816e:	59c9      	ldr	r1, [r1, r7]
 8028170:	9109      	str	r1, [sp, #36]	; 0x24
 8028172:	0e09      	lsrs	r1, r1, #24
 8028174:	9111      	str	r1, [sp, #68]	; 0x44
 8028176:	f8de 1004 	ldr.w	r1, [lr, #4]
 802817a:	910e      	str	r1, [sp, #56]	; 0x38
 802817c:	0e09      	lsrs	r1, r1, #24
 802817e:	9115      	str	r1, [sp, #84]	; 0x54
 8028180:	b292      	uxth	r2, r2
 8028182:	b280      	uxth	r0, r0
 8028184:	fb02 f900 	mul.w	r9, r2, r0
 8028188:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802818c:	0112      	lsls	r2, r2, #4
 802818e:	eba2 0e09 	sub.w	lr, r2, r9
 8028192:	b280      	uxth	r0, r0
 8028194:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8028198:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802819a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802819c:	fa1f fe8e 	uxth.w	lr, lr
 80281a0:	1a09      	subs	r1, r1, r0
 80281a2:	b289      	uxth	r1, r1
 80281a4:	fb0e f202 	mul.w	r2, lr, r2
 80281a8:	fb01 220c 	mla	r2, r1, ip, r2
 80281ac:	fb00 2205 	mla	r2, r0, r5, r2
 80281b0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80281b2:	fb09 2205 	mla	r2, r9, r5, r2
 80281b6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80281ba:	2a00      	cmp	r2, #0
 80281bc:	f000 80c9 	beq.w	8028352 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80281c0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80281c4:	d019      	beq.n	80281fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80281c6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80281ca:	fb0c fa0a 	mul.w	sl, ip, sl
 80281ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80281d2:	fb0c fc03 	mul.w	ip, ip, r3
 80281d6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80281da:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80281de:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80281e2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80281e6:	4453      	add	r3, sl
 80281e8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80281ec:	0a1b      	lsrs	r3, r3, #8
 80281ee:	0a3f      	lsrs	r7, r7, #8
 80281f0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80281f4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80281f8:	433b      	orrs	r3, r7
 80281fa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80281fc:	2dff      	cmp	r5, #255	; 0xff
 80281fe:	d020      	beq.n	8028242 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8028200:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8028202:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8028206:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8028208:	436f      	muls	r7, r5
 802820a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802820c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8028210:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8028212:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8028216:	fb05 fa0a 	mul.w	sl, r5, sl
 802821a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802821e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028222:	44bc      	add	ip, r7
 8028224:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028228:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802822c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028230:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028234:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028238:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802823c:	ea4c 050a 	orr.w	r5, ip, sl
 8028240:	950d      	str	r5, [sp, #52]	; 0x34
 8028242:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028244:	2dff      	cmp	r5, #255	; 0xff
 8028246:	d020      	beq.n	802828a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8028248:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802824a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802824e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028250:	436f      	muls	r7, r5
 8028252:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8028254:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8028258:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802825a:	fb05 fa0c 	mul.w	sl, r5, ip
 802825e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8028262:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028266:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802826a:	44bc      	add	ip, r7
 802826c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028270:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8028274:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028278:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802827c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028280:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028284:	ea4c 050a 	orr.w	r5, ip, sl
 8028288:	9509      	str	r5, [sp, #36]	; 0x24
 802828a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802828c:	2dff      	cmp	r5, #255	; 0xff
 802828e:	d020      	beq.n	80282d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8028290:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028292:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8028296:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8028298:	436f      	muls	r7, r5
 802829a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802829c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80282a0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80282a2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80282a6:	fb05 fa0a 	mul.w	sl, r5, sl
 80282aa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80282ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80282b2:	44bc      	add	ip, r7
 80282b4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80282b8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80282bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80282c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80282c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80282c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80282cc:	ea4c 050a 	orr.w	r5, ip, sl
 80282d0:	950e      	str	r5, [sp, #56]	; 0x38
 80282d2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80282d4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80282d8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80282da:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80282de:	fb0e f707 	mul.w	r7, lr, r7
 80282e2:	fb01 770c 	mla	r7, r1, ip, r7
 80282e6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80282ea:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80282ec:	fb00 770c 	mla	r7, r0, ip, r7
 80282f0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80282f4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80282f6:	fb09 770c 	mla	r7, r9, ip, r7
 80282fa:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80282fe:	fb0e fe0c 	mul.w	lr, lr, ip
 8028302:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8028306:	fb01 e303 	mla	r3, r1, r3, lr
 802830a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802830c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8028310:	990e      	ldr	r1, [sp, #56]	; 0x38
 8028312:	fb00 330a 	mla	r3, r0, sl, r3
 8028316:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802831a:	fb09 3c0c 	mla	ip, r9, ip, r3
 802831e:	0a3f      	lsrs	r7, r7, #8
 8028320:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028324:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8028328:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802832c:	ea47 070c 	orr.w	r7, r7, ip
 8028330:	2aff      	cmp	r2, #255	; 0xff
 8028332:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8028336:	d11e      	bne.n	8028376 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8028338:	097a      	lsrs	r2, r7, #5
 802833a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 802833e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8028342:	f023 0307 	bic.w	r3, r3, #7
 8028346:	4313      	orrs	r3, r2
 8028348:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802834c:	431f      	orrs	r7, r3
 802834e:	f8a8 7000 	strh.w	r7, [r8]
 8028352:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8028354:	441c      	add	r4, r3
 8028356:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028358:	f108 0802 	add.w	r8, r8, #2
 802835c:	441e      	add	r6, r3
 802835e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8028362:	e644      	b.n	8027fee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8028364:	2800      	cmp	r0, #0
 8028366:	f43f af0b 	beq.w	8028180 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802836a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802836e:	9109      	str	r1, [sp, #36]	; 0x24
 8028370:	0e09      	lsrs	r1, r1, #24
 8028372:	9111      	str	r1, [sp, #68]	; 0x44
 8028374:	e704      	b.n	8028180 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8028376:	f8b8 1000 	ldrh.w	r1, [r8]
 802837a:	43d2      	mvns	r2, r2
 802837c:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8028380:	fa5f fe82 	uxtb.w	lr, r2
 8028384:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8028388:	fb0c fc0e 	mul.w	ip, ip, lr
 802838c:	10c8      	asrs	r0, r1, #3
 802838e:	00ca      	lsls	r2, r1, #3
 8028390:	f10c 0101 	add.w	r1, ip, #1
 8028394:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028398:	0c39      	lsrs	r1, r7, #16
 802839a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802839e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80283a2:	4911      	ldr	r1, [pc, #68]	; (80283e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80283a4:	fb00 f00e 	mul.w	r0, r0, lr
 80283a8:	fa5f fc8c 	uxtb.w	ip, ip
 80283ac:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80283b0:	b2d2      	uxtb	r2, r2
 80283b2:	1c41      	adds	r1, r0, #1
 80283b4:	fb02 f20e 	mul.w	r2, r2, lr
 80283b8:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80283bc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80283c0:	1c51      	adds	r1, r2, #1
 80283c2:	00c0      	lsls	r0, r0, #3
 80283c4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80283c8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80283cc:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80283d0:	ea4c 0c00 	orr.w	ip, ip, r0
 80283d4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80283d8:	ea47 0c0c 	orr.w	ip, r7, ip
 80283dc:	f8a8 c000 	strh.w	ip, [r8]
 80283e0:	e7b7      	b.n	8028352 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80283e2:	b01b      	add	sp, #108	; 0x6c
 80283e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80283e8:	fffff800 	.word	0xfffff800

080283ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80283ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80283f0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80283f4:	2d00      	cmp	r5, #0
 80283f6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80283fa:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80283fe:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8028402:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8028406:	fb05 0e03 	mla	lr, r5, r3, r0
 802840a:	f2c0 808c 	blt.w	8028526 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802840e:	45a9      	cmp	r9, r5
 8028410:	f340 8089 	ble.w	8028526 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8028414:	2800      	cmp	r0, #0
 8028416:	f2c0 8084 	blt.w	8028522 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802841a:	4580      	cmp	r8, r0
 802841c:	f340 8081 	ble.w	8028522 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8028420:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8028424:	f01e 0f01 	tst.w	lr, #1
 8028428:	5d16      	ldrb	r6, [r2, r4]
 802842a:	bf0c      	ite	eq
 802842c:	f006 060f 	andeq.w	r6, r6, #15
 8028430:	1136      	asrne	r6, r6, #4
 8028432:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8028436:	b2f6      	uxtb	r6, r6
 8028438:	1c44      	adds	r4, r0, #1
 802843a:	d477      	bmi.n	802852c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802843c:	45a0      	cmp	r8, r4
 802843e:	dd75      	ble.n	802852c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8028440:	2f00      	cmp	r7, #0
 8028442:	d075      	beq.n	8028530 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8028444:	f10e 0a01 	add.w	sl, lr, #1
 8028448:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802844c:	f01a 0f01 	tst.w	sl, #1
 8028450:	5d14      	ldrb	r4, [r2, r4]
 8028452:	bf0c      	ite	eq
 8028454:	f004 040f 	andeq.w	r4, r4, #15
 8028458:	1124      	asrne	r4, r4, #4
 802845a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802845e:	b2e4      	uxtb	r4, r4
 8028460:	3501      	adds	r5, #1
 8028462:	d469      	bmi.n	8028538 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8028464:	45a9      	cmp	r9, r5
 8028466:	dd67      	ble.n	8028538 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8028468:	f1bc 0f00 	cmp.w	ip, #0
 802846c:	d067      	beq.n	802853e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 802846e:	2800      	cmp	r0, #0
 8028470:	db60      	blt.n	8028534 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8028472:	4580      	cmp	r8, r0
 8028474:	dd5e      	ble.n	8028534 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8028476:	eb03 090e 	add.w	r9, r3, lr
 802847a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802847e:	f019 0f01 	tst.w	r9, #1
 8028482:	5d55      	ldrb	r5, [r2, r5]
 8028484:	bf0c      	ite	eq
 8028486:	f005 050f 	andeq.w	r5, r5, #15
 802848a:	112d      	asrne	r5, r5, #4
 802848c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8028490:	b2ed      	uxtb	r5, r5
 8028492:	3001      	adds	r0, #1
 8028494:	d456      	bmi.n	8028544 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8028496:	4580      	cmp	r8, r0
 8028498:	dd54      	ble.n	8028544 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802849a:	2f00      	cmp	r7, #0
 802849c:	d054      	beq.n	8028548 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 802849e:	3301      	adds	r3, #1
 80284a0:	449e      	add	lr, r3
 80284a2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80284a6:	f01e 0f01 	tst.w	lr, #1
 80284aa:	5cd0      	ldrb	r0, [r2, r3]
 80284ac:	bf0c      	ite	eq
 80284ae:	f000 000f 	andeq.w	r0, r0, #15
 80284b2:	1100      	asrne	r0, r0, #4
 80284b4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80284b8:	b2c3      	uxtb	r3, r0
 80284ba:	b2ba      	uxth	r2, r7
 80284bc:	fa1f fc8c 	uxth.w	ip, ip
 80284c0:	fb02 f00c 	mul.w	r0, r2, ip
 80284c4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80284c8:	0112      	lsls	r2, r2, #4
 80284ca:	fa1f fc8c 	uxth.w	ip, ip
 80284ce:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80284d2:	1a12      	subs	r2, r2, r0
 80284d4:	eba7 070c 	sub.w	r7, r7, ip
 80284d8:	b292      	uxth	r2, r2
 80284da:	b2bf      	uxth	r7, r7
 80284dc:	4362      	muls	r2, r4
 80284de:	fb06 2207 	mla	r2, r6, r7, r2
 80284e2:	fb0c 2505 	mla	r5, ip, r5, r2
 80284e6:	fb00 5303 	mla	r3, r0, r3, r5
 80284ea:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80284ee:	b1b3      	cbz	r3, 802851e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80284f0:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80284f4:	435a      	muls	r2, r3
 80284f6:	1c53      	adds	r3, r2, #1
 80284f8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80284fc:	4a2d      	ldr	r2, [pc, #180]	; (80285b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80284fe:	121b      	asrs	r3, r3, #8
 8028500:	6812      	ldr	r2, [r2, #0]
 8028502:	2bff      	cmp	r3, #255	; 0xff
 8028504:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8028508:	d120      	bne.n	802854c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 802850a:	4b2b      	ldr	r3, [pc, #172]	; (80285b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 802850c:	0950      	lsrs	r0, r2, #5
 802850e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028512:	4033      	ands	r3, r6
 8028514:	4318      	orrs	r0, r3
 8028516:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802851a:	4302      	orrs	r2, r0
 802851c:	800a      	strh	r2, [r1, #0]
 802851e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028522:	2600      	movs	r6, #0
 8028524:	e788      	b.n	8028438 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8028526:	2400      	movs	r4, #0
 8028528:	4626      	mov	r6, r4
 802852a:	e799      	b.n	8028460 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802852c:	2400      	movs	r4, #0
 802852e:	e797      	b.n	8028460 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8028530:	463c      	mov	r4, r7
 8028532:	e795      	b.n	8028460 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8028534:	2500      	movs	r5, #0
 8028536:	e7ac      	b.n	8028492 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8028538:	2300      	movs	r3, #0
 802853a:	461d      	mov	r5, r3
 802853c:	e7bd      	b.n	80284ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802853e:	4663      	mov	r3, ip
 8028540:	4665      	mov	r5, ip
 8028542:	e7ba      	b.n	80284ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028544:	2300      	movs	r3, #0
 8028546:	e7b8      	b.n	80284ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028548:	463b      	mov	r3, r7
 802854a:	e7b6      	b.n	80284ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802854c:	880d      	ldrh	r5, [r1, #0]
 802854e:	b29f      	uxth	r7, r3
 8028550:	122c      	asrs	r4, r5, #8
 8028552:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8028556:	43db      	mvns	r3, r3
 8028558:	b2db      	uxtb	r3, r3
 802855a:	fb10 f007 	smulbb	r0, r0, r7
 802855e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8028562:	fb04 0403 	mla	r4, r4, r3, r0
 8028566:	b2f6      	uxtb	r6, r6
 8028568:	10e8      	asrs	r0, r5, #3
 802856a:	b2d2      	uxtb	r2, r2
 802856c:	00ed      	lsls	r5, r5, #3
 802856e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028572:	fb12 f207 	smulbb	r2, r2, r7
 8028576:	fb16 f607 	smulbb	r6, r6, r7
 802857a:	b2ed      	uxtb	r5, r5
 802857c:	b2a4      	uxth	r4, r4
 802857e:	fb00 6603 	mla	r6, r0, r3, r6
 8028582:	fb05 2303 	mla	r3, r5, r3, r2
 8028586:	b29a      	uxth	r2, r3
 8028588:	1c63      	adds	r3, r4, #1
 802858a:	b2b0      	uxth	r0, r6
 802858c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028590:	1c53      	adds	r3, r2, #1
 8028592:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028596:	1c42      	adds	r2, r0, #1
 8028598:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802859c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80285a0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80285a4:	0940      	lsrs	r0, r0, #5
 80285a6:	4323      	orrs	r3, r4
 80285a8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80285ac:	4303      	orrs	r3, r0
 80285ae:	800b      	strh	r3, [r1, #0]
 80285b0:	e7b5      	b.n	802851e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80285b2:	bf00      	nop
 80285b4:	20002338 	.word	0x20002338
 80285b8:	00fff800 	.word	0x00fff800

080285bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80285bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80285c0:	b097      	sub	sp, #92	; 0x5c
 80285c2:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80285c6:	9214      	str	r2, [sp, #80]	; 0x50
 80285c8:	9309      	str	r3, [sp, #36]	; 0x24
 80285ca:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80285cc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80285d0:	910d      	str	r1, [sp, #52]	; 0x34
 80285d2:	930f      	str	r3, [sp, #60]	; 0x3c
 80285d4:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80285d8:	9015      	str	r0, [sp, #84]	; 0x54
 80285da:	6850      	ldr	r0, [r2, #4]
 80285dc:	6812      	ldr	r2, [r2, #0]
 80285de:	fb00 1303 	mla	r3, r0, r3, r1
 80285e2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80285e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80285e8:	689b      	ldr	r3, [r3, #8]
 80285ea:	3301      	adds	r3, #1
 80285ec:	f023 0301 	bic.w	r3, r3, #1
 80285f0:	930a      	str	r3, [sp, #40]	; 0x28
 80285f2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80285f4:	681f      	ldr	r7, [r3, #0]
 80285f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80285f8:	2b00      	cmp	r3, #0
 80285fa:	dc03      	bgt.n	8028604 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80285fc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80285fe:	2b00      	cmp	r3, #0
 8028600:	f340 8287 	ble.w	8028b12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8028604:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028606:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802860a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802860e:	1e48      	subs	r0, r1, #1
 8028610:	f102 3cff 	add.w	ip, r2, #4294967295
 8028614:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028616:	2b00      	cmp	r3, #0
 8028618:	f340 80c4 	ble.w	80287a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 802861c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028620:	ea4f 4326 	mov.w	r3, r6, asr #16
 8028624:	d406      	bmi.n	8028634 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028626:	4586      	cmp	lr, r0
 8028628:	da04      	bge.n	8028634 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802862a:	2b00      	cmp	r3, #0
 802862c:	db02      	blt.n	8028634 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802862e:	4563      	cmp	r3, ip
 8028630:	f2c0 80b9 	blt.w	80287a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8028634:	f11e 0e01 	adds.w	lr, lr, #1
 8028638:	f100 80aa 	bmi.w	8028790 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802863c:	4571      	cmp	r1, lr
 802863e:	f2c0 80a7 	blt.w	8028790 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028642:	3301      	adds	r3, #1
 8028644:	f100 80a4 	bmi.w	8028790 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028648:	429a      	cmp	r2, r3
 802864a:	f2c0 80a1 	blt.w	8028790 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802864e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028650:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8028654:	930e      	str	r3, [sp, #56]	; 0x38
 8028656:	46c8      	mov	r8, r9
 8028658:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802865a:	2b00      	cmp	r3, #0
 802865c:	f340 80c3 	ble.w	80287e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8028660:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028662:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8028666:	1423      	asrs	r3, r4, #16
 8028668:	ea4f 4026 	mov.w	r0, r6, asr #16
 802866c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8028670:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8028674:	f100 814d 	bmi.w	8028912 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028678:	f10c 3bff 	add.w	fp, ip, #4294967295
 802867c:	455b      	cmp	r3, fp
 802867e:	f280 8148 	bge.w	8028912 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028682:	2800      	cmp	r0, #0
 8028684:	f2c0 8145 	blt.w	8028912 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028688:	f10e 3bff 	add.w	fp, lr, #4294967295
 802868c:	4558      	cmp	r0, fp
 802868e:	f280 8140 	bge.w	8028912 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028692:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8028694:	fb00 3305 	mla	r3, r0, r5, r3
 8028698:	0858      	lsrs	r0, r3, #1
 802869a:	07dd      	lsls	r5, r3, #31
 802869c:	f817 c000 	ldrb.w	ip, [r7, r0]
 80286a0:	bf54      	ite	pl
 80286a2:	f00c 0c0f 	andpl.w	ip, ip, #15
 80286a6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80286aa:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80286ae:	fa5f fc8c 	uxtb.w	ip, ip
 80286b2:	2a00      	cmp	r2, #0
 80286b4:	f000 80db 	beq.w	802886e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80286b8:	1c58      	adds	r0, r3, #1
 80286ba:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80286be:	07c0      	lsls	r0, r0, #31
 80286c0:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80286c4:	bf54      	ite	pl
 80286c6:	f00e 0e0f 	andpl.w	lr, lr, #15
 80286ca:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80286ce:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80286d2:	fa5f f08e 	uxtb.w	r0, lr
 80286d6:	9010      	str	r0, [sp, #64]	; 0x40
 80286d8:	b1c9      	cbz	r1, 802870e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80286da:	4453      	add	r3, sl
 80286dc:	0858      	lsrs	r0, r3, #1
 80286de:	07dd      	lsls	r5, r3, #31
 80286e0:	5c38      	ldrb	r0, [r7, r0]
 80286e2:	bf54      	ite	pl
 80286e4:	f000 000f 	andpl.w	r0, r0, #15
 80286e8:	1100      	asrmi	r0, r0, #4
 80286ea:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80286ee:	3301      	adds	r3, #1
 80286f0:	b2c0      	uxtb	r0, r0
 80286f2:	900b      	str	r0, [sp, #44]	; 0x2c
 80286f4:	0858      	lsrs	r0, r3, #1
 80286f6:	07dd      	lsls	r5, r3, #31
 80286f8:	f817 e000 	ldrb.w	lr, [r7, r0]
 80286fc:	bf54      	ite	pl
 80286fe:	f00e 030f 	andpl.w	r3, lr, #15
 8028702:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8028706:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802870a:	b2db      	uxtb	r3, r3
 802870c:	9311      	str	r3, [sp, #68]	; 0x44
 802870e:	b292      	uxth	r2, r2
 8028710:	b289      	uxth	r1, r1
 8028712:	fb02 f301 	mul.w	r3, r2, r1
 8028716:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802871a:	0112      	lsls	r2, r2, #4
 802871c:	b289      	uxth	r1, r1
 802871e:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8028722:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8028724:	1ad2      	subs	r2, r2, r3
 8028726:	1a40      	subs	r0, r0, r1
 8028728:	b292      	uxth	r2, r2
 802872a:	436a      	muls	r2, r5
 802872c:	b280      	uxth	r0, r0
 802872e:	fb0c 2c00 	mla	ip, ip, r0, r2
 8028732:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8028734:	fb01 c102 	mla	r1, r1, r2, ip
 8028738:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802873a:	fb03 1302 	mla	r3, r3, r2, r1
 802873e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028742:	b1db      	cbz	r3, 802877c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028744:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028746:	4353      	muls	r3, r2
 8028748:	1c5a      	adds	r2, r3, #1
 802874a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802874e:	4ac6      	ldr	r2, [pc, #792]	; (8028a68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028750:	121b      	asrs	r3, r3, #8
 8028752:	6812      	ldr	r2, [r2, #0]
 8028754:	2bff      	cmp	r3, #255	; 0xff
 8028756:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802875a:	f040 8099 	bne.w	8028890 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 802875e:	0953      	lsrs	r3, r2, #5
 8028760:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8028764:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8028768:	f02c 0c07 	bic.w	ip, ip, #7
 802876c:	ea43 0c0c 	orr.w	ip, r3, ip
 8028770:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028774:	ea4c 0202 	orr.w	r2, ip, r2
 8028778:	f8a8 2000 	strh.w	r2, [r8]
 802877c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802877e:	441c      	add	r4, r3
 8028780:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028782:	441e      	add	r6, r3
 8028784:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8028786:	3b01      	subs	r3, #1
 8028788:	f108 0802 	add.w	r8, r8, #2
 802878c:	930e      	str	r3, [sp, #56]	; 0x38
 802878e:	e763      	b.n	8028658 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8028790:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028792:	441c      	add	r4, r3
 8028794:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028796:	441e      	add	r6, r3
 8028798:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802879a:	3b01      	subs	r3, #1
 802879c:	9309      	str	r3, [sp, #36]	; 0x24
 802879e:	f109 0902 	add.w	r9, r9, #2
 80287a2:	e737      	b.n	8028614 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80287a4:	d024      	beq.n	80287f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80287a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80287a8:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80287aa:	3b01      	subs	r3, #1
 80287ac:	fb00 4003 	mla	r0, r0, r3, r4
 80287b0:	1400      	asrs	r0, r0, #16
 80287b2:	f53f af4c 	bmi.w	802864e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80287b6:	3901      	subs	r1, #1
 80287b8:	4288      	cmp	r0, r1
 80287ba:	f6bf af48 	bge.w	802864e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80287be:	9924      	ldr	r1, [sp, #144]	; 0x90
 80287c0:	fb01 6303 	mla	r3, r1, r3, r6
 80287c4:	141b      	asrs	r3, r3, #16
 80287c6:	f53f af42 	bmi.w	802864e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80287ca:	3a01      	subs	r2, #1
 80287cc:	4293      	cmp	r3, r2
 80287ce:	f6bf af3e 	bge.w	802864e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80287d2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80287d6:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80287da:	930e      	str	r3, [sp, #56]	; 0x38
 80287dc:	46c8      	mov	r8, r9
 80287de:	f1bb 0f00 	cmp.w	fp, #0
 80287e2:	f300 80b7 	bgt.w	8028954 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80287e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80287e8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80287ec:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80287f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80287f2:	2b00      	cmp	r3, #0
 80287f4:	f340 818d 	ble.w	8028b12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80287f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80287fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028800:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8028804:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028806:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802880a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802880e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8028812:	eef0 6a62 	vmov.f32	s13, s5
 8028816:	ee61 7a27 	vmul.f32	s15, s2, s15
 802881a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802881e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8028822:	ee16 4a90 	vmov	r4, s13
 8028826:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802882a:	eef0 6a43 	vmov.f32	s13, s6
 802882e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8028832:	ee12 2a90 	vmov	r2, s5
 8028836:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802883a:	fb92 f3f3 	sdiv	r3, r2, r3
 802883e:	ee13 2a10 	vmov	r2, s6
 8028842:	9323      	str	r3, [sp, #140]	; 0x8c
 8028844:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028846:	fb92 f3f3 	sdiv	r3, r2, r3
 802884a:	9324      	str	r3, [sp, #144]	; 0x90
 802884c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802884e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8028850:	3b01      	subs	r3, #1
 8028852:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028856:	930d      	str	r3, [sp, #52]	; 0x34
 8028858:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802885a:	bf08      	it	eq
 802885c:	4613      	moveq	r3, r2
 802885e:	ee16 6a90 	vmov	r6, s13
 8028862:	9309      	str	r3, [sp, #36]	; 0x24
 8028864:	eeb0 3a67 	vmov.f32	s6, s15
 8028868:	eef0 2a47 	vmov.f32	s5, s14
 802886c:	e6c3      	b.n	80285f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802886e:	2900      	cmp	r1, #0
 8028870:	f43f af4d 	beq.w	802870e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8028874:	eb0a 0003 	add.w	r0, sl, r3
 8028878:	0843      	lsrs	r3, r0, #1
 802887a:	07c0      	lsls	r0, r0, #31
 802887c:	5cfb      	ldrb	r3, [r7, r3]
 802887e:	bf54      	ite	pl
 8028880:	f003 030f 	andpl.w	r3, r3, #15
 8028884:	111b      	asrmi	r3, r3, #4
 8028886:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802888a:	b2db      	uxtb	r3, r3
 802888c:	930b      	str	r3, [sp, #44]	; 0x2c
 802888e:	e73e      	b.n	802870e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8028890:	f8b8 e000 	ldrh.w	lr, [r8]
 8028894:	fa1f fb83 	uxth.w	fp, r3
 8028898:	ea4f 202e 	mov.w	r0, lr, asr #8
 802889c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80288a0:	43db      	mvns	r3, r3
 80288a2:	b2db      	uxtb	r3, r3
 80288a4:	fb11 f10b 	smulbb	r1, r1, fp
 80288a8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80288ac:	fb00 1003 	mla	r0, r0, r3, r1
 80288b0:	fa5f fc8c 	uxtb.w	ip, ip
 80288b4:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80288b8:	b2d2      	uxtb	r2, r2
 80288ba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80288be:	b280      	uxth	r0, r0
 80288c0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80288c4:	fb1c fc0b 	smulbb	ip, ip, fp
 80288c8:	fa5f fe8e 	uxtb.w	lr, lr
 80288cc:	fb12 fb0b 	smulbb	fp, r2, fp
 80288d0:	fb01 cc03 	mla	ip, r1, r3, ip
 80288d4:	fb0e bb03 	mla	fp, lr, r3, fp
 80288d8:	1c43      	adds	r3, r0, #1
 80288da:	fa1f fc8c 	uxth.w	ip, ip
 80288de:	fa1f fb8b 	uxth.w	fp, fp
 80288e2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80288e6:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 80288ea:	f10c 0101 	add.w	r1, ip, #1
 80288ee:	f10b 0001 	add.w	r0, fp, #1
 80288f2:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80288f6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80288fa:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80288fe:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8028902:	4318      	orrs	r0, r3
 8028904:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8028908:	ea40 000c 	orr.w	r0, r0, ip
 802890c:	f8a8 0000 	strh.w	r0, [r8]
 8028910:	e734      	b.n	802877c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028912:	f113 0b01 	adds.w	fp, r3, #1
 8028916:	f53f af31 	bmi.w	802877c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802891a:	45dc      	cmp	ip, fp
 802891c:	f6ff af2e 	blt.w	802877c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028920:	f110 0b01 	adds.w	fp, r0, #1
 8028924:	f53f af2a 	bmi.w	802877c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028928:	45de      	cmp	lr, fp
 802892a:	f6ff af27 	blt.w	802877c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802892e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8028930:	9302      	str	r3, [sp, #8]
 8028932:	fa0f f38e 	sxth.w	r3, lr
 8028936:	9301      	str	r3, [sp, #4]
 8028938:	fa0f f38c 	sxth.w	r3, ip
 802893c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8028940:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8028944:	9300      	str	r3, [sp, #0]
 8028946:	463a      	mov	r2, r7
 8028948:	4653      	mov	r3, sl
 802894a:	4641      	mov	r1, r8
 802894c:	9815      	ldr	r0, [sp, #84]	; 0x54
 802894e:	f7ff fd4d 	bl	80283ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8028952:	e713      	b.n	802877c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028954:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8028956:	1422      	asrs	r2, r4, #16
 8028958:	1433      	asrs	r3, r6, #16
 802895a:	fb05 2303 	mla	r3, r5, r3, r2
 802895e:	085a      	lsrs	r2, r3, #1
 8028960:	07dd      	lsls	r5, r3, #31
 8028962:	5cba      	ldrb	r2, [r7, r2]
 8028964:	bf54      	ite	pl
 8028966:	f002 020f 	andpl.w	r2, r2, #15
 802896a:	1112      	asrmi	r2, r2, #4
 802896c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8028970:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8028974:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028978:	b2d2      	uxtb	r2, r2
 802897a:	2900      	cmp	r1, #0
 802897c:	d076      	beq.n	8028a6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802897e:	f103 0e01 	add.w	lr, r3, #1
 8028982:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8028986:	f01e 0f01 	tst.w	lr, #1
 802898a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802898e:	bf0c      	ite	eq
 8028990:	f00c 0c0f 	andeq.w	ip, ip, #15
 8028994:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8028998:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802899c:	fa5f f58c 	uxtb.w	r5, ip
 80289a0:	9512      	str	r5, [sp, #72]	; 0x48
 80289a2:	b300      	cbz	r0, 80289e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80289a4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80289a6:	442b      	add	r3, r5
 80289a8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80289ac:	07dd      	lsls	r5, r3, #31
 80289ae:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80289b2:	bf54      	ite	pl
 80289b4:	f00c 0c0f 	andpl.w	ip, ip, #15
 80289b8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80289bc:	3301      	adds	r3, #1
 80289be:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80289c2:	fa5f f58c 	uxtb.w	r5, ip
 80289c6:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80289ca:	950c      	str	r5, [sp, #48]	; 0x30
 80289cc:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80289d0:	07dd      	lsls	r5, r3, #31
 80289d2:	bf54      	ite	pl
 80289d4:	f00c 0c0f 	andpl.w	ip, ip, #15
 80289d8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80289dc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80289e0:	fa5f f38c 	uxtb.w	r3, ip
 80289e4:	9313      	str	r3, [sp, #76]	; 0x4c
 80289e6:	b289      	uxth	r1, r1
 80289e8:	b280      	uxth	r0, r0
 80289ea:	fb01 f300 	mul.w	r3, r1, r0
 80289ee:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80289f2:	0109      	lsls	r1, r1, #4
 80289f4:	b280      	uxth	r0, r0
 80289f6:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 80289fa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80289fc:	1ac9      	subs	r1, r1, r3
 80289fe:	ebac 0c00 	sub.w	ip, ip, r0
 8028a02:	b289      	uxth	r1, r1
 8028a04:	4369      	muls	r1, r5
 8028a06:	fa1f fc8c 	uxth.w	ip, ip
 8028a0a:	fb02 120c 	mla	r2, r2, ip, r1
 8028a0e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028a10:	fb00 2001 	mla	r0, r0, r1, r2
 8028a14:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8028a16:	fb03 0302 	mla	r3, r3, r2, r0
 8028a1a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028a1e:	b1d3      	cbz	r3, 8028a56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8028a20:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028a22:	4353      	muls	r3, r2
 8028a24:	1c5a      	adds	r2, r3, #1
 8028a26:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028a2a:	4a0f      	ldr	r2, [pc, #60]	; (8028a68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028a2c:	121b      	asrs	r3, r3, #8
 8028a2e:	6812      	ldr	r2, [r2, #0]
 8028a30:	2bff      	cmp	r3, #255	; 0xff
 8028a32:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8028a36:	d12d      	bne.n	8028a94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8028a38:	0953      	lsrs	r3, r2, #5
 8028a3a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8028a3e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8028a42:	f02c 0c07 	bic.w	ip, ip, #7
 8028a46:	ea43 0c0c 	orr.w	ip, r3, ip
 8028a4a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028a4e:	ea4c 0202 	orr.w	r2, ip, r2
 8028a52:	f8a8 2000 	strh.w	r2, [r8]
 8028a56:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028a58:	441c      	add	r4, r3
 8028a5a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028a5c:	f108 0802 	add.w	r8, r8, #2
 8028a60:	441e      	add	r6, r3
 8028a62:	f10b 3bff 	add.w	fp, fp, #4294967295
 8028a66:	e6ba      	b.n	80287de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8028a68:	20002338 	.word	0x20002338
 8028a6c:	2800      	cmp	r0, #0
 8028a6e:	d0ba      	beq.n	80289e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8028a70:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028a72:	442b      	add	r3, r5
 8028a74:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028a78:	07db      	lsls	r3, r3, #31
 8028a7a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028a7e:	bf54      	ite	pl
 8028a80:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028a84:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028a88:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028a8c:	fa5f f38c 	uxtb.w	r3, ip
 8028a90:	930c      	str	r3, [sp, #48]	; 0x30
 8028a92:	e7a8      	b.n	80289e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8028a94:	f8b8 e000 	ldrh.w	lr, [r8]
 8028a98:	fa1f fa83 	uxth.w	sl, r3
 8028a9c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8028aa0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8028aa4:	43db      	mvns	r3, r3
 8028aa6:	b2db      	uxtb	r3, r3
 8028aa8:	fb11 f10a 	smulbb	r1, r1, sl
 8028aac:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8028ab0:	fb00 1003 	mla	r0, r0, r3, r1
 8028ab4:	b2d2      	uxtb	r2, r2
 8028ab6:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8028aba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8028abe:	fa5f fe8e 	uxtb.w	lr, lr
 8028ac2:	fb12 f20a 	smulbb	r2, r2, sl
 8028ac6:	fb0e 2203 	mla	r2, lr, r3, r2
 8028aca:	fa5f fc8c 	uxtb.w	ip, ip
 8028ace:	b280      	uxth	r0, r0
 8028ad0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8028ad4:	b292      	uxth	r2, r2
 8028ad6:	fb1c fc0a 	smulbb	ip, ip, sl
 8028ada:	fb01 cc03 	mla	ip, r1, r3, ip
 8028ade:	1c43      	adds	r3, r0, #1
 8028ae0:	1c51      	adds	r1, r2, #1
 8028ae2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8028ae6:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8028aea:	fa1f fc8c 	uxth.w	ip, ip
 8028aee:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8028af2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8028af6:	4308      	orrs	r0, r1
 8028af8:	f10c 0101 	add.w	r1, ip, #1
 8028afc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028b00:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8028b04:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8028b08:	ea40 000c 	orr.w	r0, r0, ip
 8028b0c:	f8a8 0000 	strh.w	r0, [r8]
 8028b10:	e7a1      	b.n	8028a56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8028b12:	b017      	add	sp, #92	; 0x5c
 8028b14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028b18 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8028b18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028b1c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8028b20:	2d00      	cmp	r5, #0
 8028b22:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8028b26:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8028b2a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8028b2e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8028b32:	fb05 0e03 	mla	lr, r5, r3, r0
 8028b36:	f2c0 80b0 	blt.w	8028c9a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8028b3a:	45a9      	cmp	r9, r5
 8028b3c:	f340 80ad 	ble.w	8028c9a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8028b40:	2800      	cmp	r0, #0
 8028b42:	f2c0 80a8 	blt.w	8028c96 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8028b46:	4580      	cmp	r8, r0
 8028b48:	f340 80a5 	ble.w	8028c96 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8028b4c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8028b50:	f01e 0f01 	tst.w	lr, #1
 8028b54:	5d16      	ldrb	r6, [r2, r4]
 8028b56:	bf0c      	ite	eq
 8028b58:	f006 060f 	andeq.w	r6, r6, #15
 8028b5c:	1136      	asrne	r6, r6, #4
 8028b5e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8028b62:	b2f6      	uxtb	r6, r6
 8028b64:	1c44      	adds	r4, r0, #1
 8028b66:	f100 809b 	bmi.w	8028ca0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8028b6a:	45a0      	cmp	r8, r4
 8028b6c:	f340 8098 	ble.w	8028ca0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8028b70:	2f00      	cmp	r7, #0
 8028b72:	f000 8097 	beq.w	8028ca4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8028b76:	f10e 0a01 	add.w	sl, lr, #1
 8028b7a:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8028b7e:	f01a 0f01 	tst.w	sl, #1
 8028b82:	5d14      	ldrb	r4, [r2, r4]
 8028b84:	bf0c      	ite	eq
 8028b86:	f004 040f 	andeq.w	r4, r4, #15
 8028b8a:	1124      	asrne	r4, r4, #4
 8028b8c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8028b90:	b2e4      	uxtb	r4, r4
 8028b92:	3501      	adds	r5, #1
 8028b94:	f100 808a 	bmi.w	8028cac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8028b98:	45a9      	cmp	r9, r5
 8028b9a:	f340 8087 	ble.w	8028cac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8028b9e:	f1bc 0f00 	cmp.w	ip, #0
 8028ba2:	f000 8086 	beq.w	8028cb2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8028ba6:	2800      	cmp	r0, #0
 8028ba8:	db7e      	blt.n	8028ca8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8028baa:	4580      	cmp	r8, r0
 8028bac:	dd7c      	ble.n	8028ca8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8028bae:	eb03 090e 	add.w	r9, r3, lr
 8028bb2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8028bb6:	f019 0f01 	tst.w	r9, #1
 8028bba:	5d55      	ldrb	r5, [r2, r5]
 8028bbc:	bf0c      	ite	eq
 8028bbe:	f005 050f 	andeq.w	r5, r5, #15
 8028bc2:	112d      	asrne	r5, r5, #4
 8028bc4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8028bc8:	b2ed      	uxtb	r5, r5
 8028bca:	3001      	adds	r0, #1
 8028bcc:	d474      	bmi.n	8028cb8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8028bce:	4580      	cmp	r8, r0
 8028bd0:	dd72      	ble.n	8028cb8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8028bd2:	2f00      	cmp	r7, #0
 8028bd4:	d072      	beq.n	8028cbc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8028bd6:	3301      	adds	r3, #1
 8028bd8:	449e      	add	lr, r3
 8028bda:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8028bde:	f01e 0f01 	tst.w	lr, #1
 8028be2:	5cd0      	ldrb	r0, [r2, r3]
 8028be4:	bf0c      	ite	eq
 8028be6:	f000 000f 	andeq.w	r0, r0, #15
 8028bea:	1100      	asrne	r0, r0, #4
 8028bec:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028bf0:	b2c3      	uxtb	r3, r0
 8028bf2:	b2ba      	uxth	r2, r7
 8028bf4:	fa1f fc8c 	uxth.w	ip, ip
 8028bf8:	fb02 f00c 	mul.w	r0, r2, ip
 8028bfc:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8028c00:	0112      	lsls	r2, r2, #4
 8028c02:	fa1f fc8c 	uxth.w	ip, ip
 8028c06:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8028c0a:	1a12      	subs	r2, r2, r0
 8028c0c:	eba7 070c 	sub.w	r7, r7, ip
 8028c10:	b292      	uxth	r2, r2
 8028c12:	b2bf      	uxth	r7, r7
 8028c14:	4362      	muls	r2, r4
 8028c16:	fb06 2207 	mla	r2, r6, r7, r2
 8028c1a:	fb0c 2505 	mla	r5, ip, r5, r2
 8028c1e:	fb00 5303 	mla	r3, r0, r3, r5
 8028c22:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028c26:	b3a3      	cbz	r3, 8028c92 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8028c28:	4a25      	ldr	r2, [pc, #148]	; (8028cc0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8028c2a:	880e      	ldrh	r6, [r1, #0]
 8028c2c:	6815      	ldr	r5, [r2, #0]
 8028c2e:	1234      	asrs	r4, r6, #8
 8028c30:	b29a      	uxth	r2, r3
 8028c32:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8028c36:	43db      	mvns	r3, r3
 8028c38:	b2db      	uxtb	r3, r3
 8028c3a:	fb10 f002 	smulbb	r0, r0, r2
 8028c3e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8028c42:	fb04 0403 	mla	r4, r4, r3, r0
 8028c46:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8028c4a:	10f0      	asrs	r0, r6, #3
 8028c4c:	b2ed      	uxtb	r5, r5
 8028c4e:	00f6      	lsls	r6, r6, #3
 8028c50:	fb17 f702 	smulbb	r7, r7, r2
 8028c54:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028c58:	fb15 f202 	smulbb	r2, r5, r2
 8028c5c:	b2f6      	uxtb	r6, r6
 8028c5e:	b2a4      	uxth	r4, r4
 8028c60:	fb00 7003 	mla	r0, r0, r3, r7
 8028c64:	fb06 2303 	mla	r3, r6, r3, r2
 8028c68:	b29a      	uxth	r2, r3
 8028c6a:	1c63      	adds	r3, r4, #1
 8028c6c:	b280      	uxth	r0, r0
 8028c6e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028c72:	1c53      	adds	r3, r2, #1
 8028c74:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028c78:	1c42      	adds	r2, r0, #1
 8028c7a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028c7e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8028c82:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8028c86:	0940      	lsrs	r0, r0, #5
 8028c88:	4323      	orrs	r3, r4
 8028c8a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028c8e:	4303      	orrs	r3, r0
 8028c90:	800b      	strh	r3, [r1, #0]
 8028c92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028c96:	2600      	movs	r6, #0
 8028c98:	e764      	b.n	8028b64 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8028c9a:	2400      	movs	r4, #0
 8028c9c:	4626      	mov	r6, r4
 8028c9e:	e778      	b.n	8028b92 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028ca0:	2400      	movs	r4, #0
 8028ca2:	e776      	b.n	8028b92 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028ca4:	463c      	mov	r4, r7
 8028ca6:	e774      	b.n	8028b92 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028ca8:	2500      	movs	r5, #0
 8028caa:	e78e      	b.n	8028bca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8028cac:	2300      	movs	r3, #0
 8028cae:	461d      	mov	r5, r3
 8028cb0:	e79f      	b.n	8028bf2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028cb2:	4663      	mov	r3, ip
 8028cb4:	4665      	mov	r5, ip
 8028cb6:	e79c      	b.n	8028bf2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028cb8:	2300      	movs	r3, #0
 8028cba:	e79a      	b.n	8028bf2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028cbc:	463b      	mov	r3, r7
 8028cbe:	e798      	b.n	8028bf2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028cc0:	20002338 	.word	0x20002338

08028cc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028cc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028cc8:	b093      	sub	sp, #76	; 0x4c
 8028cca:	461d      	mov	r5, r3
 8028ccc:	920c      	str	r2, [sp, #48]	; 0x30
 8028cce:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8028cd0:	9107      	str	r1, [sp, #28]
 8028cd2:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8028cd6:	9011      	str	r0, [sp, #68]	; 0x44
 8028cd8:	6850      	ldr	r0, [r2, #4]
 8028cda:	6812      	ldr	r2, [r2, #0]
 8028cdc:	fb00 1303 	mla	r3, r0, r3, r1
 8028ce0:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8028ce4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028ce6:	689b      	ldr	r3, [r3, #8]
 8028ce8:	3301      	adds	r3, #1
 8028cea:	f023 0301 	bic.w	r3, r3, #1
 8028cee:	9306      	str	r3, [sp, #24]
 8028cf0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028cf2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8028cf6:	681f      	ldr	r7, [r3, #0]
 8028cf8:	9b07      	ldr	r3, [sp, #28]
 8028cfa:	2b00      	cmp	r3, #0
 8028cfc:	dc03      	bgt.n	8028d06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8028cfe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8028d00:	2b00      	cmp	r3, #0
 8028d02:	f340 8267 	ble.w	80291d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8028d06:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028d08:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028d0c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028d10:	1e48      	subs	r0, r1, #1
 8028d12:	f102 3cff 	add.w	ip, r2, #4294967295
 8028d16:	2d00      	cmp	r5, #0
 8028d18:	f340 80b8 	ble.w	8028e8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8028d1c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028d20:	ea4f 4326 	mov.w	r3, r6, asr #16
 8028d24:	d406      	bmi.n	8028d34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028d26:	4586      	cmp	lr, r0
 8028d28:	da04      	bge.n	8028d34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028d2a:	2b00      	cmp	r3, #0
 8028d2c:	db02      	blt.n	8028d34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028d2e:	4563      	cmp	r3, ip
 8028d30:	f2c0 80ad 	blt.w	8028e8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8028d34:	f11e 0e01 	adds.w	lr, lr, #1
 8028d38:	f100 80a0 	bmi.w	8028e7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028d3c:	4571      	cmp	r1, lr
 8028d3e:	f2c0 809d 	blt.w	8028e7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028d42:	3301      	adds	r3, #1
 8028d44:	f100 809a 	bmi.w	8028e7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028d48:	429a      	cmp	r2, r3
 8028d4a:	f2c0 8097 	blt.w	8028e7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028d4e:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8028d52:	9509      	str	r5, [sp, #36]	; 0x24
 8028d54:	46c8      	mov	r8, r9
 8028d56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028d58:	2b00      	cmp	r3, #0
 8028d5a:	f340 80b6 	ble.w	8028eca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8028d5e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8028d62:	9308      	str	r3, [sp, #32]
 8028d64:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028d66:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8028d6a:	1423      	asrs	r3, r4, #16
 8028d6c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028d70:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8028d74:	f100 813e 	bmi.w	8028ff4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028d78:	f10c 3bff 	add.w	fp, ip, #4294967295
 8028d7c:	455b      	cmp	r3, fp
 8028d7e:	f280 8139 	bge.w	8028ff4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028d82:	2800      	cmp	r0, #0
 8028d84:	f2c0 8136 	blt.w	8028ff4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028d88:	f10e 3bff 	add.w	fp, lr, #4294967295
 8028d8c:	4558      	cmp	r0, fp
 8028d8e:	f280 8131 	bge.w	8028ff4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028d92:	9a06      	ldr	r2, [sp, #24]
 8028d94:	fb00 3302 	mla	r3, r0, r2, r3
 8028d98:	0858      	lsrs	r0, r3, #1
 8028d9a:	07da      	lsls	r2, r3, #31
 8028d9c:	f817 c000 	ldrb.w	ip, [r7, r0]
 8028da0:	9a08      	ldr	r2, [sp, #32]
 8028da2:	bf54      	ite	pl
 8028da4:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028da8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028dac:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028db0:	fa5f fc8c 	uxtb.w	ip, ip
 8028db4:	2a00      	cmp	r2, #0
 8028db6:	f000 80cb 	beq.w	8028f50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8028dba:	1c58      	adds	r0, r3, #1
 8028dbc:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8028dc0:	07c0      	lsls	r0, r0, #31
 8028dc2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8028dc6:	bf54      	ite	pl
 8028dc8:	f00e 0e0f 	andpl.w	lr, lr, #15
 8028dcc:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8028dd0:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8028dd4:	fa5f fe8e 	uxtb.w	lr, lr
 8028dd8:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8028ddc:	b1b9      	cbz	r1, 8028e0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028dde:	4453      	add	r3, sl
 8028de0:	0858      	lsrs	r0, r3, #1
 8028de2:	07da      	lsls	r2, r3, #31
 8028de4:	5c38      	ldrb	r0, [r7, r0]
 8028de6:	bf54      	ite	pl
 8028de8:	f000 000f 	andpl.w	r0, r0, #15
 8028dec:	1100      	asrmi	r0, r0, #4
 8028dee:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028df2:	b2c0      	uxtb	r0, r0
 8028df4:	900a      	str	r0, [sp, #40]	; 0x28
 8028df6:	1c58      	adds	r0, r3, #1
 8028df8:	0843      	lsrs	r3, r0, #1
 8028dfa:	07c2      	lsls	r2, r0, #31
 8028dfc:	5cfb      	ldrb	r3, [r7, r3]
 8028dfe:	bf54      	ite	pl
 8028e00:	f003 030f 	andpl.w	r3, r3, #15
 8028e04:	111b      	asrmi	r3, r3, #4
 8028e06:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028e0a:	b2db      	uxtb	r3, r3
 8028e0c:	930e      	str	r3, [sp, #56]	; 0x38
 8028e0e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8028e12:	b289      	uxth	r1, r1
 8028e14:	fb02 f301 	mul.w	r3, r2, r1
 8028e18:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8028e1c:	0112      	lsls	r2, r2, #4
 8028e1e:	b289      	uxth	r1, r1
 8028e20:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8028e24:	1a40      	subs	r0, r0, r1
 8028e26:	fa1f fe80 	uxth.w	lr, r0
 8028e2a:	1ad2      	subs	r2, r2, r3
 8028e2c:	980d      	ldr	r0, [sp, #52]	; 0x34
 8028e2e:	b292      	uxth	r2, r2
 8028e30:	4342      	muls	r2, r0
 8028e32:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8028e36:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028e38:	fb01 c102 	mla	r1, r1, r2, ip
 8028e3c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8028e3e:	fb03 1302 	mla	r3, r3, r2, r1
 8028e42:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028e46:	2bff      	cmp	r3, #255	; 0xff
 8028e48:	f040 8093 	bne.w	8028f72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8028e4c:	4bbe      	ldr	r3, [pc, #760]	; (8029148 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028e4e:	681a      	ldr	r2, [r3, #0]
 8028e50:	4bbe      	ldr	r3, [pc, #760]	; (802914c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8028e52:	0951      	lsrs	r1, r2, #5
 8028e54:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8028e58:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8028e5c:	430b      	orrs	r3, r1
 8028e5e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028e62:	4313      	orrs	r3, r2
 8028e64:	f8a8 3000 	strh.w	r3, [r8]
 8028e68:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8028e6a:	441c      	add	r4, r3
 8028e6c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028e6e:	441e      	add	r6, r3
 8028e70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028e72:	3b01      	subs	r3, #1
 8028e74:	f108 0802 	add.w	r8, r8, #2
 8028e78:	9309      	str	r3, [sp, #36]	; 0x24
 8028e7a:	e76c      	b.n	8028d56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028e7c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8028e7e:	441c      	add	r4, r3
 8028e80:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028e82:	3d01      	subs	r5, #1
 8028e84:	441e      	add	r6, r3
 8028e86:	f109 0902 	add.w	r9, r9, #2
 8028e8a:	e744      	b.n	8028d16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8028e8c:	d021      	beq.n	8028ed2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8028e8e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8028e90:	1e6b      	subs	r3, r5, #1
 8028e92:	fb00 4003 	mla	r0, r0, r3, r4
 8028e96:	1400      	asrs	r0, r0, #16
 8028e98:	f53f af59 	bmi.w	8028d4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028e9c:	3901      	subs	r1, #1
 8028e9e:	4288      	cmp	r0, r1
 8028ea0:	f6bf af55 	bge.w	8028d4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028ea4:	9920      	ldr	r1, [sp, #128]	; 0x80
 8028ea6:	fb01 6303 	mla	r3, r1, r3, r6
 8028eaa:	141b      	asrs	r3, r3, #16
 8028eac:	f53f af4f 	bmi.w	8028d4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028eb0:	3a01      	subs	r2, #1
 8028eb2:	4293      	cmp	r3, r2
 8028eb4:	f6bf af4b 	bge.w	8028d4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028eb8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8028ebc:	9308      	str	r3, [sp, #32]
 8028ebe:	46a8      	mov	r8, r5
 8028ec0:	46ce      	mov	lr, r9
 8028ec2:	f1b8 0f00 	cmp.w	r8, #0
 8028ec6:	f300 80b5 	bgt.w	8029034 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8028eca:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8028ece:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8028ed2:	9b07      	ldr	r3, [sp, #28]
 8028ed4:	2b00      	cmp	r3, #0
 8028ed6:	f340 817d 	ble.w	80291d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8028eda:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028ede:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028ee2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8028ee6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028ee8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028eec:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028ef0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8028ef4:	eef0 6a62 	vmov.f32	s13, s5
 8028ef8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028efc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028f00:	ee77 2a62 	vsub.f32	s5, s14, s5
 8028f04:	ee16 4a90 	vmov	r4, s13
 8028f08:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028f0c:	eef0 6a43 	vmov.f32	s13, s6
 8028f10:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8028f14:	ee12 2a90 	vmov	r2, s5
 8028f18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028f1c:	fb92 f3f3 	sdiv	r3, r2, r3
 8028f20:	ee13 2a10 	vmov	r2, s6
 8028f24:	931f      	str	r3, [sp, #124]	; 0x7c
 8028f26:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028f28:	fb92 f3f3 	sdiv	r3, r2, r3
 8028f2c:	9320      	str	r3, [sp, #128]	; 0x80
 8028f2e:	9b07      	ldr	r3, [sp, #28]
 8028f30:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8028f32:	3b01      	subs	r3, #1
 8028f34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028f38:	9307      	str	r3, [sp, #28]
 8028f3a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028f3c:	ee16 6a90 	vmov	r6, s13
 8028f40:	bf14      	ite	ne
 8028f42:	461d      	movne	r5, r3
 8028f44:	4615      	moveq	r5, r2
 8028f46:	eeb0 3a67 	vmov.f32	s6, s15
 8028f4a:	eef0 2a47 	vmov.f32	s5, s14
 8028f4e:	e6d3      	b.n	8028cf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8028f50:	2900      	cmp	r1, #0
 8028f52:	f43f af5c 	beq.w	8028e0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028f56:	eb0a 0003 	add.w	r0, sl, r3
 8028f5a:	0843      	lsrs	r3, r0, #1
 8028f5c:	07c0      	lsls	r0, r0, #31
 8028f5e:	5cfb      	ldrb	r3, [r7, r3]
 8028f60:	bf54      	ite	pl
 8028f62:	f003 030f 	andpl.w	r3, r3, #15
 8028f66:	111b      	asrmi	r3, r3, #4
 8028f68:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028f6c:	b2db      	uxtb	r3, r3
 8028f6e:	930a      	str	r3, [sp, #40]	; 0x28
 8028f70:	e74d      	b.n	8028e0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028f72:	2b00      	cmp	r3, #0
 8028f74:	f43f af78 	beq.w	8028e68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028f78:	4a73      	ldr	r2, [pc, #460]	; (8029148 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028f7a:	f8b8 c000 	ldrh.w	ip, [r8]
 8028f7e:	6810      	ldr	r0, [r2, #0]
 8028f80:	fa1f fe83 	uxth.w	lr, r3
 8028f84:	ea4f 212c 	mov.w	r1, ip, asr #8
 8028f88:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8028f8c:	43db      	mvns	r3, r3
 8028f8e:	b2db      	uxtb	r3, r3
 8028f90:	fb12 f20e 	smulbb	r2, r2, lr
 8028f94:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8028f98:	fb01 2103 	mla	r1, r1, r3, r2
 8028f9c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8028fa0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8028fa4:	b2c0      	uxtb	r0, r0
 8028fa6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8028faa:	fb1b fb0e 	smulbb	fp, fp, lr
 8028fae:	b289      	uxth	r1, r1
 8028fb0:	fb10 fe0e 	smulbb	lr, r0, lr
 8028fb4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8028fb8:	fa5f fc8c 	uxtb.w	ip, ip
 8028fbc:	fb02 b203 	mla	r2, r2, r3, fp
 8028fc0:	1c48      	adds	r0, r1, #1
 8028fc2:	fb0c e303 	mla	r3, ip, r3, lr
 8028fc6:	b292      	uxth	r2, r2
 8028fc8:	b29b      	uxth	r3, r3
 8028fca:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8028fce:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8028fd2:	f102 0b01 	add.w	fp, r2, #1
 8028fd6:	1c59      	adds	r1, r3, #1
 8028fd8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8028fdc:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8028fe0:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8028fe4:	0952      	lsrs	r2, r2, #5
 8028fe6:	4301      	orrs	r1, r0
 8028fe8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8028fec:	4311      	orrs	r1, r2
 8028fee:	f8a8 1000 	strh.w	r1, [r8]
 8028ff2:	e739      	b.n	8028e68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028ff4:	f113 0b01 	adds.w	fp, r3, #1
 8028ff8:	f53f af36 	bmi.w	8028e68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028ffc:	45dc      	cmp	ip, fp
 8028ffe:	f6ff af33 	blt.w	8028e68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8029002:	f110 0b01 	adds.w	fp, r0, #1
 8029006:	f53f af2f 	bmi.w	8028e68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802900a:	45de      	cmp	lr, fp
 802900c:	f6ff af2c 	blt.w	8028e68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8029010:	9a08      	ldr	r2, [sp, #32]
 8029012:	9302      	str	r3, [sp, #8]
 8029014:	fa0f f38e 	sxth.w	r3, lr
 8029018:	9301      	str	r3, [sp, #4]
 802901a:	fa0f f38c 	sxth.w	r3, ip
 802901e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8029022:	9105      	str	r1, [sp, #20]
 8029024:	9300      	str	r3, [sp, #0]
 8029026:	463a      	mov	r2, r7
 8029028:	4653      	mov	r3, sl
 802902a:	4641      	mov	r1, r8
 802902c:	9811      	ldr	r0, [sp, #68]	; 0x44
 802902e:	f7ff fd73 	bl	8028b18 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8029032:	e719      	b.n	8028e68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8029034:	9906      	ldr	r1, [sp, #24]
 8029036:	1422      	asrs	r2, r4, #16
 8029038:	1433      	asrs	r3, r6, #16
 802903a:	fb01 2303 	mla	r3, r1, r3, r2
 802903e:	085a      	lsrs	r2, r3, #1
 8029040:	07d9      	lsls	r1, r3, #31
 8029042:	5cba      	ldrb	r2, [r7, r2]
 8029044:	bf54      	ite	pl
 8029046:	f002 020f 	andpl.w	r2, r2, #15
 802904a:	1112      	asrmi	r2, r2, #4
 802904c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8029050:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8029054:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8029058:	b2d2      	uxtb	r2, r2
 802905a:	2800      	cmp	r0, #0
 802905c:	d062      	beq.n	8029124 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 802905e:	f103 0a01 	add.w	sl, r3, #1
 8029062:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8029066:	f01a 0f01 	tst.w	sl, #1
 802906a:	5c79      	ldrb	r1, [r7, r1]
 802906c:	bf0c      	ite	eq
 802906e:	f001 010f 	andeq.w	r1, r1, #15
 8029072:	1109      	asrne	r1, r1, #4
 8029074:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8029078:	b2c9      	uxtb	r1, r1
 802907a:	910f      	str	r1, [sp, #60]	; 0x3c
 802907c:	f1bc 0f00 	cmp.w	ip, #0
 8029080:	d019      	beq.n	80290b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8029082:	9908      	ldr	r1, [sp, #32]
 8029084:	440b      	add	r3, r1
 8029086:	0859      	lsrs	r1, r3, #1
 8029088:	f013 0f01 	tst.w	r3, #1
 802908c:	5c79      	ldrb	r1, [r7, r1]
 802908e:	bf0c      	ite	eq
 8029090:	f001 010f 	andeq.w	r1, r1, #15
 8029094:	1109      	asrne	r1, r1, #4
 8029096:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802909a:	b2c9      	uxtb	r1, r1
 802909c:	3301      	adds	r3, #1
 802909e:	910b      	str	r1, [sp, #44]	; 0x2c
 80290a0:	0859      	lsrs	r1, r3, #1
 80290a2:	07db      	lsls	r3, r3, #31
 80290a4:	5c79      	ldrb	r1, [r7, r1]
 80290a6:	bf54      	ite	pl
 80290a8:	f001 010f 	andpl.w	r1, r1, #15
 80290ac:	1109      	asrmi	r1, r1, #4
 80290ae:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80290b2:	b2c9      	uxtb	r1, r1
 80290b4:	9110      	str	r1, [sp, #64]	; 0x40
 80290b6:	b280      	uxth	r0, r0
 80290b8:	fa1f fc8c 	uxth.w	ip, ip
 80290bc:	fb00 f30c 	mul.w	r3, r0, ip
 80290c0:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80290c4:	0100      	lsls	r0, r0, #4
 80290c6:	fa1f fc8c 	uxth.w	ip, ip
 80290ca:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80290ce:	eba1 010c 	sub.w	r1, r1, ip
 80290d2:	fa1f fa81 	uxth.w	sl, r1
 80290d6:	1ac0      	subs	r0, r0, r3
 80290d8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80290da:	b280      	uxth	r0, r0
 80290dc:	4348      	muls	r0, r1
 80290de:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80290e0:	fb02 020a 	mla	r2, r2, sl, r0
 80290e4:	fb0c 2c01 	mla	ip, ip, r1, r2
 80290e8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80290ea:	fb03 c302 	mla	r3, r3, r2, ip
 80290ee:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80290f2:	2bff      	cmp	r3, #255	; 0xff
 80290f4:	d12c      	bne.n	8029150 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 80290f6:	4b14      	ldr	r3, [pc, #80]	; (8029148 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80290f8:	681a      	ldr	r2, [r3, #0]
 80290fa:	4b14      	ldr	r3, [pc, #80]	; (802914c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80290fc:	0951      	lsrs	r1, r2, #5
 80290fe:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8029102:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8029106:	430b      	orrs	r3, r1
 8029108:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802910c:	4313      	orrs	r3, r2
 802910e:	f8ae 3000 	strh.w	r3, [lr]
 8029112:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8029114:	441c      	add	r4, r3
 8029116:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8029118:	f10e 0e02 	add.w	lr, lr, #2
 802911c:	441e      	add	r6, r3
 802911e:	f108 38ff 	add.w	r8, r8, #4294967295
 8029122:	e6ce      	b.n	8028ec2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8029124:	f1bc 0f00 	cmp.w	ip, #0
 8029128:	d0c5      	beq.n	80290b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802912a:	9908      	ldr	r1, [sp, #32]
 802912c:	440b      	add	r3, r1
 802912e:	0859      	lsrs	r1, r3, #1
 8029130:	07db      	lsls	r3, r3, #31
 8029132:	5c79      	ldrb	r1, [r7, r1]
 8029134:	bf54      	ite	pl
 8029136:	f001 010f 	andpl.w	r1, r1, #15
 802913a:	1109      	asrmi	r1, r1, #4
 802913c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8029140:	b2c9      	uxtb	r1, r1
 8029142:	910b      	str	r1, [sp, #44]	; 0x2c
 8029144:	e7b7      	b.n	80290b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8029146:	bf00      	nop
 8029148:	20002338 	.word	0x20002338
 802914c:	fffff800 	.word	0xfffff800
 8029150:	2b00      	cmp	r3, #0
 8029152:	d0de      	beq.n	8029112 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8029154:	4a21      	ldr	r2, [pc, #132]	; (80291dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8029156:	f8be c000 	ldrh.w	ip, [lr]
 802915a:	6810      	ldr	r0, [r2, #0]
 802915c:	fa1f fa83 	uxth.w	sl, r3
 8029160:	ea4f 212c 	mov.w	r1, ip, asr #8
 8029164:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8029168:	43db      	mvns	r3, r3
 802916a:	b2db      	uxtb	r3, r3
 802916c:	fb12 f20a 	smulbb	r2, r2, sl
 8029170:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8029174:	fb01 2103 	mla	r1, r1, r3, r2
 8029178:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802917c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8029180:	b2c0      	uxtb	r0, r0
 8029182:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8029186:	fa5f fc8c 	uxtb.w	ip, ip
 802918a:	fb10 f00a 	smulbb	r0, r0, sl
 802918e:	fb0c 0003 	mla	r0, ip, r3, r0
 8029192:	b289      	uxth	r1, r1
 8029194:	fb1b fb0a 	smulbb	fp, fp, sl
 8029198:	b280      	uxth	r0, r0
 802919a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802919e:	fb02 b203 	mla	r2, r2, r3, fp
 80291a2:	1c4b      	adds	r3, r1, #1
 80291a4:	f100 0b01 	add.w	fp, r0, #1
 80291a8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80291ac:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80291b0:	b292      	uxth	r2, r2
 80291b2:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80291b6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80291ba:	ea4b 0101 	orr.w	r1, fp, r1
 80291be:	f102 0b01 	add.w	fp, r2, #1
 80291c2:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80291c6:	0952      	lsrs	r2, r2, #5
 80291c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80291cc:	4311      	orrs	r1, r2
 80291ce:	f8ae 1000 	strh.w	r1, [lr]
 80291d2:	e79e      	b.n	8029112 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80291d4:	b013      	add	sp, #76	; 0x4c
 80291d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80291da:	bf00      	nop
 80291dc:	20002338 	.word	0x20002338

080291e0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80291e0:	b570      	push	{r4, r5, r6, lr}
 80291e2:	1208      	asrs	r0, r1, #8
 80291e4:	b29e      	uxth	r6, r3
 80291e6:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80291ea:	1213      	asrs	r3, r2, #8
 80291ec:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80291f0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80291f4:	fb13 f305 	smulbb	r3, r3, r5
 80291f8:	fb10 f006 	smulbb	r0, r0, r6
 80291fc:	4418      	add	r0, r3
 80291fe:	10cc      	asrs	r4, r1, #3
 8029200:	10d3      	asrs	r3, r2, #3
 8029202:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8029206:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802920a:	fb13 f305 	smulbb	r3, r3, r5
 802920e:	fb14 f406 	smulbb	r4, r4, r6
 8029212:	00c9      	lsls	r1, r1, #3
 8029214:	00d2      	lsls	r2, r2, #3
 8029216:	441c      	add	r4, r3
 8029218:	b2d2      	uxtb	r2, r2
 802921a:	b2cb      	uxtb	r3, r1
 802921c:	fb12 f205 	smulbb	r2, r2, r5
 8029220:	b280      	uxth	r0, r0
 8029222:	fb13 f306 	smulbb	r3, r3, r6
 8029226:	4413      	add	r3, r2
 8029228:	1c42      	adds	r2, r0, #1
 802922a:	b29b      	uxth	r3, r3
 802922c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8029230:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8029234:	1c58      	adds	r0, r3, #1
 8029236:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802923a:	b2a4      	uxth	r4, r4
 802923c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8029240:	4310      	orrs	r0, r2
 8029242:	1c62      	adds	r2, r4, #1
 8029244:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8029248:	0964      	lsrs	r4, r4, #5
 802924a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802924e:	4320      	orrs	r0, r4
 8029250:	bd70      	pop	{r4, r5, r6, pc}
	...

08029254 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8029254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029258:	b08f      	sub	sp, #60	; 0x3c
 802925a:	461c      	mov	r4, r3
 802925c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8029260:	9004      	str	r0, [sp, #16]
 8029262:	460d      	mov	r5, r1
 8029264:	4616      	mov	r6, r2
 8029266:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8029268:	2f00      	cmp	r7, #0
 802926a:	f000 80f6 	beq.w	802945a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 802926e:	6820      	ldr	r0, [r4, #0]
 8029270:	6861      	ldr	r1, [r4, #4]
 8029272:	aa0a      	add	r2, sp, #40	; 0x28
 8029274:	c203      	stmia	r2!, {r0, r1}
 8029276:	6818      	ldr	r0, [r3, #0]
 8029278:	6859      	ldr	r1, [r3, #4]
 802927a:	aa0c      	add	r2, sp, #48	; 0x30
 802927c:	c203      	stmia	r2!, {r0, r1}
 802927e:	a80a      	add	r0, sp, #40	; 0x28
 8029280:	f7ef fbbe 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029284:	4621      	mov	r1, r4
 8029286:	a80c      	add	r0, sp, #48	; 0x30
 8029288:	f7ef fbfe 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802928c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8029290:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8029294:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8029298:	f002 0301 	and.w	r3, r2, #1
 802929c:	9306      	str	r3, [sp, #24]
 802929e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80292a2:	f003 0101 	and.w	r1, r3, #1
 80292a6:	9105      	str	r1, [sp, #20]
 80292a8:	9805      	ldr	r0, [sp, #20]
 80292aa:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80292ae:	4403      	add	r3, r0
 80292b0:	fb01 2303 	mla	r3, r1, r3, r2
 80292b4:	f04f 0802 	mov.w	r8, #2
 80292b8:	fb93 f3f8 	sdiv	r3, r3, r8
 80292bc:	441d      	add	r5, r3
 80292be:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80292c2:	441a      	add	r2, r3
 80292c4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80292c8:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80292cc:	4419      	add	r1, r3
 80292ce:	4b64      	ldr	r3, [pc, #400]	; (8029460 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80292d0:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80292d4:	6818      	ldr	r0, [r3, #0]
 80292d6:	6803      	ldr	r3, [r0, #0]
 80292d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80292da:	4798      	blx	r3
 80292dc:	4a61      	ldr	r2, [pc, #388]	; (8029464 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80292de:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80292e2:	8813      	ldrh	r3, [r2, #0]
 80292e4:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 80292e8:	2fff      	cmp	r7, #255	; 0xff
 80292ea:	fb03 a404 	mla	r4, r3, r4, sl
 80292ee:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80292f2:	f106 0604 	add.w	r6, r6, #4
 80292f6:	4611      	mov	r1, r2
 80292f8:	fb03 fb0b 	mul.w	fp, r3, fp
 80292fc:	d06b      	beq.n	80293d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80292fe:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8029302:	9303      	str	r3, [sp, #12]
 8029304:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8029308:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802930c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8029310:	9b07      	ldr	r3, [sp, #28]
 8029312:	42a3      	cmp	r3, r4
 8029314:	f240 809c 	bls.w	8029450 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8029318:	9b06      	ldr	r3, [sp, #24]
 802931a:	2b00      	cmp	r3, #0
 802931c:	d039      	beq.n	8029392 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 802931e:	782b      	ldrb	r3, [r5, #0]
 8029320:	8822      	ldrh	r2, [r4, #0]
 8029322:	9804      	ldr	r0, [sp, #16]
 8029324:	f003 030f 	and.w	r3, r3, #15
 8029328:	f105 0801 	add.w	r8, r5, #1
 802932c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8029330:	9b03      	ldr	r3, [sp, #12]
 8029332:	9300      	str	r3, [sp, #0]
 8029334:	463b      	mov	r3, r7
 8029336:	f7ff ff53 	bl	80291e0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802933a:	f824 0b02 	strh.w	r0, [r4], #2
 802933e:	f109 3bff 	add.w	fp, r9, #4294967295
 8029342:	f1bb 0f01 	cmp.w	fp, #1
 8029346:	46a2      	mov	sl, r4
 8029348:	f104 0404 	add.w	r4, r4, #4
 802934c:	dd24      	ble.n	8029398 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 802934e:	f898 3000 	ldrb.w	r3, [r8]
 8029352:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8029356:	9804      	ldr	r0, [sp, #16]
 8029358:	091b      	lsrs	r3, r3, #4
 802935a:	f1ab 0b02 	sub.w	fp, fp, #2
 802935e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8029362:	9b03      	ldr	r3, [sp, #12]
 8029364:	9300      	str	r3, [sp, #0]
 8029366:	463b      	mov	r3, r7
 8029368:	f7ff ff3a 	bl	80291e0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802936c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8029370:	f818 3b01 	ldrb.w	r3, [r8], #1
 8029374:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8029378:	9804      	ldr	r0, [sp, #16]
 802937a:	f003 030f 	and.w	r3, r3, #15
 802937e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8029382:	9b03      	ldr	r3, [sp, #12]
 8029384:	9300      	str	r3, [sp, #0]
 8029386:	463b      	mov	r3, r7
 8029388:	f7ff ff2a 	bl	80291e0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802938c:	f824 0c02 	strh.w	r0, [r4, #-2]
 8029390:	e7d7      	b.n	8029342 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8029392:	46a8      	mov	r8, r5
 8029394:	46cb      	mov	fp, r9
 8029396:	e7d4      	b.n	8029342 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8029398:	d10e      	bne.n	80293b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802939a:	f898 3000 	ldrb.w	r3, [r8]
 802939e:	f8ba 2000 	ldrh.w	r2, [sl]
 80293a2:	9804      	ldr	r0, [sp, #16]
 80293a4:	091b      	lsrs	r3, r3, #4
 80293a6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80293aa:	9b03      	ldr	r3, [sp, #12]
 80293ac:	9300      	str	r3, [sp, #0]
 80293ae:	463b      	mov	r3, r7
 80293b0:	f7ff ff16 	bl	80291e0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80293b4:	f82a 0b02 	strh.w	r0, [sl], #2
 80293b8:	9b08      	ldr	r3, [sp, #32]
 80293ba:	9a05      	ldr	r2, [sp, #20]
 80293bc:	881c      	ldrh	r4, [r3, #0]
 80293be:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80293c2:	eba4 0409 	sub.w	r4, r4, r9
 80293c6:	4413      	add	r3, r2
 80293c8:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80293cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80293ce:	fb93 f3f2 	sdiv	r3, r3, r2
 80293d2:	441d      	add	r5, r3
 80293d4:	e79c      	b.n	8029310 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80293d6:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80293da:	45a3      	cmp	fp, r4
 80293dc:	d938      	bls.n	8029450 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80293de:	9b06      	ldr	r3, [sp, #24]
 80293e0:	b1f3      	cbz	r3, 8029420 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80293e2:	782b      	ldrb	r3, [r5, #0]
 80293e4:	f003 030f 	and.w	r3, r3, #15
 80293e8:	1c6a      	adds	r2, r5, #1
 80293ea:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80293ee:	8023      	strh	r3, [r4, #0]
 80293f0:	f109 30ff 	add.w	r0, r9, #4294967295
 80293f4:	3402      	adds	r4, #2
 80293f6:	2801      	cmp	r0, #1
 80293f8:	4623      	mov	r3, r4
 80293fa:	f104 0404 	add.w	r4, r4, #4
 80293fe:	dd12      	ble.n	8029426 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8029400:	7813      	ldrb	r3, [r2, #0]
 8029402:	091b      	lsrs	r3, r3, #4
 8029404:	3802      	subs	r0, #2
 8029406:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802940a:	f824 3c04 	strh.w	r3, [r4, #-4]
 802940e:	f812 3b01 	ldrb.w	r3, [r2], #1
 8029412:	f003 030f 	and.w	r3, r3, #15
 8029416:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802941a:	f824 3c02 	strh.w	r3, [r4, #-2]
 802941e:	e7ea      	b.n	80293f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8029420:	462a      	mov	r2, r5
 8029422:	4648      	mov	r0, r9
 8029424:	e7e7      	b.n	80293f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8029426:	d106      	bne.n	8029436 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8029428:	7812      	ldrb	r2, [r2, #0]
 802942a:	0912      	lsrs	r2, r2, #4
 802942c:	3302      	adds	r3, #2
 802942e:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8029432:	f823 2c02 	strh.w	r2, [r3, #-2]
 8029436:	880c      	ldrh	r4, [r1, #0]
 8029438:	9a05      	ldr	r2, [sp, #20]
 802943a:	eba4 0409 	sub.w	r4, r4, r9
 802943e:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8029442:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8029446:	4413      	add	r3, r2
 8029448:	fb93 f3f8 	sdiv	r3, r3, r8
 802944c:	441d      	add	r5, r3
 802944e:	e7c4      	b.n	80293da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8029450:	4b03      	ldr	r3, [pc, #12]	; (8029460 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8029452:	6818      	ldr	r0, [r3, #0]
 8029454:	6803      	ldr	r3, [r0, #0]
 8029456:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029458:	4798      	blx	r3
 802945a:	b00f      	add	sp, #60	; 0x3c
 802945c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029460:	20002328 	.word	0x20002328
 8029464:	20002322 	.word	0x20002322

08029468 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8029468:	b5f0      	push	{r4, r5, r6, r7, lr}
 802946a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 802946e:	2dff      	cmp	r5, #255	; 0xff
 8029470:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8029474:	d10c      	bne.n	8029490 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8029476:	2bff      	cmp	r3, #255	; 0xff
 8029478:	d10a      	bne.n	8029490 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802947a:	4b25      	ldr	r3, [pc, #148]	; (8029510 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 802947c:	0948      	lsrs	r0, r1, #5
 802947e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8029482:	403b      	ands	r3, r7
 8029484:	4318      	orrs	r0, r3
 8029486:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802948a:	4308      	orrs	r0, r1
 802948c:	b280      	uxth	r0, r0
 802948e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029490:	fb15 f503 	smulbb	r5, r5, r3
 8029494:	b2ab      	uxth	r3, r5
 8029496:	1c5d      	adds	r5, r3, #1
 8029498:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 802949c:	1214      	asrs	r4, r2, #8
 802949e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80294a2:	fa1f fc85 	uxth.w	ip, r5
 80294a6:	10d6      	asrs	r6, r2, #3
 80294a8:	00d0      	lsls	r0, r2, #3
 80294aa:	43ed      	mvns	r5, r5
 80294ac:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80294b0:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80294b4:	b2eb      	uxtb	r3, r5
 80294b6:	b2c0      	uxtb	r0, r0
 80294b8:	fb12 f20c 	smulbb	r2, r2, ip
 80294bc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80294c0:	fb04 2403 	mla	r4, r4, r3, r2
 80294c4:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80294c8:	b2c8      	uxtb	r0, r1
 80294ca:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80294ce:	b2fd      	uxtb	r5, r7
 80294d0:	fb10 f00c 	smulbb	r0, r0, ip
 80294d4:	b2a4      	uxth	r4, r4
 80294d6:	fb02 0003 	mla	r0, r2, r3, r0
 80294da:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80294de:	fb15 f50c 	smulbb	r5, r5, ip
 80294e2:	fb06 5503 	mla	r5, r6, r3, r5
 80294e6:	b283      	uxth	r3, r0
 80294e8:	1c60      	adds	r0, r4, #1
 80294ea:	b2ad      	uxth	r5, r5
 80294ec:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80294f0:	1c58      	adds	r0, r3, #1
 80294f2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80294f6:	1c6b      	adds	r3, r5, #1
 80294f8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80294fc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8029500:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8029504:	096d      	lsrs	r5, r5, #5
 8029506:	4320      	orrs	r0, r4
 8029508:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802950c:	4328      	orrs	r0, r5
 802950e:	e7be      	b.n	802948e <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8029510:	00fff800 	.word	0x00fff800

08029514 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8029514:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029518:	461c      	mov	r4, r3
 802951a:	b08d      	sub	sp, #52	; 0x34
 802951c:	460d      	mov	r5, r1
 802951e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8029520:	6861      	ldr	r1, [r4, #4]
 8029522:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8029526:	4680      	mov	r8, r0
 8029528:	6820      	ldr	r0, [r4, #0]
 802952a:	4616      	mov	r6, r2
 802952c:	aa08      	add	r2, sp, #32
 802952e:	c203      	stmia	r2!, {r0, r1}
 8029530:	6818      	ldr	r0, [r3, #0]
 8029532:	6859      	ldr	r1, [r3, #4]
 8029534:	aa0a      	add	r2, sp, #40	; 0x28
 8029536:	c203      	stmia	r2!, {r0, r1}
 8029538:	a808      	add	r0, sp, #32
 802953a:	f7ef fa61 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802953e:	4621      	mov	r1, r4
 8029540:	a80a      	add	r0, sp, #40	; 0x28
 8029542:	f7ef faa1 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029546:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 802954a:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 802954e:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8029552:	f002 0301 	and.w	r3, r2, #1
 8029556:	9303      	str	r3, [sp, #12]
 8029558:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802955c:	f003 0101 	and.w	r1, r3, #1
 8029560:	9102      	str	r1, [sp, #8]
 8029562:	9802      	ldr	r0, [sp, #8]
 8029564:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8029568:	4403      	add	r3, r0
 802956a:	fb01 2303 	mla	r3, r1, r3, r2
 802956e:	f04f 0a02 	mov.w	sl, #2
 8029572:	fb93 f3fa 	sdiv	r3, r3, sl
 8029576:	441d      	add	r5, r3
 8029578:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 802957c:	441a      	add	r2, r3
 802957e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8029582:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8029586:	4a3f      	ldr	r2, [pc, #252]	; (8029684 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8029588:	9205      	str	r2, [sp, #20]
 802958a:	4419      	add	r1, r3
 802958c:	6810      	ldr	r0, [r2, #0]
 802958e:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8029592:	6803      	ldr	r3, [r0, #0]
 8029594:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8029596:	4798      	blx	r3
 8029598:	4b3b      	ldr	r3, [pc, #236]	; (8029688 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802959a:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 802959e:	8819      	ldrh	r1, [r3, #0]
 80295a0:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 80295a4:	fb01 c404 	mla	r4, r1, r4, ip
 80295a8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80295ac:	434f      	muls	r7, r1
 80295ae:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80295b2:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80295b6:	3604      	adds	r6, #4
 80295b8:	9204      	str	r2, [sp, #16]
 80295ba:	9b04      	ldr	r3, [sp, #16]
 80295bc:	429c      	cmp	r4, r3
 80295be:	d258      	bcs.n	8029672 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80295c0:	9b03      	ldr	r3, [sp, #12]
 80295c2:	2b00      	cmp	r3, #0
 80295c4:	d034      	beq.n	8029630 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80295c6:	782b      	ldrb	r3, [r5, #0]
 80295c8:	f003 030f 	and.w	r3, r3, #15
 80295cc:	1c6f      	adds	r7, r5, #1
 80295ce:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80295d2:	0e0b      	lsrs	r3, r1, #24
 80295d4:	d006      	beq.n	80295e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80295d6:	8822      	ldrh	r2, [r4, #0]
 80295d8:	9300      	str	r3, [sp, #0]
 80295da:	4640      	mov	r0, r8
 80295dc:	464b      	mov	r3, r9
 80295de:	f7ff ff43 	bl	8029468 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80295e2:	8020      	strh	r0, [r4, #0]
 80295e4:	3402      	adds	r4, #2
 80295e6:	f10b 3aff 	add.w	sl, fp, #4294967295
 80295ea:	f1ba 0f01 	cmp.w	sl, #1
 80295ee:	dd22      	ble.n	8029636 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80295f0:	783b      	ldrb	r3, [r7, #0]
 80295f2:	091b      	lsrs	r3, r3, #4
 80295f4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80295f8:	0e0b      	lsrs	r3, r1, #24
 80295fa:	d006      	beq.n	802960a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80295fc:	8822      	ldrh	r2, [r4, #0]
 80295fe:	9300      	str	r3, [sp, #0]
 8029600:	4640      	mov	r0, r8
 8029602:	464b      	mov	r3, r9
 8029604:	f7ff ff30 	bl	8029468 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029608:	8020      	strh	r0, [r4, #0]
 802960a:	f817 3b01 	ldrb.w	r3, [r7], #1
 802960e:	f003 030f 	and.w	r3, r3, #15
 8029612:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029616:	0e0b      	lsrs	r3, r1, #24
 8029618:	d006      	beq.n	8029628 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 802961a:	8862      	ldrh	r2, [r4, #2]
 802961c:	9300      	str	r3, [sp, #0]
 802961e:	4640      	mov	r0, r8
 8029620:	464b      	mov	r3, r9
 8029622:	f7ff ff21 	bl	8029468 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029626:	8060      	strh	r0, [r4, #2]
 8029628:	3404      	adds	r4, #4
 802962a:	f1aa 0a02 	sub.w	sl, sl, #2
 802962e:	e7dc      	b.n	80295ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8029630:	462f      	mov	r7, r5
 8029632:	46da      	mov	sl, fp
 8029634:	e7d9      	b.n	80295ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8029636:	d10d      	bne.n	8029654 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8029638:	783b      	ldrb	r3, [r7, #0]
 802963a:	091b      	lsrs	r3, r3, #4
 802963c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029640:	0e0b      	lsrs	r3, r1, #24
 8029642:	d006      	beq.n	8029652 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8029644:	8822      	ldrh	r2, [r4, #0]
 8029646:	9300      	str	r3, [sp, #0]
 8029648:	4640      	mov	r0, r8
 802964a:	464b      	mov	r3, r9
 802964c:	f7ff ff0c 	bl	8029468 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029650:	8020      	strh	r0, [r4, #0]
 8029652:	3402      	adds	r4, #2
 8029654:	9b06      	ldr	r3, [sp, #24]
 8029656:	9a02      	ldr	r2, [sp, #8]
 8029658:	881b      	ldrh	r3, [r3, #0]
 802965a:	eba3 030b 	sub.w	r3, r3, fp
 802965e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8029662:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8029666:	4413      	add	r3, r2
 8029668:	9a07      	ldr	r2, [sp, #28]
 802966a:	fb93 f3f2 	sdiv	r3, r3, r2
 802966e:	441d      	add	r5, r3
 8029670:	e7a3      	b.n	80295ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8029672:	9b05      	ldr	r3, [sp, #20]
 8029674:	6818      	ldr	r0, [r3, #0]
 8029676:	6803      	ldr	r3, [r0, #0]
 8029678:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802967a:	4798      	blx	r3
 802967c:	b00d      	add	sp, #52	; 0x34
 802967e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029682:	bf00      	nop
 8029684:	20002328 	.word	0x20002328
 8029688:	20002322 	.word	0x20002322

0802968c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 802968c:	b570      	push	{r4, r5, r6, lr}
 802968e:	1214      	asrs	r4, r2, #8
 8029690:	788d      	ldrb	r5, [r1, #2]
 8029692:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8029696:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802969a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802969e:	fb15 f503 	smulbb	r5, r5, r3
 80296a2:	fb04 5506 	mla	r5, r4, r6, r5
 80296a6:	10d0      	asrs	r0, r2, #3
 80296a8:	784c      	ldrb	r4, [r1, #1]
 80296aa:	7809      	ldrb	r1, [r1, #0]
 80296ac:	00d2      	lsls	r2, r2, #3
 80296ae:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80296b2:	b2d2      	uxtb	r2, r2
 80296b4:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80296b8:	fb14 f403 	smulbb	r4, r4, r3
 80296bc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80296c0:	fb11 f303 	smulbb	r3, r1, r3
 80296c4:	fb00 4406 	mla	r4, r0, r6, r4
 80296c8:	fb02 3306 	mla	r3, r2, r6, r3
 80296cc:	b2ad      	uxth	r5, r5
 80296ce:	b29b      	uxth	r3, r3
 80296d0:	b2a4      	uxth	r4, r4
 80296d2:	1c68      	adds	r0, r5, #1
 80296d4:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80296d8:	1c62      	adds	r2, r4, #1
 80296da:	1c58      	adds	r0, r3, #1
 80296dc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80296e0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80296e4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80296e8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80296ec:	0964      	lsrs	r4, r4, #5
 80296ee:	4328      	orrs	r0, r5
 80296f0:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80296f4:	4320      	orrs	r0, r4
 80296f6:	bd70      	pop	{r4, r5, r6, pc}

080296f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80296f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80296fc:	b08f      	sub	sp, #60	; 0x3c
 80296fe:	461c      	mov	r4, r3
 8029700:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8029704:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8029706:	4682      	mov	sl, r0
 8029708:	460e      	mov	r6, r1
 802970a:	4615      	mov	r5, r2
 802970c:	2f00      	cmp	r7, #0
 802970e:	f000 8142 	beq.w	8029996 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8029712:	6820      	ldr	r0, [r4, #0]
 8029714:	6861      	ldr	r1, [r4, #4]
 8029716:	aa0a      	add	r2, sp, #40	; 0x28
 8029718:	c203      	stmia	r2!, {r0, r1}
 802971a:	6818      	ldr	r0, [r3, #0]
 802971c:	6859      	ldr	r1, [r3, #4]
 802971e:	aa0c      	add	r2, sp, #48	; 0x30
 8029720:	c203      	stmia	r2!, {r0, r1}
 8029722:	a80a      	add	r0, sp, #40	; 0x28
 8029724:	f7ef f96c 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029728:	4621      	mov	r1, r4
 802972a:	a80c      	add	r0, sp, #48	; 0x30
 802972c:	f7ef f9ac 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029730:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8029734:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8029738:	f002 0301 	and.w	r3, r2, #1
 802973c:	9306      	str	r3, [sp, #24]
 802973e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8029742:	f003 0101 	and.w	r1, r3, #1
 8029746:	9105      	str	r1, [sp, #20]
 8029748:	9805      	ldr	r0, [sp, #20]
 802974a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 802974e:	4403      	add	r3, r0
 8029750:	fb01 2303 	mla	r3, r1, r3, r2
 8029754:	f04f 0802 	mov.w	r8, #2
 8029758:	fb93 f3f8 	sdiv	r3, r3, r8
 802975c:	441e      	add	r6, r3
 802975e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8029762:	441a      	add	r2, r3
 8029764:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8029768:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 802976c:	4419      	add	r1, r3
 802976e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8029772:	9303      	str	r3, [sp, #12]
 8029774:	4b89      	ldr	r3, [pc, #548]	; (802999c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8029776:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 802977a:	6818      	ldr	r0, [r3, #0]
 802977c:	6803      	ldr	r3, [r0, #0]
 802977e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8029780:	4798      	blx	r3
 8029782:	4a87      	ldr	r2, [pc, #540]	; (80299a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8029784:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8029788:	8813      	ldrh	r3, [r2, #0]
 802978a:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 802978e:	2fff      	cmp	r7, #255	; 0xff
 8029790:	fb03 9404 	mla	r4, r3, r4, r9
 8029794:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029798:	f105 0504 	add.w	r5, r5, #4
 802979c:	4694      	mov	ip, r2
 802979e:	fb03 f30b 	mul.w	r3, r3, fp
 80297a2:	d071      	beq.n	8029888 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80297a4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80297a8:	43f9      	mvns	r1, r7
 80297aa:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80297ae:	b2c9      	uxtb	r1, r1
 80297b0:	9104      	str	r1, [sp, #16]
 80297b2:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80297b6:	9b07      	ldr	r3, [sp, #28]
 80297b8:	42a3      	cmp	r3, r4
 80297ba:	f240 80e7 	bls.w	802998c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80297be:	9b06      	ldr	r3, [sp, #24]
 80297c0:	2b00      	cmp	r3, #0
 80297c2:	d03d      	beq.n	8029840 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80297c4:	7831      	ldrb	r1, [r6, #0]
 80297c6:	9b04      	ldr	r3, [sp, #16]
 80297c8:	8822      	ldrh	r2, [r4, #0]
 80297ca:	9300      	str	r3, [sp, #0]
 80297cc:	f001 010f 	and.w	r1, r1, #15
 80297d0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80297d4:	463b      	mov	r3, r7
 80297d6:	4429      	add	r1, r5
 80297d8:	4650      	mov	r0, sl
 80297da:	f7ff ff57 	bl	802968c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80297de:	9b03      	ldr	r3, [sp, #12]
 80297e0:	f824 0b02 	strh.w	r0, [r4], #2
 80297e4:	f106 0801 	add.w	r8, r6, #1
 80297e8:	f103 3bff 	add.w	fp, r3, #4294967295
 80297ec:	f1bb 0f01 	cmp.w	fp, #1
 80297f0:	46a1      	mov	r9, r4
 80297f2:	f104 0404 	add.w	r4, r4, #4
 80297f6:	dd27      	ble.n	8029848 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80297f8:	f898 1000 	ldrb.w	r1, [r8]
 80297fc:	9b04      	ldr	r3, [sp, #16]
 80297fe:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8029802:	9300      	str	r3, [sp, #0]
 8029804:	0909      	lsrs	r1, r1, #4
 8029806:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802980a:	463b      	mov	r3, r7
 802980c:	4429      	add	r1, r5
 802980e:	4650      	mov	r0, sl
 8029810:	f7ff ff3c 	bl	802968c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8029814:	f824 0c04 	strh.w	r0, [r4, #-4]
 8029818:	f818 1b01 	ldrb.w	r1, [r8], #1
 802981c:	9b04      	ldr	r3, [sp, #16]
 802981e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8029822:	9300      	str	r3, [sp, #0]
 8029824:	f001 010f 	and.w	r1, r1, #15
 8029828:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802982c:	463b      	mov	r3, r7
 802982e:	4429      	add	r1, r5
 8029830:	4650      	mov	r0, sl
 8029832:	f7ff ff2b 	bl	802968c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8029836:	f1ab 0b02 	sub.w	fp, fp, #2
 802983a:	f824 0c02 	strh.w	r0, [r4, #-2]
 802983e:	e7d5      	b.n	80297ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8029840:	46b0      	mov	r8, r6
 8029842:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8029846:	e7d1      	b.n	80297ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8029848:	d10f      	bne.n	802986a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 802984a:	f898 1000 	ldrb.w	r1, [r8]
 802984e:	9b04      	ldr	r3, [sp, #16]
 8029850:	f8b9 2000 	ldrh.w	r2, [r9]
 8029854:	9300      	str	r3, [sp, #0]
 8029856:	0909      	lsrs	r1, r1, #4
 8029858:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802985c:	463b      	mov	r3, r7
 802985e:	4429      	add	r1, r5
 8029860:	4650      	mov	r0, sl
 8029862:	f7ff ff13 	bl	802968c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8029866:	f829 0b02 	strh.w	r0, [r9], #2
 802986a:	9b08      	ldr	r3, [sp, #32]
 802986c:	9a05      	ldr	r2, [sp, #20]
 802986e:	881c      	ldrh	r4, [r3, #0]
 8029870:	9b03      	ldr	r3, [sp, #12]
 8029872:	1ae4      	subs	r4, r4, r3
 8029874:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8029878:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 802987c:	4413      	add	r3, r2
 802987e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029880:	fb93 f3f2 	sdiv	r3, r3, r2
 8029884:	441e      	add	r6, r3
 8029886:	e796      	b.n	80297b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8029888:	4f46      	ldr	r7, [pc, #280]	; (80299a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 802988a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802988e:	42a3      	cmp	r3, r4
 8029890:	d97c      	bls.n	802998c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8029892:	9a06      	ldr	r2, [sp, #24]
 8029894:	2a00      	cmp	r2, #0
 8029896:	d054      	beq.n	8029942 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8029898:	7830      	ldrb	r0, [r6, #0]
 802989a:	f000 000f 	and.w	r0, r0, #15
 802989e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80298a2:	eb05 0e00 	add.w	lr, r5, r0
 80298a6:	5c28      	ldrb	r0, [r5, r0]
 80298a8:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80298ac:	f89e e001 	ldrb.w	lr, [lr, #1]
 80298b0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80298b4:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80298b8:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80298bc:	ea42 020e 	orr.w	r2, r2, lr
 80298c0:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80298c4:	f824 2b02 	strh.w	r2, [r4], #2
 80298c8:	9a03      	ldr	r2, [sp, #12]
 80298ca:	1c71      	adds	r1, r6, #1
 80298cc:	f102 3eff 	add.w	lr, r2, #4294967295
 80298d0:	f1be 0f01 	cmp.w	lr, #1
 80298d4:	4620      	mov	r0, r4
 80298d6:	f104 0404 	add.w	r4, r4, #4
 80298da:	dd36      	ble.n	802994a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80298dc:	7808      	ldrb	r0, [r1, #0]
 80298de:	0900      	lsrs	r0, r0, #4
 80298e0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80298e4:	eb05 0a00 	add.w	sl, r5, r0
 80298e8:	f1ae 0e02 	sub.w	lr, lr, #2
 80298ec:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80298f0:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80298f4:	00d2      	lsls	r2, r2, #3
 80298f6:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80298fa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80298fe:	ea49 0202 	orr.w	r2, r9, r2
 8029902:	f815 9000 	ldrb.w	r9, [r5, r0]
 8029906:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802990a:	f824 2c04 	strh.w	r2, [r4, #-4]
 802990e:	f811 0b01 	ldrb.w	r0, [r1], #1
 8029912:	f000 000f 	and.w	r0, r0, #15
 8029916:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802991a:	eb05 0a00 	add.w	sl, r5, r0
 802991e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8029922:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8029926:	00d2      	lsls	r2, r2, #3
 8029928:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802992c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029930:	ea49 0202 	orr.w	r2, r9, r2
 8029934:	f815 9000 	ldrb.w	r9, [r5, r0]
 8029938:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802993c:	f824 2c02 	strh.w	r2, [r4, #-2]
 8029940:	e7c6      	b.n	80298d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8029942:	4631      	mov	r1, r6
 8029944:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8029948:	e7c2      	b.n	80298d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802994a:	d111      	bne.n	8029970 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 802994c:	7809      	ldrb	r1, [r1, #0]
 802994e:	0909      	lsrs	r1, r1, #4
 8029950:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029954:	186c      	adds	r4, r5, r1
 8029956:	5c69      	ldrb	r1, [r5, r1]
 8029958:	78a2      	ldrb	r2, [r4, #2]
 802995a:	7864      	ldrb	r4, [r4, #1]
 802995c:	00e4      	lsls	r4, r4, #3
 802995e:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8029962:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8029966:	4322      	orrs	r2, r4
 8029968:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 802996c:	f820 2b02 	strh.w	r2, [r0], #2
 8029970:	9a03      	ldr	r2, [sp, #12]
 8029972:	f8bc 4000 	ldrh.w	r4, [ip]
 8029976:	9905      	ldr	r1, [sp, #20]
 8029978:	1aa4      	subs	r4, r4, r2
 802997a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 802997e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029982:	440a      	add	r2, r1
 8029984:	fb92 f2f8 	sdiv	r2, r2, r8
 8029988:	4416      	add	r6, r2
 802998a:	e780      	b.n	802988e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 802998c:	4b03      	ldr	r3, [pc, #12]	; (802999c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802998e:	6818      	ldr	r0, [r3, #0]
 8029990:	6803      	ldr	r3, [r0, #0]
 8029992:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029994:	4798      	blx	r3
 8029996:	b00f      	add	sp, #60	; 0x3c
 8029998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802999c:	20002328 	.word	0x20002328
 80299a0:	20002322 	.word	0x20002322
 80299a4:	fffff800 	.word	0xfffff800

080299a8 <CRC_Lock>:
 80299a8:	b530      	push	{r4, r5, lr}
 80299aa:	4a20      	ldr	r2, [pc, #128]	; (8029a2c <CRC_Lock+0x84>)
 80299ac:	6813      	ldr	r3, [r2, #0]
 80299ae:	f023 0301 	bic.w	r3, r3, #1
 80299b2:	6013      	str	r3, [r2, #0]
 80299b4:	4b1e      	ldr	r3, [pc, #120]	; (8029a30 <CRC_Lock+0x88>)
 80299b6:	681a      	ldr	r2, [r3, #0]
 80299b8:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80299bc:	4022      	ands	r2, r4
 80299be:	f24c 2540 	movw	r5, #49728	; 0xc240
 80299c2:	42aa      	cmp	r2, r5
 80299c4:	d005      	beq.n	80299d2 <CRC_Lock+0x2a>
 80299c6:	681b      	ldr	r3, [r3, #0]
 80299c8:	f24c 2270 	movw	r2, #49776	; 0xc270
 80299cc:	4023      	ands	r3, r4
 80299ce:	4293      	cmp	r3, r2
 80299d0:	d124      	bne.n	8029a1c <CRC_Lock+0x74>
 80299d2:	4b18      	ldr	r3, [pc, #96]	; (8029a34 <CRC_Lock+0x8c>)
 80299d4:	681b      	ldr	r3, [r3, #0]
 80299d6:	bb0b      	cbnz	r3, 8029a1c <CRC_Lock+0x74>
 80299d8:	4b17      	ldr	r3, [pc, #92]	; (8029a38 <CRC_Lock+0x90>)
 80299da:	681a      	ldr	r2, [r3, #0]
 80299dc:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80299e0:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80299e4:	d00d      	beq.n	8029a02 <CRC_Lock+0x5a>
 80299e6:	681a      	ldr	r2, [r3, #0]
 80299e8:	f240 4483 	movw	r4, #1155	; 0x483
 80299ec:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80299f0:	42a2      	cmp	r2, r4
 80299f2:	d006      	beq.n	8029a02 <CRC_Lock+0x5a>
 80299f4:	681b      	ldr	r3, [r3, #0]
 80299f6:	f240 4285 	movw	r2, #1157	; 0x485
 80299fa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80299fe:	4293      	cmp	r3, r2
 8029a00:	d10c      	bne.n	8029a1c <CRC_Lock+0x74>
 8029a02:	4b0e      	ldr	r3, [pc, #56]	; (8029a3c <CRC_Lock+0x94>)
 8029a04:	2201      	movs	r2, #1
 8029a06:	601a      	str	r2, [r3, #0]
 8029a08:	681a      	ldr	r2, [r3, #0]
 8029a0a:	2a00      	cmp	r2, #0
 8029a0c:	d1fc      	bne.n	8029a08 <CRC_Lock+0x60>
 8029a0e:	4b0c      	ldr	r3, [pc, #48]	; (8029a40 <CRC_Lock+0x98>)
 8029a10:	6018      	str	r0, [r3, #0]
 8029a12:	6818      	ldr	r0, [r3, #0]
 8029a14:	1a43      	subs	r3, r0, r1
 8029a16:	4258      	negs	r0, r3
 8029a18:	4158      	adcs	r0, r3
 8029a1a:	bd30      	pop	{r4, r5, pc}
 8029a1c:	4b09      	ldr	r3, [pc, #36]	; (8029a44 <CRC_Lock+0x9c>)
 8029a1e:	2201      	movs	r2, #1
 8029a20:	601a      	str	r2, [r3, #0]
 8029a22:	681a      	ldr	r2, [r3, #0]
 8029a24:	2a00      	cmp	r2, #0
 8029a26:	d1fc      	bne.n	8029a22 <CRC_Lock+0x7a>
 8029a28:	4b07      	ldr	r3, [pc, #28]	; (8029a48 <CRC_Lock+0xa0>)
 8029a2a:	e7f1      	b.n	8029a10 <CRC_Lock+0x68>
 8029a2c:	e0002000 	.word	0xe0002000
 8029a30:	e000ed00 	.word	0xe000ed00
 8029a34:	e0042000 	.word	0xe0042000
 8029a38:	5c001000 	.word	0x5c001000
 8029a3c:	58024c08 	.word	0x58024c08
 8029a40:	58024c00 	.word	0x58024c00
 8029a44:	40023008 	.word	0x40023008
 8029a48:	40023000 	.word	0x40023000

08029a4c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8029a4c:	6101      	str	r1, [r0, #16]
 8029a4e:	4770      	bx	lr

08029a50 <_ZN8touchgfx8Gestures4tickEv>:
 8029a50:	7b83      	ldrb	r3, [r0, #14]
 8029a52:	b14b      	cbz	r3, 8029a68 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8029a54:	8903      	ldrh	r3, [r0, #8]
 8029a56:	3301      	adds	r3, #1
 8029a58:	b29b      	uxth	r3, r3
 8029a5a:	2b07      	cmp	r3, #7
 8029a5c:	8103      	strh	r3, [r0, #8]
 8029a5e:	bf81      	itttt	hi
 8029a60:	2300      	movhi	r3, #0
 8029a62:	8143      	strhhi	r3, [r0, #10]
 8029a64:	8183      	strhhi	r3, [r0, #12]
 8029a66:	7383      	strbhi	r3, [r0, #14]
 8029a68:	4770      	bx	lr
	...

08029a6c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8029a6c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8029a70:	4698      	mov	r8, r3
 8029a72:	8883      	ldrh	r3, [r0, #4]
 8029a74:	f8ad 3006 	strh.w	r3, [sp, #6]
 8029a78:	eba8 0303 	sub.w	r3, r8, r3
 8029a7c:	b21b      	sxth	r3, r3
 8029a7e:	4604      	mov	r4, r0
 8029a80:	2b00      	cmp	r3, #0
 8029a82:	4617      	mov	r7, r2
 8029a84:	4a18      	ldr	r2, [pc, #96]	; (8029ae8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8029a86:	9200      	str	r2, [sp, #0]
 8029a88:	bfb8      	it	lt
 8029a8a:	425b      	neglt	r3, r3
 8029a8c:	8aa2      	ldrh	r2, [r4, #20]
 8029a8e:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8029a92:	f8ad 800a 	strh.w	r8, [sp, #10]
 8029a96:	b21b      	sxth	r3, r3
 8029a98:	460e      	mov	r6, r1
 8029a9a:	4293      	cmp	r3, r2
 8029a9c:	88c1      	ldrh	r1, [r0, #6]
 8029a9e:	f8ad 1008 	strh.w	r1, [sp, #8]
 8029aa2:	f04f 0000 	mov.w	r0, #0
 8029aa6:	f88d 0004 	strb.w	r0, [sp, #4]
 8029aaa:	f8ad 500c 	strh.w	r5, [sp, #12]
 8029aae:	dc07      	bgt.n	8029ac0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8029ab0:	1a69      	subs	r1, r5, r1
 8029ab2:	b209      	sxth	r1, r1
 8029ab4:	2900      	cmp	r1, #0
 8029ab6:	bfb8      	it	lt
 8029ab8:	4249      	neglt	r1, r1
 8029aba:	b209      	sxth	r1, r1
 8029abc:	428a      	cmp	r2, r1
 8029abe:	da10      	bge.n	8029ae2 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8029ac0:	6920      	ldr	r0, [r4, #16]
 8029ac2:	6803      	ldr	r3, [r0, #0]
 8029ac4:	4669      	mov	r1, sp
 8029ac6:	685b      	ldr	r3, [r3, #4]
 8029ac8:	4798      	blx	r3
 8029aca:	eba8 0606 	sub.w	r6, r8, r6
 8029ace:	2300      	movs	r3, #0
 8029ad0:	1bef      	subs	r7, r5, r7
 8029ad2:	2001      	movs	r0, #1
 8029ad4:	8123      	strh	r3, [r4, #8]
 8029ad6:	8166      	strh	r6, [r4, #10]
 8029ad8:	81a7      	strh	r7, [r4, #12]
 8029ada:	f8a4 8004 	strh.w	r8, [r4, #4]
 8029ade:	80e5      	strh	r5, [r4, #6]
 8029ae0:	73a0      	strb	r0, [r4, #14]
 8029ae2:	b004      	add	sp, #16
 8029ae4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029ae8:	0802f934 	.word	0x0802f934

08029aec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8029aec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8029aee:	461e      	mov	r6, r3
 8029af0:	1e4b      	subs	r3, r1, #1
 8029af2:	2b01      	cmp	r3, #1
 8029af4:	b085      	sub	sp, #20
 8029af6:	4604      	mov	r4, r0
 8029af8:	460d      	mov	r5, r1
 8029afa:	4617      	mov	r7, r2
 8029afc:	d84b      	bhi.n	8029b96 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8029afe:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8029b02:	1cd3      	adds	r3, r2, #3
 8029b04:	b29b      	uxth	r3, r3
 8029b06:	2b06      	cmp	r3, #6
 8029b08:	d916      	bls.n	8029b38 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8029b0a:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8029bac <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8029b0e:	f8cd c004 	str.w	ip, [sp, #4]
 8029b12:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8029b16:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8029b1a:	6900      	ldr	r0, [r0, #16]
 8029b1c:	f8ad 100c 	strh.w	r1, [sp, #12]
 8029b20:	f04f 0c00 	mov.w	ip, #0
 8029b24:	f88d c008 	strb.w	ip, [sp, #8]
 8029b28:	f8ad 200a 	strh.w	r2, [sp, #10]
 8029b2c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029b30:	6803      	ldr	r3, [r0, #0]
 8029b32:	a901      	add	r1, sp, #4
 8029b34:	689b      	ldr	r3, [r3, #8]
 8029b36:	4798      	blx	r3
 8029b38:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8029b3c:	1cd3      	adds	r3, r2, #3
 8029b3e:	b29b      	uxth	r3, r3
 8029b40:	2b06      	cmp	r3, #6
 8029b42:	d916      	bls.n	8029b72 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029b44:	f8df c064 	ldr.w	ip, [pc, #100]	; 8029bac <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8029b48:	f8cd c004 	str.w	ip, [sp, #4]
 8029b4c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8029b50:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8029b54:	6920      	ldr	r0, [r4, #16]
 8029b56:	f8ad 100c 	strh.w	r1, [sp, #12]
 8029b5a:	f04f 0c01 	mov.w	ip, #1
 8029b5e:	f88d c008 	strb.w	ip, [sp, #8]
 8029b62:	f8ad 200a 	strh.w	r2, [sp, #10]
 8029b66:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029b6a:	6803      	ldr	r3, [r0, #0]
 8029b6c:	a901      	add	r1, sp, #4
 8029b6e:	689b      	ldr	r3, [r3, #8]
 8029b70:	4798      	blx	r3
 8029b72:	4b0d      	ldr	r3, [pc, #52]	; (8029ba8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8029b74:	9301      	str	r3, [sp, #4]
 8029b76:	6920      	ldr	r0, [r4, #16]
 8029b78:	f88d 5008 	strb.w	r5, [sp, #8]
 8029b7c:	2300      	movs	r3, #0
 8029b7e:	f8ad 700a 	strh.w	r7, [sp, #10]
 8029b82:	f8ad 600c 	strh.w	r6, [sp, #12]
 8029b86:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029b8a:	6803      	ldr	r3, [r0, #0]
 8029b8c:	a901      	add	r1, sp, #4
 8029b8e:	681b      	ldr	r3, [r3, #0]
 8029b90:	4798      	blx	r3
 8029b92:	b005      	add	sp, #20
 8029b94:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029b96:	2900      	cmp	r1, #0
 8029b98:	d1eb      	bne.n	8029b72 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029b9a:	80a2      	strh	r2, [r4, #4]
 8029b9c:	80c6      	strh	r6, [r0, #6]
 8029b9e:	60a1      	str	r1, [r4, #8]
 8029ba0:	81a1      	strh	r1, [r4, #12]
 8029ba2:	73a1      	strb	r1, [r4, #14]
 8029ba4:	e7e5      	b.n	8029b72 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029ba6:	bf00      	nop
 8029ba8:	0802f920 	.word	0x0802f920
 8029bac:	0802f948 	.word	0x0802f948

08029bb0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8029bb0:	10c9      	asrs	r1, r1, #3
 8029bb2:	2900      	cmp	r1, #0
 8029bb4:	bfb8      	it	lt
 8029bb6:	4249      	neglt	r1, r1
 8029bb8:	2801      	cmp	r0, #1
 8029bba:	d108      	bne.n	8029bce <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8029bbc:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8029bc0:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8029bc4:	4601      	mov	r1, r0
 8029bc6:	dd02      	ble.n	8029bce <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8029bc8:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8029bcc:	4770      	bx	lr
 8029bce:	29ff      	cmp	r1, #255	; 0xff
 8029bd0:	bfa8      	it	ge
 8029bd2:	21ff      	movge	r1, #255	; 0xff
 8029bd4:	4608      	mov	r0, r1
 8029bd6:	4770      	bx	lr

08029bd8 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8029bd8:	b410      	push	{r4}
 8029bda:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8029bde:	429c      	cmp	r4, r3
 8029be0:	d803      	bhi.n	8029bea <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8029be2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029be6:	f7ed ba23 	b.w	8017030 <_ZN8touchgfx7Outline6lineToEii>
 8029bea:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029bee:	4770      	bx	lr

08029bf0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8029bf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029bf4:	b08b      	sub	sp, #44	; 0x2c
 8029bf6:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8029bfa:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8029bfe:	9308      	str	r3, [sp, #32]
 8029c00:	4606      	mov	r6, r0
 8029c02:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8029c06:	9309      	str	r3, [sp, #36]	; 0x24
 8029c08:	468a      	mov	sl, r1
 8029c0a:	f7ed fb7e 	bl	801730a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8029c0e:	68b5      	ldr	r5, [r6, #8]
 8029c10:	4604      	mov	r4, r0
 8029c12:	2d00      	cmp	r5, #0
 8029c14:	d044      	beq.n	8029ca0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029c16:	6873      	ldr	r3, [r6, #4]
 8029c18:	42ab      	cmp	r3, r5
 8029c1a:	d33d      	bcc.n	8029c98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8029c1c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8029c20:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8029c24:	eb02 0b03 	add.w	fp, r2, r3
 8029c28:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8029c2c:	fb02 1203 	mla	r2, r2, r3, r1
 8029c30:	9205      	str	r2, [sp, #20]
 8029c32:	1e6a      	subs	r2, r5, #1
 8029c34:	9204      	str	r2, [sp, #16]
 8029c36:	f04f 0800 	mov.w	r8, #0
 8029c3a:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8029c3e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8029c42:	454b      	cmp	r3, r9
 8029c44:	463a      	mov	r2, r7
 8029c46:	d008      	beq.n	8029c5a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8029c48:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8029c4c:	eb03 0b09 	add.w	fp, r3, r9
 8029c50:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8029c54:	fb03 1309 	mla	r3, r3, r9, r1
 8029c58:	9305      	str	r3, [sp, #20]
 8029c5a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8029c5e:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8029c62:	4498      	add	r8, r3
 8029c64:	9b04      	ldr	r3, [sp, #16]
 8029c66:	3b01      	subs	r3, #1
 8029c68:	9304      	str	r3, [sp, #16]
 8029c6a:	9b04      	ldr	r3, [sp, #16]
 8029c6c:	3301      	adds	r3, #1
 8029c6e:	d015      	beq.n	8029c9c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8029c70:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8029c74:	42bb      	cmp	r3, r7
 8029c76:	d117      	bne.n	8029ca8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8029c78:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8029c7c:	9b04      	ldr	r3, [sp, #16]
 8029c7e:	4548      	cmp	r0, r9
 8029c80:	f103 33ff 	add.w	r3, r3, #4294967295
 8029c84:	d17f      	bne.n	8029d86 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8029c86:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8029c8a:	4401      	add	r1, r0
 8029c8c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8029c90:	4480      	add	r8, r0
 8029c92:	e7e9      	b.n	8029c68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8029c94:	461f      	mov	r7, r3
 8029c96:	e044      	b.n	8029d22 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8029c98:	2000      	movs	r0, #0
 8029c9a:	e002      	b.n	8029ca2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8029c9c:	2900      	cmp	r1, #0
 8029c9e:	d16f      	bne.n	8029d80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8029ca0:	2001      	movs	r0, #1
 8029ca2:	b00b      	add	sp, #44	; 0x2c
 8029ca4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029ca8:	2900      	cmp	r1, #0
 8029caa:	d030      	beq.n	8029d0e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8029cac:	2f00      	cmp	r7, #0
 8029cae:	db29      	blt.n	8029d04 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029cb0:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8029cb4:	42bb      	cmp	r3, r7
 8029cb6:	dd25      	ble.n	8029d04 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029cb8:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8029cbc:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8029cc0:	f7ff ff76 	bl	8029bb0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8029cc4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029cc6:	fb10 f003 	smulbb	r0, r0, r3
 8029cca:	b280      	uxth	r0, r0
 8029ccc:	1c41      	adds	r1, r0, #1
 8029cce:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029cd2:	1209      	asrs	r1, r1, #8
 8029cd4:	f011 0fff 	tst.w	r1, #255	; 0xff
 8029cd8:	d014      	beq.n	8029d04 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029cda:	9808      	ldr	r0, [sp, #32]
 8029cdc:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8029cde:	b2c9      	uxtb	r1, r1
 8029ce0:	b2ba      	uxth	r2, r7
 8029ce2:	9102      	str	r1, [sp, #8]
 8029ce4:	2101      	movs	r1, #1
 8029ce6:	4413      	add	r3, r2
 8029ce8:	9101      	str	r1, [sp, #4]
 8029cea:	4402      	add	r2, r0
 8029cec:	fa0f f18b 	sxth.w	r1, fp
 8029cf0:	f8da 0000 	ldr.w	r0, [sl]
 8029cf4:	9100      	str	r1, [sp, #0]
 8029cf6:	6941      	ldr	r1, [r0, #20]
 8029cf8:	b21b      	sxth	r3, r3
 8029cfa:	460d      	mov	r5, r1
 8029cfc:	b212      	sxth	r2, r2
 8029cfe:	9905      	ldr	r1, [sp, #20]
 8029d00:	4650      	mov	r0, sl
 8029d02:	47a8      	blx	r5
 8029d04:	9b04      	ldr	r3, [sp, #16]
 8029d06:	3301      	adds	r3, #1
 8029d08:	f107 0201 	add.w	r2, r7, #1
 8029d0c:	d0c8      	beq.n	8029ca0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029d0e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8029d12:	1abb      	subs	r3, r7, r2
 8029d14:	2b00      	cmp	r3, #0
 8029d16:	dd31      	ble.n	8029d7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029d18:	2a00      	cmp	r2, #0
 8029d1a:	dabb      	bge.n	8029c94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8029d1c:	2f00      	cmp	r7, #0
 8029d1e:	dd2d      	ble.n	8029d7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029d20:	2200      	movs	r2, #0
 8029d22:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8029d26:	19d1      	adds	r1, r2, r7
 8029d28:	4299      	cmp	r1, r3
 8029d2a:	db02      	blt.n	8029d32 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8029d2c:	1a9f      	subs	r7, r3, r2
 8029d2e:	2f00      	cmp	r7, #0
 8029d30:	dd24      	ble.n	8029d7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029d32:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8029d36:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8029d3a:	f7ff ff39 	bl	8029bb0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8029d3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029d40:	fb10 f003 	smulbb	r0, r0, r3
 8029d44:	b280      	uxth	r0, r0
 8029d46:	1c41      	adds	r1, r0, #1
 8029d48:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029d4c:	1209      	asrs	r1, r1, #8
 8029d4e:	f011 0fff 	tst.w	r1, #255	; 0xff
 8029d52:	d013      	beq.n	8029d7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029d54:	9808      	ldr	r0, [sp, #32]
 8029d56:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8029d58:	b292      	uxth	r2, r2
 8029d5a:	b2c9      	uxtb	r1, r1
 8029d5c:	4413      	add	r3, r2
 8029d5e:	9102      	str	r1, [sp, #8]
 8029d60:	4402      	add	r2, r0
 8029d62:	b23f      	sxth	r7, r7
 8029d64:	f8da 0000 	ldr.w	r0, [sl]
 8029d68:	9701      	str	r7, [sp, #4]
 8029d6a:	fa0f f18b 	sxth.w	r1, fp
 8029d6e:	9100      	str	r1, [sp, #0]
 8029d70:	6947      	ldr	r7, [r0, #20]
 8029d72:	9905      	ldr	r1, [sp, #20]
 8029d74:	b21b      	sxth	r3, r3
 8029d76:	b212      	sxth	r2, r2
 8029d78:	4650      	mov	r0, sl
 8029d7a:	47b8      	blx	r7
 8029d7c:	464b      	mov	r3, r9
 8029d7e:	e75c      	b.n	8029c3a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8029d80:	2f00      	cmp	r7, #0
 8029d82:	da95      	bge.n	8029cb0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8029d84:	e78c      	b.n	8029ca0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029d86:	2900      	cmp	r1, #0
 8029d88:	d0f8      	beq.n	8029d7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029d8a:	e78f      	b.n	8029cac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08029d8c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8029d8c:	4b4b      	ldr	r3, [pc, #300]	; (8029ebc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8029d8e:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8029d92:	2500      	movs	r5, #0
 8029d94:	f100 0620 	add.w	r6, r0, #32
 8029d98:	4604      	mov	r4, r0
 8029d9a:	e9c0 3100 	strd	r3, r1, [r0]
 8029d9e:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8029da2:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8029da6:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8029daa:	f100 0718 	add.w	r7, r0, #24
 8029dae:	4630      	mov	r0, r6
 8029db0:	4690      	mov	r8, r2
 8029db2:	f7ec fc75 	bl	80166a0 <_ZN8touchgfx7OutlineC1Ev>
 8029db6:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8029dba:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8029dbe:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8029dc2:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8029dc6:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8029dca:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8029dce:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8029dd2:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8029dd6:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8029dda:	f9b8 2000 	ldrsh.w	r2, [r8]
 8029dde:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8029de2:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8029de6:	9500      	str	r5, [sp, #0]
 8029de8:	4410      	add	r0, r2
 8029dea:	b280      	uxth	r0, r0
 8029dec:	fa0f fa80 	sxth.w	sl, r0
 8029df0:	45aa      	cmp	sl, r5
 8029df2:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8029df6:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8029dfa:	dd5c      	ble.n	8029eb6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029dfc:	4591      	cmp	r9, r2
 8029dfe:	dd5a      	ble.n	8029eb6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029e00:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8029e04:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8029e08:	440b      	add	r3, r1
 8029e0a:	b29b      	uxth	r3, r3
 8029e0c:	b21d      	sxth	r5, r3
 8029e0e:	2d00      	cmp	r5, #0
 8029e10:	dd51      	ble.n	8029eb6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029e12:	458e      	cmp	lr, r1
 8029e14:	dd4f      	ble.n	8029eb6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029e16:	45d1      	cmp	r9, sl
 8029e18:	bfb8      	it	lt
 8029e1a:	fa1f f089 	uxthlt.w	r0, r9
 8029e1e:	45ae      	cmp	lr, r5
 8029e20:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8029e24:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8029e28:	bfb8      	it	lt
 8029e2a:	fa1f f38e 	uxthlt.w	r3, lr
 8029e2e:	1a80      	subs	r0, r0, r2
 8029e30:	1a5b      	subs	r3, r3, r1
 8029e32:	f8ad 0004 	strh.w	r0, [sp, #4]
 8029e36:	f8ad 3006 	strh.w	r3, [sp, #6]
 8029e3a:	f8ad 2000 	strh.w	r2, [sp]
 8029e3e:	f8ad 1002 	strh.w	r1, [sp, #2]
 8029e42:	466d      	mov	r5, sp
 8029e44:	e895 0003 	ldmia.w	r5, {r0, r1}
 8029e48:	e887 0003 	stmia.w	r7, {r0, r1}
 8029e4c:	f8dc 3000 	ldr.w	r3, [ip]
 8029e50:	4660      	mov	r0, ip
 8029e52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029e54:	4639      	mov	r1, r7
 8029e56:	4798      	blx	r3
 8029e58:	6861      	ldr	r1, [r4, #4]
 8029e5a:	4628      	mov	r0, r5
 8029e5c:	3104      	adds	r1, #4
 8029e5e:	f7ee fe13 	bl	8018a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029e62:	4638      	mov	r0, r7
 8029e64:	f7ee fdcc 	bl	8018a00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029e68:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8029e6c:	f8bd 2000 	ldrh.w	r2, [sp]
 8029e70:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8029e74:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8029e78:	4630      	mov	r0, r6
 8029e7a:	f7ec fbf5 	bl	8016668 <_ZN8touchgfx7Outline5resetEv>
 8029e7e:	f9bd 3000 	ldrsh.w	r3, [sp]
 8029e82:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8029e86:	015b      	lsls	r3, r3, #5
 8029e88:	60a3      	str	r3, [r4, #8]
 8029e8a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8029e8e:	015b      	lsls	r3, r3, #5
 8029e90:	60e3      	str	r3, [r4, #12]
 8029e92:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8029e96:	015b      	lsls	r3, r3, #5
 8029e98:	6123      	str	r3, [r4, #16]
 8029e9a:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8029e9e:	015b      	lsls	r3, r3, #5
 8029ea0:	6163      	str	r3, [r4, #20]
 8029ea2:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8029ea6:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8029eaa:	4620      	mov	r0, r4
 8029eac:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8029eb0:	b002      	add	sp, #8
 8029eb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8029eb6:	2300      	movs	r3, #0
 8029eb8:	9301      	str	r3, [sp, #4]
 8029eba:	e7c2      	b.n	8029e42 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8029ebc:	0802fc6c 	.word	0x0802fc6c

08029ec0 <_ZN8touchgfx6Canvas5closeEv>:
 8029ec0:	b538      	push	{r3, r4, r5, lr}
 8029ec2:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8029ec6:	4604      	mov	r4, r0
 8029ec8:	b193      	cbz	r3, 8029ef0 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8029eca:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8029ece:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8029ed2:	4213      	tst	r3, r2
 8029ed4:	d10c      	bne.n	8029ef0 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8029ed6:	f100 0520 	add.w	r5, r0, #32
 8029eda:	b123      	cbz	r3, 8029ee6 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8029edc:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8029ee0:	4628      	mov	r0, r5
 8029ee2:	f7ff fe79 	bl	8029bd8 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029ee6:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8029eea:	4628      	mov	r0, r5
 8029eec:	f7ff fe74 	bl	8029bd8 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029ef0:	2300      	movs	r3, #0
 8029ef2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8029ef6:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8029efa:	4298      	cmp	r0, r3
 8029efc:	bf34      	ite	cc
 8029efe:	2000      	movcc	r0, #0
 8029f00:	2001      	movcs	r0, #1
 8029f02:	bd38      	pop	{r3, r4, r5, pc}

08029f04 <_ZN8touchgfx6Canvas6renderEh>:
 8029f04:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8029f08:	4604      	mov	r4, r0
 8029f0a:	6840      	ldr	r0, [r0, #4]
 8029f0c:	6803      	ldr	r3, [r0, #0]
 8029f0e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8029f10:	460d      	mov	r5, r1
 8029f12:	4798      	blx	r3
 8029f14:	fb10 f105 	smulbb	r1, r0, r5
 8029f18:	b289      	uxth	r1, r1
 8029f1a:	1c4d      	adds	r5, r1, #1
 8029f1c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8029f20:	122d      	asrs	r5, r5, #8
 8029f22:	f000 809d 	beq.w	802a060 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8029f26:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8029f2a:	2b00      	cmp	r3, #0
 8029f2c:	f000 8098 	beq.w	802a060 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8029f30:	4620      	mov	r0, r4
 8029f32:	f7ff ffc5 	bl	8029ec0 <_ZN8touchgfx6Canvas5closeEv>
 8029f36:	4607      	mov	r7, r0
 8029f38:	2800      	cmp	r0, #0
 8029f3a:	d048      	beq.n	8029fce <_ZN8touchgfx6Canvas6renderEh+0xca>
 8029f3c:	6863      	ldr	r3, [r4, #4]
 8029f3e:	4e49      	ldr	r6, [pc, #292]	; (802a064 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8029f40:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8029f42:	6837      	ldr	r7, [r6, #0]
 8029f44:	6803      	ldr	r3, [r0, #0]
 8029f46:	689b      	ldr	r3, [r3, #8]
 8029f48:	4798      	blx	r3
 8029f4a:	4601      	mov	r1, r0
 8029f4c:	4638      	mov	r0, r7
 8029f4e:	f7e9 fe03 	bl	8013b58 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8029f52:	4607      	mov	r7, r0
 8029f54:	f7e0 fd5a 	bl	800aa0c <_ZN8touchgfx3HAL3lcdEv>
 8029f58:	6803      	ldr	r3, [r0, #0]
 8029f5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8029f5c:	4798      	blx	r3
 8029f5e:	4680      	mov	r8, r0
 8029f60:	f7e0 fd54 	bl	800aa0c <_ZN8touchgfx3HAL3lcdEv>
 8029f64:	6803      	ldr	r3, [r0, #0]
 8029f66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029f68:	4798      	blx	r3
 8029f6a:	280b      	cmp	r0, #11
 8029f6c:	d85d      	bhi.n	802a02a <_ZN8touchgfx6Canvas6renderEh+0x126>
 8029f6e:	e8df f000 	tbb	[pc, r0]
 8029f72:	5e53      	.short	0x5e53
 8029f74:	325c066e 	.word	0x325c066e
 8029f78:	67676742 	.word	0x67676742
 8029f7c:	6767      	.short	0x6767
 8029f7e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029f82:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029f86:	2208      	movs	r2, #8
 8029f88:	fb91 f2f2 	sdiv	r2, r1, r2
 8029f8c:	fb08 2303 	mla	r3, r8, r3, r2
 8029f90:	441f      	add	r7, r3
 8029f92:	424b      	negs	r3, r1
 8029f94:	f003 0307 	and.w	r3, r3, #7
 8029f98:	f001 0107 	and.w	r1, r1, #7
 8029f9c:	bf58      	it	pl
 8029f9e:	4259      	negpl	r1, r3
 8029fa0:	b2c9      	uxtb	r1, r1
 8029fa2:	b2ed      	uxtb	r5, r5
 8029fa4:	e9cd 1500 	strd	r1, r5, [sp]
 8029fa8:	6860      	ldr	r0, [r4, #4]
 8029faa:	463a      	mov	r2, r7
 8029fac:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8029fae:	fa0f f388 	sxth.w	r3, r8
 8029fb2:	f104 0020 	add.w	r0, r4, #32
 8029fb6:	f7ff fe1b 	bl	8029bf0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8029fba:	6863      	ldr	r3, [r4, #4]
 8029fbc:	4607      	mov	r7, r0
 8029fbe:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8029fc0:	6803      	ldr	r3, [r0, #0]
 8029fc2:	691b      	ldr	r3, [r3, #16]
 8029fc4:	4798      	blx	r3
 8029fc6:	6830      	ldr	r0, [r6, #0]
 8029fc8:	6803      	ldr	r3, [r0, #0]
 8029fca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029fcc:	4798      	blx	r3
 8029fce:	4638      	mov	r0, r7
 8029fd0:	b002      	add	sp, #8
 8029fd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029fd6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029fda:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029fde:	2204      	movs	r2, #4
 8029fe0:	fb91 f2f2 	sdiv	r2, r1, r2
 8029fe4:	fb08 2303 	mla	r3, r8, r3, r2
 8029fe8:	441f      	add	r7, r3
 8029fea:	424b      	negs	r3, r1
 8029fec:	f003 0303 	and.w	r3, r3, #3
 8029ff0:	f001 0103 	and.w	r1, r1, #3
 8029ff4:	e7d2      	b.n	8029f9c <_ZN8touchgfx6Canvas6renderEh+0x98>
 8029ff6:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029ffa:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029ffe:	2900      	cmp	r1, #0
 802a000:	f04f 0202 	mov.w	r2, #2
 802a004:	fb91 f2f2 	sdiv	r2, r1, r2
 802a008:	f001 0101 	and.w	r1, r1, #1
 802a00c:	fb08 2303 	mla	r3, r8, r3, r2
 802a010:	441f      	add	r7, r3
 802a012:	bfb8      	it	lt
 802a014:	4249      	neglt	r1, r1
 802a016:	e7c3      	b.n	8029fa0 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 802a018:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a01c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802a020:	fb08 f303 	mul.w	r3, r8, r3
 802a024:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802a028:	441f      	add	r7, r3
 802a02a:	2100      	movs	r1, #0
 802a02c:	e7b9      	b.n	8029fa2 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 802a02e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a032:	fb08 f203 	mul.w	r2, r8, r3
 802a036:	8b23      	ldrh	r3, [r4, #24]
 802a038:	2103      	movs	r1, #3
 802a03a:	fb13 2301 	smlabb	r3, r3, r1, r2
 802a03e:	e7f3      	b.n	802a028 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802a040:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a044:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802a048:	fb08 2303 	mla	r3, r8, r3, r2
 802a04c:	e7ec      	b.n	802a028 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802a04e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a052:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802a056:	fb08 f303 	mul.w	r3, r8, r3
 802a05a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802a05e:	e7e3      	b.n	802a028 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802a060:	2701      	movs	r7, #1
 802a062:	e7b4      	b.n	8029fce <_ZN8touchgfx6Canvas6renderEh+0xca>
 802a064:	20002328 	.word	0x20002328

0802a068 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802a068:	b510      	push	{r4, lr}
 802a06a:	4b07      	ldr	r3, [pc, #28]	; (802a088 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 802a06c:	781b      	ldrb	r3, [r3, #0]
 802a06e:	2b01      	cmp	r3, #1
 802a070:	d108      	bne.n	802a084 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802a072:	6843      	ldr	r3, [r0, #4]
 802a074:	6814      	ldr	r4, [r2, #0]
 802a076:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802a07a:	680b      	ldr	r3, [r1, #0]
 802a07c:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802a080:	6013      	str	r3, [r2, #0]
 802a082:	600c      	str	r4, [r1, #0]
 802a084:	bd10      	pop	{r4, pc}
 802a086:	bf00      	nop
 802a088:	20002320 	.word	0x20002320

0802a08c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 802a08c:	b513      	push	{r0, r1, r4, lr}
 802a08e:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802a092:	4604      	mov	r4, r0
 802a094:	e9cd 2100 	strd	r2, r1, [sp]
 802a098:	b9a3      	cbnz	r3, 802a0c4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802a09a:	466a      	mov	r2, sp
 802a09c:	a901      	add	r1, sp, #4
 802a09e:	4620      	mov	r0, r4
 802a0a0:	f7ff ffe2 	bl	802a068 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802a0a4:	68a3      	ldr	r3, [r4, #8]
 802a0a6:	9901      	ldr	r1, [sp, #4]
 802a0a8:	9a00      	ldr	r2, [sp, #0]
 802a0aa:	1ac9      	subs	r1, r1, r3
 802a0ac:	68e3      	ldr	r3, [r4, #12]
 802a0ae:	9101      	str	r1, [sp, #4]
 802a0b0:	1ad2      	subs	r2, r2, r3
 802a0b2:	2a00      	cmp	r2, #0
 802a0b4:	9200      	str	r2, [sp, #0]
 802a0b6:	da0b      	bge.n	802a0d0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 802a0b8:	2301      	movs	r3, #1
 802a0ba:	2900      	cmp	r1, #0
 802a0bc:	da0e      	bge.n	802a0dc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802a0be:	f043 0304 	orr.w	r3, r3, #4
 802a0c2:	e013      	b.n	802a0ec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802a0c4:	f7ff fefc 	bl	8029ec0 <_ZN8touchgfx6Canvas5closeEv>
 802a0c8:	2800      	cmp	r0, #0
 802a0ca:	d1e6      	bne.n	802a09a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 802a0cc:	b002      	add	sp, #8
 802a0ce:	bd10      	pop	{r4, pc}
 802a0d0:	6963      	ldr	r3, [r4, #20]
 802a0d2:	429a      	cmp	r2, r3
 802a0d4:	bfac      	ite	ge
 802a0d6:	2302      	movge	r3, #2
 802a0d8:	2300      	movlt	r3, #0
 802a0da:	e7ee      	b.n	802a0ba <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 802a0dc:	6920      	ldr	r0, [r4, #16]
 802a0de:	4281      	cmp	r1, r0
 802a0e0:	bfac      	ite	ge
 802a0e2:	2008      	movge	r0, #8
 802a0e4:	2000      	movlt	r0, #0
 802a0e6:	4318      	orrs	r0, r3
 802a0e8:	b2c3      	uxtb	r3, r0
 802a0ea:	b158      	cbz	r0, 802a104 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 802a0ec:	2200      	movs	r2, #0
 802a0ee:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802a0f2:	9901      	ldr	r1, [sp, #4]
 802a0f4:	9a00      	ldr	r2, [sp, #0]
 802a0f6:	66a1      	str	r1, [r4, #104]	; 0x68
 802a0f8:	66e2      	str	r2, [r4, #108]	; 0x6c
 802a0fa:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 802a0fe:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802a102:	e7e3      	b.n	802a0cc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802a104:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802a108:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802a10c:	4298      	cmp	r0, r3
 802a10e:	d803      	bhi.n	802a118 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802a110:	f104 0020 	add.w	r0, r4, #32
 802a114:	f7ec ffa6 	bl	8017064 <_ZN8touchgfx7Outline6moveToEii>
 802a118:	2301      	movs	r3, #1
 802a11a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802a11e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802a122:	2300      	movs	r3, #0
 802a124:	e7e5      	b.n	802a0f2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802a126 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802a126:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802a128:	ab02      	add	r3, sp, #8
 802a12a:	4604      	mov	r4, r0
 802a12c:	f843 2d08 	str.w	r2, [r3, #-8]!
 802a130:	9101      	str	r1, [sp, #4]
 802a132:	461a      	mov	r2, r3
 802a134:	a901      	add	r1, sp, #4
 802a136:	f7ff ff97 	bl	802a068 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802a13a:	68a3      	ldr	r3, [r4, #8]
 802a13c:	9901      	ldr	r1, [sp, #4]
 802a13e:	9a00      	ldr	r2, [sp, #0]
 802a140:	1ac9      	subs	r1, r1, r3
 802a142:	68e3      	ldr	r3, [r4, #12]
 802a144:	9101      	str	r1, [sp, #4]
 802a146:	1ad2      	subs	r2, r2, r3
 802a148:	2a00      	cmp	r2, #0
 802a14a:	9200      	str	r2, [sp, #0]
 802a14c:	db1c      	blt.n	802a188 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802a14e:	6963      	ldr	r3, [r4, #20]
 802a150:	429a      	cmp	r2, r3
 802a152:	bfac      	ite	ge
 802a154:	2002      	movge	r0, #2
 802a156:	2000      	movlt	r0, #0
 802a158:	2900      	cmp	r1, #0
 802a15a:	db17      	blt.n	802a18c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802a15c:	6923      	ldr	r3, [r4, #16]
 802a15e:	4299      	cmp	r1, r3
 802a160:	bfac      	ite	ge
 802a162:	2308      	movge	r3, #8
 802a164:	2300      	movlt	r3, #0
 802a166:	4303      	orrs	r3, r0
 802a168:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 802a16c:	b2dd      	uxtb	r5, r3
 802a16e:	b978      	cbnz	r0, 802a190 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802a170:	f104 0020 	add.w	r0, r4, #32
 802a174:	f7ff fd30 	bl	8029bd8 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a178:	9b01      	ldr	r3, [sp, #4]
 802a17a:	65e3      	str	r3, [r4, #92]	; 0x5c
 802a17c:	9b00      	ldr	r3, [sp, #0]
 802a17e:	6623      	str	r3, [r4, #96]	; 0x60
 802a180:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802a184:	b002      	add	sp, #8
 802a186:	bd70      	pop	{r4, r5, r6, pc}
 802a188:	2001      	movs	r0, #1
 802a18a:	e7e5      	b.n	802a158 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802a18c:	2304      	movs	r3, #4
 802a18e:	e7ea      	b.n	802a166 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802a190:	b113      	cbz	r3, 802a198 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802a192:	ea10 0305 	ands.w	r3, r0, r5
 802a196:	d11c      	bne.n	802a1d2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802a198:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 802a19c:	f104 0620 	add.w	r6, r4, #32
 802a1a0:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802a1a4:	b98b      	cbnz	r3, 802a1ca <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802a1a6:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802a1aa:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802a1ae:	4298      	cmp	r0, r3
 802a1b0:	d802      	bhi.n	802a1b8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802a1b2:	4630      	mov	r0, r6
 802a1b4:	f7ec ff56 	bl	8017064 <_ZN8touchgfx7Outline6moveToEii>
 802a1b8:	2301      	movs	r3, #1
 802a1ba:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802a1be:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802a1c2:	e9dd 2100 	ldrd	r2, r1, [sp]
 802a1c6:	4630      	mov	r0, r6
 802a1c8:	e7d4      	b.n	802a174 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802a1ca:	4630      	mov	r0, r6
 802a1cc:	f7ff fd04 	bl	8029bd8 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a1d0:	e7f7      	b.n	802a1c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802a1d2:	461d      	mov	r5, r3
 802a1d4:	e7d0      	b.n	802a178 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802a1d8 <_ZN8touchgfx6CanvasD1Ev>:
 802a1d8:	b510      	push	{r4, lr}
 802a1da:	4b04      	ldr	r3, [pc, #16]	; (802a1ec <_ZN8touchgfx6CanvasD1Ev+0x14>)
 802a1dc:	4604      	mov	r4, r0
 802a1de:	f840 3b20 	str.w	r3, [r0], #32
 802a1e2:	f7ec fa39 	bl	8016658 <_ZN8touchgfx7OutlineD1Ev>
 802a1e6:	4620      	mov	r0, r4
 802a1e8:	bd10      	pop	{r4, pc}
 802a1ea:	bf00      	nop
 802a1ec:	0802fc6c 	.word	0x0802fc6c

0802a1f0 <_ZN8touchgfx6CanvasD0Ev>:
 802a1f0:	b510      	push	{r4, lr}
 802a1f2:	4604      	mov	r4, r0
 802a1f4:	f7ff fff0 	bl	802a1d8 <_ZN8touchgfx6CanvasD1Ev>
 802a1f8:	4620      	mov	r0, r4
 802a1fa:	2170      	movs	r1, #112	; 0x70
 802a1fc:	f000 f807 	bl	802a20e <_ZdlPvj>
 802a200:	4620      	mov	r0, r4
 802a202:	bd10      	pop	{r4, pc}

0802a204 <__aeabi_atexit>:
 802a204:	460b      	mov	r3, r1
 802a206:	4601      	mov	r1, r0
 802a208:	4618      	mov	r0, r3
 802a20a:	f001 b8d1 	b.w	802b3b0 <__cxa_atexit>

0802a20e <_ZdlPvj>:
 802a20e:	f000 b812 	b.w	802a236 <_ZdlPv>

0802a212 <__cxa_guard_acquire>:
 802a212:	6803      	ldr	r3, [r0, #0]
 802a214:	07db      	lsls	r3, r3, #31
 802a216:	d406      	bmi.n	802a226 <__cxa_guard_acquire+0x14>
 802a218:	7843      	ldrb	r3, [r0, #1]
 802a21a:	b103      	cbz	r3, 802a21e <__cxa_guard_acquire+0xc>
 802a21c:	deff      	udf	#255	; 0xff
 802a21e:	2301      	movs	r3, #1
 802a220:	7043      	strb	r3, [r0, #1]
 802a222:	4618      	mov	r0, r3
 802a224:	4770      	bx	lr
 802a226:	2000      	movs	r0, #0
 802a228:	4770      	bx	lr

0802a22a <__cxa_guard_release>:
 802a22a:	2301      	movs	r3, #1
 802a22c:	6003      	str	r3, [r0, #0]
 802a22e:	4770      	bx	lr

0802a230 <__cxa_pure_virtual>:
 802a230:	b508      	push	{r3, lr}
 802a232:	f000 f80f 	bl	802a254 <_ZSt9terminatev>

0802a236 <_ZdlPv>:
 802a236:	f001 b807 	b.w	802b248 <free>

0802a23a <_ZN10__cxxabiv111__terminateEPFvvE>:
 802a23a:	b508      	push	{r3, lr}
 802a23c:	4780      	blx	r0
 802a23e:	f000 ffcf 	bl	802b1e0 <abort>
	...

0802a244 <_ZSt13get_terminatev>:
 802a244:	4b02      	ldr	r3, [pc, #8]	; (802a250 <_ZSt13get_terminatev+0xc>)
 802a246:	6818      	ldr	r0, [r3, #0]
 802a248:	f3bf 8f5b 	dmb	ish
 802a24c:	4770      	bx	lr
 802a24e:	bf00      	nop
 802a250:	20000098 	.word	0x20000098

0802a254 <_ZSt9terminatev>:
 802a254:	b508      	push	{r3, lr}
 802a256:	f7ff fff5 	bl	802a244 <_ZSt13get_terminatev>
 802a25a:	f7ff ffee 	bl	802a23a <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802a260 <log>:
 802a260:	b538      	push	{r3, r4, r5, lr}
 802a262:	ed2d 8b02 	vpush	{d8}
 802a266:	ec55 4b10 	vmov	r4, r5, d0
 802a26a:	f000 f94d 	bl	802a508 <__ieee754_log>
 802a26e:	4622      	mov	r2, r4
 802a270:	462b      	mov	r3, r5
 802a272:	4620      	mov	r0, r4
 802a274:	4629      	mov	r1, r5
 802a276:	eeb0 8a40 	vmov.f32	s16, s0
 802a27a:	eef0 8a60 	vmov.f32	s17, s1
 802a27e:	f7d6 fc55 	bl	8000b2c <__aeabi_dcmpun>
 802a282:	b998      	cbnz	r0, 802a2ac <log+0x4c>
 802a284:	2200      	movs	r2, #0
 802a286:	2300      	movs	r3, #0
 802a288:	4620      	mov	r0, r4
 802a28a:	4629      	mov	r1, r5
 802a28c:	f7d6 fc44 	bl	8000b18 <__aeabi_dcmpgt>
 802a290:	b960      	cbnz	r0, 802a2ac <log+0x4c>
 802a292:	2200      	movs	r2, #0
 802a294:	2300      	movs	r3, #0
 802a296:	4620      	mov	r0, r4
 802a298:	4629      	mov	r1, r5
 802a29a:	f7d6 fc15 	bl	8000ac8 <__aeabi_dcmpeq>
 802a29e:	b160      	cbz	r0, 802a2ba <log+0x5a>
 802a2a0:	f001 fa4e 	bl	802b740 <__errno>
 802a2a4:	ed9f 8b0a 	vldr	d8, [pc, #40]	; 802a2d0 <log+0x70>
 802a2a8:	2322      	movs	r3, #34	; 0x22
 802a2aa:	6003      	str	r3, [r0, #0]
 802a2ac:	eeb0 0a48 	vmov.f32	s0, s16
 802a2b0:	eef0 0a68 	vmov.f32	s1, s17
 802a2b4:	ecbd 8b02 	vpop	{d8}
 802a2b8:	bd38      	pop	{r3, r4, r5, pc}
 802a2ba:	f001 fa41 	bl	802b740 <__errno>
 802a2be:	ecbd 8b02 	vpop	{d8}
 802a2c2:	2321      	movs	r3, #33	; 0x21
 802a2c4:	6003      	str	r3, [r0, #0]
 802a2c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802a2ca:	4803      	ldr	r0, [pc, #12]	; (802a2d8 <log+0x78>)
 802a2cc:	f000 b890 	b.w	802a3f0 <nan>
 802a2d0:	00000000 	.word	0x00000000
 802a2d4:	fff00000 	.word	0xfff00000
 802a2d8:	08030083 	.word	0x08030083

0802a2dc <cosf>:
 802a2dc:	ee10 3a10 	vmov	r3, s0
 802a2e0:	b507      	push	{r0, r1, r2, lr}
 802a2e2:	4a1e      	ldr	r2, [pc, #120]	; (802a35c <cosf+0x80>)
 802a2e4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a2e8:	4293      	cmp	r3, r2
 802a2ea:	dc06      	bgt.n	802a2fa <cosf+0x1e>
 802a2ec:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802a360 <cosf+0x84>
 802a2f0:	b003      	add	sp, #12
 802a2f2:	f85d eb04 	ldr.w	lr, [sp], #4
 802a2f6:	f000 bac1 	b.w	802a87c <__kernel_cosf>
 802a2fa:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a2fe:	db04      	blt.n	802a30a <cosf+0x2e>
 802a300:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a304:	b003      	add	sp, #12
 802a306:	f85d fb04 	ldr.w	pc, [sp], #4
 802a30a:	4668      	mov	r0, sp
 802a30c:	f000 fb5c 	bl	802a9c8 <__ieee754_rem_pio2f>
 802a310:	f000 0003 	and.w	r0, r0, #3
 802a314:	2801      	cmp	r0, #1
 802a316:	d009      	beq.n	802a32c <cosf+0x50>
 802a318:	2802      	cmp	r0, #2
 802a31a:	d010      	beq.n	802a33e <cosf+0x62>
 802a31c:	b9b0      	cbnz	r0, 802a34c <cosf+0x70>
 802a31e:	eddd 0a01 	vldr	s1, [sp, #4]
 802a322:	ed9d 0a00 	vldr	s0, [sp]
 802a326:	f000 faa9 	bl	802a87c <__kernel_cosf>
 802a32a:	e7eb      	b.n	802a304 <cosf+0x28>
 802a32c:	eddd 0a01 	vldr	s1, [sp, #4]
 802a330:	ed9d 0a00 	vldr	s0, [sp]
 802a334:	f000 fb00 	bl	802a938 <__kernel_sinf>
 802a338:	eeb1 0a40 	vneg.f32	s0, s0
 802a33c:	e7e2      	b.n	802a304 <cosf+0x28>
 802a33e:	eddd 0a01 	vldr	s1, [sp, #4]
 802a342:	ed9d 0a00 	vldr	s0, [sp]
 802a346:	f000 fa99 	bl	802a87c <__kernel_cosf>
 802a34a:	e7f5      	b.n	802a338 <cosf+0x5c>
 802a34c:	eddd 0a01 	vldr	s1, [sp, #4]
 802a350:	ed9d 0a00 	vldr	s0, [sp]
 802a354:	2001      	movs	r0, #1
 802a356:	f000 faef 	bl	802a938 <__kernel_sinf>
 802a35a:	e7d3      	b.n	802a304 <cosf+0x28>
 802a35c:	3f490fd8 	.word	0x3f490fd8
 802a360:	00000000 	.word	0x00000000

0802a364 <sinf>:
 802a364:	ee10 3a10 	vmov	r3, s0
 802a368:	b507      	push	{r0, r1, r2, lr}
 802a36a:	4a1f      	ldr	r2, [pc, #124]	; (802a3e8 <sinf+0x84>)
 802a36c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a370:	4293      	cmp	r3, r2
 802a372:	dc07      	bgt.n	802a384 <sinf+0x20>
 802a374:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802a3ec <sinf+0x88>
 802a378:	2000      	movs	r0, #0
 802a37a:	b003      	add	sp, #12
 802a37c:	f85d eb04 	ldr.w	lr, [sp], #4
 802a380:	f000 bada 	b.w	802a938 <__kernel_sinf>
 802a384:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a388:	db04      	blt.n	802a394 <sinf+0x30>
 802a38a:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a38e:	b003      	add	sp, #12
 802a390:	f85d fb04 	ldr.w	pc, [sp], #4
 802a394:	4668      	mov	r0, sp
 802a396:	f000 fb17 	bl	802a9c8 <__ieee754_rem_pio2f>
 802a39a:	f000 0003 	and.w	r0, r0, #3
 802a39e:	2801      	cmp	r0, #1
 802a3a0:	d00a      	beq.n	802a3b8 <sinf+0x54>
 802a3a2:	2802      	cmp	r0, #2
 802a3a4:	d00f      	beq.n	802a3c6 <sinf+0x62>
 802a3a6:	b9c0      	cbnz	r0, 802a3da <sinf+0x76>
 802a3a8:	eddd 0a01 	vldr	s1, [sp, #4]
 802a3ac:	ed9d 0a00 	vldr	s0, [sp]
 802a3b0:	2001      	movs	r0, #1
 802a3b2:	f000 fac1 	bl	802a938 <__kernel_sinf>
 802a3b6:	e7ea      	b.n	802a38e <sinf+0x2a>
 802a3b8:	eddd 0a01 	vldr	s1, [sp, #4]
 802a3bc:	ed9d 0a00 	vldr	s0, [sp]
 802a3c0:	f000 fa5c 	bl	802a87c <__kernel_cosf>
 802a3c4:	e7e3      	b.n	802a38e <sinf+0x2a>
 802a3c6:	eddd 0a01 	vldr	s1, [sp, #4]
 802a3ca:	ed9d 0a00 	vldr	s0, [sp]
 802a3ce:	2001      	movs	r0, #1
 802a3d0:	f000 fab2 	bl	802a938 <__kernel_sinf>
 802a3d4:	eeb1 0a40 	vneg.f32	s0, s0
 802a3d8:	e7d9      	b.n	802a38e <sinf+0x2a>
 802a3da:	eddd 0a01 	vldr	s1, [sp, #4]
 802a3de:	ed9d 0a00 	vldr	s0, [sp]
 802a3e2:	f000 fa4b 	bl	802a87c <__kernel_cosf>
 802a3e6:	e7f5      	b.n	802a3d4 <sinf+0x70>
 802a3e8:	3f490fd8 	.word	0x3f490fd8
 802a3ec:	00000000 	.word	0x00000000

0802a3f0 <nan>:
 802a3f0:	ed9f 0b01 	vldr	d0, [pc, #4]	; 802a3f8 <nan+0x8>
 802a3f4:	4770      	bx	lr
 802a3f6:	bf00      	nop
 802a3f8:	00000000 	.word	0x00000000
 802a3fc:	7ff80000 	.word	0x7ff80000

0802a400 <ceilf>:
 802a400:	ee10 3a10 	vmov	r3, s0
 802a404:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a408:	3a7f      	subs	r2, #127	; 0x7f
 802a40a:	2a16      	cmp	r2, #22
 802a40c:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a410:	dc2a      	bgt.n	802a468 <ceilf+0x68>
 802a412:	2a00      	cmp	r2, #0
 802a414:	da11      	bge.n	802a43a <ceilf+0x3a>
 802a416:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a47c <ceilf+0x7c>
 802a41a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a41e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a422:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a426:	dd05      	ble.n	802a434 <ceilf+0x34>
 802a428:	2b00      	cmp	r3, #0
 802a42a:	db23      	blt.n	802a474 <ceilf+0x74>
 802a42c:	2900      	cmp	r1, #0
 802a42e:	bf18      	it	ne
 802a430:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802a434:	ee00 3a10 	vmov	s0, r3
 802a438:	4770      	bx	lr
 802a43a:	4911      	ldr	r1, [pc, #68]	; (802a480 <ceilf+0x80>)
 802a43c:	4111      	asrs	r1, r2
 802a43e:	420b      	tst	r3, r1
 802a440:	d0fa      	beq.n	802a438 <ceilf+0x38>
 802a442:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a47c <ceilf+0x7c>
 802a446:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a44a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a44e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a452:	ddef      	ble.n	802a434 <ceilf+0x34>
 802a454:	2b00      	cmp	r3, #0
 802a456:	bfc2      	ittt	gt
 802a458:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802a45c:	fa40 f202 	asrgt.w	r2, r0, r2
 802a460:	189b      	addgt	r3, r3, r2
 802a462:	ea23 0301 	bic.w	r3, r3, r1
 802a466:	e7e5      	b.n	802a434 <ceilf+0x34>
 802a468:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a46c:	d3e4      	bcc.n	802a438 <ceilf+0x38>
 802a46e:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a472:	4770      	bx	lr
 802a474:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802a478:	e7dc      	b.n	802a434 <ceilf+0x34>
 802a47a:	bf00      	nop
 802a47c:	7149f2ca 	.word	0x7149f2ca
 802a480:	007fffff 	.word	0x007fffff

0802a484 <floorf>:
 802a484:	ee10 3a10 	vmov	r3, s0
 802a488:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a48c:	3a7f      	subs	r2, #127	; 0x7f
 802a48e:	2a16      	cmp	r2, #22
 802a490:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a494:	dc2a      	bgt.n	802a4ec <floorf+0x68>
 802a496:	2a00      	cmp	r2, #0
 802a498:	da11      	bge.n	802a4be <floorf+0x3a>
 802a49a:	eddf 7a18 	vldr	s15, [pc, #96]	; 802a4fc <floorf+0x78>
 802a49e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a4a2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a4a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a4aa:	dd05      	ble.n	802a4b8 <floorf+0x34>
 802a4ac:	2b00      	cmp	r3, #0
 802a4ae:	da23      	bge.n	802a4f8 <floorf+0x74>
 802a4b0:	4a13      	ldr	r2, [pc, #76]	; (802a500 <floorf+0x7c>)
 802a4b2:	2900      	cmp	r1, #0
 802a4b4:	bf18      	it	ne
 802a4b6:	4613      	movne	r3, r2
 802a4b8:	ee00 3a10 	vmov	s0, r3
 802a4bc:	4770      	bx	lr
 802a4be:	4911      	ldr	r1, [pc, #68]	; (802a504 <floorf+0x80>)
 802a4c0:	4111      	asrs	r1, r2
 802a4c2:	420b      	tst	r3, r1
 802a4c4:	d0fa      	beq.n	802a4bc <floorf+0x38>
 802a4c6:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802a4fc <floorf+0x78>
 802a4ca:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a4ce:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a4d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a4d6:	ddef      	ble.n	802a4b8 <floorf+0x34>
 802a4d8:	2b00      	cmp	r3, #0
 802a4da:	bfbe      	ittt	lt
 802a4dc:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802a4e0:	fa40 f202 	asrlt.w	r2, r0, r2
 802a4e4:	189b      	addlt	r3, r3, r2
 802a4e6:	ea23 0301 	bic.w	r3, r3, r1
 802a4ea:	e7e5      	b.n	802a4b8 <floorf+0x34>
 802a4ec:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a4f0:	d3e4      	bcc.n	802a4bc <floorf+0x38>
 802a4f2:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a4f6:	4770      	bx	lr
 802a4f8:	2300      	movs	r3, #0
 802a4fa:	e7dd      	b.n	802a4b8 <floorf+0x34>
 802a4fc:	7149f2ca 	.word	0x7149f2ca
 802a500:	bf800000 	.word	0xbf800000
 802a504:	007fffff 	.word	0x007fffff

0802a508 <__ieee754_log>:
 802a508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a50c:	ec51 0b10 	vmov	r0, r1, d0
 802a510:	ed2d 8b04 	vpush	{d8-d9}
 802a514:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 802a518:	b083      	sub	sp, #12
 802a51a:	460d      	mov	r5, r1
 802a51c:	da29      	bge.n	802a572 <__ieee754_log+0x6a>
 802a51e:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 802a522:	4303      	orrs	r3, r0
 802a524:	ee10 2a10 	vmov	r2, s0
 802a528:	d10c      	bne.n	802a544 <__ieee754_log+0x3c>
 802a52a:	49cf      	ldr	r1, [pc, #828]	; (802a868 <__ieee754_log+0x360>)
 802a52c:	2200      	movs	r2, #0
 802a52e:	2300      	movs	r3, #0
 802a530:	2000      	movs	r0, #0
 802a532:	f7d6 f98b 	bl	800084c <__aeabi_ddiv>
 802a536:	ec41 0b10 	vmov	d0, r0, r1
 802a53a:	b003      	add	sp, #12
 802a53c:	ecbd 8b04 	vpop	{d8-d9}
 802a540:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a544:	2900      	cmp	r1, #0
 802a546:	da05      	bge.n	802a554 <__ieee754_log+0x4c>
 802a548:	460b      	mov	r3, r1
 802a54a:	f7d5 fe9d 	bl	8000288 <__aeabi_dsub>
 802a54e:	2200      	movs	r2, #0
 802a550:	2300      	movs	r3, #0
 802a552:	e7ee      	b.n	802a532 <__ieee754_log+0x2a>
 802a554:	4bc5      	ldr	r3, [pc, #788]	; (802a86c <__ieee754_log+0x364>)
 802a556:	2200      	movs	r2, #0
 802a558:	f7d6 f84e 	bl	80005f8 <__aeabi_dmul>
 802a55c:	f06f 0335 	mvn.w	r3, #53	; 0x35
 802a560:	460d      	mov	r5, r1
 802a562:	4ac3      	ldr	r2, [pc, #780]	; (802a870 <__ieee754_log+0x368>)
 802a564:	4295      	cmp	r5, r2
 802a566:	dd06      	ble.n	802a576 <__ieee754_log+0x6e>
 802a568:	4602      	mov	r2, r0
 802a56a:	460b      	mov	r3, r1
 802a56c:	f7d5 fe8e 	bl	800028c <__adddf3>
 802a570:	e7e1      	b.n	802a536 <__ieee754_log+0x2e>
 802a572:	2300      	movs	r3, #0
 802a574:	e7f5      	b.n	802a562 <__ieee754_log+0x5a>
 802a576:	152c      	asrs	r4, r5, #20
 802a578:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 802a57c:	f3c5 0513 	ubfx	r5, r5, #0, #20
 802a580:	441c      	add	r4, r3
 802a582:	f505 2315 	add.w	r3, r5, #610304	; 0x95000
 802a586:	f603 7364 	addw	r3, r3, #3940	; 0xf64
 802a58a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 802a58e:	f083 527f 	eor.w	r2, r3, #1069547520	; 0x3fc00000
 802a592:	f482 1240 	eor.w	r2, r2, #3145728	; 0x300000
 802a596:	ea42 0105 	orr.w	r1, r2, r5
 802a59a:	eb04 5413 	add.w	r4, r4, r3, lsr #20
 802a59e:	2200      	movs	r2, #0
 802a5a0:	4bb4      	ldr	r3, [pc, #720]	; (802a874 <__ieee754_log+0x36c>)
 802a5a2:	f7d5 fe71 	bl	8000288 <__aeabi_dsub>
 802a5a6:	1cab      	adds	r3, r5, #2
 802a5a8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 802a5ac:	2b02      	cmp	r3, #2
 802a5ae:	4682      	mov	sl, r0
 802a5b0:	468b      	mov	fp, r1
 802a5b2:	f04f 0200 	mov.w	r2, #0
 802a5b6:	dc53      	bgt.n	802a660 <__ieee754_log+0x158>
 802a5b8:	2300      	movs	r3, #0
 802a5ba:	f7d6 fa85 	bl	8000ac8 <__aeabi_dcmpeq>
 802a5be:	b1d0      	cbz	r0, 802a5f6 <__ieee754_log+0xee>
 802a5c0:	2c00      	cmp	r4, #0
 802a5c2:	f000 8122 	beq.w	802a80a <__ieee754_log+0x302>
 802a5c6:	4620      	mov	r0, r4
 802a5c8:	f7d5 ffac 	bl	8000524 <__aeabi_i2d>
 802a5cc:	a390      	add	r3, pc, #576	; (adr r3, 802a810 <__ieee754_log+0x308>)
 802a5ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 802a5d2:	4606      	mov	r6, r0
 802a5d4:	460f      	mov	r7, r1
 802a5d6:	f7d6 f80f 	bl	80005f8 <__aeabi_dmul>
 802a5da:	a38f      	add	r3, pc, #572	; (adr r3, 802a818 <__ieee754_log+0x310>)
 802a5dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 802a5e0:	4604      	mov	r4, r0
 802a5e2:	460d      	mov	r5, r1
 802a5e4:	4630      	mov	r0, r6
 802a5e6:	4639      	mov	r1, r7
 802a5e8:	f7d6 f806 	bl	80005f8 <__aeabi_dmul>
 802a5ec:	4602      	mov	r2, r0
 802a5ee:	460b      	mov	r3, r1
 802a5f0:	4620      	mov	r0, r4
 802a5f2:	4629      	mov	r1, r5
 802a5f4:	e7ba      	b.n	802a56c <__ieee754_log+0x64>
 802a5f6:	a38a      	add	r3, pc, #552	; (adr r3, 802a820 <__ieee754_log+0x318>)
 802a5f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 802a5fc:	4650      	mov	r0, sl
 802a5fe:	4659      	mov	r1, fp
 802a600:	f7d5 fffa 	bl	80005f8 <__aeabi_dmul>
 802a604:	4602      	mov	r2, r0
 802a606:	460b      	mov	r3, r1
 802a608:	2000      	movs	r0, #0
 802a60a:	499b      	ldr	r1, [pc, #620]	; (802a878 <__ieee754_log+0x370>)
 802a60c:	f7d5 fe3c 	bl	8000288 <__aeabi_dsub>
 802a610:	4652      	mov	r2, sl
 802a612:	4606      	mov	r6, r0
 802a614:	460f      	mov	r7, r1
 802a616:	465b      	mov	r3, fp
 802a618:	4650      	mov	r0, sl
 802a61a:	4659      	mov	r1, fp
 802a61c:	f7d5 ffec 	bl	80005f8 <__aeabi_dmul>
 802a620:	4602      	mov	r2, r0
 802a622:	460b      	mov	r3, r1
 802a624:	4630      	mov	r0, r6
 802a626:	4639      	mov	r1, r7
 802a628:	f7d5 ffe6 	bl	80005f8 <__aeabi_dmul>
 802a62c:	4606      	mov	r6, r0
 802a62e:	460f      	mov	r7, r1
 802a630:	b914      	cbnz	r4, 802a638 <__ieee754_log+0x130>
 802a632:	4632      	mov	r2, r6
 802a634:	463b      	mov	r3, r7
 802a636:	e0a2      	b.n	802a77e <__ieee754_log+0x276>
 802a638:	4620      	mov	r0, r4
 802a63a:	f7d5 ff73 	bl	8000524 <__aeabi_i2d>
 802a63e:	a374      	add	r3, pc, #464	; (adr r3, 802a810 <__ieee754_log+0x308>)
 802a640:	e9d3 2300 	ldrd	r2, r3, [r3]
 802a644:	4680      	mov	r8, r0
 802a646:	4689      	mov	r9, r1
 802a648:	f7d5 ffd6 	bl	80005f8 <__aeabi_dmul>
 802a64c:	a372      	add	r3, pc, #456	; (adr r3, 802a818 <__ieee754_log+0x310>)
 802a64e:	e9d3 2300 	ldrd	r2, r3, [r3]
 802a652:	4604      	mov	r4, r0
 802a654:	460d      	mov	r5, r1
 802a656:	4640      	mov	r0, r8
 802a658:	4649      	mov	r1, r9
 802a65a:	f7d5 ffcd 	bl	80005f8 <__aeabi_dmul>
 802a65e:	e0a7      	b.n	802a7b0 <__ieee754_log+0x2a8>
 802a660:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 802a664:	f7d5 fe12 	bl	800028c <__adddf3>
 802a668:	4602      	mov	r2, r0
 802a66a:	460b      	mov	r3, r1
 802a66c:	4650      	mov	r0, sl
 802a66e:	4659      	mov	r1, fp
 802a670:	f7d6 f8ec 	bl	800084c <__aeabi_ddiv>
 802a674:	ec41 0b18 	vmov	d8, r0, r1
 802a678:	4620      	mov	r0, r4
 802a67a:	f7d5 ff53 	bl	8000524 <__aeabi_i2d>
 802a67e:	ec53 2b18 	vmov	r2, r3, d8
 802a682:	ec41 0b19 	vmov	d9, r0, r1
 802a686:	ec51 0b18 	vmov	r0, r1, d8
 802a68a:	f7d5 ffb5 	bl	80005f8 <__aeabi_dmul>
 802a68e:	f5a5 23c2 	sub.w	r3, r5, #397312	; 0x61000
 802a692:	f2a3 437a 	subw	r3, r3, #1146	; 0x47a
 802a696:	9301      	str	r3, [sp, #4]
 802a698:	4602      	mov	r2, r0
 802a69a:	460b      	mov	r3, r1
 802a69c:	4680      	mov	r8, r0
 802a69e:	4689      	mov	r9, r1
 802a6a0:	f7d5 ffaa 	bl	80005f8 <__aeabi_dmul>
 802a6a4:	a360      	add	r3, pc, #384	; (adr r3, 802a828 <__ieee754_log+0x320>)
 802a6a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 802a6aa:	4606      	mov	r6, r0
 802a6ac:	460f      	mov	r7, r1
 802a6ae:	f7d5 ffa3 	bl	80005f8 <__aeabi_dmul>
 802a6b2:	a35f      	add	r3, pc, #380	; (adr r3, 802a830 <__ieee754_log+0x328>)
 802a6b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 802a6b8:	f7d5 fde8 	bl	800028c <__adddf3>
 802a6bc:	4632      	mov	r2, r6
 802a6be:	463b      	mov	r3, r7
 802a6c0:	f7d5 ff9a 	bl	80005f8 <__aeabi_dmul>
 802a6c4:	a35c      	add	r3, pc, #368	; (adr r3, 802a838 <__ieee754_log+0x330>)
 802a6c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 802a6ca:	f7d5 fddf 	bl	800028c <__adddf3>
 802a6ce:	4632      	mov	r2, r6
 802a6d0:	463b      	mov	r3, r7
 802a6d2:	f7d5 ff91 	bl	80005f8 <__aeabi_dmul>
 802a6d6:	a35a      	add	r3, pc, #360	; (adr r3, 802a840 <__ieee754_log+0x338>)
 802a6d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 802a6dc:	f7d5 fdd6 	bl	800028c <__adddf3>
 802a6e0:	4642      	mov	r2, r8
 802a6e2:	464b      	mov	r3, r9
 802a6e4:	f7d5 ff88 	bl	80005f8 <__aeabi_dmul>
 802a6e8:	a357      	add	r3, pc, #348	; (adr r3, 802a848 <__ieee754_log+0x340>)
 802a6ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 802a6ee:	4680      	mov	r8, r0
 802a6f0:	4689      	mov	r9, r1
 802a6f2:	4630      	mov	r0, r6
 802a6f4:	4639      	mov	r1, r7
 802a6f6:	f7d5 ff7f 	bl	80005f8 <__aeabi_dmul>
 802a6fa:	a355      	add	r3, pc, #340	; (adr r3, 802a850 <__ieee754_log+0x348>)
 802a6fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 802a700:	f7d5 fdc4 	bl	800028c <__adddf3>
 802a704:	4632      	mov	r2, r6
 802a706:	463b      	mov	r3, r7
 802a708:	f7d5 ff76 	bl	80005f8 <__aeabi_dmul>
 802a70c:	a352      	add	r3, pc, #328	; (adr r3, 802a858 <__ieee754_log+0x350>)
 802a70e:	e9d3 2300 	ldrd	r2, r3, [r3]
 802a712:	f7d5 fdbb 	bl	800028c <__adddf3>
 802a716:	4632      	mov	r2, r6
 802a718:	463b      	mov	r3, r7
 802a71a:	f7d5 ff6d 	bl	80005f8 <__aeabi_dmul>
 802a71e:	460b      	mov	r3, r1
 802a720:	4602      	mov	r2, r0
 802a722:	4649      	mov	r1, r9
 802a724:	4640      	mov	r0, r8
 802a726:	f7d5 fdb1 	bl	800028c <__adddf3>
 802a72a:	f5c5 25d7 	rsb	r5, r5, #440320	; 0x6b800
 802a72e:	9b01      	ldr	r3, [sp, #4]
 802a730:	3551      	adds	r5, #81	; 0x51
 802a732:	431d      	orrs	r5, r3
 802a734:	2d00      	cmp	r5, #0
 802a736:	4680      	mov	r8, r0
 802a738:	4689      	mov	r9, r1
 802a73a:	dd48      	ble.n	802a7ce <__ieee754_log+0x2c6>
 802a73c:	4b4e      	ldr	r3, [pc, #312]	; (802a878 <__ieee754_log+0x370>)
 802a73e:	2200      	movs	r2, #0
 802a740:	4650      	mov	r0, sl
 802a742:	4659      	mov	r1, fp
 802a744:	f7d5 ff58 	bl	80005f8 <__aeabi_dmul>
 802a748:	4652      	mov	r2, sl
 802a74a:	465b      	mov	r3, fp
 802a74c:	f7d5 ff54 	bl	80005f8 <__aeabi_dmul>
 802a750:	4602      	mov	r2, r0
 802a752:	460b      	mov	r3, r1
 802a754:	4606      	mov	r6, r0
 802a756:	460f      	mov	r7, r1
 802a758:	4640      	mov	r0, r8
 802a75a:	4649      	mov	r1, r9
 802a75c:	f7d5 fd96 	bl	800028c <__adddf3>
 802a760:	ec53 2b18 	vmov	r2, r3, d8
 802a764:	f7d5 ff48 	bl	80005f8 <__aeabi_dmul>
 802a768:	4680      	mov	r8, r0
 802a76a:	4689      	mov	r9, r1
 802a76c:	b964      	cbnz	r4, 802a788 <__ieee754_log+0x280>
 802a76e:	4602      	mov	r2, r0
 802a770:	460b      	mov	r3, r1
 802a772:	4630      	mov	r0, r6
 802a774:	4639      	mov	r1, r7
 802a776:	f7d5 fd87 	bl	8000288 <__aeabi_dsub>
 802a77a:	4602      	mov	r2, r0
 802a77c:	460b      	mov	r3, r1
 802a77e:	4650      	mov	r0, sl
 802a780:	4659      	mov	r1, fp
 802a782:	f7d5 fd81 	bl	8000288 <__aeabi_dsub>
 802a786:	e6d6      	b.n	802a536 <__ieee754_log+0x2e>
 802a788:	a321      	add	r3, pc, #132	; (adr r3, 802a810 <__ieee754_log+0x308>)
 802a78a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802a78e:	ec51 0b19 	vmov	r0, r1, d9
 802a792:	f7d5 ff31 	bl	80005f8 <__aeabi_dmul>
 802a796:	a320      	add	r3, pc, #128	; (adr r3, 802a818 <__ieee754_log+0x310>)
 802a798:	e9d3 2300 	ldrd	r2, r3, [r3]
 802a79c:	4604      	mov	r4, r0
 802a79e:	460d      	mov	r5, r1
 802a7a0:	ec51 0b19 	vmov	r0, r1, d9
 802a7a4:	f7d5 ff28 	bl	80005f8 <__aeabi_dmul>
 802a7a8:	4642      	mov	r2, r8
 802a7aa:	464b      	mov	r3, r9
 802a7ac:	f7d5 fd6e 	bl	800028c <__adddf3>
 802a7b0:	4602      	mov	r2, r0
 802a7b2:	460b      	mov	r3, r1
 802a7b4:	4630      	mov	r0, r6
 802a7b6:	4639      	mov	r1, r7
 802a7b8:	f7d5 fd66 	bl	8000288 <__aeabi_dsub>
 802a7bc:	4652      	mov	r2, sl
 802a7be:	465b      	mov	r3, fp
 802a7c0:	f7d5 fd62 	bl	8000288 <__aeabi_dsub>
 802a7c4:	4602      	mov	r2, r0
 802a7c6:	460b      	mov	r3, r1
 802a7c8:	4620      	mov	r0, r4
 802a7ca:	4629      	mov	r1, r5
 802a7cc:	e7d9      	b.n	802a782 <__ieee754_log+0x27a>
 802a7ce:	4602      	mov	r2, r0
 802a7d0:	460b      	mov	r3, r1
 802a7d2:	4650      	mov	r0, sl
 802a7d4:	4659      	mov	r1, fp
 802a7d6:	f7d5 fd57 	bl	8000288 <__aeabi_dsub>
 802a7da:	ec53 2b18 	vmov	r2, r3, d8
 802a7de:	f7d5 ff0b 	bl	80005f8 <__aeabi_dmul>
 802a7e2:	4606      	mov	r6, r0
 802a7e4:	460f      	mov	r7, r1
 802a7e6:	2c00      	cmp	r4, #0
 802a7e8:	f43f af23 	beq.w	802a632 <__ieee754_log+0x12a>
 802a7ec:	a308      	add	r3, pc, #32	; (adr r3, 802a810 <__ieee754_log+0x308>)
 802a7ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 802a7f2:	ec51 0b19 	vmov	r0, r1, d9
 802a7f6:	f7d5 feff 	bl	80005f8 <__aeabi_dmul>
 802a7fa:	a307      	add	r3, pc, #28	; (adr r3, 802a818 <__ieee754_log+0x310>)
 802a7fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 802a800:	4604      	mov	r4, r0
 802a802:	460d      	mov	r5, r1
 802a804:	ec51 0b19 	vmov	r0, r1, d9
 802a808:	e727      	b.n	802a65a <__ieee754_log+0x152>
 802a80a:	ed9f 0b15 	vldr	d0, [pc, #84]	; 802a860 <__ieee754_log+0x358>
 802a80e:	e694      	b.n	802a53a <__ieee754_log+0x32>
 802a810:	fee00000 	.word	0xfee00000
 802a814:	3fe62e42 	.word	0x3fe62e42
 802a818:	35793c76 	.word	0x35793c76
 802a81c:	3dea39ef 	.word	0x3dea39ef
 802a820:	55555555 	.word	0x55555555
 802a824:	3fd55555 	.word	0x3fd55555
 802a828:	df3e5244 	.word	0xdf3e5244
 802a82c:	3fc2f112 	.word	0x3fc2f112
 802a830:	96cb03de 	.word	0x96cb03de
 802a834:	3fc74664 	.word	0x3fc74664
 802a838:	94229359 	.word	0x94229359
 802a83c:	3fd24924 	.word	0x3fd24924
 802a840:	55555593 	.word	0x55555593
 802a844:	3fe55555 	.word	0x3fe55555
 802a848:	d078c69f 	.word	0xd078c69f
 802a84c:	3fc39a09 	.word	0x3fc39a09
 802a850:	1d8e78af 	.word	0x1d8e78af
 802a854:	3fcc71c5 	.word	0x3fcc71c5
 802a858:	9997fa04 	.word	0x9997fa04
 802a85c:	3fd99999 	.word	0x3fd99999
	...
 802a868:	c3500000 	.word	0xc3500000
 802a86c:	43500000 	.word	0x43500000
 802a870:	7fefffff 	.word	0x7fefffff
 802a874:	3ff00000 	.word	0x3ff00000
 802a878:	3fe00000 	.word	0x3fe00000

0802a87c <__kernel_cosf>:
 802a87c:	ee10 3a10 	vmov	r3, s0
 802a880:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a884:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a888:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802a88c:	da05      	bge.n	802a89a <__kernel_cosf+0x1e>
 802a88e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a892:	ee17 2a90 	vmov	r2, s15
 802a896:	2a00      	cmp	r2, #0
 802a898:	d03b      	beq.n	802a912 <__kernel_cosf+0x96>
 802a89a:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a89e:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a918 <__kernel_cosf+0x9c>
 802a8a2:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802a91c <__kernel_cosf+0xa0>
 802a8a6:	4a1e      	ldr	r2, [pc, #120]	; (802a920 <__kernel_cosf+0xa4>)
 802a8a8:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a8ac:	4293      	cmp	r3, r2
 802a8ae:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802a924 <__kernel_cosf+0xa8>
 802a8b2:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a8b6:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802a928 <__kernel_cosf+0xac>
 802a8ba:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a8be:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802a92c <__kernel_cosf+0xb0>
 802a8c2:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a8c6:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802a930 <__kernel_cosf+0xb4>
 802a8ca:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a8ce:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802a8d2:	ee26 6a07 	vmul.f32	s12, s12, s14
 802a8d6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a8da:	eee7 0a06 	vfma.f32	s1, s14, s12
 802a8de:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a8e2:	dc04      	bgt.n	802a8ee <__kernel_cosf+0x72>
 802a8e4:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a8e8:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802a8ec:	4770      	bx	lr
 802a8ee:	4a11      	ldr	r2, [pc, #68]	; (802a934 <__kernel_cosf+0xb8>)
 802a8f0:	4293      	cmp	r3, r2
 802a8f2:	bfda      	itte	le
 802a8f4:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802a8f8:	ee07 3a10 	vmovle	s14, r3
 802a8fc:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802a900:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a904:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802a908:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a90c:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a910:	4770      	bx	lr
 802a912:	eeb0 0a66 	vmov.f32	s0, s13
 802a916:	4770      	bx	lr
 802a918:	ad47d74e 	.word	0xad47d74e
 802a91c:	310f74f6 	.word	0x310f74f6
 802a920:	3e999999 	.word	0x3e999999
 802a924:	b493f27c 	.word	0xb493f27c
 802a928:	37d00d01 	.word	0x37d00d01
 802a92c:	bab60b61 	.word	0xbab60b61
 802a930:	3d2aaaab 	.word	0x3d2aaaab
 802a934:	3f480000 	.word	0x3f480000

0802a938 <__kernel_sinf>:
 802a938:	ee10 3a10 	vmov	r3, s0
 802a93c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a940:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a944:	da04      	bge.n	802a950 <__kernel_sinf+0x18>
 802a946:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a94a:	ee17 3a90 	vmov	r3, s15
 802a94e:	b35b      	cbz	r3, 802a9a8 <__kernel_sinf+0x70>
 802a950:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a954:	eddf 7a15 	vldr	s15, [pc, #84]	; 802a9ac <__kernel_sinf+0x74>
 802a958:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802a9b0 <__kernel_sinf+0x78>
 802a95c:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a960:	eddf 7a14 	vldr	s15, [pc, #80]	; 802a9b4 <__kernel_sinf+0x7c>
 802a964:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a968:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802a9b8 <__kernel_sinf+0x80>
 802a96c:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a970:	eddf 7a12 	vldr	s15, [pc, #72]	; 802a9bc <__kernel_sinf+0x84>
 802a974:	ee60 6a07 	vmul.f32	s13, s0, s14
 802a978:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a97c:	b930      	cbnz	r0, 802a98c <__kernel_sinf+0x54>
 802a97e:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802a9c0 <__kernel_sinf+0x88>
 802a982:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a986:	eea6 0a26 	vfma.f32	s0, s12, s13
 802a98a:	4770      	bx	lr
 802a98c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a990:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802a994:	eee0 7a86 	vfma.f32	s15, s1, s12
 802a998:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802a99c:	eddf 7a09 	vldr	s15, [pc, #36]	; 802a9c4 <__kernel_sinf+0x8c>
 802a9a0:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802a9a4:	ee30 0a60 	vsub.f32	s0, s0, s1
 802a9a8:	4770      	bx	lr
 802a9aa:	bf00      	nop
 802a9ac:	2f2ec9d3 	.word	0x2f2ec9d3
 802a9b0:	b2d72f34 	.word	0xb2d72f34
 802a9b4:	3638ef1b 	.word	0x3638ef1b
 802a9b8:	b9500d01 	.word	0xb9500d01
 802a9bc:	3c088889 	.word	0x3c088889
 802a9c0:	be2aaaab 	.word	0xbe2aaaab
 802a9c4:	3e2aaaab 	.word	0x3e2aaaab

0802a9c8 <__ieee754_rem_pio2f>:
 802a9c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a9ca:	ee10 6a10 	vmov	r6, s0
 802a9ce:	4b86      	ldr	r3, [pc, #536]	; (802abe8 <__ieee754_rem_pio2f+0x220>)
 802a9d0:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802a9d4:	429d      	cmp	r5, r3
 802a9d6:	b087      	sub	sp, #28
 802a9d8:	4604      	mov	r4, r0
 802a9da:	dc05      	bgt.n	802a9e8 <__ieee754_rem_pio2f+0x20>
 802a9dc:	2300      	movs	r3, #0
 802a9de:	ed80 0a00 	vstr	s0, [r0]
 802a9e2:	6043      	str	r3, [r0, #4]
 802a9e4:	2000      	movs	r0, #0
 802a9e6:	e020      	b.n	802aa2a <__ieee754_rem_pio2f+0x62>
 802a9e8:	4b80      	ldr	r3, [pc, #512]	; (802abec <__ieee754_rem_pio2f+0x224>)
 802a9ea:	429d      	cmp	r5, r3
 802a9ec:	dc38      	bgt.n	802aa60 <__ieee754_rem_pio2f+0x98>
 802a9ee:	2e00      	cmp	r6, #0
 802a9f0:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802abf0 <__ieee754_rem_pio2f+0x228>
 802a9f4:	4b7f      	ldr	r3, [pc, #508]	; (802abf4 <__ieee754_rem_pio2f+0x22c>)
 802a9f6:	f025 050f 	bic.w	r5, r5, #15
 802a9fa:	dd18      	ble.n	802aa2e <__ieee754_rem_pio2f+0x66>
 802a9fc:	429d      	cmp	r5, r3
 802a9fe:	ee70 7a47 	vsub.f32	s15, s0, s14
 802aa02:	bf09      	itett	eq
 802aa04:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802abf8 <__ieee754_rem_pio2f+0x230>
 802aa08:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802abfc <__ieee754_rem_pio2f+0x234>
 802aa0c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802aa10:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802ac00 <__ieee754_rem_pio2f+0x238>
 802aa14:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802aa18:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802aa1c:	edc0 6a00 	vstr	s13, [r0]
 802aa20:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802aa24:	edc0 7a01 	vstr	s15, [r0, #4]
 802aa28:	2001      	movs	r0, #1
 802aa2a:	b007      	add	sp, #28
 802aa2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802aa2e:	429d      	cmp	r5, r3
 802aa30:	ee70 7a07 	vadd.f32	s15, s0, s14
 802aa34:	bf09      	itett	eq
 802aa36:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802abf8 <__ieee754_rem_pio2f+0x230>
 802aa3a:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802abfc <__ieee754_rem_pio2f+0x234>
 802aa3e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802aa42:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802ac00 <__ieee754_rem_pio2f+0x238>
 802aa46:	ee77 6a87 	vadd.f32	s13, s15, s14
 802aa4a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802aa4e:	edc0 6a00 	vstr	s13, [r0]
 802aa52:	ee77 7a87 	vadd.f32	s15, s15, s14
 802aa56:	edc0 7a01 	vstr	s15, [r0, #4]
 802aa5a:	f04f 30ff 	mov.w	r0, #4294967295
 802aa5e:	e7e4      	b.n	802aa2a <__ieee754_rem_pio2f+0x62>
 802aa60:	4b68      	ldr	r3, [pc, #416]	; (802ac04 <__ieee754_rem_pio2f+0x23c>)
 802aa62:	429d      	cmp	r5, r3
 802aa64:	dc71      	bgt.n	802ab4a <__ieee754_rem_pio2f+0x182>
 802aa66:	f000 f8db 	bl	802ac20 <fabsf>
 802aa6a:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802ac08 <__ieee754_rem_pio2f+0x240>
 802aa6e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802aa72:	eee0 7a07 	vfma.f32	s15, s0, s14
 802aa76:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802aa7a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802aa7e:	ee17 0a90 	vmov	r0, s15
 802aa82:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802abf0 <__ieee754_rem_pio2f+0x228>
 802aa86:	eea7 0a67 	vfms.f32	s0, s14, s15
 802aa8a:	281f      	cmp	r0, #31
 802aa8c:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802abfc <__ieee754_rem_pio2f+0x234>
 802aa90:	ee67 7a27 	vmul.f32	s15, s14, s15
 802aa94:	eeb1 6a47 	vneg.f32	s12, s14
 802aa98:	ee70 6a67 	vsub.f32	s13, s0, s15
 802aa9c:	ee16 2a90 	vmov	r2, s13
 802aaa0:	dc1c      	bgt.n	802aadc <__ieee754_rem_pio2f+0x114>
 802aaa2:	495a      	ldr	r1, [pc, #360]	; (802ac0c <__ieee754_rem_pio2f+0x244>)
 802aaa4:	1e47      	subs	r7, r0, #1
 802aaa6:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802aaaa:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802aaae:	428b      	cmp	r3, r1
 802aab0:	d014      	beq.n	802aadc <__ieee754_rem_pio2f+0x114>
 802aab2:	6022      	str	r2, [r4, #0]
 802aab4:	ed94 7a00 	vldr	s14, [r4]
 802aab8:	ee30 0a47 	vsub.f32	s0, s0, s14
 802aabc:	2e00      	cmp	r6, #0
 802aabe:	ee30 0a67 	vsub.f32	s0, s0, s15
 802aac2:	ed84 0a01 	vstr	s0, [r4, #4]
 802aac6:	dab0      	bge.n	802aa2a <__ieee754_rem_pio2f+0x62>
 802aac8:	eeb1 7a47 	vneg.f32	s14, s14
 802aacc:	eeb1 0a40 	vneg.f32	s0, s0
 802aad0:	ed84 7a00 	vstr	s14, [r4]
 802aad4:	ed84 0a01 	vstr	s0, [r4, #4]
 802aad8:	4240      	negs	r0, r0
 802aada:	e7a6      	b.n	802aa2a <__ieee754_rem_pio2f+0x62>
 802aadc:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802aae0:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802aae4:	2908      	cmp	r1, #8
 802aae6:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802aaea:	dde2      	ble.n	802aab2 <__ieee754_rem_pio2f+0xea>
 802aaec:	eddf 5a42 	vldr	s11, [pc, #264]	; 802abf8 <__ieee754_rem_pio2f+0x230>
 802aaf0:	eef0 6a40 	vmov.f32	s13, s0
 802aaf4:	eee6 6a25 	vfma.f32	s13, s12, s11
 802aaf8:	ee70 7a66 	vsub.f32	s15, s0, s13
 802aafc:	eee6 7a25 	vfma.f32	s15, s12, s11
 802ab00:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802ac00 <__ieee754_rem_pio2f+0x238>
 802ab04:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802ab08:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802ab0c:	ee15 2a90 	vmov	r2, s11
 802ab10:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802ab14:	1a5b      	subs	r3, r3, r1
 802ab16:	2b19      	cmp	r3, #25
 802ab18:	dc04      	bgt.n	802ab24 <__ieee754_rem_pio2f+0x15c>
 802ab1a:	edc4 5a00 	vstr	s11, [r4]
 802ab1e:	eeb0 0a66 	vmov.f32	s0, s13
 802ab22:	e7c7      	b.n	802aab4 <__ieee754_rem_pio2f+0xec>
 802ab24:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802ac10 <__ieee754_rem_pio2f+0x248>
 802ab28:	eeb0 0a66 	vmov.f32	s0, s13
 802ab2c:	eea6 0a25 	vfma.f32	s0, s12, s11
 802ab30:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802ab34:	eddf 6a37 	vldr	s13, [pc, #220]	; 802ac14 <__ieee754_rem_pio2f+0x24c>
 802ab38:	eee6 7a25 	vfma.f32	s15, s12, s11
 802ab3c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802ab40:	ee30 7a67 	vsub.f32	s14, s0, s15
 802ab44:	ed84 7a00 	vstr	s14, [r4]
 802ab48:	e7b4      	b.n	802aab4 <__ieee754_rem_pio2f+0xec>
 802ab4a:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802ab4e:	db06      	blt.n	802ab5e <__ieee754_rem_pio2f+0x196>
 802ab50:	ee70 7a40 	vsub.f32	s15, s0, s0
 802ab54:	edc0 7a01 	vstr	s15, [r0, #4]
 802ab58:	edc0 7a00 	vstr	s15, [r0]
 802ab5c:	e742      	b.n	802a9e4 <__ieee754_rem_pio2f+0x1c>
 802ab5e:	15ea      	asrs	r2, r5, #23
 802ab60:	3a86      	subs	r2, #134	; 0x86
 802ab62:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802ab66:	ee07 3a90 	vmov	s15, r3
 802ab6a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802ab6e:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802ac18 <__ieee754_rem_pio2f+0x250>
 802ab72:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802ab76:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ab7a:	ed8d 7a03 	vstr	s14, [sp, #12]
 802ab7e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802ab82:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802ab86:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802ab8a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ab8e:	ed8d 7a04 	vstr	s14, [sp, #16]
 802ab92:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802ab96:	eef5 7a40 	vcmp.f32	s15, #0.0
 802ab9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ab9e:	edcd 7a05 	vstr	s15, [sp, #20]
 802aba2:	d11e      	bne.n	802abe2 <__ieee754_rem_pio2f+0x21a>
 802aba4:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802aba8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802abac:	bf14      	ite	ne
 802abae:	2302      	movne	r3, #2
 802abb0:	2301      	moveq	r3, #1
 802abb2:	491a      	ldr	r1, [pc, #104]	; (802ac1c <__ieee754_rem_pio2f+0x254>)
 802abb4:	9101      	str	r1, [sp, #4]
 802abb6:	2102      	movs	r1, #2
 802abb8:	9100      	str	r1, [sp, #0]
 802abba:	a803      	add	r0, sp, #12
 802abbc:	4621      	mov	r1, r4
 802abbe:	f000 f89d 	bl	802acfc <__kernel_rem_pio2f>
 802abc2:	2e00      	cmp	r6, #0
 802abc4:	f6bf af31 	bge.w	802aa2a <__ieee754_rem_pio2f+0x62>
 802abc8:	edd4 7a00 	vldr	s15, [r4]
 802abcc:	eef1 7a67 	vneg.f32	s15, s15
 802abd0:	edc4 7a00 	vstr	s15, [r4]
 802abd4:	edd4 7a01 	vldr	s15, [r4, #4]
 802abd8:	eef1 7a67 	vneg.f32	s15, s15
 802abdc:	edc4 7a01 	vstr	s15, [r4, #4]
 802abe0:	e77a      	b.n	802aad8 <__ieee754_rem_pio2f+0x110>
 802abe2:	2303      	movs	r3, #3
 802abe4:	e7e5      	b.n	802abb2 <__ieee754_rem_pio2f+0x1ea>
 802abe6:	bf00      	nop
 802abe8:	3f490fd8 	.word	0x3f490fd8
 802abec:	4016cbe3 	.word	0x4016cbe3
 802abf0:	3fc90f80 	.word	0x3fc90f80
 802abf4:	3fc90fd0 	.word	0x3fc90fd0
 802abf8:	37354400 	.word	0x37354400
 802abfc:	37354443 	.word	0x37354443
 802ac00:	2e85a308 	.word	0x2e85a308
 802ac04:	43490f80 	.word	0x43490f80
 802ac08:	3f22f984 	.word	0x3f22f984
 802ac0c:	0802fc78 	.word	0x0802fc78
 802ac10:	2e85a300 	.word	0x2e85a300
 802ac14:	248d3132 	.word	0x248d3132
 802ac18:	43800000 	.word	0x43800000
 802ac1c:	0802fcf8 	.word	0x0802fcf8

0802ac20 <fabsf>:
 802ac20:	ee10 3a10 	vmov	r3, s0
 802ac24:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802ac28:	ee00 3a10 	vmov	s0, r3
 802ac2c:	4770      	bx	lr
	...

0802ac30 <scalbnf>:
 802ac30:	ee10 3a10 	vmov	r3, s0
 802ac34:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802ac38:	d02b      	beq.n	802ac92 <scalbnf+0x62>
 802ac3a:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802ac3e:	d302      	bcc.n	802ac46 <scalbnf+0x16>
 802ac40:	ee30 0a00 	vadd.f32	s0, s0, s0
 802ac44:	4770      	bx	lr
 802ac46:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802ac4a:	d123      	bne.n	802ac94 <scalbnf+0x64>
 802ac4c:	4b24      	ldr	r3, [pc, #144]	; (802ace0 <scalbnf+0xb0>)
 802ac4e:	eddf 7a25 	vldr	s15, [pc, #148]	; 802ace4 <scalbnf+0xb4>
 802ac52:	4298      	cmp	r0, r3
 802ac54:	ee20 0a27 	vmul.f32	s0, s0, s15
 802ac58:	db17      	blt.n	802ac8a <scalbnf+0x5a>
 802ac5a:	ee10 3a10 	vmov	r3, s0
 802ac5e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802ac62:	3a19      	subs	r2, #25
 802ac64:	f24c 3150 	movw	r1, #50000	; 0xc350
 802ac68:	4288      	cmp	r0, r1
 802ac6a:	dd15      	ble.n	802ac98 <scalbnf+0x68>
 802ac6c:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802ace8 <scalbnf+0xb8>
 802ac70:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802acec <scalbnf+0xbc>
 802ac74:	ee10 3a10 	vmov	r3, s0
 802ac78:	eeb0 7a67 	vmov.f32	s14, s15
 802ac7c:	2b00      	cmp	r3, #0
 802ac7e:	bfb8      	it	lt
 802ac80:	eef0 7a66 	vmovlt.f32	s15, s13
 802ac84:	ee27 0a87 	vmul.f32	s0, s15, s14
 802ac88:	4770      	bx	lr
 802ac8a:	eddf 7a19 	vldr	s15, [pc, #100]	; 802acf0 <scalbnf+0xc0>
 802ac8e:	ee27 0a80 	vmul.f32	s0, s15, s0
 802ac92:	4770      	bx	lr
 802ac94:	0dd2      	lsrs	r2, r2, #23
 802ac96:	e7e5      	b.n	802ac64 <scalbnf+0x34>
 802ac98:	4410      	add	r0, r2
 802ac9a:	28fe      	cmp	r0, #254	; 0xfe
 802ac9c:	dce6      	bgt.n	802ac6c <scalbnf+0x3c>
 802ac9e:	2800      	cmp	r0, #0
 802aca0:	dd06      	ble.n	802acb0 <scalbnf+0x80>
 802aca2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802aca6:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802acaa:	ee00 3a10 	vmov	s0, r3
 802acae:	4770      	bx	lr
 802acb0:	f110 0f16 	cmn.w	r0, #22
 802acb4:	da09      	bge.n	802acca <scalbnf+0x9a>
 802acb6:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802acf0 <scalbnf+0xc0>
 802acba:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802acf4 <scalbnf+0xc4>
 802acbe:	ee10 3a10 	vmov	r3, s0
 802acc2:	eeb0 7a67 	vmov.f32	s14, s15
 802acc6:	2b00      	cmp	r3, #0
 802acc8:	e7d9      	b.n	802ac7e <scalbnf+0x4e>
 802acca:	3019      	adds	r0, #25
 802accc:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802acd0:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802acd4:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802acf8 <scalbnf+0xc8>
 802acd8:	ee07 3a90 	vmov	s15, r3
 802acdc:	e7d7      	b.n	802ac8e <scalbnf+0x5e>
 802acde:	bf00      	nop
 802ace0:	ffff3cb0 	.word	0xffff3cb0
 802ace4:	4c000000 	.word	0x4c000000
 802ace8:	7149f2ca 	.word	0x7149f2ca
 802acec:	f149f2ca 	.word	0xf149f2ca
 802acf0:	0da24260 	.word	0x0da24260
 802acf4:	8da24260 	.word	0x8da24260
 802acf8:	33000000 	.word	0x33000000

0802acfc <__kernel_rem_pio2f>:
 802acfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ad00:	ed2d 8b04 	vpush	{d8-d9}
 802ad04:	b0d9      	sub	sp, #356	; 0x164
 802ad06:	4688      	mov	r8, r1
 802ad08:	9002      	str	r0, [sp, #8]
 802ad0a:	49b8      	ldr	r1, [pc, #736]	; (802afec <__kernel_rem_pio2f+0x2f0>)
 802ad0c:	9866      	ldr	r0, [sp, #408]	; 0x198
 802ad0e:	9301      	str	r3, [sp, #4]
 802ad10:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802ad14:	9901      	ldr	r1, [sp, #4]
 802ad16:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802ad18:	f101 3bff 	add.w	fp, r1, #4294967295
 802ad1c:	1d11      	adds	r1, r2, #4
 802ad1e:	db25      	blt.n	802ad6c <__kernel_rem_pio2f+0x70>
 802ad20:	1ed0      	subs	r0, r2, #3
 802ad22:	bf48      	it	mi
 802ad24:	1d10      	addmi	r0, r2, #4
 802ad26:	10c0      	asrs	r0, r0, #3
 802ad28:	1c45      	adds	r5, r0, #1
 802ad2a:	00e9      	lsls	r1, r5, #3
 802ad2c:	eba0 070b 	sub.w	r7, r0, fp
 802ad30:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802affc <__kernel_rem_pio2f+0x300>
 802ad34:	9103      	str	r1, [sp, #12]
 802ad36:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802ad3a:	eb0a 0c0b 	add.w	ip, sl, fp
 802ad3e:	ae1c      	add	r6, sp, #112	; 0x70
 802ad40:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802ad44:	2400      	movs	r4, #0
 802ad46:	4564      	cmp	r4, ip
 802ad48:	dd12      	ble.n	802ad70 <__kernel_rem_pio2f+0x74>
 802ad4a:	9901      	ldr	r1, [sp, #4]
 802ad4c:	ac1c      	add	r4, sp, #112	; 0x70
 802ad4e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802ad52:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802ad56:	f04f 0c00 	mov.w	ip, #0
 802ad5a:	45d4      	cmp	ip, sl
 802ad5c:	dc27      	bgt.n	802adae <__kernel_rem_pio2f+0xb2>
 802ad5e:	f8dd e008 	ldr.w	lr, [sp, #8]
 802ad62:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802affc <__kernel_rem_pio2f+0x300>
 802ad66:	4627      	mov	r7, r4
 802ad68:	2600      	movs	r6, #0
 802ad6a:	e016      	b.n	802ad9a <__kernel_rem_pio2f+0x9e>
 802ad6c:	2000      	movs	r0, #0
 802ad6e:	e7db      	b.n	802ad28 <__kernel_rem_pio2f+0x2c>
 802ad70:	42e7      	cmn	r7, r4
 802ad72:	bf5d      	ittte	pl
 802ad74:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802ad78:	ee07 1a90 	vmovpl	s15, r1
 802ad7c:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802ad80:	eef0 7a47 	vmovmi.f32	s15, s14
 802ad84:	ece6 7a01 	vstmia	r6!, {s15}
 802ad88:	3401      	adds	r4, #1
 802ad8a:	e7dc      	b.n	802ad46 <__kernel_rem_pio2f+0x4a>
 802ad8c:	ecfe 6a01 	vldmia	lr!, {s13}
 802ad90:	ed97 7a00 	vldr	s14, [r7]
 802ad94:	eee6 7a87 	vfma.f32	s15, s13, s14
 802ad98:	3601      	adds	r6, #1
 802ad9a:	455e      	cmp	r6, fp
 802ad9c:	f1a7 0704 	sub.w	r7, r7, #4
 802ada0:	ddf4      	ble.n	802ad8c <__kernel_rem_pio2f+0x90>
 802ada2:	ece9 7a01 	vstmia	r9!, {s15}
 802ada6:	f10c 0c01 	add.w	ip, ip, #1
 802adaa:	3404      	adds	r4, #4
 802adac:	e7d5      	b.n	802ad5a <__kernel_rem_pio2f+0x5e>
 802adae:	a908      	add	r1, sp, #32
 802adb0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802adb4:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802adb8:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802aff8 <__kernel_rem_pio2f+0x2fc>
 802adbc:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802aff4 <__kernel_rem_pio2f+0x2f8>
 802adc0:	9105      	str	r1, [sp, #20]
 802adc2:	9304      	str	r3, [sp, #16]
 802adc4:	4656      	mov	r6, sl
 802adc6:	00b3      	lsls	r3, r6, #2
 802adc8:	9306      	str	r3, [sp, #24]
 802adca:	ab58      	add	r3, sp, #352	; 0x160
 802adcc:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802add0:	ac08      	add	r4, sp, #32
 802add2:	ab44      	add	r3, sp, #272	; 0x110
 802add4:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802add8:	46a4      	mov	ip, r4
 802adda:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802adde:	4637      	mov	r7, r6
 802ade0:	2f00      	cmp	r7, #0
 802ade2:	f1a0 0004 	sub.w	r0, r0, #4
 802ade6:	dc4a      	bgt.n	802ae7e <__kernel_rem_pio2f+0x182>
 802ade8:	4628      	mov	r0, r5
 802adea:	9207      	str	r2, [sp, #28]
 802adec:	f7ff ff20 	bl	802ac30 <scalbnf>
 802adf0:	eeb0 8a40 	vmov.f32	s16, s0
 802adf4:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802adf8:	ee28 0a00 	vmul.f32	s0, s16, s0
 802adfc:	f7ff fb42 	bl	802a484 <floorf>
 802ae00:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802ae04:	eea0 8a67 	vfms.f32	s16, s0, s15
 802ae08:	2d00      	cmp	r5, #0
 802ae0a:	9a07      	ldr	r2, [sp, #28]
 802ae0c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802ae10:	ee17 9a90 	vmov	r9, s15
 802ae14:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802ae18:	ee38 8a67 	vsub.f32	s16, s16, s15
 802ae1c:	dd41      	ble.n	802aea2 <__kernel_rem_pio2f+0x1a6>
 802ae1e:	f106 3cff 	add.w	ip, r6, #4294967295
 802ae22:	ab08      	add	r3, sp, #32
 802ae24:	f1c5 0e08 	rsb	lr, r5, #8
 802ae28:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802ae2c:	fa47 f00e 	asr.w	r0, r7, lr
 802ae30:	4481      	add	r9, r0
 802ae32:	fa00 f00e 	lsl.w	r0, r0, lr
 802ae36:	1a3f      	subs	r7, r7, r0
 802ae38:	f1c5 0007 	rsb	r0, r5, #7
 802ae3c:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802ae40:	4107      	asrs	r7, r0
 802ae42:	2f00      	cmp	r7, #0
 802ae44:	dd3c      	ble.n	802aec0 <__kernel_rem_pio2f+0x1c4>
 802ae46:	f04f 0e00 	mov.w	lr, #0
 802ae4a:	f109 0901 	add.w	r9, r9, #1
 802ae4e:	4671      	mov	r1, lr
 802ae50:	4576      	cmp	r6, lr
 802ae52:	dc67      	bgt.n	802af24 <__kernel_rem_pio2f+0x228>
 802ae54:	2d00      	cmp	r5, #0
 802ae56:	dd03      	ble.n	802ae60 <__kernel_rem_pio2f+0x164>
 802ae58:	2d01      	cmp	r5, #1
 802ae5a:	d074      	beq.n	802af46 <__kernel_rem_pio2f+0x24a>
 802ae5c:	2d02      	cmp	r5, #2
 802ae5e:	d07b      	beq.n	802af58 <__kernel_rem_pio2f+0x25c>
 802ae60:	2f02      	cmp	r7, #2
 802ae62:	d12d      	bne.n	802aec0 <__kernel_rem_pio2f+0x1c4>
 802ae64:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802ae68:	ee30 8a48 	vsub.f32	s16, s0, s16
 802ae6c:	b341      	cbz	r1, 802aec0 <__kernel_rem_pio2f+0x1c4>
 802ae6e:	4628      	mov	r0, r5
 802ae70:	9207      	str	r2, [sp, #28]
 802ae72:	f7ff fedd 	bl	802ac30 <scalbnf>
 802ae76:	9a07      	ldr	r2, [sp, #28]
 802ae78:	ee38 8a40 	vsub.f32	s16, s16, s0
 802ae7c:	e020      	b.n	802aec0 <__kernel_rem_pio2f+0x1c4>
 802ae7e:	ee60 7a28 	vmul.f32	s15, s0, s17
 802ae82:	3f01      	subs	r7, #1
 802ae84:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802ae88:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802ae8c:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802ae90:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802ae94:	ecac 0a01 	vstmia	ip!, {s0}
 802ae98:	ed90 0a00 	vldr	s0, [r0]
 802ae9c:	ee37 0a80 	vadd.f32	s0, s15, s0
 802aea0:	e79e      	b.n	802ade0 <__kernel_rem_pio2f+0xe4>
 802aea2:	d105      	bne.n	802aeb0 <__kernel_rem_pio2f+0x1b4>
 802aea4:	1e70      	subs	r0, r6, #1
 802aea6:	ab08      	add	r3, sp, #32
 802aea8:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802aeac:	11ff      	asrs	r7, r7, #7
 802aeae:	e7c8      	b.n	802ae42 <__kernel_rem_pio2f+0x146>
 802aeb0:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802aeb4:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802aeb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aebc:	da30      	bge.n	802af20 <__kernel_rem_pio2f+0x224>
 802aebe:	2700      	movs	r7, #0
 802aec0:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802aec4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aec8:	f040 809a 	bne.w	802b000 <__kernel_rem_pio2f+0x304>
 802aecc:	1e74      	subs	r4, r6, #1
 802aece:	46a4      	mov	ip, r4
 802aed0:	2100      	movs	r1, #0
 802aed2:	45d4      	cmp	ip, sl
 802aed4:	da47      	bge.n	802af66 <__kernel_rem_pio2f+0x26a>
 802aed6:	2900      	cmp	r1, #0
 802aed8:	d063      	beq.n	802afa2 <__kernel_rem_pio2f+0x2a6>
 802aeda:	ab08      	add	r3, sp, #32
 802aedc:	3d08      	subs	r5, #8
 802aede:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802aee2:	2b00      	cmp	r3, #0
 802aee4:	d07f      	beq.n	802afe6 <__kernel_rem_pio2f+0x2ea>
 802aee6:	4628      	mov	r0, r5
 802aee8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802aeec:	f7ff fea0 	bl	802ac30 <scalbnf>
 802aef0:	1c63      	adds	r3, r4, #1
 802aef2:	aa44      	add	r2, sp, #272	; 0x110
 802aef4:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802aff8 <__kernel_rem_pio2f+0x2fc>
 802aef8:	0099      	lsls	r1, r3, #2
 802aefa:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802aefe:	4623      	mov	r3, r4
 802af00:	2b00      	cmp	r3, #0
 802af02:	f280 80ad 	bge.w	802b060 <__kernel_rem_pio2f+0x364>
 802af06:	4623      	mov	r3, r4
 802af08:	2b00      	cmp	r3, #0
 802af0a:	f2c0 80cb 	blt.w	802b0a4 <__kernel_rem_pio2f+0x3a8>
 802af0e:	aa44      	add	r2, sp, #272	; 0x110
 802af10:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802af14:	4e36      	ldr	r6, [pc, #216]	; (802aff0 <__kernel_rem_pio2f+0x2f4>)
 802af16:	eddf 7a39 	vldr	s15, [pc, #228]	; 802affc <__kernel_rem_pio2f+0x300>
 802af1a:	2000      	movs	r0, #0
 802af1c:	1ae2      	subs	r2, r4, r3
 802af1e:	e0b6      	b.n	802b08e <__kernel_rem_pio2f+0x392>
 802af20:	2702      	movs	r7, #2
 802af22:	e790      	b.n	802ae46 <__kernel_rem_pio2f+0x14a>
 802af24:	6820      	ldr	r0, [r4, #0]
 802af26:	b949      	cbnz	r1, 802af3c <__kernel_rem_pio2f+0x240>
 802af28:	b118      	cbz	r0, 802af32 <__kernel_rem_pio2f+0x236>
 802af2a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802af2e:	6020      	str	r0, [r4, #0]
 802af30:	2001      	movs	r0, #1
 802af32:	f10e 0e01 	add.w	lr, lr, #1
 802af36:	3404      	adds	r4, #4
 802af38:	4601      	mov	r1, r0
 802af3a:	e789      	b.n	802ae50 <__kernel_rem_pio2f+0x154>
 802af3c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802af40:	6020      	str	r0, [r4, #0]
 802af42:	4608      	mov	r0, r1
 802af44:	e7f5      	b.n	802af32 <__kernel_rem_pio2f+0x236>
 802af46:	1e74      	subs	r4, r6, #1
 802af48:	ab08      	add	r3, sp, #32
 802af4a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802af4e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802af52:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802af56:	e783      	b.n	802ae60 <__kernel_rem_pio2f+0x164>
 802af58:	1e74      	subs	r4, r6, #1
 802af5a:	ab08      	add	r3, sp, #32
 802af5c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802af60:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802af64:	e7f5      	b.n	802af52 <__kernel_rem_pio2f+0x256>
 802af66:	ab08      	add	r3, sp, #32
 802af68:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802af6c:	f10c 3cff 	add.w	ip, ip, #4294967295
 802af70:	4301      	orrs	r1, r0
 802af72:	e7ae      	b.n	802aed2 <__kernel_rem_pio2f+0x1d6>
 802af74:	3001      	adds	r0, #1
 802af76:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802af7a:	2f00      	cmp	r7, #0
 802af7c:	d0fa      	beq.n	802af74 <__kernel_rem_pio2f+0x278>
 802af7e:	9b06      	ldr	r3, [sp, #24]
 802af80:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802af84:	eb0d 0403 	add.w	r4, sp, r3
 802af88:	9b01      	ldr	r3, [sp, #4]
 802af8a:	18f7      	adds	r7, r6, r3
 802af8c:	ab1c      	add	r3, sp, #112	; 0x70
 802af8e:	f106 0c01 	add.w	ip, r6, #1
 802af92:	3c4c      	subs	r4, #76	; 0x4c
 802af94:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802af98:	4430      	add	r0, r6
 802af9a:	4560      	cmp	r0, ip
 802af9c:	da04      	bge.n	802afa8 <__kernel_rem_pio2f+0x2ac>
 802af9e:	4606      	mov	r6, r0
 802afa0:	e711      	b.n	802adc6 <__kernel_rem_pio2f+0xca>
 802afa2:	9c05      	ldr	r4, [sp, #20]
 802afa4:	2001      	movs	r0, #1
 802afa6:	e7e6      	b.n	802af76 <__kernel_rem_pio2f+0x27a>
 802afa8:	9b04      	ldr	r3, [sp, #16]
 802afaa:	f8dd e008 	ldr.w	lr, [sp, #8]
 802afae:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802afb2:	9306      	str	r3, [sp, #24]
 802afb4:	ee07 3a90 	vmov	s15, r3
 802afb8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802afbc:	2600      	movs	r6, #0
 802afbe:	ece7 7a01 	vstmia	r7!, {s15}
 802afc2:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802affc <__kernel_rem_pio2f+0x300>
 802afc6:	46b9      	mov	r9, r7
 802afc8:	455e      	cmp	r6, fp
 802afca:	dd04      	ble.n	802afd6 <__kernel_rem_pio2f+0x2da>
 802afcc:	ece4 7a01 	vstmia	r4!, {s15}
 802afd0:	f10c 0c01 	add.w	ip, ip, #1
 802afd4:	e7e1      	b.n	802af9a <__kernel_rem_pio2f+0x29e>
 802afd6:	ecfe 6a01 	vldmia	lr!, {s13}
 802afda:	ed39 7a01 	vldmdb	r9!, {s14}
 802afde:	3601      	adds	r6, #1
 802afe0:	eee6 7a87 	vfma.f32	s15, s13, s14
 802afe4:	e7f0      	b.n	802afc8 <__kernel_rem_pio2f+0x2cc>
 802afe6:	3c01      	subs	r4, #1
 802afe8:	e777      	b.n	802aeda <__kernel_rem_pio2f+0x1de>
 802afea:	bf00      	nop
 802afec:	0803003c 	.word	0x0803003c
 802aff0:	08030010 	.word	0x08030010
 802aff4:	43800000 	.word	0x43800000
 802aff8:	3b800000 	.word	0x3b800000
 802affc:	00000000 	.word	0x00000000
 802b000:	9b03      	ldr	r3, [sp, #12]
 802b002:	eeb0 0a48 	vmov.f32	s0, s16
 802b006:	1a98      	subs	r0, r3, r2
 802b008:	f7ff fe12 	bl	802ac30 <scalbnf>
 802b00c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802aff4 <__kernel_rem_pio2f+0x2f8>
 802b010:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802b014:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b018:	db19      	blt.n	802b04e <__kernel_rem_pio2f+0x352>
 802b01a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802aff8 <__kernel_rem_pio2f+0x2fc>
 802b01e:	ee60 7a27 	vmul.f32	s15, s0, s15
 802b022:	aa08      	add	r2, sp, #32
 802b024:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b028:	1c74      	adds	r4, r6, #1
 802b02a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b02e:	3508      	adds	r5, #8
 802b030:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802b034:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b038:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b03c:	ee10 3a10 	vmov	r3, s0
 802b040:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b044:	ee17 3a90 	vmov	r3, s15
 802b048:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802b04c:	e74b      	b.n	802aee6 <__kernel_rem_pio2f+0x1ea>
 802b04e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b052:	aa08      	add	r2, sp, #32
 802b054:	ee10 3a10 	vmov	r3, s0
 802b058:	4634      	mov	r4, r6
 802b05a:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b05e:	e742      	b.n	802aee6 <__kernel_rem_pio2f+0x1ea>
 802b060:	a808      	add	r0, sp, #32
 802b062:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802b066:	9001      	str	r0, [sp, #4]
 802b068:	ee07 0a90 	vmov	s15, r0
 802b06c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b070:	3b01      	subs	r3, #1
 802b072:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b076:	ee20 0a07 	vmul.f32	s0, s0, s14
 802b07a:	ed62 7a01 	vstmdb	r2!, {s15}
 802b07e:	e73f      	b.n	802af00 <__kernel_rem_pio2f+0x204>
 802b080:	ecf6 6a01 	vldmia	r6!, {s13}
 802b084:	ecb5 7a01 	vldmia	r5!, {s14}
 802b088:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b08c:	3001      	adds	r0, #1
 802b08e:	4550      	cmp	r0, sl
 802b090:	dc01      	bgt.n	802b096 <__kernel_rem_pio2f+0x39a>
 802b092:	4290      	cmp	r0, r2
 802b094:	ddf4      	ble.n	802b080 <__kernel_rem_pio2f+0x384>
 802b096:	a858      	add	r0, sp, #352	; 0x160
 802b098:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802b09c:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802b0a0:	3b01      	subs	r3, #1
 802b0a2:	e731      	b.n	802af08 <__kernel_rem_pio2f+0x20c>
 802b0a4:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b0a6:	2b02      	cmp	r3, #2
 802b0a8:	dc09      	bgt.n	802b0be <__kernel_rem_pio2f+0x3c2>
 802b0aa:	2b00      	cmp	r3, #0
 802b0ac:	dc2b      	bgt.n	802b106 <__kernel_rem_pio2f+0x40a>
 802b0ae:	d044      	beq.n	802b13a <__kernel_rem_pio2f+0x43e>
 802b0b0:	f009 0007 	and.w	r0, r9, #7
 802b0b4:	b059      	add	sp, #356	; 0x164
 802b0b6:	ecbd 8b04 	vpop	{d8-d9}
 802b0ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b0be:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b0c0:	2b03      	cmp	r3, #3
 802b0c2:	d1f5      	bne.n	802b0b0 <__kernel_rem_pio2f+0x3b4>
 802b0c4:	aa30      	add	r2, sp, #192	; 0xc0
 802b0c6:	1f0b      	subs	r3, r1, #4
 802b0c8:	4413      	add	r3, r2
 802b0ca:	461a      	mov	r2, r3
 802b0cc:	4620      	mov	r0, r4
 802b0ce:	2800      	cmp	r0, #0
 802b0d0:	f1a2 0204 	sub.w	r2, r2, #4
 802b0d4:	dc52      	bgt.n	802b17c <__kernel_rem_pio2f+0x480>
 802b0d6:	4622      	mov	r2, r4
 802b0d8:	2a01      	cmp	r2, #1
 802b0da:	f1a3 0304 	sub.w	r3, r3, #4
 802b0de:	dc5d      	bgt.n	802b19c <__kernel_rem_pio2f+0x4a0>
 802b0e0:	ab30      	add	r3, sp, #192	; 0xc0
 802b0e2:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802affc <__kernel_rem_pio2f+0x300>
 802b0e6:	440b      	add	r3, r1
 802b0e8:	2c01      	cmp	r4, #1
 802b0ea:	dc67      	bgt.n	802b1bc <__kernel_rem_pio2f+0x4c0>
 802b0ec:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802b0f0:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802b0f4:	2f00      	cmp	r7, #0
 802b0f6:	d167      	bne.n	802b1c8 <__kernel_rem_pio2f+0x4cc>
 802b0f8:	edc8 6a00 	vstr	s13, [r8]
 802b0fc:	ed88 7a01 	vstr	s14, [r8, #4]
 802b100:	edc8 7a02 	vstr	s15, [r8, #8]
 802b104:	e7d4      	b.n	802b0b0 <__kernel_rem_pio2f+0x3b4>
 802b106:	ab30      	add	r3, sp, #192	; 0xc0
 802b108:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802affc <__kernel_rem_pio2f+0x300>
 802b10c:	440b      	add	r3, r1
 802b10e:	4622      	mov	r2, r4
 802b110:	2a00      	cmp	r2, #0
 802b112:	da24      	bge.n	802b15e <__kernel_rem_pio2f+0x462>
 802b114:	b34f      	cbz	r7, 802b16a <__kernel_rem_pio2f+0x46e>
 802b116:	eef1 7a47 	vneg.f32	s15, s14
 802b11a:	edc8 7a00 	vstr	s15, [r8]
 802b11e:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802b122:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b126:	aa31      	add	r2, sp, #196	; 0xc4
 802b128:	2301      	movs	r3, #1
 802b12a:	429c      	cmp	r4, r3
 802b12c:	da20      	bge.n	802b170 <__kernel_rem_pio2f+0x474>
 802b12e:	b10f      	cbz	r7, 802b134 <__kernel_rem_pio2f+0x438>
 802b130:	eef1 7a67 	vneg.f32	s15, s15
 802b134:	edc8 7a01 	vstr	s15, [r8, #4]
 802b138:	e7ba      	b.n	802b0b0 <__kernel_rem_pio2f+0x3b4>
 802b13a:	ab30      	add	r3, sp, #192	; 0xc0
 802b13c:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802affc <__kernel_rem_pio2f+0x300>
 802b140:	440b      	add	r3, r1
 802b142:	2c00      	cmp	r4, #0
 802b144:	da05      	bge.n	802b152 <__kernel_rem_pio2f+0x456>
 802b146:	b10f      	cbz	r7, 802b14c <__kernel_rem_pio2f+0x450>
 802b148:	eef1 7a67 	vneg.f32	s15, s15
 802b14c:	edc8 7a00 	vstr	s15, [r8]
 802b150:	e7ae      	b.n	802b0b0 <__kernel_rem_pio2f+0x3b4>
 802b152:	ed33 7a01 	vldmdb	r3!, {s14}
 802b156:	3c01      	subs	r4, #1
 802b158:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b15c:	e7f1      	b.n	802b142 <__kernel_rem_pio2f+0x446>
 802b15e:	ed73 7a01 	vldmdb	r3!, {s15}
 802b162:	3a01      	subs	r2, #1
 802b164:	ee37 7a27 	vadd.f32	s14, s14, s15
 802b168:	e7d2      	b.n	802b110 <__kernel_rem_pio2f+0x414>
 802b16a:	eef0 7a47 	vmov.f32	s15, s14
 802b16e:	e7d4      	b.n	802b11a <__kernel_rem_pio2f+0x41e>
 802b170:	ecb2 7a01 	vldmia	r2!, {s14}
 802b174:	3301      	adds	r3, #1
 802b176:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b17a:	e7d6      	b.n	802b12a <__kernel_rem_pio2f+0x42e>
 802b17c:	edd2 7a00 	vldr	s15, [r2]
 802b180:	edd2 6a01 	vldr	s13, [r2, #4]
 802b184:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b188:	3801      	subs	r0, #1
 802b18a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b18e:	ed82 7a00 	vstr	s14, [r2]
 802b192:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b196:	edc2 7a01 	vstr	s15, [r2, #4]
 802b19a:	e798      	b.n	802b0ce <__kernel_rem_pio2f+0x3d2>
 802b19c:	edd3 7a00 	vldr	s15, [r3]
 802b1a0:	edd3 6a01 	vldr	s13, [r3, #4]
 802b1a4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b1a8:	3a01      	subs	r2, #1
 802b1aa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b1ae:	ed83 7a00 	vstr	s14, [r3]
 802b1b2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b1b6:	edc3 7a01 	vstr	s15, [r3, #4]
 802b1ba:	e78d      	b.n	802b0d8 <__kernel_rem_pio2f+0x3dc>
 802b1bc:	ed33 7a01 	vldmdb	r3!, {s14}
 802b1c0:	3c01      	subs	r4, #1
 802b1c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b1c6:	e78f      	b.n	802b0e8 <__kernel_rem_pio2f+0x3ec>
 802b1c8:	eef1 6a66 	vneg.f32	s13, s13
 802b1cc:	eeb1 7a47 	vneg.f32	s14, s14
 802b1d0:	edc8 6a00 	vstr	s13, [r8]
 802b1d4:	ed88 7a01 	vstr	s14, [r8, #4]
 802b1d8:	eef1 7a67 	vneg.f32	s15, s15
 802b1dc:	e790      	b.n	802b100 <__kernel_rem_pio2f+0x404>
 802b1de:	bf00      	nop

0802b1e0 <abort>:
 802b1e0:	b508      	push	{r3, lr}
 802b1e2:	2006      	movs	r0, #6
 802b1e4:	f000 fa3a 	bl	802b65c <raise>
 802b1e8:	2001      	movs	r0, #1
 802b1ea:	f7d7 fdb3 	bl	8002d54 <_exit>
	...

0802b1f0 <__assert_func>:
 802b1f0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802b1f2:	4614      	mov	r4, r2
 802b1f4:	461a      	mov	r2, r3
 802b1f6:	4b09      	ldr	r3, [pc, #36]	; (802b21c <__assert_func+0x2c>)
 802b1f8:	681b      	ldr	r3, [r3, #0]
 802b1fa:	4605      	mov	r5, r0
 802b1fc:	68d8      	ldr	r0, [r3, #12]
 802b1fe:	b14c      	cbz	r4, 802b214 <__assert_func+0x24>
 802b200:	4b07      	ldr	r3, [pc, #28]	; (802b220 <__assert_func+0x30>)
 802b202:	9100      	str	r1, [sp, #0]
 802b204:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802b208:	4906      	ldr	r1, [pc, #24]	; (802b224 <__assert_func+0x34>)
 802b20a:	462b      	mov	r3, r5
 802b20c:	f000 f982 	bl	802b514 <fiprintf>
 802b210:	f7ff ffe6 	bl	802b1e0 <abort>
 802b214:	4b04      	ldr	r3, [pc, #16]	; (802b228 <__assert_func+0x38>)
 802b216:	461c      	mov	r4, r3
 802b218:	e7f3      	b.n	802b202 <__assert_func+0x12>
 802b21a:	bf00      	nop
 802b21c:	200000f4 	.word	0x200000f4
 802b220:	08030048 	.word	0x08030048
 802b224:	08030055 	.word	0x08030055
 802b228:	08030083 	.word	0x08030083

0802b22c <atexit>:
 802b22c:	2300      	movs	r3, #0
 802b22e:	4601      	mov	r1, r0
 802b230:	461a      	mov	r2, r3
 802b232:	4618      	mov	r0, r3
 802b234:	f000 bac0 	b.w	802b7b8 <__register_exitproc>

0802b238 <malloc>:
 802b238:	4b02      	ldr	r3, [pc, #8]	; (802b244 <malloc+0xc>)
 802b23a:	4601      	mov	r1, r0
 802b23c:	6818      	ldr	r0, [r3, #0]
 802b23e:	f000 b82b 	b.w	802b298 <_malloc_r>
 802b242:	bf00      	nop
 802b244:	200000f4 	.word	0x200000f4

0802b248 <free>:
 802b248:	4b02      	ldr	r3, [pc, #8]	; (802b254 <free+0xc>)
 802b24a:	4601      	mov	r1, r0
 802b24c:	6818      	ldr	r0, [r3, #0]
 802b24e:	f000 bb11 	b.w	802b874 <_free_r>
 802b252:	bf00      	nop
 802b254:	200000f4 	.word	0x200000f4

0802b258 <sbrk_aligned>:
 802b258:	b570      	push	{r4, r5, r6, lr}
 802b25a:	4e0e      	ldr	r6, [pc, #56]	; (802b294 <sbrk_aligned+0x3c>)
 802b25c:	460c      	mov	r4, r1
 802b25e:	6831      	ldr	r1, [r6, #0]
 802b260:	4605      	mov	r5, r0
 802b262:	b911      	cbnz	r1, 802b26a <sbrk_aligned+0x12>
 802b264:	f000 fa4a 	bl	802b6fc <_sbrk_r>
 802b268:	6030      	str	r0, [r6, #0]
 802b26a:	4621      	mov	r1, r4
 802b26c:	4628      	mov	r0, r5
 802b26e:	f000 fa45 	bl	802b6fc <_sbrk_r>
 802b272:	1c43      	adds	r3, r0, #1
 802b274:	d00a      	beq.n	802b28c <sbrk_aligned+0x34>
 802b276:	1cc4      	adds	r4, r0, #3
 802b278:	f024 0403 	bic.w	r4, r4, #3
 802b27c:	42a0      	cmp	r0, r4
 802b27e:	d007      	beq.n	802b290 <sbrk_aligned+0x38>
 802b280:	1a21      	subs	r1, r4, r0
 802b282:	4628      	mov	r0, r5
 802b284:	f000 fa3a 	bl	802b6fc <_sbrk_r>
 802b288:	3001      	adds	r0, #1
 802b28a:	d101      	bne.n	802b290 <sbrk_aligned+0x38>
 802b28c:	f04f 34ff 	mov.w	r4, #4294967295
 802b290:	4620      	mov	r0, r4
 802b292:	bd70      	pop	{r4, r5, r6, pc}
 802b294:	20002c80 	.word	0x20002c80

0802b298 <_malloc_r>:
 802b298:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b29c:	1ccd      	adds	r5, r1, #3
 802b29e:	f025 0503 	bic.w	r5, r5, #3
 802b2a2:	3508      	adds	r5, #8
 802b2a4:	2d0c      	cmp	r5, #12
 802b2a6:	bf38      	it	cc
 802b2a8:	250c      	movcc	r5, #12
 802b2aa:	2d00      	cmp	r5, #0
 802b2ac:	4607      	mov	r7, r0
 802b2ae:	db01      	blt.n	802b2b4 <_malloc_r+0x1c>
 802b2b0:	42a9      	cmp	r1, r5
 802b2b2:	d905      	bls.n	802b2c0 <_malloc_r+0x28>
 802b2b4:	230c      	movs	r3, #12
 802b2b6:	603b      	str	r3, [r7, #0]
 802b2b8:	2600      	movs	r6, #0
 802b2ba:	4630      	mov	r0, r6
 802b2bc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b2c0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802b394 <_malloc_r+0xfc>
 802b2c4:	f000 f868 	bl	802b398 <__malloc_lock>
 802b2c8:	f8d8 3000 	ldr.w	r3, [r8]
 802b2cc:	461c      	mov	r4, r3
 802b2ce:	bb5c      	cbnz	r4, 802b328 <_malloc_r+0x90>
 802b2d0:	4629      	mov	r1, r5
 802b2d2:	4638      	mov	r0, r7
 802b2d4:	f7ff ffc0 	bl	802b258 <sbrk_aligned>
 802b2d8:	1c43      	adds	r3, r0, #1
 802b2da:	4604      	mov	r4, r0
 802b2dc:	d155      	bne.n	802b38a <_malloc_r+0xf2>
 802b2de:	f8d8 4000 	ldr.w	r4, [r8]
 802b2e2:	4626      	mov	r6, r4
 802b2e4:	2e00      	cmp	r6, #0
 802b2e6:	d145      	bne.n	802b374 <_malloc_r+0xdc>
 802b2e8:	2c00      	cmp	r4, #0
 802b2ea:	d048      	beq.n	802b37e <_malloc_r+0xe6>
 802b2ec:	6823      	ldr	r3, [r4, #0]
 802b2ee:	4631      	mov	r1, r6
 802b2f0:	4638      	mov	r0, r7
 802b2f2:	eb04 0903 	add.w	r9, r4, r3
 802b2f6:	f000 fa01 	bl	802b6fc <_sbrk_r>
 802b2fa:	4581      	cmp	r9, r0
 802b2fc:	d13f      	bne.n	802b37e <_malloc_r+0xe6>
 802b2fe:	6821      	ldr	r1, [r4, #0]
 802b300:	1a6d      	subs	r5, r5, r1
 802b302:	4629      	mov	r1, r5
 802b304:	4638      	mov	r0, r7
 802b306:	f7ff ffa7 	bl	802b258 <sbrk_aligned>
 802b30a:	3001      	adds	r0, #1
 802b30c:	d037      	beq.n	802b37e <_malloc_r+0xe6>
 802b30e:	6823      	ldr	r3, [r4, #0]
 802b310:	442b      	add	r3, r5
 802b312:	6023      	str	r3, [r4, #0]
 802b314:	f8d8 3000 	ldr.w	r3, [r8]
 802b318:	2b00      	cmp	r3, #0
 802b31a:	d038      	beq.n	802b38e <_malloc_r+0xf6>
 802b31c:	685a      	ldr	r2, [r3, #4]
 802b31e:	42a2      	cmp	r2, r4
 802b320:	d12b      	bne.n	802b37a <_malloc_r+0xe2>
 802b322:	2200      	movs	r2, #0
 802b324:	605a      	str	r2, [r3, #4]
 802b326:	e00f      	b.n	802b348 <_malloc_r+0xb0>
 802b328:	6822      	ldr	r2, [r4, #0]
 802b32a:	1b52      	subs	r2, r2, r5
 802b32c:	d41f      	bmi.n	802b36e <_malloc_r+0xd6>
 802b32e:	2a0b      	cmp	r2, #11
 802b330:	d917      	bls.n	802b362 <_malloc_r+0xca>
 802b332:	1961      	adds	r1, r4, r5
 802b334:	42a3      	cmp	r3, r4
 802b336:	6025      	str	r5, [r4, #0]
 802b338:	bf18      	it	ne
 802b33a:	6059      	strne	r1, [r3, #4]
 802b33c:	6863      	ldr	r3, [r4, #4]
 802b33e:	bf08      	it	eq
 802b340:	f8c8 1000 	streq.w	r1, [r8]
 802b344:	5162      	str	r2, [r4, r5]
 802b346:	604b      	str	r3, [r1, #4]
 802b348:	4638      	mov	r0, r7
 802b34a:	f104 060b 	add.w	r6, r4, #11
 802b34e:	f000 f829 	bl	802b3a4 <__malloc_unlock>
 802b352:	f026 0607 	bic.w	r6, r6, #7
 802b356:	1d23      	adds	r3, r4, #4
 802b358:	1af2      	subs	r2, r6, r3
 802b35a:	d0ae      	beq.n	802b2ba <_malloc_r+0x22>
 802b35c:	1b9b      	subs	r3, r3, r6
 802b35e:	50a3      	str	r3, [r4, r2]
 802b360:	e7ab      	b.n	802b2ba <_malloc_r+0x22>
 802b362:	42a3      	cmp	r3, r4
 802b364:	6862      	ldr	r2, [r4, #4]
 802b366:	d1dd      	bne.n	802b324 <_malloc_r+0x8c>
 802b368:	f8c8 2000 	str.w	r2, [r8]
 802b36c:	e7ec      	b.n	802b348 <_malloc_r+0xb0>
 802b36e:	4623      	mov	r3, r4
 802b370:	6864      	ldr	r4, [r4, #4]
 802b372:	e7ac      	b.n	802b2ce <_malloc_r+0x36>
 802b374:	4634      	mov	r4, r6
 802b376:	6876      	ldr	r6, [r6, #4]
 802b378:	e7b4      	b.n	802b2e4 <_malloc_r+0x4c>
 802b37a:	4613      	mov	r3, r2
 802b37c:	e7cc      	b.n	802b318 <_malloc_r+0x80>
 802b37e:	230c      	movs	r3, #12
 802b380:	603b      	str	r3, [r7, #0]
 802b382:	4638      	mov	r0, r7
 802b384:	f000 f80e 	bl	802b3a4 <__malloc_unlock>
 802b388:	e797      	b.n	802b2ba <_malloc_r+0x22>
 802b38a:	6025      	str	r5, [r4, #0]
 802b38c:	e7dc      	b.n	802b348 <_malloc_r+0xb0>
 802b38e:	605b      	str	r3, [r3, #4]
 802b390:	deff      	udf	#255	; 0xff
 802b392:	bf00      	nop
 802b394:	20002c7c 	.word	0x20002c7c

0802b398 <__malloc_lock>:
 802b398:	4801      	ldr	r0, [pc, #4]	; (802b3a0 <__malloc_lock+0x8>)
 802b39a:	f000 b9fc 	b.w	802b796 <__retarget_lock_acquire_recursive>
 802b39e:	bf00      	nop
 802b3a0:	20002dc5 	.word	0x20002dc5

0802b3a4 <__malloc_unlock>:
 802b3a4:	4801      	ldr	r0, [pc, #4]	; (802b3ac <__malloc_unlock+0x8>)
 802b3a6:	f000 b9f7 	b.w	802b798 <__retarget_lock_release_recursive>
 802b3aa:	bf00      	nop
 802b3ac:	20002dc5 	.word	0x20002dc5

0802b3b0 <__cxa_atexit>:
 802b3b0:	b510      	push	{r4, lr}
 802b3b2:	4c05      	ldr	r4, [pc, #20]	; (802b3c8 <__cxa_atexit+0x18>)
 802b3b4:	4613      	mov	r3, r2
 802b3b6:	b12c      	cbz	r4, 802b3c4 <__cxa_atexit+0x14>
 802b3b8:	460a      	mov	r2, r1
 802b3ba:	4601      	mov	r1, r0
 802b3bc:	2002      	movs	r0, #2
 802b3be:	f000 f9fb 	bl	802b7b8 <__register_exitproc>
 802b3c2:	bd10      	pop	{r4, pc}
 802b3c4:	4620      	mov	r0, r4
 802b3c6:	e7fc      	b.n	802b3c2 <__cxa_atexit+0x12>
 802b3c8:	0802b7b9 	.word	0x0802b7b9

0802b3cc <std>:
 802b3cc:	2300      	movs	r3, #0
 802b3ce:	b510      	push	{r4, lr}
 802b3d0:	4604      	mov	r4, r0
 802b3d2:	e9c0 3300 	strd	r3, r3, [r0]
 802b3d6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802b3da:	6083      	str	r3, [r0, #8]
 802b3dc:	8181      	strh	r1, [r0, #12]
 802b3de:	6643      	str	r3, [r0, #100]	; 0x64
 802b3e0:	81c2      	strh	r2, [r0, #14]
 802b3e2:	6183      	str	r3, [r0, #24]
 802b3e4:	4619      	mov	r1, r3
 802b3e6:	2208      	movs	r2, #8
 802b3e8:	305c      	adds	r0, #92	; 0x5c
 802b3ea:	f000 f906 	bl	802b5fa <memset>
 802b3ee:	4b0d      	ldr	r3, [pc, #52]	; (802b424 <std+0x58>)
 802b3f0:	6263      	str	r3, [r4, #36]	; 0x24
 802b3f2:	4b0d      	ldr	r3, [pc, #52]	; (802b428 <std+0x5c>)
 802b3f4:	62a3      	str	r3, [r4, #40]	; 0x28
 802b3f6:	4b0d      	ldr	r3, [pc, #52]	; (802b42c <std+0x60>)
 802b3f8:	62e3      	str	r3, [r4, #44]	; 0x2c
 802b3fa:	4b0d      	ldr	r3, [pc, #52]	; (802b430 <std+0x64>)
 802b3fc:	6323      	str	r3, [r4, #48]	; 0x30
 802b3fe:	4b0d      	ldr	r3, [pc, #52]	; (802b434 <std+0x68>)
 802b400:	6224      	str	r4, [r4, #32]
 802b402:	429c      	cmp	r4, r3
 802b404:	d006      	beq.n	802b414 <std+0x48>
 802b406:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802b40a:	4294      	cmp	r4, r2
 802b40c:	d002      	beq.n	802b414 <std+0x48>
 802b40e:	33d0      	adds	r3, #208	; 0xd0
 802b410:	429c      	cmp	r4, r3
 802b412:	d105      	bne.n	802b420 <std+0x54>
 802b414:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802b418:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b41c:	f000 b9ba 	b.w	802b794 <__retarget_lock_init_recursive>
 802b420:	bd10      	pop	{r4, pc}
 802b422:	bf00      	nop
 802b424:	0802b575 	.word	0x0802b575
 802b428:	0802b597 	.word	0x0802b597
 802b42c:	0802b5cf 	.word	0x0802b5cf
 802b430:	0802b5f3 	.word	0x0802b5f3
 802b434:	20002c84 	.word	0x20002c84

0802b438 <stdio_exit_handler>:
 802b438:	4a02      	ldr	r2, [pc, #8]	; (802b444 <stdio_exit_handler+0xc>)
 802b43a:	4903      	ldr	r1, [pc, #12]	; (802b448 <stdio_exit_handler+0x10>)
 802b43c:	4803      	ldr	r0, [pc, #12]	; (802b44c <stdio_exit_handler+0x14>)
 802b43e:	f000 b87b 	b.w	802b538 <_fwalk_sglue>
 802b442:	bf00      	nop
 802b444:	2000009c 	.word	0x2000009c
 802b448:	0802bfc1 	.word	0x0802bfc1
 802b44c:	200000a8 	.word	0x200000a8

0802b450 <cleanup_stdio>:
 802b450:	6841      	ldr	r1, [r0, #4]
 802b452:	4b0c      	ldr	r3, [pc, #48]	; (802b484 <cleanup_stdio+0x34>)
 802b454:	4299      	cmp	r1, r3
 802b456:	b510      	push	{r4, lr}
 802b458:	4604      	mov	r4, r0
 802b45a:	d001      	beq.n	802b460 <cleanup_stdio+0x10>
 802b45c:	f000 fdb0 	bl	802bfc0 <_fflush_r>
 802b460:	68a1      	ldr	r1, [r4, #8]
 802b462:	4b09      	ldr	r3, [pc, #36]	; (802b488 <cleanup_stdio+0x38>)
 802b464:	4299      	cmp	r1, r3
 802b466:	d002      	beq.n	802b46e <cleanup_stdio+0x1e>
 802b468:	4620      	mov	r0, r4
 802b46a:	f000 fda9 	bl	802bfc0 <_fflush_r>
 802b46e:	68e1      	ldr	r1, [r4, #12]
 802b470:	4b06      	ldr	r3, [pc, #24]	; (802b48c <cleanup_stdio+0x3c>)
 802b472:	4299      	cmp	r1, r3
 802b474:	d004      	beq.n	802b480 <cleanup_stdio+0x30>
 802b476:	4620      	mov	r0, r4
 802b478:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b47c:	f000 bda0 	b.w	802bfc0 <_fflush_r>
 802b480:	bd10      	pop	{r4, pc}
 802b482:	bf00      	nop
 802b484:	20002c84 	.word	0x20002c84
 802b488:	20002cec 	.word	0x20002cec
 802b48c:	20002d54 	.word	0x20002d54

0802b490 <global_stdio_init.part.0>:
 802b490:	b510      	push	{r4, lr}
 802b492:	4b0b      	ldr	r3, [pc, #44]	; (802b4c0 <global_stdio_init.part.0+0x30>)
 802b494:	4c0b      	ldr	r4, [pc, #44]	; (802b4c4 <global_stdio_init.part.0+0x34>)
 802b496:	4a0c      	ldr	r2, [pc, #48]	; (802b4c8 <global_stdio_init.part.0+0x38>)
 802b498:	601a      	str	r2, [r3, #0]
 802b49a:	4620      	mov	r0, r4
 802b49c:	2200      	movs	r2, #0
 802b49e:	2104      	movs	r1, #4
 802b4a0:	f7ff ff94 	bl	802b3cc <std>
 802b4a4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802b4a8:	2201      	movs	r2, #1
 802b4aa:	2109      	movs	r1, #9
 802b4ac:	f7ff ff8e 	bl	802b3cc <std>
 802b4b0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802b4b4:	2202      	movs	r2, #2
 802b4b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b4ba:	2112      	movs	r1, #18
 802b4bc:	f7ff bf86 	b.w	802b3cc <std>
 802b4c0:	20002dbc 	.word	0x20002dbc
 802b4c4:	20002c84 	.word	0x20002c84
 802b4c8:	0802b439 	.word	0x0802b439

0802b4cc <__sfp_lock_acquire>:
 802b4cc:	4801      	ldr	r0, [pc, #4]	; (802b4d4 <__sfp_lock_acquire+0x8>)
 802b4ce:	f000 b962 	b.w	802b796 <__retarget_lock_acquire_recursive>
 802b4d2:	bf00      	nop
 802b4d4:	20002dc6 	.word	0x20002dc6

0802b4d8 <__sfp_lock_release>:
 802b4d8:	4801      	ldr	r0, [pc, #4]	; (802b4e0 <__sfp_lock_release+0x8>)
 802b4da:	f000 b95d 	b.w	802b798 <__retarget_lock_release_recursive>
 802b4de:	bf00      	nop
 802b4e0:	20002dc6 	.word	0x20002dc6

0802b4e4 <__sinit>:
 802b4e4:	b510      	push	{r4, lr}
 802b4e6:	4604      	mov	r4, r0
 802b4e8:	f7ff fff0 	bl	802b4cc <__sfp_lock_acquire>
 802b4ec:	6a23      	ldr	r3, [r4, #32]
 802b4ee:	b11b      	cbz	r3, 802b4f8 <__sinit+0x14>
 802b4f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b4f4:	f7ff bff0 	b.w	802b4d8 <__sfp_lock_release>
 802b4f8:	4b04      	ldr	r3, [pc, #16]	; (802b50c <__sinit+0x28>)
 802b4fa:	6223      	str	r3, [r4, #32]
 802b4fc:	4b04      	ldr	r3, [pc, #16]	; (802b510 <__sinit+0x2c>)
 802b4fe:	681b      	ldr	r3, [r3, #0]
 802b500:	2b00      	cmp	r3, #0
 802b502:	d1f5      	bne.n	802b4f0 <__sinit+0xc>
 802b504:	f7ff ffc4 	bl	802b490 <global_stdio_init.part.0>
 802b508:	e7f2      	b.n	802b4f0 <__sinit+0xc>
 802b50a:	bf00      	nop
 802b50c:	0802b451 	.word	0x0802b451
 802b510:	20002dbc 	.word	0x20002dbc

0802b514 <fiprintf>:
 802b514:	b40e      	push	{r1, r2, r3}
 802b516:	b503      	push	{r0, r1, lr}
 802b518:	4601      	mov	r1, r0
 802b51a:	ab03      	add	r3, sp, #12
 802b51c:	4805      	ldr	r0, [pc, #20]	; (802b534 <fiprintf+0x20>)
 802b51e:	f853 2b04 	ldr.w	r2, [r3], #4
 802b522:	6800      	ldr	r0, [r0, #0]
 802b524:	9301      	str	r3, [sp, #4]
 802b526:	f000 fa1b 	bl	802b960 <_vfiprintf_r>
 802b52a:	b002      	add	sp, #8
 802b52c:	f85d eb04 	ldr.w	lr, [sp], #4
 802b530:	b003      	add	sp, #12
 802b532:	4770      	bx	lr
 802b534:	200000f4 	.word	0x200000f4

0802b538 <_fwalk_sglue>:
 802b538:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b53c:	4607      	mov	r7, r0
 802b53e:	4688      	mov	r8, r1
 802b540:	4614      	mov	r4, r2
 802b542:	2600      	movs	r6, #0
 802b544:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802b548:	f1b9 0901 	subs.w	r9, r9, #1
 802b54c:	d505      	bpl.n	802b55a <_fwalk_sglue+0x22>
 802b54e:	6824      	ldr	r4, [r4, #0]
 802b550:	2c00      	cmp	r4, #0
 802b552:	d1f7      	bne.n	802b544 <_fwalk_sglue+0xc>
 802b554:	4630      	mov	r0, r6
 802b556:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b55a:	89ab      	ldrh	r3, [r5, #12]
 802b55c:	2b01      	cmp	r3, #1
 802b55e:	d907      	bls.n	802b570 <_fwalk_sglue+0x38>
 802b560:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802b564:	3301      	adds	r3, #1
 802b566:	d003      	beq.n	802b570 <_fwalk_sglue+0x38>
 802b568:	4629      	mov	r1, r5
 802b56a:	4638      	mov	r0, r7
 802b56c:	47c0      	blx	r8
 802b56e:	4306      	orrs	r6, r0
 802b570:	3568      	adds	r5, #104	; 0x68
 802b572:	e7e9      	b.n	802b548 <_fwalk_sglue+0x10>

0802b574 <__sread>:
 802b574:	b510      	push	{r4, lr}
 802b576:	460c      	mov	r4, r1
 802b578:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b57c:	f000 f898 	bl	802b6b0 <_read_r>
 802b580:	2800      	cmp	r0, #0
 802b582:	bfab      	itete	ge
 802b584:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802b586:	89a3      	ldrhlt	r3, [r4, #12]
 802b588:	181b      	addge	r3, r3, r0
 802b58a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802b58e:	bfac      	ite	ge
 802b590:	6563      	strge	r3, [r4, #84]	; 0x54
 802b592:	81a3      	strhlt	r3, [r4, #12]
 802b594:	bd10      	pop	{r4, pc}

0802b596 <__swrite>:
 802b596:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b59a:	461f      	mov	r7, r3
 802b59c:	898b      	ldrh	r3, [r1, #12]
 802b59e:	05db      	lsls	r3, r3, #23
 802b5a0:	4605      	mov	r5, r0
 802b5a2:	460c      	mov	r4, r1
 802b5a4:	4616      	mov	r6, r2
 802b5a6:	d505      	bpl.n	802b5b4 <__swrite+0x1e>
 802b5a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b5ac:	2302      	movs	r3, #2
 802b5ae:	2200      	movs	r2, #0
 802b5b0:	f000 f86c 	bl	802b68c <_lseek_r>
 802b5b4:	89a3      	ldrh	r3, [r4, #12]
 802b5b6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802b5ba:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802b5be:	81a3      	strh	r3, [r4, #12]
 802b5c0:	4632      	mov	r2, r6
 802b5c2:	463b      	mov	r3, r7
 802b5c4:	4628      	mov	r0, r5
 802b5c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802b5ca:	f000 b8a7 	b.w	802b71c <_write_r>

0802b5ce <__sseek>:
 802b5ce:	b510      	push	{r4, lr}
 802b5d0:	460c      	mov	r4, r1
 802b5d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b5d6:	f000 f859 	bl	802b68c <_lseek_r>
 802b5da:	1c43      	adds	r3, r0, #1
 802b5dc:	89a3      	ldrh	r3, [r4, #12]
 802b5de:	bf15      	itete	ne
 802b5e0:	6560      	strne	r0, [r4, #84]	; 0x54
 802b5e2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802b5e6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802b5ea:	81a3      	strheq	r3, [r4, #12]
 802b5ec:	bf18      	it	ne
 802b5ee:	81a3      	strhne	r3, [r4, #12]
 802b5f0:	bd10      	pop	{r4, pc}

0802b5f2 <__sclose>:
 802b5f2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b5f6:	f000 b839 	b.w	802b66c <_close_r>

0802b5fa <memset>:
 802b5fa:	4402      	add	r2, r0
 802b5fc:	4603      	mov	r3, r0
 802b5fe:	4293      	cmp	r3, r2
 802b600:	d100      	bne.n	802b604 <memset+0xa>
 802b602:	4770      	bx	lr
 802b604:	f803 1b01 	strb.w	r1, [r3], #1
 802b608:	e7f9      	b.n	802b5fe <memset+0x4>

0802b60a <_raise_r>:
 802b60a:	291f      	cmp	r1, #31
 802b60c:	b538      	push	{r3, r4, r5, lr}
 802b60e:	4604      	mov	r4, r0
 802b610:	460d      	mov	r5, r1
 802b612:	d904      	bls.n	802b61e <_raise_r+0x14>
 802b614:	2316      	movs	r3, #22
 802b616:	6003      	str	r3, [r0, #0]
 802b618:	f04f 30ff 	mov.w	r0, #4294967295
 802b61c:	bd38      	pop	{r3, r4, r5, pc}
 802b61e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802b620:	b112      	cbz	r2, 802b628 <_raise_r+0x1e>
 802b622:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802b626:	b94b      	cbnz	r3, 802b63c <_raise_r+0x32>
 802b628:	4620      	mov	r0, r4
 802b62a:	f000 f865 	bl	802b6f8 <_getpid_r>
 802b62e:	462a      	mov	r2, r5
 802b630:	4601      	mov	r1, r0
 802b632:	4620      	mov	r0, r4
 802b634:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802b638:	f000 b84c 	b.w	802b6d4 <_kill_r>
 802b63c:	2b01      	cmp	r3, #1
 802b63e:	d00a      	beq.n	802b656 <_raise_r+0x4c>
 802b640:	1c59      	adds	r1, r3, #1
 802b642:	d103      	bne.n	802b64c <_raise_r+0x42>
 802b644:	2316      	movs	r3, #22
 802b646:	6003      	str	r3, [r0, #0]
 802b648:	2001      	movs	r0, #1
 802b64a:	e7e7      	b.n	802b61c <_raise_r+0x12>
 802b64c:	2400      	movs	r4, #0
 802b64e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802b652:	4628      	mov	r0, r5
 802b654:	4798      	blx	r3
 802b656:	2000      	movs	r0, #0
 802b658:	e7e0      	b.n	802b61c <_raise_r+0x12>
	...

0802b65c <raise>:
 802b65c:	4b02      	ldr	r3, [pc, #8]	; (802b668 <raise+0xc>)
 802b65e:	4601      	mov	r1, r0
 802b660:	6818      	ldr	r0, [r3, #0]
 802b662:	f7ff bfd2 	b.w	802b60a <_raise_r>
 802b666:	bf00      	nop
 802b668:	200000f4 	.word	0x200000f4

0802b66c <_close_r>:
 802b66c:	b538      	push	{r3, r4, r5, lr}
 802b66e:	4d06      	ldr	r5, [pc, #24]	; (802b688 <_close_r+0x1c>)
 802b670:	2300      	movs	r3, #0
 802b672:	4604      	mov	r4, r0
 802b674:	4608      	mov	r0, r1
 802b676:	602b      	str	r3, [r5, #0]
 802b678:	f7d7 fbaf 	bl	8002dda <_close>
 802b67c:	1c43      	adds	r3, r0, #1
 802b67e:	d102      	bne.n	802b686 <_close_r+0x1a>
 802b680:	682b      	ldr	r3, [r5, #0]
 802b682:	b103      	cbz	r3, 802b686 <_close_r+0x1a>
 802b684:	6023      	str	r3, [r4, #0]
 802b686:	bd38      	pop	{r3, r4, r5, pc}
 802b688:	20002dc0 	.word	0x20002dc0

0802b68c <_lseek_r>:
 802b68c:	b538      	push	{r3, r4, r5, lr}
 802b68e:	4d07      	ldr	r5, [pc, #28]	; (802b6ac <_lseek_r+0x20>)
 802b690:	4604      	mov	r4, r0
 802b692:	4608      	mov	r0, r1
 802b694:	4611      	mov	r1, r2
 802b696:	2200      	movs	r2, #0
 802b698:	602a      	str	r2, [r5, #0]
 802b69a:	461a      	mov	r2, r3
 802b69c:	f7d7 fbc4 	bl	8002e28 <_lseek>
 802b6a0:	1c43      	adds	r3, r0, #1
 802b6a2:	d102      	bne.n	802b6aa <_lseek_r+0x1e>
 802b6a4:	682b      	ldr	r3, [r5, #0]
 802b6a6:	b103      	cbz	r3, 802b6aa <_lseek_r+0x1e>
 802b6a8:	6023      	str	r3, [r4, #0]
 802b6aa:	bd38      	pop	{r3, r4, r5, pc}
 802b6ac:	20002dc0 	.word	0x20002dc0

0802b6b0 <_read_r>:
 802b6b0:	b538      	push	{r3, r4, r5, lr}
 802b6b2:	4d07      	ldr	r5, [pc, #28]	; (802b6d0 <_read_r+0x20>)
 802b6b4:	4604      	mov	r4, r0
 802b6b6:	4608      	mov	r0, r1
 802b6b8:	4611      	mov	r1, r2
 802b6ba:	2200      	movs	r2, #0
 802b6bc:	602a      	str	r2, [r5, #0]
 802b6be:	461a      	mov	r2, r3
 802b6c0:	f7d7 fb52 	bl	8002d68 <_read>
 802b6c4:	1c43      	adds	r3, r0, #1
 802b6c6:	d102      	bne.n	802b6ce <_read_r+0x1e>
 802b6c8:	682b      	ldr	r3, [r5, #0]
 802b6ca:	b103      	cbz	r3, 802b6ce <_read_r+0x1e>
 802b6cc:	6023      	str	r3, [r4, #0]
 802b6ce:	bd38      	pop	{r3, r4, r5, pc}
 802b6d0:	20002dc0 	.word	0x20002dc0

0802b6d4 <_kill_r>:
 802b6d4:	b538      	push	{r3, r4, r5, lr}
 802b6d6:	4d07      	ldr	r5, [pc, #28]	; (802b6f4 <_kill_r+0x20>)
 802b6d8:	2300      	movs	r3, #0
 802b6da:	4604      	mov	r4, r0
 802b6dc:	4608      	mov	r0, r1
 802b6de:	4611      	mov	r1, r2
 802b6e0:	602b      	str	r3, [r5, #0]
 802b6e2:	f7d7 fb27 	bl	8002d34 <_kill>
 802b6e6:	1c43      	adds	r3, r0, #1
 802b6e8:	d102      	bne.n	802b6f0 <_kill_r+0x1c>
 802b6ea:	682b      	ldr	r3, [r5, #0]
 802b6ec:	b103      	cbz	r3, 802b6f0 <_kill_r+0x1c>
 802b6ee:	6023      	str	r3, [r4, #0]
 802b6f0:	bd38      	pop	{r3, r4, r5, pc}
 802b6f2:	bf00      	nop
 802b6f4:	20002dc0 	.word	0x20002dc0

0802b6f8 <_getpid_r>:
 802b6f8:	f7d7 bb14 	b.w	8002d24 <_getpid>

0802b6fc <_sbrk_r>:
 802b6fc:	b538      	push	{r3, r4, r5, lr}
 802b6fe:	4d06      	ldr	r5, [pc, #24]	; (802b718 <_sbrk_r+0x1c>)
 802b700:	2300      	movs	r3, #0
 802b702:	4604      	mov	r4, r0
 802b704:	4608      	mov	r0, r1
 802b706:	602b      	str	r3, [r5, #0]
 802b708:	f7d7 fb9c 	bl	8002e44 <_sbrk>
 802b70c:	1c43      	adds	r3, r0, #1
 802b70e:	d102      	bne.n	802b716 <_sbrk_r+0x1a>
 802b710:	682b      	ldr	r3, [r5, #0]
 802b712:	b103      	cbz	r3, 802b716 <_sbrk_r+0x1a>
 802b714:	6023      	str	r3, [r4, #0]
 802b716:	bd38      	pop	{r3, r4, r5, pc}
 802b718:	20002dc0 	.word	0x20002dc0

0802b71c <_write_r>:
 802b71c:	b538      	push	{r3, r4, r5, lr}
 802b71e:	4d07      	ldr	r5, [pc, #28]	; (802b73c <_write_r+0x20>)
 802b720:	4604      	mov	r4, r0
 802b722:	4608      	mov	r0, r1
 802b724:	4611      	mov	r1, r2
 802b726:	2200      	movs	r2, #0
 802b728:	602a      	str	r2, [r5, #0]
 802b72a:	461a      	mov	r2, r3
 802b72c:	f7d7 fb39 	bl	8002da2 <_write>
 802b730:	1c43      	adds	r3, r0, #1
 802b732:	d102      	bne.n	802b73a <_write_r+0x1e>
 802b734:	682b      	ldr	r3, [r5, #0]
 802b736:	b103      	cbz	r3, 802b73a <_write_r+0x1e>
 802b738:	6023      	str	r3, [r4, #0]
 802b73a:	bd38      	pop	{r3, r4, r5, pc}
 802b73c:	20002dc0 	.word	0x20002dc0

0802b740 <__errno>:
 802b740:	4b01      	ldr	r3, [pc, #4]	; (802b748 <__errno+0x8>)
 802b742:	6818      	ldr	r0, [r3, #0]
 802b744:	4770      	bx	lr
 802b746:	bf00      	nop
 802b748:	200000f4 	.word	0x200000f4

0802b74c <__libc_init_array>:
 802b74c:	b570      	push	{r4, r5, r6, lr}
 802b74e:	4d0d      	ldr	r5, [pc, #52]	; (802b784 <__libc_init_array+0x38>)
 802b750:	4c0d      	ldr	r4, [pc, #52]	; (802b788 <__libc_init_array+0x3c>)
 802b752:	1b64      	subs	r4, r4, r5
 802b754:	10a4      	asrs	r4, r4, #2
 802b756:	2600      	movs	r6, #0
 802b758:	42a6      	cmp	r6, r4
 802b75a:	d109      	bne.n	802b770 <__libc_init_array+0x24>
 802b75c:	4d0b      	ldr	r5, [pc, #44]	; (802b78c <__libc_init_array+0x40>)
 802b75e:	4c0c      	ldr	r4, [pc, #48]	; (802b790 <__libc_init_array+0x44>)
 802b760:	f000 fd70 	bl	802c244 <_init>
 802b764:	1b64      	subs	r4, r4, r5
 802b766:	10a4      	asrs	r4, r4, #2
 802b768:	2600      	movs	r6, #0
 802b76a:	42a6      	cmp	r6, r4
 802b76c:	d105      	bne.n	802b77a <__libc_init_array+0x2e>
 802b76e:	bd70      	pop	{r4, r5, r6, pc}
 802b770:	f855 3b04 	ldr.w	r3, [r5], #4
 802b774:	4798      	blx	r3
 802b776:	3601      	adds	r6, #1
 802b778:	e7ee      	b.n	802b758 <__libc_init_array+0xc>
 802b77a:	f855 3b04 	ldr.w	r3, [r5], #4
 802b77e:	4798      	blx	r3
 802b780:	3601      	adds	r6, #1
 802b782:	e7f2      	b.n	802b76a <__libc_init_array+0x1e>
 802b784:	0804cd1c 	.word	0x0804cd1c
 802b788:	0804cd1c 	.word	0x0804cd1c
 802b78c:	0804cd1c 	.word	0x0804cd1c
 802b790:	0804cd34 	.word	0x0804cd34

0802b794 <__retarget_lock_init_recursive>:
 802b794:	4770      	bx	lr

0802b796 <__retarget_lock_acquire_recursive>:
 802b796:	4770      	bx	lr

0802b798 <__retarget_lock_release_recursive>:
 802b798:	4770      	bx	lr

0802b79a <memcpy>:
 802b79a:	440a      	add	r2, r1
 802b79c:	4291      	cmp	r1, r2
 802b79e:	f100 33ff 	add.w	r3, r0, #4294967295
 802b7a2:	d100      	bne.n	802b7a6 <memcpy+0xc>
 802b7a4:	4770      	bx	lr
 802b7a6:	b510      	push	{r4, lr}
 802b7a8:	f811 4b01 	ldrb.w	r4, [r1], #1
 802b7ac:	f803 4f01 	strb.w	r4, [r3, #1]!
 802b7b0:	4291      	cmp	r1, r2
 802b7b2:	d1f9      	bne.n	802b7a8 <memcpy+0xe>
 802b7b4:	bd10      	pop	{r4, pc}
	...

0802b7b8 <__register_exitproc>:
 802b7b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b7bc:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802b870 <__register_exitproc+0xb8>
 802b7c0:	4606      	mov	r6, r0
 802b7c2:	f8d8 0000 	ldr.w	r0, [r8]
 802b7c6:	461f      	mov	r7, r3
 802b7c8:	460d      	mov	r5, r1
 802b7ca:	4691      	mov	r9, r2
 802b7cc:	f7ff ffe3 	bl	802b796 <__retarget_lock_acquire_recursive>
 802b7d0:	4b23      	ldr	r3, [pc, #140]	; (802b860 <__register_exitproc+0xa8>)
 802b7d2:	681c      	ldr	r4, [r3, #0]
 802b7d4:	b934      	cbnz	r4, 802b7e4 <__register_exitproc+0x2c>
 802b7d6:	4c23      	ldr	r4, [pc, #140]	; (802b864 <__register_exitproc+0xac>)
 802b7d8:	601c      	str	r4, [r3, #0]
 802b7da:	4b23      	ldr	r3, [pc, #140]	; (802b868 <__register_exitproc+0xb0>)
 802b7dc:	b113      	cbz	r3, 802b7e4 <__register_exitproc+0x2c>
 802b7de:	681b      	ldr	r3, [r3, #0]
 802b7e0:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802b7e4:	6863      	ldr	r3, [r4, #4]
 802b7e6:	2b1f      	cmp	r3, #31
 802b7e8:	dd07      	ble.n	802b7fa <__register_exitproc+0x42>
 802b7ea:	f8d8 0000 	ldr.w	r0, [r8]
 802b7ee:	f7ff ffd3 	bl	802b798 <__retarget_lock_release_recursive>
 802b7f2:	f04f 30ff 	mov.w	r0, #4294967295
 802b7f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b7fa:	b32e      	cbz	r6, 802b848 <__register_exitproc+0x90>
 802b7fc:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b800:	b968      	cbnz	r0, 802b81e <__register_exitproc+0x66>
 802b802:	4b1a      	ldr	r3, [pc, #104]	; (802b86c <__register_exitproc+0xb4>)
 802b804:	2b00      	cmp	r3, #0
 802b806:	d0f0      	beq.n	802b7ea <__register_exitproc+0x32>
 802b808:	f44f 7084 	mov.w	r0, #264	; 0x108
 802b80c:	f7ff fd14 	bl	802b238 <malloc>
 802b810:	2800      	cmp	r0, #0
 802b812:	d0ea      	beq.n	802b7ea <__register_exitproc+0x32>
 802b814:	2300      	movs	r3, #0
 802b816:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802b81a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802b81e:	6863      	ldr	r3, [r4, #4]
 802b820:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802b824:	2201      	movs	r2, #1
 802b826:	409a      	lsls	r2, r3
 802b828:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802b82c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802b830:	4313      	orrs	r3, r2
 802b832:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802b836:	2e02      	cmp	r6, #2
 802b838:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802b83c:	bf02      	ittt	eq
 802b83e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802b842:	4313      	orreq	r3, r2
 802b844:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802b848:	6863      	ldr	r3, [r4, #4]
 802b84a:	f8d8 0000 	ldr.w	r0, [r8]
 802b84e:	1c5a      	adds	r2, r3, #1
 802b850:	3302      	adds	r3, #2
 802b852:	6062      	str	r2, [r4, #4]
 802b854:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802b858:	f7ff ff9e 	bl	802b798 <__retarget_lock_release_recursive>
 802b85c:	2000      	movs	r0, #0
 802b85e:	e7ca      	b.n	802b7f6 <__register_exitproc+0x3e>
 802b860:	20002e54 	.word	0x20002e54
 802b864:	20002dc8 	.word	0x20002dc8
 802b868:	08030084 	.word	0x08030084
 802b86c:	0802b239 	.word	0x0802b239
 802b870:	200000f8 	.word	0x200000f8

0802b874 <_free_r>:
 802b874:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802b876:	2900      	cmp	r1, #0
 802b878:	d044      	beq.n	802b904 <_free_r+0x90>
 802b87a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802b87e:	9001      	str	r0, [sp, #4]
 802b880:	2b00      	cmp	r3, #0
 802b882:	f1a1 0404 	sub.w	r4, r1, #4
 802b886:	bfb8      	it	lt
 802b888:	18e4      	addlt	r4, r4, r3
 802b88a:	f7ff fd85 	bl	802b398 <__malloc_lock>
 802b88e:	4a1e      	ldr	r2, [pc, #120]	; (802b908 <_free_r+0x94>)
 802b890:	9801      	ldr	r0, [sp, #4]
 802b892:	6813      	ldr	r3, [r2, #0]
 802b894:	b933      	cbnz	r3, 802b8a4 <_free_r+0x30>
 802b896:	6063      	str	r3, [r4, #4]
 802b898:	6014      	str	r4, [r2, #0]
 802b89a:	b003      	add	sp, #12
 802b89c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802b8a0:	f7ff bd80 	b.w	802b3a4 <__malloc_unlock>
 802b8a4:	42a3      	cmp	r3, r4
 802b8a6:	d908      	bls.n	802b8ba <_free_r+0x46>
 802b8a8:	6825      	ldr	r5, [r4, #0]
 802b8aa:	1961      	adds	r1, r4, r5
 802b8ac:	428b      	cmp	r3, r1
 802b8ae:	bf01      	itttt	eq
 802b8b0:	6819      	ldreq	r1, [r3, #0]
 802b8b2:	685b      	ldreq	r3, [r3, #4]
 802b8b4:	1949      	addeq	r1, r1, r5
 802b8b6:	6021      	streq	r1, [r4, #0]
 802b8b8:	e7ed      	b.n	802b896 <_free_r+0x22>
 802b8ba:	461a      	mov	r2, r3
 802b8bc:	685b      	ldr	r3, [r3, #4]
 802b8be:	b10b      	cbz	r3, 802b8c4 <_free_r+0x50>
 802b8c0:	42a3      	cmp	r3, r4
 802b8c2:	d9fa      	bls.n	802b8ba <_free_r+0x46>
 802b8c4:	6811      	ldr	r1, [r2, #0]
 802b8c6:	1855      	adds	r5, r2, r1
 802b8c8:	42a5      	cmp	r5, r4
 802b8ca:	d10b      	bne.n	802b8e4 <_free_r+0x70>
 802b8cc:	6824      	ldr	r4, [r4, #0]
 802b8ce:	4421      	add	r1, r4
 802b8d0:	1854      	adds	r4, r2, r1
 802b8d2:	42a3      	cmp	r3, r4
 802b8d4:	6011      	str	r1, [r2, #0]
 802b8d6:	d1e0      	bne.n	802b89a <_free_r+0x26>
 802b8d8:	681c      	ldr	r4, [r3, #0]
 802b8da:	685b      	ldr	r3, [r3, #4]
 802b8dc:	6053      	str	r3, [r2, #4]
 802b8de:	440c      	add	r4, r1
 802b8e0:	6014      	str	r4, [r2, #0]
 802b8e2:	e7da      	b.n	802b89a <_free_r+0x26>
 802b8e4:	d902      	bls.n	802b8ec <_free_r+0x78>
 802b8e6:	230c      	movs	r3, #12
 802b8e8:	6003      	str	r3, [r0, #0]
 802b8ea:	e7d6      	b.n	802b89a <_free_r+0x26>
 802b8ec:	6825      	ldr	r5, [r4, #0]
 802b8ee:	1961      	adds	r1, r4, r5
 802b8f0:	428b      	cmp	r3, r1
 802b8f2:	bf04      	itt	eq
 802b8f4:	6819      	ldreq	r1, [r3, #0]
 802b8f6:	685b      	ldreq	r3, [r3, #4]
 802b8f8:	6063      	str	r3, [r4, #4]
 802b8fa:	bf04      	itt	eq
 802b8fc:	1949      	addeq	r1, r1, r5
 802b8fe:	6021      	streq	r1, [r4, #0]
 802b900:	6054      	str	r4, [r2, #4]
 802b902:	e7ca      	b.n	802b89a <_free_r+0x26>
 802b904:	b003      	add	sp, #12
 802b906:	bd30      	pop	{r4, r5, pc}
 802b908:	20002c7c 	.word	0x20002c7c

0802b90c <__sfputc_r>:
 802b90c:	6893      	ldr	r3, [r2, #8]
 802b90e:	3b01      	subs	r3, #1
 802b910:	2b00      	cmp	r3, #0
 802b912:	b410      	push	{r4}
 802b914:	6093      	str	r3, [r2, #8]
 802b916:	da08      	bge.n	802b92a <__sfputc_r+0x1e>
 802b918:	6994      	ldr	r4, [r2, #24]
 802b91a:	42a3      	cmp	r3, r4
 802b91c:	db01      	blt.n	802b922 <__sfputc_r+0x16>
 802b91e:	290a      	cmp	r1, #10
 802b920:	d103      	bne.n	802b92a <__sfputc_r+0x1e>
 802b922:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b926:	f000 bb73 	b.w	802c010 <__swbuf_r>
 802b92a:	6813      	ldr	r3, [r2, #0]
 802b92c:	1c58      	adds	r0, r3, #1
 802b92e:	6010      	str	r0, [r2, #0]
 802b930:	7019      	strb	r1, [r3, #0]
 802b932:	4608      	mov	r0, r1
 802b934:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b938:	4770      	bx	lr

0802b93a <__sfputs_r>:
 802b93a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b93c:	4606      	mov	r6, r0
 802b93e:	460f      	mov	r7, r1
 802b940:	4614      	mov	r4, r2
 802b942:	18d5      	adds	r5, r2, r3
 802b944:	42ac      	cmp	r4, r5
 802b946:	d101      	bne.n	802b94c <__sfputs_r+0x12>
 802b948:	2000      	movs	r0, #0
 802b94a:	e007      	b.n	802b95c <__sfputs_r+0x22>
 802b94c:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b950:	463a      	mov	r2, r7
 802b952:	4630      	mov	r0, r6
 802b954:	f7ff ffda 	bl	802b90c <__sfputc_r>
 802b958:	1c43      	adds	r3, r0, #1
 802b95a:	d1f3      	bne.n	802b944 <__sfputs_r+0xa>
 802b95c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802b960 <_vfiprintf_r>:
 802b960:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b964:	460d      	mov	r5, r1
 802b966:	b09d      	sub	sp, #116	; 0x74
 802b968:	4614      	mov	r4, r2
 802b96a:	4698      	mov	r8, r3
 802b96c:	4606      	mov	r6, r0
 802b96e:	b118      	cbz	r0, 802b978 <_vfiprintf_r+0x18>
 802b970:	6a03      	ldr	r3, [r0, #32]
 802b972:	b90b      	cbnz	r3, 802b978 <_vfiprintf_r+0x18>
 802b974:	f7ff fdb6 	bl	802b4e4 <__sinit>
 802b978:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b97a:	07d9      	lsls	r1, r3, #31
 802b97c:	d405      	bmi.n	802b98a <_vfiprintf_r+0x2a>
 802b97e:	89ab      	ldrh	r3, [r5, #12]
 802b980:	059a      	lsls	r2, r3, #22
 802b982:	d402      	bmi.n	802b98a <_vfiprintf_r+0x2a>
 802b984:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b986:	f7ff ff06 	bl	802b796 <__retarget_lock_acquire_recursive>
 802b98a:	89ab      	ldrh	r3, [r5, #12]
 802b98c:	071b      	lsls	r3, r3, #28
 802b98e:	d501      	bpl.n	802b994 <_vfiprintf_r+0x34>
 802b990:	692b      	ldr	r3, [r5, #16]
 802b992:	b99b      	cbnz	r3, 802b9bc <_vfiprintf_r+0x5c>
 802b994:	4629      	mov	r1, r5
 802b996:	4630      	mov	r0, r6
 802b998:	f000 fb78 	bl	802c08c <__swsetup_r>
 802b99c:	b170      	cbz	r0, 802b9bc <_vfiprintf_r+0x5c>
 802b99e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b9a0:	07dc      	lsls	r4, r3, #31
 802b9a2:	d504      	bpl.n	802b9ae <_vfiprintf_r+0x4e>
 802b9a4:	f04f 30ff 	mov.w	r0, #4294967295
 802b9a8:	b01d      	add	sp, #116	; 0x74
 802b9aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b9ae:	89ab      	ldrh	r3, [r5, #12]
 802b9b0:	0598      	lsls	r0, r3, #22
 802b9b2:	d4f7      	bmi.n	802b9a4 <_vfiprintf_r+0x44>
 802b9b4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b9b6:	f7ff feef 	bl	802b798 <__retarget_lock_release_recursive>
 802b9ba:	e7f3      	b.n	802b9a4 <_vfiprintf_r+0x44>
 802b9bc:	2300      	movs	r3, #0
 802b9be:	9309      	str	r3, [sp, #36]	; 0x24
 802b9c0:	2320      	movs	r3, #32
 802b9c2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802b9c6:	f8cd 800c 	str.w	r8, [sp, #12]
 802b9ca:	2330      	movs	r3, #48	; 0x30
 802b9cc:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802bb80 <_vfiprintf_r+0x220>
 802b9d0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802b9d4:	f04f 0901 	mov.w	r9, #1
 802b9d8:	4623      	mov	r3, r4
 802b9da:	469a      	mov	sl, r3
 802b9dc:	f813 2b01 	ldrb.w	r2, [r3], #1
 802b9e0:	b10a      	cbz	r2, 802b9e6 <_vfiprintf_r+0x86>
 802b9e2:	2a25      	cmp	r2, #37	; 0x25
 802b9e4:	d1f9      	bne.n	802b9da <_vfiprintf_r+0x7a>
 802b9e6:	ebba 0b04 	subs.w	fp, sl, r4
 802b9ea:	d00b      	beq.n	802ba04 <_vfiprintf_r+0xa4>
 802b9ec:	465b      	mov	r3, fp
 802b9ee:	4622      	mov	r2, r4
 802b9f0:	4629      	mov	r1, r5
 802b9f2:	4630      	mov	r0, r6
 802b9f4:	f7ff ffa1 	bl	802b93a <__sfputs_r>
 802b9f8:	3001      	adds	r0, #1
 802b9fa:	f000 80a9 	beq.w	802bb50 <_vfiprintf_r+0x1f0>
 802b9fe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802ba00:	445a      	add	r2, fp
 802ba02:	9209      	str	r2, [sp, #36]	; 0x24
 802ba04:	f89a 3000 	ldrb.w	r3, [sl]
 802ba08:	2b00      	cmp	r3, #0
 802ba0a:	f000 80a1 	beq.w	802bb50 <_vfiprintf_r+0x1f0>
 802ba0e:	2300      	movs	r3, #0
 802ba10:	f04f 32ff 	mov.w	r2, #4294967295
 802ba14:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802ba18:	f10a 0a01 	add.w	sl, sl, #1
 802ba1c:	9304      	str	r3, [sp, #16]
 802ba1e:	9307      	str	r3, [sp, #28]
 802ba20:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802ba24:	931a      	str	r3, [sp, #104]	; 0x68
 802ba26:	4654      	mov	r4, sl
 802ba28:	2205      	movs	r2, #5
 802ba2a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802ba2e:	4854      	ldr	r0, [pc, #336]	; (802bb80 <_vfiprintf_r+0x220>)
 802ba30:	f7d4 fbd6 	bl	80001e0 <memchr>
 802ba34:	9a04      	ldr	r2, [sp, #16]
 802ba36:	b9d8      	cbnz	r0, 802ba70 <_vfiprintf_r+0x110>
 802ba38:	06d1      	lsls	r1, r2, #27
 802ba3a:	bf44      	itt	mi
 802ba3c:	2320      	movmi	r3, #32
 802ba3e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802ba42:	0713      	lsls	r3, r2, #28
 802ba44:	bf44      	itt	mi
 802ba46:	232b      	movmi	r3, #43	; 0x2b
 802ba48:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802ba4c:	f89a 3000 	ldrb.w	r3, [sl]
 802ba50:	2b2a      	cmp	r3, #42	; 0x2a
 802ba52:	d015      	beq.n	802ba80 <_vfiprintf_r+0x120>
 802ba54:	9a07      	ldr	r2, [sp, #28]
 802ba56:	4654      	mov	r4, sl
 802ba58:	2000      	movs	r0, #0
 802ba5a:	f04f 0c0a 	mov.w	ip, #10
 802ba5e:	4621      	mov	r1, r4
 802ba60:	f811 3b01 	ldrb.w	r3, [r1], #1
 802ba64:	3b30      	subs	r3, #48	; 0x30
 802ba66:	2b09      	cmp	r3, #9
 802ba68:	d94d      	bls.n	802bb06 <_vfiprintf_r+0x1a6>
 802ba6a:	b1b0      	cbz	r0, 802ba9a <_vfiprintf_r+0x13a>
 802ba6c:	9207      	str	r2, [sp, #28]
 802ba6e:	e014      	b.n	802ba9a <_vfiprintf_r+0x13a>
 802ba70:	eba0 0308 	sub.w	r3, r0, r8
 802ba74:	fa09 f303 	lsl.w	r3, r9, r3
 802ba78:	4313      	orrs	r3, r2
 802ba7a:	9304      	str	r3, [sp, #16]
 802ba7c:	46a2      	mov	sl, r4
 802ba7e:	e7d2      	b.n	802ba26 <_vfiprintf_r+0xc6>
 802ba80:	9b03      	ldr	r3, [sp, #12]
 802ba82:	1d19      	adds	r1, r3, #4
 802ba84:	681b      	ldr	r3, [r3, #0]
 802ba86:	9103      	str	r1, [sp, #12]
 802ba88:	2b00      	cmp	r3, #0
 802ba8a:	bfbb      	ittet	lt
 802ba8c:	425b      	neglt	r3, r3
 802ba8e:	f042 0202 	orrlt.w	r2, r2, #2
 802ba92:	9307      	strge	r3, [sp, #28]
 802ba94:	9307      	strlt	r3, [sp, #28]
 802ba96:	bfb8      	it	lt
 802ba98:	9204      	strlt	r2, [sp, #16]
 802ba9a:	7823      	ldrb	r3, [r4, #0]
 802ba9c:	2b2e      	cmp	r3, #46	; 0x2e
 802ba9e:	d10c      	bne.n	802baba <_vfiprintf_r+0x15a>
 802baa0:	7863      	ldrb	r3, [r4, #1]
 802baa2:	2b2a      	cmp	r3, #42	; 0x2a
 802baa4:	d134      	bne.n	802bb10 <_vfiprintf_r+0x1b0>
 802baa6:	9b03      	ldr	r3, [sp, #12]
 802baa8:	1d1a      	adds	r2, r3, #4
 802baaa:	681b      	ldr	r3, [r3, #0]
 802baac:	9203      	str	r2, [sp, #12]
 802baae:	2b00      	cmp	r3, #0
 802bab0:	bfb8      	it	lt
 802bab2:	f04f 33ff 	movlt.w	r3, #4294967295
 802bab6:	3402      	adds	r4, #2
 802bab8:	9305      	str	r3, [sp, #20]
 802baba:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802bb90 <_vfiprintf_r+0x230>
 802babe:	7821      	ldrb	r1, [r4, #0]
 802bac0:	2203      	movs	r2, #3
 802bac2:	4650      	mov	r0, sl
 802bac4:	f7d4 fb8c 	bl	80001e0 <memchr>
 802bac8:	b138      	cbz	r0, 802bada <_vfiprintf_r+0x17a>
 802baca:	9b04      	ldr	r3, [sp, #16]
 802bacc:	eba0 000a 	sub.w	r0, r0, sl
 802bad0:	2240      	movs	r2, #64	; 0x40
 802bad2:	4082      	lsls	r2, r0
 802bad4:	4313      	orrs	r3, r2
 802bad6:	3401      	adds	r4, #1
 802bad8:	9304      	str	r3, [sp, #16]
 802bada:	f814 1b01 	ldrb.w	r1, [r4], #1
 802bade:	4829      	ldr	r0, [pc, #164]	; (802bb84 <_vfiprintf_r+0x224>)
 802bae0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802bae4:	2206      	movs	r2, #6
 802bae6:	f7d4 fb7b 	bl	80001e0 <memchr>
 802baea:	2800      	cmp	r0, #0
 802baec:	d03f      	beq.n	802bb6e <_vfiprintf_r+0x20e>
 802baee:	4b26      	ldr	r3, [pc, #152]	; (802bb88 <_vfiprintf_r+0x228>)
 802baf0:	bb1b      	cbnz	r3, 802bb3a <_vfiprintf_r+0x1da>
 802baf2:	9b03      	ldr	r3, [sp, #12]
 802baf4:	3307      	adds	r3, #7
 802baf6:	f023 0307 	bic.w	r3, r3, #7
 802bafa:	3308      	adds	r3, #8
 802bafc:	9303      	str	r3, [sp, #12]
 802bafe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802bb00:	443b      	add	r3, r7
 802bb02:	9309      	str	r3, [sp, #36]	; 0x24
 802bb04:	e768      	b.n	802b9d8 <_vfiprintf_r+0x78>
 802bb06:	fb0c 3202 	mla	r2, ip, r2, r3
 802bb0a:	460c      	mov	r4, r1
 802bb0c:	2001      	movs	r0, #1
 802bb0e:	e7a6      	b.n	802ba5e <_vfiprintf_r+0xfe>
 802bb10:	2300      	movs	r3, #0
 802bb12:	3401      	adds	r4, #1
 802bb14:	9305      	str	r3, [sp, #20]
 802bb16:	4619      	mov	r1, r3
 802bb18:	f04f 0c0a 	mov.w	ip, #10
 802bb1c:	4620      	mov	r0, r4
 802bb1e:	f810 2b01 	ldrb.w	r2, [r0], #1
 802bb22:	3a30      	subs	r2, #48	; 0x30
 802bb24:	2a09      	cmp	r2, #9
 802bb26:	d903      	bls.n	802bb30 <_vfiprintf_r+0x1d0>
 802bb28:	2b00      	cmp	r3, #0
 802bb2a:	d0c6      	beq.n	802baba <_vfiprintf_r+0x15a>
 802bb2c:	9105      	str	r1, [sp, #20]
 802bb2e:	e7c4      	b.n	802baba <_vfiprintf_r+0x15a>
 802bb30:	fb0c 2101 	mla	r1, ip, r1, r2
 802bb34:	4604      	mov	r4, r0
 802bb36:	2301      	movs	r3, #1
 802bb38:	e7f0      	b.n	802bb1c <_vfiprintf_r+0x1bc>
 802bb3a:	ab03      	add	r3, sp, #12
 802bb3c:	9300      	str	r3, [sp, #0]
 802bb3e:	462a      	mov	r2, r5
 802bb40:	4b12      	ldr	r3, [pc, #72]	; (802bb8c <_vfiprintf_r+0x22c>)
 802bb42:	a904      	add	r1, sp, #16
 802bb44:	4630      	mov	r0, r6
 802bb46:	f3af 8000 	nop.w
 802bb4a:	4607      	mov	r7, r0
 802bb4c:	1c78      	adds	r0, r7, #1
 802bb4e:	d1d6      	bne.n	802bafe <_vfiprintf_r+0x19e>
 802bb50:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802bb52:	07d9      	lsls	r1, r3, #31
 802bb54:	d405      	bmi.n	802bb62 <_vfiprintf_r+0x202>
 802bb56:	89ab      	ldrh	r3, [r5, #12]
 802bb58:	059a      	lsls	r2, r3, #22
 802bb5a:	d402      	bmi.n	802bb62 <_vfiprintf_r+0x202>
 802bb5c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802bb5e:	f7ff fe1b 	bl	802b798 <__retarget_lock_release_recursive>
 802bb62:	89ab      	ldrh	r3, [r5, #12]
 802bb64:	065b      	lsls	r3, r3, #25
 802bb66:	f53f af1d 	bmi.w	802b9a4 <_vfiprintf_r+0x44>
 802bb6a:	9809      	ldr	r0, [sp, #36]	; 0x24
 802bb6c:	e71c      	b.n	802b9a8 <_vfiprintf_r+0x48>
 802bb6e:	ab03      	add	r3, sp, #12
 802bb70:	9300      	str	r3, [sp, #0]
 802bb72:	462a      	mov	r2, r5
 802bb74:	4b05      	ldr	r3, [pc, #20]	; (802bb8c <_vfiprintf_r+0x22c>)
 802bb76:	a904      	add	r1, sp, #16
 802bb78:	4630      	mov	r0, r6
 802bb7a:	f000 f879 	bl	802bc70 <_printf_i>
 802bb7e:	e7e4      	b.n	802bb4a <_vfiprintf_r+0x1ea>
 802bb80:	08030088 	.word	0x08030088
 802bb84:	08030092 	.word	0x08030092
 802bb88:	00000000 	.word	0x00000000
 802bb8c:	0802b93b 	.word	0x0802b93b
 802bb90:	0803008e 	.word	0x0803008e

0802bb94 <_printf_common>:
 802bb94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802bb98:	4616      	mov	r6, r2
 802bb9a:	4699      	mov	r9, r3
 802bb9c:	688a      	ldr	r2, [r1, #8]
 802bb9e:	690b      	ldr	r3, [r1, #16]
 802bba0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802bba4:	4293      	cmp	r3, r2
 802bba6:	bfb8      	it	lt
 802bba8:	4613      	movlt	r3, r2
 802bbaa:	6033      	str	r3, [r6, #0]
 802bbac:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802bbb0:	4607      	mov	r7, r0
 802bbb2:	460c      	mov	r4, r1
 802bbb4:	b10a      	cbz	r2, 802bbba <_printf_common+0x26>
 802bbb6:	3301      	adds	r3, #1
 802bbb8:	6033      	str	r3, [r6, #0]
 802bbba:	6823      	ldr	r3, [r4, #0]
 802bbbc:	0699      	lsls	r1, r3, #26
 802bbbe:	bf42      	ittt	mi
 802bbc0:	6833      	ldrmi	r3, [r6, #0]
 802bbc2:	3302      	addmi	r3, #2
 802bbc4:	6033      	strmi	r3, [r6, #0]
 802bbc6:	6825      	ldr	r5, [r4, #0]
 802bbc8:	f015 0506 	ands.w	r5, r5, #6
 802bbcc:	d106      	bne.n	802bbdc <_printf_common+0x48>
 802bbce:	f104 0a19 	add.w	sl, r4, #25
 802bbd2:	68e3      	ldr	r3, [r4, #12]
 802bbd4:	6832      	ldr	r2, [r6, #0]
 802bbd6:	1a9b      	subs	r3, r3, r2
 802bbd8:	42ab      	cmp	r3, r5
 802bbda:	dc26      	bgt.n	802bc2a <_printf_common+0x96>
 802bbdc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802bbe0:	1e13      	subs	r3, r2, #0
 802bbe2:	6822      	ldr	r2, [r4, #0]
 802bbe4:	bf18      	it	ne
 802bbe6:	2301      	movne	r3, #1
 802bbe8:	0692      	lsls	r2, r2, #26
 802bbea:	d42b      	bmi.n	802bc44 <_printf_common+0xb0>
 802bbec:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802bbf0:	4649      	mov	r1, r9
 802bbf2:	4638      	mov	r0, r7
 802bbf4:	47c0      	blx	r8
 802bbf6:	3001      	adds	r0, #1
 802bbf8:	d01e      	beq.n	802bc38 <_printf_common+0xa4>
 802bbfa:	6823      	ldr	r3, [r4, #0]
 802bbfc:	6922      	ldr	r2, [r4, #16]
 802bbfe:	f003 0306 	and.w	r3, r3, #6
 802bc02:	2b04      	cmp	r3, #4
 802bc04:	bf02      	ittt	eq
 802bc06:	68e5      	ldreq	r5, [r4, #12]
 802bc08:	6833      	ldreq	r3, [r6, #0]
 802bc0a:	1aed      	subeq	r5, r5, r3
 802bc0c:	68a3      	ldr	r3, [r4, #8]
 802bc0e:	bf0c      	ite	eq
 802bc10:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802bc14:	2500      	movne	r5, #0
 802bc16:	4293      	cmp	r3, r2
 802bc18:	bfc4      	itt	gt
 802bc1a:	1a9b      	subgt	r3, r3, r2
 802bc1c:	18ed      	addgt	r5, r5, r3
 802bc1e:	2600      	movs	r6, #0
 802bc20:	341a      	adds	r4, #26
 802bc22:	42b5      	cmp	r5, r6
 802bc24:	d11a      	bne.n	802bc5c <_printf_common+0xc8>
 802bc26:	2000      	movs	r0, #0
 802bc28:	e008      	b.n	802bc3c <_printf_common+0xa8>
 802bc2a:	2301      	movs	r3, #1
 802bc2c:	4652      	mov	r2, sl
 802bc2e:	4649      	mov	r1, r9
 802bc30:	4638      	mov	r0, r7
 802bc32:	47c0      	blx	r8
 802bc34:	3001      	adds	r0, #1
 802bc36:	d103      	bne.n	802bc40 <_printf_common+0xac>
 802bc38:	f04f 30ff 	mov.w	r0, #4294967295
 802bc3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802bc40:	3501      	adds	r5, #1
 802bc42:	e7c6      	b.n	802bbd2 <_printf_common+0x3e>
 802bc44:	18e1      	adds	r1, r4, r3
 802bc46:	1c5a      	adds	r2, r3, #1
 802bc48:	2030      	movs	r0, #48	; 0x30
 802bc4a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802bc4e:	4422      	add	r2, r4
 802bc50:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802bc54:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802bc58:	3302      	adds	r3, #2
 802bc5a:	e7c7      	b.n	802bbec <_printf_common+0x58>
 802bc5c:	2301      	movs	r3, #1
 802bc5e:	4622      	mov	r2, r4
 802bc60:	4649      	mov	r1, r9
 802bc62:	4638      	mov	r0, r7
 802bc64:	47c0      	blx	r8
 802bc66:	3001      	adds	r0, #1
 802bc68:	d0e6      	beq.n	802bc38 <_printf_common+0xa4>
 802bc6a:	3601      	adds	r6, #1
 802bc6c:	e7d9      	b.n	802bc22 <_printf_common+0x8e>
	...

0802bc70 <_printf_i>:
 802bc70:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802bc74:	7e0f      	ldrb	r7, [r1, #24]
 802bc76:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802bc78:	2f78      	cmp	r7, #120	; 0x78
 802bc7a:	4691      	mov	r9, r2
 802bc7c:	4680      	mov	r8, r0
 802bc7e:	460c      	mov	r4, r1
 802bc80:	469a      	mov	sl, r3
 802bc82:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802bc86:	d807      	bhi.n	802bc98 <_printf_i+0x28>
 802bc88:	2f62      	cmp	r7, #98	; 0x62
 802bc8a:	d80a      	bhi.n	802bca2 <_printf_i+0x32>
 802bc8c:	2f00      	cmp	r7, #0
 802bc8e:	f000 80d4 	beq.w	802be3a <_printf_i+0x1ca>
 802bc92:	2f58      	cmp	r7, #88	; 0x58
 802bc94:	f000 80c0 	beq.w	802be18 <_printf_i+0x1a8>
 802bc98:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802bc9c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802bca0:	e03a      	b.n	802bd18 <_printf_i+0xa8>
 802bca2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802bca6:	2b15      	cmp	r3, #21
 802bca8:	d8f6      	bhi.n	802bc98 <_printf_i+0x28>
 802bcaa:	a101      	add	r1, pc, #4	; (adr r1, 802bcb0 <_printf_i+0x40>)
 802bcac:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802bcb0:	0802bd09 	.word	0x0802bd09
 802bcb4:	0802bd1d 	.word	0x0802bd1d
 802bcb8:	0802bc99 	.word	0x0802bc99
 802bcbc:	0802bc99 	.word	0x0802bc99
 802bcc0:	0802bc99 	.word	0x0802bc99
 802bcc4:	0802bc99 	.word	0x0802bc99
 802bcc8:	0802bd1d 	.word	0x0802bd1d
 802bccc:	0802bc99 	.word	0x0802bc99
 802bcd0:	0802bc99 	.word	0x0802bc99
 802bcd4:	0802bc99 	.word	0x0802bc99
 802bcd8:	0802bc99 	.word	0x0802bc99
 802bcdc:	0802be21 	.word	0x0802be21
 802bce0:	0802bd49 	.word	0x0802bd49
 802bce4:	0802bddb 	.word	0x0802bddb
 802bce8:	0802bc99 	.word	0x0802bc99
 802bcec:	0802bc99 	.word	0x0802bc99
 802bcf0:	0802be43 	.word	0x0802be43
 802bcf4:	0802bc99 	.word	0x0802bc99
 802bcf8:	0802bd49 	.word	0x0802bd49
 802bcfc:	0802bc99 	.word	0x0802bc99
 802bd00:	0802bc99 	.word	0x0802bc99
 802bd04:	0802bde3 	.word	0x0802bde3
 802bd08:	682b      	ldr	r3, [r5, #0]
 802bd0a:	1d1a      	adds	r2, r3, #4
 802bd0c:	681b      	ldr	r3, [r3, #0]
 802bd0e:	602a      	str	r2, [r5, #0]
 802bd10:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802bd14:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802bd18:	2301      	movs	r3, #1
 802bd1a:	e09f      	b.n	802be5c <_printf_i+0x1ec>
 802bd1c:	6820      	ldr	r0, [r4, #0]
 802bd1e:	682b      	ldr	r3, [r5, #0]
 802bd20:	0607      	lsls	r7, r0, #24
 802bd22:	f103 0104 	add.w	r1, r3, #4
 802bd26:	6029      	str	r1, [r5, #0]
 802bd28:	d501      	bpl.n	802bd2e <_printf_i+0xbe>
 802bd2a:	681e      	ldr	r6, [r3, #0]
 802bd2c:	e003      	b.n	802bd36 <_printf_i+0xc6>
 802bd2e:	0646      	lsls	r6, r0, #25
 802bd30:	d5fb      	bpl.n	802bd2a <_printf_i+0xba>
 802bd32:	f9b3 6000 	ldrsh.w	r6, [r3]
 802bd36:	2e00      	cmp	r6, #0
 802bd38:	da03      	bge.n	802bd42 <_printf_i+0xd2>
 802bd3a:	232d      	movs	r3, #45	; 0x2d
 802bd3c:	4276      	negs	r6, r6
 802bd3e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802bd42:	485a      	ldr	r0, [pc, #360]	; (802beac <_printf_i+0x23c>)
 802bd44:	230a      	movs	r3, #10
 802bd46:	e012      	b.n	802bd6e <_printf_i+0xfe>
 802bd48:	682b      	ldr	r3, [r5, #0]
 802bd4a:	6820      	ldr	r0, [r4, #0]
 802bd4c:	1d19      	adds	r1, r3, #4
 802bd4e:	6029      	str	r1, [r5, #0]
 802bd50:	0605      	lsls	r5, r0, #24
 802bd52:	d501      	bpl.n	802bd58 <_printf_i+0xe8>
 802bd54:	681e      	ldr	r6, [r3, #0]
 802bd56:	e002      	b.n	802bd5e <_printf_i+0xee>
 802bd58:	0641      	lsls	r1, r0, #25
 802bd5a:	d5fb      	bpl.n	802bd54 <_printf_i+0xe4>
 802bd5c:	881e      	ldrh	r6, [r3, #0]
 802bd5e:	4853      	ldr	r0, [pc, #332]	; (802beac <_printf_i+0x23c>)
 802bd60:	2f6f      	cmp	r7, #111	; 0x6f
 802bd62:	bf0c      	ite	eq
 802bd64:	2308      	moveq	r3, #8
 802bd66:	230a      	movne	r3, #10
 802bd68:	2100      	movs	r1, #0
 802bd6a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802bd6e:	6865      	ldr	r5, [r4, #4]
 802bd70:	60a5      	str	r5, [r4, #8]
 802bd72:	2d00      	cmp	r5, #0
 802bd74:	bfa2      	ittt	ge
 802bd76:	6821      	ldrge	r1, [r4, #0]
 802bd78:	f021 0104 	bicge.w	r1, r1, #4
 802bd7c:	6021      	strge	r1, [r4, #0]
 802bd7e:	b90e      	cbnz	r6, 802bd84 <_printf_i+0x114>
 802bd80:	2d00      	cmp	r5, #0
 802bd82:	d04b      	beq.n	802be1c <_printf_i+0x1ac>
 802bd84:	4615      	mov	r5, r2
 802bd86:	fbb6 f1f3 	udiv	r1, r6, r3
 802bd8a:	fb03 6711 	mls	r7, r3, r1, r6
 802bd8e:	5dc7      	ldrb	r7, [r0, r7]
 802bd90:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802bd94:	4637      	mov	r7, r6
 802bd96:	42bb      	cmp	r3, r7
 802bd98:	460e      	mov	r6, r1
 802bd9a:	d9f4      	bls.n	802bd86 <_printf_i+0x116>
 802bd9c:	2b08      	cmp	r3, #8
 802bd9e:	d10b      	bne.n	802bdb8 <_printf_i+0x148>
 802bda0:	6823      	ldr	r3, [r4, #0]
 802bda2:	07de      	lsls	r6, r3, #31
 802bda4:	d508      	bpl.n	802bdb8 <_printf_i+0x148>
 802bda6:	6923      	ldr	r3, [r4, #16]
 802bda8:	6861      	ldr	r1, [r4, #4]
 802bdaa:	4299      	cmp	r1, r3
 802bdac:	bfde      	ittt	le
 802bdae:	2330      	movle	r3, #48	; 0x30
 802bdb0:	f805 3c01 	strble.w	r3, [r5, #-1]
 802bdb4:	f105 35ff 	addle.w	r5, r5, #4294967295
 802bdb8:	1b52      	subs	r2, r2, r5
 802bdba:	6122      	str	r2, [r4, #16]
 802bdbc:	f8cd a000 	str.w	sl, [sp]
 802bdc0:	464b      	mov	r3, r9
 802bdc2:	aa03      	add	r2, sp, #12
 802bdc4:	4621      	mov	r1, r4
 802bdc6:	4640      	mov	r0, r8
 802bdc8:	f7ff fee4 	bl	802bb94 <_printf_common>
 802bdcc:	3001      	adds	r0, #1
 802bdce:	d14a      	bne.n	802be66 <_printf_i+0x1f6>
 802bdd0:	f04f 30ff 	mov.w	r0, #4294967295
 802bdd4:	b004      	add	sp, #16
 802bdd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802bdda:	6823      	ldr	r3, [r4, #0]
 802bddc:	f043 0320 	orr.w	r3, r3, #32
 802bde0:	6023      	str	r3, [r4, #0]
 802bde2:	4833      	ldr	r0, [pc, #204]	; (802beb0 <_printf_i+0x240>)
 802bde4:	2778      	movs	r7, #120	; 0x78
 802bde6:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802bdea:	6823      	ldr	r3, [r4, #0]
 802bdec:	6829      	ldr	r1, [r5, #0]
 802bdee:	061f      	lsls	r7, r3, #24
 802bdf0:	f851 6b04 	ldr.w	r6, [r1], #4
 802bdf4:	d402      	bmi.n	802bdfc <_printf_i+0x18c>
 802bdf6:	065f      	lsls	r7, r3, #25
 802bdf8:	bf48      	it	mi
 802bdfa:	b2b6      	uxthmi	r6, r6
 802bdfc:	07df      	lsls	r7, r3, #31
 802bdfe:	bf48      	it	mi
 802be00:	f043 0320 	orrmi.w	r3, r3, #32
 802be04:	6029      	str	r1, [r5, #0]
 802be06:	bf48      	it	mi
 802be08:	6023      	strmi	r3, [r4, #0]
 802be0a:	b91e      	cbnz	r6, 802be14 <_printf_i+0x1a4>
 802be0c:	6823      	ldr	r3, [r4, #0]
 802be0e:	f023 0320 	bic.w	r3, r3, #32
 802be12:	6023      	str	r3, [r4, #0]
 802be14:	2310      	movs	r3, #16
 802be16:	e7a7      	b.n	802bd68 <_printf_i+0xf8>
 802be18:	4824      	ldr	r0, [pc, #144]	; (802beac <_printf_i+0x23c>)
 802be1a:	e7e4      	b.n	802bde6 <_printf_i+0x176>
 802be1c:	4615      	mov	r5, r2
 802be1e:	e7bd      	b.n	802bd9c <_printf_i+0x12c>
 802be20:	682b      	ldr	r3, [r5, #0]
 802be22:	6826      	ldr	r6, [r4, #0]
 802be24:	6961      	ldr	r1, [r4, #20]
 802be26:	1d18      	adds	r0, r3, #4
 802be28:	6028      	str	r0, [r5, #0]
 802be2a:	0635      	lsls	r5, r6, #24
 802be2c:	681b      	ldr	r3, [r3, #0]
 802be2e:	d501      	bpl.n	802be34 <_printf_i+0x1c4>
 802be30:	6019      	str	r1, [r3, #0]
 802be32:	e002      	b.n	802be3a <_printf_i+0x1ca>
 802be34:	0670      	lsls	r0, r6, #25
 802be36:	d5fb      	bpl.n	802be30 <_printf_i+0x1c0>
 802be38:	8019      	strh	r1, [r3, #0]
 802be3a:	2300      	movs	r3, #0
 802be3c:	6123      	str	r3, [r4, #16]
 802be3e:	4615      	mov	r5, r2
 802be40:	e7bc      	b.n	802bdbc <_printf_i+0x14c>
 802be42:	682b      	ldr	r3, [r5, #0]
 802be44:	1d1a      	adds	r2, r3, #4
 802be46:	602a      	str	r2, [r5, #0]
 802be48:	681d      	ldr	r5, [r3, #0]
 802be4a:	6862      	ldr	r2, [r4, #4]
 802be4c:	2100      	movs	r1, #0
 802be4e:	4628      	mov	r0, r5
 802be50:	f7d4 f9c6 	bl	80001e0 <memchr>
 802be54:	b108      	cbz	r0, 802be5a <_printf_i+0x1ea>
 802be56:	1b40      	subs	r0, r0, r5
 802be58:	6060      	str	r0, [r4, #4]
 802be5a:	6863      	ldr	r3, [r4, #4]
 802be5c:	6123      	str	r3, [r4, #16]
 802be5e:	2300      	movs	r3, #0
 802be60:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802be64:	e7aa      	b.n	802bdbc <_printf_i+0x14c>
 802be66:	6923      	ldr	r3, [r4, #16]
 802be68:	462a      	mov	r2, r5
 802be6a:	4649      	mov	r1, r9
 802be6c:	4640      	mov	r0, r8
 802be6e:	47d0      	blx	sl
 802be70:	3001      	adds	r0, #1
 802be72:	d0ad      	beq.n	802bdd0 <_printf_i+0x160>
 802be74:	6823      	ldr	r3, [r4, #0]
 802be76:	079b      	lsls	r3, r3, #30
 802be78:	d413      	bmi.n	802bea2 <_printf_i+0x232>
 802be7a:	68e0      	ldr	r0, [r4, #12]
 802be7c:	9b03      	ldr	r3, [sp, #12]
 802be7e:	4298      	cmp	r0, r3
 802be80:	bfb8      	it	lt
 802be82:	4618      	movlt	r0, r3
 802be84:	e7a6      	b.n	802bdd4 <_printf_i+0x164>
 802be86:	2301      	movs	r3, #1
 802be88:	4632      	mov	r2, r6
 802be8a:	4649      	mov	r1, r9
 802be8c:	4640      	mov	r0, r8
 802be8e:	47d0      	blx	sl
 802be90:	3001      	adds	r0, #1
 802be92:	d09d      	beq.n	802bdd0 <_printf_i+0x160>
 802be94:	3501      	adds	r5, #1
 802be96:	68e3      	ldr	r3, [r4, #12]
 802be98:	9903      	ldr	r1, [sp, #12]
 802be9a:	1a5b      	subs	r3, r3, r1
 802be9c:	42ab      	cmp	r3, r5
 802be9e:	dcf2      	bgt.n	802be86 <_printf_i+0x216>
 802bea0:	e7eb      	b.n	802be7a <_printf_i+0x20a>
 802bea2:	2500      	movs	r5, #0
 802bea4:	f104 0619 	add.w	r6, r4, #25
 802bea8:	e7f5      	b.n	802be96 <_printf_i+0x226>
 802beaa:	bf00      	nop
 802beac:	08030099 	.word	0x08030099
 802beb0:	080300aa 	.word	0x080300aa

0802beb4 <__sflush_r>:
 802beb4:	898a      	ldrh	r2, [r1, #12]
 802beb6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802beba:	4605      	mov	r5, r0
 802bebc:	0710      	lsls	r0, r2, #28
 802bebe:	460c      	mov	r4, r1
 802bec0:	d458      	bmi.n	802bf74 <__sflush_r+0xc0>
 802bec2:	684b      	ldr	r3, [r1, #4]
 802bec4:	2b00      	cmp	r3, #0
 802bec6:	dc05      	bgt.n	802bed4 <__sflush_r+0x20>
 802bec8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802beca:	2b00      	cmp	r3, #0
 802becc:	dc02      	bgt.n	802bed4 <__sflush_r+0x20>
 802bece:	2000      	movs	r0, #0
 802bed0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802bed4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802bed6:	2e00      	cmp	r6, #0
 802bed8:	d0f9      	beq.n	802bece <__sflush_r+0x1a>
 802beda:	2300      	movs	r3, #0
 802bedc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802bee0:	682f      	ldr	r7, [r5, #0]
 802bee2:	6a21      	ldr	r1, [r4, #32]
 802bee4:	602b      	str	r3, [r5, #0]
 802bee6:	d032      	beq.n	802bf4e <__sflush_r+0x9a>
 802bee8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802beea:	89a3      	ldrh	r3, [r4, #12]
 802beec:	075a      	lsls	r2, r3, #29
 802beee:	d505      	bpl.n	802befc <__sflush_r+0x48>
 802bef0:	6863      	ldr	r3, [r4, #4]
 802bef2:	1ac0      	subs	r0, r0, r3
 802bef4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802bef6:	b10b      	cbz	r3, 802befc <__sflush_r+0x48>
 802bef8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802befa:	1ac0      	subs	r0, r0, r3
 802befc:	2300      	movs	r3, #0
 802befe:	4602      	mov	r2, r0
 802bf00:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802bf02:	6a21      	ldr	r1, [r4, #32]
 802bf04:	4628      	mov	r0, r5
 802bf06:	47b0      	blx	r6
 802bf08:	1c43      	adds	r3, r0, #1
 802bf0a:	89a3      	ldrh	r3, [r4, #12]
 802bf0c:	d106      	bne.n	802bf1c <__sflush_r+0x68>
 802bf0e:	6829      	ldr	r1, [r5, #0]
 802bf10:	291d      	cmp	r1, #29
 802bf12:	d82b      	bhi.n	802bf6c <__sflush_r+0xb8>
 802bf14:	4a29      	ldr	r2, [pc, #164]	; (802bfbc <__sflush_r+0x108>)
 802bf16:	410a      	asrs	r2, r1
 802bf18:	07d6      	lsls	r6, r2, #31
 802bf1a:	d427      	bmi.n	802bf6c <__sflush_r+0xb8>
 802bf1c:	2200      	movs	r2, #0
 802bf1e:	6062      	str	r2, [r4, #4]
 802bf20:	04d9      	lsls	r1, r3, #19
 802bf22:	6922      	ldr	r2, [r4, #16]
 802bf24:	6022      	str	r2, [r4, #0]
 802bf26:	d504      	bpl.n	802bf32 <__sflush_r+0x7e>
 802bf28:	1c42      	adds	r2, r0, #1
 802bf2a:	d101      	bne.n	802bf30 <__sflush_r+0x7c>
 802bf2c:	682b      	ldr	r3, [r5, #0]
 802bf2e:	b903      	cbnz	r3, 802bf32 <__sflush_r+0x7e>
 802bf30:	6560      	str	r0, [r4, #84]	; 0x54
 802bf32:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802bf34:	602f      	str	r7, [r5, #0]
 802bf36:	2900      	cmp	r1, #0
 802bf38:	d0c9      	beq.n	802bece <__sflush_r+0x1a>
 802bf3a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802bf3e:	4299      	cmp	r1, r3
 802bf40:	d002      	beq.n	802bf48 <__sflush_r+0x94>
 802bf42:	4628      	mov	r0, r5
 802bf44:	f7ff fc96 	bl	802b874 <_free_r>
 802bf48:	2000      	movs	r0, #0
 802bf4a:	6360      	str	r0, [r4, #52]	; 0x34
 802bf4c:	e7c0      	b.n	802bed0 <__sflush_r+0x1c>
 802bf4e:	2301      	movs	r3, #1
 802bf50:	4628      	mov	r0, r5
 802bf52:	47b0      	blx	r6
 802bf54:	1c41      	adds	r1, r0, #1
 802bf56:	d1c8      	bne.n	802beea <__sflush_r+0x36>
 802bf58:	682b      	ldr	r3, [r5, #0]
 802bf5a:	2b00      	cmp	r3, #0
 802bf5c:	d0c5      	beq.n	802beea <__sflush_r+0x36>
 802bf5e:	2b1d      	cmp	r3, #29
 802bf60:	d001      	beq.n	802bf66 <__sflush_r+0xb2>
 802bf62:	2b16      	cmp	r3, #22
 802bf64:	d101      	bne.n	802bf6a <__sflush_r+0xb6>
 802bf66:	602f      	str	r7, [r5, #0]
 802bf68:	e7b1      	b.n	802bece <__sflush_r+0x1a>
 802bf6a:	89a3      	ldrh	r3, [r4, #12]
 802bf6c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802bf70:	81a3      	strh	r3, [r4, #12]
 802bf72:	e7ad      	b.n	802bed0 <__sflush_r+0x1c>
 802bf74:	690f      	ldr	r7, [r1, #16]
 802bf76:	2f00      	cmp	r7, #0
 802bf78:	d0a9      	beq.n	802bece <__sflush_r+0x1a>
 802bf7a:	0793      	lsls	r3, r2, #30
 802bf7c:	680e      	ldr	r6, [r1, #0]
 802bf7e:	bf08      	it	eq
 802bf80:	694b      	ldreq	r3, [r1, #20]
 802bf82:	600f      	str	r7, [r1, #0]
 802bf84:	bf18      	it	ne
 802bf86:	2300      	movne	r3, #0
 802bf88:	eba6 0807 	sub.w	r8, r6, r7
 802bf8c:	608b      	str	r3, [r1, #8]
 802bf8e:	f1b8 0f00 	cmp.w	r8, #0
 802bf92:	dd9c      	ble.n	802bece <__sflush_r+0x1a>
 802bf94:	6a21      	ldr	r1, [r4, #32]
 802bf96:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802bf98:	4643      	mov	r3, r8
 802bf9a:	463a      	mov	r2, r7
 802bf9c:	4628      	mov	r0, r5
 802bf9e:	47b0      	blx	r6
 802bfa0:	2800      	cmp	r0, #0
 802bfa2:	dc06      	bgt.n	802bfb2 <__sflush_r+0xfe>
 802bfa4:	89a3      	ldrh	r3, [r4, #12]
 802bfa6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802bfaa:	81a3      	strh	r3, [r4, #12]
 802bfac:	f04f 30ff 	mov.w	r0, #4294967295
 802bfb0:	e78e      	b.n	802bed0 <__sflush_r+0x1c>
 802bfb2:	4407      	add	r7, r0
 802bfb4:	eba8 0800 	sub.w	r8, r8, r0
 802bfb8:	e7e9      	b.n	802bf8e <__sflush_r+0xda>
 802bfba:	bf00      	nop
 802bfbc:	dfbffffe 	.word	0xdfbffffe

0802bfc0 <_fflush_r>:
 802bfc0:	b538      	push	{r3, r4, r5, lr}
 802bfc2:	690b      	ldr	r3, [r1, #16]
 802bfc4:	4605      	mov	r5, r0
 802bfc6:	460c      	mov	r4, r1
 802bfc8:	b913      	cbnz	r3, 802bfd0 <_fflush_r+0x10>
 802bfca:	2500      	movs	r5, #0
 802bfcc:	4628      	mov	r0, r5
 802bfce:	bd38      	pop	{r3, r4, r5, pc}
 802bfd0:	b118      	cbz	r0, 802bfda <_fflush_r+0x1a>
 802bfd2:	6a03      	ldr	r3, [r0, #32]
 802bfd4:	b90b      	cbnz	r3, 802bfda <_fflush_r+0x1a>
 802bfd6:	f7ff fa85 	bl	802b4e4 <__sinit>
 802bfda:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802bfde:	2b00      	cmp	r3, #0
 802bfe0:	d0f3      	beq.n	802bfca <_fflush_r+0xa>
 802bfe2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802bfe4:	07d0      	lsls	r0, r2, #31
 802bfe6:	d404      	bmi.n	802bff2 <_fflush_r+0x32>
 802bfe8:	0599      	lsls	r1, r3, #22
 802bfea:	d402      	bmi.n	802bff2 <_fflush_r+0x32>
 802bfec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802bfee:	f7ff fbd2 	bl	802b796 <__retarget_lock_acquire_recursive>
 802bff2:	4628      	mov	r0, r5
 802bff4:	4621      	mov	r1, r4
 802bff6:	f7ff ff5d 	bl	802beb4 <__sflush_r>
 802bffa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802bffc:	07da      	lsls	r2, r3, #31
 802bffe:	4605      	mov	r5, r0
 802c000:	d4e4      	bmi.n	802bfcc <_fflush_r+0xc>
 802c002:	89a3      	ldrh	r3, [r4, #12]
 802c004:	059b      	lsls	r3, r3, #22
 802c006:	d4e1      	bmi.n	802bfcc <_fflush_r+0xc>
 802c008:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c00a:	f7ff fbc5 	bl	802b798 <__retarget_lock_release_recursive>
 802c00e:	e7dd      	b.n	802bfcc <_fflush_r+0xc>

0802c010 <__swbuf_r>:
 802c010:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c012:	460e      	mov	r6, r1
 802c014:	4614      	mov	r4, r2
 802c016:	4605      	mov	r5, r0
 802c018:	b118      	cbz	r0, 802c022 <__swbuf_r+0x12>
 802c01a:	6a03      	ldr	r3, [r0, #32]
 802c01c:	b90b      	cbnz	r3, 802c022 <__swbuf_r+0x12>
 802c01e:	f7ff fa61 	bl	802b4e4 <__sinit>
 802c022:	69a3      	ldr	r3, [r4, #24]
 802c024:	60a3      	str	r3, [r4, #8]
 802c026:	89a3      	ldrh	r3, [r4, #12]
 802c028:	071a      	lsls	r2, r3, #28
 802c02a:	d525      	bpl.n	802c078 <__swbuf_r+0x68>
 802c02c:	6923      	ldr	r3, [r4, #16]
 802c02e:	b31b      	cbz	r3, 802c078 <__swbuf_r+0x68>
 802c030:	6823      	ldr	r3, [r4, #0]
 802c032:	6922      	ldr	r2, [r4, #16]
 802c034:	1a98      	subs	r0, r3, r2
 802c036:	6963      	ldr	r3, [r4, #20]
 802c038:	b2f6      	uxtb	r6, r6
 802c03a:	4283      	cmp	r3, r0
 802c03c:	4637      	mov	r7, r6
 802c03e:	dc04      	bgt.n	802c04a <__swbuf_r+0x3a>
 802c040:	4621      	mov	r1, r4
 802c042:	4628      	mov	r0, r5
 802c044:	f7ff ffbc 	bl	802bfc0 <_fflush_r>
 802c048:	b9e0      	cbnz	r0, 802c084 <__swbuf_r+0x74>
 802c04a:	68a3      	ldr	r3, [r4, #8]
 802c04c:	3b01      	subs	r3, #1
 802c04e:	60a3      	str	r3, [r4, #8]
 802c050:	6823      	ldr	r3, [r4, #0]
 802c052:	1c5a      	adds	r2, r3, #1
 802c054:	6022      	str	r2, [r4, #0]
 802c056:	701e      	strb	r6, [r3, #0]
 802c058:	6962      	ldr	r2, [r4, #20]
 802c05a:	1c43      	adds	r3, r0, #1
 802c05c:	429a      	cmp	r2, r3
 802c05e:	d004      	beq.n	802c06a <__swbuf_r+0x5a>
 802c060:	89a3      	ldrh	r3, [r4, #12]
 802c062:	07db      	lsls	r3, r3, #31
 802c064:	d506      	bpl.n	802c074 <__swbuf_r+0x64>
 802c066:	2e0a      	cmp	r6, #10
 802c068:	d104      	bne.n	802c074 <__swbuf_r+0x64>
 802c06a:	4621      	mov	r1, r4
 802c06c:	4628      	mov	r0, r5
 802c06e:	f7ff ffa7 	bl	802bfc0 <_fflush_r>
 802c072:	b938      	cbnz	r0, 802c084 <__swbuf_r+0x74>
 802c074:	4638      	mov	r0, r7
 802c076:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802c078:	4621      	mov	r1, r4
 802c07a:	4628      	mov	r0, r5
 802c07c:	f000 f806 	bl	802c08c <__swsetup_r>
 802c080:	2800      	cmp	r0, #0
 802c082:	d0d5      	beq.n	802c030 <__swbuf_r+0x20>
 802c084:	f04f 37ff 	mov.w	r7, #4294967295
 802c088:	e7f4      	b.n	802c074 <__swbuf_r+0x64>
	...

0802c08c <__swsetup_r>:
 802c08c:	b538      	push	{r3, r4, r5, lr}
 802c08e:	4b2a      	ldr	r3, [pc, #168]	; (802c138 <__swsetup_r+0xac>)
 802c090:	4605      	mov	r5, r0
 802c092:	6818      	ldr	r0, [r3, #0]
 802c094:	460c      	mov	r4, r1
 802c096:	b118      	cbz	r0, 802c0a0 <__swsetup_r+0x14>
 802c098:	6a03      	ldr	r3, [r0, #32]
 802c09a:	b90b      	cbnz	r3, 802c0a0 <__swsetup_r+0x14>
 802c09c:	f7ff fa22 	bl	802b4e4 <__sinit>
 802c0a0:	89a3      	ldrh	r3, [r4, #12]
 802c0a2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c0a6:	0718      	lsls	r0, r3, #28
 802c0a8:	d422      	bmi.n	802c0f0 <__swsetup_r+0x64>
 802c0aa:	06d9      	lsls	r1, r3, #27
 802c0ac:	d407      	bmi.n	802c0be <__swsetup_r+0x32>
 802c0ae:	2309      	movs	r3, #9
 802c0b0:	602b      	str	r3, [r5, #0]
 802c0b2:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802c0b6:	81a3      	strh	r3, [r4, #12]
 802c0b8:	f04f 30ff 	mov.w	r0, #4294967295
 802c0bc:	e034      	b.n	802c128 <__swsetup_r+0x9c>
 802c0be:	0758      	lsls	r0, r3, #29
 802c0c0:	d512      	bpl.n	802c0e8 <__swsetup_r+0x5c>
 802c0c2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c0c4:	b141      	cbz	r1, 802c0d8 <__swsetup_r+0x4c>
 802c0c6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c0ca:	4299      	cmp	r1, r3
 802c0cc:	d002      	beq.n	802c0d4 <__swsetup_r+0x48>
 802c0ce:	4628      	mov	r0, r5
 802c0d0:	f7ff fbd0 	bl	802b874 <_free_r>
 802c0d4:	2300      	movs	r3, #0
 802c0d6:	6363      	str	r3, [r4, #52]	; 0x34
 802c0d8:	89a3      	ldrh	r3, [r4, #12]
 802c0da:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802c0de:	81a3      	strh	r3, [r4, #12]
 802c0e0:	2300      	movs	r3, #0
 802c0e2:	6063      	str	r3, [r4, #4]
 802c0e4:	6923      	ldr	r3, [r4, #16]
 802c0e6:	6023      	str	r3, [r4, #0]
 802c0e8:	89a3      	ldrh	r3, [r4, #12]
 802c0ea:	f043 0308 	orr.w	r3, r3, #8
 802c0ee:	81a3      	strh	r3, [r4, #12]
 802c0f0:	6923      	ldr	r3, [r4, #16]
 802c0f2:	b94b      	cbnz	r3, 802c108 <__swsetup_r+0x7c>
 802c0f4:	89a3      	ldrh	r3, [r4, #12]
 802c0f6:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802c0fa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802c0fe:	d003      	beq.n	802c108 <__swsetup_r+0x7c>
 802c100:	4621      	mov	r1, r4
 802c102:	4628      	mov	r0, r5
 802c104:	f000 f840 	bl	802c188 <__smakebuf_r>
 802c108:	89a0      	ldrh	r0, [r4, #12]
 802c10a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c10e:	f010 0301 	ands.w	r3, r0, #1
 802c112:	d00a      	beq.n	802c12a <__swsetup_r+0x9e>
 802c114:	2300      	movs	r3, #0
 802c116:	60a3      	str	r3, [r4, #8]
 802c118:	6963      	ldr	r3, [r4, #20]
 802c11a:	425b      	negs	r3, r3
 802c11c:	61a3      	str	r3, [r4, #24]
 802c11e:	6923      	ldr	r3, [r4, #16]
 802c120:	b943      	cbnz	r3, 802c134 <__swsetup_r+0xa8>
 802c122:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802c126:	d1c4      	bne.n	802c0b2 <__swsetup_r+0x26>
 802c128:	bd38      	pop	{r3, r4, r5, pc}
 802c12a:	0781      	lsls	r1, r0, #30
 802c12c:	bf58      	it	pl
 802c12e:	6963      	ldrpl	r3, [r4, #20]
 802c130:	60a3      	str	r3, [r4, #8]
 802c132:	e7f4      	b.n	802c11e <__swsetup_r+0x92>
 802c134:	2000      	movs	r0, #0
 802c136:	e7f7      	b.n	802c128 <__swsetup_r+0x9c>
 802c138:	200000f4 	.word	0x200000f4

0802c13c <__swhatbuf_r>:
 802c13c:	b570      	push	{r4, r5, r6, lr}
 802c13e:	460c      	mov	r4, r1
 802c140:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802c144:	2900      	cmp	r1, #0
 802c146:	b096      	sub	sp, #88	; 0x58
 802c148:	4615      	mov	r5, r2
 802c14a:	461e      	mov	r6, r3
 802c14c:	da0d      	bge.n	802c16a <__swhatbuf_r+0x2e>
 802c14e:	89a3      	ldrh	r3, [r4, #12]
 802c150:	f013 0f80 	tst.w	r3, #128	; 0x80
 802c154:	f04f 0100 	mov.w	r1, #0
 802c158:	bf0c      	ite	eq
 802c15a:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802c15e:	2340      	movne	r3, #64	; 0x40
 802c160:	2000      	movs	r0, #0
 802c162:	6031      	str	r1, [r6, #0]
 802c164:	602b      	str	r3, [r5, #0]
 802c166:	b016      	add	sp, #88	; 0x58
 802c168:	bd70      	pop	{r4, r5, r6, pc}
 802c16a:	466a      	mov	r2, sp
 802c16c:	f000 f848 	bl	802c200 <_fstat_r>
 802c170:	2800      	cmp	r0, #0
 802c172:	dbec      	blt.n	802c14e <__swhatbuf_r+0x12>
 802c174:	9901      	ldr	r1, [sp, #4]
 802c176:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802c17a:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802c17e:	4259      	negs	r1, r3
 802c180:	4159      	adcs	r1, r3
 802c182:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802c186:	e7eb      	b.n	802c160 <__swhatbuf_r+0x24>

0802c188 <__smakebuf_r>:
 802c188:	898b      	ldrh	r3, [r1, #12]
 802c18a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802c18c:	079d      	lsls	r5, r3, #30
 802c18e:	4606      	mov	r6, r0
 802c190:	460c      	mov	r4, r1
 802c192:	d507      	bpl.n	802c1a4 <__smakebuf_r+0x1c>
 802c194:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802c198:	6023      	str	r3, [r4, #0]
 802c19a:	6123      	str	r3, [r4, #16]
 802c19c:	2301      	movs	r3, #1
 802c19e:	6163      	str	r3, [r4, #20]
 802c1a0:	b002      	add	sp, #8
 802c1a2:	bd70      	pop	{r4, r5, r6, pc}
 802c1a4:	ab01      	add	r3, sp, #4
 802c1a6:	466a      	mov	r2, sp
 802c1a8:	f7ff ffc8 	bl	802c13c <__swhatbuf_r>
 802c1ac:	9900      	ldr	r1, [sp, #0]
 802c1ae:	4605      	mov	r5, r0
 802c1b0:	4630      	mov	r0, r6
 802c1b2:	f7ff f871 	bl	802b298 <_malloc_r>
 802c1b6:	b948      	cbnz	r0, 802c1cc <__smakebuf_r+0x44>
 802c1b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802c1bc:	059a      	lsls	r2, r3, #22
 802c1be:	d4ef      	bmi.n	802c1a0 <__smakebuf_r+0x18>
 802c1c0:	f023 0303 	bic.w	r3, r3, #3
 802c1c4:	f043 0302 	orr.w	r3, r3, #2
 802c1c8:	81a3      	strh	r3, [r4, #12]
 802c1ca:	e7e3      	b.n	802c194 <__smakebuf_r+0xc>
 802c1cc:	89a3      	ldrh	r3, [r4, #12]
 802c1ce:	6020      	str	r0, [r4, #0]
 802c1d0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802c1d4:	81a3      	strh	r3, [r4, #12]
 802c1d6:	9b00      	ldr	r3, [sp, #0]
 802c1d8:	6163      	str	r3, [r4, #20]
 802c1da:	9b01      	ldr	r3, [sp, #4]
 802c1dc:	6120      	str	r0, [r4, #16]
 802c1de:	b15b      	cbz	r3, 802c1f8 <__smakebuf_r+0x70>
 802c1e0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802c1e4:	4630      	mov	r0, r6
 802c1e6:	f000 f81d 	bl	802c224 <_isatty_r>
 802c1ea:	b128      	cbz	r0, 802c1f8 <__smakebuf_r+0x70>
 802c1ec:	89a3      	ldrh	r3, [r4, #12]
 802c1ee:	f023 0303 	bic.w	r3, r3, #3
 802c1f2:	f043 0301 	orr.w	r3, r3, #1
 802c1f6:	81a3      	strh	r3, [r4, #12]
 802c1f8:	89a3      	ldrh	r3, [r4, #12]
 802c1fa:	431d      	orrs	r5, r3
 802c1fc:	81a5      	strh	r5, [r4, #12]
 802c1fe:	e7cf      	b.n	802c1a0 <__smakebuf_r+0x18>

0802c200 <_fstat_r>:
 802c200:	b538      	push	{r3, r4, r5, lr}
 802c202:	4d07      	ldr	r5, [pc, #28]	; (802c220 <_fstat_r+0x20>)
 802c204:	2300      	movs	r3, #0
 802c206:	4604      	mov	r4, r0
 802c208:	4608      	mov	r0, r1
 802c20a:	4611      	mov	r1, r2
 802c20c:	602b      	str	r3, [r5, #0]
 802c20e:	f7d6 fdf0 	bl	8002df2 <_fstat>
 802c212:	1c43      	adds	r3, r0, #1
 802c214:	d102      	bne.n	802c21c <_fstat_r+0x1c>
 802c216:	682b      	ldr	r3, [r5, #0]
 802c218:	b103      	cbz	r3, 802c21c <_fstat_r+0x1c>
 802c21a:	6023      	str	r3, [r4, #0]
 802c21c:	bd38      	pop	{r3, r4, r5, pc}
 802c21e:	bf00      	nop
 802c220:	20002dc0 	.word	0x20002dc0

0802c224 <_isatty_r>:
 802c224:	b538      	push	{r3, r4, r5, lr}
 802c226:	4d06      	ldr	r5, [pc, #24]	; (802c240 <_isatty_r+0x1c>)
 802c228:	2300      	movs	r3, #0
 802c22a:	4604      	mov	r4, r0
 802c22c:	4608      	mov	r0, r1
 802c22e:	602b      	str	r3, [r5, #0]
 802c230:	f7d6 fdef 	bl	8002e12 <_isatty>
 802c234:	1c43      	adds	r3, r0, #1
 802c236:	d102      	bne.n	802c23e <_isatty_r+0x1a>
 802c238:	682b      	ldr	r3, [r5, #0]
 802c23a:	b103      	cbz	r3, 802c23e <_isatty_r+0x1a>
 802c23c:	6023      	str	r3, [r4, #0]
 802c23e:	bd38      	pop	{r3, r4, r5, pc}
 802c240:	20002dc0 	.word	0x20002dc0

0802c244 <_init>:
 802c244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c246:	bf00      	nop
 802c248:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802c24a:	bc08      	pop	{r3}
 802c24c:	469e      	mov	lr, r3
 802c24e:	4770      	bx	lr

0802c250 <_fini>:
 802c250:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c252:	bf00      	nop
 802c254:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802c256:	bc08      	pop	{r3}
 802c258:	469e      	mov	lr, r3
 802c25a:	4770      	bx	lr
